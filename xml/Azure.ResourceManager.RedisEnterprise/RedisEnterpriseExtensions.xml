<Type Name="RedisEnterpriseExtensions" FullName="Azure.ResourceManager.RedisEnterprise.RedisEnterpriseExtensions">
  <TypeSignature Language="C#" Value="public static class RedisEnterpriseExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RedisEnterpriseExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.RedisEnterprise.RedisEnterpriseExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module RedisEnterpriseExtensions" />
  <TypeSignature Language="F#" Value="type RedisEnterpriseExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.RedisEnterprise</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.RedisEnterprise. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetRedisEnterpriseCluster">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterResource&gt; GetRedisEnterpriseCluster (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string clusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterResource&gt; GetRedisEnterpriseCluster(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string clusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RedisEnterprise.RedisEnterpriseExtensions.GetRedisEnterpriseCluster(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRedisEnterpriseCluster (resourceGroupResource As ResourceGroupResource, clusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RedisEnterpriseClusterResource)" />
      <MemberSignature Language="F#" Value="static member GetRedisEnterpriseCluster : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterResource&gt;" Usage="Azure.ResourceManager.RedisEnterprise.RedisEnterpriseExtensions.GetRedisEnterpriseCluster (resourceGroupResource, clusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RedisEnterprise</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="clusterName"> The name of the RedisEnterprise cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about a RedisEnterprise cluster
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}</description></item><item><term>Operation Id</term><description>RedisEnterprise_Get</description></item><item><term>Default Api Version</term><description>2024-02-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.RedisEnterprise.Mocking.MockableRedisEnterpriseResourceGroupResource.GetRedisEnterpriseCluster(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="clusterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRedisEnterpriseClusterAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterResource&gt;&gt; GetRedisEnterpriseClusterAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string clusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterResource&gt;&gt; GetRedisEnterpriseClusterAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string clusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RedisEnterprise.RedisEnterpriseExtensions.GetRedisEnterpriseClusterAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRedisEnterpriseClusterAsync (resourceGroupResource As ResourceGroupResource, clusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RedisEnterpriseClusterResource))" />
      <MemberSignature Language="F#" Value="static member GetRedisEnterpriseClusterAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterResource&gt;&gt;" Usage="Azure.ResourceManager.RedisEnterprise.RedisEnterpriseExtensions.GetRedisEnterpriseClusterAsync (resourceGroupResource, clusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RedisEnterprise</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="clusterName"> The name of the RedisEnterprise cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about a RedisEnterprise cluster
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}</description></item><item><term>Operation Id</term><description>RedisEnterprise_Get</description></item><item><term>Default Api Version</term><description>2024-02-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.RedisEnterprise.Mocking.MockableRedisEnterpriseResourceGroupResource.GetRedisEnterpriseClusterAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="clusterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRedisEnterpriseClusterResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterResource GetRedisEnterpriseClusterResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterResource GetRedisEnterpriseClusterResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RedisEnterprise.RedisEnterpriseExtensions.GetRedisEnterpriseClusterResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRedisEnterpriseClusterResource (client As ArmClient, id As ResourceIdentifier) As RedisEnterpriseClusterResource" />
      <MemberSignature Language="F#" Value="static member GetRedisEnterpriseClusterResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterResource" Usage="Azure.ResourceManager.RedisEnterprise.RedisEnterpriseExtensions.GetRedisEnterpriseClusterResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RedisEnterprise</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.RedisEnterprise.Mocking.MockableRedisEnterpriseArmClient.GetRedisEnterpriseClusterResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRedisEnterpriseClusters">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterCollection GetRedisEnterpriseClusters (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterCollection GetRedisEnterpriseClusters(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RedisEnterprise.RedisEnterpriseExtensions.GetRedisEnterpriseClusters(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRedisEnterpriseClusters (resourceGroupResource As ResourceGroupResource) As RedisEnterpriseClusterCollection" />
      <MemberSignature Language="F#" Value="static member GetRedisEnterpriseClusters : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterCollection" Usage="Azure.ResourceManager.RedisEnterprise.RedisEnterpriseExtensions.GetRedisEnterpriseClusters resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RedisEnterprise</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of RedisEnterpriseClusterResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.RedisEnterprise.Mocking.MockableRedisEnterpriseResourceGroupResource.GetRedisEnterpriseClusters" /> instead.</description></item></summary>
        <returns> An object representing collection of RedisEnterpriseClusterResources and their operations over a RedisEnterpriseClusterResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRedisEnterpriseClusters">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterResource&gt; GetRedisEnterpriseClusters (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterResource&gt; GetRedisEnterpriseClusters(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RedisEnterprise.RedisEnterpriseExtensions.GetRedisEnterpriseClusters(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRedisEnterpriseClusters (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of RedisEnterpriseClusterResource)" />
      <MemberSignature Language="F#" Value="static member GetRedisEnterpriseClusters : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterResource&gt;" Usage="Azure.ResourceManager.RedisEnterprise.RedisEnterpriseExtensions.GetRedisEnterpriseClusters (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RedisEnterprise</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all RedisEnterprise clusters in the specified subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Cache/redisEnterprise</description></item><item><term>Operation Id</term><description>RedisEnterprise_List</description></item><item><term>Default Api Version</term><description>2024-02-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.RedisEnterprise.Mocking.MockableRedisEnterpriseSubscriptionResource.GetRedisEnterpriseClusters(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRedisEnterpriseClustersAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterResource&gt; GetRedisEnterpriseClustersAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterResource&gt; GetRedisEnterpriseClustersAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RedisEnterprise.RedisEnterpriseExtensions.GetRedisEnterpriseClustersAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRedisEnterpriseClustersAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of RedisEnterpriseClusterResource)" />
      <MemberSignature Language="F#" Value="static member GetRedisEnterpriseClustersAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterResource&gt;" Usage="Azure.ResourceManager.RedisEnterprise.RedisEnterpriseExtensions.GetRedisEnterpriseClustersAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RedisEnterprise</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all RedisEnterprise clusters in the specified subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Cache/redisEnterprise</description></item><item><term>Operation Id</term><description>RedisEnterprise_List</description></item><item><term>Default Api Version</term><description>2024-02-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.RedisEnterprise.Mocking.MockableRedisEnterpriseSubscriptionResource.GetRedisEnterpriseClusters(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.RedisEnterprise.RedisEnterpriseClusterResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRedisEnterpriseDatabaseResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.RedisEnterprise.RedisEnterpriseDatabaseResource GetRedisEnterpriseDatabaseResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.RedisEnterprise.RedisEnterpriseDatabaseResource GetRedisEnterpriseDatabaseResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RedisEnterprise.RedisEnterpriseExtensions.GetRedisEnterpriseDatabaseResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRedisEnterpriseDatabaseResource (client As ArmClient, id As ResourceIdentifier) As RedisEnterpriseDatabaseResource" />
      <MemberSignature Language="F#" Value="static member GetRedisEnterpriseDatabaseResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.RedisEnterprise.RedisEnterpriseDatabaseResource" Usage="Azure.ResourceManager.RedisEnterprise.RedisEnterpriseExtensions.GetRedisEnterpriseDatabaseResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RedisEnterprise</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RedisEnterprise.RedisEnterpriseDatabaseResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.RedisEnterprise.RedisEnterpriseDatabaseResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.RedisEnterprise.RedisEnterpriseDatabaseResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.RedisEnterprise.RedisEnterpriseDatabaseResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.RedisEnterprise.Mocking.MockableRedisEnterpriseArmClient.GetRedisEnterpriseDatabaseResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.RedisEnterprise.RedisEnterpriseDatabaseResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRedisEnterpriseOperationsStatus">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseOperationStatus&gt; GetRedisEnterpriseOperationsStatus (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, string operationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseOperationStatus&gt; GetRedisEnterpriseOperationsStatus(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, string operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RedisEnterprise.RedisEnterpriseExtensions.GetRedisEnterpriseOperationsStatus(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRedisEnterpriseOperationsStatus (subscriptionResource As SubscriptionResource, location As AzureLocation, operationId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RedisEnterpriseOperationStatus)" />
      <MemberSignature Language="F#" Value="static member GetRedisEnterpriseOperationsStatus : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseOperationStatus&gt;" Usage="Azure.ResourceManager.RedisEnterprise.RedisEnterpriseExtensions.GetRedisEnterpriseOperationsStatus (subscriptionResource, location, operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RedisEnterprise</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseOperationStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The name of Azure region. </param>
        <param name="operationId"> The ID of an ongoing async operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the status of operation.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Cache/locations/{location}/operationsStatus/{operationId}</description></item><item><term>Operation Id</term><description>OperationsStatus_Get</description></item><item><term>Default Api Version</term><description>2024-02-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.RedisEnterprise.Mocking.MockableRedisEnterpriseSubscriptionResource.GetRedisEnterpriseOperationsStatus(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="operationId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="operationId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRedisEnterpriseOperationsStatusAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseOperationStatus&gt;&gt; GetRedisEnterpriseOperationsStatusAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, string operationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseOperationStatus&gt;&gt; GetRedisEnterpriseOperationsStatusAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, string operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RedisEnterprise.RedisEnterpriseExtensions.GetRedisEnterpriseOperationsStatusAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRedisEnterpriseOperationsStatusAsync (subscriptionResource As SubscriptionResource, location As AzureLocation, operationId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RedisEnterpriseOperationStatus))" />
      <MemberSignature Language="F#" Value="static member GetRedisEnterpriseOperationsStatusAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseOperationStatus&gt;&gt;" Usage="Azure.ResourceManager.RedisEnterprise.RedisEnterpriseExtensions.GetRedisEnterpriseOperationsStatusAsync (subscriptionResource, location, operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RedisEnterprise</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RedisEnterprise.Models.RedisEnterpriseOperationStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The name of Azure region. </param>
        <param name="operationId"> The ID of an ongoing async operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the status of operation.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Cache/locations/{location}/operationsStatus/{operationId}</description></item><item><term>Operation Id</term><description>OperationsStatus_Get</description></item><item><term>Default Api Version</term><description>2024-02-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.RedisEnterprise.Mocking.MockableRedisEnterpriseSubscriptionResource.GetRedisEnterpriseOperationsStatus(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="operationId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="operationId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRedisEnterprisePrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.RedisEnterprise.RedisEnterprisePrivateEndpointConnectionResource GetRedisEnterprisePrivateEndpointConnectionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.RedisEnterprise.RedisEnterprisePrivateEndpointConnectionResource GetRedisEnterprisePrivateEndpointConnectionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RedisEnterprise.RedisEnterpriseExtensions.GetRedisEnterprisePrivateEndpointConnectionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRedisEnterprisePrivateEndpointConnectionResource (client As ArmClient, id As ResourceIdentifier) As RedisEnterprisePrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="static member GetRedisEnterprisePrivateEndpointConnectionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.RedisEnterprise.RedisEnterprisePrivateEndpointConnectionResource" Usage="Azure.ResourceManager.RedisEnterprise.RedisEnterpriseExtensions.GetRedisEnterprisePrivateEndpointConnectionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RedisEnterprise</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RedisEnterprise.RedisEnterprisePrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.RedisEnterprise.RedisEnterprisePrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.RedisEnterprise.RedisEnterprisePrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.RedisEnterprise.RedisEnterprisePrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.RedisEnterprise.Mocking.MockableRedisEnterpriseArmClient.GetRedisEnterprisePrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.RedisEnterprise.RedisEnterprisePrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
