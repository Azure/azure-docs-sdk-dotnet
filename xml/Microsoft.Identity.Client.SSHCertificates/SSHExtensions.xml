<Type Name="SSHExtensions" FullName="Microsoft.Identity.Client.SSHCertificates.SSHExtensions">
  <TypeSignature Language="C#" Value="public static class SSHExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SSHExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Identity.Client.SSHCertificates.SSHExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module SSHExtensions" />
  <TypeSignature Language="F#" Value="type SSHExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Identity.Client</AssemblyName>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.1.0</AssemblyVersion>
    <AssemblyVersion>4.8.0.0</AssemblyVersion>
    <AssemblyVersion>4.8.1.0</AssemblyVersion>
    <AssemblyVersion>4.8.2.0</AssemblyVersion>
    <AssemblyVersion>4.9.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.11.0.0</AssemblyVersion>
    <AssemblyVersion>4.12.0.0</AssemblyVersion>
    <AssemblyVersion>4.13.0.0</AssemblyVersion>
    <AssemblyVersion>4.14.0.0</AssemblyVersion>
    <AssemblyVersion>4.15.0.0</AssemblyVersion>
    <AssemblyVersion>4.16.0.0</AssemblyVersion>
    <AssemblyVersion>4.16.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extensions that add support for SSH certificates
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="WithSSHCertificateAuthenticationScheme">
      <MemberSignature Language="C#" Value="public static Microsoft.Identity.Client.AcquireTokenInteractiveParameterBuilder WithSSHCertificateAuthenticationScheme (this Microsoft.Identity.Client.AcquireTokenInteractiveParameterBuilder builder, string publicKeyJwk, string keyId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Identity.Client.AcquireTokenInteractiveParameterBuilder WithSSHCertificateAuthenticationScheme(class Microsoft.Identity.Client.AcquireTokenInteractiveParameterBuilder builder, string publicKeyJwk, string keyId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.SSHCertificates.SSHExtensions.WithSSHCertificateAuthenticationScheme(Microsoft.Identity.Client.AcquireTokenInteractiveParameterBuilder,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithSSHCertificateAuthenticationScheme (builder As AcquireTokenInteractiveParameterBuilder, publicKeyJwk As String, keyId As String) As AcquireTokenInteractiveParameterBuilder" />
      <MemberSignature Language="F#" Value="static member WithSSHCertificateAuthenticationScheme : Microsoft.Identity.Client.AcquireTokenInteractiveParameterBuilder * string * string -&gt; Microsoft.Identity.Client.AcquireTokenInteractiveParameterBuilder" Usage="Microsoft.Identity.Client.SSHCertificates.SSHExtensions.WithSSHCertificateAuthenticationScheme (builder, publicKeyJwk, keyId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.AcquireTokenInteractiveParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Identity.Client.AcquireTokenInteractiveParameterBuilder" RefType="this" />
        <Parameter Name="publicKeyJwk" Type="System.String" />
        <Parameter Name="keyId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder">Interactive authentication builder</param>
        <param name="publicKeyJwk">The public SSH key in JWK format (https://tools.ietf.org/html/rfc7517). 
            Currently only RSA is supported, and the JWK should contain only the RSA modulus and exponent</param>
        <param name="keyId">A key identifier, it can be in any format. Used to distinguish between 
            different keys when fetching an SSH certificate from the token cache.</param>
        <summary>
            Instructs AAD to return an SSH certificate instead of a Bearer token. The SSH certificate 
            (not the same as public / private key pair used by SSH), can be used to securely deploy 
            a public SSH key to a machine. See https://aka.ms/msal-net-ssh for details.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithSSHCertificateAuthenticationScheme">
      <MemberSignature Language="C#" Value="public static Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder WithSSHCertificateAuthenticationScheme (this Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder builder, string publicKeyJwk, string keyId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder WithSSHCertificateAuthenticationScheme(class Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder builder, string publicKeyJwk, string keyId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Client.SSHCertificates.SSHExtensions.WithSSHCertificateAuthenticationScheme(Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithSSHCertificateAuthenticationScheme (builder As AcquireTokenSilentParameterBuilder, publicKeyJwk As String, keyId As String) As AcquireTokenSilentParameterBuilder" />
      <MemberSignature Language="F#" Value="static member WithSSHCertificateAuthenticationScheme : Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder * string * string -&gt; Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder" Usage="Microsoft.Identity.Client.SSHCertificates.SSHExtensions.WithSSHCertificateAuthenticationScheme (builder, publicKeyJwk, keyId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Client</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.1.0</AssemblyVersion>
        <AssemblyVersion>4.8.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
        <AssemblyVersion>4.13.0.0</AssemblyVersion>
        <AssemblyVersion>4.14.0.0</AssemblyVersion>
        <AssemblyVersion>4.15.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.0.0</AssemblyVersion>
        <AssemblyVersion>4.16.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Identity.Client.AcquireTokenSilentParameterBuilder" RefType="this" />
        <Parameter Name="publicKeyJwk" Type="System.String" />
        <Parameter Name="keyId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder">Silent authentication builder</param>
        <param name="publicKeyJwk">The public SSH key in JWK format (https://tools.ietf.org/html/rfc7517). 
            Currently only RSA is supported, and the JWK should contain only the RSA modulus and exponent</param>
        <param name="keyId" />
        <summary>
            Instructs AAD to return an SSH certificate instead of a Bearer token. Attempts to retrive
            the certificate from the token cache, and if one is not found, attempts to acquire one silently, 
            using the refresh token. See https://aka.ms/msal-net-ssh for details.
            </summary>
        <returns />
        <remarks>
            The same keyID must be used to distinguish between various 
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
