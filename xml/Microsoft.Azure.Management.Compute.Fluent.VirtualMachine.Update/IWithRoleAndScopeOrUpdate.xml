<Type Name="IWithRoleAndScopeOrUpdate" FullName="Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IWithRoleAndScopeOrUpdate">
  <TypeSignature Language="C#" Value="public interface IWithRoleAndScopeOrUpdate : Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IUpdate, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta, Microsoft.Azure.Management.ResourceManager.Fluent.Core.Resource.Update.IUpdateWithTags&lt;Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IUpdate&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IAppliable&lt;Microsoft.Azure.Management.Compute.Fluent.IVirtualMachine&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWithRoleAndScopeOrUpdate implements class Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IUpdate, class Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IWithBootDiagnostics, class Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IWithExtension, class Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IWithManagedDataDisk, class Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IWithManagedServiceIdentity, class Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IWithSecondaryNetworkInterface, class Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IWithUnmanagedDataDisk, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.Resource.Update.IUpdateWithTags`1&lt;class Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IUpdate&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IAppliable`1&lt;class Microsoft.Azure.Management.Compute.Fluent.IVirtualMachine&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IIndexable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IWithRoleAndScopeOrUpdate" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWithRoleAndScopeOrUpdate&#xA;Implements IAppliable(Of IVirtualMachine), IBeta, IUpdate, IUpdateWithTags(Of IUpdate)" />
  <TypeSignature Language="F#" Value="type IWithRoleAndScopeOrUpdate = interface&#xA;    interface IBeta&#xA;    interface IUpdate&#xA;    interface IAppliable&lt;IVirtualMachine&gt;&#xA;    interface IIndexable&#xA;    interface IUpdateWithTags&lt;IUpdate&gt;&#xA;    interface IWithUnmanagedDataDisk&#xA;    interface IWithManagedDataDisk&#xA;    interface IWithSecondaryNetworkInterface&#xA;    interface IWithExtension&#xA;    interface IWithBootDiagnostics&#xA;    interface IWithManagedServiceIdentity" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWithRoleAndScopeOrUpdate : Microsoft::Azure::Management::Compute::Fluent::VirtualMachine::Update::IUpdate, Microsoft::Azure::Management::ResourceManager::Fluent::Core::IBeta, Microsoft::Azure::Management::ResourceManager::Fluent::Core::Resource::Update::IUpdateWithTags&lt;Microsoft::Azure::Management::Compute::Fluent::VirtualMachine::Update::IUpdate ^&gt;, Microsoft::Azure::Management::ResourceManager::Fluent::Core::ResourceActions::IAppliable&lt;Microsoft::Azure::Management::Compute::Fluent::IVirtualMachine ^&gt;" />
  <TypeSignature Language="C++ CX" Value="public interface class IWithRoleAndScopeOrUpdate : Microsoft::Azure::Management::Compute::Fluent::VirtualMachine::Update::IUpdate, Microsoft::Azure::Management::ResourceManager::Fluent::Core::IBeta, Microsoft::Azure::Management::ResourceManager::Fluent::Core::Resource::Update::IUpdateWithTags&lt;Microsoft::Azure::Management::Compute::Fluent::VirtualMachine::Update::IUpdate ^&gt;, Microsoft::Azure::Management::ResourceManager::Fluent::Core::ResourceActions::IAppliable&lt;Microsoft::Azure::Management::Compute::Fluent::IVirtualMachine ^&gt;" />
  <TypeSignature Language="C++ WINRT" Value="__interface IWithRoleAndScopeOrUpdate : Microsoft::Azure::Management::Compute::Fluent::VirtualMachine::Update::IUpdate, Microsoft::Azure::Management::ResourceManager::Fluent::Core::IBeta, Microsoft::Azure::Management::ResourceManager::Fluent::Core::Resource::Update::IUpdateWithTags&lt;Microsoft::Azure::Management::Compute::Fluent::VirtualMachine::Update::IUpdate&gt;, Microsoft::Azure::Management::ResourceManager::Fluent::Core::ResourceActions::IAppliable&lt;Microsoft::Azure::Management::Compute::Fluent::IVirtualMachine&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IUpdate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.Resource.Update.IUpdateWithTags&lt;Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IUpdate&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.IAppliable&lt;Microsoft.Azure.Management.Compute.Fluent.IVirtualMachine&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="WithRoleBasedAccessTo">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IWithRoleAndScopeOrUpdate WithRoleBasedAccessTo (string scope, Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole asRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IWithRoleAndScopeOrUpdate WithRoleBasedAccessTo(string scope, class Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole asRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IWithRoleAndScopeOrUpdate.WithRoleBasedAccessTo(System.String,Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithRoleBasedAccessTo (scope As String, asRole As BuiltInRole) As IWithRoleAndScopeOrUpdate" />
      <MemberSignature Language="F#" Value="abstract member WithRoleBasedAccessTo : string * Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole -&gt; Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IWithRoleAndScopeOrUpdate" Usage="iWithRoleAndScopeOrUpdate.WithRoleBasedAccessTo (scope, asRole)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Azure::Management::Compute::Fluent::VirtualMachine::Update::IWithRoleAndScopeOrUpdate ^ WithRoleBasedAccessTo(System::String ^ scope, Microsoft::Azure::Management::Graph::RBAC::Fluent::BuiltInRole ^ asRole);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::Azure::Management::Compute::Fluent::VirtualMachine::Update::IWithRoleAndScopeOrUpdate WithRoleBasedAccessTo(std::wstring const &amp; scope, Microsoft::Azure::Management::Graph::RBAC::Fluent::BuiltInRole const &amp; asRole);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IWithRoleAndScopeOrUpdate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="asRole" Type="Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole" />
      </Parameters>
      <Docs>
        <param name="scope">To be added.</param>
        <param name="asRole">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithRoleBasedAccessToCurrentResourceGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IWithRoleAndScopeOrUpdate WithRoleBasedAccessToCurrentResourceGroup (Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole asRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IWithRoleAndScopeOrUpdate WithRoleBasedAccessToCurrentResourceGroup(class Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole asRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IWithRoleAndScopeOrUpdate.WithRoleBasedAccessToCurrentResourceGroup(Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithRoleBasedAccessToCurrentResourceGroup (asRole As BuiltInRole) As IWithRoleAndScopeOrUpdate" />
      <MemberSignature Language="F#" Value="abstract member WithRoleBasedAccessToCurrentResourceGroup : Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole -&gt; Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IWithRoleAndScopeOrUpdate" Usage="iWithRoleAndScopeOrUpdate.WithRoleBasedAccessToCurrentResourceGroup asRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Azure::Management::Compute::Fluent::VirtualMachine::Update::IWithRoleAndScopeOrUpdate ^ WithRoleBasedAccessToCurrentResourceGroup(Microsoft::Azure::Management::Graph::RBAC::Fluent::BuiltInRole ^ asRole);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::Azure::Management::Compute::Fluent::VirtualMachine::Update::IWithRoleAndScopeOrUpdate WithRoleBasedAccessToCurrentResourceGroup(Microsoft::Azure::Management::Graph::RBAC::Fluent::BuiltInRole const &amp; asRole);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IWithRoleAndScopeOrUpdate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asRole" Type="Microsoft.Azure.Management.Graph.RBAC.Fluent.BuiltInRole" />
      </Parameters>
      <Docs>
        <param name="asRole">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithRoleDefinitionBasedAccessTo">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IWithRoleAndScopeOrUpdate WithRoleDefinitionBasedAccessTo (string scope, string roleDefinitionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IWithRoleAndScopeOrUpdate WithRoleDefinitionBasedAccessTo(string scope, string roleDefinitionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IWithRoleAndScopeOrUpdate.WithRoleDefinitionBasedAccessTo(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithRoleDefinitionBasedAccessTo (scope As String, roleDefinitionId As String) As IWithRoleAndScopeOrUpdate" />
      <MemberSignature Language="F#" Value="abstract member WithRoleDefinitionBasedAccessTo : string * string -&gt; Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IWithRoleAndScopeOrUpdate" Usage="iWithRoleAndScopeOrUpdate.WithRoleDefinitionBasedAccessTo (scope, roleDefinitionId)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Azure::Management::Compute::Fluent::VirtualMachine::Update::IWithRoleAndScopeOrUpdate ^ WithRoleDefinitionBasedAccessTo(System::String ^ scope, System::String ^ roleDefinitionId);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::Azure::Management::Compute::Fluent::VirtualMachine::Update::IWithRoleAndScopeOrUpdate ^ WithRoleDefinitionBasedAccessTo(Platform::String ^ scope, Platform::String ^ roleDefinitionId);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::Azure::Management::Compute::Fluent::VirtualMachine::Update::IWithRoleAndScopeOrUpdate WithRoleDefinitionBasedAccessTo(std::wstring const &amp; scope, std::wstring const &amp; roleDefinitionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IWithRoleAndScopeOrUpdate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="roleDefinitionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope">To be added.</param>
        <param name="roleDefinitionId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithRoleDefinitionBasedAccessToCurrentResourceGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IWithRoleAndScopeOrUpdate WithRoleDefinitionBasedAccessToCurrentResourceGroup (string roleDefinitionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IWithRoleAndScopeOrUpdate WithRoleDefinitionBasedAccessToCurrentResourceGroup(string roleDefinitionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IWithRoleAndScopeOrUpdate.WithRoleDefinitionBasedAccessToCurrentResourceGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithRoleDefinitionBasedAccessToCurrentResourceGroup (roleDefinitionId As String) As IWithRoleAndScopeOrUpdate" />
      <MemberSignature Language="F#" Value="abstract member WithRoleDefinitionBasedAccessToCurrentResourceGroup : string -&gt; Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IWithRoleAndScopeOrUpdate" Usage="iWithRoleAndScopeOrUpdate.WithRoleDefinitionBasedAccessToCurrentResourceGroup roleDefinitionId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Azure::Management::Compute::Fluent::VirtualMachine::Update::IWithRoleAndScopeOrUpdate ^ WithRoleDefinitionBasedAccessToCurrentResourceGroup(System::String ^ roleDefinitionId);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::Azure::Management::Compute::Fluent::VirtualMachine::Update::IWithRoleAndScopeOrUpdate ^ WithRoleDefinitionBasedAccessToCurrentResourceGroup(Platform::String ^ roleDefinitionId);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::Azure::Management::Compute::Fluent::VirtualMachine::Update::IWithRoleAndScopeOrUpdate WithRoleDefinitionBasedAccessToCurrentResourceGroup(std::wstring const &amp; roleDefinitionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Compute.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Compute.Fluent.VirtualMachine.Update.IWithRoleAndScopeOrUpdate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleDefinitionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleDefinitionId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>