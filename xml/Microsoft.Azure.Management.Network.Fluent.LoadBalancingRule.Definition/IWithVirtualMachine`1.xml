<Type Name="IWithVirtualMachine&lt;ReturnT&gt;" FullName="Microsoft.Azure.Management.Network.Fluent.LoadBalancingRule.Definition.IWithVirtualMachine&lt;ReturnT&gt;">
  <TypeSignature Language="C#" Value="public interface IWithVirtualMachine&lt;ReturnT&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWithVirtualMachine`1&lt;ReturnT&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Network.Fluent.LoadBalancingRule.Definition.IWithVirtualMachine`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWithVirtualMachine(Of ReturnT)" />
  <TypeSignature Language="F#" Value="type IWithVirtualMachine&lt;'ReturnT&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="ReturnT" />
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="ReturnT">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ToExistingVirtualMachines">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Network.Fluent.LoadBalancingRule.Definition.IWithBackendPort&lt;ReturnT&gt; ToExistingVirtualMachines (params Microsoft.Azure.Management.Network.Fluent.IHasNetworkInterfaces[] vms);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Network.Fluent.LoadBalancingRule.Definition.IWithBackendPort`1&lt;!ReturnT&gt; ToExistingVirtualMachines(class Microsoft.Azure.Management.Network.Fluent.IHasNetworkInterfaces[] vms) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.Fluent.LoadBalancingRule.Definition.IWithVirtualMachine`1.ToExistingVirtualMachines(Microsoft.Azure.Management.Network.Fluent.IHasNetworkInterfaces[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ToExistingVirtualMachines (ParamArray vms As IHasNetworkInterfaces()) As IWithBackendPort(Of ReturnT)" />
      <MemberSignature Language="F#" Value="abstract member ToExistingVirtualMachines : Microsoft.Azure.Management.Network.Fluent.IHasNetworkInterfaces[] -&gt; Microsoft.Azure.Management.Network.Fluent.LoadBalancingRule.Definition.IWithBackendPort&lt;'ReturnT&gt;" Usage="iWithVirtualMachine.ToExistingVirtualMachines vms" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Network.Fluent.LoadBalancingRule.Definition.IWithBackendPort&lt;ReturnT&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vms" Type="Microsoft.Azure.Management.Network.Fluent.IHasNetworkInterfaces[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="vms">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToExistingVirtualMachines">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Network.Fluent.LoadBalancingRule.Definition.IWithBackendPort&lt;ReturnT&gt; ToExistingVirtualMachines (System.Collections.Generic.ICollection&lt;Microsoft.Azure.Management.Network.Fluent.IHasNetworkInterfaces&gt; vms);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Network.Fluent.LoadBalancingRule.Definition.IWithBackendPort`1&lt;!ReturnT&gt; ToExistingVirtualMachines(class System.Collections.Generic.ICollection`1&lt;class Microsoft.Azure.Management.Network.Fluent.IHasNetworkInterfaces&gt; vms) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.Fluent.LoadBalancingRule.Definition.IWithVirtualMachine`1.ToExistingVirtualMachines(System.Collections.Generic.ICollection{Microsoft.Azure.Management.Network.Fluent.IHasNetworkInterfaces})" />
      <MemberSignature Language="VB.NET" Value="Public Function ToExistingVirtualMachines (vms As ICollection(Of IHasNetworkInterfaces)) As IWithBackendPort(Of ReturnT)" />
      <MemberSignature Language="F#" Value="abstract member ToExistingVirtualMachines : System.Collections.Generic.ICollection&lt;Microsoft.Azure.Management.Network.Fluent.IHasNetworkInterfaces&gt; -&gt; Microsoft.Azure.Management.Network.Fluent.LoadBalancingRule.Definition.IWithBackendPort&lt;'ReturnT&gt;" Usage="iWithVirtualMachine.ToExistingVirtualMachines vms" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Network.Fluent.LoadBalancingRule.Definition.IWithBackendPort&lt;ReturnT&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vms" Type="System.Collections.Generic.ICollection&lt;Microsoft.Azure.Management.Network.Fluent.IHasNetworkInterfaces&gt;" />
      </Parameters>
      <Docs>
        <param name="vms">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>