<Type Name="MockableProviderHubArmClient" FullName="Azure.ResourceManager.ProviderHub.Mocking.MockableProviderHubArmClient">
  <TypeSignature Language="C#" Value="public class MockableProviderHubArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableProviderHubArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ProviderHub.Mocking.MockableProviderHubArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableProviderHubArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableProviderHubArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableProviderHubArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ProviderHub.Mocking.MockableProviderHubArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ProviderHub.Mocking.MockableProviderHubArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomRolloutResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ProviderHub.CustomRolloutResource GetCustomRolloutResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ProviderHub.CustomRolloutResource GetCustomRolloutResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ProviderHub.Mocking.MockableProviderHubArmClient.GetCustomRolloutResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomRolloutResource (id As ResourceIdentifier) As CustomRolloutResource" />
      <MemberSignature Language="F#" Value="abstract member GetCustomRolloutResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ProviderHub.CustomRolloutResource&#xA;override this.GetCustomRolloutResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ProviderHub.CustomRolloutResource" Usage="mockableProviderHubArmClient.GetCustomRolloutResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ProviderHub.CustomRolloutResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ProviderHub.CustomRolloutResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ProviderHub.CustomRolloutResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ProviderHub.CustomRolloutResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ProviderHub.CustomRolloutResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultRolloutResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ProviderHub.DefaultRolloutResource GetDefaultRolloutResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ProviderHub.DefaultRolloutResource GetDefaultRolloutResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ProviderHub.Mocking.MockableProviderHubArmClient.GetDefaultRolloutResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDefaultRolloutResource (id As ResourceIdentifier) As DefaultRolloutResource" />
      <MemberSignature Language="F#" Value="abstract member GetDefaultRolloutResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ProviderHub.DefaultRolloutResource&#xA;override this.GetDefaultRolloutResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ProviderHub.DefaultRolloutResource" Usage="mockableProviderHubArmClient.GetDefaultRolloutResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ProviderHub.DefaultRolloutResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ProviderHub.DefaultRolloutResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ProviderHub.DefaultRolloutResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ProviderHub.DefaultRolloutResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ProviderHub.DefaultRolloutResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNestedResourceTypeFirstSkuResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ProviderHub.NestedResourceTypeFirstSkuResource GetNestedResourceTypeFirstSkuResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ProviderHub.NestedResourceTypeFirstSkuResource GetNestedResourceTypeFirstSkuResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ProviderHub.Mocking.MockableProviderHubArmClient.GetNestedResourceTypeFirstSkuResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNestedResourceTypeFirstSkuResource (id As ResourceIdentifier) As NestedResourceTypeFirstSkuResource" />
      <MemberSignature Language="F#" Value="abstract member GetNestedResourceTypeFirstSkuResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ProviderHub.NestedResourceTypeFirstSkuResource&#xA;override this.GetNestedResourceTypeFirstSkuResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ProviderHub.NestedResourceTypeFirstSkuResource" Usage="mockableProviderHubArmClient.GetNestedResourceTypeFirstSkuResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ProviderHub.NestedResourceTypeFirstSkuResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ProviderHub.NestedResourceTypeFirstSkuResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ProviderHub.NestedResourceTypeFirstSkuResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ProviderHub.NestedResourceTypeFirstSkuResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ProviderHub.NestedResourceTypeFirstSkuResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNestedResourceTypeSecondSkuResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ProviderHub.NestedResourceTypeSecondSkuResource GetNestedResourceTypeSecondSkuResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ProviderHub.NestedResourceTypeSecondSkuResource GetNestedResourceTypeSecondSkuResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ProviderHub.Mocking.MockableProviderHubArmClient.GetNestedResourceTypeSecondSkuResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNestedResourceTypeSecondSkuResource (id As ResourceIdentifier) As NestedResourceTypeSecondSkuResource" />
      <MemberSignature Language="F#" Value="abstract member GetNestedResourceTypeSecondSkuResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ProviderHub.NestedResourceTypeSecondSkuResource&#xA;override this.GetNestedResourceTypeSecondSkuResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ProviderHub.NestedResourceTypeSecondSkuResource" Usage="mockableProviderHubArmClient.GetNestedResourceTypeSecondSkuResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ProviderHub.NestedResourceTypeSecondSkuResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ProviderHub.NestedResourceTypeSecondSkuResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ProviderHub.NestedResourceTypeSecondSkuResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ProviderHub.NestedResourceTypeSecondSkuResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ProviderHub.NestedResourceTypeSecondSkuResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNestedResourceTypeThirdSkuResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ProviderHub.NestedResourceTypeThirdSkuResource GetNestedResourceTypeThirdSkuResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ProviderHub.NestedResourceTypeThirdSkuResource GetNestedResourceTypeThirdSkuResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ProviderHub.Mocking.MockableProviderHubArmClient.GetNestedResourceTypeThirdSkuResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNestedResourceTypeThirdSkuResource (id As ResourceIdentifier) As NestedResourceTypeThirdSkuResource" />
      <MemberSignature Language="F#" Value="abstract member GetNestedResourceTypeThirdSkuResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ProviderHub.NestedResourceTypeThirdSkuResource&#xA;override this.GetNestedResourceTypeThirdSkuResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ProviderHub.NestedResourceTypeThirdSkuResource" Usage="mockableProviderHubArmClient.GetNestedResourceTypeThirdSkuResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ProviderHub.NestedResourceTypeThirdSkuResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ProviderHub.NestedResourceTypeThirdSkuResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ProviderHub.NestedResourceTypeThirdSkuResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ProviderHub.NestedResourceTypeThirdSkuResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ProviderHub.NestedResourceTypeThirdSkuResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationRegistrationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ProviderHub.NotificationRegistrationResource GetNotificationRegistrationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ProviderHub.NotificationRegistrationResource GetNotificationRegistrationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ProviderHub.Mocking.MockableProviderHubArmClient.GetNotificationRegistrationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNotificationRegistrationResource (id As ResourceIdentifier) As NotificationRegistrationResource" />
      <MemberSignature Language="F#" Value="abstract member GetNotificationRegistrationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ProviderHub.NotificationRegistrationResource&#xA;override this.GetNotificationRegistrationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ProviderHub.NotificationRegistrationResource" Usage="mockableProviderHubArmClient.GetNotificationRegistrationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ProviderHub.NotificationRegistrationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ProviderHub.NotificationRegistrationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ProviderHub.NotificationRegistrationResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ProviderHub.NotificationRegistrationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ProviderHub.NotificationRegistrationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderRegistrationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ProviderHub.ProviderRegistrationResource GetProviderRegistrationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ProviderHub.ProviderRegistrationResource GetProviderRegistrationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ProviderHub.Mocking.MockableProviderHubArmClient.GetProviderRegistrationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProviderRegistrationResource (id As ResourceIdentifier) As ProviderRegistrationResource" />
      <MemberSignature Language="F#" Value="abstract member GetProviderRegistrationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ProviderHub.ProviderRegistrationResource&#xA;override this.GetProviderRegistrationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ProviderHub.ProviderRegistrationResource" Usage="mockableProviderHubArmClient.GetProviderRegistrationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ProviderHub.ProviderRegistrationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ProviderHub.ProviderRegistrationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ProviderHub.ProviderRegistrationResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ProviderHub.ProviderRegistrationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ProviderHub.ProviderRegistrationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceTypeRegistrationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource GetResourceTypeRegistrationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource GetResourceTypeRegistrationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ProviderHub.Mocking.MockableProviderHubArmClient.GetResourceTypeRegistrationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceTypeRegistrationResource (id As ResourceIdentifier) As ResourceTypeRegistrationResource" />
      <MemberSignature Language="F#" Value="abstract member GetResourceTypeRegistrationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource&#xA;override this.GetResourceTypeRegistrationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource" Usage="mockableProviderHubArmClient.GetResourceTypeRegistrationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceTypeSkuResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ProviderHub.ResourceTypeSkuResource GetResourceTypeSkuResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ProviderHub.ResourceTypeSkuResource GetResourceTypeSkuResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ProviderHub.Mocking.MockableProviderHubArmClient.GetResourceTypeSkuResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceTypeSkuResource (id As ResourceIdentifier) As ResourceTypeSkuResource" />
      <MemberSignature Language="F#" Value="abstract member GetResourceTypeSkuResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ProviderHub.ResourceTypeSkuResource&#xA;override this.GetResourceTypeSkuResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ProviderHub.ResourceTypeSkuResource" Usage="mockableProviderHubArmClient.GetResourceTypeSkuResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ProviderHub.ResourceTypeSkuResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ProviderHub.ResourceTypeSkuResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ProviderHub.ResourceTypeSkuResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ProviderHub.ResourceTypeSkuResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ProviderHub.ResourceTypeSkuResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
