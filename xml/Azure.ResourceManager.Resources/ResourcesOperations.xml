<Type Name="ResourcesOperations" FullName="Azure.ResourceManager.Resources.ResourcesOperations">
  <TypeSignature Language="C#" Value="public class ResourcesOperations" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResourcesOperations extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Resources.ResourcesOperations" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourcesOperations" />
  <TypeSignature Language="F#" Value="type ResourcesOperations = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The Resources service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ResourcesOperations ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourcesOperations.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of ResourcesOperations for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckExistence">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CheckExistence (string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string apiVersion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CheckExistence(string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string apiVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourcesOperations.CheckExistence(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckExistence (resourceGroupName As String, resourceProviderNamespace As String, parentResourcePath As String, resourceType As String, resourceName As String, apiVersion As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CheckExistence : string * string * string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.CheckExistence : string * string * string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="resourcesOperations.CheckExistence (resourceGroupName, resourceProviderNamespace, parentResourcePath, resourceType, resourceName, apiVersion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="resourceProviderNamespace" Type="System.String" />
        <Parameter Name="parentResourcePath" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="apiVersion" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group containing the resource to check. The name is case insensitive. </param>
        <param name="resourceProviderNamespace"> The resource provider of the resource to check. </param>
        <param name="parentResourcePath"> The parent resource identity. </param>
        <param name="resourceType"> The resource type. </param>
        <param name="resourceName"> The name of the resource to check whether it exists. </param>
        <param name="apiVersion"> The API version to use for the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Checks whether a resource exists. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckExistenceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CheckExistenceAsync (string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string apiVersion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CheckExistenceAsync(string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string apiVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourcesOperations.CheckExistenceAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckExistenceAsync (resourceGroupName As String, resourceProviderNamespace As String, parentResourcePath As String, resourceType As String, resourceName As String, apiVersion As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CheckExistenceAsync : string * string * string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CheckExistenceAsync : string * string * string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="resourcesOperations.CheckExistenceAsync (resourceGroupName, resourceProviderNamespace, parentResourcePath, resourceType, resourceName, apiVersion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="resourceProviderNamespace" Type="System.String" />
        <Parameter Name="parentResourcePath" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="apiVersion" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group containing the resource to check. The name is case insensitive. </param>
        <param name="resourceProviderNamespace"> The resource provider of the resource to check. </param>
        <param name="parentResourcePath"> The parent resource identity. </param>
        <param name="resourceType"> The resource type. </param>
        <param name="resourceName"> The name of the resource to check whether it exists. </param>
        <param name="apiVersion"> The API version to use for the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Checks whether a resource exists. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckExistenceById">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CheckExistenceById (string resourceId, string apiVersion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CheckExistenceById(string resourceId, string apiVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourcesOperations.CheckExistenceById(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckExistenceById (resourceId As String, apiVersion As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CheckExistenceById : string * string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.CheckExistenceById : string * string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="resourcesOperations.CheckExistenceById (resourceId, apiVersion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceId" Type="System.String" />
        <Parameter Name="apiVersion" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceId"> The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}. </param>
        <param name="apiVersion"> The API version to use for the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Checks by ID whether a resource exists. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckExistenceByIdAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CheckExistenceByIdAsync (string resourceId, string apiVersion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CheckExistenceByIdAsync(string resourceId, string apiVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourcesOperations.CheckExistenceByIdAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckExistenceByIdAsync (resourceId As String, apiVersion As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CheckExistenceByIdAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CheckExistenceByIdAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="resourcesOperations.CheckExistenceByIdAsync (resourceId, apiVersion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceId" Type="System.String" />
        <Parameter Name="apiVersion" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceId"> The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}. </param>
        <param name="apiVersion"> The API version to use for the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Checks by ID whether a resource exists. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.Models.GenericResource&gt; Get (string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string apiVersion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Models.GenericResource&gt; Get(string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string apiVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourcesOperations.Get(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (resourceGroupName As String, resourceProviderNamespace As String, parentResourcePath As String, resourceType As String, resourceName As String, apiVersion As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of GenericResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * string * string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Models.GenericResource&gt;&#xA;override this.Get : string * string * string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Models.GenericResource&gt;" Usage="resourcesOperations.Get (resourceGroupName, resourceProviderNamespace, parentResourcePath, resourceType, resourceName, apiVersion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.Models.GenericResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="resourceProviderNamespace" Type="System.String" />
        <Parameter Name="parentResourcePath" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="apiVersion" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group containing the resource to get. The name is case insensitive. </param>
        <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
        <param name="parentResourcePath"> The parent resource identity. </param>
        <param name="resourceType"> The resource type of the resource. </param>
        <param name="resourceName"> The name of the resource to get. </param>
        <param name="apiVersion"> The API version to use for the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a resource. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.GenericResource&gt;&gt; GetAsync (string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string apiVersion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Models.GenericResource&gt;&gt; GetAsync(string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string apiVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourcesOperations.GetAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (resourceGroupName As String, resourceProviderNamespace As String, parentResourcePath As String, resourceType As String, resourceName As String, apiVersion As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of GenericResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * string * string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.GenericResource&gt;&gt;&#xA;override this.GetAsync : string * string * string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.GenericResource&gt;&gt;" Usage="resourcesOperations.GetAsync (resourceGroupName, resourceProviderNamespace, parentResourcePath, resourceType, resourceName, apiVersion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.GenericResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="resourceProviderNamespace" Type="System.String" />
        <Parameter Name="parentResourcePath" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="apiVersion" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group containing the resource to get. The name is case insensitive. </param>
        <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
        <param name="parentResourcePath"> The parent resource identity. </param>
        <param name="resourceType"> The resource type of the resource. </param>
        <param name="resourceName"> The name of the resource to get. </param>
        <param name="apiVersion"> The API version to use for the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a resource. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetById">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.Models.GenericResource&gt; GetById (string resourceId, string apiVersion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Models.GenericResource&gt; GetById(string resourceId, string apiVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourcesOperations.GetById(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetById (resourceId As String, apiVersion As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of GenericResource)" />
      <MemberSignature Language="F#" Value="abstract member GetById : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Models.GenericResource&gt;&#xA;override this.GetById : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Models.GenericResource&gt;" Usage="resourcesOperations.GetById (resourceId, apiVersion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.Models.GenericResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceId" Type="System.String" />
        <Parameter Name="apiVersion" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceId"> The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}. </param>
        <param name="apiVersion"> The API version to use for the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a resource by ID. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByIdAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.GenericResource&gt;&gt; GetByIdAsync (string resourceId, string apiVersion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Models.GenericResource&gt;&gt; GetByIdAsync(string resourceId, string apiVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourcesOperations.GetByIdAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByIdAsync (resourceId As String, apiVersion As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of GenericResource))" />
      <MemberSignature Language="F#" Value="abstract member GetByIdAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.GenericResource&gt;&gt;&#xA;override this.GetByIdAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.GenericResource&gt;&gt;" Usage="resourcesOperations.GetByIdAsync (resourceId, apiVersion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.GenericResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceId" Type="System.String" />
        <Parameter Name="apiVersion" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceId"> The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}. </param>
        <param name="apiVersion"> The API version to use for the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a resource by ID. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.GenericResourceExpanded&gt; List (string filter = default, string expand = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Resources.Models.GenericResourceExpanded&gt; List(string filter, string expand, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourcesOperations.List(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function List (Optional filter As String = Nothing, Optional expand As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of GenericResourceExpanded)" />
      <MemberSignature Language="F#" Value="abstract member List : string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.GenericResourceExpanded&gt;&#xA;override this.List : string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.GenericResourceExpanded&gt;" Usage="resourcesOperations.List (filter, expand, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.GenericResourceExpanded&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> The filter to apply on the operation.&lt;br&gt;&lt;br&gt;The properties you can use for eq (equals) or ne (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId, plan, plan/publisher, plan/product, plan/name, plan/version, and plan/promotionCode.&lt;br&gt;&lt;br&gt;For example, to filter by a resource type, use: $filter=resourceType eq 'Microsoft.Network/virtualNetworks'&lt;br&gt;&lt;br&gt;You can use substringof(value, property) in the filter. The properties you can use for substring are: name and resourceGroup.&lt;br&gt;&lt;br&gt;For example, to get all resources with 'demo' anywhere in the name, use: $filter=substringof('demo', name)&lt;br&gt;&lt;br&gt;You can link more than one substringof together by adding and/or operators.&lt;br&gt;&lt;br&gt;You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'. When you filter by a tag name and value, the tags for each resource are not returned in the results.&lt;br&gt;&lt;br&gt;You can use some properties together when filtering. The combinations you can use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and identity/principalId. </param>
        <param name="expand"> Comma-separated list of additional properties to be included in the response. Valid values include `createdTime`, `changedTime` and `provisioningState`. For example, `$expand=createdTime,changedTime`. </param>
        <param name="top"> The number of results to return. If null is passed, returns all resource groups. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get all the resources in a subscription. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.GenericResourceExpanded&gt; ListAsync (string filter = default, string expand = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Resources.Models.GenericResourceExpanded&gt; ListAsync(string filter, string expand, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourcesOperations.ListAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListAsync (Optional filter As String = Nothing, Optional expand As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of GenericResourceExpanded)" />
      <MemberSignature Language="F#" Value="abstract member ListAsync : string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.GenericResourceExpanded&gt;&#xA;override this.ListAsync : string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.GenericResourceExpanded&gt;" Usage="resourcesOperations.ListAsync (filter, expand, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.GenericResourceExpanded&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> The filter to apply on the operation.&lt;br&gt;&lt;br&gt;The properties you can use for eq (equals) or ne (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId, plan, plan/publisher, plan/product, plan/name, plan/version, and plan/promotionCode.&lt;br&gt;&lt;br&gt;For example, to filter by a resource type, use: $filter=resourceType eq 'Microsoft.Network/virtualNetworks'&lt;br&gt;&lt;br&gt;You can use substringof(value, property) in the filter. The properties you can use for substring are: name and resourceGroup.&lt;br&gt;&lt;br&gt;For example, to get all resources with 'demo' anywhere in the name, use: $filter=substringof('demo', name)&lt;br&gt;&lt;br&gt;You can link more than one substringof together by adding and/or operators.&lt;br&gt;&lt;br&gt;You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'. When you filter by a tag name and value, the tags for each resource are not returned in the results.&lt;br&gt;&lt;br&gt;You can use some properties together when filtering. The combinations you can use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and identity/principalId. </param>
        <param name="expand"> Comma-separated list of additional properties to be included in the response. Valid values include `createdTime`, `changedTime` and `provisioningState`. For example, `$expand=createdTime,changedTime`. </param>
        <param name="top"> The number of results to return. If null is passed, returns all resource groups. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get all the resources in a subscription. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListByResourceGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.GenericResourceExpanded&gt; ListByResourceGroup (string resourceGroupName, string filter = default, string expand = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Resources.Models.GenericResourceExpanded&gt; ListByResourceGroup(string resourceGroupName, string filter, string expand, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourcesOperations.ListByResourceGroup(System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListByResourceGroup (resourceGroupName As String, Optional filter As String = Nothing, Optional expand As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of GenericResourceExpanded)" />
      <MemberSignature Language="F#" Value="abstract member ListByResourceGroup : string * string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.GenericResourceExpanded&gt;&#xA;override this.ListByResourceGroup : string * string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.GenericResourceExpanded&gt;" Usage="resourcesOperations.ListByResourceGroup (resourceGroupName, filter, expand, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.GenericResourceExpanded&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The resource group with the resources to get. </param>
        <param name="filter"> The filter to apply on the operation.&lt;br&gt;&lt;br&gt;The properties you can use for eq (equals) or ne (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId, plan, plan/publisher, plan/product, plan/name, plan/version, and plan/promotionCode.&lt;br&gt;&lt;br&gt;For example, to filter by a resource type, use: $filter=resourceType eq 'Microsoft.Network/virtualNetworks'&lt;br&gt;&lt;br&gt;You can use substringof(value, property) in the filter. The properties you can use for substring are: name and resourceGroup.&lt;br&gt;&lt;br&gt;For example, to get all resources with 'demo' anywhere in the name, use: $filter=substringof('demo', name)&lt;br&gt;&lt;br&gt;You can link more than one substringof together by adding and/or operators.&lt;br&gt;&lt;br&gt;You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'. When you filter by a tag name and value, the tags for each resource are not returned in the results.&lt;br&gt;&lt;br&gt;You can use some properties together when filtering. The combinations you can use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and identity/principalId. </param>
        <param name="expand"> Comma-separated list of additional properties to be included in the response. Valid values include `createdTime`, `changedTime` and `provisioningState`. For example, `$expand=createdTime,changedTime`. </param>
        <param name="top"> The number of results to return. If null is passed, returns all resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get all the resources for a resource group. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListByResourceGroupAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.GenericResourceExpanded&gt; ListByResourceGroupAsync (string resourceGroupName, string filter = default, string expand = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Resources.Models.GenericResourceExpanded&gt; ListByResourceGroupAsync(string resourceGroupName, string filter, string expand, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourcesOperations.ListByResourceGroupAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListByResourceGroupAsync (resourceGroupName As String, Optional filter As String = Nothing, Optional expand As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of GenericResourceExpanded)" />
      <MemberSignature Language="F#" Value="abstract member ListByResourceGroupAsync : string * string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.GenericResourceExpanded&gt;&#xA;override this.ListByResourceGroupAsync : string * string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.GenericResourceExpanded&gt;" Usage="resourcesOperations.ListByResourceGroupAsync (resourceGroupName, filter, expand, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.GenericResourceExpanded&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The resource group with the resources to get. </param>
        <param name="filter"> The filter to apply on the operation.&lt;br&gt;&lt;br&gt;The properties you can use for eq (equals) or ne (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId, plan, plan/publisher, plan/product, plan/name, plan/version, and plan/promotionCode.&lt;br&gt;&lt;br&gt;For example, to filter by a resource type, use: $filter=resourceType eq 'Microsoft.Network/virtualNetworks'&lt;br&gt;&lt;br&gt;You can use substringof(value, property) in the filter. The properties you can use for substring are: name and resourceGroup.&lt;br&gt;&lt;br&gt;For example, to get all resources with 'demo' anywhere in the name, use: $filter=substringof('demo', name)&lt;br&gt;&lt;br&gt;You can link more than one substringof together by adding and/or operators.&lt;br&gt;&lt;br&gt;You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'. When you filter by a tag name and value, the tags for each resource are not returned in the results.&lt;br&gt;&lt;br&gt;You can use some properties together when filtering. The combinations you can use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and identity/principalId. </param>
        <param name="expand"> Comma-separated list of additional properties to be included in the response. Valid values include `createdTime`, `changedTime` and `provisioningState`. For example, `$expand=createdTime,changedTime`. </param>
        <param name="top"> The number of results to return. If null is passed, returns all resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get all the resources for a resource group. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCreateOrUpdate">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.ResourcesCreateOrUpdateOperation StartCreateOrUpdate (string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string apiVersion, Azure.ResourceManager.Resources.Models.GenericResource parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.ResourcesCreateOrUpdateOperation StartCreateOrUpdate(string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string apiVersion, class Azure.ResourceManager.Resources.Models.GenericResource parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourcesOperations.StartCreateOrUpdate(System.String,System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.Resources.Models.GenericResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateOrUpdate (resourceGroupName As String, resourceProviderNamespace As String, parentResourcePath As String, resourceType As String, resourceName As String, apiVersion As String, parameters As GenericResource, Optional cancellationToken As CancellationToken = Nothing) As ResourcesCreateOrUpdateOperation" />
      <MemberSignature Language="F#" Value="abstract member StartCreateOrUpdate : string * string * string * string * string * string * Azure.ResourceManager.Resources.Models.GenericResource * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.ResourcesCreateOrUpdateOperation&#xA;override this.StartCreateOrUpdate : string * string * string * string * string * string * Azure.ResourceManager.Resources.Models.GenericResource * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.ResourcesCreateOrUpdateOperation" Usage="resourcesOperations.StartCreateOrUpdate (resourceGroupName, resourceProviderNamespace, parentResourcePath, resourceType, resourceName, apiVersion, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.ResourcesCreateOrUpdateOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="resourceProviderNamespace" Type="System.String" />
        <Parameter Name="parentResourcePath" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="apiVersion" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.GenericResource" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group for the resource. The name is case insensitive. </param>
        <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
        <param name="parentResourcePath"> The parent resource identity. </param>
        <param name="resourceType"> The resource type of the resource to create. </param>
        <param name="resourceName"> The name of the resource to create. </param>
        <param name="apiVersion"> The API version to use for the operation. </param>
        <param name="parameters"> Parameters for creating or updating the resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates a resource. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesCreateOrUpdateOperation&gt; StartCreateOrUpdateAsync (string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string apiVersion, Azure.ResourceManager.Resources.Models.GenericResource parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Resources.ResourcesCreateOrUpdateOperation&gt; StartCreateOrUpdateAsync(string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string apiVersion, class Azure.ResourceManager.Resources.Models.GenericResource parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourcesOperations.StartCreateOrUpdateAsync(System.String,System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.Resources.Models.GenericResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateOrUpdateAsync (resourceGroupName As String, resourceProviderNamespace As String, parentResourcePath As String, resourceType As String, resourceName As String, apiVersion As String, parameters As GenericResource, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ResourcesCreateOrUpdateOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartCreateOrUpdateAsync : string * string * string * string * string * string * Azure.ResourceManager.Resources.Models.GenericResource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesCreateOrUpdateOperation&gt;&#xA;override this.StartCreateOrUpdateAsync : string * string * string * string * string * string * Azure.ResourceManager.Resources.Models.GenericResource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesCreateOrUpdateOperation&gt;" Usage="resourcesOperations.StartCreateOrUpdateAsync (resourceGroupName, resourceProviderNamespace, parentResourcePath, resourceType, resourceName, apiVersion, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesCreateOrUpdateOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="resourceProviderNamespace" Type="System.String" />
        <Parameter Name="parentResourcePath" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="apiVersion" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.GenericResource" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group for the resource. The name is case insensitive. </param>
        <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
        <param name="parentResourcePath"> The parent resource identity. </param>
        <param name="resourceType"> The resource type of the resource to create. </param>
        <param name="resourceName"> The name of the resource to create. </param>
        <param name="apiVersion"> The API version to use for the operation. </param>
        <param name="parameters"> Parameters for creating or updating the resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates a resource. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCreateOrUpdateById">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.ResourcesCreateOrUpdateByIdOperation StartCreateOrUpdateById (string resourceId, string apiVersion, Azure.ResourceManager.Resources.Models.GenericResource parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.ResourcesCreateOrUpdateByIdOperation StartCreateOrUpdateById(string resourceId, string apiVersion, class Azure.ResourceManager.Resources.Models.GenericResource parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourcesOperations.StartCreateOrUpdateById(System.String,System.String,Azure.ResourceManager.Resources.Models.GenericResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateOrUpdateById (resourceId As String, apiVersion As String, parameters As GenericResource, Optional cancellationToken As CancellationToken = Nothing) As ResourcesCreateOrUpdateByIdOperation" />
      <MemberSignature Language="F#" Value="abstract member StartCreateOrUpdateById : string * string * Azure.ResourceManager.Resources.Models.GenericResource * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.ResourcesCreateOrUpdateByIdOperation&#xA;override this.StartCreateOrUpdateById : string * string * Azure.ResourceManager.Resources.Models.GenericResource * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.ResourcesCreateOrUpdateByIdOperation" Usage="resourcesOperations.StartCreateOrUpdateById (resourceId, apiVersion, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.ResourcesCreateOrUpdateByIdOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceId" Type="System.String" />
        <Parameter Name="apiVersion" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.GenericResource" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceId"> The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}. </param>
        <param name="apiVersion"> The API version to use for the operation. </param>
        <param name="parameters"> Create or update resource parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Create a resource by ID. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCreateOrUpdateByIdAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesCreateOrUpdateByIdOperation&gt; StartCreateOrUpdateByIdAsync (string resourceId, string apiVersion, Azure.ResourceManager.Resources.Models.GenericResource parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Resources.ResourcesCreateOrUpdateByIdOperation&gt; StartCreateOrUpdateByIdAsync(string resourceId, string apiVersion, class Azure.ResourceManager.Resources.Models.GenericResource parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourcesOperations.StartCreateOrUpdateByIdAsync(System.String,System.String,Azure.ResourceManager.Resources.Models.GenericResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateOrUpdateByIdAsync (resourceId As String, apiVersion As String, parameters As GenericResource, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ResourcesCreateOrUpdateByIdOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartCreateOrUpdateByIdAsync : string * string * Azure.ResourceManager.Resources.Models.GenericResource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesCreateOrUpdateByIdOperation&gt;&#xA;override this.StartCreateOrUpdateByIdAsync : string * string * Azure.ResourceManager.Resources.Models.GenericResource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesCreateOrUpdateByIdOperation&gt;" Usage="resourcesOperations.StartCreateOrUpdateByIdAsync (resourceId, apiVersion, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesCreateOrUpdateByIdOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceId" Type="System.String" />
        <Parameter Name="apiVersion" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.GenericResource" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceId"> The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}. </param>
        <param name="apiVersion"> The API version to use for the operation. </param>
        <param name="parameters"> Create or update resource parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Create a resource by ID. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartDelete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.ResourcesDeleteOperation StartDelete (string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string apiVersion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.ResourcesDeleteOperation StartDelete(string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string apiVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourcesOperations.StartDelete(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDelete (resourceGroupName As String, resourceProviderNamespace As String, parentResourcePath As String, resourceType As String, resourceName As String, apiVersion As String, Optional cancellationToken As CancellationToken = Nothing) As ResourcesDeleteOperation" />
      <MemberSignature Language="F#" Value="abstract member StartDelete : string * string * string * string * string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.ResourcesDeleteOperation&#xA;override this.StartDelete : string * string * string * string * string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.ResourcesDeleteOperation" Usage="resourcesOperations.StartDelete (resourceGroupName, resourceProviderNamespace, parentResourcePath, resourceType, resourceName, apiVersion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.ResourcesDeleteOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="resourceProviderNamespace" Type="System.String" />
        <Parameter Name="parentResourcePath" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="apiVersion" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource to delete. The name is case insensitive. </param>
        <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
        <param name="parentResourcePath"> The parent resource identity. </param>
        <param name="resourceType"> The resource type. </param>
        <param name="resourceName"> The name of the resource to delete. </param>
        <param name="apiVersion"> The API version to use for the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes a resource. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartDeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesDeleteOperation&gt; StartDeleteAsync (string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string apiVersion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Resources.ResourcesDeleteOperation&gt; StartDeleteAsync(string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string apiVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourcesOperations.StartDeleteAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDeleteAsync (resourceGroupName As String, resourceProviderNamespace As String, parentResourcePath As String, resourceType As String, resourceName As String, apiVersion As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ResourcesDeleteOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartDeleteAsync : string * string * string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesDeleteOperation&gt;&#xA;override this.StartDeleteAsync : string * string * string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesDeleteOperation&gt;" Usage="resourcesOperations.StartDeleteAsync (resourceGroupName, resourceProviderNamespace, parentResourcePath, resourceType, resourceName, apiVersion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesDeleteOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="resourceProviderNamespace" Type="System.String" />
        <Parameter Name="parentResourcePath" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="apiVersion" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource to delete. The name is case insensitive. </param>
        <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
        <param name="parentResourcePath"> The parent resource identity. </param>
        <param name="resourceType"> The resource type. </param>
        <param name="resourceName"> The name of the resource to delete. </param>
        <param name="apiVersion"> The API version to use for the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes a resource. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartDeleteById">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.ResourcesDeleteByIdOperation StartDeleteById (string resourceId, string apiVersion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.ResourcesDeleteByIdOperation StartDeleteById(string resourceId, string apiVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourcesOperations.StartDeleteById(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDeleteById (resourceId As String, apiVersion As String, Optional cancellationToken As CancellationToken = Nothing) As ResourcesDeleteByIdOperation" />
      <MemberSignature Language="F#" Value="abstract member StartDeleteById : string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.ResourcesDeleteByIdOperation&#xA;override this.StartDeleteById : string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.ResourcesDeleteByIdOperation" Usage="resourcesOperations.StartDeleteById (resourceId, apiVersion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.ResourcesDeleteByIdOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceId" Type="System.String" />
        <Parameter Name="apiVersion" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceId"> The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}. </param>
        <param name="apiVersion"> The API version to use for the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes a resource by ID. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartDeleteByIdAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesDeleteByIdOperation&gt; StartDeleteByIdAsync (string resourceId, string apiVersion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Resources.ResourcesDeleteByIdOperation&gt; StartDeleteByIdAsync(string resourceId, string apiVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourcesOperations.StartDeleteByIdAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDeleteByIdAsync (resourceId As String, apiVersion As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ResourcesDeleteByIdOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartDeleteByIdAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesDeleteByIdOperation&gt;&#xA;override this.StartDeleteByIdAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesDeleteByIdOperation&gt;" Usage="resourcesOperations.StartDeleteByIdAsync (resourceId, apiVersion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesDeleteByIdOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceId" Type="System.String" />
        <Parameter Name="apiVersion" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceId"> The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}. </param>
        <param name="apiVersion"> The API version to use for the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes a resource by ID. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartMoveResources">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.ResourcesMoveResourcesOperation StartMoveResources (string sourceResourceGroupName, Azure.ResourceManager.Resources.Models.ResourcesMoveInfo parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.ResourcesMoveResourcesOperation StartMoveResources(string sourceResourceGroupName, class Azure.ResourceManager.Resources.Models.ResourcesMoveInfo parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourcesOperations.StartMoveResources(System.String,Azure.ResourceManager.Resources.Models.ResourcesMoveInfo,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartMoveResources (sourceResourceGroupName As String, parameters As ResourcesMoveInfo, Optional cancellationToken As CancellationToken = Nothing) As ResourcesMoveResourcesOperation" />
      <MemberSignature Language="F#" Value="abstract member StartMoveResources : string * Azure.ResourceManager.Resources.Models.ResourcesMoveInfo * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.ResourcesMoveResourcesOperation&#xA;override this.StartMoveResources : string * Azure.ResourceManager.Resources.Models.ResourcesMoveInfo * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.ResourcesMoveResourcesOperation" Usage="resourcesOperations.StartMoveResources (sourceResourceGroupName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.ResourcesMoveResourcesOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceResourceGroupName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.ResourcesMoveInfo" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceResourceGroupName"> The name of the resource group containing the resources to move. </param>
        <param name="parameters"> Parameters for moving resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> The resources to move must be in the same source resource group. The target resource group may be in a different subscription. When moving resources, both the source group and the target group are locked for the duration of the operation. Write and delete operations are blocked on the groups until the move completes. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartMoveResourcesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesMoveResourcesOperation&gt; StartMoveResourcesAsync (string sourceResourceGroupName, Azure.ResourceManager.Resources.Models.ResourcesMoveInfo parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Resources.ResourcesMoveResourcesOperation&gt; StartMoveResourcesAsync(string sourceResourceGroupName, class Azure.ResourceManager.Resources.Models.ResourcesMoveInfo parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourcesOperations.StartMoveResourcesAsync(System.String,Azure.ResourceManager.Resources.Models.ResourcesMoveInfo,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartMoveResourcesAsync (sourceResourceGroupName As String, parameters As ResourcesMoveInfo, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ResourcesMoveResourcesOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartMoveResourcesAsync : string * Azure.ResourceManager.Resources.Models.ResourcesMoveInfo * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesMoveResourcesOperation&gt;&#xA;override this.StartMoveResourcesAsync : string * Azure.ResourceManager.Resources.Models.ResourcesMoveInfo * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesMoveResourcesOperation&gt;" Usage="resourcesOperations.StartMoveResourcesAsync (sourceResourceGroupName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesMoveResourcesOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceResourceGroupName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.ResourcesMoveInfo" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceResourceGroupName"> The name of the resource group containing the resources to move. </param>
        <param name="parameters"> Parameters for moving resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> The resources to move must be in the same source resource group. The target resource group may be in a different subscription. When moving resources, both the source group and the target group are locked for the duration of the operation. Write and delete operations are blocked on the groups until the move completes. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartUpdate">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.ResourcesUpdateOperation StartUpdate (string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string apiVersion, Azure.ResourceManager.Resources.Models.GenericResource parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.ResourcesUpdateOperation StartUpdate(string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string apiVersion, class Azure.ResourceManager.Resources.Models.GenericResource parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourcesOperations.StartUpdate(System.String,System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.Resources.Models.GenericResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartUpdate (resourceGroupName As String, resourceProviderNamespace As String, parentResourcePath As String, resourceType As String, resourceName As String, apiVersion As String, parameters As GenericResource, Optional cancellationToken As CancellationToken = Nothing) As ResourcesUpdateOperation" />
      <MemberSignature Language="F#" Value="abstract member StartUpdate : string * string * string * string * string * string * Azure.ResourceManager.Resources.Models.GenericResource * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.ResourcesUpdateOperation&#xA;override this.StartUpdate : string * string * string * string * string * string * Azure.ResourceManager.Resources.Models.GenericResource * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.ResourcesUpdateOperation" Usage="resourcesOperations.StartUpdate (resourceGroupName, resourceProviderNamespace, parentResourcePath, resourceType, resourceName, apiVersion, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.ResourcesUpdateOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="resourceProviderNamespace" Type="System.String" />
        <Parameter Name="parentResourcePath" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="apiVersion" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.GenericResource" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group for the resource. The name is case insensitive. </param>
        <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
        <param name="parentResourcePath"> The parent resource identity. </param>
        <param name="resourceType"> The resource type of the resource to update. </param>
        <param name="resourceName"> The name of the resource to update. </param>
        <param name="apiVersion"> The API version to use for the operation. </param>
        <param name="parameters"> Parameters for updating the resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Updates a resource. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesUpdateOperation&gt; StartUpdateAsync (string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string apiVersion, Azure.ResourceManager.Resources.Models.GenericResource parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Resources.ResourcesUpdateOperation&gt; StartUpdateAsync(string resourceGroupName, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, string apiVersion, class Azure.ResourceManager.Resources.Models.GenericResource parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourcesOperations.StartUpdateAsync(System.String,System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.Resources.Models.GenericResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartUpdateAsync (resourceGroupName As String, resourceProviderNamespace As String, parentResourcePath As String, resourceType As String, resourceName As String, apiVersion As String, parameters As GenericResource, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ResourcesUpdateOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartUpdateAsync : string * string * string * string * string * string * Azure.ResourceManager.Resources.Models.GenericResource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesUpdateOperation&gt;&#xA;override this.StartUpdateAsync : string * string * string * string * string * string * Azure.ResourceManager.Resources.Models.GenericResource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesUpdateOperation&gt;" Usage="resourcesOperations.StartUpdateAsync (resourceGroupName, resourceProviderNamespace, parentResourcePath, resourceType, resourceName, apiVersion, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesUpdateOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="resourceProviderNamespace" Type="System.String" />
        <Parameter Name="parentResourcePath" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="apiVersion" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.GenericResource" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group for the resource. The name is case insensitive. </param>
        <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
        <param name="parentResourcePath"> The parent resource identity. </param>
        <param name="resourceType"> The resource type of the resource to update. </param>
        <param name="resourceName"> The name of the resource to update. </param>
        <param name="apiVersion"> The API version to use for the operation. </param>
        <param name="parameters"> Parameters for updating the resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Updates a resource. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartUpdateById">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.ResourcesUpdateByIdOperation StartUpdateById (string resourceId, string apiVersion, Azure.ResourceManager.Resources.Models.GenericResource parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.ResourcesUpdateByIdOperation StartUpdateById(string resourceId, string apiVersion, class Azure.ResourceManager.Resources.Models.GenericResource parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourcesOperations.StartUpdateById(System.String,System.String,Azure.ResourceManager.Resources.Models.GenericResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartUpdateById (resourceId As String, apiVersion As String, parameters As GenericResource, Optional cancellationToken As CancellationToken = Nothing) As ResourcesUpdateByIdOperation" />
      <MemberSignature Language="F#" Value="abstract member StartUpdateById : string * string * Azure.ResourceManager.Resources.Models.GenericResource * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.ResourcesUpdateByIdOperation&#xA;override this.StartUpdateById : string * string * Azure.ResourceManager.Resources.Models.GenericResource * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.ResourcesUpdateByIdOperation" Usage="resourcesOperations.StartUpdateById (resourceId, apiVersion, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.ResourcesUpdateByIdOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceId" Type="System.String" />
        <Parameter Name="apiVersion" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.GenericResource" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceId"> The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}. </param>
        <param name="apiVersion"> The API version to use for the operation. </param>
        <param name="parameters"> Update resource parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Updates a resource by ID. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartUpdateByIdAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesUpdateByIdOperation&gt; StartUpdateByIdAsync (string resourceId, string apiVersion, Azure.ResourceManager.Resources.Models.GenericResource parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Resources.ResourcesUpdateByIdOperation&gt; StartUpdateByIdAsync(string resourceId, string apiVersion, class Azure.ResourceManager.Resources.Models.GenericResource parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourcesOperations.StartUpdateByIdAsync(System.String,System.String,Azure.ResourceManager.Resources.Models.GenericResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartUpdateByIdAsync (resourceId As String, apiVersion As String, parameters As GenericResource, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ResourcesUpdateByIdOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartUpdateByIdAsync : string * string * Azure.ResourceManager.Resources.Models.GenericResource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesUpdateByIdOperation&gt;&#xA;override this.StartUpdateByIdAsync : string * string * Azure.ResourceManager.Resources.Models.GenericResource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesUpdateByIdOperation&gt;" Usage="resourcesOperations.StartUpdateByIdAsync (resourceId, apiVersion, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesUpdateByIdOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceId" Type="System.String" />
        <Parameter Name="apiVersion" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.GenericResource" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceId"> The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}. </param>
        <param name="apiVersion"> The API version to use for the operation. </param>
        <param name="parameters"> Update resource parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Updates a resource by ID. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartValidateMoveResources">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.ResourcesValidateMoveResourcesOperation StartValidateMoveResources (string sourceResourceGroupName, Azure.ResourceManager.Resources.Models.ResourcesMoveInfo parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.ResourcesValidateMoveResourcesOperation StartValidateMoveResources(string sourceResourceGroupName, class Azure.ResourceManager.Resources.Models.ResourcesMoveInfo parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourcesOperations.StartValidateMoveResources(System.String,Azure.ResourceManager.Resources.Models.ResourcesMoveInfo,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartValidateMoveResources (sourceResourceGroupName As String, parameters As ResourcesMoveInfo, Optional cancellationToken As CancellationToken = Nothing) As ResourcesValidateMoveResourcesOperation" />
      <MemberSignature Language="F#" Value="abstract member StartValidateMoveResources : string * Azure.ResourceManager.Resources.Models.ResourcesMoveInfo * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.ResourcesValidateMoveResourcesOperation&#xA;override this.StartValidateMoveResources : string * Azure.ResourceManager.Resources.Models.ResourcesMoveInfo * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.ResourcesValidateMoveResourcesOperation" Usage="resourcesOperations.StartValidateMoveResources (sourceResourceGroupName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.ResourcesValidateMoveResourcesOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceResourceGroupName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.ResourcesMoveInfo" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceResourceGroupName"> The name of the resource group containing the resources to validate for move. </param>
        <param name="parameters"> Parameters for moving resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> This operation checks whether the specified resources can be moved to the target. The resources to move must be in the same source resource group. The target resource group may be in a different subscription. If validation succeeds, it returns HTTP response code 204 (no content). If validation fails, it returns HTTP response code 409 (Conflict) with an error message. Retrieve the URL in the Location header value to check the result of the long-running operation. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartValidateMoveResourcesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesValidateMoveResourcesOperation&gt; StartValidateMoveResourcesAsync (string sourceResourceGroupName, Azure.ResourceManager.Resources.Models.ResourcesMoveInfo parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Resources.ResourcesValidateMoveResourcesOperation&gt; StartValidateMoveResourcesAsync(string sourceResourceGroupName, class Azure.ResourceManager.Resources.Models.ResourcesMoveInfo parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourcesOperations.StartValidateMoveResourcesAsync(System.String,Azure.ResourceManager.Resources.Models.ResourcesMoveInfo,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartValidateMoveResourcesAsync (sourceResourceGroupName As String, parameters As ResourcesMoveInfo, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ResourcesValidateMoveResourcesOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartValidateMoveResourcesAsync : string * Azure.ResourceManager.Resources.Models.ResourcesMoveInfo * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesValidateMoveResourcesOperation&gt;&#xA;override this.StartValidateMoveResourcesAsync : string * Azure.ResourceManager.Resources.Models.ResourcesMoveInfo * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesValidateMoveResourcesOperation&gt;" Usage="resourcesOperations.StartValidateMoveResourcesAsync (sourceResourceGroupName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.ResourcesValidateMoveResourcesOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceResourceGroupName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.ResourcesMoveInfo" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceResourceGroupName"> The name of the resource group containing the resources to validate for move. </param>
        <param name="parameters"> Parameters for moving resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> This operation checks whether the specified resources can be moved to the target. The resources to move must be in the same source resource group. The target resource group may be in a different subscription. If validation succeeds, it returns HTTP response code 204 (no content). If validation fails, it returns HTTP response code 409 (Conflict) with an error message. Retrieve the URL in the Location header value to check the result of the long-running operation. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
