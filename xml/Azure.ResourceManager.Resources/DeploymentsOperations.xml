<Type Name="DeploymentsOperations" FullName="Azure.ResourceManager.Resources.DeploymentsOperations">
  <TypeSignature Language="C#" Value="public class DeploymentsOperations" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DeploymentsOperations extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Resources.DeploymentsOperations" />
  <TypeSignature Language="VB.NET" Value="Public Class DeploymentsOperations" />
  <TypeSignature Language="F#" Value="type DeploymentsOperations = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The Deployments service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DeploymentsOperations ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of DeploymentsOperations for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateTemplateHash">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.Models.TemplateHashResult&gt; CalculateTemplateHash (object template, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Models.TemplateHashResult&gt; CalculateTemplateHash(object template, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.CalculateTemplateHash(System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CalculateTemplateHash (template As Object, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TemplateHashResult)" />
      <MemberSignature Language="F#" Value="abstract member CalculateTemplateHash : obj * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Models.TemplateHashResult&gt;&#xA;override this.CalculateTemplateHash : obj * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Models.TemplateHashResult&gt;" Usage="deploymentsOperations.CalculateTemplateHash (template, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.Models.TemplateHashResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="template" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="template"> The template provided to calculate hash. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Calculate the hash of the given template. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateTemplateHashAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.TemplateHashResult&gt;&gt; CalculateTemplateHashAsync (object template, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Models.TemplateHashResult&gt;&gt; CalculateTemplateHashAsync(object template, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.CalculateTemplateHashAsync(System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CalculateTemplateHashAsync (template As Object, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TemplateHashResult))" />
      <MemberSignature Language="F#" Value="abstract member CalculateTemplateHashAsync : obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.TemplateHashResult&gt;&gt;&#xA;override this.CalculateTemplateHashAsync : obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.TemplateHashResult&gt;&gt;" Usage="deploymentsOperations.CalculateTemplateHashAsync (template, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.TemplateHashResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="template" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="template"> The template provided to calculate hash. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Calculate the hash of the given template. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Cancel (string resourceGroupName, string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Cancel(string resourceGroupName, string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.Cancel(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Cancel (resourceGroupName As String, deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Cancel : string * string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.Cancel : string * string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="deploymentsOperations.Cancel (resourceGroupName, deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resource group partially deployed. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CancelAsync (string resourceGroupName, string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CancelAsync(string resourceGroupName, string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.CancelAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelAsync (resourceGroupName As String, deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CancelAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CancelAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="deploymentsOperations.CancelAsync (resourceGroupName, deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resource group partially deployed. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAtManagementGroupScope">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CancelAtManagementGroupScope (string groupId, string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CancelAtManagementGroupScope(string groupId, string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.CancelAtManagementGroupScope(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelAtManagementGroupScope (groupId As String, deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CancelAtManagementGroupScope : string * string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.CancelAtManagementGroupScope : string * string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="deploymentsOperations.CancelAtManagementGroupScope (groupId, deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupId"> The management group ID. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAtManagementGroupScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CancelAtManagementGroupScopeAsync (string groupId, string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CancelAtManagementGroupScopeAsync(string groupId, string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.CancelAtManagementGroupScopeAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelAtManagementGroupScopeAsync (groupId As String, deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CancelAtManagementGroupScopeAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CancelAtManagementGroupScopeAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="deploymentsOperations.CancelAtManagementGroupScopeAsync (groupId, deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupId"> The management group ID. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAtScope">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CancelAtScope (string scope, string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CancelAtScope(string scope, string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.CancelAtScope(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelAtScope (scope As String, deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CancelAtScope : string * string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.CancelAtScope : string * string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="deploymentsOperations.CancelAtScope (scope, deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The resource scope. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAtScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CancelAtScopeAsync (string scope, string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CancelAtScopeAsync(string scope, string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.CancelAtScopeAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelAtScopeAsync (scope As String, deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CancelAtScopeAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CancelAtScopeAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="deploymentsOperations.CancelAtScopeAsync (scope, deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The resource scope. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAtSubscriptionScope">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CancelAtSubscriptionScope (string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CancelAtSubscriptionScope(string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.CancelAtSubscriptionScope(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelAtSubscriptionScope (deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CancelAtSubscriptionScope : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.CancelAtSubscriptionScope : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="deploymentsOperations.CancelAtSubscriptionScope (deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAtSubscriptionScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CancelAtSubscriptionScopeAsync (string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CancelAtSubscriptionScopeAsync(string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.CancelAtSubscriptionScopeAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelAtSubscriptionScopeAsync (deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CancelAtSubscriptionScopeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CancelAtSubscriptionScopeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="deploymentsOperations.CancelAtSubscriptionScopeAsync (deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAtTenantScope">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CancelAtTenantScope (string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CancelAtTenantScope(string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.CancelAtTenantScope(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelAtTenantScope (deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CancelAtTenantScope : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.CancelAtTenantScope : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="deploymentsOperations.CancelAtTenantScope (deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAtTenantScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CancelAtTenantScopeAsync (string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CancelAtTenantScopeAsync(string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.CancelAtTenantScopeAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelAtTenantScopeAsync (deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CancelAtTenantScopeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CancelAtTenantScopeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="deploymentsOperations.CancelAtTenantScopeAsync (deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckExistence">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CheckExistence (string resourceGroupName, string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CheckExistence(string resourceGroupName, string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.CheckExistence(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckExistence (resourceGroupName As String, deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CheckExistence : string * string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.CheckExistence : string * string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="deploymentsOperations.CheckExistence (resourceGroupName, deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group with the deployment to check. The name is case insensitive. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Checks whether the deployment exists. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckExistenceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CheckExistenceAsync (string resourceGroupName, string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CheckExistenceAsync(string resourceGroupName, string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.CheckExistenceAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckExistenceAsync (resourceGroupName As String, deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CheckExistenceAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CheckExistenceAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="deploymentsOperations.CheckExistenceAsync (resourceGroupName, deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group with the deployment to check. The name is case insensitive. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Checks whether the deployment exists. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckExistenceAtManagementGroupScope">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CheckExistenceAtManagementGroupScope (string groupId, string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CheckExistenceAtManagementGroupScope(string groupId, string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.CheckExistenceAtManagementGroupScope(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckExistenceAtManagementGroupScope (groupId As String, deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CheckExistenceAtManagementGroupScope : string * string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.CheckExistenceAtManagementGroupScope : string * string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="deploymentsOperations.CheckExistenceAtManagementGroupScope (groupId, deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupId"> The management group ID. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Checks whether the deployment exists. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckExistenceAtManagementGroupScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CheckExistenceAtManagementGroupScopeAsync (string groupId, string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CheckExistenceAtManagementGroupScopeAsync(string groupId, string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.CheckExistenceAtManagementGroupScopeAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckExistenceAtManagementGroupScopeAsync (groupId As String, deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CheckExistenceAtManagementGroupScopeAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CheckExistenceAtManagementGroupScopeAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="deploymentsOperations.CheckExistenceAtManagementGroupScopeAsync (groupId, deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupId"> The management group ID. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Checks whether the deployment exists. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckExistenceAtScope">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CheckExistenceAtScope (string scope, string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CheckExistenceAtScope(string scope, string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.CheckExistenceAtScope(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckExistenceAtScope (scope As String, deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CheckExistenceAtScope : string * string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.CheckExistenceAtScope : string * string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="deploymentsOperations.CheckExistenceAtScope (scope, deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The resource scope. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Checks whether the deployment exists. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckExistenceAtScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CheckExistenceAtScopeAsync (string scope, string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CheckExistenceAtScopeAsync(string scope, string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.CheckExistenceAtScopeAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckExistenceAtScopeAsync (scope As String, deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CheckExistenceAtScopeAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CheckExistenceAtScopeAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="deploymentsOperations.CheckExistenceAtScopeAsync (scope, deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The resource scope. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Checks whether the deployment exists. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckExistenceAtSubscriptionScope">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CheckExistenceAtSubscriptionScope (string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CheckExistenceAtSubscriptionScope(string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.CheckExistenceAtSubscriptionScope(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckExistenceAtSubscriptionScope (deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CheckExistenceAtSubscriptionScope : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.CheckExistenceAtSubscriptionScope : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="deploymentsOperations.CheckExistenceAtSubscriptionScope (deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Checks whether the deployment exists. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckExistenceAtSubscriptionScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CheckExistenceAtSubscriptionScopeAsync (string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CheckExistenceAtSubscriptionScopeAsync(string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.CheckExistenceAtSubscriptionScopeAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckExistenceAtSubscriptionScopeAsync (deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CheckExistenceAtSubscriptionScopeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CheckExistenceAtSubscriptionScopeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="deploymentsOperations.CheckExistenceAtSubscriptionScopeAsync (deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Checks whether the deployment exists. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckExistenceAtTenantScope">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CheckExistenceAtTenantScope (string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CheckExistenceAtTenantScope(string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.CheckExistenceAtTenantScope(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckExistenceAtTenantScope (deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CheckExistenceAtTenantScope : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.CheckExistenceAtTenantScope : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="deploymentsOperations.CheckExistenceAtTenantScope (deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Checks whether the deployment exists. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckExistenceAtTenantScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CheckExistenceAtTenantScopeAsync (string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CheckExistenceAtTenantScopeAsync(string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.CheckExistenceAtTenantScopeAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckExistenceAtTenantScopeAsync (deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CheckExistenceAtTenantScopeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CheckExistenceAtTenantScopeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="deploymentsOperations.CheckExistenceAtTenantScopeAsync (deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Checks whether the deployment exists. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportTemplate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt; ExportTemplate (string resourceGroupName, string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt; ExportTemplate(string resourceGroupName, string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.ExportTemplate(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExportTemplate (resourceGroupName As String, deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DeploymentExportResult)" />
      <MemberSignature Language="F#" Value="abstract member ExportTemplate : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;&#xA;override this.ExportTemplate : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;" Usage="deploymentsOperations.ExportTemplate (resourceGroupName, deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Exports the template used for specified deployment. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportTemplateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;&gt; ExportTemplateAsync (string resourceGroupName, string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;&gt; ExportTemplateAsync(string resourceGroupName, string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.ExportTemplateAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExportTemplateAsync (resourceGroupName As String, deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DeploymentExportResult))" />
      <MemberSignature Language="F#" Value="abstract member ExportTemplateAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;&gt;&#xA;override this.ExportTemplateAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;&gt;" Usage="deploymentsOperations.ExportTemplateAsync (resourceGroupName, deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Exports the template used for specified deployment. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportTemplateAtManagementGroupScope">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt; ExportTemplateAtManagementGroupScope (string groupId, string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt; ExportTemplateAtManagementGroupScope(string groupId, string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.ExportTemplateAtManagementGroupScope(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExportTemplateAtManagementGroupScope (groupId As String, deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DeploymentExportResult)" />
      <MemberSignature Language="F#" Value="abstract member ExportTemplateAtManagementGroupScope : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;&#xA;override this.ExportTemplateAtManagementGroupScope : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;" Usage="deploymentsOperations.ExportTemplateAtManagementGroupScope (groupId, deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupId"> The management group ID. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Exports the template used for specified deployment. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportTemplateAtManagementGroupScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;&gt; ExportTemplateAtManagementGroupScopeAsync (string groupId, string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;&gt; ExportTemplateAtManagementGroupScopeAsync(string groupId, string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.ExportTemplateAtManagementGroupScopeAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExportTemplateAtManagementGroupScopeAsync (groupId As String, deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DeploymentExportResult))" />
      <MemberSignature Language="F#" Value="abstract member ExportTemplateAtManagementGroupScopeAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;&gt;&#xA;override this.ExportTemplateAtManagementGroupScopeAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;&gt;" Usage="deploymentsOperations.ExportTemplateAtManagementGroupScopeAsync (groupId, deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupId"> The management group ID. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Exports the template used for specified deployment. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportTemplateAtScope">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt; ExportTemplateAtScope (string scope, string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt; ExportTemplateAtScope(string scope, string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.ExportTemplateAtScope(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExportTemplateAtScope (scope As String, deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DeploymentExportResult)" />
      <MemberSignature Language="F#" Value="abstract member ExportTemplateAtScope : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;&#xA;override this.ExportTemplateAtScope : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;" Usage="deploymentsOperations.ExportTemplateAtScope (scope, deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The resource scope. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Exports the template used for specified deployment. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportTemplateAtScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;&gt; ExportTemplateAtScopeAsync (string scope, string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;&gt; ExportTemplateAtScopeAsync(string scope, string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.ExportTemplateAtScopeAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExportTemplateAtScopeAsync (scope As String, deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DeploymentExportResult))" />
      <MemberSignature Language="F#" Value="abstract member ExportTemplateAtScopeAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;&gt;&#xA;override this.ExportTemplateAtScopeAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;&gt;" Usage="deploymentsOperations.ExportTemplateAtScopeAsync (scope, deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The resource scope. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Exports the template used for specified deployment. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportTemplateAtSubscriptionScope">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt; ExportTemplateAtSubscriptionScope (string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt; ExportTemplateAtSubscriptionScope(string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.ExportTemplateAtSubscriptionScope(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExportTemplateAtSubscriptionScope (deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DeploymentExportResult)" />
      <MemberSignature Language="F#" Value="abstract member ExportTemplateAtSubscriptionScope : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;&#xA;override this.ExportTemplateAtSubscriptionScope : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;" Usage="deploymentsOperations.ExportTemplateAtSubscriptionScope (deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Exports the template used for specified deployment. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportTemplateAtSubscriptionScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;&gt; ExportTemplateAtSubscriptionScopeAsync (string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;&gt; ExportTemplateAtSubscriptionScopeAsync(string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.ExportTemplateAtSubscriptionScopeAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExportTemplateAtSubscriptionScopeAsync (deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DeploymentExportResult))" />
      <MemberSignature Language="F#" Value="abstract member ExportTemplateAtSubscriptionScopeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;&gt;&#xA;override this.ExportTemplateAtSubscriptionScopeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;&gt;" Usage="deploymentsOperations.ExportTemplateAtSubscriptionScopeAsync (deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Exports the template used for specified deployment. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportTemplateAtTenantScope">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt; ExportTemplateAtTenantScope (string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt; ExportTemplateAtTenantScope(string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.ExportTemplateAtTenantScope(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExportTemplateAtTenantScope (deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DeploymentExportResult)" />
      <MemberSignature Language="F#" Value="abstract member ExportTemplateAtTenantScope : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;&#xA;override this.ExportTemplateAtTenantScope : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;" Usage="deploymentsOperations.ExportTemplateAtTenantScope (deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Exports the template used for specified deployment. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportTemplateAtTenantScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;&gt; ExportTemplateAtTenantScopeAsync (string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;&gt; ExportTemplateAtTenantScopeAsync(string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.ExportTemplateAtTenantScopeAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExportTemplateAtTenantScopeAsync (deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DeploymentExportResult))" />
      <MemberSignature Language="F#" Value="abstract member ExportTemplateAtTenantScopeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;&gt;&#xA;override this.ExportTemplateAtTenantScopeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;&gt;" Usage="deploymentsOperations.ExportTemplateAtTenantScopeAsync (deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExportResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Exports the template used for specified deployment. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt; Get (string resourceGroupName, string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Models.DeploymentExtended&gt; Get(string resourceGroupName, string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.Get(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (resourceGroupName As String, deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DeploymentExtended)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&#xA;override this.Get : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;" Usage="deploymentsOperations.Get (resourceGroupName, deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a deployment. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&gt; GetAsync (string resourceGroupName, string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&gt; GetAsync(string resourceGroupName, string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.GetAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (resourceGroupName As String, deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DeploymentExtended))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&gt;&#xA;override this.GetAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&gt;" Usage="deploymentsOperations.GetAsync (resourceGroupName, deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a deployment. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAtManagementGroupScope">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt; GetAtManagementGroupScope (string groupId, string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Models.DeploymentExtended&gt; GetAtManagementGroupScope(string groupId, string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.GetAtManagementGroupScope(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAtManagementGroupScope (groupId As String, deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DeploymentExtended)" />
      <MemberSignature Language="F#" Value="abstract member GetAtManagementGroupScope : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&#xA;override this.GetAtManagementGroupScope : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;" Usage="deploymentsOperations.GetAtManagementGroupScope (groupId, deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupId"> The management group ID. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a deployment. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAtManagementGroupScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&gt; GetAtManagementGroupScopeAsync (string groupId, string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&gt; GetAtManagementGroupScopeAsync(string groupId, string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.GetAtManagementGroupScopeAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAtManagementGroupScopeAsync (groupId As String, deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DeploymentExtended))" />
      <MemberSignature Language="F#" Value="abstract member GetAtManagementGroupScopeAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&gt;&#xA;override this.GetAtManagementGroupScopeAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&gt;" Usage="deploymentsOperations.GetAtManagementGroupScopeAsync (groupId, deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupId"> The management group ID. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a deployment. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAtScope">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt; GetAtScope (string scope, string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Models.DeploymentExtended&gt; GetAtScope(string scope, string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.GetAtScope(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAtScope (scope As String, deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DeploymentExtended)" />
      <MemberSignature Language="F#" Value="abstract member GetAtScope : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&#xA;override this.GetAtScope : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;" Usage="deploymentsOperations.GetAtScope (scope, deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The resource scope. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a deployment. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAtScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&gt; GetAtScopeAsync (string scope, string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&gt; GetAtScopeAsync(string scope, string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.GetAtScopeAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAtScopeAsync (scope As String, deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DeploymentExtended))" />
      <MemberSignature Language="F#" Value="abstract member GetAtScopeAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&gt;&#xA;override this.GetAtScopeAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&gt;" Usage="deploymentsOperations.GetAtScopeAsync (scope, deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The resource scope. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a deployment. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAtSubscriptionScope">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt; GetAtSubscriptionScope (string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Models.DeploymentExtended&gt; GetAtSubscriptionScope(string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.GetAtSubscriptionScope(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAtSubscriptionScope (deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DeploymentExtended)" />
      <MemberSignature Language="F#" Value="abstract member GetAtSubscriptionScope : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&#xA;override this.GetAtSubscriptionScope : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;" Usage="deploymentsOperations.GetAtSubscriptionScope (deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a deployment. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAtSubscriptionScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&gt; GetAtSubscriptionScopeAsync (string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&gt; GetAtSubscriptionScopeAsync(string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.GetAtSubscriptionScopeAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAtSubscriptionScopeAsync (deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DeploymentExtended))" />
      <MemberSignature Language="F#" Value="abstract member GetAtSubscriptionScopeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&gt;&#xA;override this.GetAtSubscriptionScopeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&gt;" Usage="deploymentsOperations.GetAtSubscriptionScopeAsync (deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a deployment. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAtTenantScope">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt; GetAtTenantScope (string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Models.DeploymentExtended&gt; GetAtTenantScope(string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.GetAtTenantScope(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAtTenantScope (deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DeploymentExtended)" />
      <MemberSignature Language="F#" Value="abstract member GetAtTenantScope : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&#xA;override this.GetAtTenantScope : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;" Usage="deploymentsOperations.GetAtTenantScope (deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a deployment. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAtTenantScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&gt; GetAtTenantScopeAsync (string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&gt; GetAtTenantScopeAsync(string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.GetAtTenantScopeAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAtTenantScopeAsync (deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DeploymentExtended))" />
      <MemberSignature Language="F#" Value="abstract member GetAtTenantScopeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&gt;&#xA;override this.GetAtTenantScopeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&gt;" Usage="deploymentsOperations.GetAtTenantScopeAsync (deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a deployment. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAtManagementGroupScope">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt; ListAtManagementGroupScope (string groupId, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Resources.Models.DeploymentExtended&gt; ListAtManagementGroupScope(string groupId, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.ListAtManagementGroupScope(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListAtManagementGroupScope (groupId As String, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DeploymentExtended)" />
      <MemberSignature Language="F#" Value="abstract member ListAtManagementGroupScope : string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&#xA;override this.ListAtManagementGroupScope : string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;" Usage="deploymentsOperations.ListAtManagementGroupScope (groupId, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupId"> The management group ID. </param>
        <param name="filter"> The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. </param>
        <param name="top"> The number of results to get. If null is passed, returns all deployments. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get all the deployments for a management group. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAtManagementGroupScopeAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt; ListAtManagementGroupScopeAsync (string groupId, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Resources.Models.DeploymentExtended&gt; ListAtManagementGroupScopeAsync(string groupId, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.ListAtManagementGroupScopeAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListAtManagementGroupScopeAsync (groupId As String, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DeploymentExtended)" />
      <MemberSignature Language="F#" Value="abstract member ListAtManagementGroupScopeAsync : string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&#xA;override this.ListAtManagementGroupScopeAsync : string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;" Usage="deploymentsOperations.ListAtManagementGroupScopeAsync (groupId, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupId"> The management group ID. </param>
        <param name="filter"> The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. </param>
        <param name="top"> The number of results to get. If null is passed, returns all deployments. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get all the deployments for a management group. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAtScope">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt; ListAtScope (string scope, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Resources.Models.DeploymentExtended&gt; ListAtScope(string scope, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.ListAtScope(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListAtScope (scope As String, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DeploymentExtended)" />
      <MemberSignature Language="F#" Value="abstract member ListAtScope : string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&#xA;override this.ListAtScope : string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;" Usage="deploymentsOperations.ListAtScope (scope, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The resource scope. </param>
        <param name="filter"> The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. </param>
        <param name="top"> The number of results to get. If null is passed, returns all deployments. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get all the deployments at the given scope. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAtScopeAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt; ListAtScopeAsync (string scope, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Resources.Models.DeploymentExtended&gt; ListAtScopeAsync(string scope, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.ListAtScopeAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListAtScopeAsync (scope As String, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DeploymentExtended)" />
      <MemberSignature Language="F#" Value="abstract member ListAtScopeAsync : string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&#xA;override this.ListAtScopeAsync : string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;" Usage="deploymentsOperations.ListAtScopeAsync (scope, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The resource scope. </param>
        <param name="filter"> The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. </param>
        <param name="top"> The number of results to get. If null is passed, returns all deployments. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get all the deployments at the given scope. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAtSubscriptionScope">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt; ListAtSubscriptionScope (string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Resources.Models.DeploymentExtended&gt; ListAtSubscriptionScope(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.ListAtSubscriptionScope(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListAtSubscriptionScope (Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DeploymentExtended)" />
      <MemberSignature Language="F#" Value="abstract member ListAtSubscriptionScope : string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&#xA;override this.ListAtSubscriptionScope : string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;" Usage="deploymentsOperations.ListAtSubscriptionScope (filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. </param>
        <param name="top"> The number of results to get. If null is passed, returns all deployments. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get all the deployments for a subscription. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAtSubscriptionScopeAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt; ListAtSubscriptionScopeAsync (string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Resources.Models.DeploymentExtended&gt; ListAtSubscriptionScopeAsync(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.ListAtSubscriptionScopeAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListAtSubscriptionScopeAsync (Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DeploymentExtended)" />
      <MemberSignature Language="F#" Value="abstract member ListAtSubscriptionScopeAsync : string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&#xA;override this.ListAtSubscriptionScopeAsync : string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;" Usage="deploymentsOperations.ListAtSubscriptionScopeAsync (filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. </param>
        <param name="top"> The number of results to get. If null is passed, returns all deployments. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get all the deployments for a subscription. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAtTenantScope">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt; ListAtTenantScope (string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Resources.Models.DeploymentExtended&gt; ListAtTenantScope(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.ListAtTenantScope(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListAtTenantScope (Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DeploymentExtended)" />
      <MemberSignature Language="F#" Value="abstract member ListAtTenantScope : string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&#xA;override this.ListAtTenantScope : string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;" Usage="deploymentsOperations.ListAtTenantScope (filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. </param>
        <param name="top"> The number of results to get. If null is passed, returns all deployments. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get all the deployments at the tenant scope. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAtTenantScopeAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt; ListAtTenantScopeAsync (string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Resources.Models.DeploymentExtended&gt; ListAtTenantScopeAsync(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.ListAtTenantScopeAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListAtTenantScopeAsync (Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DeploymentExtended)" />
      <MemberSignature Language="F#" Value="abstract member ListAtTenantScopeAsync : string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&#xA;override this.ListAtTenantScopeAsync : string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;" Usage="deploymentsOperations.ListAtTenantScopeAsync (filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. </param>
        <param name="top"> The number of results to get. If null is passed, returns all deployments. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get all the deployments at the tenant scope. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListByResourceGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt; ListByResourceGroup (string resourceGroupName, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Resources.Models.DeploymentExtended&gt; ListByResourceGroup(string resourceGroupName, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.ListByResourceGroup(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListByResourceGroup (resourceGroupName As String, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DeploymentExtended)" />
      <MemberSignature Language="F#" Value="abstract member ListByResourceGroup : string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&#xA;override this.ListByResourceGroup : string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;" Usage="deploymentsOperations.ListByResourceGroup (resourceGroupName, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group with the deployments to get. The name is case insensitive. </param>
        <param name="filter"> The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. </param>
        <param name="top"> The number of results to get. If null is passed, returns all deployments. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get all the deployments for a resource group. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListByResourceGroupAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt; ListByResourceGroupAsync (string resourceGroupName, string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Resources.Models.DeploymentExtended&gt; ListByResourceGroupAsync(string resourceGroupName, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.ListByResourceGroupAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListByResourceGroupAsync (resourceGroupName As String, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DeploymentExtended)" />
      <MemberSignature Language="F#" Value="abstract member ListByResourceGroupAsync : string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;&#xA;override this.ListByResourceGroupAsync : string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;" Usage="deploymentsOperations.ListByResourceGroupAsync (resourceGroupName, filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.DeploymentExtended&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group with the deployments to get. The name is case insensitive. </param>
        <param name="filter"> The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. </param>
        <param name="top"> The number of results to get. If null is passed, returns all deployments. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get all the deployments for a resource group. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCreateOrUpdate">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateOperation StartCreateOrUpdate (string resourceGroupName, string deploymentName, Azure.ResourceManager.Resources.Models.Deployment parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateOperation StartCreateOrUpdate(string resourceGroupName, string deploymentName, class Azure.ResourceManager.Resources.Models.Deployment parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartCreateOrUpdate(System.String,System.String,Azure.ResourceManager.Resources.Models.Deployment,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateOrUpdate (resourceGroupName As String, deploymentName As String, parameters As Deployment, Optional cancellationToken As CancellationToken = Nothing) As DeploymentsCreateOrUpdateOperation" />
      <MemberSignature Language="F#" Value="abstract member StartCreateOrUpdate : string * string * Azure.ResourceManager.Resources.Models.Deployment * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateOperation&#xA;override this.StartCreateOrUpdate : string * string * Azure.ResourceManager.Resources.Models.Deployment * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateOperation" Usage="deploymentsOperations.StartCreateOrUpdate (resourceGroupName, deploymentName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.Deployment" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group to deploy the resources to. The name is case insensitive. The resource group must already exist. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="parameters"> Additional parameters supplied to the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> You can provide the template and parameters directly in the request or link to JSON files. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateOperation&gt; StartCreateOrUpdateAsync (string resourceGroupName, string deploymentName, Azure.ResourceManager.Resources.Models.Deployment parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateOperation&gt; StartCreateOrUpdateAsync(string resourceGroupName, string deploymentName, class Azure.ResourceManager.Resources.Models.Deployment parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartCreateOrUpdateAsync(System.String,System.String,Azure.ResourceManager.Resources.Models.Deployment,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateOrUpdateAsync (resourceGroupName As String, deploymentName As String, parameters As Deployment, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DeploymentsCreateOrUpdateOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartCreateOrUpdateAsync : string * string * Azure.ResourceManager.Resources.Models.Deployment * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateOperation&gt;&#xA;override this.StartCreateOrUpdateAsync : string * string * Azure.ResourceManager.Resources.Models.Deployment * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateOperation&gt;" Usage="deploymentsOperations.StartCreateOrUpdateAsync (resourceGroupName, deploymentName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.Deployment" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group to deploy the resources to. The name is case insensitive. The resource group must already exist. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="parameters"> Additional parameters supplied to the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> You can provide the template and parameters directly in the request or link to JSON files. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCreateOrUpdateAtManagementGroupScope">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtManagementGroupScopeOperation StartCreateOrUpdateAtManagementGroupScope (string groupId, string deploymentName, Azure.ResourceManager.Resources.Models.ScopedDeployment parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtManagementGroupScopeOperation StartCreateOrUpdateAtManagementGroupScope(string groupId, string deploymentName, class Azure.ResourceManager.Resources.Models.ScopedDeployment parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartCreateOrUpdateAtManagementGroupScope(System.String,System.String,Azure.ResourceManager.Resources.Models.ScopedDeployment,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateOrUpdateAtManagementGroupScope (groupId As String, deploymentName As String, parameters As ScopedDeployment, Optional cancellationToken As CancellationToken = Nothing) As DeploymentsCreateOrUpdateAtManagementGroupScopeOperation" />
      <MemberSignature Language="F#" Value="abstract member StartCreateOrUpdateAtManagementGroupScope : string * string * Azure.ResourceManager.Resources.Models.ScopedDeployment * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtManagementGroupScopeOperation&#xA;override this.StartCreateOrUpdateAtManagementGroupScope : string * string * Azure.ResourceManager.Resources.Models.ScopedDeployment * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtManagementGroupScopeOperation" Usage="deploymentsOperations.StartCreateOrUpdateAtManagementGroupScope (groupId, deploymentName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtManagementGroupScopeOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.ScopedDeployment" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupId"> The management group ID. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="parameters"> Additional parameters supplied to the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> You can provide the template and parameters directly in the request or link to JSON files. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCreateOrUpdateAtManagementGroupScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtManagementGroupScopeOperation&gt; StartCreateOrUpdateAtManagementGroupScopeAsync (string groupId, string deploymentName, Azure.ResourceManager.Resources.Models.ScopedDeployment parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtManagementGroupScopeOperation&gt; StartCreateOrUpdateAtManagementGroupScopeAsync(string groupId, string deploymentName, class Azure.ResourceManager.Resources.Models.ScopedDeployment parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartCreateOrUpdateAtManagementGroupScopeAsync(System.String,System.String,Azure.ResourceManager.Resources.Models.ScopedDeployment,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateOrUpdateAtManagementGroupScopeAsync (groupId As String, deploymentName As String, parameters As ScopedDeployment, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DeploymentsCreateOrUpdateAtManagementGroupScopeOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartCreateOrUpdateAtManagementGroupScopeAsync : string * string * Azure.ResourceManager.Resources.Models.ScopedDeployment * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtManagementGroupScopeOperation&gt;&#xA;override this.StartCreateOrUpdateAtManagementGroupScopeAsync : string * string * Azure.ResourceManager.Resources.Models.ScopedDeployment * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtManagementGroupScopeOperation&gt;" Usage="deploymentsOperations.StartCreateOrUpdateAtManagementGroupScopeAsync (groupId, deploymentName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtManagementGroupScopeOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.ScopedDeployment" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupId"> The management group ID. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="parameters"> Additional parameters supplied to the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> You can provide the template and parameters directly in the request or link to JSON files. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCreateOrUpdateAtScope">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtScopeOperation StartCreateOrUpdateAtScope (string scope, string deploymentName, Azure.ResourceManager.Resources.Models.Deployment parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtScopeOperation StartCreateOrUpdateAtScope(string scope, string deploymentName, class Azure.ResourceManager.Resources.Models.Deployment parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartCreateOrUpdateAtScope(System.String,System.String,Azure.ResourceManager.Resources.Models.Deployment,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateOrUpdateAtScope (scope As String, deploymentName As String, parameters As Deployment, Optional cancellationToken As CancellationToken = Nothing) As DeploymentsCreateOrUpdateAtScopeOperation" />
      <MemberSignature Language="F#" Value="abstract member StartCreateOrUpdateAtScope : string * string * Azure.ResourceManager.Resources.Models.Deployment * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtScopeOperation&#xA;override this.StartCreateOrUpdateAtScope : string * string * Azure.ResourceManager.Resources.Models.Deployment * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtScopeOperation" Usage="deploymentsOperations.StartCreateOrUpdateAtScope (scope, deploymentName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtScopeOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.Deployment" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The resource scope. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="parameters"> Additional parameters supplied to the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> You can provide the template and parameters directly in the request or link to JSON files. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCreateOrUpdateAtScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtScopeOperation&gt; StartCreateOrUpdateAtScopeAsync (string scope, string deploymentName, Azure.ResourceManager.Resources.Models.Deployment parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtScopeOperation&gt; StartCreateOrUpdateAtScopeAsync(string scope, string deploymentName, class Azure.ResourceManager.Resources.Models.Deployment parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartCreateOrUpdateAtScopeAsync(System.String,System.String,Azure.ResourceManager.Resources.Models.Deployment,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateOrUpdateAtScopeAsync (scope As String, deploymentName As String, parameters As Deployment, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DeploymentsCreateOrUpdateAtScopeOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartCreateOrUpdateAtScopeAsync : string * string * Azure.ResourceManager.Resources.Models.Deployment * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtScopeOperation&gt;&#xA;override this.StartCreateOrUpdateAtScopeAsync : string * string * Azure.ResourceManager.Resources.Models.Deployment * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtScopeOperation&gt;" Usage="deploymentsOperations.StartCreateOrUpdateAtScopeAsync (scope, deploymentName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtScopeOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.Deployment" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The resource scope. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="parameters"> Additional parameters supplied to the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> You can provide the template and parameters directly in the request or link to JSON files. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCreateOrUpdateAtSubscriptionScope">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtSubscriptionScopeOperation StartCreateOrUpdateAtSubscriptionScope (string deploymentName, Azure.ResourceManager.Resources.Models.Deployment parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtSubscriptionScopeOperation StartCreateOrUpdateAtSubscriptionScope(string deploymentName, class Azure.ResourceManager.Resources.Models.Deployment parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartCreateOrUpdateAtSubscriptionScope(System.String,Azure.ResourceManager.Resources.Models.Deployment,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateOrUpdateAtSubscriptionScope (deploymentName As String, parameters As Deployment, Optional cancellationToken As CancellationToken = Nothing) As DeploymentsCreateOrUpdateAtSubscriptionScopeOperation" />
      <MemberSignature Language="F#" Value="abstract member StartCreateOrUpdateAtSubscriptionScope : string * Azure.ResourceManager.Resources.Models.Deployment * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtSubscriptionScopeOperation&#xA;override this.StartCreateOrUpdateAtSubscriptionScope : string * Azure.ResourceManager.Resources.Models.Deployment * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtSubscriptionScopeOperation" Usage="deploymentsOperations.StartCreateOrUpdateAtSubscriptionScope (deploymentName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtSubscriptionScopeOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.Deployment" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="parameters"> Additional parameters supplied to the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> You can provide the template and parameters directly in the request or link to JSON files. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCreateOrUpdateAtSubscriptionScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtSubscriptionScopeOperation&gt; StartCreateOrUpdateAtSubscriptionScopeAsync (string deploymentName, Azure.ResourceManager.Resources.Models.Deployment parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtSubscriptionScopeOperation&gt; StartCreateOrUpdateAtSubscriptionScopeAsync(string deploymentName, class Azure.ResourceManager.Resources.Models.Deployment parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartCreateOrUpdateAtSubscriptionScopeAsync(System.String,Azure.ResourceManager.Resources.Models.Deployment,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateOrUpdateAtSubscriptionScopeAsync (deploymentName As String, parameters As Deployment, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DeploymentsCreateOrUpdateAtSubscriptionScopeOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartCreateOrUpdateAtSubscriptionScopeAsync : string * Azure.ResourceManager.Resources.Models.Deployment * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtSubscriptionScopeOperation&gt;&#xA;override this.StartCreateOrUpdateAtSubscriptionScopeAsync : string * Azure.ResourceManager.Resources.Models.Deployment * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtSubscriptionScopeOperation&gt;" Usage="deploymentsOperations.StartCreateOrUpdateAtSubscriptionScopeAsync (deploymentName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtSubscriptionScopeOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.Deployment" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="parameters"> Additional parameters supplied to the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> You can provide the template and parameters directly in the request or link to JSON files. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCreateOrUpdateAtTenantScope">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtTenantScopeOperation StartCreateOrUpdateAtTenantScope (string deploymentName, Azure.ResourceManager.Resources.Models.ScopedDeployment parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtTenantScopeOperation StartCreateOrUpdateAtTenantScope(string deploymentName, class Azure.ResourceManager.Resources.Models.ScopedDeployment parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartCreateOrUpdateAtTenantScope(System.String,Azure.ResourceManager.Resources.Models.ScopedDeployment,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateOrUpdateAtTenantScope (deploymentName As String, parameters As ScopedDeployment, Optional cancellationToken As CancellationToken = Nothing) As DeploymentsCreateOrUpdateAtTenantScopeOperation" />
      <MemberSignature Language="F#" Value="abstract member StartCreateOrUpdateAtTenantScope : string * Azure.ResourceManager.Resources.Models.ScopedDeployment * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtTenantScopeOperation&#xA;override this.StartCreateOrUpdateAtTenantScope : string * Azure.ResourceManager.Resources.Models.ScopedDeployment * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtTenantScopeOperation" Usage="deploymentsOperations.StartCreateOrUpdateAtTenantScope (deploymentName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtTenantScopeOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.ScopedDeployment" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="parameters"> Additional parameters supplied to the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> You can provide the template and parameters directly in the request or link to JSON files. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCreateOrUpdateAtTenantScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtTenantScopeOperation&gt; StartCreateOrUpdateAtTenantScopeAsync (string deploymentName, Azure.ResourceManager.Resources.Models.ScopedDeployment parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtTenantScopeOperation&gt; StartCreateOrUpdateAtTenantScopeAsync(string deploymentName, class Azure.ResourceManager.Resources.Models.ScopedDeployment parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartCreateOrUpdateAtTenantScopeAsync(System.String,Azure.ResourceManager.Resources.Models.ScopedDeployment,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateOrUpdateAtTenantScopeAsync (deploymentName As String, parameters As ScopedDeployment, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DeploymentsCreateOrUpdateAtTenantScopeOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartCreateOrUpdateAtTenantScopeAsync : string * Azure.ResourceManager.Resources.Models.ScopedDeployment * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtTenantScopeOperation&gt;&#xA;override this.StartCreateOrUpdateAtTenantScopeAsync : string * Azure.ResourceManager.Resources.Models.ScopedDeployment * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtTenantScopeOperation&gt;" Usage="deploymentsOperations.StartCreateOrUpdateAtTenantScopeAsync (deploymentName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsCreateOrUpdateAtTenantScopeOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.ScopedDeployment" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="parameters"> Additional parameters supplied to the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> You can provide the template and parameters directly in the request or link to JSON files. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartDelete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.DeploymentsDeleteOperation StartDelete (string resourceGroupName, string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.DeploymentsDeleteOperation StartDelete(string resourceGroupName, string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartDelete(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDelete (resourceGroupName As String, deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As DeploymentsDeleteOperation" />
      <MemberSignature Language="F#" Value="abstract member StartDelete : string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsDeleteOperation&#xA;override this.StartDelete : string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsDeleteOperation" Usage="deploymentsOperations.StartDelete (resourceGroupName, deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.DeploymentsDeleteOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group with the deployment to delete. The name is case insensitive. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. Deleting a template deployment does not affect the state of the resource group. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartDeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsDeleteOperation&gt; StartDeleteAsync (string resourceGroupName, string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Resources.DeploymentsDeleteOperation&gt; StartDeleteAsync(string resourceGroupName, string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartDeleteAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDeleteAsync (resourceGroupName As String, deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DeploymentsDeleteOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartDeleteAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsDeleteOperation&gt;&#xA;override this.StartDeleteAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsDeleteOperation&gt;" Usage="deploymentsOperations.StartDeleteAsync (resourceGroupName, deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsDeleteOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group with the deployment to delete. The name is case insensitive. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. Deleting a template deployment does not affect the state of the resource group. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartDeleteAtManagementGroupScope">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.DeploymentsDeleteAtManagementGroupScopeOperation StartDeleteAtManagementGroupScope (string groupId, string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.DeploymentsDeleteAtManagementGroupScopeOperation StartDeleteAtManagementGroupScope(string groupId, string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartDeleteAtManagementGroupScope(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDeleteAtManagementGroupScope (groupId As String, deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As DeploymentsDeleteAtManagementGroupScopeOperation" />
      <MemberSignature Language="F#" Value="abstract member StartDeleteAtManagementGroupScope : string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsDeleteAtManagementGroupScopeOperation&#xA;override this.StartDeleteAtManagementGroupScope : string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsDeleteAtManagementGroupScopeOperation" Usage="deploymentsOperations.StartDeleteAtManagementGroupScope (groupId, deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.DeploymentsDeleteAtManagementGroupScopeOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupId"> The management group ID. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartDeleteAtManagementGroupScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsDeleteAtManagementGroupScopeOperation&gt; StartDeleteAtManagementGroupScopeAsync (string groupId, string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Resources.DeploymentsDeleteAtManagementGroupScopeOperation&gt; StartDeleteAtManagementGroupScopeAsync(string groupId, string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartDeleteAtManagementGroupScopeAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDeleteAtManagementGroupScopeAsync (groupId As String, deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DeploymentsDeleteAtManagementGroupScopeOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartDeleteAtManagementGroupScopeAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsDeleteAtManagementGroupScopeOperation&gt;&#xA;override this.StartDeleteAtManagementGroupScopeAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsDeleteAtManagementGroupScopeOperation&gt;" Usage="deploymentsOperations.StartDeleteAtManagementGroupScopeAsync (groupId, deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsDeleteAtManagementGroupScopeOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupId"> The management group ID. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartDeleteAtScope">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.DeploymentsDeleteAtScopeOperation StartDeleteAtScope (string scope, string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.DeploymentsDeleteAtScopeOperation StartDeleteAtScope(string scope, string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartDeleteAtScope(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDeleteAtScope (scope As String, deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As DeploymentsDeleteAtScopeOperation" />
      <MemberSignature Language="F#" Value="abstract member StartDeleteAtScope : string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsDeleteAtScopeOperation&#xA;override this.StartDeleteAtScope : string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsDeleteAtScopeOperation" Usage="deploymentsOperations.StartDeleteAtScope (scope, deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.DeploymentsDeleteAtScopeOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The resource scope. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartDeleteAtScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsDeleteAtScopeOperation&gt; StartDeleteAtScopeAsync (string scope, string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Resources.DeploymentsDeleteAtScopeOperation&gt; StartDeleteAtScopeAsync(string scope, string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartDeleteAtScopeAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDeleteAtScopeAsync (scope As String, deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DeploymentsDeleteAtScopeOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartDeleteAtScopeAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsDeleteAtScopeOperation&gt;&#xA;override this.StartDeleteAtScopeAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsDeleteAtScopeOperation&gt;" Usage="deploymentsOperations.StartDeleteAtScopeAsync (scope, deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsDeleteAtScopeOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The resource scope. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartDeleteAtSubscriptionScope">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.DeploymentsDeleteAtSubscriptionScopeOperation StartDeleteAtSubscriptionScope (string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.DeploymentsDeleteAtSubscriptionScopeOperation StartDeleteAtSubscriptionScope(string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartDeleteAtSubscriptionScope(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDeleteAtSubscriptionScope (deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As DeploymentsDeleteAtSubscriptionScopeOperation" />
      <MemberSignature Language="F#" Value="abstract member StartDeleteAtSubscriptionScope : string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsDeleteAtSubscriptionScopeOperation&#xA;override this.StartDeleteAtSubscriptionScope : string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsDeleteAtSubscriptionScopeOperation" Usage="deploymentsOperations.StartDeleteAtSubscriptionScope (deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.DeploymentsDeleteAtSubscriptionScopeOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartDeleteAtSubscriptionScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsDeleteAtSubscriptionScopeOperation&gt; StartDeleteAtSubscriptionScopeAsync (string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Resources.DeploymentsDeleteAtSubscriptionScopeOperation&gt; StartDeleteAtSubscriptionScopeAsync(string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartDeleteAtSubscriptionScopeAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDeleteAtSubscriptionScopeAsync (deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DeploymentsDeleteAtSubscriptionScopeOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartDeleteAtSubscriptionScopeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsDeleteAtSubscriptionScopeOperation&gt;&#xA;override this.StartDeleteAtSubscriptionScopeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsDeleteAtSubscriptionScopeOperation&gt;" Usage="deploymentsOperations.StartDeleteAtSubscriptionScopeAsync (deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsDeleteAtSubscriptionScopeOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartDeleteAtTenantScope">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.DeploymentsDeleteAtTenantScopeOperation StartDeleteAtTenantScope (string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.DeploymentsDeleteAtTenantScopeOperation StartDeleteAtTenantScope(string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartDeleteAtTenantScope(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDeleteAtTenantScope (deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As DeploymentsDeleteAtTenantScopeOperation" />
      <MemberSignature Language="F#" Value="abstract member StartDeleteAtTenantScope : string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsDeleteAtTenantScopeOperation&#xA;override this.StartDeleteAtTenantScope : string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsDeleteAtTenantScopeOperation" Usage="deploymentsOperations.StartDeleteAtTenantScope (deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.DeploymentsDeleteAtTenantScopeOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartDeleteAtTenantScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsDeleteAtTenantScopeOperation&gt; StartDeleteAtTenantScopeAsync (string deploymentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Resources.DeploymentsDeleteAtTenantScopeOperation&gt; StartDeleteAtTenantScopeAsync(string deploymentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartDeleteAtTenantScopeAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDeleteAtTenantScopeAsync (deploymentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DeploymentsDeleteAtTenantScopeOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartDeleteAtTenantScopeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsDeleteAtTenantScopeOperation&gt;&#xA;override this.StartDeleteAtTenantScopeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsDeleteAtTenantScopeOperation&gt;" Usage="deploymentsOperations.StartDeleteAtTenantScopeAsync (deploymentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsDeleteAtTenantScopeOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartValidate">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.DeploymentsValidateOperation StartValidate (string resourceGroupName, string deploymentName, Azure.ResourceManager.Resources.Models.Deployment parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.DeploymentsValidateOperation StartValidate(string resourceGroupName, string deploymentName, class Azure.ResourceManager.Resources.Models.Deployment parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartValidate(System.String,System.String,Azure.ResourceManager.Resources.Models.Deployment,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartValidate (resourceGroupName As String, deploymentName As String, parameters As Deployment, Optional cancellationToken As CancellationToken = Nothing) As DeploymentsValidateOperation" />
      <MemberSignature Language="F#" Value="abstract member StartValidate : string * string * Azure.ResourceManager.Resources.Models.Deployment * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsValidateOperation&#xA;override this.StartValidate : string * string * Azure.ResourceManager.Resources.Models.Deployment * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsValidateOperation" Usage="deploymentsOperations.StartValidate (resourceGroupName, deploymentName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.DeploymentsValidateOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.Deployment" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group the template will be deployed to. The name is case insensitive. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="parameters"> Parameters to validate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartValidateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsValidateOperation&gt; StartValidateAsync (string resourceGroupName, string deploymentName, Azure.ResourceManager.Resources.Models.Deployment parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Resources.DeploymentsValidateOperation&gt; StartValidateAsync(string resourceGroupName, string deploymentName, class Azure.ResourceManager.Resources.Models.Deployment parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartValidateAsync(System.String,System.String,Azure.ResourceManager.Resources.Models.Deployment,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartValidateAsync (resourceGroupName As String, deploymentName As String, parameters As Deployment, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DeploymentsValidateOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartValidateAsync : string * string * Azure.ResourceManager.Resources.Models.Deployment * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsValidateOperation&gt;&#xA;override this.StartValidateAsync : string * string * Azure.ResourceManager.Resources.Models.Deployment * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsValidateOperation&gt;" Usage="deploymentsOperations.StartValidateAsync (resourceGroupName, deploymentName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsValidateOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.Deployment" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group the template will be deployed to. The name is case insensitive. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="parameters"> Parameters to validate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartValidateAtManagementGroupScope">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.DeploymentsValidateAtManagementGroupScopeOperation StartValidateAtManagementGroupScope (string groupId, string deploymentName, Azure.ResourceManager.Resources.Models.ScopedDeployment parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.DeploymentsValidateAtManagementGroupScopeOperation StartValidateAtManagementGroupScope(string groupId, string deploymentName, class Azure.ResourceManager.Resources.Models.ScopedDeployment parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartValidateAtManagementGroupScope(System.String,System.String,Azure.ResourceManager.Resources.Models.ScopedDeployment,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartValidateAtManagementGroupScope (groupId As String, deploymentName As String, parameters As ScopedDeployment, Optional cancellationToken As CancellationToken = Nothing) As DeploymentsValidateAtManagementGroupScopeOperation" />
      <MemberSignature Language="F#" Value="abstract member StartValidateAtManagementGroupScope : string * string * Azure.ResourceManager.Resources.Models.ScopedDeployment * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsValidateAtManagementGroupScopeOperation&#xA;override this.StartValidateAtManagementGroupScope : string * string * Azure.ResourceManager.Resources.Models.ScopedDeployment * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsValidateAtManagementGroupScopeOperation" Usage="deploymentsOperations.StartValidateAtManagementGroupScope (groupId, deploymentName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.DeploymentsValidateAtManagementGroupScopeOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.ScopedDeployment" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupId"> The management group ID. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="parameters"> Parameters to validate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartValidateAtManagementGroupScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsValidateAtManagementGroupScopeOperation&gt; StartValidateAtManagementGroupScopeAsync (string groupId, string deploymentName, Azure.ResourceManager.Resources.Models.ScopedDeployment parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Resources.DeploymentsValidateAtManagementGroupScopeOperation&gt; StartValidateAtManagementGroupScopeAsync(string groupId, string deploymentName, class Azure.ResourceManager.Resources.Models.ScopedDeployment parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartValidateAtManagementGroupScopeAsync(System.String,System.String,Azure.ResourceManager.Resources.Models.ScopedDeployment,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartValidateAtManagementGroupScopeAsync (groupId As String, deploymentName As String, parameters As ScopedDeployment, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DeploymentsValidateAtManagementGroupScopeOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartValidateAtManagementGroupScopeAsync : string * string * Azure.ResourceManager.Resources.Models.ScopedDeployment * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsValidateAtManagementGroupScopeOperation&gt;&#xA;override this.StartValidateAtManagementGroupScopeAsync : string * string * Azure.ResourceManager.Resources.Models.ScopedDeployment * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsValidateAtManagementGroupScopeOperation&gt;" Usage="deploymentsOperations.StartValidateAtManagementGroupScopeAsync (groupId, deploymentName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsValidateAtManagementGroupScopeOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.ScopedDeployment" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupId"> The management group ID. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="parameters"> Parameters to validate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartValidateAtScope">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.DeploymentsValidateAtScopeOperation StartValidateAtScope (string scope, string deploymentName, Azure.ResourceManager.Resources.Models.Deployment parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.DeploymentsValidateAtScopeOperation StartValidateAtScope(string scope, string deploymentName, class Azure.ResourceManager.Resources.Models.Deployment parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartValidateAtScope(System.String,System.String,Azure.ResourceManager.Resources.Models.Deployment,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartValidateAtScope (scope As String, deploymentName As String, parameters As Deployment, Optional cancellationToken As CancellationToken = Nothing) As DeploymentsValidateAtScopeOperation" />
      <MemberSignature Language="F#" Value="abstract member StartValidateAtScope : string * string * Azure.ResourceManager.Resources.Models.Deployment * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsValidateAtScopeOperation&#xA;override this.StartValidateAtScope : string * string * Azure.ResourceManager.Resources.Models.Deployment * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsValidateAtScopeOperation" Usage="deploymentsOperations.StartValidateAtScope (scope, deploymentName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.DeploymentsValidateAtScopeOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.Deployment" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The resource scope. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="parameters"> Parameters to validate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartValidateAtScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsValidateAtScopeOperation&gt; StartValidateAtScopeAsync (string scope, string deploymentName, Azure.ResourceManager.Resources.Models.Deployment parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Resources.DeploymentsValidateAtScopeOperation&gt; StartValidateAtScopeAsync(string scope, string deploymentName, class Azure.ResourceManager.Resources.Models.Deployment parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartValidateAtScopeAsync(System.String,System.String,Azure.ResourceManager.Resources.Models.Deployment,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartValidateAtScopeAsync (scope As String, deploymentName As String, parameters As Deployment, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DeploymentsValidateAtScopeOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartValidateAtScopeAsync : string * string * Azure.ResourceManager.Resources.Models.Deployment * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsValidateAtScopeOperation&gt;&#xA;override this.StartValidateAtScopeAsync : string * string * Azure.ResourceManager.Resources.Models.Deployment * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsValidateAtScopeOperation&gt;" Usage="deploymentsOperations.StartValidateAtScopeAsync (scope, deploymentName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsValidateAtScopeOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.Deployment" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The resource scope. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="parameters"> Parameters to validate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartValidateAtSubscriptionScope">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.DeploymentsValidateAtSubscriptionScopeOperation StartValidateAtSubscriptionScope (string deploymentName, Azure.ResourceManager.Resources.Models.Deployment parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.DeploymentsValidateAtSubscriptionScopeOperation StartValidateAtSubscriptionScope(string deploymentName, class Azure.ResourceManager.Resources.Models.Deployment parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartValidateAtSubscriptionScope(System.String,Azure.ResourceManager.Resources.Models.Deployment,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartValidateAtSubscriptionScope (deploymentName As String, parameters As Deployment, Optional cancellationToken As CancellationToken = Nothing) As DeploymentsValidateAtSubscriptionScopeOperation" />
      <MemberSignature Language="F#" Value="abstract member StartValidateAtSubscriptionScope : string * Azure.ResourceManager.Resources.Models.Deployment * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsValidateAtSubscriptionScopeOperation&#xA;override this.StartValidateAtSubscriptionScope : string * Azure.ResourceManager.Resources.Models.Deployment * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsValidateAtSubscriptionScopeOperation" Usage="deploymentsOperations.StartValidateAtSubscriptionScope (deploymentName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.DeploymentsValidateAtSubscriptionScopeOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.Deployment" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="parameters"> Parameters to validate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartValidateAtSubscriptionScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsValidateAtSubscriptionScopeOperation&gt; StartValidateAtSubscriptionScopeAsync (string deploymentName, Azure.ResourceManager.Resources.Models.Deployment parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Resources.DeploymentsValidateAtSubscriptionScopeOperation&gt; StartValidateAtSubscriptionScopeAsync(string deploymentName, class Azure.ResourceManager.Resources.Models.Deployment parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartValidateAtSubscriptionScopeAsync(System.String,Azure.ResourceManager.Resources.Models.Deployment,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartValidateAtSubscriptionScopeAsync (deploymentName As String, parameters As Deployment, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DeploymentsValidateAtSubscriptionScopeOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartValidateAtSubscriptionScopeAsync : string * Azure.ResourceManager.Resources.Models.Deployment * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsValidateAtSubscriptionScopeOperation&gt;&#xA;override this.StartValidateAtSubscriptionScopeAsync : string * Azure.ResourceManager.Resources.Models.Deployment * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsValidateAtSubscriptionScopeOperation&gt;" Usage="deploymentsOperations.StartValidateAtSubscriptionScopeAsync (deploymentName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsValidateAtSubscriptionScopeOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.Deployment" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="parameters"> Parameters to validate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartValidateAtTenantScope">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.DeploymentsValidateAtTenantScopeOperation StartValidateAtTenantScope (string deploymentName, Azure.ResourceManager.Resources.Models.ScopedDeployment parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.DeploymentsValidateAtTenantScopeOperation StartValidateAtTenantScope(string deploymentName, class Azure.ResourceManager.Resources.Models.ScopedDeployment parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartValidateAtTenantScope(System.String,Azure.ResourceManager.Resources.Models.ScopedDeployment,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartValidateAtTenantScope (deploymentName As String, parameters As ScopedDeployment, Optional cancellationToken As CancellationToken = Nothing) As DeploymentsValidateAtTenantScopeOperation" />
      <MemberSignature Language="F#" Value="abstract member StartValidateAtTenantScope : string * Azure.ResourceManager.Resources.Models.ScopedDeployment * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsValidateAtTenantScopeOperation&#xA;override this.StartValidateAtTenantScope : string * Azure.ResourceManager.Resources.Models.ScopedDeployment * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsValidateAtTenantScopeOperation" Usage="deploymentsOperations.StartValidateAtTenantScope (deploymentName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.DeploymentsValidateAtTenantScopeOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.ScopedDeployment" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="parameters"> Parameters to validate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartValidateAtTenantScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsValidateAtTenantScopeOperation&gt; StartValidateAtTenantScopeAsync (string deploymentName, Azure.ResourceManager.Resources.Models.ScopedDeployment parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Resources.DeploymentsValidateAtTenantScopeOperation&gt; StartValidateAtTenantScopeAsync(string deploymentName, class Azure.ResourceManager.Resources.Models.ScopedDeployment parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartValidateAtTenantScopeAsync(System.String,Azure.ResourceManager.Resources.Models.ScopedDeployment,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartValidateAtTenantScopeAsync (deploymentName As String, parameters As ScopedDeployment, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DeploymentsValidateAtTenantScopeOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartValidateAtTenantScopeAsync : string * Azure.ResourceManager.Resources.Models.ScopedDeployment * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsValidateAtTenantScopeOperation&gt;&#xA;override this.StartValidateAtTenantScopeAsync : string * Azure.ResourceManager.Resources.Models.ScopedDeployment * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsValidateAtTenantScopeOperation&gt;" Usage="deploymentsOperations.StartValidateAtTenantScopeAsync (deploymentName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsValidateAtTenantScopeOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.ScopedDeployment" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="parameters"> Parameters to validate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartWhatIf">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.DeploymentsWhatIfOperation StartWhatIf (string resourceGroupName, string deploymentName, Azure.ResourceManager.Resources.Models.DeploymentWhatIf parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.DeploymentsWhatIfOperation StartWhatIf(string resourceGroupName, string deploymentName, class Azure.ResourceManager.Resources.Models.DeploymentWhatIf parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartWhatIf(System.String,System.String,Azure.ResourceManager.Resources.Models.DeploymentWhatIf,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartWhatIf (resourceGroupName As String, deploymentName As String, parameters As DeploymentWhatIf, Optional cancellationToken As CancellationToken = Nothing) As DeploymentsWhatIfOperation" />
      <MemberSignature Language="F#" Value="abstract member StartWhatIf : string * string * Azure.ResourceManager.Resources.Models.DeploymentWhatIf * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsWhatIfOperation&#xA;override this.StartWhatIf : string * string * Azure.ResourceManager.Resources.Models.DeploymentWhatIf * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsWhatIfOperation" Usage="deploymentsOperations.StartWhatIf (resourceGroupName, deploymentName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.DeploymentsWhatIfOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.DeploymentWhatIf" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group the template will be deployed to. The name is case insensitive. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="parameters"> Parameters to validate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Returns changes that will be made by the deployment if executed at the scope of the resource group. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartWhatIfAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsWhatIfOperation&gt; StartWhatIfAsync (string resourceGroupName, string deploymentName, Azure.ResourceManager.Resources.Models.DeploymentWhatIf parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Resources.DeploymentsWhatIfOperation&gt; StartWhatIfAsync(string resourceGroupName, string deploymentName, class Azure.ResourceManager.Resources.Models.DeploymentWhatIf parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartWhatIfAsync(System.String,System.String,Azure.ResourceManager.Resources.Models.DeploymentWhatIf,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartWhatIfAsync (resourceGroupName As String, deploymentName As String, parameters As DeploymentWhatIf, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DeploymentsWhatIfOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartWhatIfAsync : string * string * Azure.ResourceManager.Resources.Models.DeploymentWhatIf * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsWhatIfOperation&gt;&#xA;override this.StartWhatIfAsync : string * string * Azure.ResourceManager.Resources.Models.DeploymentWhatIf * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsWhatIfOperation&gt;" Usage="deploymentsOperations.StartWhatIfAsync (resourceGroupName, deploymentName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsWhatIfOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.DeploymentWhatIf" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group the template will be deployed to. The name is case insensitive. </param>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="parameters"> Parameters to validate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Returns changes that will be made by the deployment if executed at the scope of the resource group. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartWhatIfAtSubscriptionScope">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.DeploymentsWhatIfAtSubscriptionScopeOperation StartWhatIfAtSubscriptionScope (string deploymentName, Azure.ResourceManager.Resources.Models.DeploymentWhatIf parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.DeploymentsWhatIfAtSubscriptionScopeOperation StartWhatIfAtSubscriptionScope(string deploymentName, class Azure.ResourceManager.Resources.Models.DeploymentWhatIf parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartWhatIfAtSubscriptionScope(System.String,Azure.ResourceManager.Resources.Models.DeploymentWhatIf,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartWhatIfAtSubscriptionScope (deploymentName As String, parameters As DeploymentWhatIf, Optional cancellationToken As CancellationToken = Nothing) As DeploymentsWhatIfAtSubscriptionScopeOperation" />
      <MemberSignature Language="F#" Value="abstract member StartWhatIfAtSubscriptionScope : string * Azure.ResourceManager.Resources.Models.DeploymentWhatIf * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsWhatIfAtSubscriptionScopeOperation&#xA;override this.StartWhatIfAtSubscriptionScope : string * Azure.ResourceManager.Resources.Models.DeploymentWhatIf * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.DeploymentsWhatIfAtSubscriptionScopeOperation" Usage="deploymentsOperations.StartWhatIfAtSubscriptionScope (deploymentName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.DeploymentsWhatIfAtSubscriptionScopeOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.DeploymentWhatIf" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="parameters"> Parameters to What If. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Returns changes that will be made by the deployment if executed at the scope of the subscription. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartWhatIfAtSubscriptionScopeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsWhatIfAtSubscriptionScopeOperation&gt; StartWhatIfAtSubscriptionScopeAsync (string deploymentName, Azure.ResourceManager.Resources.Models.DeploymentWhatIf parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Resources.DeploymentsWhatIfAtSubscriptionScopeOperation&gt; StartWhatIfAtSubscriptionScopeAsync(string deploymentName, class Azure.ResourceManager.Resources.Models.DeploymentWhatIf parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.DeploymentsOperations.StartWhatIfAtSubscriptionScopeAsync(System.String,Azure.ResourceManager.Resources.Models.DeploymentWhatIf,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartWhatIfAtSubscriptionScopeAsync (deploymentName As String, parameters As DeploymentWhatIf, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DeploymentsWhatIfAtSubscriptionScopeOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartWhatIfAtSubscriptionScopeAsync : string * Azure.ResourceManager.Resources.Models.DeploymentWhatIf * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsWhatIfAtSubscriptionScopeOperation&gt;&#xA;override this.StartWhatIfAtSubscriptionScopeAsync : string * Azure.ResourceManager.Resources.Models.DeploymentWhatIf * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsWhatIfAtSubscriptionScopeOperation&gt;" Usage="deploymentsOperations.StartWhatIfAtSubscriptionScopeAsync (deploymentName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Resources</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.DeploymentsWhatIfAtSubscriptionScopeOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deploymentName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Resources.Models.DeploymentWhatIf" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deploymentName"> The name of the deployment. </param>
        <param name="parameters"> Parameters to What If. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Returns changes that will be made by the deployment if executed at the scope of the subscription. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
