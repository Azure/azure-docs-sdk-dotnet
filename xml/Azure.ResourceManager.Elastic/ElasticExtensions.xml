<Type Name="ElasticExtensions" FullName="Azure.ResourceManager.Elastic.ElasticExtensions">
  <TypeSignature Language="C#" Value="public static class ElasticExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ElasticExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Elastic.ElasticExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ElasticExtensions" />
  <TypeSignature Language="F#" Value="type ElasticExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Elastic</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.Elastic. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetApiKey">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Elastic.Models.ElasticUserApiKeyResult&gt; GetApiKey (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.Elastic.Models.ElasticUserEmailId body = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Elastic.Models.ElasticUserApiKeyResult&gt; GetApiKey(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.Elastic.Models.ElasticUserEmailId body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Elastic.ElasticExtensions.GetApiKey(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.Elastic.Models.ElasticUserEmailId,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetApiKey (subscriptionResource As SubscriptionResource, Optional body As ElasticUserEmailId = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ElasticUserApiKeyResult)" />
      <MemberSignature Language="F#" Value="static member GetApiKey : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.Elastic.Models.ElasticUserEmailId * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Elastic.Models.ElasticUserApiKeyResult&gt;" Usage="Azure.ResourceManager.Elastic.ElasticExtensions.GetApiKey (subscriptionResource, body, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Elastic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Elastic.Models.ElasticUserApiKeyResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="body" Type="Azure.ResourceManager.Elastic.Models.ElasticUserEmailId" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="body"> Email Id parameter of the User Organization, of which the API Key must be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Fetch User API Key from internal database, if it was generated and stored while creating the Elasticsearch Organization.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Elastic/getOrganizationApiKey</description></item><item><term>Operation Id</term><description>Organizations_GetApiKey</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Elastic.Mocking.MockableElasticSubscriptionResource.GetApiKey(Azure.ResourceManager.Elastic.Models.ElasticUserEmailId,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiKeyAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Elastic.Models.ElasticUserApiKeyResult&gt;&gt; GetApiKeyAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.Elastic.Models.ElasticUserEmailId body = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Elastic.Models.ElasticUserApiKeyResult&gt;&gt; GetApiKeyAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.Elastic.Models.ElasticUserEmailId body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Elastic.ElasticExtensions.GetApiKeyAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.Elastic.Models.ElasticUserEmailId,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetApiKeyAsync (subscriptionResource As SubscriptionResource, Optional body As ElasticUserEmailId = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ElasticUserApiKeyResult))" />
      <MemberSignature Language="F#" Value="static member GetApiKeyAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.Elastic.Models.ElasticUserEmailId * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Elastic.Models.ElasticUserApiKeyResult&gt;&gt;" Usage="Azure.ResourceManager.Elastic.ElasticExtensions.GetApiKeyAsync (subscriptionResource, body, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Elastic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Elastic.Models.ElasticUserApiKeyResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="body" Type="Azure.ResourceManager.Elastic.Models.ElasticUserEmailId" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="body"> Email Id parameter of the User Organization, of which the API Key must be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Fetch User API Key from internal database, if it was generated and stored while creating the Elasticsearch Organization.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Elastic/getOrganizationApiKey</description></item><item><term>Operation Id</term><description>Organizations_GetApiKey</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Elastic.Mocking.MockableElasticSubscriptionResource.GetApiKey(Azure.ResourceManager.Elastic.Models.ElasticUserEmailId,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetElasticMonitor">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Elastic.ElasticMonitorResource&gt; GetElasticMonitor (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string monitorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Elastic.ElasticMonitorResource&gt; GetElasticMonitor(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string monitorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Elastic.ElasticExtensions.GetElasticMonitor(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetElasticMonitor (resourceGroupResource As ResourceGroupResource, monitorName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ElasticMonitorResource)" />
      <MemberSignature Language="F#" Value="static member GetElasticMonitor : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Elastic.ElasticMonitorResource&gt;" Usage="Azure.ResourceManager.Elastic.ElasticExtensions.GetElasticMonitor (resourceGroupResource, monitorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Elastic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Elastic.ElasticMonitorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="monitorName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="monitorName"> Monitor resource name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the properties of a specific monitor resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Elastic/monitors/{monitorName}</description></item><item><term>Operation Id</term><description>Monitors_Get</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Elastic.ElasticMonitorResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Elastic.Mocking.MockableElasticResourceGroupResource.GetElasticMonitor(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="monitorName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="monitorName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetElasticMonitorAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Elastic.ElasticMonitorResource&gt;&gt; GetElasticMonitorAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string monitorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Elastic.ElasticMonitorResource&gt;&gt; GetElasticMonitorAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string monitorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Elastic.ElasticExtensions.GetElasticMonitorAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetElasticMonitorAsync (resourceGroupResource As ResourceGroupResource, monitorName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ElasticMonitorResource))" />
      <MemberSignature Language="F#" Value="static member GetElasticMonitorAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Elastic.ElasticMonitorResource&gt;&gt;" Usage="Azure.ResourceManager.Elastic.ElasticExtensions.GetElasticMonitorAsync (resourceGroupResource, monitorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Elastic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Elastic.ElasticMonitorResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="monitorName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="monitorName"> Monitor resource name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the properties of a specific monitor resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Elastic/monitors/{monitorName}</description></item><item><term>Operation Id</term><description>Monitors_Get</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Elastic.ElasticMonitorResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Elastic.Mocking.MockableElasticResourceGroupResource.GetElasticMonitorAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="monitorName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="monitorName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetElasticMonitorResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Elastic.ElasticMonitorResource GetElasticMonitorResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Elastic.ElasticMonitorResource GetElasticMonitorResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Elastic.ElasticExtensions.GetElasticMonitorResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetElasticMonitorResource (client As ArmClient, id As ResourceIdentifier) As ElasticMonitorResource" />
      <MemberSignature Language="F#" Value="static member GetElasticMonitorResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Elastic.ElasticMonitorResource" Usage="Azure.ResourceManager.Elastic.ElasticExtensions.GetElasticMonitorResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Elastic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Elastic.ElasticMonitorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Elastic.ElasticMonitorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Elastic.ElasticMonitorResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Elastic.ElasticMonitorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Elastic.Mocking.MockableElasticArmClient.GetElasticMonitorResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Elastic.ElasticMonitorResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetElasticMonitors">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Elastic.ElasticMonitorCollection GetElasticMonitors (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Elastic.ElasticMonitorCollection GetElasticMonitors(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Elastic.ElasticExtensions.GetElasticMonitors(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetElasticMonitors (resourceGroupResource As ResourceGroupResource) As ElasticMonitorCollection" />
      <MemberSignature Language="F#" Value="static member GetElasticMonitors : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.Elastic.ElasticMonitorCollection" Usage="Azure.ResourceManager.Elastic.ElasticExtensions.GetElasticMonitors resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Elastic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Elastic.ElasticMonitorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of ElasticMonitorResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Elastic.Mocking.MockableElasticResourceGroupResource.GetElasticMonitors" /> instead.</description></item></summary>
        <returns> An object representing collection of ElasticMonitorResources and their operations over a ElasticMonitorResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetElasticMonitors">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Elastic.ElasticMonitorResource&gt; GetElasticMonitors (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Elastic.ElasticMonitorResource&gt; GetElasticMonitors(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Elastic.ElasticExtensions.GetElasticMonitors(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetElasticMonitors (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ElasticMonitorResource)" />
      <MemberSignature Language="F#" Value="static member GetElasticMonitors : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Elastic.ElasticMonitorResource&gt;" Usage="Azure.ResourceManager.Elastic.ElasticExtensions.GetElasticMonitors (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Elastic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Elastic.ElasticMonitorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all monitors under the specified subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Elastic/monitors</description></item><item><term>Operation Id</term><description>Monitors_List</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Elastic.ElasticMonitorResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Elastic.Mocking.MockableElasticSubscriptionResource.GetElasticMonitors(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Elastic.ElasticMonitorResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetElasticMonitorsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Elastic.ElasticMonitorResource&gt; GetElasticMonitorsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Elastic.ElasticMonitorResource&gt; GetElasticMonitorsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Elastic.ElasticExtensions.GetElasticMonitorsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetElasticMonitorsAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ElasticMonitorResource)" />
      <MemberSignature Language="F#" Value="static member GetElasticMonitorsAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Elastic.ElasticMonitorResource&gt;" Usage="Azure.ResourceManager.Elastic.ElasticExtensions.GetElasticMonitorsAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Elastic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Elastic.ElasticMonitorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all monitors under the specified subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Elastic/monitors</description></item><item><term>Operation Id</term><description>Monitors_List</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Elastic.ElasticMonitorResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Elastic.Mocking.MockableElasticSubscriptionResource.GetElasticMonitors(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Elastic.ElasticMonitorResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetElasticOpenAIIntegrationResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Elastic.ElasticOpenAIIntegrationResource GetElasticOpenAIIntegrationResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Elastic.ElasticOpenAIIntegrationResource GetElasticOpenAIIntegrationResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Elastic.ElasticExtensions.GetElasticOpenAIIntegrationResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetElasticOpenAIIntegrationResource (client As ArmClient, id As ResourceIdentifier) As ElasticOpenAIIntegrationResource" />
      <MemberSignature Language="F#" Value="static member GetElasticOpenAIIntegrationResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Elastic.ElasticOpenAIIntegrationResource" Usage="Azure.ResourceManager.Elastic.ElasticExtensions.GetElasticOpenAIIntegrationResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Elastic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Elastic.ElasticOpenAIIntegrationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Elastic.ElasticOpenAIIntegrationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Elastic.ElasticOpenAIIntegrationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Elastic.ElasticOpenAIIntegrationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Elastic.Mocking.MockableElasticArmClient.GetElasticOpenAIIntegrationResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Elastic.ElasticOpenAIIntegrationResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetElasticTagRuleResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Elastic.ElasticTagRuleResource GetElasticTagRuleResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Elastic.ElasticTagRuleResource GetElasticTagRuleResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Elastic.ElasticExtensions.GetElasticTagRuleResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetElasticTagRuleResource (client As ArmClient, id As ResourceIdentifier) As ElasticTagRuleResource" />
      <MemberSignature Language="F#" Value="static member GetElasticTagRuleResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Elastic.ElasticTagRuleResource" Usage="Azure.ResourceManager.Elastic.ElasticExtensions.GetElasticTagRuleResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Elastic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Elastic.ElasticTagRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Elastic.ElasticTagRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Elastic.ElasticTagRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Elastic.ElasticTagRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Elastic.Mocking.MockableElasticArmClient.GetElasticTagRuleResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Elastic.ElasticTagRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetElasticToAzureSubscriptionMapping">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Elastic.Models.ElasticOrganizationToAzureSubscriptionMappingResult&gt; GetElasticToAzureSubscriptionMapping (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Elastic.Models.ElasticOrganizationToAzureSubscriptionMappingResult&gt; GetElasticToAzureSubscriptionMapping(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Elastic.ElasticExtensions.GetElasticToAzureSubscriptionMapping(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetElasticToAzureSubscriptionMapping (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ElasticOrganizationToAzureSubscriptionMappingResult)" />
      <MemberSignature Language="F#" Value="static member GetElasticToAzureSubscriptionMapping : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Elastic.Models.ElasticOrganizationToAzureSubscriptionMappingResult&gt;" Usage="Azure.ResourceManager.Elastic.ElasticExtensions.GetElasticToAzureSubscriptionMapping (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Elastic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Elastic.Models.ElasticOrganizationToAzureSubscriptionMappingResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get Elastic Organization To Azure Subscription Mapping details for the logged-in user.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Elastic/getElasticOrganizationToAzureSubscriptionMapping</description></item><item><term>Operation Id</term><description>Organizations_GetElasticToAzureSubscriptionMapping</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Elastic.Mocking.MockableElasticSubscriptionResource.GetElasticToAzureSubscriptionMapping(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetElasticToAzureSubscriptionMappingAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Elastic.Models.ElasticOrganizationToAzureSubscriptionMappingResult&gt;&gt; GetElasticToAzureSubscriptionMappingAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Elastic.Models.ElasticOrganizationToAzureSubscriptionMappingResult&gt;&gt; GetElasticToAzureSubscriptionMappingAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Elastic.ElasticExtensions.GetElasticToAzureSubscriptionMappingAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetElasticToAzureSubscriptionMappingAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ElasticOrganizationToAzureSubscriptionMappingResult))" />
      <MemberSignature Language="F#" Value="static member GetElasticToAzureSubscriptionMappingAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Elastic.Models.ElasticOrganizationToAzureSubscriptionMappingResult&gt;&gt;" Usage="Azure.ResourceManager.Elastic.ElasticExtensions.GetElasticToAzureSubscriptionMappingAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Elastic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Elastic.Models.ElasticOrganizationToAzureSubscriptionMappingResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get Elastic Organization To Azure Subscription Mapping details for the logged-in user.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Elastic/getElasticOrganizationToAzureSubscriptionMapping</description></item><item><term>Operation Id</term><description>Organizations_GetElasticToAzureSubscriptionMapping</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Elastic.Mocking.MockableElasticSubscriptionResource.GetElasticToAzureSubscriptionMapping(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetElasticVersions">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Elastic.Models.ElasticVersion&gt; GetElasticVersions (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string region, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Elastic.Models.ElasticVersion&gt; GetElasticVersions(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string region, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Elastic.ElasticExtensions.GetElasticVersions(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetElasticVersions (subscriptionResource As SubscriptionResource, region As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ElasticVersion)" />
      <MemberSignature Language="F#" Value="static member GetElasticVersions : Azure.ResourceManager.Resources.SubscriptionResource * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Elastic.Models.ElasticVersion&gt;" Usage="Azure.ResourceManager.Elastic.ElasticExtensions.GetElasticVersions (subscriptionResource, region, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Elastic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Elastic.Models.ElasticVersion&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="region" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="region"> Region where elastic deployment will take place. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a list of available versions for a region.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Elastic/elasticVersions</description></item><item><term>Operation Id</term><description>ElasticVersions_List</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Elastic.Mocking.MockableElasticSubscriptionResource.GetElasticVersions(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Elastic.Models.ElasticVersion" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="region" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetElasticVersionsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Elastic.Models.ElasticVersion&gt; GetElasticVersionsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string region, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Elastic.Models.ElasticVersion&gt; GetElasticVersionsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string region, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Elastic.ElasticExtensions.GetElasticVersionsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetElasticVersionsAsync (subscriptionResource As SubscriptionResource, region As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ElasticVersion)" />
      <MemberSignature Language="F#" Value="static member GetElasticVersionsAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Elastic.Models.ElasticVersion&gt;" Usage="Azure.ResourceManager.Elastic.ElasticExtensions.GetElasticVersionsAsync (subscriptionResource, region, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Elastic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Elastic.Models.ElasticVersion&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="region" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="region"> Region where elastic deployment will take place. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a list of available versions for a region.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Elastic/elasticVersions</description></item><item><term>Operation Id</term><description>ElasticVersions_List</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Elastic.Mocking.MockableElasticSubscriptionResource.GetElasticVersions(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Elastic.Models.ElasticVersion" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="region" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
