<Type Name="IMediaTypeProvider" FullName="Microsoft.WindowsAzure.Mobile.Service.Content.IMediaTypeProvider">
  <TypeSignature Language="C#" Value="public interface IMediaTypeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMediaTypeProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.WindowsAzure.Mobile.Service.Content.IMediaTypeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMediaTypeProvider" />
  <TypeSignature Language="F#" Value="type IMediaTypeProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.WindowsAzure.Mobile.Service</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Provides an abstraction for getting the media type mapping for a given file name extension.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetMediaType">
      <MemberSignature Language="C#" Value="public System.Net.Http.Headers.MediaTypeHeaderValue GetMediaType (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.Http.Headers.MediaTypeHeaderValue GetMediaType(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WindowsAzure.Mobile.Service.Content.IMediaTypeProvider.GetMediaType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMediaType (fileName As String) As MediaTypeHeaderValue" />
      <MemberSignature Language="F#" Value="abstract member GetMediaType : string -&gt; System.Net.Http.Headers.MediaTypeHeaderValue" Usage="iMediaTypeProvider.GetMediaType fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Mobile.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.Headers.MediaTypeHeaderValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">The file name to determine the mapping for.</param>
        <summary>
            Returns the media type for the specified file name.
            </summary>
        <returns>A new <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> representing the media type for the given file name. If there is no mapping found then 
            a value of <c>application/octet-stream</c> is returned.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
