<Type Name="BlueprintExtensions" FullName="Azure.ResourceManager.Blueprint.BlueprintExtensions">
  <TypeSignature Language="C#" Value="public static class BlueprintExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit BlueprintExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Blueprint.BlueprintExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module BlueprintExtensions" />
  <TypeSignature Language="F#" Value="type BlueprintExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Blueprint</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.Blueprint. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetAssignment">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Blueprint.AssignmentResource&gt; GetAssignment (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string assignmentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Blueprint.AssignmentResource&gt; GetAssignment(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string assignmentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Blueprint.BlueprintExtensions.GetAssignment(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAssignment (client As ArmClient, scope As ResourceIdentifier, assignmentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AssignmentResource)" />
      <MemberSignature Language="F#" Value="static member GetAssignment : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Blueprint.AssignmentResource&gt;" Usage="Azure.ResourceManager.Blueprint.BlueprintExtensions.GetAssignment (client, scope, assignmentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Blueprint</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Blueprint.AssignmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="assignmentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="assignmentName"> Name of the blueprint assignment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a blueprint assignment.
            Request Path: /{resourceScope}/providers/Microsoft.Blueprint/blueprintAssignments/{assignmentName}
            Operation Id: Assignments_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="assignmentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assignmentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAssignmentAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Blueprint.AssignmentResource&gt;&gt; GetAssignmentAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string assignmentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Blueprint.AssignmentResource&gt;&gt; GetAssignmentAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string assignmentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Blueprint.BlueprintExtensions.GetAssignmentAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAssignmentAsync (client As ArmClient, scope As ResourceIdentifier, assignmentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AssignmentResource))" />
      <MemberSignature Language="F#" Value="static member GetAssignmentAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Blueprint.AssignmentResource&gt;&gt;" Usage="Azure.ResourceManager.Blueprint.BlueprintExtensions.GetAssignmentAsync (client, scope, assignmentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Blueprint</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Blueprint.AssignmentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="assignmentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="assignmentName"> Name of the blueprint assignment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a blueprint assignment.
            Request Path: /{resourceScope}/providers/Microsoft.Blueprint/blueprintAssignments/{assignmentName}
            Operation Id: Assignments_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="assignmentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assignmentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAssignmentOperationResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Blueprint.AssignmentOperationResource GetAssignmentOperationResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Blueprint.AssignmentOperationResource GetAssignmentOperationResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Blueprint.BlueprintExtensions.GetAssignmentOperationResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAssignmentOperationResource (client As ArmClient, id As ResourceIdentifier) As AssignmentOperationResource" />
      <MemberSignature Language="F#" Value="static member GetAssignmentOperationResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Blueprint.AssignmentOperationResource" Usage="Azure.ResourceManager.Blueprint.BlueprintExtensions.GetAssignmentOperationResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Blueprint</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Blueprint.AssignmentOperationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Blueprint.AssignmentOperationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Blueprint.AssignmentOperationResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Blueprint.AssignmentOperationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Blueprint.AssignmentOperationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssignmentResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Blueprint.AssignmentResource GetAssignmentResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Blueprint.AssignmentResource GetAssignmentResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Blueprint.BlueprintExtensions.GetAssignmentResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAssignmentResource (client As ArmClient, id As ResourceIdentifier) As AssignmentResource" />
      <MemberSignature Language="F#" Value="static member GetAssignmentResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Blueprint.AssignmentResource" Usage="Azure.ResourceManager.Blueprint.BlueprintExtensions.GetAssignmentResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Blueprint</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Blueprint.AssignmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Blueprint.AssignmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Blueprint.AssignmentResource.CreateResourceIdentifier(System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Blueprint.AssignmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Blueprint.AssignmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssignments">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Blueprint.AssignmentCollection GetAssignments (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Blueprint.AssignmentCollection GetAssignments(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Blueprint.BlueprintExtensions.GetAssignments(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAssignments (client As ArmClient, scope As ResourceIdentifier) As AssignmentCollection" />
      <MemberSignature Language="F#" Value="static member GetAssignments : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Blueprint.AssignmentCollection" Usage="Azure.ResourceManager.Blueprint.BlueprintExtensions.GetAssignments (client, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Blueprint</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Blueprint.AssignmentCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets a collection of AssignmentResources in the ArmResource. </summary>
        <returns> An object representing collection of AssignmentResources and their operations over a AssignmentResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBlueprint">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Blueprint.BlueprintResource&gt; GetBlueprint (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string blueprintName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Blueprint.BlueprintResource&gt; GetBlueprint(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string blueprintName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Blueprint.BlueprintExtensions.GetBlueprint(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBlueprint (client As ArmClient, scope As ResourceIdentifier, blueprintName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BlueprintResource)" />
      <MemberSignature Language="F#" Value="static member GetBlueprint : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Blueprint.BlueprintResource&gt;" Usage="Azure.ResourceManager.Blueprint.BlueprintExtensions.GetBlueprint (client, scope, blueprintName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Blueprint</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Blueprint.BlueprintResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="blueprintName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="blueprintName"> Name of the blueprint definition. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a blueprint definition.
            Request Path: /{resourceScope}/providers/Microsoft.Blueprint/blueprints/{blueprintName}
            Operation Id: Blueprints_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="blueprintName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="blueprintName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBlueprintArtifactResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Blueprint.BlueprintArtifactResource GetBlueprintArtifactResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Blueprint.BlueprintArtifactResource GetBlueprintArtifactResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Blueprint.BlueprintExtensions.GetBlueprintArtifactResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBlueprintArtifactResource (client As ArmClient, id As ResourceIdentifier) As BlueprintArtifactResource" />
      <MemberSignature Language="F#" Value="static member GetBlueprintArtifactResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Blueprint.BlueprintArtifactResource" Usage="Azure.ResourceManager.Blueprint.BlueprintExtensions.GetBlueprintArtifactResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Blueprint</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Blueprint.BlueprintArtifactResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Blueprint.BlueprintArtifactResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Blueprint.BlueprintArtifactResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Blueprint.BlueprintArtifactResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Blueprint.BlueprintArtifactResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBlueprintAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Blueprint.BlueprintResource&gt;&gt; GetBlueprintAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string blueprintName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Blueprint.BlueprintResource&gt;&gt; GetBlueprintAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string blueprintName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Blueprint.BlueprintExtensions.GetBlueprintAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBlueprintAsync (client As ArmClient, scope As ResourceIdentifier, blueprintName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BlueprintResource))" />
      <MemberSignature Language="F#" Value="static member GetBlueprintAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Blueprint.BlueprintResource&gt;&gt;" Usage="Azure.ResourceManager.Blueprint.BlueprintExtensions.GetBlueprintAsync (client, scope, blueprintName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Blueprint</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Blueprint.BlueprintResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="blueprintName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="blueprintName"> Name of the blueprint definition. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a blueprint definition.
            Request Path: /{resourceScope}/providers/Microsoft.Blueprint/blueprints/{blueprintName}
            Operation Id: Blueprints_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="blueprintName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="blueprintName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBlueprintResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Blueprint.BlueprintResource GetBlueprintResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Blueprint.BlueprintResource GetBlueprintResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Blueprint.BlueprintExtensions.GetBlueprintResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBlueprintResource (client As ArmClient, id As ResourceIdentifier) As BlueprintResource" />
      <MemberSignature Language="F#" Value="static member GetBlueprintResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Blueprint.BlueprintResource" Usage="Azure.ResourceManager.Blueprint.BlueprintExtensions.GetBlueprintResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Blueprint</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Blueprint.BlueprintResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Blueprint.BlueprintResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Blueprint.BlueprintResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Blueprint.BlueprintResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Blueprint.BlueprintResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBlueprints">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Blueprint.BlueprintCollection GetBlueprints (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Blueprint.BlueprintCollection GetBlueprints(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Blueprint.BlueprintExtensions.GetBlueprints(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBlueprints (client As ArmClient, scope As ResourceIdentifier) As BlueprintCollection" />
      <MemberSignature Language="F#" Value="static member GetBlueprints : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Blueprint.BlueprintCollection" Usage="Azure.ResourceManager.Blueprint.BlueprintExtensions.GetBlueprints (client, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Blueprint</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Blueprint.BlueprintCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets a collection of BlueprintResources in the ArmResource. </summary>
        <returns> An object representing collection of BlueprintResources and their operations over a BlueprintResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBlueprintVersionArtifactResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Blueprint.BlueprintVersionArtifactResource GetBlueprintVersionArtifactResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Blueprint.BlueprintVersionArtifactResource GetBlueprintVersionArtifactResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Blueprint.BlueprintExtensions.GetBlueprintVersionArtifactResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBlueprintVersionArtifactResource (client As ArmClient, id As ResourceIdentifier) As BlueprintVersionArtifactResource" />
      <MemberSignature Language="F#" Value="static member GetBlueprintVersionArtifactResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Blueprint.BlueprintVersionArtifactResource" Usage="Azure.ResourceManager.Blueprint.BlueprintExtensions.GetBlueprintVersionArtifactResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Blueprint</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Blueprint.BlueprintVersionArtifactResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Blueprint.BlueprintVersionArtifactResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Blueprint.BlueprintVersionArtifactResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Blueprint.BlueprintVersionArtifactResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Blueprint.BlueprintVersionArtifactResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPublishedBlueprintResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Blueprint.PublishedBlueprintResource GetPublishedBlueprintResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Blueprint.PublishedBlueprintResource GetPublishedBlueprintResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Blueprint.BlueprintExtensions.GetPublishedBlueprintResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPublishedBlueprintResource (client As ArmClient, id As ResourceIdentifier) As PublishedBlueprintResource" />
      <MemberSignature Language="F#" Value="static member GetPublishedBlueprintResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Blueprint.PublishedBlueprintResource" Usage="Azure.ResourceManager.Blueprint.BlueprintExtensions.GetPublishedBlueprintResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Blueprint</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Blueprint.PublishedBlueprintResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Blueprint.PublishedBlueprintResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Blueprint.PublishedBlueprintResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Blueprint.PublishedBlueprintResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Blueprint.PublishedBlueprintResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
