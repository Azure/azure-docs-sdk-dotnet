<Type Name="StreamingPolicyFairPlayConfiguration" FullName="Azure.ResourceManager.Media.Models.StreamingPolicyFairPlayConfiguration">
  <TypeSignature Language="C#" Value="public class StreamingPolicyFairPlayConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StreamingPolicyFairPlayConfiguration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Media.Models.StreamingPolicyFairPlayConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class StreamingPolicyFairPlayConfiguration" />
  <TypeSignature Language="F#" Value="type StreamingPolicyFairPlayConfiguration = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Class to specify configurations of FairPlay in Streaming Policy. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamingPolicyFairPlayConfiguration (bool allowPersistentLicense);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool allowPersistentLicense) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Models.StreamingPolicyFairPlayConfiguration.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (allowPersistentLicense As Boolean)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.Media.Models.StreamingPolicyFairPlayConfiguration : bool -&gt; Azure.ResourceManager.Media.Models.StreamingPolicyFairPlayConfiguration" Usage="new Azure.ResourceManager.Media.Models.StreamingPolicyFairPlayConfiguration allowPersistentLicense" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="allowPersistentLicense" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowPersistentLicense"> All license to be persistent or not. </param>
        <summary> Initializes a new instance of StreamingPolicyFairPlayConfiguration. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowPersistentLicense">
      <MemberSignature Language="C#" Value="public bool AllowPersistentLicense { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPersistentLicense" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Media.Models.StreamingPolicyFairPlayConfiguration.AllowPersistentLicense" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowPersistentLicense As Boolean" />
      <MemberSignature Language="F#" Value="member this.AllowPersistentLicense : bool with get, set" Usage="Azure.ResourceManager.Media.Models.StreamingPolicyFairPlayConfiguration.AllowPersistentLicense" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> All license to be persistent or not. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomLicenseAcquisitionUriTemplate">
      <MemberSignature Language="C#" Value="public string CustomLicenseAcquisitionUriTemplate { get; set; }" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomLicenseAcquisitionUriTemplate" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Media.Models.StreamingPolicyFairPlayConfiguration.CustomLicenseAcquisitionUriTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomLicenseAcquisitionUriTemplate As String" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="member this.CustomLicenseAcquisitionUriTemplate : string with get, set" Usage="Azure.ResourceManager.Media.Models.StreamingPolicyFairPlayConfiguration.CustomLicenseAcquisitionUriTemplate" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public Uri CustomLicenseAcquisitionUriTemplate { get; set; }" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri CustomLicenseAcquisitionUriTemplate" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomLicenseAcquisitionUriTemplate As Uri" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="member this.CustomLicenseAcquisitionUriTemplate : Uri with get, set" Usage="Azure.ResourceManager.Media.Models.StreamingPolicyFairPlayConfiguration.CustomLicenseAcquisitionUriTemplate" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">System.String</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
