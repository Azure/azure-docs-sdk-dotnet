<Type Name="ContentKeyPolicyFairPlayConfiguration" FullName="Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration">
  <TypeSignature Language="C#" Value="public class ContentKeyPolicyFairPlayConfiguration : Azure.ResourceManager.Media.Models.ContentKeyPolicyConfiguration" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContentKeyPolicyFairPlayConfiguration extends Azure.ResourceManager.Media.Models.ContentKeyPolicyConfiguration" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class ContentKeyPolicyFairPlayConfiguration&#xA;Inherits ContentKeyPolicyConfiguration" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type ContentKeyPolicyFairPlayConfiguration = class&#xA;    inherit ContentKeyPolicyConfiguration" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public class ContentKeyPolicyFairPlayConfiguration : Azure.ResourceManager.Media.Models.ContentKeyPolicyConfiguration, System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContentKeyPolicyFairPlayConfiguration extends Azure.ResourceManager.Media.Models.ContentKeyPolicyConfiguration implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public Class ContentKeyPolicyFairPlayConfiguration&#xA;Inherits ContentKeyPolicyConfiguration&#xA;Implements IJsonModel(Of ContentKeyPolicyFairPlayConfiguration), IPersistableModel(Of ContentKeyPolicyFairPlayConfiguration)" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type ContentKeyPolicyFairPlayConfiguration = class&#xA;    inherit ContentKeyPolicyConfiguration&#xA;    interface IJsonModel&lt;ContentKeyPolicyFairPlayConfiguration&gt;&#xA;    interface IPersistableModel&lt;ContentKeyPolicyFairPlayConfiguration&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.Media.Models.ContentKeyPolicyConfiguration</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Specifies a configuration for FairPlay licenses. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentKeyPolicyFairPlayConfiguration (byte[] applicationSecretKey, string fairPlayPfxPassword, string fairPlayPfx, Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayRentalAndLeaseKeyType rentalAndLeaseKeyType, long rentalDuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] applicationSecretKey, string fairPlayPfxPassword, string fairPlayPfx, valuetype Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayRentalAndLeaseKeyType rentalAndLeaseKeyType, int64 rentalDuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration.#ctor(System.Byte[],System.String,System.String,Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayRentalAndLeaseKeyType,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (applicationSecretKey As Byte(), fairPlayPfxPassword As String, fairPlayPfx As String, rentalAndLeaseKeyType As ContentKeyPolicyFairPlayRentalAndLeaseKeyType, rentalDuration As Long)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration : byte[] * string * string * Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayRentalAndLeaseKeyType * int64 -&gt; Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration" Usage="new Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration (applicationSecretKey, fairPlayPfxPassword, fairPlayPfx, rentalAndLeaseKeyType, rentalDuration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="applicationSecretKey" Type="System.Byte[]" />
        <Parameter Name="fairPlayPfxPassword" Type="System.String" />
        <Parameter Name="fairPlayPfx" Type="System.String" />
        <Parameter Name="rentalAndLeaseKeyType" Type="Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayRentalAndLeaseKeyType" />
        <Parameter Name="rentalDuration" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="applicationSecretKey"> The key that must be used as FairPlay Application Secret key. This needs to be base64 encoded. </param>
        <param name="fairPlayPfxPassword"> The password encrypting FairPlay certificate in PKCS 12 (pfx) format. </param>
        <param name="fairPlayPfx"> The Base64 representation of FairPlay certificate in PKCS 12 (pfx) format (including private key). </param>
        <param name="rentalAndLeaseKeyType"> The rental and lease key type. </param>
        <param name="rentalDuration"> The rental duration. Must be greater than or equal to 0. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration" />. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationSecretKey">
      <MemberSignature Language="C#" Value="public byte[] ApplicationSecretKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] ApplicationSecretKey" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration.ApplicationSecretKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationSecretKey As Byte()" />
      <MemberSignature Language="F#" Value="member this.ApplicationSecretKey : byte[] with get, set" Usage="Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration.ApplicationSecretKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The key that must be used as FairPlay Application Secret key. This needs to be base64 encoded. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FairPlayPfx">
      <MemberSignature Language="C#" Value="public string FairPlayPfx { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FairPlayPfx" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration.FairPlayPfx" />
      <MemberSignature Language="VB.NET" Value="Public Property FairPlayPfx As String" />
      <MemberSignature Language="F#" Value="member this.FairPlayPfx : string with get, set" Usage="Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration.FairPlayPfx" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The Base64 representation of FairPlay certificate in PKCS 12 (pfx) format (including private key). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FairPlayPfxPassword">
      <MemberSignature Language="C#" Value="public string FairPlayPfxPassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FairPlayPfxPassword" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration.FairPlayPfxPassword" />
      <MemberSignature Language="VB.NET" Value="Public Property FairPlayPfxPassword As String" />
      <MemberSignature Language="F#" Value="member this.FairPlayPfxPassword : string with get, set" Usage="Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration.FairPlayPfxPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The password encrypting FairPlay certificate in PKCS 12 (pfx) format. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OfflineRentalConfiguration">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayOfflineRentalConfiguration OfflineRentalConfiguration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayOfflineRentalConfiguration OfflineRentalConfiguration" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration.OfflineRentalConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Property OfflineRentalConfiguration As ContentKeyPolicyFairPlayOfflineRentalConfiguration" />
      <MemberSignature Language="F#" Value="member this.OfflineRentalConfiguration : Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayOfflineRentalConfiguration with get, set" Usage="Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration.OfflineRentalConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayOfflineRentalConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Offline rental policy. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RentalAndLeaseKeyType">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayRentalAndLeaseKeyType RentalAndLeaseKeyType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayRentalAndLeaseKeyType RentalAndLeaseKeyType" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration.RentalAndLeaseKeyType" />
      <MemberSignature Language="VB.NET" Value="Public Property RentalAndLeaseKeyType As ContentKeyPolicyFairPlayRentalAndLeaseKeyType" />
      <MemberSignature Language="F#" Value="member this.RentalAndLeaseKeyType : Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayRentalAndLeaseKeyType with get, set" Usage="Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration.RentalAndLeaseKeyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayRentalAndLeaseKeyType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The rental and lease key type. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RentalDuration">
      <MemberSignature Language="C#" Value="public long RentalDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 RentalDuration" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration.RentalDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property RentalDuration As Long" />
      <MemberSignature Language="F#" Value="member this.RentalDuration : int64 with get, set" Usage="Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration.RentalDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The rental duration. Must be greater than or equal to 0. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration IJsonModel&lt;ContentKeyPolicyFairPlayConfiguration&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#Media#Models#ContentKeyPolicyFairPlayConfiguration&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As ContentKeyPolicyFairPlayConfiguration Implements IJsonModel(Of ContentKeyPolicyFairPlayConfiguration).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration" Usage="contentKeyPolicyFairPlayConfiguration.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;ContentKeyPolicyFairPlayConfiguration&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#Media#Models#ContentKeyPolicyFairPlayConfiguration&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of ContentKeyPolicyFairPlayConfiguration).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="contentKeyPolicyFairPlayConfiguration.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration IPersistableModel&lt;ContentKeyPolicyFairPlayConfiguration&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Media#Models#ContentKeyPolicyFairPlayConfiguration&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As ContentKeyPolicyFairPlayConfiguration Implements IPersistableModel(Of ContentKeyPolicyFairPlayConfiguration).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration" Usage="contentKeyPolicyFairPlayConfiguration.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;ContentKeyPolicyFairPlayConfiguration&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Media#Models#ContentKeyPolicyFairPlayConfiguration&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of ContentKeyPolicyFairPlayConfiguration).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="contentKeyPolicyFairPlayConfiguration.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;ContentKeyPolicyFairPlayConfiguration&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Media#Models#ContentKeyPolicyFairPlayConfiguration&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of ContentKeyPolicyFairPlayConfiguration).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="contentKeyPolicyFairPlayConfiguration.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.ContentKeyPolicyFairPlayConfiguration&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
