<Type Name="MediaFormatBase" FullName="Azure.ResourceManager.Media.Models.MediaFormatBase">
  <TypeSignature Language="C#" Value="public abstract class MediaFormatBase" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MediaFormatBase extends System.Object" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Media.Models.MediaFormatBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MediaFormatBase" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type MediaFormatBase = class" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public abstract class MediaFormatBase : System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MediaFormatBase extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.Media.Models.MediaFormatBase&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.Media.Models.MediaFormatBase&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MediaFormatBase&#xA;Implements IJsonModel(Of MediaFormatBase), IPersistableModel(Of MediaFormatBase)" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type MediaFormatBase = class&#xA;    interface IJsonModel&lt;MediaFormatBase&gt;&#xA;    interface IPersistableModel&lt;MediaFormatBase&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="azure-dotnet-preview">
      <AttributeName Language="C#">[System.ClientModel.Primitives.PersistableModelProxy(typeof(Azure.ResourceManager.Media.Models.UnknownFormat))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ClientModel.Primitives.PersistableModelProxy(typeof(Azure.ResourceManager.Media.Models.UnknownFormat))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Base class for output.
            Please note <see cref="T:Azure.ResourceManager.Media.Models.MediaFormatBase" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.Media.Models.OutputImageFileFormat" />, <see cref="T:Azure.ResourceManager.Media.Models.JpgFormat" />, <see cref="T:Azure.ResourceManager.Media.Models.Mp4Format" />, <see cref="T:Azure.ResourceManager.Media.Models.MultiBitrateFormat" />, <see cref="T:Azure.ResourceManager.Media.Models.PngFormat" /> and <see cref="T:Azure.ResourceManager.Media.Models.TransportStreamFormat" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MediaFormatBase (string filenamePattern);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string filenamePattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Models.MediaFormatBase.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (filenamePattern As String)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.Media.Models.MediaFormatBase : string -&gt; Azure.ResourceManager.Media.Models.MediaFormatBase" Usage="new Azure.ResourceManager.Media.Models.MediaFormatBase filenamePattern" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenamePattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filenamePattern"> The file naming pattern used for the creation of output files. The following macros are supported in the file name: {Basename} - An expansion macro that will use the name of the input video file. If the base name(the file suffix is not included) of the input video file is less than 32 characters long, the base name of input video files will be used. If the length of base name of the input video file exceeds 32 characters, the base name is truncated to the first 32 characters in total length. {Extension} - The appropriate extension for this format. {Label} - The label assigned to the codec/layer. {Index} - A unique index for thumbnails. Only applicable to thumbnails. {AudioStream} - string "Audio" plus audio stream number(start from 1). {Bitrate} - The audio/video bitrate in kbps. Not applicable to thumbnails. {Codec} - The type of the audio/video codec. {Resolution} - The video resolution. Any unsubstituted macros will be collapsed and removed from the filename. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Media.Models.MediaFormatBase" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filenamePattern" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="FilenamePattern">
      <MemberSignature Language="C#" Value="public string FilenamePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilenamePattern" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Media.Models.MediaFormatBase.FilenamePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property FilenamePattern As String" />
      <MemberSignature Language="F#" Value="member this.FilenamePattern : string with get, set" Usage="Azure.ResourceManager.Media.Models.MediaFormatBase.FilenamePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The file naming pattern used for the creation of output files. The following macros are supported in the file name: {Basename} - An expansion macro that will use the name of the input video file. If the base name(the file suffix is not included) of the input video file is less than 32 characters long, the base name of input video files will be used. If the length of base name of the input video file exceeds 32 characters, the base name is truncated to the first 32 characters in total length. {Extension} - The appropriate extension for this format. {Label} - The label assigned to the codec/layer. {Index} - A unique index for thumbnails. Only applicable to thumbnails. {AudioStream} - string "Audio" plus audio stream number(start from 1). {Bitrate} - The audio/video bitrate in kbps. Not applicable to thumbnails. {Codec} - The type of the audio/video codec. {Resolution} - The video resolution. Any unsubstituted macros will be collapsed and removed from the filename. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.Media.Models.MediaFormatBase IJsonModel&lt;MediaFormatBase&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.Media.Models.MediaFormatBase System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Models.MediaFormatBase.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#Media#Models#MediaFormatBase&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As MediaFormatBase Implements IJsonModel(Of MediaFormatBase).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Media.Models.MediaFormatBase&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Media.Models.MediaFormatBase" Usage="mediaFormatBase.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.Models.MediaFormatBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;MediaFormatBase&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Models.MediaFormatBase.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#Media#Models#MediaFormatBase&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of MediaFormatBase).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="mediaFormatBase.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.Media.Models.MediaFormatBase IPersistableModel&lt;MediaFormatBase&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.Media.Models.MediaFormatBase System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Models.MediaFormatBase.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Media#Models#MediaFormatBase&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As MediaFormatBase Implements IPersistableModel(Of MediaFormatBase).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Media.Models.MediaFormatBase&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Media.Models.MediaFormatBase" Usage="mediaFormatBase.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.Models.MediaFormatBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;MediaFormatBase&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Models.MediaFormatBase.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Media#Models#MediaFormatBase&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of MediaFormatBase).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="mediaFormatBase.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;MediaFormatBase&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Models.MediaFormatBase.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Media#Models#MediaFormatBase&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of MediaFormatBase).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="mediaFormatBase.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
