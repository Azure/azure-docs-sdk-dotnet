<Type Name="MediaFormatBase" FullName="Azure.ResourceManager.Media.Models.MediaFormatBase">
  <TypeSignature Language="C#" Value="public abstract class MediaFormatBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MediaFormatBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Media.Models.MediaFormatBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MediaFormatBase" />
  <TypeSignature Language="F#" Value="type MediaFormatBase = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Base class for output.
            Please note <see cref="T:Azure.ResourceManager.Media.Models.MediaFormatBase" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.Media.Models.OutputImageFileFormat" />, <see cref="T:Azure.ResourceManager.Media.Models.JpgFormat" />, <see cref="T:Azure.ResourceManager.Media.Models.Mp4Format" />, <see cref="T:Azure.ResourceManager.Media.Models.MultiBitrateFormat" />, <see cref="T:Azure.ResourceManager.Media.Models.PngFormat" /> and <see cref="T:Azure.ResourceManager.Media.Models.TransportStreamFormat" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MediaFormatBase (string filenamePattern);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string filenamePattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Models.MediaFormatBase.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (filenamePattern As String)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.Media.Models.MediaFormatBase : string -&gt; Azure.ResourceManager.Media.Models.MediaFormatBase" Usage="new Azure.ResourceManager.Media.Models.MediaFormatBase filenamePattern" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenamePattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filenamePattern"> The pattern of the file names for the generated output files. The following macros are supported in the file name: {Basename} - An expansion macro that will use the name of the input video file. If the base name(the file suffix is not included) of the input video file is less than 32 characters long, the base name of input video files will be used. If the length of base name of the input video file exceeds 32 characters, the base name is truncated to the first 32 characters in total length. {Extension} - The appropriate extension for this format. {Label} - The label assigned to the codec/layer. {Index} - A unique index for thumbnails. Only applicable to thumbnails. {Bitrate} - The audio/video bitrate. Not applicable to thumbnails. {Codec} - The type of the audio/video codec. {Resolution} - The video resolution. Any unsubstituted macros will be collapsed and removed from the filename. </param>
        <summary> Initializes a new instance of MediaFormatBase. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filenamePattern" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="FilenamePattern">
      <MemberSignature Language="C#" Value="public string FilenamePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilenamePattern" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Media.Models.MediaFormatBase.FilenamePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property FilenamePattern As String" />
      <MemberSignature Language="F#" Value="member this.FilenamePattern : string with get, set" Usage="Azure.ResourceManager.Media.Models.MediaFormatBase.FilenamePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The pattern of the file names for the generated output files. The following macros are supported in the file name: {Basename} - An expansion macro that will use the name of the input video file. If the base name(the file suffix is not included) of the input video file is less than 32 characters long, the base name of input video files will be used. If the length of base name of the input video file exceeds 32 characters, the base name is truncated to the first 32 characters in total length. {Extension} - The appropriate extension for this format. {Label} - The label assigned to the codec/layer. {Index} - A unique index for thumbnails. Only applicable to thumbnails. {Bitrate} - The audio/video bitrate. Not applicable to thumbnails. {Codec} - The type of the audio/video codec. {Resolution} - The video resolution. Any unsubstituted macros will be collapsed and removed from the filename. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
