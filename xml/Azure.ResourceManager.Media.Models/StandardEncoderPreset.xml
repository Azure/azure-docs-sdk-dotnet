<Type Name="StandardEncoderPreset" FullName="Azure.ResourceManager.Media.Models.StandardEncoderPreset">
  <TypeSignature Language="C#" Value="public class StandardEncoderPreset : Azure.ResourceManager.Media.Models.MediaTransformPreset" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StandardEncoderPreset extends Azure.ResourceManager.Media.Models.MediaTransformPreset" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Media.Models.StandardEncoderPreset" />
  <TypeSignature Language="VB.NET" Value="Public Class StandardEncoderPreset&#xA;Inherits MediaTransformPreset" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type StandardEncoderPreset = class&#xA;    inherit MediaTransformPreset" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public class StandardEncoderPreset : Azure.ResourceManager.Media.Models.MediaTransformPreset, System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StandardEncoderPreset extends Azure.ResourceManager.Media.Models.MediaTransformPreset implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public Class StandardEncoderPreset&#xA;Inherits MediaTransformPreset&#xA;Implements IJsonModel(Of StandardEncoderPreset), IPersistableModel(Of StandardEncoderPreset)" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type StandardEncoderPreset = class&#xA;    inherit MediaTransformPreset&#xA;    interface IJsonModel&lt;StandardEncoderPreset&gt;&#xA;    interface IPersistableModel&lt;StandardEncoderPreset&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.Media.Models.MediaTransformPreset</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Describes all the settings to be used when encoding the input video with the Standard Encoder. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StandardEncoderPreset (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Media.Models.MediaCodecBase&gt; codecs, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt; formats);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Media.Models.MediaCodecBase&gt; codecs, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Media.Models.MediaFormatBase&gt; formats) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Models.StandardEncoderPreset.#ctor(System.Collections.Generic.IEnumerable{Azure.ResourceManager.Media.Models.MediaCodecBase},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Media.Models.MediaFormatBase})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (codecs As IEnumerable(Of MediaCodecBase), formats As IEnumerable(Of MediaFormatBase))" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.Media.Models.StandardEncoderPreset : seq&lt;Azure.ResourceManager.Media.Models.MediaCodecBase&gt; * seq&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt; -&gt; Azure.ResourceManager.Media.Models.StandardEncoderPreset" Usage="new Azure.ResourceManager.Media.Models.StandardEncoderPreset (codecs, formats)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codecs" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Media.Models.MediaCodecBase&gt;" />
        <Parameter Name="formats" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;" />
      </Parameters>
      <Docs>
        <param name="codecs">
            The list of codecs to be used when encoding the input video.
            Please note <see cref="T:Azure.ResourceManager.Media.Models.MediaCodecBase" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.Media.Models.AacAudio" />, <see cref="T:Azure.ResourceManager.Media.Models.MediaAudioBase" />, <see cref="T:Azure.ResourceManager.Media.Models.CodecCopyAudio" />, <see cref="T:Azure.ResourceManager.Media.Models.CodecCopyVideo" />, <see cref="T:Azure.ResourceManager.Media.Models.DDAudio" />, <see cref="T:Azure.ResourceManager.Media.Models.H264Video" />, <see cref="T:Azure.ResourceManager.Media.Models.H265Video" />, <see cref="T:Azure.ResourceManager.Media.Models.MediaImageBase" />, <see cref="T:Azure.ResourceManager.Media.Models.JpgImage" />, <see cref="T:Azure.ResourceManager.Media.Models.PngImage" /> and <see cref="T:Azure.ResourceManager.Media.Models.MediaVideoBase" />.
            </param>
        <param name="formats">
            The list of outputs to be produced by the encoder.
            Please note <see cref="T:Azure.ResourceManager.Media.Models.MediaFormatBase" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.Media.Models.OutputImageFileFormat" />, <see cref="T:Azure.ResourceManager.Media.Models.JpgFormat" />, <see cref="T:Azure.ResourceManager.Media.Models.Mp4Format" />, <see cref="T:Azure.ResourceManager.Media.Models.MultiBitrateFormat" />, <see cref="T:Azure.ResourceManager.Media.Models.PngFormat" /> and <see cref="T:Azure.ResourceManager.Media.Models.TransportStreamFormat" />.
            </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Media.Models.StandardEncoderPreset" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="codecs" /> or <paramref name="formats" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Codecs">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.ResourceManager.Media.Models.MediaCodecBase&gt; Codecs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.ResourceManager.Media.Models.MediaCodecBase&gt; Codecs" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Media.Models.StandardEncoderPreset.Codecs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Codecs As IList(Of MediaCodecBase)" />
      <MemberSignature Language="F#" Value="member this.Codecs : System.Collections.Generic.IList&lt;Azure.ResourceManager.Media.Models.MediaCodecBase&gt;" Usage="Azure.ResourceManager.Media.Models.StandardEncoderPreset.Codecs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.ResourceManager.Media.Models.MediaCodecBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The list of codecs to be used when encoding the input video.
            Please note <see cref="T:Azure.ResourceManager.Media.Models.MediaCodecBase" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.Media.Models.AacAudio" />, <see cref="T:Azure.ResourceManager.Media.Models.MediaAudioBase" />, <see cref="T:Azure.ResourceManager.Media.Models.CodecCopyAudio" />, <see cref="T:Azure.ResourceManager.Media.Models.CodecCopyVideo" />, <see cref="T:Azure.ResourceManager.Media.Models.DDAudio" />, <see cref="T:Azure.ResourceManager.Media.Models.H264Video" />, <see cref="T:Azure.ResourceManager.Media.Models.H265Video" />, <see cref="T:Azure.ResourceManager.Media.Models.MediaImageBase" />, <see cref="T:Azure.ResourceManager.Media.Models.JpgImage" />, <see cref="T:Azure.ResourceManager.Media.Models.PngImage" /> and <see cref="T:Azure.ResourceManager.Media.Models.MediaVideoBase" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExperimentalOptions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; ExperimentalOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; ExperimentalOptions" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Media.Models.StandardEncoderPreset.ExperimentalOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExperimentalOptions As IDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="member this.ExperimentalOptions : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="Azure.ResourceManager.Media.Models.StandardEncoderPreset.ExperimentalOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Dictionary containing key value pairs for parameters not exposed in the preset itself. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filters">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.Media.Models.FilteringOperations Filters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Media.Models.FilteringOperations Filters" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Media.Models.StandardEncoderPreset.Filters" />
      <MemberSignature Language="VB.NET" Value="Public Property Filters As FilteringOperations" />
      <MemberSignature Language="F#" Value="member this.Filters : Azure.ResourceManager.Media.Models.FilteringOperations with get, set" Usage="Azure.ResourceManager.Media.Models.StandardEncoderPreset.Filters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.Models.FilteringOperations</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> One or more filtering operations that are applied to the input media before encoding. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formats">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt; Formats { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.ResourceManager.Media.Models.MediaFormatBase&gt; Formats" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Media.Models.StandardEncoderPreset.Formats" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Formats As IList(Of MediaFormatBase)" />
      <MemberSignature Language="F#" Value="member this.Formats : System.Collections.Generic.IList&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;" Usage="Azure.ResourceManager.Media.Models.StandardEncoderPreset.Formats" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.ResourceManager.Media.Models.MediaFormatBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The list of outputs to be produced by the encoder.
            Please note <see cref="T:Azure.ResourceManager.Media.Models.MediaFormatBase" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.Media.Models.OutputImageFileFormat" />, <see cref="T:Azure.ResourceManager.Media.Models.JpgFormat" />, <see cref="T:Azure.ResourceManager.Media.Models.Mp4Format" />, <see cref="T:Azure.ResourceManager.Media.Models.MultiBitrateFormat" />, <see cref="T:Azure.ResourceManager.Media.Models.PngFormat" /> and <see cref="T:Azure.ResourceManager.Media.Models.TransportStreamFormat" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.Media.Models.StandardEncoderPreset IJsonModel&lt;StandardEncoderPreset&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.Media.Models.StandardEncoderPreset System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Models.StandardEncoderPreset.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#Media#Models#StandardEncoderPreset&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As StandardEncoderPreset Implements IJsonModel(Of StandardEncoderPreset).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Media.Models.StandardEncoderPreset&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Media.Models.StandardEncoderPreset" Usage="standardEncoderPreset.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.Models.StandardEncoderPreset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;StandardEncoderPreset&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Models.StandardEncoderPreset.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#Media#Models#StandardEncoderPreset&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of StandardEncoderPreset).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="standardEncoderPreset.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.Media.Models.StandardEncoderPreset IPersistableModel&lt;StandardEncoderPreset&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.Media.Models.StandardEncoderPreset System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Models.StandardEncoderPreset.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Media#Models#StandardEncoderPreset&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As StandardEncoderPreset Implements IPersistableModel(Of StandardEncoderPreset).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Media.Models.StandardEncoderPreset&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Media.Models.StandardEncoderPreset" Usage="standardEncoderPreset.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.Models.StandardEncoderPreset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;StandardEncoderPreset&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Models.StandardEncoderPreset.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Media#Models#StandardEncoderPreset&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of StandardEncoderPreset).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="standardEncoderPreset.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;StandardEncoderPreset&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.Models.StandardEncoderPreset.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Media#Models#StandardEncoderPreset&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of StandardEncoderPreset).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="standardEncoderPreset.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Media.Models.StandardEncoderPreset&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
