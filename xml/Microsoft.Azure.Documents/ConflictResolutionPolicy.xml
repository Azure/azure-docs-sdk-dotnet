<Type Name="ConflictResolutionPolicy" FullName="Microsoft.Azure.Documents.ConflictResolutionPolicy">
  <TypeSignature Language="C#" Value="public sealed class ConflictResolutionPolicy : Microsoft.Azure.Documents.JsonSerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ConflictResolutionPolicy extends Microsoft.Azure.Documents.JsonSerializable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Documents.ConflictResolutionPolicy" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConflictResolutionPolicy&#xA;Inherits JsonSerializable" />
  <TypeSignature Language="F#" Value="type ConflictResolutionPolicy = class&#xA;    inherit JsonSerializable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.DocumentDB.Core</AssemblyName>
    <AssemblyVersion>2.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Documents.Client</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.Documents.JsonSerializable</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents the conflict resolution policy configuration for specifying how to resolve conflicts 
            in case writes from different regions result in conflicts on documents in the collection in the Azure Cosmos DB service.
            </summary>
    <remarks>To be added.</remarks>
    <example>
            A collection with custom conflict resolution with no user-registered stored procedure.
            <![CDATA[
            var collectionSpec = new DocumentCollection
            {
                Id = "Multi-master collection",
                ConflictResolutionPolicy policy = new ConflictResolutionPolicy
                {
                    Mode = ConflictResolutionMode.Custom
                }
            };
            DocumentCollection collection = await client.CreateDocumentCollectionAsync(databaseLink, collectionSpec });
            ]]></example>
    <example>
            A collection with custom conflict resolution with a user-registered stored procedure.
            <![CDATA[
            var collectionSpec = new DocumentCollection
            {
                Id = "Multi-master collection",
                ConflictResolutionPolicy policy = new ConflictResolutionPolicy
                {
                    Mode = ConflictResolutionMode.Custom,
                    ConflictResolutionProcedure = "conflictResolutionSprocName"
                }
            };
            DocumentCollection collection = await client.CreateDocumentCollectionAsync(databaseLink, collectionSpec });
            ]]></example>
    <example>
            A collection with last writer wins conflict resolution, based on a path in the conflicting documents.
            <![CDATA[
            var collectionSpec = new DocumentCollection
            {
                Id = "Multi-master collection",
                ConflictResolutionPolicy policy = new ConflictResolutionPolicy
                {
                    Mode = ConflictResolutionMode.LastWriterWins,
                    ConflictResolutionPath = "/path/for/conflict/resolution"
                }
            };
            DocumentCollection collection = await client.CreateDocumentCollectionAsync(databaseLink, collectionSpec });
            ]]></example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConflictResolutionPolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.ConflictResolutionPolicy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.DocumentDB.Core</AssemblyName>
        <AssemblyVersion>2.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Documents.Client</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Documents.ConflictResolutionPolicy" /> class for the Azure Cosmos DB service.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictResolutionPath">
      <MemberSignature Language="C#" Value="public string ConflictResolutionPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConflictResolutionPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Documents.ConflictResolutionPolicy.ConflictResolutionPath" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictResolutionPath As String" />
      <MemberSignature Language="F#" Value="member this.ConflictResolutionPath : string with get, set" Usage="Microsoft.Azure.Documents.ConflictResolutionPolicy.ConflictResolutionPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.DocumentDB.Core</AssemblyName>
        <AssemblyVersion>2.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Documents.Client</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="conflictResolutionPath")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the path which is present in each document in the Azure Cosmos DB service for last writer wins conflict-resolution.
            This path must be present in each document and must be an integer value.
            In case of a conflict occuring on a document, the document with the higher integer value in the specified path will be picked.
            If the path is unspecified, by default the <see cref="P:Microsoft.Azure.Documents.Resource.Timestamp" /> path will be used.
            </summary>
        <value><![CDATA[The path to check values for last-writer wins conflict resolution. That path is a rooted path of the property in the document, such as "/name/first".]]></value>
        <remarks>
            This value should only be set when using <see cref="F:Microsoft.Azure.Documents.ConflictResolutionMode.LastWriterWins" /></remarks>
        <example><![CDATA[
            conflictResolutionPolicy.ConflictResolutionPath = "/name/first";
            ]]></example>
      </Docs>
    </Member>
    <Member MemberName="ConflictResolutionProcedure">
      <MemberSignature Language="C#" Value="public string ConflictResolutionProcedure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConflictResolutionProcedure" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Documents.ConflictResolutionPolicy.ConflictResolutionProcedure" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictResolutionProcedure As String" />
      <MemberSignature Language="F#" Value="member this.ConflictResolutionProcedure : string with get, set" Usage="Microsoft.Azure.Documents.ConflictResolutionPolicy.ConflictResolutionProcedure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.DocumentDB.Core</AssemblyName>
        <AssemblyVersion>2.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Documents.Client</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="conflictResolutionProcedure")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="T:Microsoft.Azure.Documents.StoredProcedure" /> which is used for conflict resolution in the Azure Cosmos DB service.
            This stored procedure may be created after the <see cref="T:Microsoft.Azure.Documents.DocumentCollection" /> is created and can be changed as required. 
            </summary>
        <value><![CDATA[The stored procedure to perform conflict resolution.]]></value>
        <remarks>
            1. This value should only be set when using <see cref="F:Microsoft.Azure.Documents.ConflictResolutionMode.Custom" />
            2. In case the stored procedure fails or throws an exception, the conflict resolution will default to registering conflicts in the conflicts feed"/&gt;.
            3. The user can provide the stored procedure <see cref="P:Microsoft.Azure.Documents.Resource.Id" /> or <see cref="P:Microsoft.Azure.Documents.Resource.ResourceId" />.
            </remarks>
        <example><![CDATA[
            conflictResolutionPolicy.ConflictResolutionProcedure = "/name/first";
            ]]></example>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Documents.ConflictResolutionMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Azure.Documents.ConflictResolutionMode Mode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Documents.ConflictResolutionPolicy.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As ConflictResolutionMode" />
      <MemberSignature Language="F#" Value="member this.Mode : Microsoft.Azure.Documents.ConflictResolutionMode with get, set" Usage="Microsoft.Azure.Documents.ConflictResolutionPolicy.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.DocumentDB.Core</AssemblyName>
        <AssemblyVersion>2.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Documents.Client</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="mode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Documents.ConflictResolutionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="T:Microsoft.Azure.Documents.ConflictResolutionMode" /> in the Azure Cosmos DB service. By default it is <see cref="F:Microsoft.Azure.Documents.ConflictResolutionMode.LastWriterWins" />.
            </summary>
        <value>
            One of the values of the <see cref="T:Microsoft.Azure.Documents.ConflictResolutionMode" /> enumeration.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>