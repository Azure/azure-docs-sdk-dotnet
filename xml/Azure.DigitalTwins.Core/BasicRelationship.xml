<Type Name="BasicRelationship" FullName="Azure.DigitalTwins.Core.BasicRelationship">
  <TypeSignature Language="C#" Value="public class BasicRelationship" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BasicRelationship extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.DigitalTwins.Core.BasicRelationship" />
  <TypeSignature Language="VB.NET" Value="Public Class BasicRelationship" />
  <TypeSignature Language="F#" Value="type BasicRelationship = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             Although relationships have a user-defined schema, these properties should exist on every instance. This is
             useful to use as a base class to ensure your custom relationships have the necessary properties.
             </summary>
    <remarks>
      <para>
             This helper class will only work with <see cref="N:System.Text.Json" />. When used with the <see cref="T:Azure.Core.Serialization.ObjectSerializer" />,
             parameter to <see cref="T:Azure.DigitalTwins.Core.DigitalTwinsClientOptions" /> it will only work with the default (<see cref="T:Azure.Core.Serialization.JsonObjectSerializer" />).
             </para>
      <para>
             For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/main/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
             </para>
    </remarks>
    <example>
             Here's an example of how to use the BasicRelationship helper class to serialize and create a relationship from a building digital twin to a floor digital twin.
            
             <code snippet="Snippet:DigitalTwinsSampleCreateBasicRelationship" language="csharp">
             var buildingFloorRelationshipPayload = new BasicRelationship
             {
                 Id = "buildingFloorRelationshipId",
                 SourceId = "buildingTwinId",
                 TargetId = "floorTwinId",
                 Name = "contains",
                 Properties =
                 {
                     { "Prop1", "Prop1 value" },
                     { "Prop2", 6 }
                 }
             };
            
             Response&lt;BasicRelationship&gt; createBuildingFloorRelationshipResponse = await client
                 .CreateOrReplaceRelationshipAsync&lt;BasicRelationship&gt;("buildingTwinId", "buildingFloorRelationshipId", buildingFloorRelationshipPayload);
             Console.WriteLine($"Created a digital twin relationship '{createBuildingFloorRelationshipResponse.Value.Id}' " +
                 $"from twin '{createBuildingFloorRelationshipResponse.Value.SourceId}' to twin '{createBuildingFloorRelationshipResponse.Value.TargetId}'.");
             </code>
            
             Here's an example of how to use the BasicRelationship helper class to get and deserialize a relationship.
            
             <code snippet="Snippet:DigitalTwinsSampleGetBasicRelationship" language="csharp">
             Response&lt;BasicRelationship&gt; getBasicRelationshipResponse = await client.GetRelationshipAsync&lt;BasicRelationship&gt;(
                 "buildingTwinId",
                 "buildingFloorRelationshipId");
             if (getBasicRelationshipResponse.GetRawResponse().Status == (int)HttpStatusCode.OK)
             {
                 BasicRelationship basicRelationship = getBasicRelationshipResponse.Value;
                 Console.WriteLine($"Retrieved relationship '{basicRelationship.Id}' from twin {basicRelationship.SourceId}.\n\t" +
                     $"Prop1: {basicRelationship.Properties["Prop1"]}\n\t" +
                     $"Prop2: {basicRelationship.Properties["Prop2"]}");
             }
             </code></example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BasicRelationship ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.BasicRelationship.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ETag">
      <MemberSignature Language="C#" Value="public Azure.ETag? ETag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; ETag" />
      <MemberSignature Language="DocId" Value="P:Azure.DigitalTwins.Core.BasicRelationship.ETag" />
      <MemberSignature Language="VB.NET" Value="Public Property ETag As Nullable(Of ETag)" />
      <MemberSignature Language="F#" Value="member this.ETag : Nullable&lt;Azure.ETag&gt; with get, set" Usage="Azure.DigitalTwins.Core.BasicRelationship.ETag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonConverter(typeof(Azure.DigitalTwins.Core.Serialization.OptionalETagConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonConverter(typeof(Azure.DigitalTwins.Core.Serialization.OptionalETagConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonPropertyName("$etag")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonPropertyName("$etag")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ETag&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A string representing a weak ETag for the entity that this request performs an operation against, as per RFC7232.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:Azure.DigitalTwins.Core.BasicRelationship.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As String" />
      <MemberSignature Language="F#" Value="member this.Id : string with get, set" Usage="Azure.DigitalTwins.Core.BasicRelationship.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonPropertyName("$relationshipId")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonPropertyName("$relationshipId")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The unique Id of the relationship. This field is present on every relationship.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Azure.DigitalTwins.Core.BasicRelationship.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Azure.DigitalTwins.Core.BasicRelationship.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonPropertyName("$relationshipName")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonPropertyName("$relationshipName")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The name of the relationship, which defines the type of link (e.g. Contains). This field is present on every relationship.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; Properties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Azure.DigitalTwins.Core.BasicRelationship.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Property Properties As IDictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.IDictionary&lt;string, obj&gt; with get, set" Usage="Azure.DigitalTwins.Core.BasicRelationship.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonExtensionData]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonExtensionData&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Additional, custom properties defined in the DTDL model.
            This property will contain any relationship properties that are not already defined in this class.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceId">
      <MemberSignature Language="C#" Value="public string SourceId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceId" />
      <MemberSignature Language="DocId" Value="P:Azure.DigitalTwins.Core.BasicRelationship.SourceId" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceId As String" />
      <MemberSignature Language="F#" Value="member this.SourceId : string with get, set" Usage="Azure.DigitalTwins.Core.BasicRelationship.SourceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonPropertyName("$sourceId")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonPropertyName("$sourceId")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The unique Id of the source digital twin. This field is present on every relationship.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetId">
      <MemberSignature Language="C#" Value="public string TargetId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetId" />
      <MemberSignature Language="DocId" Value="P:Azure.DigitalTwins.Core.BasicRelationship.TargetId" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetId As String" />
      <MemberSignature Language="F#" Value="member this.TargetId : string with get, set" Usage="Azure.DigitalTwins.Core.BasicRelationship.TargetId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonPropertyName("$targetId")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonPropertyName("$targetId")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The unique Id of the target digital twin. This field is present on every relationship.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
