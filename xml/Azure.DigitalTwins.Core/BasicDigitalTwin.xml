<Type Name="BasicDigitalTwin" FullName="Azure.DigitalTwins.Core.BasicDigitalTwin">
  <TypeSignature Language="C#" Value="public class BasicDigitalTwin" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BasicDigitalTwin extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.DigitalTwins.Core.BasicDigitalTwin" />
  <TypeSignature Language="VB.NET" Value="Public Class BasicDigitalTwin" />
  <TypeSignature Language="F#" Value="type BasicDigitalTwin = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="azure-dotnet">
      <AttributeName Language="C#">[System.Text.Json.Serialization.JsonConverter(typeof(Azure.DigitalTwins.Core.BasicDigitalTwinJsonConverter))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonConverter(typeof(Azure.DigitalTwins.Core.BasicDigitalTwinJsonConverter))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
             An optional, helper class for deserializing a digital twin.
             </summary>
    <remarks>
      <para>
             This helper class will only work with <see cref="N:System.Text.Json" />. When used with the <see cref="T:Azure.Core.Serialization.ObjectSerializer" />,
             parameter to <see cref="T:Azure.DigitalTwins.Core.DigitalTwinsClientOptions" /> it will only work with the default (<see cref="T:Azure.Core.Serialization.JsonObjectSerializer" />).
             </para>
             For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/main/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
             </remarks>
    <example>
             Here's an example of  how to use the BasicDigitalTwin helper class to serialize and create a digital twin.
            
             <code snippet="Snippet:DigitalTwinsSampleCreateBasicTwin" language="csharp">
             // Create digital twin with component payload using the BasicDigitalTwin serialization helper
            
             var basicTwin = new BasicDigitalTwin
             {
                 Id = basicDtId,
                 // model Id of digital twin
                 Metadata =
                 {
                     ModelId = modelId,
                     PropertyMetadata = new Dictionary&lt;string, DigitalTwinPropertyMetadata&gt;
                     {
                         {
                             "Prop2",
                             new DigitalTwinPropertyMetadata
                             {
                                 // must always be serialized as ISO 8601
                                 SourceTime = DateTimeOffset.UtcNow,
                             }
                         }
                     },
                 },
                 Contents =
                 {
                     // digital twin properties
                     { "Prop1", "Value1" },
                     { "Prop2", 987 },
                     // component
                     {
                         "Component1",
                         new BasicDigitalTwinComponent
                         {
                             // writeable component metadata
                             Metadata =  new Dictionary&lt;string, DigitalTwinPropertyMetadata&gt;
                             {
                                 {
                                     "ComponentProp2",
                                     new DigitalTwinPropertyMetadata
                                     {
                                         // must always be serialized as ISO 8601
                                         SourceTime = DateTimeOffset.UtcNow,
                                     }
                                 }
                             },
                             // component properties
                             Contents =
                             {
                                 { "ComponentProp1", "Component value 1" },
                                 { "ComponentProp2", 123 },
                             },
                         }
                     },
                 },
             };
            
             Response&lt;BasicDigitalTwin&gt; createDigitalTwinResponse = await client.CreateOrReplaceDigitalTwinAsync(basicDtId, basicTwin);
             Console.WriteLine($"Created digital twin '{createDigitalTwinResponse.Value.Id}'.");
             </code>
            
             Here's an example of  how to use the BasicDigitalTwin helper class to get and deserialize a digital twin.
            
             <code snippet="Snippet:DigitalTwinsSampleGetBasicDigitalTwin" language="csharp">
             Response&lt;BasicDigitalTwin&gt; getBasicDtResponse = await client.GetDigitalTwinAsync&lt;BasicDigitalTwin&gt;(basicDtId);
             BasicDigitalTwin basicDt = getBasicDtResponse.Value;
            
             // Must cast Component1 as a JsonElement and get its raw text in order to deserialize it as a dictionary
             string component1RawText = ((JsonElement)basicDt.Contents["Component1"]).GetRawText();
             var component1 = JsonSerializer.Deserialize&lt;BasicDigitalTwinComponent&gt;(component1RawText);
            
             Console.WriteLine($"Retrieved and deserialized digital twin {basicDt.Id}:\n\t" +
                 $"ETag: {basicDt.ETag}\n\t" +
                 $"ModelId: {basicDt.Metadata.ModelId}\n\t" +
                 $"LastUpdatedOn: {basicDt.LastUpdatedOn}\n\t" +
                 $"Prop1: {basicDt.Contents["Prop1"]}, last updated on {basicDt.Metadata.PropertyMetadata["Prop1"].LastUpdatedOn}\n\t" +
                 $"Prop2: {basicDt.Contents["Prop2"]}, last updated on {basicDt.Metadata.PropertyMetadata["Prop2"].LastUpdatedOn} and sourced at {basicDt.Metadata.PropertyMetadata["Prop2"].SourceTime}\n\t" +
                 $"Component1.LastUpdatedOn: {component1.LastUpdatedOn}\n\t" +
                 $"Component1.Prop1: {component1.Contents["ComponentProp1"]}, last updated on: {component1.Metadata["ComponentProp1"].LastUpdatedOn}\n\t" +
                 $"Component1.Prop2: {component1.Contents["ComponentProp2"]}, last updated on: {component1.Metadata["ComponentProp2"].LastUpdatedOn} and sourced at: {component1.Metadata["ComponentProp2"].SourceTime}");
             </code></example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BasicDigitalTwin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.BasicDigitalTwin.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; Contents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Contents" />
      <MemberSignature Language="DocId" Value="P:Azure.DigitalTwins.Core.BasicDigitalTwin.Contents" />
      <MemberSignature Language="VB.NET" Value="Public Property Contents As IDictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="member this.Contents : System.Collections.Generic.IDictionary&lt;string, obj&gt; with get, set" Usage="Azure.DigitalTwins.Core.BasicDigitalTwin.Contents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonExtensionData]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonExtensionData&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             This field will contain properties and components as defined in the contents section of the DTDL definition of the twin.
             </summary>
        <value>To be added.</value>
        <remarks>
             If the property is a component, use the <see cref="T:Azure.DigitalTwins.Core.BasicDigitalTwinComponent" /> class to deserialize the payload.
             </remarks>
        <example>
          <code snippet="Snippet:DigitalTwinsSampleGetBasicDigitalTwin" language="csharp">
             Response&lt;BasicDigitalTwin&gt; getBasicDtResponse = await client.GetDigitalTwinAsync&lt;BasicDigitalTwin&gt;(basicDtId);
             BasicDigitalTwin basicDt = getBasicDtResponse.Value;
            
             // Must cast Component1 as a JsonElement and get its raw text in order to deserialize it as a dictionary
             string component1RawText = ((JsonElement)basicDt.Contents["Component1"]).GetRawText();
             var component1 = JsonSerializer.Deserialize&lt;BasicDigitalTwinComponent&gt;(component1RawText);
            
             Console.WriteLine($"Retrieved and deserialized digital twin {basicDt.Id}:\n\t" +
                 $"ETag: {basicDt.ETag}\n\t" +
                 $"ModelId: {basicDt.Metadata.ModelId}\n\t" +
                 $"LastUpdatedOn: {basicDt.LastUpdatedOn}\n\t" +
                 $"Prop1: {basicDt.Contents["Prop1"]}, last updated on {basicDt.Metadata.PropertyMetadata["Prop1"].LastUpdatedOn}\n\t" +
                 $"Prop2: {basicDt.Contents["Prop2"]}, last updated on {basicDt.Metadata.PropertyMetadata["Prop2"].LastUpdatedOn} and sourced at {basicDt.Metadata.PropertyMetadata["Prop2"].SourceTime}\n\t" +
                 $"Component1.LastUpdatedOn: {component1.LastUpdatedOn}\n\t" +
                 $"Component1.Prop1: {component1.Contents["ComponentProp1"]}, last updated on: {component1.Metadata["ComponentProp1"].LastUpdatedOn}\n\t" +
                 $"Component1.Prop2: {component1.Contents["ComponentProp2"]}, last updated on: {component1.Metadata["ComponentProp2"].LastUpdatedOn} and sourced at: {component1.Metadata["ComponentProp2"].SourceTime}");
             </code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="ETag">
      <MemberSignature Language="C#" Value="public Azure.ETag? ETag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; ETag" />
      <MemberSignature Language="DocId" Value="P:Azure.DigitalTwins.Core.BasicDigitalTwin.ETag" />
      <MemberSignature Language="VB.NET" Value="Public Property ETag As Nullable(Of ETag)" />
      <MemberSignature Language="F#" Value="member this.ETag : Nullable&lt;Azure.ETag&gt; with get, set" Usage="Azure.DigitalTwins.Core.BasicDigitalTwin.ETag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonConverter(typeof(Azure.DigitalTwins.Core.Serialization.OptionalETagConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonConverter(typeof(Azure.DigitalTwins.Core.Serialization.OptionalETagConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonPropertyName("$etag")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonPropertyName("$etag")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ETag&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A string representing a weak ETag for the entity that this request performs an operation against, as per RFC7232.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:Azure.DigitalTwins.Core.BasicDigitalTwin.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As String" />
      <MemberSignature Language="F#" Value="member this.Id : string with get, set" Usage="Azure.DigitalTwins.Core.BasicDigitalTwin.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonPropertyName("$dtId")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonPropertyName("$dtId")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The unique Id of the digital twin in a digital twins instance. This field is present on every digital twin.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastUpdatedOn">
      <MemberSignature Language="C#" Value="public DateTimeOffset? LastUpdatedOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; LastUpdatedOn" />
      <MemberSignature Language="DocId" Value="P:Azure.DigitalTwins.Core.BasicDigitalTwin.LastUpdatedOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastUpdatedOn As Nullable(Of DateTimeOffset)" />
      <MemberSignature Language="F#" Value="member this.LastUpdatedOn : Nullable&lt;DateTimeOffset&gt;" Usage="Azure.DigitalTwins.Core.BasicDigitalTwin.LastUpdatedOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonPropertyName("$lastUpdateTime")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonPropertyName("$lastUpdateTime")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The date and time the twin was last updated.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public Azure.DigitalTwins.Core.DigitalTwinMetadata Metadata { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.DigitalTwins.Core.DigitalTwinMetadata Metadata" />
      <MemberSignature Language="DocId" Value="P:Azure.DigitalTwins.Core.BasicDigitalTwin.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public Property Metadata As DigitalTwinMetadata" />
      <MemberSignature Language="F#" Value="member this.Metadata : Azure.DigitalTwins.Core.DigitalTwinMetadata with get, set" Usage="Azure.DigitalTwins.Core.BasicDigitalTwin.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonPropertyName("$metadata")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonPropertyName("$metadata")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.DigitalTwins.Core.DigitalTwinMetadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Information about the model a digital twin conforms to.
            This field is present on every digital twin.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
