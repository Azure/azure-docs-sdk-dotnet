<Type Name="DigitalTwinsClient" FullName="Azure.DigitalTwins.Core.DigitalTwinsClient">
  <TypeSignature Language="C#" Value="public class DigitalTwinsClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DigitalTwinsClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.DigitalTwins.Core.DigitalTwinsClient" />
  <TypeSignature Language="VB.NET" Value="Public Class DigitalTwinsClient" />
  <TypeSignature Language="F#" Value="type DigitalTwinsClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The Digital Twins Service Client contains methods to retrieve digital twin information, like models, components, and relationships.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DigitalTwinsClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates a new instance of the <see cref="T:Azure.DigitalTwins.Core.DigitalTwinsClient" /> class, provided for unit testing purposes only.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DigitalTwinsClient (Uri endpoint, Azure.Core.TokenCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.DigitalTwins.Core.DigitalTwinsClient : Uri * Azure.Core.TokenCredential -&gt; Azure.DigitalTwins.Core.DigitalTwinsClient" Usage="new Azure.DigitalTwins.Core.DigitalTwinsClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">The Azure digital twins service instance URI to connect to.</param>
        <param name="credential">The <see cref="T:Azure.Core.TokenCredential" /> implementation which will be used to request for the authentication token.</param>
        <summary>
             Creates a new instance of the <see cref="T:Azure.DigitalTwins.Core.DigitalTwinsClient" /> class.
             </summary>
        <remarks>
             For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
             </remarks>
        <altmember cref="M:Azure.DigitalTwins.Core.DigitalTwinsClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
        <example>
          <code snippet="Snippet:DigitalTwinsSampleCreateServiceClientWithClientSecret">
             // DefaultAzureCredential supports different authentication mechanisms and determines the appropriate credential type based of the environment it is executing in.
             // It attempts to use multiple credential types in an order until it finds a working credential.
             var tokenCredential = new DefaultAzureCredential();
            
             var client = new DigitalTwinsClient(
                 new Uri(adtEndpoint),
                 tokenCredential);
             </code>
        </example>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DigitalTwinsClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.DigitalTwins.Core.DigitalTwinsClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.DigitalTwins.Core.DigitalTwinsClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.DigitalTwins.Core.DigitalTwinsClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, options As DigitalTwinsClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.DigitalTwins.Core.DigitalTwinsClient : Uri * Azure.Core.TokenCredential * Azure.DigitalTwins.Core.DigitalTwinsClientOptions -&gt; Azure.DigitalTwins.Core.DigitalTwinsClient" Usage="new Azure.DigitalTwins.Core.DigitalTwinsClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.DigitalTwins.Core.DigitalTwinsClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">The Azure digital twins service instance URI to connect to.</param>
        <param name="credential">The <see cref="T:Azure.Core.TokenCredential" /> implementation which will be used to request for the authentication token.</param>
        <param name="options">Options that allow configuration of requests sent to the digital twins service.</param>
        <summary>
            Creates a new instance of the <see cref="T:Azure.DigitalTwins.Core.DigitalTwinsClient" /> class, with options.
            </summary>
        <remarks>
          <para>
            The options parameter provides an opportunity to override default behavior, including specifying API version,
            overriding <see href="https://github.com/Azure/azure-sdk-for-net/blob/master/sdk/core/Azure.Core/samples/Pipeline.md">transport</see>,
            enabling <see href="https://github.com/Azure/azure-sdk-for-net/blob/master/sdk/core/Azure.Core/samples/Diagnostics.md">diagnostics</see>,
            and controlling <see href="https://github.com/Azure/azure-sdk-for-net/blob/master/sdk/core/Azure.Core/samples/Configuration.md">retry strategy</see>.
            </para>
          <para>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </para>
        </remarks>
        <example>
          <code snippet="Snippet:DigitalTwinsSampleCreateServiceClientInteractiveLogin">
             // This illustrates how to specify client options, in this case, by providing an
             // instance of HttpClient for the digital twins client to use.
             var clientOptions = new DigitalTwinsClientOptions
             {
                 Transport = new HttpClientTransport(httpClient),
             };
            
             // By using the InteractiveBrowserCredential, the current user can login using a web browser
             // interactively with the AAD
             var tokenCredential = new InteractiveBrowserCredential(
                 tenantId,
                 clientId,
                 new TokenCredentialOptions { AuthorityHost = KnownAuthorityHosts.AzureCloud });
            
             var client = new DigitalTwinsClient(
                 new Uri(adtEndpoint),
                 tokenCredential,
                 clientOptions);
             </code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="CreateDigitalTwin">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;string&gt; CreateDigitalTwin (string digitalTwinId, string digitalTwin, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;string&gt; CreateDigitalTwin(string digitalTwinId, string digitalTwin, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.CreateDigitalTwin(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDigitalTwin (digitalTwinId As String, digitalTwin As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of String)" />
      <MemberSignature Language="F#" Value="abstract member CreateDigitalTwin : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;string&gt;&#xA;override this.CreateDigitalTwin : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;string&gt;" Usage="digitalTwinsClient.CreateDigitalTwin (digitalTwinId, digitalTwin, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="digitalTwin" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the digital twin.</param>
        <param name="digitalTwin">The application/json digital twin to create.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Creates a digital twin synchronously.
            </summary>
        <returns>The created application/json digital twin and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <exception cref="T:Azure.RequestFailedException">
          <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="digitalTwinId" /> or <paramref name="digitalTwin" /> is <c>null</c>.
            </exception>
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDigitalTwinAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt; CreateDigitalTwinAsync (string digitalTwinId, string digitalTwin, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;string&gt;&gt; CreateDigitalTwinAsync(string digitalTwinId, string digitalTwin, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.CreateDigitalTwinAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDigitalTwinAsync (digitalTwinId As String, digitalTwin As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of String))" />
      <MemberSignature Language="F#" Value="abstract member CreateDigitalTwinAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt;&#xA;override this.CreateDigitalTwinAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt;" Usage="digitalTwinsClient.CreateDigitalTwinAsync (digitalTwinId, digitalTwin, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="digitalTwin" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the digital twin.</param>
        <param name="digitalTwin">The application/json digital twin to create.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
             Creates a digital twin asynchronously.
             </summary>
        <returns>The created application/json digital twin and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>
             For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
             </remarks>
        <exception cref="T:Azure.RequestFailedException">
             The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
             </exception>
        <exception cref="T:System.ArgumentNullException">
             The exception is thrown when <paramref name="digitalTwinId" /> or <paramref name="digitalTwin" /> is <c>null</c>.
             </exception>
        <example>
          <code snippet="Snippet:DigitalTwinsSampleCreateCustomTwin">
             var customTwin = new CustomDigitalTwin
             {
                 Id = customDtId,
                 Metadata = { ModelId = modelId },
                 Prop1 = "Prop1 val",
                 Prop2 = 987,
                 Component1 = new Component1
                 {
                     ComponentProp1 = "Component prop1 val",
                     ComponentProp2 = 123,
                 }
             };
             string dt2Payload = JsonSerializer.Serialize(customTwin);
            
             await client.CreateDigitalTwinAsync(customDtId, dt2Payload);
             Console.WriteLine($"Created digital twin '{customDtId}'.");
             </code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="CreateEventRoute">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CreateEventRoute (string eventRouteId, Azure.DigitalTwins.Core.EventRoute eventRoute, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CreateEventRoute(string eventRouteId, class Azure.DigitalTwins.Core.EventRoute eventRoute, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.CreateEventRoute(System.String,Azure.DigitalTwins.Core.EventRoute,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateEventRoute (eventRouteId As String, eventRoute As EventRoute, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CreateEventRoute : string * Azure.DigitalTwins.Core.EventRoute * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.CreateEventRoute : string * Azure.DigitalTwins.Core.EventRoute * System.Threading.CancellationToken -&gt; Azure.Response" Usage="digitalTwinsClient.CreateEventRoute (eventRouteId, eventRoute, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventRouteId" Type="System.String" />
        <Parameter Name="eventRoute" Type="Azure.DigitalTwins.Core.EventRoute" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="eventRouteId">The Id of the event route to create.</param>
        <param name="eventRoute">The event route data containing the endpoint and optional filter.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Creates an event route synchronously.
            </summary>
        <returns>The http response <see cref="T:Azure.Response" />.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <altmember cref="M:Azure.DigitalTwins.Core.DigitalTwinsClient.CreateEventRouteAsync(System.String,Azure.DigitalTwins.Core.EventRoute,System.Threading.CancellationToken)" />
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="eventRouteId" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateEventRouteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CreateEventRouteAsync (string eventRouteId, Azure.DigitalTwins.Core.EventRoute eventRoute, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CreateEventRouteAsync(string eventRouteId, class Azure.DigitalTwins.Core.EventRoute eventRoute, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.CreateEventRouteAsync(System.String,Azure.DigitalTwins.Core.EventRoute,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateEventRouteAsync (eventRouteId As String, eventRoute As EventRoute, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CreateEventRouteAsync : string * Azure.DigitalTwins.Core.EventRoute * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CreateEventRouteAsync : string * Azure.DigitalTwins.Core.EventRoute * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="digitalTwinsClient.CreateEventRouteAsync (eventRouteId, eventRoute, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventRouteId" Type="System.String" />
        <Parameter Name="eventRoute" Type="Azure.DigitalTwins.Core.EventRoute" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="eventRouteId">The Id of the event route to create.</param>
        <param name="eventRoute">The event route data containing the endpoint and optional filter.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
             Creates an event route asynchronously.
             </summary>
        <returns>The http response <see cref="T:Azure.Response" />.</returns>
        <remarks>
             For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
             </remarks>
        <exception cref="T:Azure.RequestFailedException">
             The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
             </exception>
        <exception cref="T:System.ArgumentNullException">
             The exception is thrown when <paramref name="eventRouteId" /> is <c>null</c>.
             </exception>
        <example>
          <code snippet="Snippet:DigitalTwinsSampleCreateEventRoute">
             string eventFilter = "$eventType = 'DigitalTwinTelemetryMessages' or $eventType = 'DigitalTwinLifecycleNotification'";
             var eventRoute = new EventRoute(eventhubEndpointName)
             {
                 Filter = eventFilter
             };
            
             await client.CreateEventRouteAsync(_eventRouteId, eventRoute);
             Console.WriteLine($"Created event route '{_eventRouteId}'.");
             </code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="CreateModels">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.DigitalTwins.Core.ModelData[]&gt; CreateModels (System.Collections.Generic.IEnumerable&lt;string&gt; models, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.DigitalTwins.Core.ModelData[]&gt; CreateModels(class System.Collections.Generic.IEnumerable`1&lt;string&gt; models, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.CreateModels(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateModels (models As IEnumerable(Of String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of ModelData())" />
      <MemberSignature Language="F#" Value="abstract member CreateModels : seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.DigitalTwins.Core.ModelData[]&gt;&#xA;override this.CreateModels : seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.DigitalTwins.Core.ModelData[]&gt;" Usage="digitalTwinsClient.CreateModels (models, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.DigitalTwins.Core.ModelData[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="models" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="models">The set of models to create. Each string corresponds to exactly one model.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Creates one or many models synchronously.
            </summary>
        <returns>The created models and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>
          <para>
            Bulk model creation is useful when several models have references to each other.
            It simplifies creation for the client because otherwise the models would have to be created in a very specific order.
            The service evaluates all models to ensure all references are satisfied, and then accepts or rejects the set.
            So using this method, model creation is transactional.
            </para>
          <para>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </para>
        </remarks>
        <altmember cref="M:Azure.DigitalTwins.Core.DigitalTwinsClient.CreateModelsAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateModelsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.DigitalTwins.Core.ModelData[]&gt;&gt; CreateModelsAsync (System.Collections.Generic.IEnumerable&lt;string&gt; models, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.DigitalTwins.Core.ModelData[]&gt;&gt; CreateModelsAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; models, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.CreateModelsAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateModelsAsync (models As IEnumerable(Of String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ModelData()))" />
      <MemberSignature Language="F#" Value="abstract member CreateModelsAsync : seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.DigitalTwins.Core.ModelData[]&gt;&gt;&#xA;override this.CreateModelsAsync : seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.DigitalTwins.Core.ModelData[]&gt;&gt;" Usage="digitalTwinsClient.CreateModelsAsync (models, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.DigitalTwins.Core.ModelData[]&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="models" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="models">The set of models to create. Each string corresponds to exactly one model.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Creates one or many models asynchronously.
            </summary>
        <returns>The created models and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>
          <para>
            Bulk model creation is useful when several models have references to each other.
            It simplifies creation for the client because otherwise the models would have to be created in a very specific order.
            The service evaluates all models to ensure all references are satisfied, and then accepts or rejects the set.
            So using this method, model creation is transactional.
            </para>
          <para>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </para>
        </remarks>
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <example>
          <code snippet="Snippet:DigitalTwinsSampleCreateModels">
            await client.CreateModelsAsync(new[] { newComponentModelPayload, newModelPayload });
            Console.WriteLine($"Created models '{componentModelId}' and '{sampleModelId}'.");
            </code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="CreateRelationship">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;string&gt; CreateRelationship (string digitalTwinId, string relationshipId, string relationship, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;string&gt; CreateRelationship(string digitalTwinId, string relationshipId, string relationship, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.CreateRelationship(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateRelationship (digitalTwinId As String, relationshipId As String, relationship As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of String)" />
      <MemberSignature Language="F#" Value="abstract member CreateRelationship : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;string&gt;&#xA;override this.CreateRelationship : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;string&gt;" Usage="digitalTwinsClient.CreateRelationship (digitalTwinId, relationshipId, relationship, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="relationshipId" Type="System.String" />
        <Parameter Name="relationship" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the source digital twin.</param>
        <param name="relationshipId">The Id of the relationship to delete.</param>
        <param name="relationship">The application/json relationship to be created.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Creates a relationship on a digital twin synchronously.
            </summary>
        <returns>The http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>
          <para>
            Relationships are a one-way link from a source digital twin to another, as described at creation time of the assigned model of the digital twin.
            </para>
          <para>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </para>
        </remarks>
        <altmember cref="M:Azure.DigitalTwins.Core.DigitalTwinsClient.CreateRelationshipAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="digitalTwinId" /> or <paramref name="relationshipId" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRelationshipAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt; CreateRelationshipAsync (string digitalTwinId, string relationshipId, string relationship, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;string&gt;&gt; CreateRelationshipAsync(string digitalTwinId, string relationshipId, string relationship, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.CreateRelationshipAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateRelationshipAsync (digitalTwinId As String, relationshipId As String, relationship As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of String))" />
      <MemberSignature Language="F#" Value="abstract member CreateRelationshipAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt;&#xA;override this.CreateRelationshipAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt;" Usage="digitalTwinsClient.CreateRelationshipAsync (digitalTwinId, relationshipId, relationship, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="relationshipId" Type="System.String" />
        <Parameter Name="relationship" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the source digital twin.</param>
        <param name="relationshipId">The Id of the relationship which is being created.</param>
        <param name="relationship">The application/json relationship to be created.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
             Creates a relationship on a digital twin asynchronously.
             </summary>
        <returns>The http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>
          <para>
             Relationships are a one-way link from a source digital twin to another, as described at creation time of the assigned model of the digital twin.
             </para>
          <para>
             For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
             </para>
        </remarks>
        <exception cref="T:Azure.RequestFailedException">
             The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
             </exception>
        <exception cref="T:System.ArgumentNullException">
             The exception is thrown when <paramref name="digitalTwinId" /> or <paramref name="relationshipId" /> is <c>null</c>.
             </exception>
        <example>
          <code snippet="Snippet:DigitalTwinsSampleCreateCustomRelationship">
             var floorBuildingRelationshipPayload = new CustomRelationship
             {
                 Id = "floorBuildingRelationshipId",
                 SourceId = "floorTwinId",
                 TargetId = "buildingTwinId",
                 Name = "containedIn",
                 Prop1 = "Prop1 val",
                 Prop2 = 4
             };
             string serializedCustomRelationship = JsonSerializer.Serialize(floorBuildingRelationshipPayload);
            
             Response&lt;string&gt; createCustomRelationshipResponse = await client.CreateRelationshipAsync("floorTwinId", "floorBuildingRelationshipId", serializedCustomRelationship);
             Console.WriteLine($"Created a digital twin relationship 'floorBuildingRelationshipId' from twin 'floorTwinId' to twin 'buildingTwinId'.");
             </code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="DecommissionModel">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DecommissionModel (string modelId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DecommissionModel(string modelId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.DecommissionModel(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DecommissionModel (modelId As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DecommissionModel : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DecommissionModel : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="digitalTwinsClient.DecommissionModel (modelId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId">The Id of the model to decommission.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Decommissions a model synchronously.
            </summary>
        <returns>The http response <see cref="T:Azure.Response" />.</returns>
        <remarks>
          <para>
            When a model is decomissioned, new digital twins will no longer be able to be defined by this model.
            However, existing digital twins may continue to use this model.
            Once a model is decomissioned, it may not be recommissioned.
            </para>
          <para>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </para>
        </remarks>
        <altmember cref="M:Azure.DigitalTwins.Core.DigitalTwinsClient.DecommissionModelAsync(System.String,System.Threading.CancellationToken)" />
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="modelId" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="DecommissionModelAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DecommissionModelAsync (string modelId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DecommissionModelAsync(string modelId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.DecommissionModelAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DecommissionModelAsync (modelId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DecommissionModelAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DecommissionModelAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="digitalTwinsClient.DecommissionModelAsync (modelId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId">The Id of the model to decommission.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Decommissions a model asynchronously.
            </summary>
        <returns>The http response <see cref="T:Azure.Response" />.</returns>
        <remarks>
          <para>
            When a model is decomissioned, new digital twins will no longer be able to be defined by this model.
            However, existing digital twins may continue to use this model.
            Once a model is decomissioned, it may not be recommissioned.
            </para>
          <para>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </para>
        </remarks>
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="modelId" /> is <c>null</c>.
            </exception>
        <example>
          <code snippet="Snippet:DigitalTwinsSampleDecommisionModel">
            try
            {
                await client.DecommissionModelAsync(sampleModelId);
                Console.WriteLine($"Decommissioned model '{sampleModelId}'.");
            }
            catch (RequestFailedException ex)
            {
                FatalError($"Failed to decommision model '{sampleModelId}' due to:\n{ex}");
            }
            </code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="DeleteDigitalTwin">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteDigitalTwin (string digitalTwinId, Azure.DigitalTwins.Core.RequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteDigitalTwin(string digitalTwinId, class Azure.DigitalTwins.Core.RequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.DeleteDigitalTwin(System.String,Azure.DigitalTwins.Core.RequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteDigitalTwin (digitalTwinId As String, Optional requestOptions As RequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteDigitalTwin : string * Azure.DigitalTwins.Core.RequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteDigitalTwin : string * Azure.DigitalTwins.Core.RequestOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="digitalTwinsClient.DeleteDigitalTwin (digitalTwinId, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.DigitalTwins.Core.RequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the digital twin to delete.</param>
        <param name="requestOptions">The optional settings for this request.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Deletes a digital twin synchronously.
            </summary>
        <returns>The http response <see cref="T:Azure.Response" />.</returns>
        <remarks>
          <para>
            To delete a digital twin, any relationships referencing it must be deleted first.
            </para>
          <para>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </para>
        </remarks>
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="digitalTwinId" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteDigitalTwinAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteDigitalTwinAsync (string digitalTwinId, Azure.DigitalTwins.Core.RequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteDigitalTwinAsync(string digitalTwinId, class Azure.DigitalTwins.Core.RequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.DeleteDigitalTwinAsync(System.String,Azure.DigitalTwins.Core.RequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteDigitalTwinAsync (digitalTwinId As String, Optional requestOptions As RequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteDigitalTwinAsync : string * Azure.DigitalTwins.Core.RequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteDigitalTwinAsync : string * Azure.DigitalTwins.Core.RequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="digitalTwinsClient.DeleteDigitalTwinAsync (digitalTwinId, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.DigitalTwins.Core.RequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the digital twin to delete.</param>
        <param name="requestOptions">The optional settings for this request.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Deletes a digital twin asynchronously.
            </summary>
        <returns>The http response <see cref="T:Azure.Response" />.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <remarks>
            To delete a digital twin, any relationships referencing it must be deleted first.
            </remarks>
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="digitalTwinId" /> is <c>null</c>.
            </exception>
        <example>
          <code snippet="Snippet:DigitalTwinsSampleDeleteTwin">
            await client.DeleteDigitalTwinAsync(digitalTwinId);
            Console.WriteLine($"Deleted digital twin '{digitalTwinId}'.");
            </code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="DeleteEventRoute">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteEventRoute (string eventRouteId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteEventRoute(string eventRouteId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.DeleteEventRoute(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteEventRoute (eventRouteId As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteEventRoute : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteEventRoute : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="digitalTwinsClient.DeleteEventRoute (eventRouteId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventRouteId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="eventRouteId">The Id of the event route to delete.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Deletes an event route synchronously.
            </summary>
        <returns>The http response <see cref="T:Azure.Response" />.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <altmember cref="M:Azure.DigitalTwins.Core.DigitalTwinsClient.DeleteEventRouteAsync(System.String,System.Threading.CancellationToken)" />
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="eventRouteId" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteEventRouteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteEventRouteAsync (string eventRouteId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteEventRouteAsync(string eventRouteId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.DeleteEventRouteAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteEventRouteAsync (eventRouteId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteEventRouteAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteEventRouteAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="digitalTwinsClient.DeleteEventRouteAsync (eventRouteId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventRouteId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="eventRouteId">The Id of the event route to delete.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Deletes an event route asynchronously.
            </summary>
        <returns>The http response <see cref="T:Azure.Response" />.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="eventRouteId" /> is <c>null</c>.
            </exception>
        <example>
          <code snippet="Snippet:DigitalTwinsSampleDeleteEventRoute">
            await client.DeleteEventRouteAsync(_eventRouteId);
            Console.WriteLine($"Deleted event route '{_eventRouteId}'.");
            </code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="DeleteModel">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteModel (string modelId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteModel(string modelId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.DeleteModel(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteModel (modelId As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteModel : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteModel : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="digitalTwinsClient.DeleteModel (modelId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId"> The id for the model. The id is globally unique and case sensitive. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a model synchronously.
            </summary>
        <returns>The http response <see cref="T:Azure.Response" />.</returns>
        <remarks>
          <para>
            A model can only be deleted if no other models reference it.
            Status codes:
            204 (No Content): Success.
            400 (Bad Request): The request is invalid.
            404 (Not Found): There is no model with the provided id.
            409 (Conflict): There are dependencies on the model that prevent it from being deleted.
            </para>
          <para>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </para>
        </remarks>
        <altmember cref="M:Azure.DigitalTwins.Core.DigitalTwinsClient.DeleteModelAsync(System.String,System.Threading.CancellationToken)" />
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="modelId" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteModelAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteModelAsync (string modelId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteModelAsync(string modelId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.DeleteModelAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteModelAsync (modelId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteModelAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteModelAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="digitalTwinsClient.DeleteModelAsync (modelId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId"> The id for the model. The id is globally unique and case sensitive. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a model asynchronously.
            </summary>
        <returns>The http response <see cref="T:Azure.Response" />.</returns>
        <remarks>
          <para>
            A model can only be deleted if no other models reference it.
            Status codes:
            204 (No Content): Success.
            400 (Bad Request): The request is invalid.
            404 (Not Found): There is no model with the provided id.
            409 (Conflict): There are dependencies on the model that prevent it from being deleted.
            </para>
          <para>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </para>
        </remarks>
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="modelId" /> is <c>null</c>.
            </exception>
        <example>
          <code snippet="Snippet:DigitalTwinsSampleDeleteModel">
            try
            {
                await client.DeleteModelAsync(sampleModelId);
                Console.WriteLine($"Deleted model '{sampleModelId}'.");
            }
            catch (Exception ex)
            {
                FatalError($"Failed to delete model '{sampleModelId}' due to:\n{ex}");
            }
            </code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="DeleteRelationship">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteRelationship (string digitalTwinId, string relationshipId, Azure.DigitalTwins.Core.RequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteRelationship(string digitalTwinId, string relationshipId, class Azure.DigitalTwins.Core.RequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.DeleteRelationship(System.String,System.String,Azure.DigitalTwins.Core.RequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteRelationship (digitalTwinId As String, relationshipId As String, Optional requestOptions As RequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteRelationship : string * string * Azure.DigitalTwins.Core.RequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteRelationship : string * string * Azure.DigitalTwins.Core.RequestOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="digitalTwinsClient.DeleteRelationship (digitalTwinId, relationshipId, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="relationshipId" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.DigitalTwins.Core.RequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the source digital twin.</param>
        <param name="relationshipId">The Id of the relationship to delete.</param>
        <param name="requestOptions">The optional settings for this request.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Deletes a relationship on a digital twin synchronously.
            </summary>
        <returns>The http response <see cref="T:Azure.Response" />.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <altmember cref="M:Azure.DigitalTwins.Core.DigitalTwinsClient.DeleteRelationshipAsync(System.String,System.String,Azure.DigitalTwins.Core.RequestOptions,System.Threading.CancellationToken)" />
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="digitalTwinId" /> or <paramref name="relationshipId" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteRelationshipAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteRelationshipAsync (string digitalTwinId, string relationshipId, Azure.DigitalTwins.Core.RequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteRelationshipAsync(string digitalTwinId, string relationshipId, class Azure.DigitalTwins.Core.RequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.DeleteRelationshipAsync(System.String,System.String,Azure.DigitalTwins.Core.RequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteRelationshipAsync (digitalTwinId As String, relationshipId As String, Optional requestOptions As RequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteRelationshipAsync : string * string * Azure.DigitalTwins.Core.RequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteRelationshipAsync : string * string * Azure.DigitalTwins.Core.RequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="digitalTwinsClient.DeleteRelationshipAsync (digitalTwinId, relationshipId, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="relationshipId" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.DigitalTwins.Core.RequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the source digital twin.</param>
        <param name="relationshipId">The Id of the relationship to delete.</param>
        <param name="requestOptions">The optional settings for this request.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Deletes a relationship on a digital twin asynchronously.
            </summary>
        <returns>The http response <see cref="T:Azure.Response" />.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <exception cref="T:Azure.RequestFailedException">
          <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="digitalTwinId" /> or <paramref name="relationshipId" /> is <c>null</c>.
            </exception>
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetComponent">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;string&gt; GetComponent (string digitalTwinId, string componentPath, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;string&gt; GetComponent(string digitalTwinId, string componentPath, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.GetComponent(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetComponent (digitalTwinId As String, componentPath As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetComponent : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;string&gt;&#xA;override this.GetComponent : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;string&gt;" Usage="digitalTwinsClient.GetComponent (digitalTwinId, componentPath, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="componentPath" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the digital twin.</param>
        <param name="componentPath">The component being retrieved.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets a component on a digital twin synchronously.
            </summary>
        <returns>Json string representation of the component corresponding to the provided componentPath and the HTTP response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <altmember cref="M:Azure.DigitalTwins.Core.DigitalTwinsClient.GetComponentAsync(System.String,System.String,System.Threading.CancellationToken)" />
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="digitalTwinId" /> or <paramref name="componentPath" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetComponentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt; GetComponentAsync (string digitalTwinId, string componentPath, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;string&gt;&gt; GetComponentAsync(string digitalTwinId, string componentPath, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.GetComponentAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetComponentAsync (digitalTwinId As String, componentPath As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of String))" />
      <MemberSignature Language="F#" Value="abstract member GetComponentAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt;&#xA;override this.GetComponentAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt;" Usage="digitalTwinsClient.GetComponentAsync (digitalTwinId, componentPath, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="componentPath" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the digital twin.</param>
        <param name="componentPath">The component being retrieved.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets a component on a digital twin asynchronously.
            </summary>
        <returns>Json string representation of the component corresponding to the provided componentPath and the HTTP response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="digitalTwinId" /> or <paramref name="componentPath" /> is <c>null</c>.
            </exception>
        <example>
          <code snippet="Snippet:DigitalTwinsSampleGetComponent">
            await client.GetComponentAsync(basicDtId, SamplesConstants.ComponentPath);
            Console.WriteLine($"Retrieved component for digital twin '{basicDtId}'.");
            </code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="GetDigitalTwin">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;string&gt; GetDigitalTwin (string digitalTwinId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;string&gt; GetDigitalTwin(string digitalTwinId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.GetDigitalTwin(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDigitalTwin (digitalTwinId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetDigitalTwin : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;string&gt;&#xA;override this.GetDigitalTwin : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;string&gt;" Usage="digitalTwinsClient.GetDigitalTwin (digitalTwinId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the digital twin.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets a digital twin synchronously.
            </summary>
        <returns>The application/json digital twin and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>
          <para>
            The returned application/json string can always be deserialized into an instance of <see cref="T:Azure.DigitalTwins.Core.Serialization.BasicDigitalTwin" />.
            It may also be deserialized into custom digital twin types that extend the <see cref="T:Azure.DigitalTwins.Core.Serialization.BasicDigitalTwin" /> with additional
            strongly typed properties provided that you know the definition of the retrieved digital twin prior to deserialization.
            </para>
          <para>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </para>
        </remarks>
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="digitalTwinId" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDigitalTwinAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt; GetDigitalTwinAsync (string digitalTwinId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;string&gt;&gt; GetDigitalTwinAsync(string digitalTwinId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.GetDigitalTwinAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDigitalTwinAsync (digitalTwinId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of String))" />
      <MemberSignature Language="F#" Value="abstract member GetDigitalTwinAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt;&#xA;override this.GetDigitalTwinAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt;" Usage="digitalTwinsClient.GetDigitalTwinAsync (digitalTwinId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the digital twin.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
             Gets a digital twin asynchronously.
             </summary>
        <returns>The application/json digital twin and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>
          <para>
             The returned application/json string can always be deserialized into an instance of <see cref="T:Azure.DigitalTwins.Core.Serialization.BasicDigitalTwin" />.
             It may also be deserialized into custom digital twin types that extend the <see cref="T:Azure.DigitalTwins.Core.Serialization.BasicDigitalTwin" /> with additional
             strongly typed properties provided that you know the definition of the retrieved digital twin prior to deserialization.
             </para>
          <para>
             For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
             </para>
        </remarks>
        <exception cref="T:Azure.RequestFailedException">
             The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
             </exception>
        <exception cref="T:System.ArgumentNullException">
             The exception is thrown when <paramref name="digitalTwinId" /> is <c>null</c>.
             </exception>
        <example>
             This sample demonstrates getting and deserializing a digital twin into a custom data type.
            
             <code snippet="Snippet:DigitalTwinsSampleGetCustomDigitalTwin">
             Response&lt;string&gt; getCustomDtResponse = await client.GetDigitalTwinAsync(customDtId);
             CustomDigitalTwin customDt = JsonSerializer.Deserialize&lt;CustomDigitalTwin&gt;(getCustomDtResponse.Value);
             Console.WriteLine($"Retrieved and deserialized digital twin {customDt.Id}:\n\t" +
                 $"ETag: {customDt.ETag}\n\t" +
                 $"Prop1: {customDt.Prop1}\n\t" +
                 $"Prop2: {customDt.Prop2}\n\t" +
                 $"ComponentProp1: {customDt.Component1.ComponentProp1}\n\t" +
                 $"ComponentProp2: {customDt.Component1.ComponentProp2}");
             </code></example>
      </Docs>
    </Member>
    <Member MemberName="GetEventRoute">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.DigitalTwins.Core.EventRoute&gt; GetEventRoute (string eventRouteId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.DigitalTwins.Core.EventRoute&gt; GetEventRoute(string eventRouteId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.GetEventRoute(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEventRoute (eventRouteId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EventRoute)" />
      <MemberSignature Language="F#" Value="abstract member GetEventRoute : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.DigitalTwins.Core.EventRoute&gt;&#xA;override this.GetEventRoute : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.DigitalTwins.Core.EventRoute&gt;" Usage="digitalTwinsClient.GetEventRoute (eventRouteId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.DigitalTwins.Core.EventRoute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventRouteId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="eventRouteId">The Id of the event route.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets an event route by Id synchronously.
            </summary>
        <returns>The application/json event routes and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <altmember cref="M:Azure.DigitalTwins.Core.DigitalTwinsClient.GetEventRouteAsync(System.String,System.Threading.CancellationToken)" />
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="eventRouteId" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventRouteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.DigitalTwins.Core.EventRoute&gt;&gt; GetEventRouteAsync (string eventRouteId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.DigitalTwins.Core.EventRoute&gt;&gt; GetEventRouteAsync(string eventRouteId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.GetEventRouteAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEventRouteAsync (eventRouteId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EventRoute))" />
      <MemberSignature Language="F#" Value="abstract member GetEventRouteAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.DigitalTwins.Core.EventRoute&gt;&gt;&#xA;override this.GetEventRouteAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.DigitalTwins.Core.EventRoute&gt;&gt;" Usage="digitalTwinsClient.GetEventRouteAsync (eventRouteId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.DigitalTwins.Core.EventRoute&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventRouteId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="eventRouteId">The Id of the event route.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets an event route by Id asynchronously.
            </summary>
        <returns>The application/json event routes and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="eventRouteId" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventRoutes">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.DigitalTwins.Core.EventRoute&gt; GetEventRoutes (Azure.DigitalTwins.Core.EventRoutesListOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.DigitalTwins.Core.EventRoute&gt; GetEventRoutes(class Azure.DigitalTwins.Core.EventRoutesListOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.GetEventRoutes(Azure.DigitalTwins.Core.EventRoutesListOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEventRoutes (Optional options As EventRoutesListOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of EventRoute)" />
      <MemberSignature Language="F#" Value="abstract member GetEventRoutes : Azure.DigitalTwins.Core.EventRoutesListOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.DigitalTwins.Core.EventRoute&gt;&#xA;override this.GetEventRoutes : Azure.DigitalTwins.Core.EventRoutesListOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.DigitalTwins.Core.EventRoute&gt;" Usage="digitalTwinsClient.GetEventRoutes (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.DigitalTwins.Core.EventRoute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.DigitalTwins.Core.EventRoutesListOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">The options to use when listing the event routes. One can set the maximum number of items to retrieve per request, however the service may return less than requested.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>.
            Lists the event routes in a digital twins instance by iterating through a collection synchronously.
            </summary>
        <returns>The pageable list <see cref="T:Azure.Pageable`1" /> of application/json event routes and the http response.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <altmember cref="M:Azure.DigitalTwins.Core.DigitalTwinsClient.GetEventRoutesAsync(Azure.DigitalTwins.Core.EventRoutesListOptions,System.Threading.CancellationToken)" />
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventRoutesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.DigitalTwins.Core.EventRoute&gt; GetEventRoutesAsync (Azure.DigitalTwins.Core.EventRoutesListOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.DigitalTwins.Core.EventRoute&gt; GetEventRoutesAsync(class Azure.DigitalTwins.Core.EventRoutesListOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.GetEventRoutesAsync(Azure.DigitalTwins.Core.EventRoutesListOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEventRoutesAsync (Optional options As EventRoutesListOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of EventRoute)" />
      <MemberSignature Language="F#" Value="abstract member GetEventRoutesAsync : Azure.DigitalTwins.Core.EventRoutesListOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.DigitalTwins.Core.EventRoute&gt;&#xA;override this.GetEventRoutesAsync : Azure.DigitalTwins.Core.EventRoutesListOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.DigitalTwins.Core.EventRoute&gt;" Usage="digitalTwinsClient.GetEventRoutesAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.DigitalTwins.Core.EventRoute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.DigitalTwins.Core.EventRoutesListOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">The options to use when listing the event routes. One can set the maximum number of items to retrieve per request, however the service may return less than requested.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>.
            Lists the event routes in a digital twins instance by iterating through a collection asynchronously.
            </summary>
        <returns>The pageable list <see cref="T:Azure.AsyncPageable`1" /> of application/json event routes and the http response.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <example>
          <code snippet="Snippet:DigitalTwinsSampleGetEventRoutes">
            AsyncPageable&lt;EventRoute&gt; response = client.GetEventRoutesAsync();
            await foreach (EventRoute er in response)
            {
                Console.WriteLine($"Event route '{er.Id}', endpoint name '{er.EndpointName}'");
            }
            </code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="GetIncomingRelationships">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.DigitalTwins.Core.IncomingRelationship&gt; GetIncomingRelationships (string digitalTwinId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.DigitalTwins.Core.IncomingRelationship&gt; GetIncomingRelationships(string digitalTwinId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.GetIncomingRelationships(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIncomingRelationships (digitalTwinId As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of IncomingRelationship)" />
      <MemberSignature Language="F#" Value="abstract member GetIncomingRelationships : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.DigitalTwins.Core.IncomingRelationship&gt;&#xA;override this.GetIncomingRelationships : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.DigitalTwins.Core.IncomingRelationship&gt;" Usage="digitalTwinsClient.GetIncomingRelationships (digitalTwinId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.DigitalTwins.Core.IncomingRelationship&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the target digital twin.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets all the relationships referencing a digital twin as a target by iterating through a collection synchronously.
            </summary>
        <returns>The pageable list <see cref="T:Azure.Pageable`1" /> of application/json relationships directed towards the specified digital twin and the http response.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <altmember cref="M:Azure.DigitalTwins.Core.DigitalTwinsClient.GetIncomingRelationshipsAsync(System.String,System.Threading.CancellationToken)" />
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="digitalTwinId" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIncomingRelationshipsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.DigitalTwins.Core.IncomingRelationship&gt; GetIncomingRelationshipsAsync (string digitalTwinId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.DigitalTwins.Core.IncomingRelationship&gt; GetIncomingRelationshipsAsync(string digitalTwinId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.GetIncomingRelationshipsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIncomingRelationshipsAsync (digitalTwinId As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of IncomingRelationship)" />
      <MemberSignature Language="F#" Value="abstract member GetIncomingRelationshipsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.DigitalTwins.Core.IncomingRelationship&gt;&#xA;override this.GetIncomingRelationshipsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.DigitalTwins.Core.IncomingRelationship&gt;" Usage="digitalTwinsClient.GetIncomingRelationshipsAsync (digitalTwinId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.DigitalTwins.Core.IncomingRelationship&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the target digital twin.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
             Gets all the relationships referencing a digital twin as a target by iterating through a collection asynchronously.
             </summary>
        <returns>The pageable list <see cref="T:Azure.AsyncPageable`1" /> of application/json relationships directed towards the specified digital twin and the http response.</returns>
        <remarks>
             For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
             </remarks>
        <exception cref="T:Azure.RequestFailedException">
             The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
             </exception>
        <exception cref="T:System.ArgumentNullException">
             The exception is thrown when <paramref name="digitalTwinId" /> is <c>null</c>.
             </exception>
        <example>
          <code snippet="Snippet:DigitalTwinsSampleGetIncomingRelationships">
             AsyncPageable&lt;IncomingRelationship&gt; incomingRelationships = client.GetIncomingRelationshipsAsync("buildingTwinId");
            
             await foreach (IncomingRelationship incomingRelationship in incomingRelationships)
             {
                 Console.WriteLine($"Found an incoming relationship '{incomingRelationship.RelationshipId}' from '{incomingRelationship.SourceId}'.");
             }
             </code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="GetModel">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.DigitalTwins.Core.ModelData&gt; GetModel (string modelId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.DigitalTwins.Core.ModelData&gt; GetModel(string modelId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.GetModel(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetModel (modelId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ModelData)" />
      <MemberSignature Language="F#" Value="abstract member GetModel : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.DigitalTwins.Core.ModelData&gt;&#xA;override this.GetModel : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.DigitalTwins.Core.ModelData&gt;" Usage="digitalTwinsClient.GetModel (modelId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.DigitalTwins.Core.ModelData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId">The Id of the model.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets a model, including the model metadata and the model definition synchronously.
            </summary>
        <returns>The application/json model and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <altmember cref="M:Azure.DigitalTwins.Core.DigitalTwinsClient.GetModelAsync(System.String,System.Threading.CancellationToken)" />
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="modelId" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetModelAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.DigitalTwins.Core.ModelData&gt;&gt; GetModelAsync (string modelId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.DigitalTwins.Core.ModelData&gt;&gt; GetModelAsync(string modelId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.GetModelAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetModelAsync (modelId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ModelData))" />
      <MemberSignature Language="F#" Value="abstract member GetModelAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.DigitalTwins.Core.ModelData&gt;&gt;&#xA;override this.GetModelAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.DigitalTwins.Core.ModelData&gt;&gt;" Usage="digitalTwinsClient.GetModelAsync (modelId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.DigitalTwins.Core.ModelData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId">The Id of the model.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets a model, including the model metadata and the model definition asynchronously.
            </summary>
        <returns>The application/json model and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="modelId" /> is <c>null</c>.
            </exception>
        <example>
          <code snippet="Snippet:DigitalTwinsSampleGetModel">
            Response&lt;ModelData&gt; sampleModelResponse = await client.GetModelAsync(sampleModelId);
            Console.WriteLine($"Retrieved model '{sampleModelResponse.Value.Id}'.");
            </code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="GetModels">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.DigitalTwins.Core.ModelData&gt; GetModels (System.Collections.Generic.IEnumerable&lt;string&gt; dependenciesFor = default, bool includeModelDefinition = false, Azure.DigitalTwins.Core.GetModelsOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.DigitalTwins.Core.ModelData&gt; GetModels(class System.Collections.Generic.IEnumerable`1&lt;string&gt; dependenciesFor, bool includeModelDefinition, class Azure.DigitalTwins.Core.GetModelsOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.GetModels(System.Collections.Generic.IEnumerable{System.String},System.Boolean,Azure.DigitalTwins.Core.GetModelsOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetModels (Optional dependenciesFor As IEnumerable(Of String) = Nothing, Optional includeModelDefinition As Boolean = false, Optional options As GetModelsOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ModelData)" />
      <MemberSignature Language="F#" Value="abstract member GetModels : seq&lt;string&gt; * bool * Azure.DigitalTwins.Core.GetModelsOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.DigitalTwins.Core.ModelData&gt;&#xA;override this.GetModels : seq&lt;string&gt; * bool * Azure.DigitalTwins.Core.GetModelsOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.DigitalTwins.Core.ModelData&gt;" Usage="digitalTwinsClient.GetModels (dependenciesFor, includeModelDefinition, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.DigitalTwins.Core.ModelData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependenciesFor" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="includeModelDefinition" Type="System.Boolean" />
        <Parameter Name="options" Type="Azure.DigitalTwins.Core.GetModelsOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dependenciesFor">The model Ids to have dependencies retrieved.</param>
        <param name="includeModelDefinition">Whether to include the model definition in the result. If false, only the model metadata will be returned.</param>
        <param name="options">The options to follow when listing the models. For example, the page size hint can be specified.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets the list of models by iterating through a collection synchronously.
            </summary>
        <returns>The pageable list <see cref="T:Azure.Pageable`1" /> of application/json models and the http response.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <altmember cref="M:Azure.DigitalTwins.Core.DigitalTwinsClient.GetModelsAsync(System.Collections.Generic.IEnumerable{System.String},System.Boolean,Azure.DigitalTwins.Core.GetModelsOptions,System.Threading.CancellationToken)" />
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetModelsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.DigitalTwins.Core.ModelData&gt; GetModelsAsync (System.Collections.Generic.IEnumerable&lt;string&gt; dependenciesFor = default, bool includeModelDefinition = false, Azure.DigitalTwins.Core.GetModelsOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.DigitalTwins.Core.ModelData&gt; GetModelsAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; dependenciesFor, bool includeModelDefinition, class Azure.DigitalTwins.Core.GetModelsOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.GetModelsAsync(System.Collections.Generic.IEnumerable{System.String},System.Boolean,Azure.DigitalTwins.Core.GetModelsOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetModelsAsync (Optional dependenciesFor As IEnumerable(Of String) = Nothing, Optional includeModelDefinition As Boolean = false, Optional options As GetModelsOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ModelData)" />
      <MemberSignature Language="F#" Value="abstract member GetModelsAsync : seq&lt;string&gt; * bool * Azure.DigitalTwins.Core.GetModelsOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.DigitalTwins.Core.ModelData&gt;&#xA;override this.GetModelsAsync : seq&lt;string&gt; * bool * Azure.DigitalTwins.Core.GetModelsOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.DigitalTwins.Core.ModelData&gt;" Usage="digitalTwinsClient.GetModelsAsync (dependenciesFor, includeModelDefinition, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.DigitalTwins.Core.ModelData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependenciesFor" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="includeModelDefinition" Type="System.Boolean" />
        <Parameter Name="options" Type="Azure.DigitalTwins.Core.GetModelsOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dependenciesFor">The model Ids to have dependencies retrieved.</param>
        <param name="includeModelDefinition">Whether to include the model definition in the result. If false, only the model metadata will be returned.</param>
        <param name="options">The options to follow when listing the models. For example, the page size hint can be specified.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets the list of models by iterating through a collection asynchronously.
            </summary>
        <returns>The pageable list <see cref="T:Azure.AsyncPageable`1" /> of application/json models and the http response.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <example>
          <code snippet="Snippet:DigitalTwinsSampleGetModels">
            AsyncPageable&lt;ModelData&gt; allModels = client.GetModelsAsync();
            await foreach (ModelData model in allModels)
            {
                Console.WriteLine($"Retrieved model '{model.Id}', " +
                    $"display name '{model.DisplayName["en"]}', " +
                    $"upload time '{model.UploadTime}', " +
                    $"and decommissioned '{model.Decommissioned}'");
            }
            </code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="GetRelationship">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;string&gt; GetRelationship (string digitalTwinId, string relationshipId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;string&gt; GetRelationship(string digitalTwinId, string relationshipId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.GetRelationship(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRelationship (digitalTwinId As String, relationshipId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetRelationship : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;string&gt;&#xA;override this.GetRelationship : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;string&gt;" Usage="digitalTwinsClient.GetRelationship (digitalTwinId, relationshipId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="relationshipId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the source digital twin.</param>
        <param name="relationshipId">The Id of the relationship to retrieve.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets a relationship on a digital twin synchronously.
            </summary>
        <returns>The application/json relationship corresponding to the provided relationshipId and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <altmember cref="M:Azure.DigitalTwins.Core.DigitalTwinsClient.GetRelationshipAsync(System.String,System.String,System.Threading.CancellationToken)" />
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="digitalTwinId" /> or <paramref name="relationshipId" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt; GetRelationshipAsync (string digitalTwinId, string relationshipId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;string&gt;&gt; GetRelationshipAsync(string digitalTwinId, string relationshipId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.GetRelationshipAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRelationshipAsync (digitalTwinId As String, relationshipId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of String))" />
      <MemberSignature Language="F#" Value="abstract member GetRelationshipAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt;&#xA;override this.GetRelationshipAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt;" Usage="digitalTwinsClient.GetRelationshipAsync (digitalTwinId, relationshipId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="relationshipId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the source digital twin.</param>
        <param name="relationshipId">The Id of the relationship to retrieve.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets a relationship on a digital twin asynchronously.
            </summary>
        <returns>The application/json relationship corresponding to the provided relationshipId and the http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>
          <para>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </para>
        </remarks>
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="digitalTwinId" /> or <paramref name="relationshipId" /> is <c>null</c>.
            </exception>
        <example>
            This sample demonstrates getting and deserializing a digital twin relationship into a custom data type.
            <code snippet="Snippet:DigitalTwinsSampleGetCustomRelationship">
            Response&lt;string&gt; getCustomRelationshipResponse = await client.GetRelationshipAsync("floorTwinId", "floorBuildingRelationshipId");
            CustomRelationship getCustomRelationship = JsonSerializer.Deserialize&lt;CustomRelationship&gt;(getCustomRelationshipResponse.Value);
            Console.WriteLine($"Retrieved and deserialized relationship '{getCustomRelationship.Id}' from twin '{getCustomRelationship.SourceId}'.\n\t" +
                $"Prop1: {getCustomRelationship.Prop1}\n\t" +
                $"Prop2: {getCustomRelationship.Prop2}");
            </code></example>
      </Docs>
    </Member>
    <Member MemberName="GetRelationships">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;string&gt; GetRelationships (string digitalTwinId, string relationshipName = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;string&gt; GetRelationships(string digitalTwinId, string relationshipName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.GetRelationships(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRelationships (digitalTwinId As String, Optional relationshipName As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetRelationships : string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;string&gt;&#xA;override this.GetRelationships : string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;string&gt;" Usage="digitalTwinsClient.GetRelationships (digitalTwinId, relationshipName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="relationshipName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the source digital twin.</param>
        <param name="relationshipName">The name of a relationship to filter to. If null, all relationships for the digital twin will be returned.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets all the relationships on a digital twin by iterating through a collection synchronously.
            </summary>
        <returns>The pageable list <see cref="T:Azure.Pageable`1" /> of application/json relationships belonging to the specified digital twin and the http response.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <altmember cref="M:Azure.DigitalTwins.Core.DigitalTwinsClient.GetRelationshipsAsync(System.String,System.String,System.Threading.CancellationToken)" />
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="digitalTwinId" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;string&gt; GetRelationshipsAsync (string digitalTwinId, string relationshipName = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;string&gt; GetRelationshipsAsync(string digitalTwinId, string relationshipName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.GetRelationshipsAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRelationshipsAsync (digitalTwinId As String, Optional relationshipName As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetRelationshipsAsync : string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;string&gt;&#xA;override this.GetRelationshipsAsync : string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;string&gt;" Usage="digitalTwinsClient.GetRelationshipsAsync (digitalTwinId, relationshipName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="relationshipName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the source digital twin.</param>
        <param name="relationshipName">The name of a relationship to filter to. If null, all relationships for the digital twin will be returned.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets all the relationships on a digital twin by iterating through a collection asynchronously.
            </summary>
        <returns>The pageable list <see cref="T:Azure.AsyncPageable`1" /> of application/json relationships belonging to the specified digital twin and the http response.</returns>
        <remarks>
          <para>
            String relationships that are returned as part of the pageable list can always be deserialized into an instnace of <see cref="T:Azure.DigitalTwins.Core.Serialization.BasicRelationship" />.
            You may also deserialize the relationship into custom type that extend the <see cref="T:Azure.DigitalTwins.Core.Serialization.BasicRelationship" />.
            </para>
          <para>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </para>
        </remarks>
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="digitalTwinId" /> is <c>null</c>.
            </exception>
        <example>
            This sample demonstrates iterating over outgoing relationships and deserializing relationship strings into BasicRelationship objects.
            <code snippet="Snippet:DigitalTwinsSampleGetAllRelationships">
            AsyncPageable&lt;string&gt; relationships = client.GetRelationshipsAsync("buildingTwinId");
            await foreach (var relationshipJson in relationships)
            {
                BasicRelationship relationship = JsonSerializer.Deserialize&lt;BasicRelationship&gt;(relationshipJson);
                Console.WriteLine($"Retrieved relationship '{relationship.Id}' with source {relationship.SourceId}' and " +
                    $"target {relationship.TargetId}.\n\t" +
                    $"Prop1: {relationship.CustomProperties["Prop1"]}\n\t" +
                    $"Prop2: {relationship.CustomProperties["Prop2"]}");
            }
            </code></example>
      </Docs>
    </Member>
    <Member MemberName="PublishComponentTelemetry">
      <MemberSignature Language="C#" Value="public virtual Azure.Response PublishComponentTelemetry (string digitalTwinId, string componentName, string payload, Azure.DigitalTwins.Core.TelemetryOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response PublishComponentTelemetry(string digitalTwinId, string componentName, string payload, class Azure.DigitalTwins.Core.TelemetryOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.PublishComponentTelemetry(System.String,System.String,System.String,Azure.DigitalTwins.Core.TelemetryOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PublishComponentTelemetry (digitalTwinId As String, componentName As String, payload As String, Optional options As TelemetryOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member PublishComponentTelemetry : string * string * string * Azure.DigitalTwins.Core.TelemetryOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.PublishComponentTelemetry : string * string * string * Azure.DigitalTwins.Core.TelemetryOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="digitalTwinsClient.PublishComponentTelemetry (digitalTwinId, componentName, payload, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="componentName" Type="System.String" />
        <Parameter Name="payload" Type="System.String" />
        <Parameter Name="options" Type="Azure.DigitalTwins.Core.TelemetryOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the digital twin.</param>
        <param name="componentName">The name of the DTDL component.</param>
        <param name="payload">The application/json telemetry payload to be sent.</param>
        <param name="options">The additional information to be used when processing a telemetry request.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Publishes telemetry from a digital twin's component synchronously.
            The result is then consumed by one or many destination endpoints (subscribers) defined under <see cref="T:Azure.DigitalTwins.Core.EventRoute" />.
            These event routes need to be set before publishing a telemetry message, in order for the telemetry message to be consumed.
            </summary>
        <returns>The http response <see cref="T:Azure.Response" />.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <altmember cref="M:Azure.DigitalTwins.Core.DigitalTwinsClient.PublishComponentTelemetryAsync(System.String,System.String,System.String,Azure.DigitalTwins.Core.TelemetryOptions,System.Threading.CancellationToken)" />
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="digitalTwinId" /> or <paramref name="componentName" /> or <paramref name="payload" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="PublishComponentTelemetryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; PublishComponentTelemetryAsync (string digitalTwinId, string componentName, string payload, Azure.DigitalTwins.Core.TelemetryOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; PublishComponentTelemetryAsync(string digitalTwinId, string componentName, string payload, class Azure.DigitalTwins.Core.TelemetryOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.PublishComponentTelemetryAsync(System.String,System.String,System.String,Azure.DigitalTwins.Core.TelemetryOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PublishComponentTelemetryAsync (digitalTwinId As String, componentName As String, payload As String, Optional options As TelemetryOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member PublishComponentTelemetryAsync : string * string * string * Azure.DigitalTwins.Core.TelemetryOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.PublishComponentTelemetryAsync : string * string * string * Azure.DigitalTwins.Core.TelemetryOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="digitalTwinsClient.PublishComponentTelemetryAsync (digitalTwinId, componentName, payload, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="componentName" Type="System.String" />
        <Parameter Name="payload" Type="System.String" />
        <Parameter Name="options" Type="Azure.DigitalTwins.Core.TelemetryOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the digital twin.</param>
        <param name="componentName">The name of the DTDL component.</param>
        <param name="payload">The application/json telemetry payload to be sent.</param>
        <param name="options">The additional information to be used when processing a telemetry request.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Publishes telemetry from a digital twin's component asynchronously.
            The result is then consumed by one or many destination endpoints (subscribers) defined under <see cref="T:Azure.DigitalTwins.Core.EventRoute" />.
            These event routes need to be set before publishing a telemetry message, in order for the telemetry message to be consumed.
            </summary>
        <returns>The http response <see cref="T:Azure.Response" />.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="digitalTwinId" /> or <paramref name="componentName" /> or <paramref name="payload" /> is <c>null</c>.
            </exception>
        <example>
          <code snippet="Snippet:DigitalTwinsSamplePublishComponentTelemetry">
            // construct your json telemetry payload by serializing a dictionary.
            var telemetryPayload = new Dictionary&lt;string, int&gt;
            {
                { "ComponentTelemetry1", 9 }
            };
            await client.PublishComponentTelemetryAsync(
                twinId,
                "Component1",
                JsonSerializer.Serialize(telemetryPayload));
            Console.WriteLine($"Published component telemetry message to twin '{twinId}'.");
            </code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="PublishTelemetry">
      <MemberSignature Language="C#" Value="public virtual Azure.Response PublishTelemetry (string digitalTwinId, string payload, Azure.DigitalTwins.Core.TelemetryOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response PublishTelemetry(string digitalTwinId, string payload, class Azure.DigitalTwins.Core.TelemetryOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.PublishTelemetry(System.String,System.String,Azure.DigitalTwins.Core.TelemetryOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PublishTelemetry (digitalTwinId As String, payload As String, Optional options As TelemetryOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member PublishTelemetry : string * string * Azure.DigitalTwins.Core.TelemetryOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.PublishTelemetry : string * string * Azure.DigitalTwins.Core.TelemetryOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="digitalTwinsClient.PublishTelemetry (digitalTwinId, payload, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="payload" Type="System.String" />
        <Parameter Name="options" Type="Azure.DigitalTwins.Core.TelemetryOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the digital twin.</param>
        <param name="payload">The application/json telemetry payload to be sent.</param>
        <param name="options">The additional information to be used when processing a telemetry request.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Publishes telemetry from a digital twin synchronously.
            The result is then consumed by one or many destination endpoints (subscribers) defined under <see cref="T:Azure.DigitalTwins.Core.EventRoute" />.
            These event routes need to be set before publishing a telemetry message, in order for the telemetry message to be consumed.
            </summary>
        <returns>The http response <see cref="T:Azure.Response" />.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <altmember cref="M:Azure.DigitalTwins.Core.DigitalTwinsClient.PublishTelemetryAsync(System.String,System.String,Azure.DigitalTwins.Core.TelemetryOptions,System.Threading.CancellationToken)" />
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="digitalTwinId" /> or <paramref name="payload" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="PublishTelemetryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; PublishTelemetryAsync (string digitalTwinId, string payload, Azure.DigitalTwins.Core.TelemetryOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; PublishTelemetryAsync(string digitalTwinId, string payload, class Azure.DigitalTwins.Core.TelemetryOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.PublishTelemetryAsync(System.String,System.String,Azure.DigitalTwins.Core.TelemetryOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PublishTelemetryAsync (digitalTwinId As String, payload As String, Optional options As TelemetryOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member PublishTelemetryAsync : string * string * Azure.DigitalTwins.Core.TelemetryOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.PublishTelemetryAsync : string * string * Azure.DigitalTwins.Core.TelemetryOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="digitalTwinsClient.PublishTelemetryAsync (digitalTwinId, payload, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="payload" Type="System.String" />
        <Parameter Name="options" Type="Azure.DigitalTwins.Core.TelemetryOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the digital twin.</param>
        <param name="payload">The application/json telemetry payload to be sent.</param>
        <param name="options">The additional information to be used when processing a telemetry request.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Publishes telemetry from a digital twin asynchronously.
            The result is then consumed by one or many destination endpoints (subscribers) defined under <see cref="T:Azure.DigitalTwins.Core.EventRoute" />.
            These event routes need to be set before publishing a telemetry message, in order for the telemetry message to be consumed.
            </summary>
        <returns>The http response <see cref="T:Azure.Response" />.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="digitalTwinId" /> or <paramref name="payload" /> is <c>null</c>.
            </exception>
        <example>
          <code snippet="Snippet:DigitalTwinsSamplePublishTelemetry">
            // construct your json telemetry payload by hand.
            await client.PublishTelemetryAsync(twinId, "{\"Telemetry1\": 5}");
            Console.WriteLine($"Published telemetry message to twin '{twinId}'.");
            </code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;string&gt; Query (string query, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;string&gt; Query(string query, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.Query(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Query (query As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of String)" />
      <MemberSignature Language="F#" Value="abstract member Query : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;string&gt;&#xA;override this.Query : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;string&gt;" Usage="digitalTwinsClient.Query (query, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="query">The query string, in SQL-like syntax.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Queries for digital twins by iterating through a collection synchronously.
            </summary>
        <returns>The pageable list <see cref="T:Azure.Pageable`1" /> of query results.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <altmember cref="M:Azure.DigitalTwins.Core.DigitalTwinsClient.QueryAsync(System.String,System.Threading.CancellationToken)" />
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <example>
            A basic query for all digital twins: SELECT * FROM digitalTwins.
            </example>
      </Docs>
    </Member>
    <Member MemberName="QueryAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;string&gt; QueryAsync (string query, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;string&gt; QueryAsync(string query, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.QueryAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QueryAsync (query As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of String)" />
      <MemberSignature Language="F#" Value="abstract member QueryAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;string&gt;&#xA;override this.QueryAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;string&gt;" Usage="digitalTwinsClient.QueryAsync (query, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="query">The query string, in SQL-like syntax.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
             Queries for digital twins by iterating through a collection asynchronously.
             </summary>
        <returns>The pageable list <see cref="T:Azure.AsyncPageable`1" /> of query results.</returns>
        <remarks>
             For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
             </remarks>
        <exception cref="T:Azure.RequestFailedException">
             The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
             </exception>
        <example>
          <code snippet="Snippet:DigitalTwinsSampleQueryTwins">
             // This code snippet demonstrates the simplest way to iterate over the digital twin results, where paging
             // happens under the covers.
             AsyncPageable&lt;string&gt; asyncPageableResponse = client.QueryAsync("SELECT * FROM digitaltwins");
            
             // Iterate over the twin instances in the pageable response.
             // The "await" keyword here is required because new pages will be fetched when necessary,
             // which involves a request to the service.
             await foreach (string response in asyncPageableResponse)
             {
                 BasicDigitalTwin twin = JsonSerializer.Deserialize&lt;BasicDigitalTwin&gt;(response);
                 Console.WriteLine($"Found digital twin '{twin.Id}'");
             }
             </code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="UpdateComponent">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;string&gt; UpdateComponent (string digitalTwinId, string componentPath, string componentUpdateOperations, Azure.DigitalTwins.Core.RequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;string&gt; UpdateComponent(string digitalTwinId, string componentPath, string componentUpdateOperations, class Azure.DigitalTwins.Core.RequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.UpdateComponent(System.String,System.String,System.String,Azure.DigitalTwins.Core.RequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateComponent (digitalTwinId As String, componentPath As String, componentUpdateOperations As String, Optional requestOptions As RequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of String)" />
      <MemberSignature Language="F#" Value="abstract member UpdateComponent : string * string * string * Azure.DigitalTwins.Core.RequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;string&gt;&#xA;override this.UpdateComponent : string * string * string * Azure.DigitalTwins.Core.RequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;string&gt;" Usage="digitalTwinsClient.UpdateComponent (digitalTwinId, componentPath, componentUpdateOperations, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="componentPath" Type="System.String" />
        <Parameter Name="componentUpdateOperations" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.DigitalTwins.Core.RequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the digital twin.</param>
        <param name="componentPath">The component being modified.</param>
        <param name="componentUpdateOperations">The application/json-patch+json operations to be performed on the specified digital twin's component.</param>
        <param name="requestOptions">The optional settings for this request.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Updates properties of a component on a digital twin synchronously.
            </summary>
        <returns>The HTTP response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <altmember cref="M:Azure.DigitalTwins.Core.DigitalTwinsClient.UpdateComponentAsync(System.String,System.String,System.String,Azure.DigitalTwins.Core.RequestOptions,System.Threading.CancellationToken)" />
        <exception cref="T:Azure.RequestFailedException">
          <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="digitalTwinId" /> or <paramref name="componentPath" /> is <c>null</c>.
            </exception>
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateComponentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt; UpdateComponentAsync (string digitalTwinId, string componentPath, string componentUpdateOperations, Azure.DigitalTwins.Core.RequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;string&gt;&gt; UpdateComponentAsync(string digitalTwinId, string componentPath, string componentUpdateOperations, class Azure.DigitalTwins.Core.RequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.UpdateComponentAsync(System.String,System.String,System.String,Azure.DigitalTwins.Core.RequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateComponentAsync (digitalTwinId As String, componentPath As String, componentUpdateOperations As String, Optional requestOptions As RequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of String))" />
      <MemberSignature Language="F#" Value="abstract member UpdateComponentAsync : string * string * string * Azure.DigitalTwins.Core.RequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt;&#xA;override this.UpdateComponentAsync : string * string * string * Azure.DigitalTwins.Core.RequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt;" Usage="digitalTwinsClient.UpdateComponentAsync (digitalTwinId, componentPath, componentUpdateOperations, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="componentPath" Type="System.String" />
        <Parameter Name="componentUpdateOperations" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.DigitalTwins.Core.RequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the digital twin.</param>
        <param name="componentPath">The component being modified.</param>
        <param name="componentUpdateOperations">The application/json-patch+json operations to be performed on the specified digital twin's component.</param>
        <param name="requestOptions">The optional settings for this request.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Updates properties of a component on a digital twin asynchronously.
            </summary>
        <returns>The HTTP response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <example>
          <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="digitalTwinId" /> or <paramref name="componentPath" /> is <c>null</c>.
            </exception>
          <code snippet="Snippet:DigitalTwinsSampleUpdateComponent">
            // Update Component1 by replacing the property ComponentProp1 value,
            // using an optional utility to build the payload.
            var componentUpdateUtility = new UpdateOperationsUtility();
            componentUpdateUtility.AppendReplaceOp("/ComponentProp1", "Some new value");
            string updatePayload = componentUpdateUtility.Serialize();
            await client.UpdateComponentAsync(basicDtId, "Component1", updatePayload);
            Console.WriteLine($"Updated component for digital twin '{basicDtId}'.");
            </code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="UpdateDigitalTwin">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;string&gt; UpdateDigitalTwin (string digitalTwinId, string digitalTwinUpdateOperations, Azure.DigitalTwins.Core.RequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;string&gt; UpdateDigitalTwin(string digitalTwinId, string digitalTwinUpdateOperations, class Azure.DigitalTwins.Core.RequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.UpdateDigitalTwin(System.String,System.String,Azure.DigitalTwins.Core.RequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateDigitalTwin (digitalTwinId As String, digitalTwinUpdateOperations As String, Optional requestOptions As RequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of String)" />
      <MemberSignature Language="F#" Value="abstract member UpdateDigitalTwin : string * string * Azure.DigitalTwins.Core.RequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;string&gt;&#xA;override this.UpdateDigitalTwin : string * string * Azure.DigitalTwins.Core.RequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;string&gt;" Usage="digitalTwinsClient.UpdateDigitalTwin (digitalTwinId, digitalTwinUpdateOperations, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="digitalTwinUpdateOperations" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.DigitalTwins.Core.RequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the digital twin to update.</param>
        <param name="digitalTwinUpdateOperations">The application/json-patch+json operations to be performed on the specified digital twin.</param>
        <param name="requestOptions">The optional settings for this request.</param>
        <param name="cancellationToken">The cancellationToken.</param>
        <summary>
            Updates a digital twin synchronously.
            </summary>
        <returns>The http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <altmember cref="M:Azure.DigitalTwins.Core.DigitalTwinsClient.UpdateDigitalTwinAsync(System.String,System.String,Azure.DigitalTwins.Core.RequestOptions,System.Threading.CancellationToken)" />
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="digitalTwinId" /> or <paramref name="digitalTwinUpdateOperations" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateDigitalTwinAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt; UpdateDigitalTwinAsync (string digitalTwinId, string digitalTwinUpdateOperations, Azure.DigitalTwins.Core.RequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;string&gt;&gt; UpdateDigitalTwinAsync(string digitalTwinId, string digitalTwinUpdateOperations, class Azure.DigitalTwins.Core.RequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.UpdateDigitalTwinAsync(System.String,System.String,Azure.DigitalTwins.Core.RequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateDigitalTwinAsync (digitalTwinId As String, digitalTwinUpdateOperations As String, Optional requestOptions As RequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of String))" />
      <MemberSignature Language="F#" Value="abstract member UpdateDigitalTwinAsync : string * string * Azure.DigitalTwins.Core.RequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt;&#xA;override this.UpdateDigitalTwinAsync : string * string * Azure.DigitalTwins.Core.RequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt;" Usage="digitalTwinsClient.UpdateDigitalTwinAsync (digitalTwinId, digitalTwinUpdateOperations, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="digitalTwinUpdateOperations" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.DigitalTwins.Core.RequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the digital twin to update.</param>
        <param name="digitalTwinUpdateOperations">The application/json-patch+json operations to be performed on the specified digital twin.</param>
        <param name="requestOptions">The optional settings for this request.</param>
        <param name="cancellationToken">The cancellationToken.</param>
        <summary>
            Updates a digital twin asynchronously.
            </summary>
        <returns>The http response <see cref="T:Azure.Response`1" />.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="digitalTwinId" /> or <paramref name="digitalTwinUpdateOperations" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateRelationship">
      <MemberSignature Language="C#" Value="public virtual Azure.Response UpdateRelationship (string digitalTwinId, string relationshipId, string relationshipUpdateOperations, Azure.DigitalTwins.Core.RequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response UpdateRelationship(string digitalTwinId, string relationshipId, string relationshipUpdateOperations, class Azure.DigitalTwins.Core.RequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.UpdateRelationship(System.String,System.String,System.String,Azure.DigitalTwins.Core.RequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateRelationship (digitalTwinId As String, relationshipId As String, relationshipUpdateOperations As String, Optional requestOptions As RequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member UpdateRelationship : string * string * string * Azure.DigitalTwins.Core.RequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.UpdateRelationship : string * string * string * Azure.DigitalTwins.Core.RequestOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="digitalTwinsClient.UpdateRelationship (digitalTwinId, relationshipId, relationshipUpdateOperations, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="relationshipId" Type="System.String" />
        <Parameter Name="relationshipUpdateOperations" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.DigitalTwins.Core.RequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the source digital twin.</param>
        <param name="relationshipId">The Id of the relationship to be updated.</param>
        <param name="relationshipUpdateOperations">The application/json-patch+json operations to be performed on the specified digital twin's relationship.</param>
        <param name="requestOptions">The optional settings for this request.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Updates the properties of a relationship on a digital twin synchronously.
            </summary>
        <returns>The http response <see cref="T:Azure.Response" />.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <altmember cref="M:Azure.DigitalTwins.Core.DigitalTwinsClient.UpdateRelationshipAsync(System.String,System.String,System.String,Azure.DigitalTwins.Core.RequestOptions,System.Threading.CancellationToken)" />
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="digitalTwinId" /> or <paramref name="relationshipId" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateRelationshipAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; UpdateRelationshipAsync (string digitalTwinId, string relationshipId, string relationshipUpdateOperations, Azure.DigitalTwins.Core.RequestOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; UpdateRelationshipAsync(string digitalTwinId, string relationshipId, string relationshipUpdateOperations, class Azure.DigitalTwins.Core.RequestOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.DigitalTwinsClient.UpdateRelationshipAsync(System.String,System.String,System.String,Azure.DigitalTwins.Core.RequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateRelationshipAsync (digitalTwinId As String, relationshipId As String, relationshipUpdateOperations As String, Optional requestOptions As RequestOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member UpdateRelationshipAsync : string * string * string * Azure.DigitalTwins.Core.RequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.UpdateRelationshipAsync : string * string * string * Azure.DigitalTwins.Core.RequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="digitalTwinsClient.UpdateRelationshipAsync (digitalTwinId, relationshipId, relationshipUpdateOperations, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="relationshipId" Type="System.String" />
        <Parameter Name="relationshipUpdateOperations" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.DigitalTwins.Core.RequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the source digital twin.</param>
        <param name="relationshipId">The Id of the relationship to be updated.</param>
        <param name="relationshipUpdateOperations">The application/json-patch+json operations to be performed on the specified digital twin's relationship.</param>
        <param name="requestOptions">The optional settings for this request.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Updates the properties of a relationship on a digital twin asynchronously.
            </summary>
        <returns>The http response <see cref="T:Azure.Response" />.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/digitaltwins/Azure.DigitalTwins.Core/samples">our repo samples</see>.
            </remarks>
        <exception cref="T:Azure.RequestFailedException">
            The exception that captures the errors from the service. Check the <see cref="P:Azure.RequestFailedException.ErrorCode" /> and <see cref="P:Azure.RequestFailedException.Status" /> properties for more details.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="digitalTwinId" /> or <paramref name="relationshipId" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
