<Type Name="LogHelper" FullName="Microsoft.IdentityModel.Logging.LogHelper">
  <TypeSignature Language="C#" Value="public class LogHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LogHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.IdentityModel.Logging.LogHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class LogHelper" />
  <TypeSignature Language="F#" Value="type LogHelper = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.IdentityModel.Logging</AssemblyName>
    <AssemblyVersion>5.6.0.0</AssemblyVersion>
    <AssemblyVersion>6.5.0.0</AssemblyVersion>
    <AssemblyVersion>6.5.1.0</AssemblyVersion>
    <AssemblyVersion>6.6.0.0</AssemblyVersion>
    <AssemblyVersion>6.7.0.0</AssemblyVersion>
    <AssemblyVersion>6.7.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Helper class for logging.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogHelper ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Logging.LogHelper.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Logging</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatInvariant">
      <MemberSignature Language="C#" Value="public static string FormatInvariant (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatInvariant(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Logging.LogHelper.FormatInvariant(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FormatInvariant (format As String, ParamArray args As Object()) As String" />
      <MemberSignature Language="F#" Value="static member FormatInvariant : string * obj[] -&gt; string" Usage="Microsoft.IdentityModel.Logging.LogHelper.FormatInvariant (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Logging</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">Format string.</param>
        <param name="args">Format arguments.</param>
        <summary>
            Formats the string using InvariantCulture
            </summary>
        <returns>Formatted string.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogArgumentException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LogArgumentException&lt;T&gt; (string argumentName, string message) where T : ArgumentException;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LogArgumentException&lt;(class System.ArgumentException) T&gt;(string argumentName, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogArgumentException(Of T As ArgumentException) (argumentName As String, message As String) As T" />
      <MemberSignature Language="F#" Value="static member LogArgumentException : string * string -&gt; 'T (requires 'T :&gt; ArgumentException)" Usage="Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException (argumentName, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Logging</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.ArgumentException</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="argumentName" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="argumentName">Identifies the argument whose value generated the ArgumentException.</param>
        <param name="message">message to log.</param>
        <summary>
            Logs an argument exception using the event source logger and returns new typed exception.
            </summary>
        <returns>To be added.</returns>
        <remarks>EventLevel is set to Error.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogArgumentException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LogArgumentException&lt;T&gt; (System.Diagnostics.Tracing.EventLevel eventLevel, string argumentName, string message) where T : ArgumentException;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LogArgumentException&lt;(class System.ArgumentException) T&gt;(valuetype System.Diagnostics.Tracing.EventLevel eventLevel, string argumentName, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.Diagnostics.Tracing.EventLevel,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogArgumentException(Of T As ArgumentException) (eventLevel As EventLevel, argumentName As String, message As String) As T" />
      <MemberSignature Language="F#" Value="static member LogArgumentException : System.Diagnostics.Tracing.EventLevel * string * string -&gt; 'T (requires 'T :&gt; ArgumentException)" Usage="Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException (eventLevel, argumentName, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Logging</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.ArgumentException</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventLevel" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="argumentName" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="eventLevel">Identifies the level of an event to be logged.</param>
        <param name="argumentName">Identifies the argument whose value generated the ArgumentException.</param>
        <param name="message">message to log.</param>
        <summary>
            Logs an argument exception using the event source logger and returns new typed exception.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogArgumentException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LogArgumentException&lt;T&gt; (string argumentName, Exception innerException, string message) where T : ArgumentException;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LogArgumentException&lt;(class System.ArgumentException) T&gt;(string argumentName, class System.Exception innerException, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.String,System.Exception,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogArgumentException(Of T As ArgumentException) (argumentName As String, innerException As Exception, message As String) As T" />
      <MemberSignature Language="F#" Value="static member LogArgumentException : string * Exception * string -&gt; 'T (requires 'T :&gt; ArgumentException)" Usage="Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException (argumentName, innerException, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Logging</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.ArgumentException</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="argumentName" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="argumentName">Identifies the argument whose value generated the ArgumentException.</param>
        <param name="innerException">the inner <see cref="T:System.Exception" /> to be added to the outer exception.</param>
        <param name="message">message to log.</param>
        <summary>
            Logs an argument exception using the event source logger and returns new typed exception.
            </summary>
        <returns>To be added.</returns>
        <remarks>EventLevel is set to Error.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogArgumentException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LogArgumentException&lt;T&gt; (string argumentName, string format, params object[] args) where T : ArgumentException;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LogArgumentException&lt;(class System.ArgumentException) T&gt;(string argumentName, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogArgumentException(Of T As ArgumentException) (argumentName As String, format As String, ParamArray args As Object()) As T" />
      <MemberSignature Language="F#" Value="static member LogArgumentException : string * string * obj[] -&gt; 'T (requires 'T :&gt; ArgumentException)" Usage="Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException (argumentName, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Logging</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.ArgumentException</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="argumentName" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="argumentName">Identifies the argument whose value generated the ArgumentException.</param>
        <param name="format">Format string of the log message.</param>
        <param name="args">An object array that contains zero or more objects to format.</param>
        <summary>
            Logs an argument exception using the event source logger and returns new typed exception.
            </summary>
        <returns>To be added.</returns>
        <remarks>EventLevel is set to Error.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogArgumentException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LogArgumentException&lt;T&gt; (System.Diagnostics.Tracing.EventLevel eventLevel, string argumentName, Exception innerException, string message) where T : ArgumentException;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LogArgumentException&lt;(class System.ArgumentException) T&gt;(valuetype System.Diagnostics.Tracing.EventLevel eventLevel, string argumentName, class System.Exception innerException, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.Diagnostics.Tracing.EventLevel,System.String,System.Exception,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogArgumentException(Of T As ArgumentException) (eventLevel As EventLevel, argumentName As String, innerException As Exception, message As String) As T" />
      <MemberSignature Language="F#" Value="static member LogArgumentException : System.Diagnostics.Tracing.EventLevel * string * Exception * string -&gt; 'T (requires 'T :&gt; ArgumentException)" Usage="Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException (eventLevel, argumentName, innerException, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Logging</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.ArgumentException</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventLevel" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="argumentName" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="eventLevel">Identifies the level of an event to be logged.</param>
        <param name="argumentName">Identifies the argument whose value generated the ArgumentException.</param>
        <param name="innerException">the inner <see cref="T:System.Exception" /> to be added to the outer exception.</param>
        <param name="message">message to log.</param>
        <summary>
            Logs an argument exception using the event source logger and returns new typed exception.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogArgumentException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LogArgumentException&lt;T&gt; (System.Diagnostics.Tracing.EventLevel eventLevel, string argumentName, string format, params object[] args) where T : ArgumentException;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LogArgumentException&lt;(class System.ArgumentException) T&gt;(valuetype System.Diagnostics.Tracing.EventLevel eventLevel, string argumentName, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.Diagnostics.Tracing.EventLevel,System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogArgumentException(Of T As ArgumentException) (eventLevel As EventLevel, argumentName As String, format As String, ParamArray args As Object()) As T" />
      <MemberSignature Language="F#" Value="static member LogArgumentException : System.Diagnostics.Tracing.EventLevel * string * string * obj[] -&gt; 'T (requires 'T :&gt; ArgumentException)" Usage="Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException (eventLevel, argumentName, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Logging</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.ArgumentException</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventLevel" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="argumentName" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="eventLevel">Identifies the level of an event to be logged.</param>
        <param name="argumentName">Identifies the argument whose value generated the ArgumentException.</param>
        <param name="format">Format string of the log message.</param>
        <param name="args">An object array that contains zero or more objects to format.</param>
        <summary>
            Logs an argument exception using the event source logger and returns new typed exception.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogArgumentException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LogArgumentException&lt;T&gt; (string argumentName, Exception innerException, string format, params object[] args) where T : ArgumentException;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LogArgumentException&lt;(class System.ArgumentException) T&gt;(string argumentName, class System.Exception innerException, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.String,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogArgumentException(Of T As ArgumentException) (argumentName As String, innerException As Exception, format As String, ParamArray args As Object()) As T" />
      <MemberSignature Language="F#" Value="static member LogArgumentException : string * Exception * string * obj[] -&gt; 'T (requires 'T :&gt; ArgumentException)" Usage="Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException (argumentName, innerException, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Logging</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.ArgumentException</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="argumentName" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="argumentName">Identifies the argument whose value generated the ArgumentException.</param>
        <param name="innerException">the inner <see cref="T:System.Exception" /> to be added to the outer exception.</param>
        <param name="format">Format string of the log message.</param>
        <param name="args">An object array that contains zero or more objects to format.</param>
        <summary>
            Logs an argument exception using the event source logger and returns new typed exception.
            </summary>
        <returns>To be added.</returns>
        <remarks>EventLevel is set to Error.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogArgumentException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LogArgumentException&lt;T&gt; (System.Diagnostics.Tracing.EventLevel eventLevel, string argumentName, Exception innerException, string format, params object[] args) where T : ArgumentException;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LogArgumentException&lt;(class System.ArgumentException) T&gt;(valuetype System.Diagnostics.Tracing.EventLevel eventLevel, string argumentName, class System.Exception innerException, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.Diagnostics.Tracing.EventLevel,System.String,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogArgumentException(Of T As ArgumentException) (eventLevel As EventLevel, argumentName As String, innerException As Exception, format As String, ParamArray args As Object()) As T" />
      <MemberSignature Language="F#" Value="static member LogArgumentException : System.Diagnostics.Tracing.EventLevel * string * Exception * string * obj[] -&gt; 'T (requires 'T :&gt; ArgumentException)" Usage="Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException (eventLevel, argumentName, innerException, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Logging</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.ArgumentException</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventLevel" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="argumentName" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="eventLevel">Identifies the level of an event to be logged.</param>
        <param name="argumentName">Identifies the argument whose value generated the ArgumentException.</param>
        <param name="innerException">the inner <see cref="T:System.Exception" /> to be added to the outer exception.</param>
        <param name="format">Format string of the log message.</param>
        <param name="args">An object array that contains zero or more objects to format.</param>
        <summary>
            Logs an argument exception using the event source logger and returns new typed exception.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogArgumentNullException">
      <MemberSignature Language="C#" Value="public static ArgumentNullException LogArgumentNullException (string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ArgumentNullException LogArgumentNullException(string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Logging.LogHelper.LogArgumentNullException(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogArgumentNullException (argument As String) As ArgumentNullException" />
      <MemberSignature Language="F#" Value="static member LogArgumentNullException : string -&gt; ArgumentNullException" Usage="Microsoft.IdentityModel.Logging.LogHelper.LogArgumentNullException argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Logging</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ArgumentNullException</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="argument">argument that is null or empty.</param>
        <summary>
            Logs an exception using the event source logger and returns new <see cref="T:System.ArgumentNullException" /> exception.
            </summary>
        <returns>To be added.</returns>
        <remarks>EventLevel is set to Error.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LogException&lt;T&gt; (string message) where T : Exception;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LogException&lt;(class System.Exception) T&gt;(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Logging.LogHelper.LogException``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogException(Of T As Exception) (message As String) As T" />
      <MemberSignature Language="F#" Value="static member LogException : string -&gt; 'T (requires 'T :&gt; Exception)" Usage="Microsoft.IdentityModel.Logging.LogHelper.LogException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Logging</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Exception</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="message">message to log.</param>
        <summary>
            Logs an exception using the event source logger and returns new typed exception.
            </summary>
        <returns>To be added.</returns>
        <remarks>EventLevel is set to Error.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LogException&lt;T&gt; (System.Diagnostics.Tracing.EventLevel eventLevel, string message) where T : Exception;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LogException&lt;(class System.Exception) T&gt;(valuetype System.Diagnostics.Tracing.EventLevel eventLevel, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Logging.LogHelper.LogException``1(System.Diagnostics.Tracing.EventLevel,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogException(Of T As Exception) (eventLevel As EventLevel, message As String) As T" />
      <MemberSignature Language="F#" Value="static member LogException : System.Diagnostics.Tracing.EventLevel * string -&gt; 'T (requires 'T :&gt; Exception)" Usage="Microsoft.IdentityModel.Logging.LogHelper.LogException (eventLevel, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Logging</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Exception</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventLevel" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="eventLevel">Identifies the level of an event to be logged.</param>
        <param name="message">message to log.</param>
        <summary>
            Logs an exception using the event source logger and returns new typed exception.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LogException&lt;T&gt; (Exception innerException, string message) where T : Exception;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LogException&lt;(class System.Exception) T&gt;(class System.Exception innerException, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Logging.LogHelper.LogException``1(System.Exception,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogException(Of T As Exception) (innerException As Exception, message As String) As T" />
      <MemberSignature Language="F#" Value="static member LogException : Exception * string -&gt; 'T (requires 'T :&gt; Exception)" Usage="Microsoft.IdentityModel.Logging.LogHelper.LogException (innerException, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Logging</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Exception</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="innerException" Type="System.Exception" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="innerException">the inner <see cref="T:System.Exception" /> to be added to the outer exception.</param>
        <param name="message">message to log.</param>
        <summary>
            Logs an exception using the event source logger and returns new typed exception.
            </summary>
        <returns>To be added.</returns>
        <remarks>EventLevel is set to Error.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LogException&lt;T&gt; (string format, params object[] args) where T : Exception;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LogException&lt;(class System.Exception) T&gt;(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Logging.LogHelper.LogException``1(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogException(Of T As Exception) (format As String, ParamArray args As Object()) As T" />
      <MemberSignature Language="F#" Value="static member LogException : string * obj[] -&gt; 'T (requires 'T :&gt; Exception)" Usage="Microsoft.IdentityModel.Logging.LogHelper.LogException (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Logging</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Exception</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="format">Format string of the log message.</param>
        <param name="args">An object array that contains zero or more objects to format.</param>
        <summary>
            Logs an exception using the event source logger and returns new typed exception.
            </summary>
        <returns>To be added.</returns>
        <remarks>EventLevel is set to Error.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LogException&lt;T&gt; (System.Diagnostics.Tracing.EventLevel eventLevel, Exception innerException, string message) where T : Exception;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LogException&lt;(class System.Exception) T&gt;(valuetype System.Diagnostics.Tracing.EventLevel eventLevel, class System.Exception innerException, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Logging.LogHelper.LogException``1(System.Diagnostics.Tracing.EventLevel,System.Exception,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogException(Of T As Exception) (eventLevel As EventLevel, innerException As Exception, message As String) As T" />
      <MemberSignature Language="F#" Value="static member LogException : System.Diagnostics.Tracing.EventLevel * Exception * string -&gt; 'T (requires 'T :&gt; Exception)" Usage="Microsoft.IdentityModel.Logging.LogHelper.LogException (eventLevel, innerException, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Logging</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Exception</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventLevel" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="innerException" Type="System.Exception" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="eventLevel">Identifies the level of an event to be logged.</param>
        <param name="innerException">the inner <see cref="T:System.Exception" /> to be added to the outer exception.</param>
        <param name="message">message to log.</param>
        <summary>
            Logs an exception using the event source logger and returns new typed exception.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LogException&lt;T&gt; (System.Diagnostics.Tracing.EventLevel eventLevel, string format, params object[] args) where T : Exception;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LogException&lt;(class System.Exception) T&gt;(valuetype System.Diagnostics.Tracing.EventLevel eventLevel, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Logging.LogHelper.LogException``1(System.Diagnostics.Tracing.EventLevel,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogException(Of T As Exception) (eventLevel As EventLevel, format As String, ParamArray args As Object()) As T" />
      <MemberSignature Language="F#" Value="static member LogException : System.Diagnostics.Tracing.EventLevel * string * obj[] -&gt; 'T (requires 'T :&gt; Exception)" Usage="Microsoft.IdentityModel.Logging.LogHelper.LogException (eventLevel, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Logging</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Exception</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventLevel" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="eventLevel">Identifies the level of an event to be logged.</param>
        <param name="format">Format string of the log message.</param>
        <param name="args">An object array that contains zero or more objects to format.</param>
        <summary>
            Logs an exception using the event source logger and returns new typed exception.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LogException&lt;T&gt; (Exception innerException, string format, params object[] args) where T : Exception;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LogException&lt;(class System.Exception) T&gt;(class System.Exception innerException, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Logging.LogHelper.LogException``1(System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogException(Of T As Exception) (innerException As Exception, format As String, ParamArray args As Object()) As T" />
      <MemberSignature Language="F#" Value="static member LogException : Exception * string * obj[] -&gt; 'T (requires 'T :&gt; Exception)" Usage="Microsoft.IdentityModel.Logging.LogHelper.LogException (innerException, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Logging</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Exception</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="innerException" Type="System.Exception" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="innerException">the inner <see cref="T:System.Exception" /> to be added to the outer exception.</param>
        <param name="format">Format string of the log message.</param>
        <param name="args">An object array that contains zero or more objects to format.</param>
        <summary>
            Logs an exception using the event source logger and returns new typed exception.
            </summary>
        <returns>To be added.</returns>
        <remarks>EventLevel is set to Error.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LogException&lt;T&gt; (System.Diagnostics.Tracing.EventLevel eventLevel, Exception innerException, string format, params object[] args) where T : Exception;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LogException&lt;(class System.Exception) T&gt;(valuetype System.Diagnostics.Tracing.EventLevel eventLevel, class System.Exception innerException, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Logging.LogHelper.LogException``1(System.Diagnostics.Tracing.EventLevel,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogException(Of T As Exception) (eventLevel As EventLevel, innerException As Exception, format As String, ParamArray args As Object()) As T" />
      <MemberSignature Language="F#" Value="static member LogException : System.Diagnostics.Tracing.EventLevel * Exception * string * obj[] -&gt; 'T (requires 'T :&gt; Exception)" Usage="Microsoft.IdentityModel.Logging.LogHelper.LogException (eventLevel, innerException, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Logging</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Exception</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventLevel" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="innerException" Type="System.Exception" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="eventLevel">Identifies the level of an event to be logged.</param>
        <param name="innerException">the inner <see cref="T:System.Exception" /> to be added to the outer exception.</param>
        <param name="format">Format string of the log message.</param>
        <param name="args">An object array that contains zero or more objects to format.</param>
        <summary>
            Logs an exception using the event source logger and returns new typed exception.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogExceptionMessage">
      <MemberSignature Language="C#" Value="public static Exception LogExceptionMessage (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception LogExceptionMessage(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Logging.LogHelper.LogExceptionMessage(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogExceptionMessage (exception As Exception) As Exception" />
      <MemberSignature Language="F#" Value="static member LogExceptionMessage : Exception -&gt; Exception" Usage="Microsoft.IdentityModel.Logging.LogHelper.LogExceptionMessage exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Logging</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">The exception to log.</param>
        <summary>
            Logs an exception using the event source logger.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogExceptionMessage">
      <MemberSignature Language="C#" Value="public static Exception LogExceptionMessage (System.Diagnostics.Tracing.EventLevel eventLevel, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception LogExceptionMessage(valuetype System.Diagnostics.Tracing.EventLevel eventLevel, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Logging.LogHelper.LogExceptionMessage(System.Diagnostics.Tracing.EventLevel,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogExceptionMessage (eventLevel As EventLevel, exception As Exception) As Exception" />
      <MemberSignature Language="F#" Value="static member LogExceptionMessage : System.Diagnostics.Tracing.EventLevel * Exception -&gt; Exception" Usage="Microsoft.IdentityModel.Logging.LogHelper.LogExceptionMessage (eventLevel, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Logging</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventLevel" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="eventLevel">Identifies the level of an event to be logged.</param>
        <param name="exception">The exception to log.</param>
        <summary>
            Logs an exception using the event source logger.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogInformation">
      <MemberSignature Language="C#" Value="public static void LogInformation (string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogInformation(string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Logging.LogHelper.LogInformation(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub LogInformation (message As String, ParamArray args As Object())" />
      <MemberSignature Language="F#" Value="static member LogInformation : string * obj[] -&gt; unit" Usage="Microsoft.IdentityModel.Logging.LogHelper.LogInformation (message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Logging</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="message">The log message.</param>
        <param name="args">An object array that contains zero or more objects to format.</param>
        <summary>
            Logs an information event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogVerbose">
      <MemberSignature Language="C#" Value="public static void LogVerbose (string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogVerbose(string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Logging.LogHelper.LogVerbose(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub LogVerbose (message As String, ParamArray args As Object())" />
      <MemberSignature Language="F#" Value="static member LogVerbose : string * obj[] -&gt; unit" Usage="Microsoft.IdentityModel.Logging.LogHelper.LogVerbose (message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Logging</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="message">The log message.</param>
        <param name="args">An object array that contains zero or more objects to format.</param>
        <summary>
            Logs a verbose event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogWarning">
      <MemberSignature Language="C#" Value="public static void LogWarning (string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogWarning(string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Logging.LogHelper.LogWarning(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub LogWarning (message As String, ParamArray args As Object())" />
      <MemberSignature Language="F#" Value="static member LogWarning : string * obj[] -&gt; unit" Usage="Microsoft.IdentityModel.Logging.LogHelper.LogWarning (message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Logging</AssemblyName>
        <AssemblyVersion>5.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.0.0</AssemblyVersion>
        <AssemblyVersion>6.5.1.0</AssemblyVersion>
        <AssemblyVersion>6.6.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.0.0</AssemblyVersion>
        <AssemblyVersion>6.7.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="message">The log message.</param>
        <param name="args">An object array that contains zero or more objects to format.</param>
        <summary>
            Logs a warning event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
