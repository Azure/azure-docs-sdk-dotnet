<Type Name="BlobClient" FullName="Azure.Storage.Blobs.BlobClient">
  <TypeSignature Language="C#" Value="public class BlobClient : Azure.Storage.Blobs.Specialized.BlobBaseClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BlobClient extends Azure.Storage.Blobs.Specialized.BlobBaseClient" />
  <TypeSignature Language="DocId" Value="T:Azure.Storage.Blobs.BlobClient" />
  <TypeSignature Language="VB.NET" Value="Public Class BlobClient&#xA;Inherits BlobBaseClient" />
  <TypeSignature Language="F#" Value="type BlobClient = class&#xA;    inherit BlobBaseClient" />
  <AssemblyInfo>
    <AssemblyName>Azure.Storage.Blobs</AssemblyName>
    <AssemblyVersion>12.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Storage.Blobs.Specialized.BlobBaseClient</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The <see cref="T:Azure.Storage.Blobs.BlobClient" /> allows you to manipulate Azure Storage
            blobs.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BlobClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.BlobClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobClient" />
            class for mocking.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlobClient (Uri blobUri, Azure.Storage.Blobs.BlobClientOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri blobUri, class Azure.Storage.Blobs.BlobClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.BlobClient.#ctor(System.Uri,Azure.Storage.Blobs.BlobClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobUri As Uri, Optional options As BlobClientOptions = null)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.BlobClient : Uri * Azure.Storage.Blobs.BlobClientOptions -&gt; Azure.Storage.Blobs.BlobClient" Usage="new Azure.Storage.Blobs.BlobClient (blobUri, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobUri" Type="System.Uri" />
        <Parameter Name="options" Type="Azure.Storage.Blobs.BlobClientOptions" />
      </Parameters>
      <Docs>
        <param name="blobUri">
            A <see cref="T:System.Uri" /> referencing the blob that includes the
            name of the account, the name of the container, and the name of
            the blob.
            </param>
        <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobClient" />
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlobClient (string connectionString, string blobContainerName, string blobName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string blobContainerName, string blobName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.BlobClient.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, blobContainerName As String, blobName As String)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.BlobClient : string * string * string -&gt; Azure.Storage.Blobs.BlobClient" Usage="new Azure.Storage.Blobs.BlobClient (connectionString, blobContainerName, blobName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="blobContainerName" Type="System.String" />
        <Parameter Name="blobName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, <see href="https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string" />.
             </param>
        <param name="blobContainerName">
             The name of the container containing this blob.
             </param>
        <param name="blobName">
             The name of this blob.
             </param>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobClient" />
             class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlobClient (Uri blobUri, Azure.Core.TokenCredential credential, Azure.Storage.Blobs.BlobClientOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri blobUri, class Azure.Core.TokenCredential credential, class Azure.Storage.Blobs.BlobClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.BlobClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobUri As Uri, credential As TokenCredential, Optional options As BlobClientOptions = null)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.BlobClient : Uri * Azure.Core.TokenCredential * Azure.Storage.Blobs.BlobClientOptions -&gt; Azure.Storage.Blobs.BlobClient" Usage="new Azure.Storage.Blobs.BlobClient (blobUri, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Storage.Blobs.BlobClientOptions" />
      </Parameters>
      <Docs>
        <param name="blobUri">
            A <see cref="T:System.Uri" /> referencing the blob that includes the
            name of the account, the name of the container, and the name of
            the blob.
            </param>
        <param name="credential">
            The token credential used to sign requests.
            </param>
        <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobClient" />
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlobClient (Uri blobUri, Azure.Storage.StorageSharedKeyCredential credential, Azure.Storage.Blobs.BlobClientOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri blobUri, class Azure.Storage.StorageSharedKeyCredential credential, class Azure.Storage.Blobs.BlobClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.BlobClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobUri As Uri, credential As StorageSharedKeyCredential, Optional options As BlobClientOptions = null)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.BlobClient : Uri * Azure.Storage.StorageSharedKeyCredential * Azure.Storage.Blobs.BlobClientOptions -&gt; Azure.Storage.Blobs.BlobClient" Usage="new Azure.Storage.Blobs.BlobClient (blobUri, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Storage.StorageSharedKeyCredential" />
        <Parameter Name="options" Type="Azure.Storage.Blobs.BlobClientOptions" />
      </Parameters>
      <Docs>
        <param name="blobUri">
            A <see cref="T:System.Uri" /> referencing the blob that includes the
            name of the account, the name of the container, and the name of
            the blob.
            </param>
        <param name="credential">
            The shared key credential used to sign requests.
            </param>
        <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobClient" />
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlobClient (string connectionString, string blobContainerName, string blobName, Azure.Storage.Blobs.BlobClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string blobContainerName, string blobName, class Azure.Storage.Blobs.BlobClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.BlobClient.#ctor(System.String,System.String,System.String,Azure.Storage.Blobs.BlobClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, blobContainerName As String, blobName As String, options As BlobClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.BlobClient : string * string * string * Azure.Storage.Blobs.BlobClientOptions -&gt; Azure.Storage.Blobs.BlobClient" Usage="new Azure.Storage.Blobs.BlobClient (connectionString, blobContainerName, blobName, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="blobContainerName" Type="System.String" />
        <Parameter Name="blobName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Storage.Blobs.BlobClientOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, <see href="https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string" />.
             </param>
        <param name="blobContainerName">
             The name of the container containing this blob.
             </param>
        <param name="blobName">
             The name of this blob.
             </param>
        <param name="options">
             Optional client options that define the transport pipeline
             policies for authentication, retries, etc., that are applied to
             every request.
             </param>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Blobs.BlobClient" />
             class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Upload">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt; Upload (System.IO.Stream content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobContentInfo&gt; Upload(class System.IO.Stream content) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.BlobClient.Upload(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Upload (content As Stream) As Response(Of BlobContentInfo)" />
      <MemberSignature Language="F#" Value="abstract member Upload : System.IO.Stream -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&#xA;override this.Upload : System.IO.Stream -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;" Usage="blobClient.Upload content" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Azure.Core.ForwardsClientCalls</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content to upload.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.Upload(System.IO.Stream)" /> operation creates a new block blob
             or updates the content of an existing block blob.  Updating an
             existing block blob overwrites any existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient" />.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient" /> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient" />.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated block blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Upload">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt; Upload (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobContentInfo&gt; Upload(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.BlobClient.Upload(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Upload (path As String) As Response(Of BlobContentInfo)" />
      <MemberSignature Language="F#" Value="abstract member Upload : string -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&#xA;override this.Upload : string -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;" Usage="blobClient.Upload path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Azure.Core.ForwardsClientCalls</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
             A file path containing the content to upload.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.Upload(System.String)" /> operation creates a new block blob
             or updates the content of an existing block blob.  Updating an
             existing block blob overwrites any existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient" />.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient" /> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient" />.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated block blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Upload">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt; Upload (System.IO.Stream content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobContentInfo&gt; Upload(class System.IO.Stream content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.BlobClient.Upload(System.IO.Stream,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member Upload : System.IO.Stream * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&#xA;override this.Upload : System.IO.Stream * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;" Usage="blobClient.Upload (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Azure.Core.ForwardsClientCalls</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content to upload.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.Upload(System.IO.Stream,System.Threading.CancellationToken)" /> operation
             creates a new block blob or updates the content of an existing
             block blob.  Updating an existing block blob overwrites any
             existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient" />.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient" /> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient" />.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated block blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Upload">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt; Upload (string path, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobContentInfo&gt; Upload(string path, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.BlobClient.Upload(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member Upload : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&#xA;override this.Upload : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;" Usage="blobClient.Upload (path, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Azure.Core.ForwardsClientCalls</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">
             A file path containing the content to upload.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.Upload(System.String,System.Threading.CancellationToken)" /> operation
             creates a new block blob or updates the content of an existing
             block blob.  Updating an existing block blob overwrites any
             existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient" />.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient" /> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient" />.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated block blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Upload">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt; Upload (System.IO.Stream content, bool overwrite = false, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobContentInfo&gt; Upload(class System.IO.Stream content, bool overwrite, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.BlobClient.Upload(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member Upload : System.IO.Stream * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&#xA;override this.Upload : System.IO.Stream * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;" Usage="blobClient.Upload (content, overwrite, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Azure.Core.ForwardsClientCalls</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content to upload.
             </param>
        <param name="overwrite">
             Whether the upload should overwrite any existing blobs.  The
             default value is false.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.Upload(System.IO.Stream,System.Threading.CancellationToken)" /> operation
             creates a new block blob or updates the content of an existing
             block blob.  Updating an existing block blob overwrites any
             existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient" />.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient" /> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient" />.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated block blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Upload">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt; Upload (string path, bool overwrite = false, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobContentInfo&gt; Upload(string path, bool overwrite, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.BlobClient.Upload(System.String,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member Upload : string * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&#xA;override this.Upload : string * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;" Usage="blobClient.Upload (path, overwrite, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Azure.Core.ForwardsClientCalls</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">
             A file path containing the content to upload.
             </param>
        <param name="overwrite">
             Whether the upload should overwrite any existing blobs.  The
             default value is false.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.Upload(System.String,System.Threading.CancellationToken)" /> operation
             creates a new block blob or updates the content of an existing
             block blob.  Updating an existing block blob overwrites any
             existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient" />.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient" /> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient" />.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated block blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Upload">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt; Upload (System.IO.Stream content, Azure.Storage.Blobs.Models.BlobHttpHeaders httpHeaders = null, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = null, Azure.Storage.Blobs.Models.BlobRequestConditions conditions = null, IProgress&lt;long&gt; progressHandler = null, Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt; accessTier = null, Azure.Storage.StorageTransferOptions transferOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobContentInfo&gt; Upload(class System.IO.Stream content, class Azure.Storage.Blobs.Models.BlobHttpHeaders httpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Azure.Storage.Blobs.Models.BlobRequestConditions conditions, class System.IProgress`1&lt;int64&gt; progressHandler, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.AccessTier&gt; accessTier, valuetype Azure.Storage.StorageTransferOptions transferOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.BlobClient.Upload(System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member Upload : System.IO.Stream * Azure.Storage.Blobs.Models.BlobHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Blobs.Models.BlobRequestConditions * IProgress&lt;int64&gt; * Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt; * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&#xA;override this.Upload : System.IO.Stream * Azure.Storage.Blobs.Models.BlobHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Blobs.Models.BlobRequestConditions * IProgress&lt;int64&gt; * Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt; * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;" Usage="blobClient.Upload (content, httpHeaders, metadata, conditions, progressHandler, accessTier, transferOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Azure.Core.ForwardsClientCalls</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="httpHeaders" Type="Azure.Storage.Blobs.Models.BlobHttpHeaders" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.BlobRequestConditions" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;System.Int64&gt;" />
        <Parameter Name="accessTier" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt;" />
        <Parameter Name="transferOptions" Type="Azure.Storage.StorageTransferOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content to upload.
             </param>
        <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             block blob.
             </param>
        <param name="metadata">
             Optional custom metadata to set for this block blob.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> to add conditions on
             the creation of this new block blob.
             </param>
        <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1" /> to provide
             progress updates about data transfers.
             </param>
        <param name="accessTier">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AccessTier" />
             Indicates the tier to be set on the blob.
             </param>
        <param name="transferOptions">
             Optional <see cref="T:Azure.Storage.StorageTransferOptions" /> to configure
             parallel transfer behavior.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.Upload(System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
             operation creates a new block blob or updates the content of an
             existing block blob.  Updating an existing block blob overwrites
             any existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient" />.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient" /> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient" />.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated block blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Upload">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt; Upload (string path, Azure.Storage.Blobs.Models.BlobHttpHeaders httpHeaders = null, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = null, Azure.Storage.Blobs.Models.BlobRequestConditions conditions = null, IProgress&lt;long&gt; progressHandler = null, Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt; accessTier = null, Azure.Storage.StorageTransferOptions transferOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobContentInfo&gt; Upload(string path, class Azure.Storage.Blobs.Models.BlobHttpHeaders httpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Azure.Storage.Blobs.Models.BlobRequestConditions conditions, class System.IProgress`1&lt;int64&gt; progressHandler, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.AccessTier&gt; accessTier, valuetype Azure.Storage.StorageTransferOptions transferOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.BlobClient.Upload(System.String,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member Upload : string * Azure.Storage.Blobs.Models.BlobHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Blobs.Models.BlobRequestConditions * IProgress&lt;int64&gt; * Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt; * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&#xA;override this.Upload : string * Azure.Storage.Blobs.Models.BlobHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Blobs.Models.BlobRequestConditions * IProgress&lt;int64&gt; * Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt; * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;" Usage="blobClient.Upload (path, httpHeaders, metadata, conditions, progressHandler, accessTier, transferOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Azure.Core.ForwardsClientCalls</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="httpHeaders" Type="Azure.Storage.Blobs.Models.BlobHttpHeaders" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.BlobRequestConditions" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;System.Int64&gt;" />
        <Parameter Name="accessTier" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt;" />
        <Parameter Name="transferOptions" Type="Azure.Storage.StorageTransferOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">
             A file path containing the content to upload.
             </param>
        <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             block blob.
             </param>
        <param name="metadata">
             Optional custom metadata to set for this block blob.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> to add conditions on
             the creation of this new block blob.
             </param>
        <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1" /> to provide
             progress updates about data transfers.
             </param>
        <param name="accessTier">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AccessTier" />
             Indicates the tier to be set on the blob.
             </param>
        <param name="transferOptions">
             Optional <see cref="T:Azure.Storage.StorageTransferOptions" /> to configure
             parallel transfer behavior.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.Upload(System.String,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
             operation creates a new block blob or updates the content of an
             existing block blob.  Updating an existing block blob overwrites
             any existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient" />.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient" /> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient" />.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated block blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt; UploadAsync (System.IO.Stream content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt; UploadAsync(class System.IO.Stream content) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadAsync (content As Stream) As Task(Of Response(Of BlobContentInfo))" />
      <MemberSignature Language="F#" Value="abstract member UploadAsync : System.IO.Stream -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;&#xA;override this.UploadAsync : System.IO.Stream -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;" Usage="blobClient.UploadAsync content" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Azure.Core.ForwardsClientCalls</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content to upload.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.IO.Stream)" /> operation creates a new block blob
             or updates the content of an existing block blob.  Updating an
             existing block blob overwrites any existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient" />.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient" /> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient" />.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated block blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt; UploadAsync (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt; UploadAsync(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadAsync (path As String) As Task(Of Response(Of BlobContentInfo))" />
      <MemberSignature Language="F#" Value="abstract member UploadAsync : string -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;&#xA;override this.UploadAsync : string -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;" Usage="blobClient.UploadAsync path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Azure.Core.ForwardsClientCalls</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
             A file path containing the content to upload.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.String)" /> operation creates a new block blob
             or updates the content of an existing block blob.  Updating an
             existing block blob overwrites any existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient" />.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient" /> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient" />.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated block blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt; UploadAsync (System.IO.Stream content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt; UploadAsync(class System.IO.Stream content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UploadAsync : System.IO.Stream * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;&#xA;override this.UploadAsync : System.IO.Stream * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;" Usage="blobClient.UploadAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Azure.Core.ForwardsClientCalls</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content to upload.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.IO.Stream,System.Threading.CancellationToken)" /> operation
             creates a new block blob or updates the content of an existing
             block blob.  Updating an existing block blob overwrites any
             existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient" />.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient" /> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient" />.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated block blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt; UploadAsync (string path, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt; UploadAsync(string path, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UploadAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;&#xA;override this.UploadAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;" Usage="blobClient.UploadAsync (path, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Azure.Core.ForwardsClientCalls</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">
             A file path containing the content to upload.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.String,System.Threading.CancellationToken)" /> operation
             creates a new block blob or updates the content of an existing
             block blob.  Updating an existing block blob overwrites any
             existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient" />.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient" /> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient" />.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated block blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt; UploadAsync (System.IO.Stream content, bool overwrite = false, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt; UploadAsync(class System.IO.Stream content, bool overwrite, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UploadAsync : System.IO.Stream * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;&#xA;override this.UploadAsync : System.IO.Stream * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;" Usage="blobClient.UploadAsync (content, overwrite, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Azure.Core.ForwardsClientCalls</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content to upload.
             </param>
        <param name="overwrite">
             Whether the upload should overwrite any existing blobs.  The
             default value is false.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.IO.Stream,System.Threading.CancellationToken)" /> operation
             creates a new block blob or updates the content of an existing
             block blob.  Updating an existing block blob overwrites any
             existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient" />.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient" /> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient" />.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated block blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt; UploadAsync (string path, bool overwrite = false, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt; UploadAsync(string path, bool overwrite, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.String,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UploadAsync : string * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;&#xA;override this.UploadAsync : string * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;" Usage="blobClient.UploadAsync (path, overwrite, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Azure.Core.ForwardsClientCalls</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">
             A file path containing the content to upload.
             </param>
        <param name="overwrite">
             Whether the upload should overwrite any existing blobs.  The
             default value is false.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.String,System.Threading.CancellationToken)" /> operation
             creates a new block blob or updates the content of an existing
             block blob.  Updating an existing block blob overwrites any
             existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient" />.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient" /> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient" />.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated block blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt; UploadAsync (System.IO.Stream content, Azure.Storage.Blobs.Models.BlobHttpHeaders httpHeaders = null, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = null, Azure.Storage.Blobs.Models.BlobRequestConditions conditions = null, IProgress&lt;long&gt; progressHandler = null, Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt; accessTier = null, Azure.Storage.StorageTransferOptions transferOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt; UploadAsync(class System.IO.Stream content, class Azure.Storage.Blobs.Models.BlobHttpHeaders httpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Azure.Storage.Blobs.Models.BlobRequestConditions conditions, class System.IProgress`1&lt;int64&gt; progressHandler, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.AccessTier&gt; accessTier, valuetype Azure.Storage.StorageTransferOptions transferOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UploadAsync : System.IO.Stream * Azure.Storage.Blobs.Models.BlobHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Blobs.Models.BlobRequestConditions * IProgress&lt;int64&gt; * Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt; * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;&#xA;override this.UploadAsync : System.IO.Stream * Azure.Storage.Blobs.Models.BlobHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Blobs.Models.BlobRequestConditions * IProgress&lt;int64&gt; * Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt; * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;" Usage="blobClient.UploadAsync (content, httpHeaders, metadata, conditions, progressHandler, accessTier, transferOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Azure.Core.ForwardsClientCalls</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="httpHeaders" Type="Azure.Storage.Blobs.Models.BlobHttpHeaders" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.BlobRequestConditions" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;System.Int64&gt;" />
        <Parameter Name="accessTier" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt;" />
        <Parameter Name="transferOptions" Type="Azure.Storage.StorageTransferOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content to upload.
             </param>
        <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             block blob.
             </param>
        <param name="metadata">
             Optional custom metadata to set for this block blob.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> to add conditions on
             the creation of this new block blob.
             </param>
        <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1" /> to provide
             progress updates about data transfers.
             </param>
        <param name="accessTier">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AccessTier" />
             Indicates the tier to be set on the blob.
             </param>
        <param name="transferOptions">
             Optional <see cref="T:Azure.Storage.StorageTransferOptions" /> to configure
             parallel transfer behavior.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
             operation creates a new block blob or updates the content of an
             existing block blob.  Updating an existing block blob overwrites
             any existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient" />.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient" /> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient" />.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated block blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt; UploadAsync (string path, Azure.Storage.Blobs.Models.BlobHttpHeaders httpHeaders = null, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = null, Azure.Storage.Blobs.Models.BlobRequestConditions conditions = null, IProgress&lt;long&gt; progressHandler = null, Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt; accessTier = null, Azure.Storage.StorageTransferOptions transferOptions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt; UploadAsync(string path, class Azure.Storage.Blobs.Models.BlobHttpHeaders httpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Azure.Storage.Blobs.Models.BlobRequestConditions conditions, class System.IProgress`1&lt;int64&gt; progressHandler, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.AccessTier&gt; accessTier, valuetype Azure.Storage.StorageTransferOptions transferOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.String,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UploadAsync : string * Azure.Storage.Blobs.Models.BlobHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Blobs.Models.BlobRequestConditions * IProgress&lt;int64&gt; * Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt; * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;&#xA;override this.UploadAsync : string * Azure.Storage.Blobs.Models.BlobHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Blobs.Models.BlobRequestConditions * IProgress&lt;int64&gt; * Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt; * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;" Usage="blobClient.UploadAsync (path, httpHeaders, metadata, conditions, progressHandler, accessTier, transferOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Azure.Core.ForwardsClientCalls</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="httpHeaders" Type="Azure.Storage.Blobs.Models.BlobHttpHeaders" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="conditions" Type="Azure.Storage.Blobs.Models.BlobRequestConditions" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;System.Int64&gt;" />
        <Parameter Name="accessTier" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt;" />
        <Parameter Name="transferOptions" Type="Azure.Storage.StorageTransferOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">
             A file path containing the content to upload.
             </param>
        <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             block blob.
             </param>
        <param name="metadata">
             Optional custom metadata to set for this block blob.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> to add conditions on
             the creation of this new block blob.
             </param>
        <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1" /> to provide
             progress updates about data transfers.
             </param>
        <param name="accessTier">
             Optional <see cref="T:Azure.Storage.Blobs.Models.AccessTier" />
             Indicates the tier to be set on the blob.
             </param>
        <param name="transferOptions">
             Optional <see cref="T:Azure.Storage.StorageTransferOptions" /> to configure
             parallel transfer behavior.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Blobs.BlobClient.UploadAsync(System.String,Azure.Storage.Blobs.Models.BlobHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Blobs.Models.BlobRequestConditions,System.IProgress{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
             operation creates a new block blob or updates the content of an
             existing block blob.  Updating an existing block blob overwrites
             any existing metadata on the blob.
            
             For partial block blob updates and other advanced features, please
             see <see cref="T:Azure.Storage.Blobs.Specialized.BlockBlobClient" />.  To create or modify page or
             append blobs, please see <see cref="T:Azure.Storage.Blobs.Specialized.PageBlobClient" /> or
             <see cref="T:Azure.Storage.Blobs.Specialized.AppendBlobClient" />.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/put-blob" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated block blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
