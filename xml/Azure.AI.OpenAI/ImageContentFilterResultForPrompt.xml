<Type Name="ImageContentFilterResultForPrompt" FullName="Azure.AI.OpenAI.ImageContentFilterResultForPrompt">
  <TypeSignature Language="C#" Value="public class ImageContentFilterResultForPrompt : Azure.AI.OpenAI.ImageContentFilterResultForResponse, System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImageContentFilterResultForPrompt extends Azure.AI.OpenAI.ImageContentFilterResultForResponse implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.OpenAI.ImageContentFilterResultForPrompt" />
  <TypeSignature Language="VB.NET" Value="Public Class ImageContentFilterResultForPrompt&#xA;Inherits ImageContentFilterResultForResponse&#xA;Implements IJsonModel(Of ImageContentFilterResultForPrompt), IPersistableModel(Of ImageContentFilterResultForPrompt)" />
  <TypeSignature Language="F#" Value="type ImageContentFilterResultForPrompt = class&#xA;    inherit ImageContentFilterResultForResponse&#xA;    interface IJsonModel&lt;ImageContentFilterResultForPrompt&gt;&#xA;    interface IPersistableModel&lt;ImageContentFilterResultForPrompt&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.OpenAI</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.AI.OpenAI.ImageContentFilterResultForResponse</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> A content filter result for an image generation operation's input request content. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CustomBlocklists">
      <MemberSignature Language="C#" Value="public Azure.AI.OpenAI.ContentFilterBlocklistResult CustomBlocklists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.OpenAI.ContentFilterBlocklistResult CustomBlocklists" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.ImageContentFilterResultForPrompt.CustomBlocklists" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomBlocklists As ContentFilterBlocklistResult" />
      <MemberSignature Language="F#" Value="member this.CustomBlocklists : Azure.AI.OpenAI.ContentFilterBlocklistResult" Usage="Azure.AI.OpenAI.ImageContentFilterResultForPrompt.CustomBlocklists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.OpenAI.ContentFilterBlocklistResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A collection of binary filtering outcomes for configured custom blocklists. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Jailbreak">
      <MemberSignature Language="C#" Value="public Azure.AI.OpenAI.ContentFilterDetectionResult Jailbreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.OpenAI.ContentFilterDetectionResult Jailbreak" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.ImageContentFilterResultForPrompt.Jailbreak" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Jailbreak As ContentFilterDetectionResult" />
      <MemberSignature Language="F#" Value="member this.Jailbreak : Azure.AI.OpenAI.ContentFilterDetectionResult" Usage="Azure.AI.OpenAI.ImageContentFilterResultForPrompt.Jailbreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.OpenAI.ContentFilterDetectionResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A detection result that describes user prompt injection attacks, where malicious users deliberately exploit
            system vulnerabilities to elicit unauthorized behavior from the LLM. This could lead to inappropriate content
            generation or violations of system-imposed restrictions.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Profanity">
      <MemberSignature Language="C#" Value="public Azure.AI.OpenAI.ContentFilterDetectionResult Profanity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.OpenAI.ContentFilterDetectionResult Profanity" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.ImageContentFilterResultForPrompt.Profanity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Profanity As ContentFilterDetectionResult" />
      <MemberSignature Language="F#" Value="member this.Profanity : Azure.AI.OpenAI.ContentFilterDetectionResult" Usage="Azure.AI.OpenAI.ImageContentFilterResultForPrompt.Profanity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.OpenAI.ContentFilterDetectionResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A detection result that identifies whether crude, vulgar, or otherwise objection language is present in the
            content.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.OpenAI.ImageContentFilterResultForPrompt IJsonModel&lt;ImageContentFilterResultForPrompt&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.OpenAI.ImageContentFilterResultForPrompt System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.ImageContentFilterResultForPrompt.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#OpenAI#ImageContentFilterResultForPrompt&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As ImageContentFilterResultForPrompt Implements IJsonModel(Of ImageContentFilterResultForPrompt).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.OpenAI.ImageContentFilterResultForPrompt&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.OpenAI.ImageContentFilterResultForPrompt" Usage="imageContentFilterResultForPrompt.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.OpenAI.ImageContentFilterResultForPrompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;ImageContentFilterResultForPrompt&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.ImageContentFilterResultForPrompt.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#OpenAI#ImageContentFilterResultForPrompt&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of ImageContentFilterResultForPrompt).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="imageContentFilterResultForPrompt.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.OpenAI.ImageContentFilterResultForPrompt IPersistableModel&lt;ImageContentFilterResultForPrompt&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.OpenAI.ImageContentFilterResultForPrompt System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.ImageContentFilterResultForPrompt.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#OpenAI#ImageContentFilterResultForPrompt&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As ImageContentFilterResultForPrompt Implements IPersistableModel(Of ImageContentFilterResultForPrompt).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.OpenAI.ImageContentFilterResultForPrompt&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.OpenAI.ImageContentFilterResultForPrompt" Usage="imageContentFilterResultForPrompt.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.OpenAI.ImageContentFilterResultForPrompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;ImageContentFilterResultForPrompt&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.ImageContentFilterResultForPrompt.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#OpenAI#ImageContentFilterResultForPrompt&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of ImageContentFilterResultForPrompt).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="imageContentFilterResultForPrompt.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;ImageContentFilterResultForPrompt&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.ImageContentFilterResultForPrompt.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#OpenAI#ImageContentFilterResultForPrompt&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of ImageContentFilterResultForPrompt).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="imageContentFilterResultForPrompt.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ImageContentFilterResultForPrompt&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
