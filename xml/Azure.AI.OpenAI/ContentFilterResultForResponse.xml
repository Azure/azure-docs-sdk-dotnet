<Type Name="ContentFilterResultForResponse" FullName="Azure.AI.OpenAI.ContentFilterResultForResponse">
  <TypeSignature Language="C#" Value="public class ContentFilterResultForResponse : System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ContentFilterResultForResponse&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ContentFilterResultForResponse&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContentFilterResultForResponse extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.AI.OpenAI.ContentFilterResultForResponse&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.AI.OpenAI.ContentFilterResultForResponse&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.OpenAI.ContentFilterResultForResponse" />
  <TypeSignature Language="VB.NET" Value="Public Class ContentFilterResultForResponse&#xA;Implements IJsonModel(Of ContentFilterResultForResponse), IPersistableModel(Of ContentFilterResultForResponse)" />
  <TypeSignature Language="F#" Value="type ContentFilterResultForResponse = class&#xA;    interface IJsonModel&lt;ContentFilterResultForResponse&gt;&#xA;    interface IPersistableModel&lt;ContentFilterResultForResponse&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.OpenAI</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ContentFilterResultForResponse&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ContentFilterResultForResponse&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> A content filter result for a single response item produced by a generative AI system. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CustomBlocklists">
      <MemberSignature Language="C#" Value="public Azure.AI.OpenAI.ContentFilterBlocklistResult CustomBlocklists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.OpenAI.ContentFilterBlocklistResult CustomBlocklists" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.ContentFilterResultForResponse.CustomBlocklists" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomBlocklists As ContentFilterBlocklistResult" />
      <MemberSignature Language="F#" Value="member this.CustomBlocklists : Azure.AI.OpenAI.ContentFilterBlocklistResult" Usage="Azure.AI.OpenAI.ContentFilterResultForResponse.CustomBlocklists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.OpenAI.ContentFilterBlocklistResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A collection of binary filtering outcomes for configured custom blocklists. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hate">
      <MemberSignature Language="C#" Value="public Azure.AI.OpenAI.ContentFilterSeverityResult Hate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.OpenAI.ContentFilterSeverityResult Hate" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.ContentFilterResultForResponse.Hate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hate As ContentFilterSeverityResult" />
      <MemberSignature Language="F#" Value="member this.Hate : Azure.AI.OpenAI.ContentFilterSeverityResult" Usage="Azure.AI.OpenAI.ContentFilterResultForResponse.Hate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.OpenAI.ContentFilterSeverityResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A content filter category that can refer to any content that attacks or uses pejorative or discriminatory
            language with reference to a person or identity group based on certain differentiating attributes of these groups
            including but not limited to race, ethnicity, nationality, gender identity and expression, sexual orientation,
            religion, immigration status, ability status, personal appearance, and body size.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Profanity">
      <MemberSignature Language="C#" Value="public Azure.AI.OpenAI.ContentFilterDetectionResult Profanity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.OpenAI.ContentFilterDetectionResult Profanity" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.ContentFilterResultForResponse.Profanity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Profanity As ContentFilterDetectionResult" />
      <MemberSignature Language="F#" Value="member this.Profanity : Azure.AI.OpenAI.ContentFilterDetectionResult" Usage="Azure.AI.OpenAI.ContentFilterResultForResponse.Profanity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.OpenAI.ContentFilterDetectionResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A detection result that identifies whether crude, vulgar, or otherwise objection language is present in the
            content.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectedMaterialCode">
      <MemberSignature Language="C#" Value="public Azure.AI.OpenAI.ContentFilterProtectedMaterialResult ProtectedMaterialCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.OpenAI.ContentFilterProtectedMaterialResult ProtectedMaterialCode" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.ContentFilterResultForResponse.ProtectedMaterialCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectedMaterialCode As ContentFilterProtectedMaterialResult" />
      <MemberSignature Language="F#" Value="member this.ProtectedMaterialCode : Azure.AI.OpenAI.ContentFilterProtectedMaterialResult" Usage="Azure.AI.OpenAI.ContentFilterResultForResponse.ProtectedMaterialCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.OpenAI.ContentFilterProtectedMaterialResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A detection result that describes a match against licensed code or other protected source material. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectedMaterialText">
      <MemberSignature Language="C#" Value="public Azure.AI.OpenAI.ContentFilterDetectionResult ProtectedMaterialText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.OpenAI.ContentFilterDetectionResult ProtectedMaterialText" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.ContentFilterResultForResponse.ProtectedMaterialText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectedMaterialText As ContentFilterDetectionResult" />
      <MemberSignature Language="F#" Value="member this.ProtectedMaterialText : Azure.AI.OpenAI.ContentFilterDetectionResult" Usage="Azure.AI.OpenAI.ContentFilterResultForResponse.ProtectedMaterialText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.OpenAI.ContentFilterDetectionResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A detection result that describes a match against text protected under copyright or other status. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelfHarm">
      <MemberSignature Language="C#" Value="public Azure.AI.OpenAI.ContentFilterSeverityResult SelfHarm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.OpenAI.ContentFilterSeverityResult SelfHarm" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.ContentFilterResultForResponse.SelfHarm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelfHarm As ContentFilterSeverityResult" />
      <MemberSignature Language="F#" Value="member this.SelfHarm : Azure.AI.OpenAI.ContentFilterSeverityResult" Usage="Azure.AI.OpenAI.ContentFilterResultForResponse.SelfHarm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.OpenAI.ContentFilterSeverityResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A content filter category that describes language related to physical actions intended to purposely hurt, injure,
            damage one's body or kill oneself.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sexual">
      <MemberSignature Language="C#" Value="public Azure.AI.OpenAI.ContentFilterSeverityResult Sexual { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.OpenAI.ContentFilterSeverityResult Sexual" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.ContentFilterResultForResponse.Sexual" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sexual As ContentFilterSeverityResult" />
      <MemberSignature Language="F#" Value="member this.Sexual : Azure.AI.OpenAI.ContentFilterSeverityResult" Usage="Azure.AI.OpenAI.ContentFilterResultForResponse.Sexual" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.OpenAI.ContentFilterSeverityResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A content filter category for language related to anatomical organs and genitals, romantic relationships, acts
            portrayed in erotic or affectionate terms, pregnancy, physical sexual acts, including those portrayed as an
            assault or a forced sexual violent act against one's will, prostitution, pornography, and abuse.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ContentFilterResultForResponse&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.OpenAI.ContentFilterResultForResponse IJsonModel&lt;ContentFilterResultForResponse&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.OpenAI.ContentFilterResultForResponse System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ContentFilterResultForResponse&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.ContentFilterResultForResponse.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#OpenAI#ContentFilterResultForResponse&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As ContentFilterResultForResponse Implements IJsonModel(Of ContentFilterResultForResponse).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ContentFilterResultForResponse&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.OpenAI.ContentFilterResultForResponse&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ContentFilterResultForResponse&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.OpenAI.ContentFilterResultForResponse" Usage="contentFilterResultForResponse.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ContentFilterResultForResponse&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.OpenAI.ContentFilterResultForResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ContentFilterResultForResponse&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;ContentFilterResultForResponse&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ContentFilterResultForResponse&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.ContentFilterResultForResponse.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#OpenAI#ContentFilterResultForResponse&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of ContentFilterResultForResponse).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ContentFilterResultForResponse&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ContentFilterResultForResponse&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="contentFilterResultForResponse.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ContentFilterResultForResponse&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ContentFilterResultForResponse&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.OpenAI.ContentFilterResultForResponse IPersistableModel&lt;ContentFilterResultForResponse&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.OpenAI.ContentFilterResultForResponse System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ContentFilterResultForResponse&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.ContentFilterResultForResponse.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#OpenAI#ContentFilterResultForResponse&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As ContentFilterResultForResponse Implements IPersistableModel(Of ContentFilterResultForResponse).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ContentFilterResultForResponse&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.OpenAI.ContentFilterResultForResponse&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ContentFilterResultForResponse&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.OpenAI.ContentFilterResultForResponse" Usage="contentFilterResultForResponse.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ContentFilterResultForResponse&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.OpenAI.ContentFilterResultForResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ContentFilterResultForResponse&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;ContentFilterResultForResponse&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ContentFilterResultForResponse&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.ContentFilterResultForResponse.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#OpenAI#ContentFilterResultForResponse&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of ContentFilterResultForResponse).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ContentFilterResultForResponse&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ContentFilterResultForResponse&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="contentFilterResultForResponse.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ContentFilterResultForResponse&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ContentFilterResultForResponse&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;ContentFilterResultForResponse&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ContentFilterResultForResponse&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.ContentFilterResultForResponse.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#OpenAI#ContentFilterResultForResponse&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of ContentFilterResultForResponse).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ContentFilterResultForResponse&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ContentFilterResultForResponse&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="contentFilterResultForResponse.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ContentFilterResultForResponse&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Violence">
      <MemberSignature Language="C#" Value="public Azure.AI.OpenAI.ContentFilterSeverityResult Violence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.OpenAI.ContentFilterSeverityResult Violence" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.ContentFilterResultForResponse.Violence" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Violence As ContentFilterSeverityResult" />
      <MemberSignature Language="F#" Value="member this.Violence : Azure.AI.OpenAI.ContentFilterSeverityResult" Usage="Azure.AI.OpenAI.ContentFilterResultForResponse.Violence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.OpenAI.ContentFilterSeverityResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A content filter category for language related to physical actions intended to hurt, injure, damage, or kill
            someone or something; describes weapons, guns and related entities, such as manufactures, associations,
            legislation, and so on.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
