<Type Name="ApiManagementGatewayResource" FullName="Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource">
  <TypeSignature Language="C#" Value="public class ApiManagementGatewayResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ApiManagementGatewayResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource" />
  <TypeSignature Language="VB.NET" Value="Public Class ApiManagementGatewayResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type ApiManagementGatewayResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing an ApiManagementGateway along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetApiManagementGatewayResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource" /> using the GetApiManagementGateway method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApiManagementGatewayResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateGatewayApi">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.GatewayApiData&gt; CreateOrUpdateGatewayApi (string apiId, Azure.ResourceManager.ApiManagement.Models.AssociationContract associationContract = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.Models.GatewayApiData&gt; CreateOrUpdateGatewayApi(string apiId, class Azure.ResourceManager.ApiManagement.Models.AssociationContract associationContract, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.CreateOrUpdateGatewayApi(System.String,Azure.ResourceManager.ApiManagement.Models.AssociationContract,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateGatewayApi (apiId As String, Optional associationContract As AssociationContract = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of GatewayApiData)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateGatewayApi : string * Azure.ResourceManager.ApiManagement.Models.AssociationContract * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.GatewayApiData&gt;&#xA;override this.CreateOrUpdateGatewayApi : string * Azure.ResourceManager.ApiManagement.Models.AssociationContract * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.GatewayApiData&gt;" Usage="apiManagementGatewayResource.CreateOrUpdateGatewayApi (apiId, associationContract, cancellationToken)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt; CreateOrUpdateGatewayApi (string apiId, Azure.ResourceManager.ApiManagement.Models.AssociationContract associationContract = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiResource&gt; CreateOrUpdateGatewayApi(string apiId, class Azure.ResourceManager.ApiManagement.Models.AssociationContract associationContract, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateGatewayApi (apiId As String, Optional associationContract As AssociationContract = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiResource)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateGatewayApi : string * Azure.ResourceManager.ApiManagement.Models.AssociationContract * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;&#xA;override this.CreateOrUpdateGatewayApi : string * Azure.ResourceManager.ApiManagement.Models.AssociationContract * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;" Usage="apiManagementGatewayResource.CreateOrUpdateGatewayApi (apiId, associationContract, cancellationToken)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.GatewayApiData&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="apiId" Type="System.String" />
        <Parameter Name="associationContract" Type="Azure.ResourceManager.ApiManagement.Models.AssociationContract" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="apiId"> API identifier. Must be unique in the current API Management service instance. </param>
        <param name="associationContract"> The AssociationContract to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Adds an API to the specified Gateway.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/apis/{apiId}
            Operation Id: GatewayApi_CreateOrUpdate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="apiId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="apiId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateGatewayApiAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.GatewayApiData&gt;&gt; CreateOrUpdateGatewayApiAsync (string apiId, Azure.ResourceManager.ApiManagement.Models.AssociationContract associationContract = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.Models.GatewayApiData&gt;&gt; CreateOrUpdateGatewayApiAsync(string apiId, class Azure.ResourceManager.ApiManagement.Models.AssociationContract associationContract, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.CreateOrUpdateGatewayApiAsync(System.String,Azure.ResourceManager.ApiManagement.Models.AssociationContract,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateGatewayApiAsync (apiId As String, Optional associationContract As AssociationContract = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of GatewayApiData))" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateGatewayApiAsync : string * Azure.ResourceManager.ApiManagement.Models.AssociationContract * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.GatewayApiData&gt;&gt;&#xA;override this.CreateOrUpdateGatewayApiAsync : string * Azure.ResourceManager.ApiManagement.Models.AssociationContract * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.GatewayApiData&gt;&gt;" Usage="apiManagementGatewayResource.CreateOrUpdateGatewayApiAsync (apiId, associationContract, cancellationToken)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;&gt; CreateOrUpdateGatewayApiAsync (string apiId, Azure.ResourceManager.ApiManagement.Models.AssociationContract associationContract = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiResource&gt;&gt; CreateOrUpdateGatewayApiAsync(string apiId, class Azure.ResourceManager.ApiManagement.Models.AssociationContract associationContract, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateGatewayApiAsync (apiId As String, Optional associationContract As AssociationContract = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiResource))" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateGatewayApiAsync : string * Azure.ResourceManager.ApiManagement.Models.AssociationContract * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;&gt;&#xA;override this.CreateOrUpdateGatewayApiAsync : string * Azure.ResourceManager.ApiManagement.Models.AssociationContract * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;&gt;" Usage="apiManagementGatewayResource.CreateOrUpdateGatewayApiAsync (apiId, associationContract, cancellationToken)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.GatewayApiData&gt;&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="apiId" Type="System.String" />
        <Parameter Name="associationContract" Type="Azure.ResourceManager.ApiManagement.Models.AssociationContract" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="apiId"> API identifier. Must be unique in the current API Management service instance. </param>
        <param name="associationContract"> The AssociationContract to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Adds an API to the specified Gateway.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/apis/{apiId}
            Operation Id: GatewayApi_CreateOrUpdate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="apiId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="apiId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string serviceName, string gatewayId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string serviceName, string gatewayId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, serviceName As String, gatewayId As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, serviceName, gatewayId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serviceName" Type="System.String" />
        <Parameter Name="gatewayId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">To be added.</param>
        <param name="resourceGroupName">To be added.</param>
        <param name="serviceName">To be added.</param>
        <param name="gatewayId">To be added.</param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementGatewayData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.ApiManagement.ApiManagementGatewayData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As ApiManagementGatewayData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.ApiManagement.ApiManagementGatewayData" Usage="Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementGatewayData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, Azure.ETag ifMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, valuetype Azure.ETag ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.Delete(Azure.WaitUntil,Azure.ETag,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, ifMatch As ETag, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * Azure.ETag * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * Azure.ETag * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="apiManagementGatewayResource.Delete (waitUntil, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="ifMatch" Type="Azure.ETag" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="ifMatch"> ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes specific Gateway.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}
            Operation Id: Gateway_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, string ifMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, string ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.Delete(Azure.WaitUntil,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, ifMatch As String, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="apiManagementGatewayResource.Delete (waitUntil, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="ifMatch" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="ifMatch"> ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes specific Gateway.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}
            Operation Id: Gateway_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ifMatch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, Azure.ETag ifMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype Azure.ETag ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.DeleteAsync(Azure.WaitUntil,Azure.ETag,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, ifMatch As ETag, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * Azure.ETag * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * Azure.ETag * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="apiManagementGatewayResource.DeleteAsync (waitUntil, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="ifMatch" Type="Azure.ETag" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="ifMatch"> ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes specific Gateway.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}
            Operation Id: Gateway_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, string ifMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, string ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.DeleteAsync(Azure.WaitUntil,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, ifMatch As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="apiManagementGatewayResource.DeleteAsync (waitUntil, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="ifMatch" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="ifMatch"> ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes specific Gateway.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}
            Operation Id: Gateway_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ifMatch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteGatewayApi">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteGatewayApi (string apiId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteGatewayApi(string apiId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.DeleteGatewayApi(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteGatewayApi (apiId As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteGatewayApi : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteGatewayApi : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="apiManagementGatewayResource.DeleteGatewayApi (apiId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="apiId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="apiId"> API identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes the specified API from the specified Gateway.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/apis/{apiId}
            Operation Id: GatewayApi_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="apiId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="apiId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteGatewayApiAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteGatewayApiAsync (string apiId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteGatewayApiAsync(string apiId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.DeleteGatewayApiAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteGatewayApiAsync (apiId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteGatewayApiAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteGatewayApiAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="apiManagementGatewayResource.DeleteGatewayApiAsync (apiId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="apiId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="apiId"> API identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes the specified API from the specified Gateway.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/apis/{apiId}
            Operation Id: GatewayApi_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="apiId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="apiId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateToken">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.GatewayTokenContract&gt; GenerateToken (Azure.ResourceManager.ApiManagement.Models.GatewayTokenRequestContract gatewayTokenRequestContract, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.Models.GatewayTokenContract&gt; GenerateToken(class Azure.ResourceManager.ApiManagement.Models.GatewayTokenRequestContract gatewayTokenRequestContract, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.GenerateToken(Azure.ResourceManager.ApiManagement.Models.GatewayTokenRequestContract,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateToken (gatewayTokenRequestContract As GatewayTokenRequestContract, Optional cancellationToken As CancellationToken = Nothing) As Response(Of GatewayTokenContract)" />
      <MemberSignature Language="F#" Value="abstract member GenerateToken : Azure.ResourceManager.ApiManagement.Models.GatewayTokenRequestContract * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.GatewayTokenContract&gt;&#xA;override this.GenerateToken : Azure.ResourceManager.ApiManagement.Models.GatewayTokenRequestContract * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.GatewayTokenContract&gt;" Usage="apiManagementGatewayResource.GenerateToken (gatewayTokenRequestContract, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.GatewayTokenContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gatewayTokenRequestContract" Type="Azure.ResourceManager.ApiManagement.Models.GatewayTokenRequestContract" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="gatewayTokenRequestContract"> The GatewayTokenRequestContract to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the Shared Access Authorization Token for the gateway.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/generateToken
            Operation Id: Gateway_GenerateToken
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="gatewayTokenRequestContract" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateTokenAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.GatewayTokenContract&gt;&gt; GenerateTokenAsync (Azure.ResourceManager.ApiManagement.Models.GatewayTokenRequestContract gatewayTokenRequestContract, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.Models.GatewayTokenContract&gt;&gt; GenerateTokenAsync(class Azure.ResourceManager.ApiManagement.Models.GatewayTokenRequestContract gatewayTokenRequestContract, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.GenerateTokenAsync(Azure.ResourceManager.ApiManagement.Models.GatewayTokenRequestContract,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateTokenAsync (gatewayTokenRequestContract As GatewayTokenRequestContract, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of GatewayTokenContract))" />
      <MemberSignature Language="F#" Value="abstract member GenerateTokenAsync : Azure.ResourceManager.ApiManagement.Models.GatewayTokenRequestContract * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.GatewayTokenContract&gt;&gt;&#xA;override this.GenerateTokenAsync : Azure.ResourceManager.ApiManagement.Models.GatewayTokenRequestContract * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.GatewayTokenContract&gt;&gt;" Usage="apiManagementGatewayResource.GenerateTokenAsync (gatewayTokenRequestContract, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.GatewayTokenContract&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gatewayTokenRequestContract" Type="Azure.ResourceManager.ApiManagement.Models.GatewayTokenRequestContract" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="gatewayTokenRequestContract"> The GatewayTokenRequestContract to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the Shared Access Authorization Token for the gateway.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/generateToken
            Operation Id: Gateway_GenerateToken
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="gatewayTokenRequestContract" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementGatewayResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;" Usage="apiManagementGatewayResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the Gateway specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}
            Operation Id: Gateway_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementGatewayCertificateAuthorities">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementGatewayCertificateAuthorityCollection GetApiManagementGatewayCertificateAuthorities ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementGatewayCertificateAuthorityCollection GetApiManagementGatewayCertificateAuthorities() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.GetApiManagementGatewayCertificateAuthorities" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementGatewayCertificateAuthorities () As ApiManagementGatewayCertificateAuthorityCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementGatewayCertificateAuthorities : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementGatewayCertificateAuthorityCollection&#xA;override this.GetApiManagementGatewayCertificateAuthorities : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementGatewayCertificateAuthorityCollection" Usage="apiManagementGatewayResource.GetApiManagementGatewayCertificateAuthorities " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementGatewayCertificateAuthorityCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiManagementGatewayCertificateAuthorityResources in the ApiManagementGateway. </summary>
        <returns> An object representing collection of ApiManagementGatewayCertificateAuthorityResources and their operations over a ApiManagementGatewayCertificateAuthorityResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementGatewayCertificateAuthority">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayCertificateAuthorityResource&gt; GetApiManagementGatewayCertificateAuthority (string certificateId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementGatewayCertificateAuthorityResource&gt; GetApiManagementGatewayCertificateAuthority(string certificateId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.GetApiManagementGatewayCertificateAuthority(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementGatewayCertificateAuthority (certificateId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementGatewayCertificateAuthorityResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementGatewayCertificateAuthority : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayCertificateAuthorityResource&gt;&#xA;override this.GetApiManagementGatewayCertificateAuthority : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayCertificateAuthorityResource&gt;" Usage="apiManagementGatewayResource.GetApiManagementGatewayCertificateAuthority (certificateId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayCertificateAuthorityResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateId"> Identifier of the certificate entity. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get assigned Gateway Certificate Authority details.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/certificateAuthorities/{certificateId}
            Operation Id: GatewayCertificateAuthority_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementGatewayCertificateAuthorityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayCertificateAuthorityResource&gt;&gt; GetApiManagementGatewayCertificateAuthorityAsync (string certificateId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementGatewayCertificateAuthorityResource&gt;&gt; GetApiManagementGatewayCertificateAuthorityAsync(string certificateId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.GetApiManagementGatewayCertificateAuthorityAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementGatewayCertificateAuthorityAsync (certificateId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementGatewayCertificateAuthorityResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementGatewayCertificateAuthorityAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayCertificateAuthorityResource&gt;&gt;&#xA;override this.GetApiManagementGatewayCertificateAuthorityAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayCertificateAuthorityResource&gt;&gt;" Usage="apiManagementGatewayResource.GetApiManagementGatewayCertificateAuthorityAsync (certificateId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayCertificateAuthorityResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateId"> Identifier of the certificate entity. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get assigned Gateway Certificate Authority details.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/certificateAuthorities/{certificateId}
            Operation Id: GatewayCertificateAuthority_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementGatewayHostnameConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayHostnameConfigurationResource&gt; GetApiManagementGatewayHostnameConfiguration (string hcId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementGatewayHostnameConfigurationResource&gt; GetApiManagementGatewayHostnameConfiguration(string hcId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.GetApiManagementGatewayHostnameConfiguration(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementGatewayHostnameConfiguration (hcId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementGatewayHostnameConfigurationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementGatewayHostnameConfiguration : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayHostnameConfigurationResource&gt;&#xA;override this.GetApiManagementGatewayHostnameConfiguration : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayHostnameConfigurationResource&gt;" Usage="apiManagementGatewayResource.GetApiManagementGatewayHostnameConfiguration (hcId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayHostnameConfigurationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hcId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="hcId"> Gateway hostname configuration identifier. Must be unique in the scope of parent Gateway entity. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get details of a hostname configuration
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/hostnameConfigurations/{hcId}
            Operation Id: GatewayHostnameConfiguration_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="hcId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hcId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementGatewayHostnameConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayHostnameConfigurationResource&gt;&gt; GetApiManagementGatewayHostnameConfigurationAsync (string hcId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementGatewayHostnameConfigurationResource&gt;&gt; GetApiManagementGatewayHostnameConfigurationAsync(string hcId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.GetApiManagementGatewayHostnameConfigurationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementGatewayHostnameConfigurationAsync (hcId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementGatewayHostnameConfigurationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementGatewayHostnameConfigurationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayHostnameConfigurationResource&gt;&gt;&#xA;override this.GetApiManagementGatewayHostnameConfigurationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayHostnameConfigurationResource&gt;&gt;" Usage="apiManagementGatewayResource.GetApiManagementGatewayHostnameConfigurationAsync (hcId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayHostnameConfigurationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hcId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="hcId"> Gateway hostname configuration identifier. Must be unique in the scope of parent Gateway entity. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get details of a hostname configuration
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/hostnameConfigurations/{hcId}
            Operation Id: GatewayHostnameConfiguration_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="hcId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hcId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementGatewayHostnameConfigurations">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementGatewayHostnameConfigurationCollection GetApiManagementGatewayHostnameConfigurations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementGatewayHostnameConfigurationCollection GetApiManagementGatewayHostnameConfigurations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.GetApiManagementGatewayHostnameConfigurations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementGatewayHostnameConfigurations () As ApiManagementGatewayHostnameConfigurationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementGatewayHostnameConfigurations : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementGatewayHostnameConfigurationCollection&#xA;override this.GetApiManagementGatewayHostnameConfigurations : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementGatewayHostnameConfigurationCollection" Usage="apiManagementGatewayResource.GetApiManagementGatewayHostnameConfigurations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementGatewayHostnameConfigurationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiManagementGatewayHostnameConfigurationResources in the ApiManagementGateway. </summary>
        <returns> An object representing collection of ApiManagementGatewayHostnameConfigurationResources and their operations over a ApiManagementGatewayHostnameConfigurationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementGatewayResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;&gt;" Usage="apiManagementGatewayResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the Gateway specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}
            Operation Id: Gateway_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntityTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; GetEntityTag (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; GetEntityTag(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.GetEntityTag(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEntityTag (Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member GetEntityTag : System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.GetEntityTag : System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="apiManagementGatewayResource.GetEntityTag cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the entity state (Etag) version of the Gateway specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}
            Operation Id: Gateway_GetEntityTag
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntityTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; GetEntityTagAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; GetEntityTagAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.GetEntityTagAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEntityTagAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member GetEntityTagAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.GetEntityTagAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="apiManagementGatewayResource.GetEntityTagAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the entity state (Etag) version of the Gateway specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}
            Operation Id: Gateway_GetEntityTag
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGatewayApiEntityTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; GetGatewayApiEntityTag (string apiId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; GetGatewayApiEntityTag(string apiId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.GetGatewayApiEntityTag(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGatewayApiEntityTag (apiId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member GetGatewayApiEntityTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.GetGatewayApiEntityTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="apiManagementGatewayResource.GetGatewayApiEntityTag (apiId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="apiId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="apiId"> API identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks that API entity specified by identifier is associated with the Gateway entity.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/apis/{apiId}
            Operation Id: GatewayApi_GetEntityTag
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="apiId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="apiId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGatewayApiEntityTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; GetGatewayApiEntityTagAsync (string apiId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; GetGatewayApiEntityTagAsync(string apiId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.GetGatewayApiEntityTagAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGatewayApiEntityTagAsync (apiId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member GetGatewayApiEntityTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.GetGatewayApiEntityTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="apiManagementGatewayResource.GetGatewayApiEntityTagAsync (apiId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="apiId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="apiId"> API identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks that API entity specified by identifier is associated with the Gateway entity.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/apis/{apiId}
            Operation Id: GatewayApi_GetEntityTag
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="apiId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="apiId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGatewayApisByService">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.GatewayApiData&gt; GetGatewayApisByService (string filter = default, int? top = default, int? skip = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.GatewayApiData&gt; GetGatewayApisByService(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.GetGatewayApisByService(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGatewayApisByService (Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of GatewayApiData)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GetGatewayApisByService : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.GatewayApiData&gt;&#xA;override this.GetGatewayApisByService : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.GatewayApiData&gt;" Usage="apiManagementGatewayResource.GetGatewayApisByService (filter, top, skip, cancellationToken)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt; GetGatewayApisByService (string filter = default, int? top = default, int? skip = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ApiManagement.ApiResource&gt; GetGatewayApisByService(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGatewayApisByService (Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ApiResource)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member GetGatewayApisByService : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;&#xA;override this.GetGatewayApisByService : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;" Usage="apiManagementGatewayResource.GetGatewayApisByService (filter, top, skip, cancellationToken)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.GatewayApiData&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> |     Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;. </param>
        <param name="top"> Number of records to return. </param>
        <param name="skip"> Number of records to skip. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists a collection of the APIs associated with a gateway.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/apis
            Operation Id: GatewayApi_ListByService
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.GatewayApiData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGatewayApisByServiceAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.GatewayApiData&gt; GetGatewayApisByServiceAsync (string filter = default, int? top = default, int? skip = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.GatewayApiData&gt; GetGatewayApisByServiceAsync(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.GetGatewayApisByServiceAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGatewayApisByServiceAsync (Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of GatewayApiData)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GetGatewayApisByServiceAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.GatewayApiData&gt;&#xA;override this.GetGatewayApisByServiceAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.GatewayApiData&gt;" Usage="apiManagementGatewayResource.GetGatewayApisByServiceAsync (filter, top, skip, cancellationToken)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt; GetGatewayApisByServiceAsync (string filter = default, int? top = default, int? skip = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ApiManagement.ApiResource&gt; GetGatewayApisByServiceAsync(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGatewayApisByServiceAsync (Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ApiResource)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member GetGatewayApisByServiceAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;&#xA;override this.GetGatewayApisByServiceAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;" Usage="apiManagementGatewayResource.GetGatewayApisByServiceAsync (filter, top, skip, cancellationToken)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.GatewayApiData&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> |     Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;. </param>
        <param name="top"> Number of records to return. </param>
        <param name="skip"> Number of records to skip. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists a collection of the APIs associated with a gateway.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/apis
            Operation Id: GatewayApi_ListByService
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.GatewayApiData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeys">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.GatewayKeysContract&gt; GetKeys (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.Models.GatewayKeysContract&gt; GetKeys(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.GetKeys(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeys (Optional cancellationToken As CancellationToken = Nothing) As Response(Of GatewayKeysContract)" />
      <MemberSignature Language="F#" Value="abstract member GetKeys : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.GatewayKeysContract&gt;&#xA;override this.GetKeys : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.GatewayKeysContract&gt;" Usage="apiManagementGatewayResource.GetKeys cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.GatewayKeysContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves gateway keys.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/listKeys
            Operation Id: Gateway_ListKeys
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeysAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.GatewayKeysContract&gt;&gt; GetKeysAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.Models.GatewayKeysContract&gt;&gt; GetKeysAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.GetKeysAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeysAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of GatewayKeysContract))" />
      <MemberSignature Language="F#" Value="abstract member GetKeysAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.GatewayKeysContract&gt;&gt;&#xA;override this.GetKeysAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.GatewayKeysContract&gt;&gt;" Usage="apiManagementGatewayResource.GetKeysAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.GatewayKeysContract&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves gateway keys.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/listKeys
            Operation Id: Gateway_ListKeys
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegenerateKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Response RegenerateKey (Azure.ResourceManager.ApiManagement.Models.GatewayKeyRegenerateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response RegenerateKey(class Azure.ResourceManager.ApiManagement.Models.GatewayKeyRegenerateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.RegenerateKey(Azure.ResourceManager.ApiManagement.Models.GatewayKeyRegenerateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RegenerateKey (content As GatewayKeyRegenerateContent, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member RegenerateKey : Azure.ResourceManager.ApiManagement.Models.GatewayKeyRegenerateContent * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.RegenerateKey : Azure.ResourceManager.ApiManagement.Models.GatewayKeyRegenerateContent * System.Threading.CancellationToken -&gt; Azure.Response" Usage="apiManagementGatewayResource.RegenerateKey (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.ApiManagement.Models.GatewayKeyRegenerateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The GatewayKeyRegenerateContent to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Regenerates specified gateway key invalidating any tokens created with it.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/regenerateKey
            Operation Id: Gateway_RegenerateKey
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RegenerateKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; RegenerateKeyAsync (Azure.ResourceManager.ApiManagement.Models.GatewayKeyRegenerateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; RegenerateKeyAsync(class Azure.ResourceManager.ApiManagement.Models.GatewayKeyRegenerateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.RegenerateKeyAsync(Azure.ResourceManager.ApiManagement.Models.GatewayKeyRegenerateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RegenerateKeyAsync (content As GatewayKeyRegenerateContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member RegenerateKeyAsync : Azure.ResourceManager.ApiManagement.Models.GatewayKeyRegenerateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.RegenerateKeyAsync : Azure.ResourceManager.ApiManagement.Models.GatewayKeyRegenerateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="apiManagementGatewayResource.RegenerateKeyAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.ApiManagement.Models.GatewayKeyRegenerateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The GatewayKeyRegenerateContent to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Regenerates specified gateway key invalidating any tokens created with it.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/regenerateKey
            Operation Id: Gateway_RegenerateKey
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt; Update (Azure.ETag ifMatch, Azure.ResourceManager.ApiManagement.ApiManagementGatewayData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt; Update(valuetype Azure.ETag ifMatch, class Azure.ResourceManager.ApiManagement.ApiManagementGatewayData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.Update(Azure.ETag,Azure.ResourceManager.ApiManagement.ApiManagementGatewayData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (ifMatch As ETag, data As ApiManagementGatewayData, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementGatewayResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.ETag * Azure.ResourceManager.ApiManagement.ApiManagementGatewayData * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;&#xA;override this.Update : Azure.ETag * Azure.ResourceManager.ApiManagement.ApiManagementGatewayData * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;" Usage="apiManagementGatewayResource.Update (ifMatch, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifMatch" Type="Azure.ETag" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="data" Type="Azure.ResourceManager.ApiManagement.ApiManagementGatewayData" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="ifMatch"> ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update. </param>
        <param name="data"> The ApiManagementGateway to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates the details of the gateway specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}
            Operation Id: Gateway_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt; Update (string ifMatch, Azure.ResourceManager.ApiManagement.ApiManagementGatewayData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt; Update(string ifMatch, class Azure.ResourceManager.ApiManagement.ApiManagementGatewayData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.Update(System.String,Azure.ResourceManager.ApiManagement.ApiManagementGatewayData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (ifMatch As String, data As ApiManagementGatewayData, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementGatewayResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : string * Azure.ResourceManager.ApiManagement.ApiManagementGatewayData * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;&#xA;override this.Update : string * Azure.ResourceManager.ApiManagement.ApiManagementGatewayData * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;" Usage="apiManagementGatewayResource.Update (ifMatch, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifMatch" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="data" Type="Azure.ResourceManager.ApiManagement.ApiManagementGatewayData" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="ifMatch"> ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update. </param>
        <param name="data"> The ApiManagementGateway to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates the details of the gateway specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}
            Operation Id: Gateway_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ifMatch" /> or <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;&gt; UpdateAsync (Azure.ETag ifMatch, Azure.ResourceManager.ApiManagement.ApiManagementGatewayData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;&gt; UpdateAsync(valuetype Azure.ETag ifMatch, class Azure.ResourceManager.ApiManagement.ApiManagementGatewayData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.UpdateAsync(Azure.ETag,Azure.ResourceManager.ApiManagement.ApiManagementGatewayData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (ifMatch As ETag, data As ApiManagementGatewayData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementGatewayResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.ETag * Azure.ResourceManager.ApiManagement.ApiManagementGatewayData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.ETag * Azure.ResourceManager.ApiManagement.ApiManagementGatewayData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;&gt;" Usage="apiManagementGatewayResource.UpdateAsync (ifMatch, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifMatch" Type="Azure.ETag" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="data" Type="Azure.ResourceManager.ApiManagement.ApiManagementGatewayData" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="ifMatch"> ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update. </param>
        <param name="data"> The ApiManagementGateway to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates the details of the gateway specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}
            Operation Id: Gateway_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;&gt; UpdateAsync (string ifMatch, Azure.ResourceManager.ApiManagement.ApiManagementGatewayData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;&gt; UpdateAsync(string ifMatch, class Azure.ResourceManager.ApiManagement.ApiManagementGatewayData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource.UpdateAsync(System.String,Azure.ResourceManager.ApiManagement.ApiManagementGatewayData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (ifMatch As String, data As ApiManagementGatewayData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementGatewayResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : string * Azure.ResourceManager.ApiManagement.ApiManagementGatewayData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;&gt;&#xA;override this.UpdateAsync : string * Azure.ResourceManager.ApiManagement.ApiManagementGatewayData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;&gt;" Usage="apiManagementGatewayResource.UpdateAsync (ifMatch, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifMatch" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="data" Type="Azure.ResourceManager.ApiManagement.ApiManagementGatewayData" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="ifMatch"> ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update. </param>
        <param name="data"> The ApiManagementGateway to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates the details of the gateway specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}
            Operation Id: Gateway_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ifMatch" /> or <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
