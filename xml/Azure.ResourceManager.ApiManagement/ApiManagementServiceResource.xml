<Type Name="ApiManagementServiceResource" FullName="Azure.ResourceManager.ApiManagement.ApiManagementServiceResource">
  <TypeSignature Language="C#" Value="public class ApiManagementServiceResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ApiManagementServiceResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource" />
  <TypeSignature Language="VB.NET" Value="Public Class ApiManagementServiceResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type ApiManagementServiceResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing an ApiManagementService along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetApiManagementServiceResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetApiManagementService method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApiManagementServiceResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt; AddTag (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt; AddTag(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.AddTag(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTag (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementServiceResource)" />
      <MemberSignature Language="F#" Value="abstract member AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&#xA;override this.AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;" Usage="apiManagementServiceResource.AddTag (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}
            Operation Id: ApiManagementService_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AddTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt; AddTagAsync (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt; AddTagAsync(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTagAsync (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementServiceResource))" />
      <MemberSignature Language="F#" Value="abstract member AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt;&#xA;override this.AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt;" Usage="apiManagementServiceResource.AddTagAsync (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}
            Operation Id: ApiManagementService_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyNetworkConfigurationUpdates">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt; ApplyNetworkConfigurationUpdates (Azure.WaitUntil waitUntil, Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceApplyNetworkConfigurationContent content = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt; ApplyNetworkConfigurationUpdates(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceApplyNetworkConfigurationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.ApplyNetworkConfigurationUpdates(Azure.WaitUntil,Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceApplyNetworkConfigurationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ApplyNetworkConfigurationUpdates (waitUntil As WaitUntil, Optional content As ApiManagementServiceApplyNetworkConfigurationContent = Nothing, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of ApiManagementServiceResource)" />
      <MemberSignature Language="F#" Value="abstract member ApplyNetworkConfigurationUpdates : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceApplyNetworkConfigurationContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&#xA;override this.ApplyNetworkConfigurationUpdates : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceApplyNetworkConfigurationContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;" Usage="apiManagementServiceResource.ApplyNetworkConfigurationUpdates (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceApplyNetworkConfigurationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Parameters supplied to the Apply Network Configuration operation. If the parameters are empty, all the regions in which the Api Management service is deployed will be updated sequentially without incurring downtime in the region. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates the Microsoft.ApiManagement resource running in the Virtual network to pick the updated DNS changes.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/applynetworkconfigurationupdates
            Operation Id: ApiManagementService_ApplyNetworkConfigurationUpdates
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyNetworkConfigurationUpdatesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt; ApplyNetworkConfigurationUpdatesAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceApplyNetworkConfigurationContent content = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt; ApplyNetworkConfigurationUpdatesAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceApplyNetworkConfigurationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.ApplyNetworkConfigurationUpdatesAsync(Azure.WaitUntil,Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceApplyNetworkConfigurationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ApplyNetworkConfigurationUpdatesAsync (waitUntil As WaitUntil, Optional content As ApiManagementServiceApplyNetworkConfigurationContent = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of ApiManagementServiceResource))" />
      <MemberSignature Language="F#" Value="abstract member ApplyNetworkConfigurationUpdatesAsync : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceApplyNetworkConfigurationContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt;&#xA;override this.ApplyNetworkConfigurationUpdatesAsync : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceApplyNetworkConfigurationContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt;" Usage="apiManagementServiceResource.ApplyNetworkConfigurationUpdatesAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceApplyNetworkConfigurationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Parameters supplied to the Apply Network Configuration operation. If the parameters are empty, all the regions in which the Api Management service is deployed will be updated sequentially without incurring downtime in the region. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates the Microsoft.ApiManagement resource running in the Virtual network to pick the updated DNS changes.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/applynetworkconfigurationupdates
            Operation Id: ApiManagementService_ApplyNetworkConfigurationUpdates
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Backup">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt; Backup (Azure.WaitUntil waitUntil, Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceBackupRestoreContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt; Backup(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceBackupRestoreContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.Backup(Azure.WaitUntil,Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceBackupRestoreContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Backup (waitUntil As WaitUntil, content As ApiManagementServiceBackupRestoreContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of ApiManagementServiceResource)" />
      <MemberSignature Language="F#" Value="abstract member Backup : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceBackupRestoreContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&#xA;override this.Backup : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceBackupRestoreContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;" Usage="apiManagementServiceResource.Backup (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceBackupRestoreContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Parameters supplied to the ApiManagementService_Backup operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates a backup of the API Management service to the given Azure Storage Account. This is long running operation and could take several minutes to complete.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backup
            Operation Id: ApiManagementService_Backup
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="BackupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt; BackupAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceBackupRestoreContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt; BackupAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceBackupRestoreContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.BackupAsync(Azure.WaitUntil,Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceBackupRestoreContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BackupAsync (waitUntil As WaitUntil, content As ApiManagementServiceBackupRestoreContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of ApiManagementServiceResource))" />
      <MemberSignature Language="F#" Value="abstract member BackupAsync : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceBackupRestoreContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt;&#xA;override this.BackupAsync : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceBackupRestoreContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt;" Usage="apiManagementServiceResource.BackupAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceBackupRestoreContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Parameters supplied to the ApiManagementService_Backup operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates a backup of the API Management service to the given Azure Storage Account. This is long running operation and could take several minutes to complete.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backup
            Operation Id: ApiManagementService_Backup
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateContentItem">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem&gt; CreateOrUpdateContentItem (string contentTypeId, string contentItemId, Azure.ETag? ifMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem&gt; CreateOrUpdateContentItem(string contentTypeId, string contentItemId, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.CreateOrUpdateContentItem(System.String,System.String,System.Nullable{Azure.ETag},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateContentItem (contentTypeId As String, contentItemId As String, Optional ifMatch As Nullable(Of ETag) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementContentItem)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateContentItem : string * string * Nullable&lt;Azure.ETag&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem&gt;&#xA;override this.CreateOrUpdateContentItem : string * string * Nullable&lt;Azure.ETag&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem&gt;" Usage="apiManagementServiceResource.CreateOrUpdateContentItem (contentTypeId, contentItemId, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentTypeId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="contentItemId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="ifMatch" Type="System.Nullable&lt;Azure.ETag&gt;" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="contentTypeId"> Content type identifier. </param>
        <param name="contentItemId"> Content item identifier. </param>
        <param name="ifMatch"> ETag of the Entity. Not required when creating an entity, but required when updating an entity. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates a new developer portal's content item specified by the provided content type.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}/contentItems/{contentItemId}
            Operation Id: ContentItem_CreateOrUpdate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="contentTypeId" /> or <paramref name="contentItemId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentTypeId" /> or <paramref name="contentItemId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateContentItemAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem&gt;&gt; CreateOrUpdateContentItemAsync (string contentTypeId, string contentItemId, Azure.ETag? ifMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem&gt;&gt; CreateOrUpdateContentItemAsync(string contentTypeId, string contentItemId, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.CreateOrUpdateContentItemAsync(System.String,System.String,System.Nullable{Azure.ETag},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateContentItemAsync (contentTypeId As String, contentItemId As String, Optional ifMatch As Nullable(Of ETag) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementContentItem))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateContentItemAsync : string * string * Nullable&lt;Azure.ETag&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem&gt;&gt;&#xA;override this.CreateOrUpdateContentItemAsync : string * string * Nullable&lt;Azure.ETag&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem&gt;&gt;" Usage="apiManagementServiceResource.CreateOrUpdateContentItemAsync (contentTypeId, contentItemId, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentTypeId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="contentItemId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="ifMatch" Type="System.Nullable&lt;Azure.ETag&gt;" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="contentTypeId"> Content type identifier. </param>
        <param name="contentItemId"> Content item identifier. </param>
        <param name="ifMatch"> ETag of the Entity. Not required when creating an entity, but required when updating an entity. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates a new developer portal's content item specified by the provided content type.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}/contentItems/{contentItemId}
            Operation Id: ContentItem_CreateOrUpdate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="contentTypeId" /> or <paramref name="contentItemId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentTypeId" /> or <paramref name="contentItemId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateContentType">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType&gt; CreateOrUpdateContentType (string contentTypeId, Azure.ETag? ifMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType&gt; CreateOrUpdateContentType(string contentTypeId, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.CreateOrUpdateContentType(System.String,System.Nullable{Azure.ETag},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateContentType (contentTypeId As String, Optional ifMatch As Nullable(Of ETag) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementContentType)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateContentType : string * Nullable&lt;Azure.ETag&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType&gt;&#xA;override this.CreateOrUpdateContentType : string * Nullable&lt;Azure.ETag&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType&gt;" Usage="apiManagementServiceResource.CreateOrUpdateContentType (contentTypeId, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentTypeId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="ifMatch" Type="System.Nullable&lt;Azure.ETag&gt;" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="contentTypeId"> Content type identifier. </param>
        <param name="ifMatch"> ETag of the Entity. Not required when creating an entity, but required when updating an entity. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates or updates the developer portal's content type. Content types describe content items' properties, validation rules, and constraints. Custom content types' identifiers need to start with the `c-` prefix. Built-in content types can't be modified.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}
            Operation Id: ContentType_CreateOrUpdate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="contentTypeId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentTypeId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateContentTypeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType&gt;&gt; CreateOrUpdateContentTypeAsync (string contentTypeId, Azure.ETag? ifMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType&gt;&gt; CreateOrUpdateContentTypeAsync(string contentTypeId, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.CreateOrUpdateContentTypeAsync(System.String,System.Nullable{Azure.ETag},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateContentTypeAsync (contentTypeId As String, Optional ifMatch As Nullable(Of ETag) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementContentType))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateContentTypeAsync : string * Nullable&lt;Azure.ETag&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType&gt;&gt;&#xA;override this.CreateOrUpdateContentTypeAsync : string * Nullable&lt;Azure.ETag&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType&gt;&gt;" Usage="apiManagementServiceResource.CreateOrUpdateContentTypeAsync (contentTypeId, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentTypeId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="ifMatch" Type="System.Nullable&lt;Azure.ETag&gt;" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="contentTypeId"> Content type identifier. </param>
        <param name="ifMatch"> ETag of the Entity. Not required when creating an entity, but required when updating an entity. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates or updates the developer portal's content type. Content types describe content items' properties, validation rules, and constraints. Custom content types' identifiers need to start with the `c-` prefix. Built-in content types can't be modified.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}
            Operation Id: ContentType_CreateOrUpdate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="contentTypeId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentTypeId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string serviceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string serviceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.CreateResourceIdentifier(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, serviceName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, serviceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serviceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">To be added.</param>
        <param name="resourceGroupName">To be added.</param>
        <param name="serviceName">To be added.</param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementServiceData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.ApiManagement.ApiManagementServiceData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As ApiManagementServiceData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.ApiManagement.ApiManagementServiceData" Usage="Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementServiceData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="apiManagementServiceResource.Delete (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes an existing API Management service.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}
            Operation Id: ApiManagementService_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="apiManagementServiceResource.DeleteAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes an existing API Management service.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}
            Operation Id: ApiManagementService_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteContentItem">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteContentItem (string contentTypeId, string contentItemId, Azure.ETag ifMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteContentItem(string contentTypeId, string contentItemId, valuetype Azure.ETag ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.DeleteContentItem(System.String,System.String,Azure.ETag,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteContentItem (contentTypeId As String, contentItemId As String, ifMatch As ETag, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteContentItem : string * string * Azure.ETag * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteContentItem : string * string * Azure.ETag * System.Threading.CancellationToken -&gt; Azure.Response" Usage="apiManagementServiceResource.DeleteContentItem (contentTypeId, contentItemId, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentTypeId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="contentItemId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="ifMatch" Type="Azure.ETag" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="contentTypeId"> Content type identifier. </param>
        <param name="contentItemId"> Content item identifier. </param>
        <param name="ifMatch"> ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes the specified developer portal's content item.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}/contentItems/{contentItemId}
            Operation Id: ContentItem_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="contentTypeId" /> or <paramref name="contentItemId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentTypeId" /> or <paramref name="contentItemId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteContentItemAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteContentItemAsync (string contentTypeId, string contentItemId, Azure.ETag ifMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteContentItemAsync(string contentTypeId, string contentItemId, valuetype Azure.ETag ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.DeleteContentItemAsync(System.String,System.String,Azure.ETag,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteContentItemAsync (contentTypeId As String, contentItemId As String, ifMatch As ETag, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteContentItemAsync : string * string * Azure.ETag * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteContentItemAsync : string * string * Azure.ETag * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="apiManagementServiceResource.DeleteContentItemAsync (contentTypeId, contentItemId, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentTypeId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="contentItemId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="ifMatch" Type="Azure.ETag" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="contentTypeId"> Content type identifier. </param>
        <param name="contentItemId"> Content item identifier. </param>
        <param name="ifMatch"> ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes the specified developer portal's content item.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}/contentItems/{contentItemId}
            Operation Id: ContentItem_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="contentTypeId" /> or <paramref name="contentItemId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentTypeId" /> or <paramref name="contentItemId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteContentType">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteContentType (string contentTypeId, Azure.ETag ifMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteContentType(string contentTypeId, valuetype Azure.ETag ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.DeleteContentType(System.String,Azure.ETag,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteContentType (contentTypeId As String, ifMatch As ETag, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteContentType : string * Azure.ETag * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteContentType : string * Azure.ETag * System.Threading.CancellationToken -&gt; Azure.Response" Usage="apiManagementServiceResource.DeleteContentType (contentTypeId, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentTypeId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="ifMatch" Type="Azure.ETag" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="contentTypeId"> Content type identifier. </param>
        <param name="ifMatch"> ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes the specified developer portal's content type. Content types describe content items' properties, validation rules, and constraints. Built-in content types (with identifiers starting with the `c-` prefix) can't be removed.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}
            Operation Id: ContentType_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="contentTypeId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentTypeId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteContentTypeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteContentTypeAsync (string contentTypeId, Azure.ETag ifMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteContentTypeAsync(string contentTypeId, valuetype Azure.ETag ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.DeleteContentTypeAsync(System.String,Azure.ETag,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteContentTypeAsync (contentTypeId As String, ifMatch As ETag, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteContentTypeAsync : string * Azure.ETag * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteContentTypeAsync : string * Azure.ETag * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="apiManagementServiceResource.DeleteContentTypeAsync (contentTypeId, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentTypeId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="ifMatch" Type="Azure.ETag" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="contentTypeId"> Content type identifier. </param>
        <param name="ifMatch"> ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes the specified developer portal's content type. Content types describe content items' properties, validation rules, and constraints. Built-in content types (with identifiers starting with the `c-` prefix) can't be removed.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}
            Operation Id: ContentType_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="contentTypeId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentTypeId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeployTenantConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.GitOperationResultContractData&gt; DeployTenantConfiguration (Azure.WaitUntil waitUntil, Azure.ResourceManager.ApiManagement.Models.ConfigurationName configurationName, Azure.ResourceManager.ApiManagement.Models.ConfigurationDeployContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.ApiManagement.Models.GitOperationResultContractData&gt; DeployTenantConfiguration(valuetype Azure.WaitUntil waitUntil, valuetype Azure.ResourceManager.ApiManagement.Models.ConfigurationName configurationName, class Azure.ResourceManager.ApiManagement.Models.ConfigurationDeployContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.DeployTenantConfiguration(Azure.WaitUntil,Azure.ResourceManager.ApiManagement.Models.ConfigurationName,Azure.ResourceManager.ApiManagement.Models.ConfigurationDeployContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeployTenantConfiguration (waitUntil As WaitUntil, configurationName As ConfigurationName, content As ConfigurationDeployContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of GitOperationResultContractData)" />
      <MemberSignature Language="F#" Value="abstract member DeployTenantConfiguration : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ConfigurationName * Azure.ResourceManager.ApiManagement.Models.ConfigurationDeployContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.GitOperationResultContractData&gt;&#xA;override this.DeployTenantConfiguration : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ConfigurationName * Azure.ResourceManager.ApiManagement.Models.ConfigurationDeployContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.GitOperationResultContractData&gt;" Usage="apiManagementServiceResource.DeployTenantConfiguration (waitUntil, configurationName, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.GitOperationResultContractData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="configurationName" Type="Azure.ResourceManager.ApiManagement.Models.ConfigurationName" />
        <Parameter Name="content" Type="Azure.ResourceManager.ApiManagement.Models.ConfigurationDeployContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="configurationName"> The identifier of the Git Configuration Operation. </param>
        <param name="content"> Deploy Configuration parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            This operation applies changes from the specified Git branch to the configuration database. This is a long running operation and could take several minutes to complete.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/deploy
            Operation Id: TenantConfiguration_Deploy
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeployTenantConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.GitOperationResultContractData&gt;&gt; DeployTenantConfigurationAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.ApiManagement.Models.ConfigurationName configurationName, Azure.ResourceManager.ApiManagement.Models.ConfigurationDeployContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.ApiManagement.Models.GitOperationResultContractData&gt;&gt; DeployTenantConfigurationAsync(valuetype Azure.WaitUntil waitUntil, valuetype Azure.ResourceManager.ApiManagement.Models.ConfigurationName configurationName, class Azure.ResourceManager.ApiManagement.Models.ConfigurationDeployContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.DeployTenantConfigurationAsync(Azure.WaitUntil,Azure.ResourceManager.ApiManagement.Models.ConfigurationName,Azure.ResourceManager.ApiManagement.Models.ConfigurationDeployContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeployTenantConfigurationAsync (waitUntil As WaitUntil, configurationName As ConfigurationName, content As ConfigurationDeployContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of GitOperationResultContractData))" />
      <MemberSignature Language="F#" Value="abstract member DeployTenantConfigurationAsync : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ConfigurationName * Azure.ResourceManager.ApiManagement.Models.ConfigurationDeployContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.GitOperationResultContractData&gt;&gt;&#xA;override this.DeployTenantConfigurationAsync : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ConfigurationName * Azure.ResourceManager.ApiManagement.Models.ConfigurationDeployContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.GitOperationResultContractData&gt;&gt;" Usage="apiManagementServiceResource.DeployTenantConfigurationAsync (waitUntil, configurationName, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.GitOperationResultContractData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="configurationName" Type="Azure.ResourceManager.ApiManagement.Models.ConfigurationName" />
        <Parameter Name="content" Type="Azure.ResourceManager.ApiManagement.Models.ConfigurationDeployContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="configurationName"> The identifier of the Git Configuration Operation. </param>
        <param name="content"> Deploy Configuration parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            This operation applies changes from the specified Git branch to the configuration database. This is a long running operation and could take several minutes to complete.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/deploy
            Operation Id: TenantConfiguration_Deploy
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementServiceResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;" Usage="apiManagementServiceResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an API Management service resource description.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}
            Operation Id: ApiManagementService_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApi">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt; GetApi (string apiId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiResource&gt; GetApi(string apiId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApi(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApi (apiId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApi : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;&#xA;override this.GetApi : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;" Usage="apiManagementServiceResource.GetApi (apiId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="apiId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="apiId"> API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the API specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}
            Operation Id: Api_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="apiId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="apiId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;&gt; GetApiAsync (string apiId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiResource&gt;&gt; GetApiAsync(string apiId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiAsync (apiId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;&gt;&#xA;override this.GetApiAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;&gt;" Usage="apiManagementServiceResource.GetApiAsync (apiId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="apiId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="apiId"> API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the API specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}
            Operation Id: Api_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="apiId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="apiId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementAuthorizationServer">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementAuthorizationServerResource&gt; GetApiManagementAuthorizationServer (string authsid, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementAuthorizationServerResource&gt; GetApiManagementAuthorizationServer(string authsid, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementAuthorizationServer(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementAuthorizationServer (authsid As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementAuthorizationServerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementAuthorizationServer : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementAuthorizationServerResource&gt;&#xA;override this.GetApiManagementAuthorizationServer : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementAuthorizationServerResource&gt;" Usage="apiManagementServiceResource.GetApiManagementAuthorizationServer (authsid, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementAuthorizationServerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authsid" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="authsid"> Identifier of the authorization server. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the authorization server specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}
            Operation Id: AuthorizationServer_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="authsid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="authsid" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementAuthorizationServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementAuthorizationServerResource&gt;&gt; GetApiManagementAuthorizationServerAsync (string authsid, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementAuthorizationServerResource&gt;&gt; GetApiManagementAuthorizationServerAsync(string authsid, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementAuthorizationServerAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementAuthorizationServerAsync (authsid As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementAuthorizationServerResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementAuthorizationServerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementAuthorizationServerResource&gt;&gt;&#xA;override this.GetApiManagementAuthorizationServerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementAuthorizationServerResource&gt;&gt;" Usage="apiManagementServiceResource.GetApiManagementAuthorizationServerAsync (authsid, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementAuthorizationServerResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authsid" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="authsid"> Identifier of the authorization server. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the authorization server specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}
            Operation Id: AuthorizationServer_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="authsid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="authsid" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementAuthorizationServers">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementAuthorizationServerCollection GetApiManagementAuthorizationServers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementAuthorizationServerCollection GetApiManagementAuthorizationServers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementAuthorizationServers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementAuthorizationServers () As ApiManagementAuthorizationServerCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementAuthorizationServers : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementAuthorizationServerCollection&#xA;override this.GetApiManagementAuthorizationServers : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementAuthorizationServerCollection" Usage="apiManagementServiceResource.GetApiManagementAuthorizationServers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementAuthorizationServerCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiManagementAuthorizationServerResources in the ApiManagementService. </summary>
        <returns> An object representing collection of ApiManagementAuthorizationServerResources and their operations over a ApiManagementAuthorizationServerResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementBackend">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementBackendResource&gt; GetApiManagementBackend (string backendId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementBackendResource&gt; GetApiManagementBackend(string backendId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementBackend(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementBackend (backendId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementBackendResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementBackend : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementBackendResource&gt;&#xA;override this.GetApiManagementBackend : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementBackendResource&gt;" Usage="apiManagementServiceResource.GetApiManagementBackend (backendId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementBackendResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backendId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="backendId"> Identifier of the Backend entity. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the backend specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendId}
            Operation Id: Backend_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="backendId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="backendId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementBackendAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementBackendResource&gt;&gt; GetApiManagementBackendAsync (string backendId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementBackendResource&gt;&gt; GetApiManagementBackendAsync(string backendId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementBackendAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementBackendAsync (backendId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementBackendResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementBackendAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementBackendResource&gt;&gt;&#xA;override this.GetApiManagementBackendAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementBackendResource&gt;&gt;" Usage="apiManagementServiceResource.GetApiManagementBackendAsync (backendId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementBackendResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backendId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="backendId"> Identifier of the Backend entity. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the backend specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendId}
            Operation Id: Backend_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="backendId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="backendId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementBackends">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementBackendCollection GetApiManagementBackends ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementBackendCollection GetApiManagementBackends() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementBackends" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementBackends () As ApiManagementBackendCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementBackends : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementBackendCollection&#xA;override this.GetApiManagementBackends : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementBackendCollection" Usage="apiManagementServiceResource.GetApiManagementBackends " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementBackendCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiManagementBackendResources in the ApiManagementService. </summary>
        <returns> An object representing collection of ApiManagementBackendResources and their operations over a ApiManagementBackendResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementCache">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementCacheResource&gt; GetApiManagementCache (string cacheId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementCacheResource&gt; GetApiManagementCache(string cacheId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementCache(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementCache (cacheId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementCacheResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementCache : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementCacheResource&gt;&#xA;override this.GetApiManagementCache : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementCacheResource&gt;" Usage="apiManagementServiceResource.GetApiManagementCache (cacheId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementCacheResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cacheId"> Identifier of the Cache entity. Cache identifier (should be either 'default' or valid Azure region identifier). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the Cache specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/caches/{cacheId}
            Operation Id: Cache_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="cacheId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cacheId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementCacheAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementCacheResource&gt;&gt; GetApiManagementCacheAsync (string cacheId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementCacheResource&gt;&gt; GetApiManagementCacheAsync(string cacheId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementCacheAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementCacheAsync (cacheId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementCacheResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementCacheAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementCacheResource&gt;&gt;&#xA;override this.GetApiManagementCacheAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementCacheResource&gt;&gt;" Usage="apiManagementServiceResource.GetApiManagementCacheAsync (cacheId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementCacheResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cacheId"> Identifier of the Cache entity. Cache identifier (should be either 'default' or valid Azure region identifier). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the Cache specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/caches/{cacheId}
            Operation Id: Cache_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="cacheId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cacheId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementCaches">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementCacheCollection GetApiManagementCaches ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementCacheCollection GetApiManagementCaches() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementCaches" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementCaches () As ApiManagementCacheCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementCaches : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementCacheCollection&#xA;override this.GetApiManagementCaches : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementCacheCollection" Usage="apiManagementServiceResource.GetApiManagementCaches " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementCacheCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiManagementCacheResources in the ApiManagementService. </summary>
        <returns> An object representing collection of ApiManagementCacheResources and their operations over a ApiManagementCacheResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementCertificate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementCertificateResource&gt; GetApiManagementCertificate (string certificateId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementCertificateResource&gt; GetApiManagementCertificate(string certificateId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementCertificate(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementCertificate (certificateId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementCertificateResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementCertificate : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementCertificateResource&gt;&#xA;override this.GetApiManagementCertificate : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementCertificateResource&gt;" Usage="apiManagementServiceResource.GetApiManagementCertificate (certificateId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementCertificateResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateId"> Identifier of the certificate entity. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the certificate specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}
            Operation Id: Certificate_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementCertificateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementCertificateResource&gt;&gt; GetApiManagementCertificateAsync (string certificateId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementCertificateResource&gt;&gt; GetApiManagementCertificateAsync(string certificateId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementCertificateAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementCertificateAsync (certificateId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementCertificateResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementCertificateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementCertificateResource&gt;&gt;&#xA;override this.GetApiManagementCertificateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementCertificateResource&gt;&gt;" Usage="apiManagementServiceResource.GetApiManagementCertificateAsync (certificateId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementCertificateResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateId"> Identifier of the certificate entity. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the certificate specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}
            Operation Id: Certificate_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementCertificates">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementCertificateCollection GetApiManagementCertificates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementCertificateCollection GetApiManagementCertificates() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementCertificates" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementCertificates () As ApiManagementCertificateCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementCertificates : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementCertificateCollection&#xA;override this.GetApiManagementCertificates : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementCertificateCollection" Usage="apiManagementServiceResource.GetApiManagementCertificates " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementCertificateCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiManagementCertificateResources in the ApiManagementService. </summary>
        <returns> An object representing collection of ApiManagementCertificateResources and their operations over a ApiManagementCertificateResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementContentType">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementContentTypeResource&gt; GetApiManagementContentType (string contentTypeId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementContentTypeResource&gt; GetApiManagementContentType(string contentTypeId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementContentType(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementContentType (contentTypeId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementContentTypeResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementContentType : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementContentTypeResource&gt;&#xA;override this.GetApiManagementContentType : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementContentTypeResource&gt;" Usage="apiManagementServiceResource.GetApiManagementContentType (contentTypeId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementContentTypeResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentTypeId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="contentTypeId"> Content type identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the developer portal's content type. Content types describe content items' properties, validation rules, and constraints.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}
            Operation Id: ContentType_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="contentTypeId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentTypeId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementContentTypeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementContentTypeResource&gt;&gt; GetApiManagementContentTypeAsync (string contentTypeId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementContentTypeResource&gt;&gt; GetApiManagementContentTypeAsync(string contentTypeId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementContentTypeAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementContentTypeAsync (contentTypeId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementContentTypeResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementContentTypeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementContentTypeResource&gt;&gt;&#xA;override this.GetApiManagementContentTypeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementContentTypeResource&gt;&gt;" Usage="apiManagementServiceResource.GetApiManagementContentTypeAsync (contentTypeId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementContentTypeResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentTypeId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="contentTypeId"> Content type identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the developer portal's content type. Content types describe content items' properties, validation rules, and constraints.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}
            Operation Id: ContentType_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="contentTypeId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentTypeId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementContentTypes">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementContentTypeCollection GetApiManagementContentTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementContentTypeCollection GetApiManagementContentTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementContentTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementContentTypes () As ApiManagementContentTypeCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementContentTypes : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementContentTypeCollection&#xA;override this.GetApiManagementContentTypes : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementContentTypeCollection" Usage="apiManagementServiceResource.GetApiManagementContentTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementContentTypeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiManagementContentTypeResources in the ApiManagementService. </summary>
        <returns> An object representing collection of ApiManagementContentTypeResources and their operations over a ApiManagementContentTypeResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementDiagnostic">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementDiagnosticResource&gt; GetApiManagementDiagnostic (string diagnosticId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementDiagnosticResource&gt; GetApiManagementDiagnostic(string diagnosticId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementDiagnostic(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementDiagnostic (diagnosticId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementDiagnosticResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementDiagnostic : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementDiagnosticResource&gt;&#xA;override this.GetApiManagementDiagnostic : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementDiagnosticResource&gt;" Usage="apiManagementServiceResource.GetApiManagementDiagnostic (diagnosticId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementDiagnosticResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnosticId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="diagnosticId"> Diagnostic identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the Diagnostic specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/diagnostics/{diagnosticId}
            Operation Id: Diagnostic_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="diagnosticId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="diagnosticId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementDiagnosticAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementDiagnosticResource&gt;&gt; GetApiManagementDiagnosticAsync (string diagnosticId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementDiagnosticResource&gt;&gt; GetApiManagementDiagnosticAsync(string diagnosticId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementDiagnosticAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementDiagnosticAsync (diagnosticId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementDiagnosticResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementDiagnosticAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementDiagnosticResource&gt;&gt;&#xA;override this.GetApiManagementDiagnosticAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementDiagnosticResource&gt;&gt;" Usage="apiManagementServiceResource.GetApiManagementDiagnosticAsync (diagnosticId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementDiagnosticResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnosticId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="diagnosticId"> Diagnostic identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the Diagnostic specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/diagnostics/{diagnosticId}
            Operation Id: Diagnostic_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="diagnosticId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="diagnosticId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementDiagnostics">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementDiagnosticCollection GetApiManagementDiagnostics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementDiagnosticCollection GetApiManagementDiagnostics() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementDiagnostics" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementDiagnostics () As ApiManagementDiagnosticCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementDiagnostics : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementDiagnosticCollection&#xA;override this.GetApiManagementDiagnostics : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementDiagnosticCollection" Usage="apiManagementServiceResource.GetApiManagementDiagnostics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementDiagnosticCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiManagementDiagnosticResources in the ApiManagementService. </summary>
        <returns> An object representing collection of ApiManagementDiagnosticResources and their operations over a ApiManagementDiagnosticResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementEmailTemplate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementEmailTemplateResource&gt; GetApiManagementEmailTemplate (Azure.ResourceManager.ApiManagement.Models.TemplateName templateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementEmailTemplateResource&gt; GetApiManagementEmailTemplate(valuetype Azure.ResourceManager.ApiManagement.Models.TemplateName templateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementEmailTemplate(Azure.ResourceManager.ApiManagement.Models.TemplateName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementEmailTemplate (templateName As TemplateName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementEmailTemplateResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementEmailTemplate : Azure.ResourceManager.ApiManagement.Models.TemplateName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementEmailTemplateResource&gt;&#xA;override this.GetApiManagementEmailTemplate : Azure.ResourceManager.ApiManagement.Models.TemplateName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementEmailTemplateResource&gt;" Usage="apiManagementServiceResource.GetApiManagementEmailTemplate (templateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementEmailTemplateResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templateName" Type="Azure.ResourceManager.ApiManagement.Models.TemplateName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="templateName"> Email Template Name Identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the email template specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/templates/{templateName}
            Operation Id: EmailTemplate_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementEmailTemplateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementEmailTemplateResource&gt;&gt; GetApiManagementEmailTemplateAsync (Azure.ResourceManager.ApiManagement.Models.TemplateName templateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementEmailTemplateResource&gt;&gt; GetApiManagementEmailTemplateAsync(valuetype Azure.ResourceManager.ApiManagement.Models.TemplateName templateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementEmailTemplateAsync(Azure.ResourceManager.ApiManagement.Models.TemplateName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementEmailTemplateAsync (templateName As TemplateName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementEmailTemplateResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementEmailTemplateAsync : Azure.ResourceManager.ApiManagement.Models.TemplateName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementEmailTemplateResource&gt;&gt;&#xA;override this.GetApiManagementEmailTemplateAsync : Azure.ResourceManager.ApiManagement.Models.TemplateName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementEmailTemplateResource&gt;&gt;" Usage="apiManagementServiceResource.GetApiManagementEmailTemplateAsync (templateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementEmailTemplateResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templateName" Type="Azure.ResourceManager.ApiManagement.Models.TemplateName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="templateName"> Email Template Name Identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the email template specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/templates/{templateName}
            Operation Id: EmailTemplate_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementEmailTemplates">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementEmailTemplateCollection GetApiManagementEmailTemplates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementEmailTemplateCollection GetApiManagementEmailTemplates() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementEmailTemplates" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementEmailTemplates () As ApiManagementEmailTemplateCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementEmailTemplates : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementEmailTemplateCollection&#xA;override this.GetApiManagementEmailTemplates : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementEmailTemplateCollection" Usage="apiManagementServiceResource.GetApiManagementEmailTemplates " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementEmailTemplateCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiManagementEmailTemplateResources in the ApiManagementService. </summary>
        <returns> An object representing collection of ApiManagementEmailTemplateResources and their operations over a ApiManagementEmailTemplateResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementGateway">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt; GetApiManagementGateway (string gatewayId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt; GetApiManagementGateway(string gatewayId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementGateway(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementGateway (gatewayId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementGatewayResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementGateway : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;&#xA;override this.GetApiManagementGateway : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;" Usage="apiManagementServiceResource.GetApiManagementGateway (gatewayId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gatewayId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="gatewayId"> Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the Gateway specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}
            Operation Id: Gateway_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="gatewayId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="gatewayId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementGatewayAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;&gt; GetApiManagementGatewayAsync (string gatewayId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;&gt; GetApiManagementGatewayAsync(string gatewayId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementGatewayAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementGatewayAsync (gatewayId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementGatewayResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementGatewayAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;&gt;&#xA;override this.GetApiManagementGatewayAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;&gt;" Usage="apiManagementServiceResource.GetApiManagementGatewayAsync (gatewayId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGatewayResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gatewayId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="gatewayId"> Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the Gateway specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}
            Operation Id: Gateway_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="gatewayId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="gatewayId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementGateways">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementGatewayCollection GetApiManagementGateways ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementGatewayCollection GetApiManagementGateways() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementGateways" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementGateways () As ApiManagementGatewayCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementGateways : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementGatewayCollection&#xA;override this.GetApiManagementGateways : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementGatewayCollection" Usage="apiManagementServiceResource.GetApiManagementGateways " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementGatewayCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiManagementGatewayResources in the ApiManagementService. </summary>
        <returns> An object representing collection of ApiManagementGatewayResources and their operations over a ApiManagementGatewayResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementGlobalSchema">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGlobalSchemaResource&gt; GetApiManagementGlobalSchema (string schemaId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementGlobalSchemaResource&gt; GetApiManagementGlobalSchema(string schemaId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementGlobalSchema(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementGlobalSchema (schemaId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementGlobalSchemaResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementGlobalSchema : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGlobalSchemaResource&gt;&#xA;override this.GetApiManagementGlobalSchema : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGlobalSchemaResource&gt;" Usage="apiManagementServiceResource.GetApiManagementGlobalSchema (schemaId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGlobalSchemaResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="schemaId"> Schema id identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the Schema specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/schemas/{schemaId}
            Operation Id: GlobalSchema_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="schemaId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="schemaId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementGlobalSchemaAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGlobalSchemaResource&gt;&gt; GetApiManagementGlobalSchemaAsync (string schemaId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementGlobalSchemaResource&gt;&gt; GetApiManagementGlobalSchemaAsync(string schemaId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementGlobalSchemaAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementGlobalSchemaAsync (schemaId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementGlobalSchemaResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementGlobalSchemaAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGlobalSchemaResource&gt;&gt;&#xA;override this.GetApiManagementGlobalSchemaAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGlobalSchemaResource&gt;&gt;" Usage="apiManagementServiceResource.GetApiManagementGlobalSchemaAsync (schemaId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGlobalSchemaResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="schemaId"> Schema id identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the Schema specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/schemas/{schemaId}
            Operation Id: GlobalSchema_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="schemaId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="schemaId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementGlobalSchemas">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementGlobalSchemaCollection GetApiManagementGlobalSchemas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementGlobalSchemaCollection GetApiManagementGlobalSchemas() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementGlobalSchemas" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementGlobalSchemas () As ApiManagementGlobalSchemaCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementGlobalSchemas : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementGlobalSchemaCollection&#xA;override this.GetApiManagementGlobalSchemas : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementGlobalSchemaCollection" Usage="apiManagementServiceResource.GetApiManagementGlobalSchemas " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementGlobalSchemaCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiManagementGlobalSchemaResources in the ApiManagementService. </summary>
        <returns> An object representing collection of ApiManagementGlobalSchemaResources and their operations over a ApiManagementGlobalSchemaResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGroupResource&gt; GetApiManagementGroup (string groupId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementGroupResource&gt; GetApiManagementGroup(string groupId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementGroup(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementGroup (groupId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementGroup : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGroupResource&gt;&#xA;override this.GetApiManagementGroup : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGroupResource&gt;" Usage="apiManagementServiceResource.GetApiManagementGroup (groupId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupId"> Group identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the group specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}
            Operation Id: Group_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="groupId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="groupId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGroupResource&gt;&gt; GetApiManagementGroupAsync (string groupId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementGroupResource&gt;&gt; GetApiManagementGroupAsync(string groupId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementGroupAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementGroupAsync (groupId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementGroupResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementGroupAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGroupResource&gt;&gt;&#xA;override this.GetApiManagementGroupAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGroupResource&gt;&gt;" Usage="apiManagementServiceResource.GetApiManagementGroupAsync (groupId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementGroupResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupId"> Group identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the group specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}
            Operation Id: Group_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="groupId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="groupId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementGroups">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementGroupCollection GetApiManagementGroups ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementGroupCollection GetApiManagementGroups() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementGroups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementGroups () As ApiManagementGroupCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementGroups : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementGroupCollection&#xA;override this.GetApiManagementGroups : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementGroupCollection" Usage="apiManagementServiceResource.GetApiManagementGroups " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementGroupCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiManagementGroupResources in the ApiManagementService. </summary>
        <returns> An object representing collection of ApiManagementGroupResources and their operations over a ApiManagementGroupResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementIdentityProvider">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementIdentityProviderResource&gt; GetApiManagementIdentityProvider (Azure.ResourceManager.ApiManagement.Models.IdentityProviderType identityProviderName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementIdentityProviderResource&gt; GetApiManagementIdentityProvider(valuetype Azure.ResourceManager.ApiManagement.Models.IdentityProviderType identityProviderName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementIdentityProvider(Azure.ResourceManager.ApiManagement.Models.IdentityProviderType,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementIdentityProvider (identityProviderName As IdentityProviderType, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementIdentityProviderResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementIdentityProvider : Azure.ResourceManager.ApiManagement.Models.IdentityProviderType * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementIdentityProviderResource&gt;&#xA;override this.GetApiManagementIdentityProvider : Azure.ResourceManager.ApiManagement.Models.IdentityProviderType * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementIdentityProviderResource&gt;" Usage="apiManagementServiceResource.GetApiManagementIdentityProvider (identityProviderName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementIdentityProviderResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityProviderName" Type="Azure.ResourceManager.ApiManagement.Models.IdentityProviderType" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="identityProviderName"> Identity Provider Type identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the configuration details of the identity Provider configured in specified service instance.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}
            Operation Id: IdentityProvider_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementIdentityProviderAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementIdentityProviderResource&gt;&gt; GetApiManagementIdentityProviderAsync (Azure.ResourceManager.ApiManagement.Models.IdentityProviderType identityProviderName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementIdentityProviderResource&gt;&gt; GetApiManagementIdentityProviderAsync(valuetype Azure.ResourceManager.ApiManagement.Models.IdentityProviderType identityProviderName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementIdentityProviderAsync(Azure.ResourceManager.ApiManagement.Models.IdentityProviderType,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementIdentityProviderAsync (identityProviderName As IdentityProviderType, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementIdentityProviderResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementIdentityProviderAsync : Azure.ResourceManager.ApiManagement.Models.IdentityProviderType * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementIdentityProviderResource&gt;&gt;&#xA;override this.GetApiManagementIdentityProviderAsync : Azure.ResourceManager.ApiManagement.Models.IdentityProviderType * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementIdentityProviderResource&gt;&gt;" Usage="apiManagementServiceResource.GetApiManagementIdentityProviderAsync (identityProviderName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementIdentityProviderResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityProviderName" Type="Azure.ResourceManager.ApiManagement.Models.IdentityProviderType" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="identityProviderName"> Identity Provider Type identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the configuration details of the identity Provider configured in specified service instance.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}
            Operation Id: IdentityProvider_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementIdentityProviders">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementIdentityProviderCollection GetApiManagementIdentityProviders ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementIdentityProviderCollection GetApiManagementIdentityProviders() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementIdentityProviders" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementIdentityProviders () As ApiManagementIdentityProviderCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementIdentityProviders : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementIdentityProviderCollection&#xA;override this.GetApiManagementIdentityProviders : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementIdentityProviderCollection" Usage="apiManagementServiceResource.GetApiManagementIdentityProviders " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementIdentityProviderCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiManagementIdentityProviderResources in the ApiManagementService. </summary>
        <returns> An object representing collection of ApiManagementIdentityProviderResources and their operations over a ApiManagementIdentityProviderResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementIssue">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementIssueResource&gt; GetApiManagementIssue (string issueId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementIssueResource&gt; GetApiManagementIssue(string issueId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementIssue(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementIssue (issueId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementIssueResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementIssue : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementIssueResource&gt;&#xA;override this.GetApiManagementIssue : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementIssueResource&gt;" Usage="apiManagementServiceResource.GetApiManagementIssue (issueId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementIssueResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issueId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="issueId"> Issue identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets API Management issue details
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/issues/{issueId}
            Operation Id: Issue_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="issueId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="issueId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementIssueAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementIssueResource&gt;&gt; GetApiManagementIssueAsync (string issueId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementIssueResource&gt;&gt; GetApiManagementIssueAsync(string issueId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementIssueAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementIssueAsync (issueId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementIssueResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementIssueAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementIssueResource&gt;&gt;&#xA;override this.GetApiManagementIssueAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementIssueResource&gt;&gt;" Usage="apiManagementServiceResource.GetApiManagementIssueAsync (issueId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementIssueResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issueId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="issueId"> Issue identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets API Management issue details
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/issues/{issueId}
            Operation Id: Issue_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="issueId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="issueId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementIssues">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementIssueCollection GetApiManagementIssues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementIssueCollection GetApiManagementIssues() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementIssues" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementIssues () As ApiManagementIssueCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementIssues : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementIssueCollection&#xA;override this.GetApiManagementIssues : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementIssueCollection" Usage="apiManagementServiceResource.GetApiManagementIssues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementIssueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiManagementIssueResources in the ApiManagementService. </summary>
        <returns> An object representing collection of ApiManagementIssueResources and their operations over a ApiManagementIssueResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementLogger">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementLoggerResource&gt; GetApiManagementLogger (string loggerId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementLoggerResource&gt; GetApiManagementLogger(string loggerId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementLogger(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementLogger (loggerId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementLoggerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementLogger : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementLoggerResource&gt;&#xA;override this.GetApiManagementLogger : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementLoggerResource&gt;" Usage="apiManagementServiceResource.GetApiManagementLogger (loggerId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementLoggerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggerId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="loggerId"> Logger identifier. Must be unique in the API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the logger specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerId}
            Operation Id: Logger_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="loggerId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="loggerId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementLoggerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementLoggerResource&gt;&gt; GetApiManagementLoggerAsync (string loggerId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementLoggerResource&gt;&gt; GetApiManagementLoggerAsync(string loggerId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementLoggerAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementLoggerAsync (loggerId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementLoggerResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementLoggerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementLoggerResource&gt;&gt;&#xA;override this.GetApiManagementLoggerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementLoggerResource&gt;&gt;" Usage="apiManagementServiceResource.GetApiManagementLoggerAsync (loggerId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementLoggerResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggerId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="loggerId"> Logger identifier. Must be unique in the API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the logger specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerId}
            Operation Id: Logger_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="loggerId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="loggerId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementLoggers">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementLoggerCollection GetApiManagementLoggers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementLoggerCollection GetApiManagementLoggers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementLoggers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementLoggers () As ApiManagementLoggerCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementLoggers : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementLoggerCollection&#xA;override this.GetApiManagementLoggers : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementLoggerCollection" Usage="apiManagementServiceResource.GetApiManagementLoggers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementLoggerCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiManagementLoggerResources in the ApiManagementService. </summary>
        <returns> An object representing collection of ApiManagementLoggerResources and their operations over a ApiManagementLoggerResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementNamedValue">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementNamedValueResource&gt; GetApiManagementNamedValue (string namedValueId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementNamedValueResource&gt; GetApiManagementNamedValue(string namedValueId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementNamedValue(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementNamedValue (namedValueId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementNamedValueResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementNamedValue : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementNamedValueResource&gt;&#xA;override this.GetApiManagementNamedValue : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementNamedValueResource&gt;" Usage="apiManagementServiceResource.GetApiManagementNamedValue (namedValueId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementNamedValueResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namedValueId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="namedValueId"> Identifier of the NamedValue. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the named value specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/namedValues/{namedValueId}
            Operation Id: NamedValue_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="namedValueId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="namedValueId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementNamedValueAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementNamedValueResource&gt;&gt; GetApiManagementNamedValueAsync (string namedValueId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementNamedValueResource&gt;&gt; GetApiManagementNamedValueAsync(string namedValueId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementNamedValueAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementNamedValueAsync (namedValueId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementNamedValueResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementNamedValueAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementNamedValueResource&gt;&gt;&#xA;override this.GetApiManagementNamedValueAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementNamedValueResource&gt;&gt;" Usage="apiManagementServiceResource.GetApiManagementNamedValueAsync (namedValueId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementNamedValueResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namedValueId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="namedValueId"> Identifier of the NamedValue. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the named value specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/namedValues/{namedValueId}
            Operation Id: NamedValue_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="namedValueId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="namedValueId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementNamedValues">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementNamedValueCollection GetApiManagementNamedValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementNamedValueCollection GetApiManagementNamedValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementNamedValues" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementNamedValues () As ApiManagementNamedValueCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementNamedValues : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementNamedValueCollection&#xA;override this.GetApiManagementNamedValues : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementNamedValueCollection" Usage="apiManagementServiceResource.GetApiManagementNamedValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementNamedValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiManagementNamedValueResources in the ApiManagementService. </summary>
        <returns> An object representing collection of ApiManagementNamedValueResources and their operations over a ApiManagementNamedValueResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementNotification">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationResource&gt; GetApiManagementNotification (Azure.ResourceManager.ApiManagement.Models.NotificationName notificationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementNotificationResource&gt; GetApiManagementNotification(valuetype Azure.ResourceManager.ApiManagement.Models.NotificationName notificationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementNotification(Azure.ResourceManager.ApiManagement.Models.NotificationName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementNotification (notificationName As NotificationName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementNotificationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementNotification : Azure.ResourceManager.ApiManagement.Models.NotificationName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationResource&gt;&#xA;override this.GetApiManagementNotification : Azure.ResourceManager.ApiManagement.Models.NotificationName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationResource&gt;" Usage="apiManagementServiceResource.GetApiManagementNotification (notificationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notificationName" Type="Azure.ResourceManager.ApiManagement.Models.NotificationName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="notificationName"> Notification Name Identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the Notification specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}
            Operation Id: Notification_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementNotificationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationResource&gt;&gt; GetApiManagementNotificationAsync (Azure.ResourceManager.ApiManagement.Models.NotificationName notificationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementNotificationResource&gt;&gt; GetApiManagementNotificationAsync(valuetype Azure.ResourceManager.ApiManagement.Models.NotificationName notificationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementNotificationAsync(Azure.ResourceManager.ApiManagement.Models.NotificationName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementNotificationAsync (notificationName As NotificationName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementNotificationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementNotificationAsync : Azure.ResourceManager.ApiManagement.Models.NotificationName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationResource&gt;&gt;&#xA;override this.GetApiManagementNotificationAsync : Azure.ResourceManager.ApiManagement.Models.NotificationName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationResource&gt;&gt;" Usage="apiManagementServiceResource.GetApiManagementNotificationAsync (notificationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notificationName" Type="Azure.ResourceManager.ApiManagement.Models.NotificationName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="notificationName"> Notification Name Identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the Notification specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}
            Operation Id: Notification_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementNotifications">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementNotificationCollection GetApiManagementNotifications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementNotificationCollection GetApiManagementNotifications() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementNotifications" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementNotifications () As ApiManagementNotificationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementNotifications : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementNotificationCollection&#xA;override this.GetApiManagementNotifications : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementNotificationCollection" Usage="apiManagementServiceResource.GetApiManagementNotifications " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementNotificationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiManagementNotificationResources in the ApiManagementService. </summary>
        <returns> An object representing collection of ApiManagementNotificationResources and their operations over a ApiManagementNotificationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementOpenIdConnectProvider">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementOpenIdConnectProviderResource&gt; GetApiManagementOpenIdConnectProvider (string openId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementOpenIdConnectProviderResource&gt; GetApiManagementOpenIdConnectProvider(string openId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementOpenIdConnectProvider(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementOpenIdConnectProvider (openId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementOpenIdConnectProviderResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementOpenIdConnectProvider : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementOpenIdConnectProviderResource&gt;&#xA;override this.GetApiManagementOpenIdConnectProvider : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementOpenIdConnectProviderResource&gt;" Usage="apiManagementServiceResource.GetApiManagementOpenIdConnectProvider (openId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementOpenIdConnectProviderResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="openId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="openId"> Identifier of the OpenID Connect Provider. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets specific OpenID Connect Provider without secrets.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}
            Operation Id: OpenIdConnectProvider_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="openId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="openId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementOpenIdConnectProviderAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementOpenIdConnectProviderResource&gt;&gt; GetApiManagementOpenIdConnectProviderAsync (string openId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementOpenIdConnectProviderResource&gt;&gt; GetApiManagementOpenIdConnectProviderAsync(string openId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementOpenIdConnectProviderAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementOpenIdConnectProviderAsync (openId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementOpenIdConnectProviderResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementOpenIdConnectProviderAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementOpenIdConnectProviderResource&gt;&gt;&#xA;override this.GetApiManagementOpenIdConnectProviderAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementOpenIdConnectProviderResource&gt;&gt;" Usage="apiManagementServiceResource.GetApiManagementOpenIdConnectProviderAsync (openId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementOpenIdConnectProviderResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="openId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="openId"> Identifier of the OpenID Connect Provider. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets specific OpenID Connect Provider without secrets.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}
            Operation Id: OpenIdConnectProvider_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="openId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="openId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementOpenIdConnectProviders">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementOpenIdConnectProviderCollection GetApiManagementOpenIdConnectProviders ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementOpenIdConnectProviderCollection GetApiManagementOpenIdConnectProviders() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementOpenIdConnectProviders" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementOpenIdConnectProviders () As ApiManagementOpenIdConnectProviderCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementOpenIdConnectProviders : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementOpenIdConnectProviderCollection&#xA;override this.GetApiManagementOpenIdConnectProviders : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementOpenIdConnectProviderCollection" Usage="apiManagementServiceResource.GetApiManagementOpenIdConnectProviders " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementOpenIdConnectProviderCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiManagementOpenIdConnectProviderResources in the ApiManagementService. </summary>
        <returns> An object representing collection of ApiManagementOpenIdConnectProviderResources and their operations over a ApiManagementOpenIdConnectProviderResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementPolicyCollection GetApiManagementPolicies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementPolicyCollection GetApiManagementPolicies() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementPolicies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementPolicies () As ApiManagementPolicyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementPolicies : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementPolicyCollection&#xA;override this.GetApiManagementPolicies : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementPolicyCollection" Usage="apiManagementServiceResource.GetApiManagementPolicies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementPolicyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiManagementPolicyResources in the ApiManagementService. </summary>
        <returns> An object representing collection of ApiManagementPolicyResources and their operations over a ApiManagementPolicyResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPolicyResource&gt; GetApiManagementPolicy (Azure.ResourceManager.ApiManagement.Models.PolicyName policyId, Azure.ResourceManager.ApiManagement.Models.PolicyExportFormat? format = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementPolicyResource&gt; GetApiManagementPolicy(valuetype Azure.ResourceManager.ApiManagement.Models.PolicyName policyId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ApiManagement.Models.PolicyExportFormat&gt; format, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementPolicy(Azure.ResourceManager.ApiManagement.Models.PolicyName,System.Nullable{Azure.ResourceManager.ApiManagement.Models.PolicyExportFormat},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementPolicy (policyId As PolicyName, Optional format As Nullable(Of PolicyExportFormat) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementPolicy : Azure.ResourceManager.ApiManagement.Models.PolicyName * Nullable&lt;Azure.ResourceManager.ApiManagement.Models.PolicyExportFormat&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPolicyResource&gt;&#xA;override this.GetApiManagementPolicy : Azure.ResourceManager.ApiManagement.Models.PolicyName * Nullable&lt;Azure.ResourceManager.ApiManagement.Models.PolicyExportFormat&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPolicyResource&gt;" Usage="apiManagementServiceResource.GetApiManagementPolicy (policyId, format, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policyId" Type="Azure.ResourceManager.ApiManagement.Models.PolicyName" />
        <Parameter Name="format" Type="System.Nullable&lt;Azure.ResourceManager.ApiManagement.Models.PolicyExportFormat&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="policyId"> The identifier of the Policy. </param>
        <param name="format"> Policy Export Format. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the Global policy definition of the Api Management service.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policies/{policyId}
            Operation Id: Policy_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPolicyResource&gt;&gt; GetApiManagementPolicyAsync (Azure.ResourceManager.ApiManagement.Models.PolicyName policyId, Azure.ResourceManager.ApiManagement.Models.PolicyExportFormat? format = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementPolicyResource&gt;&gt; GetApiManagementPolicyAsync(valuetype Azure.ResourceManager.ApiManagement.Models.PolicyName policyId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ApiManagement.Models.PolicyExportFormat&gt; format, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementPolicyAsync(Azure.ResourceManager.ApiManagement.Models.PolicyName,System.Nullable{Azure.ResourceManager.ApiManagement.Models.PolicyExportFormat},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementPolicyAsync (policyId As PolicyName, Optional format As Nullable(Of PolicyExportFormat) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementPolicyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementPolicyAsync : Azure.ResourceManager.ApiManagement.Models.PolicyName * Nullable&lt;Azure.ResourceManager.ApiManagement.Models.PolicyExportFormat&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPolicyResource&gt;&gt;&#xA;override this.GetApiManagementPolicyAsync : Azure.ResourceManager.ApiManagement.Models.PolicyName * Nullable&lt;Azure.ResourceManager.ApiManagement.Models.PolicyExportFormat&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPolicyResource&gt;&gt;" Usage="apiManagementServiceResource.GetApiManagementPolicyAsync (policyId, format, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPolicyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policyId" Type="Azure.ResourceManager.ApiManagement.Models.PolicyName" />
        <Parameter Name="format" Type="System.Nullable&lt;Azure.ResourceManager.ApiManagement.Models.PolicyExportFormat&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="policyId"> The identifier of the Policy. </param>
        <param name="format"> Policy Export Format. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the Global policy definition of the Api Management service.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policies/{policyId}
            Operation Id: Policy_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementPortalDelegationSetting">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementPortalDelegationSettingResource GetApiManagementPortalDelegationSetting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementPortalDelegationSettingResource GetApiManagementPortalDelegationSetting() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementPortalDelegationSetting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementPortalDelegationSetting () As ApiManagementPortalDelegationSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementPortalDelegationSetting : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementPortalDelegationSettingResource&#xA;override this.GetApiManagementPortalDelegationSetting : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementPortalDelegationSettingResource" Usage="apiManagementServiceResource.GetApiManagementPortalDelegationSetting " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementPortalDelegationSettingResource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets an object representing a ApiManagementPortalDelegationSettingResource along with the instance operations that can be performed on it in the ApiManagementService. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementPortalDelegationSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementPortalRevision">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPortalRevisionResource&gt; GetApiManagementPortalRevision (string portalRevisionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementPortalRevisionResource&gt; GetApiManagementPortalRevision(string portalRevisionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementPortalRevision(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementPortalRevision (portalRevisionId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementPortalRevisionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementPortalRevision : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPortalRevisionResource&gt;&#xA;override this.GetApiManagementPortalRevision : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPortalRevisionResource&gt;" Usage="apiManagementServiceResource.GetApiManagementPortalRevision (portalRevisionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPortalRevisionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portalRevisionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="portalRevisionId"> Portal revision identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the developer portal's revision specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalRevisions/{portalRevisionId}
            Operation Id: PortalRevision_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="portalRevisionId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="portalRevisionId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementPortalRevisionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPortalRevisionResource&gt;&gt; GetApiManagementPortalRevisionAsync (string portalRevisionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementPortalRevisionResource&gt;&gt; GetApiManagementPortalRevisionAsync(string portalRevisionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementPortalRevisionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementPortalRevisionAsync (portalRevisionId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementPortalRevisionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementPortalRevisionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPortalRevisionResource&gt;&gt;&#xA;override this.GetApiManagementPortalRevisionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPortalRevisionResource&gt;&gt;" Usage="apiManagementServiceResource.GetApiManagementPortalRevisionAsync (portalRevisionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPortalRevisionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portalRevisionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="portalRevisionId"> Portal revision identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the developer portal's revision specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalRevisions/{portalRevisionId}
            Operation Id: PortalRevision_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="portalRevisionId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="portalRevisionId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementPortalRevisions">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementPortalRevisionCollection GetApiManagementPortalRevisions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementPortalRevisionCollection GetApiManagementPortalRevisions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementPortalRevisions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementPortalRevisions () As ApiManagementPortalRevisionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementPortalRevisions : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementPortalRevisionCollection&#xA;override this.GetApiManagementPortalRevisions : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementPortalRevisionCollection" Usage="apiManagementServiceResource.GetApiManagementPortalRevisions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementPortalRevisionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiManagementPortalRevisionResources in the ApiManagementService. </summary>
        <returns> An object representing collection of ApiManagementPortalRevisionResources and their operations over a ApiManagementPortalRevisionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementPortalSignInSetting">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementPortalSignInSettingResource GetApiManagementPortalSignInSetting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementPortalSignInSettingResource GetApiManagementPortalSignInSetting() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementPortalSignInSetting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementPortalSignInSetting () As ApiManagementPortalSignInSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementPortalSignInSetting : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementPortalSignInSettingResource&#xA;override this.GetApiManagementPortalSignInSetting : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementPortalSignInSettingResource" Usage="apiManagementServiceResource.GetApiManagementPortalSignInSetting " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementPortalSignInSettingResource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets an object representing a ApiManagementPortalSignInSettingResource along with the instance operations that can be performed on it in the ApiManagementService. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementPortalSignInSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementPortalSignUpSetting">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementPortalSignUpSettingResource GetApiManagementPortalSignUpSetting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementPortalSignUpSettingResource GetApiManagementPortalSignUpSetting() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementPortalSignUpSetting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementPortalSignUpSetting () As ApiManagementPortalSignUpSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementPortalSignUpSetting : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementPortalSignUpSettingResource&#xA;override this.GetApiManagementPortalSignUpSetting : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementPortalSignUpSettingResource" Usage="apiManagementServiceResource.GetApiManagementPortalSignUpSetting " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementPortalSignUpSettingResource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets an object representing a ApiManagementPortalSignUpSettingResource along with the instance operations that can be performed on it in the ApiManagementService. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementPortalSignUpSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementPrivateEndpointConnection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPrivateEndpointConnectionResource&gt; GetApiManagementPrivateEndpointConnection (string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementPrivateEndpointConnectionResource&gt; GetApiManagementPrivateEndpointConnection(string privateEndpointConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementPrivateEndpointConnection(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementPrivateEndpointConnection (privateEndpointConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementPrivateEndpointConnectionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementPrivateEndpointConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPrivateEndpointConnectionResource&gt;&#xA;override this.GetApiManagementPrivateEndpointConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPrivateEndpointConnectionResource&gt;" Usage="apiManagementServiceResource.GetApiManagementPrivateEndpointConnection (privateEndpointConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPrivateEndpointConnectionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateEndpointConnectionName"> Name of the private endpoint connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the Private Endpoint Connection specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/privateEndpointConnections/{privateEndpointConnectionName}
            Operation Id: PrivateEndpointConnection_GetByName
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateEndpointConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementPrivateEndpointConnectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPrivateEndpointConnectionResource&gt;&gt; GetApiManagementPrivateEndpointConnectionAsync (string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementPrivateEndpointConnectionResource&gt;&gt; GetApiManagementPrivateEndpointConnectionAsync(string privateEndpointConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementPrivateEndpointConnectionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementPrivateEndpointConnectionAsync (privateEndpointConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementPrivateEndpointConnectionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementPrivateEndpointConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPrivateEndpointConnectionResource&gt;&gt;&#xA;override this.GetApiManagementPrivateEndpointConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPrivateEndpointConnectionResource&gt;&gt;" Usage="apiManagementServiceResource.GetApiManagementPrivateEndpointConnectionAsync (privateEndpointConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPrivateEndpointConnectionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateEndpointConnectionName"> Name of the private endpoint connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the Private Endpoint Connection specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/privateEndpointConnections/{privateEndpointConnectionName}
            Operation Id: PrivateEndpointConnection_GetByName
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateEndpointConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementPrivateEndpointConnections">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementPrivateEndpointConnectionCollection GetApiManagementPrivateEndpointConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementPrivateEndpointConnectionCollection GetApiManagementPrivateEndpointConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementPrivateEndpointConnections" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementPrivateEndpointConnections () As ApiManagementPrivateEndpointConnectionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementPrivateEndpointConnections : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementPrivateEndpointConnectionCollection&#xA;override this.GetApiManagementPrivateEndpointConnections : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementPrivateEndpointConnectionCollection" Usage="apiManagementServiceResource.GetApiManagementPrivateEndpointConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementPrivateEndpointConnectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiManagementPrivateEndpointConnectionResources in the ApiManagementService. </summary>
        <returns> An object representing collection of ApiManagementPrivateEndpointConnectionResources and their operations over a ApiManagementPrivateEndpointConnectionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementPrivateLinkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPrivateLinkResource&gt; GetApiManagementPrivateLinkResource (string privateLinkSubResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementPrivateLinkResource&gt; GetApiManagementPrivateLinkResource(string privateLinkSubResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementPrivateLinkResource(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementPrivateLinkResource (privateLinkSubResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementPrivateLinkResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementPrivateLinkResource : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPrivateLinkResource&gt;&#xA;override this.GetApiManagementPrivateLinkResource : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPrivateLinkResource&gt;" Usage="apiManagementServiceResource.GetApiManagementPrivateLinkResource (privateLinkSubResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPrivateLinkResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateLinkSubResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateLinkSubResourceName"> Name of the private link resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the private link resources
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/privateLinkResources/{privateLinkSubResourceName}
            Operation Id: PrivateEndpointConnection_GetPrivateLinkResource
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateLinkSubResourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateLinkSubResourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementPrivateLinkResourceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPrivateLinkResource&gt;&gt; GetApiManagementPrivateLinkResourceAsync (string privateLinkSubResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementPrivateLinkResource&gt;&gt; GetApiManagementPrivateLinkResourceAsync(string privateLinkSubResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementPrivateLinkResourceAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementPrivateLinkResourceAsync (privateLinkSubResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementPrivateLinkResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementPrivateLinkResourceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPrivateLinkResource&gt;&gt;&#xA;override this.GetApiManagementPrivateLinkResourceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPrivateLinkResource&gt;&gt;" Usage="apiManagementServiceResource.GetApiManagementPrivateLinkResourceAsync (privateLinkSubResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementPrivateLinkResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateLinkSubResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateLinkSubResourceName"> Name of the private link resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the private link resources
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/privateLinkResources/{privateLinkSubResourceName}
            Operation Id: PrivateEndpointConnection_GetPrivateLinkResource
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateLinkSubResourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateLinkSubResourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementPrivateLinkResources">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementPrivateLinkResourceCollection GetApiManagementPrivateLinkResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementPrivateLinkResourceCollection GetApiManagementPrivateLinkResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementPrivateLinkResources" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementPrivateLinkResources () As ApiManagementPrivateLinkResourceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementPrivateLinkResources : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementPrivateLinkResourceCollection&#xA;override this.GetApiManagementPrivateLinkResources : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementPrivateLinkResourceCollection" Usage="apiManagementServiceResource.GetApiManagementPrivateLinkResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementPrivateLinkResourceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiManagementPrivateLinkResources in the ApiManagementService. </summary>
        <returns> An object representing collection of ApiManagementPrivateLinkResources and their operations over a ApiManagementPrivateLinkResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementProduct">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementProductResource&gt; GetApiManagementProduct (string productId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementProductResource&gt; GetApiManagementProduct(string productId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementProduct(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementProduct (productId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementProductResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementProduct : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementProductResource&gt;&#xA;override this.GetApiManagementProduct : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementProductResource&gt;" Usage="apiManagementServiceResource.GetApiManagementProduct (productId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementProductResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="productId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="productId"> Product identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the product specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}
            Operation Id: Product_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="productId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="productId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementProductAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementProductResource&gt;&gt; GetApiManagementProductAsync (string productId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementProductResource&gt;&gt; GetApiManagementProductAsync(string productId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementProductAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementProductAsync (productId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementProductResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementProductAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementProductResource&gt;&gt;&#xA;override this.GetApiManagementProductAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementProductResource&gt;&gt;" Usage="apiManagementServiceResource.GetApiManagementProductAsync (productId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementProductResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="productId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="productId"> Product identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the product specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}
            Operation Id: Product_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="productId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="productId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementProducts">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementProductCollection GetApiManagementProducts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementProductCollection GetApiManagementProducts() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementProducts" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementProducts () As ApiManagementProductCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementProducts : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementProductCollection&#xA;override this.GetApiManagementProducts : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementProductCollection" Usage="apiManagementServiceResource.GetApiManagementProducts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementProductCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiManagementProductResources in the ApiManagementService. </summary>
        <returns> An object representing collection of ApiManagementProductResources and their operations over a ApiManagementProductResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementSubscription">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementSubscriptionResource&gt; GetApiManagementSubscription (string sid, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementSubscriptionResource&gt; GetApiManagementSubscription(string sid, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementSubscription(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementSubscription (sid As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementSubscriptionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementSubscription : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementSubscriptionResource&gt;&#xA;override this.GetApiManagementSubscription : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementSubscriptionResource&gt;" Usage="apiManagementServiceResource.GetApiManagementSubscription (sid, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementSubscriptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sid" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sid"> Subscription entity Identifier. The entity represents the association between a user and a product in API Management. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified Subscription entity.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}
            Operation Id: Subscription_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sid" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementSubscriptionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementSubscriptionResource&gt;&gt; GetApiManagementSubscriptionAsync (string sid, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementSubscriptionResource&gt;&gt; GetApiManagementSubscriptionAsync(string sid, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementSubscriptionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementSubscriptionAsync (sid As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementSubscriptionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementSubscriptionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementSubscriptionResource&gt;&gt;&#xA;override this.GetApiManagementSubscriptionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementSubscriptionResource&gt;&gt;" Usage="apiManagementServiceResource.GetApiManagementSubscriptionAsync (sid, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementSubscriptionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sid" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sid"> Subscription entity Identifier. The entity represents the association between a user and a product in API Management. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified Subscription entity.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}
            Operation Id: Subscription_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sid" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementSubscriptions">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementSubscriptionCollection GetApiManagementSubscriptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementSubscriptionCollection GetApiManagementSubscriptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementSubscriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementSubscriptions () As ApiManagementSubscriptionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementSubscriptions : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementSubscriptionCollection&#xA;override this.GetApiManagementSubscriptions : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementSubscriptionCollection" Usage="apiManagementServiceResource.GetApiManagementSubscriptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementSubscriptionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiManagementSubscriptionResources in the ApiManagementService. </summary>
        <returns> An object representing collection of ApiManagementSubscriptionResources and their operations over a ApiManagementSubscriptionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementTagResource&gt; GetApiManagementTag (string tagId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementTagResource&gt; GetApiManagementTag(string tagId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementTag(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementTag (tagId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementTagResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementTagResource&gt;&#xA;override this.GetApiManagementTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementTagResource&gt;" Usage="apiManagementServiceResource.GetApiManagementTag (tagId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementTagResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tagId"> Tag identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the tag specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tags/{tagId}
            Operation Id: Tag_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="tagId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tagId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementTagResource&gt;&gt; GetApiManagementTagAsync (string tagId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementTagResource&gt;&gt; GetApiManagementTagAsync(string tagId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementTagAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementTagAsync (tagId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementTagResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementTagResource&gt;&gt;&#xA;override this.GetApiManagementTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementTagResource&gt;&gt;" Usage="apiManagementServiceResource.GetApiManagementTagAsync (tagId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementTagResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tagId"> Tag identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the tag specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tags/{tagId}
            Operation Id: Tag_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="tagId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tagId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementTags">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementTagCollection GetApiManagementTags ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementTagCollection GetApiManagementTags() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementTags" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementTags () As ApiManagementTagCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementTags : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementTagCollection&#xA;override this.GetApiManagementTags : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementTagCollection" Usage="apiManagementServiceResource.GetApiManagementTags " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementTagCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiManagementTagResources in the ApiManagementService. </summary>
        <returns> An object representing collection of ApiManagementTagResources and their operations over a ApiManagementTagResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementTenantSetting">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementTenantSettingResource&gt; GetApiManagementTenantSetting (Azure.ResourceManager.ApiManagement.Models.SettingsType settingsType, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementTenantSettingResource&gt; GetApiManagementTenantSetting(valuetype Azure.ResourceManager.ApiManagement.Models.SettingsType settingsType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementTenantSetting(Azure.ResourceManager.ApiManagement.Models.SettingsType,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementTenantSetting (settingsType As SettingsType, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementTenantSettingResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementTenantSetting : Azure.ResourceManager.ApiManagement.Models.SettingsType * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementTenantSettingResource&gt;&#xA;override this.GetApiManagementTenantSetting : Azure.ResourceManager.ApiManagement.Models.SettingsType * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementTenantSettingResource&gt;" Usage="apiManagementServiceResource.GetApiManagementTenantSetting (settingsType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementTenantSettingResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settingsType" Type="Azure.ResourceManager.ApiManagement.Models.SettingsType" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="settingsType"> The identifier of the settings. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get tenant settings.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/settings/{settingsType}
            Operation Id: TenantSettings_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementTenantSettingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementTenantSettingResource&gt;&gt; GetApiManagementTenantSettingAsync (Azure.ResourceManager.ApiManagement.Models.SettingsType settingsType, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementTenantSettingResource&gt;&gt; GetApiManagementTenantSettingAsync(valuetype Azure.ResourceManager.ApiManagement.Models.SettingsType settingsType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementTenantSettingAsync(Azure.ResourceManager.ApiManagement.Models.SettingsType,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementTenantSettingAsync (settingsType As SettingsType, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementTenantSettingResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementTenantSettingAsync : Azure.ResourceManager.ApiManagement.Models.SettingsType * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementTenantSettingResource&gt;&gt;&#xA;override this.GetApiManagementTenantSettingAsync : Azure.ResourceManager.ApiManagement.Models.SettingsType * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementTenantSettingResource&gt;&gt;" Usage="apiManagementServiceResource.GetApiManagementTenantSettingAsync (settingsType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementTenantSettingResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settingsType" Type="Azure.ResourceManager.ApiManagement.Models.SettingsType" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="settingsType"> The identifier of the settings. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get tenant settings.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/settings/{settingsType}
            Operation Id: TenantSettings_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementTenantSettings">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementTenantSettingCollection GetApiManagementTenantSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementTenantSettingCollection GetApiManagementTenantSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementTenantSettings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementTenantSettings () As ApiManagementTenantSettingCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementTenantSettings : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementTenantSettingCollection&#xA;override this.GetApiManagementTenantSettings : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementTenantSettingCollection" Usage="apiManagementServiceResource.GetApiManagementTenantSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementTenantSettingCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiManagementTenantSettingResources in the ApiManagementService. </summary>
        <returns> An object representing collection of ApiManagementTenantSettingResources and their operations over a ApiManagementTenantSettingResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementUser">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementUserResource&gt; GetApiManagementUser (string userId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementUserResource&gt; GetApiManagementUser(string userId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementUser(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementUser (userId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementUserResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementUser : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementUserResource&gt;&#xA;override this.GetApiManagementUser : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementUserResource&gt;" Usage="apiManagementServiceResource.GetApiManagementUser (userId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementUserResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userId"> User identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the user specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}
            Operation Id: User_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="userId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementUserAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementUserResource&gt;&gt; GetApiManagementUserAsync (string userId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementUserResource&gt;&gt; GetApiManagementUserAsync(string userId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementUserAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementUserAsync (userId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementUserResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementUserAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementUserResource&gt;&gt;&#xA;override this.GetApiManagementUserAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementUserResource&gt;&gt;" Usage="apiManagementServiceResource.GetApiManagementUserAsync (userId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementUserResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userId"> User identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the user specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}
            Operation Id: User_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="userId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiManagementUsers">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementUserCollection GetApiManagementUsers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementUserCollection GetApiManagementUsers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiManagementUsers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiManagementUsers () As ApiManagementUserCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiManagementUsers : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementUserCollection&#xA;override this.GetApiManagementUsers : unit -&gt; Azure.ResourceManager.ApiManagement.ApiManagementUserCollection" Usage="apiManagementServiceResource.GetApiManagementUsers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementUserCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiManagementUserResources in the ApiManagementService. </summary>
        <returns> An object representing collection of ApiManagementUserResources and their operations over a ApiManagementUserResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApis">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiCollection GetApis ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiCollection GetApis() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApis" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApis () As ApiCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApis : unit -&gt; Azure.ResourceManager.ApiManagement.ApiCollection&#xA;override this.GetApis : unit -&gt; Azure.ResourceManager.ApiManagement.ApiCollection" Usage="apiManagementServiceResource.GetApis " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiResources in the ApiManagementService. </summary>
        <returns> An object representing collection of ApiResources and their operations over a ApiResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApisByTags">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt; GetApisByTags (string filter = default, int? top = default, int? skip = default, bool? includeNotTaggedApis = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt; GetApisByTags(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Nullable`1&lt;bool&gt; includeNotTaggedApis, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApisByTags(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApisByTags (Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional includeNotTaggedApis As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of TagResourceContractDetails)" />
      <MemberSignature Language="F#" Value="abstract member GetApisByTags : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt;&#xA;override this.GetApisByTags : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt;" Usage="apiManagementServiceResource.GetApisByTags (filter, top, skip, includeNotTaggedApis, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="includeNotTaggedApis" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> |     Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| apiRevision | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| isCurrent | filter | eq |     |&lt;/br&gt;. </param>
        <param name="top"> Number of records to return. </param>
        <param name="skip"> Number of records to skip. </param>
        <param name="includeNotTaggedApis"> Include not tagged APIs. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists a collection of apis associated with tags.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apisByTags
            Operation Id: Api_ListByTags
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApisByTagsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt; GetApisByTagsAsync (string filter = default, int? top = default, int? skip = default, bool? includeNotTaggedApis = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt; GetApisByTagsAsync(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Nullable`1&lt;bool&gt; includeNotTaggedApis, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApisByTagsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApisByTagsAsync (Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional includeNotTaggedApis As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of TagResourceContractDetails)" />
      <MemberSignature Language="F#" Value="abstract member GetApisByTagsAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt;&#xA;override this.GetApisByTagsAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt;" Usage="apiManagementServiceResource.GetApisByTagsAsync (filter, top, skip, includeNotTaggedApis, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="includeNotTaggedApis" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> |     Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| apiRevision | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| isCurrent | filter | eq |     |&lt;/br&gt;. </param>
        <param name="top"> Number of records to return. </param>
        <param name="skip"> Number of records to skip. </param>
        <param name="includeNotTaggedApis"> Include not tagged APIs. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists a collection of apis associated with tags.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apisByTags
            Operation Id: Api_ListByTags
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiVersionSet">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiVersionSetResource&gt; GetApiVersionSet (string versionSetId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiVersionSetResource&gt; GetApiVersionSet(string versionSetId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiVersionSet(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiVersionSet (versionSetId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiVersionSetResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiVersionSet : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiVersionSetResource&gt;&#xA;override this.GetApiVersionSet : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiVersionSetResource&gt;" Usage="apiManagementServiceResource.GetApiVersionSet (versionSetId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiVersionSetResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="versionSetId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="versionSetId"> Api Version Set identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the Api Version Set specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apiVersionSets/{versionSetId}
            Operation Id: ApiVersionSet_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="versionSetId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="versionSetId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiVersionSetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiVersionSetResource&gt;&gt; GetApiVersionSetAsync (string versionSetId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiVersionSetResource&gt;&gt; GetApiVersionSetAsync(string versionSetId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiVersionSetAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiVersionSetAsync (versionSetId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiVersionSetResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiVersionSetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiVersionSetResource&gt;&gt;&#xA;override this.GetApiVersionSetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiVersionSetResource&gt;&gt;" Usage="apiManagementServiceResource.GetApiVersionSetAsync (versionSetId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiVersionSetResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="versionSetId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="versionSetId"> Api Version Set identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the Api Version Set specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apiVersionSets/{versionSetId}
            Operation Id: ApiVersionSet_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="versionSetId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="versionSetId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiVersionSets">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiVersionSetCollection GetApiVersionSets ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiVersionSetCollection GetApiVersionSets() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetApiVersionSets" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiVersionSets () As ApiVersionSetCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiVersionSets : unit -&gt; Azure.ResourceManager.ApiManagement.ApiVersionSetCollection&#xA;override this.GetApiVersionSets : unit -&gt; Azure.ResourceManager.ApiManagement.ApiVersionSetCollection" Usage="apiManagementServiceResource.GetApiVersionSets " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiVersionSetCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiVersionSetResources in the ApiManagementService. </summary>
        <returns> An object representing collection of ApiVersionSetResources and their operations over a ApiVersionSetResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementServiceResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt;" Usage="apiManagementServiceResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an API Management service resource description.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}
            Operation Id: ApiManagementService_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableApiManagementServiceSkus">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.AvailableApiManagementServiceSkuResult&gt; GetAvailableApiManagementServiceSkus (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.AvailableApiManagementServiceSkuResult&gt; GetAvailableApiManagementServiceSkus(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetAvailableApiManagementServiceSkus(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailableApiManagementServiceSkus (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AvailableApiManagementServiceSkuResult)" />
      <MemberSignature Language="F#" Value="abstract member GetAvailableApiManagementServiceSkus : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.AvailableApiManagementServiceSkuResult&gt;&#xA;override this.GetAvailableApiManagementServiceSkus : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.AvailableApiManagementServiceSkuResult&gt;" Usage="apiManagementServiceResource.GetAvailableApiManagementServiceSkus cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.AvailableApiManagementServiceSkuResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all available SKU for a given API Management service
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/skus
            Operation Id: ApiManagementServiceSkus_ListAvailableServiceSkus
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.AvailableApiManagementServiceSkuResult" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableApiManagementServiceSkusAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.AvailableApiManagementServiceSkuResult&gt; GetAvailableApiManagementServiceSkusAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.AvailableApiManagementServiceSkuResult&gt; GetAvailableApiManagementServiceSkusAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetAvailableApiManagementServiceSkusAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailableApiManagementServiceSkusAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AvailableApiManagementServiceSkuResult)" />
      <MemberSignature Language="F#" Value="abstract member GetAvailableApiManagementServiceSkusAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.AvailableApiManagementServiceSkuResult&gt;&#xA;override this.GetAvailableApiManagementServiceSkusAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.AvailableApiManagementServiceSkuResult&gt;" Usage="apiManagementServiceResource.GetAvailableApiManagementServiceSkusAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.AvailableApiManagementServiceSkuResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all available SKU for a given API Management service
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/skus
            Operation Id: ApiManagementServiceSkus_ListAvailableServiceSkus
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.AvailableApiManagementServiceSkuResult" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContentItem">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem&gt; GetContentItem (string contentTypeId, string contentItemId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem&gt; GetContentItem(string contentTypeId, string contentItemId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetContentItem(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContentItem (contentTypeId As String, contentItemId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementContentItem)" />
      <MemberSignature Language="F#" Value="abstract member GetContentItem : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem&gt;&#xA;override this.GetContentItem : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem&gt;" Usage="apiManagementServiceResource.GetContentItem (contentTypeId, contentItemId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentTypeId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="contentItemId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="contentTypeId"> Content type identifier. </param>
        <param name="contentItemId"> Content item identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns the developer portal's content item specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}/contentItems/{contentItemId}
            Operation Id: ContentItem_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="contentTypeId" /> or <paramref name="contentItemId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentTypeId" /> or <paramref name="contentItemId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetContentItemAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem&gt;&gt; GetContentItemAsync (string contentTypeId, string contentItemId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem&gt;&gt; GetContentItemAsync(string contentTypeId, string contentItemId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetContentItemAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContentItemAsync (contentTypeId As String, contentItemId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementContentItem))" />
      <MemberSignature Language="F#" Value="abstract member GetContentItemAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem&gt;&gt;&#xA;override this.GetContentItemAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem&gt;&gt;" Usage="apiManagementServiceResource.GetContentItemAsync (contentTypeId, contentItemId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentTypeId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="contentItemId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="contentTypeId"> Content type identifier. </param>
        <param name="contentItemId"> Content item identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns the developer portal's content item specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}/contentItems/{contentItemId}
            Operation Id: ContentItem_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="contentTypeId" /> or <paramref name="contentItemId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentTypeId" /> or <paramref name="contentItemId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetContentItemEntityTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; GetContentItemEntityTag (string contentTypeId, string contentItemId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; GetContentItemEntityTag(string contentTypeId, string contentItemId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetContentItemEntityTag(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContentItemEntityTag (contentTypeId As String, contentItemId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member GetContentItemEntityTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.GetContentItemEntityTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="apiManagementServiceResource.GetContentItemEntityTag (contentTypeId, contentItemId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentTypeId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="contentItemId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="contentTypeId"> Content type identifier. </param>
        <param name="contentItemId"> Content item identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns the entity state (ETag) version of the developer portal's content item specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}/contentItems/{contentItemId}
            Operation Id: ContentItem_GetEntityTag
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="contentTypeId" /> or <paramref name="contentItemId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentTypeId" /> or <paramref name="contentItemId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetContentItemEntityTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; GetContentItemEntityTagAsync (string contentTypeId, string contentItemId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; GetContentItemEntityTagAsync(string contentTypeId, string contentItemId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetContentItemEntityTagAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContentItemEntityTagAsync (contentTypeId As String, contentItemId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member GetContentItemEntityTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.GetContentItemEntityTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="apiManagementServiceResource.GetContentItemEntityTagAsync (contentTypeId, contentItemId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentTypeId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="contentItemId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="contentTypeId"> Content type identifier. </param>
        <param name="contentItemId"> Content item identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns the entity state (ETag) version of the developer portal's content item specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}/contentItems/{contentItemId}
            Operation Id: ContentItem_GetEntityTag
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="contentTypeId" /> or <paramref name="contentItemId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentTypeId" /> or <paramref name="contentItemId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetContentItems">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem&gt; GetContentItems (string contentTypeId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem&gt; GetContentItems(string contentTypeId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetContentItems(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContentItems (contentTypeId As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ApiManagementContentItem)" />
      <MemberSignature Language="F#" Value="abstract member GetContentItems : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem&gt;&#xA;override this.GetContentItems : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem&gt;" Usage="apiManagementServiceResource.GetContentItems (contentTypeId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentTypeId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="contentTypeId"> Content type identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists developer portal's content items specified by the provided content type.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}/contentItems
            Operation Id: ContentItem_ListByService
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="contentTypeId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentTypeId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetContentItemsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem&gt; GetContentItemsAsync (string contentTypeId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem&gt; GetContentItemsAsync(string contentTypeId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetContentItemsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContentItemsAsync (contentTypeId As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ApiManagementContentItem)" />
      <MemberSignature Language="F#" Value="abstract member GetContentItemsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem&gt;&#xA;override this.GetContentItemsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem&gt;" Usage="apiManagementServiceResource.GetContentItemsAsync (contentTypeId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentTypeId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="contentTypeId"> Content type identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists developer portal's content items specified by the provided content type.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}/contentItems
            Operation Id: ContentItem_ListByService
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.ApiManagementContentItem" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="contentTypeId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentTypeId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetContentType">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType&gt; GetContentType (string contentTypeId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType&gt; GetContentType(string contentTypeId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetContentType(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContentType (contentTypeId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementContentType)" />
      <MemberSignature Language="F#" Value="abstract member GetContentType : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType&gt;&#xA;override this.GetContentType : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType&gt;" Usage="apiManagementServiceResource.GetContentType (contentTypeId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentTypeId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="contentTypeId"> Content type identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the developer portal's content type. Content types describe content items' properties, validation rules, and constraints.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}
            Operation Id: ContentType_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="contentTypeId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentTypeId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetContentTypeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType&gt;&gt; GetContentTypeAsync (string contentTypeId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType&gt;&gt; GetContentTypeAsync(string contentTypeId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetContentTypeAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContentTypeAsync (contentTypeId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementContentType))" />
      <MemberSignature Language="F#" Value="abstract member GetContentTypeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType&gt;&gt;&#xA;override this.GetContentTypeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType&gt;&gt;" Usage="apiManagementServiceResource.GetContentTypeAsync (contentTypeId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentTypeId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="contentTypeId"> Content type identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the developer portal's content type. Content types describe content items' properties, validation rules, and constraints.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}
            Operation Id: ContentType_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="contentTypeId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentTypeId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetContentTypes">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType&gt; GetContentTypes (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType&gt; GetContentTypes(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetContentTypes(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContentTypes (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ApiManagementContentType)" />
      <MemberSignature Language="F#" Value="abstract member GetContentTypes : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType&gt;&#xA;override this.GetContentTypes : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType&gt;" Usage="apiManagementServiceResource.GetContentTypes cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the developer portal's content types. Content types describe content items' properties, validation rules, and constraints.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes
            Operation Id: ContentType_ListByService
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContentTypesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType&gt; GetContentTypesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType&gt; GetContentTypesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetContentTypesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContentTypesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ApiManagementContentType)" />
      <MemberSignature Language="F#" Value="abstract member GetContentTypesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType&gt;&#xA;override this.GetContentTypesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType&gt;" Usage="apiManagementServiceResource.GetContentTypesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the developer portal's content types. Content types describe content items' properties, validation rules, and constraints.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes
            Operation Id: ContentType_ListByService
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.ApiManagementContentType" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkStatusByLocation">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.NetworkStatusContract&gt; GetNetworkStatusByLocation (Azure.Core.AzureLocation locationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.Models.NetworkStatusContract&gt; GetNetworkStatusByLocation(valuetype Azure.Core.AzureLocation locationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetNetworkStatusByLocation(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkStatusByLocation (locationName As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NetworkStatusContract)" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkStatusByLocation : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.NetworkStatusContract&gt;&#xA;override this.GetNetworkStatusByLocation : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.NetworkStatusContract&gt;" Usage="apiManagementServiceResource.GetNetworkStatusByLocation (locationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.NetworkStatusContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> Location in which the API Management service is deployed. This is one of the Azure Regions like West US, East US, South Central US. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the Connectivity Status to the external resources on which the Api Management service depends from inside the Cloud Service. This also returns the DNS Servers as visible to the CloudService.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/locations/{locationName}/networkstatus
            Operation Id: NetworkStatus_ListByLocation
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkStatusByLocationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.NetworkStatusContract&gt;&gt; GetNetworkStatusByLocationAsync (Azure.Core.AzureLocation locationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.Models.NetworkStatusContract&gt;&gt; GetNetworkStatusByLocationAsync(valuetype Azure.Core.AzureLocation locationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetNetworkStatusByLocationAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkStatusByLocationAsync (locationName As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NetworkStatusContract))" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkStatusByLocationAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.NetworkStatusContract&gt;&gt;&#xA;override this.GetNetworkStatusByLocationAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.NetworkStatusContract&gt;&gt;" Usage="apiManagementServiceResource.GetNetworkStatusByLocationAsync (locationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.NetworkStatusContract&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> Location in which the API Management service is deployed. This is one of the Azure Regions like West US, East US, South Central US. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the Connectivity Status to the external resources on which the Api Management service depends from inside the Cloud Service. This also returns the DNS Servers as visible to the CloudService.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/locations/{locationName}/networkstatus
            Operation Id: NetworkStatus_ListByLocation
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkStatuses">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.NetworkStatusContractWithLocation&gt; GetNetworkStatuses (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.NetworkStatusContractWithLocation&gt; GetNetworkStatuses(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetNetworkStatuses(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkStatuses (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of NetworkStatusContractWithLocation)" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkStatuses : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.NetworkStatusContractWithLocation&gt;&#xA;override this.GetNetworkStatuses : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.NetworkStatusContractWithLocation&gt;" Usage="apiManagementServiceResource.GetNetworkStatuses cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.NetworkStatusContractWithLocation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the Connectivity Status to the external resources on which the Api Management service depends from inside the Cloud Service. This also returns the DNS Servers as visible to the CloudService.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/networkstatus
            Operation Id: NetworkStatus_ListByService
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.NetworkStatusContractWithLocation" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkStatusesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.NetworkStatusContractWithLocation&gt; GetNetworkStatusesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.NetworkStatusContractWithLocation&gt; GetNetworkStatusesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetNetworkStatusesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkStatusesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of NetworkStatusContractWithLocation)" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkStatusesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.NetworkStatusContractWithLocation&gt;&#xA;override this.GetNetworkStatusesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.NetworkStatusContractWithLocation&gt;" Usage="apiManagementServiceResource.GetNetworkStatusesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.NetworkStatusContractWithLocation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the Connectivity Status to the external resources on which the Api Management service depends from inside the Cloud Service. This also returns the DNS Servers as visible to the CloudService.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/networkstatus
            Operation Id: NetworkStatus_ListByService
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.NetworkStatusContractWithLocation" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutboundNetworkDependenciesEndpoints">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.OutboundEnvironmentEndpoint&gt; GetOutboundNetworkDependenciesEndpoints (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.OutboundEnvironmentEndpoint&gt; GetOutboundNetworkDependenciesEndpoints(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetOutboundNetworkDependenciesEndpoints(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOutboundNetworkDependenciesEndpoints (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of OutboundEnvironmentEndpoint)" />
      <MemberSignature Language="F#" Value="abstract member GetOutboundNetworkDependenciesEndpoints : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.OutboundEnvironmentEndpoint&gt;&#xA;override this.GetOutboundNetworkDependenciesEndpoints : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.OutboundEnvironmentEndpoint&gt;" Usage="apiManagementServiceResource.GetOutboundNetworkDependenciesEndpoints cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.OutboundEnvironmentEndpoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the network endpoints of all outbound dependencies of a ApiManagement service.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/outboundNetworkDependenciesEndpoints
            Operation Id: OutboundNetworkDependenciesEndpoints_ListByService
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.OutboundEnvironmentEndpoint" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutboundNetworkDependenciesEndpointsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.OutboundEnvironmentEndpoint&gt; GetOutboundNetworkDependenciesEndpointsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.OutboundEnvironmentEndpoint&gt; GetOutboundNetworkDependenciesEndpointsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetOutboundNetworkDependenciesEndpointsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOutboundNetworkDependenciesEndpointsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of OutboundEnvironmentEndpoint)" />
      <MemberSignature Language="F#" Value="abstract member GetOutboundNetworkDependenciesEndpointsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.OutboundEnvironmentEndpoint&gt;&#xA;override this.GetOutboundNetworkDependenciesEndpointsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.OutboundEnvironmentEndpoint&gt;" Usage="apiManagementServiceResource.GetOutboundNetworkDependenciesEndpointsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.OutboundEnvironmentEndpoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the network endpoints of all outbound dependencies of a ApiManagement service.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/outboundNetworkDependenciesEndpoints
            Operation Id: OutboundNetworkDependenciesEndpoints_ListByService
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.OutboundEnvironmentEndpoint" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPolicyDescriptions">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.PolicyDescriptionContractData&gt; GetPolicyDescriptions (Azure.ResourceManager.ApiManagement.Models.PolicyScopeContract? scope = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.PolicyDescriptionContractData&gt; GetPolicyDescriptions(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ApiManagement.Models.PolicyScopeContract&gt; scope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetPolicyDescriptions(System.Nullable{Azure.ResourceManager.ApiManagement.Models.PolicyScopeContract},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPolicyDescriptions (Optional scope As Nullable(Of PolicyScopeContract) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PolicyDescriptionContractData)" />
      <MemberSignature Language="F#" Value="abstract member GetPolicyDescriptions : Nullable&lt;Azure.ResourceManager.ApiManagement.Models.PolicyScopeContract&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.PolicyDescriptionContractData&gt;&#xA;override this.GetPolicyDescriptions : Nullable&lt;Azure.ResourceManager.ApiManagement.Models.PolicyScopeContract&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.PolicyDescriptionContractData&gt;" Usage="apiManagementServiceResource.GetPolicyDescriptions (scope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.PolicyDescriptionContractData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Nullable&lt;Azure.ResourceManager.ApiManagement.Models.PolicyScopeContract&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> Policy scope. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all policy descriptions.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policyDescriptions
            Operation Id: PolicyDescription_ListByService
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.PolicyDescriptionContractData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPolicyDescriptionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.PolicyDescriptionContractData&gt; GetPolicyDescriptionsAsync (Azure.ResourceManager.ApiManagement.Models.PolicyScopeContract? scope = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.PolicyDescriptionContractData&gt; GetPolicyDescriptionsAsync(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ApiManagement.Models.PolicyScopeContract&gt; scope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetPolicyDescriptionsAsync(System.Nullable{Azure.ResourceManager.ApiManagement.Models.PolicyScopeContract},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPolicyDescriptionsAsync (Optional scope As Nullable(Of PolicyScopeContract) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PolicyDescriptionContractData)" />
      <MemberSignature Language="F#" Value="abstract member GetPolicyDescriptionsAsync : Nullable&lt;Azure.ResourceManager.ApiManagement.Models.PolicyScopeContract&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.PolicyDescriptionContractData&gt;&#xA;override this.GetPolicyDescriptionsAsync : Nullable&lt;Azure.ResourceManager.ApiManagement.Models.PolicyScopeContract&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.PolicyDescriptionContractData&gt;" Usage="apiManagementServiceResource.GetPolicyDescriptionsAsync (scope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.PolicyDescriptionContractData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Nullable&lt;Azure.ResourceManager.ApiManagement.Models.PolicyScopeContract&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> Policy scope. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all policy descriptions.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policyDescriptions
            Operation Id: PolicyDescription_ListByService
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.PolicyDescriptionContractData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPortalSettings">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.PortalSettingsContractData&gt; GetPortalSettings (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.PortalSettingsContractData&gt; GetPortalSettings(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetPortalSettings(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPortalSettings (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PortalSettingsContractData)" />
      <MemberSignature Language="F#" Value="abstract member GetPortalSettings : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.PortalSettingsContractData&gt;&#xA;override this.GetPortalSettings : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.PortalSettingsContractData&gt;" Usage="apiManagementServiceResource.GetPortalSettings cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.PortalSettingsContractData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists a collection of portalsettings defined within a service instance..
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings
            Operation Id: PortalSettings_ListByService
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.PortalSettingsContractData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPortalSettingsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.PortalSettingsContractData&gt; GetPortalSettingsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.PortalSettingsContractData&gt; GetPortalSettingsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetPortalSettingsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPortalSettingsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PortalSettingsContractData)" />
      <MemberSignature Language="F#" Value="abstract member GetPortalSettingsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.PortalSettingsContractData&gt;&#xA;override this.GetPortalSettingsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.PortalSettingsContractData&gt;" Usage="apiManagementServiceResource.GetPortalSettingsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.PortalSettingsContractData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists a collection of portalsettings defined within a service instance..
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings
            Operation Id: PortalSettings_ListByService
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.PortalSettingsContractData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProductsByTags">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt; GetProductsByTags (string filter = default, int? top = default, int? skip = default, bool? includeNotTaggedProducts = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt; GetProductsByTags(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Nullable`1&lt;bool&gt; includeNotTaggedProducts, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetProductsByTags(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProductsByTags (Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional includeNotTaggedProducts As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of TagResourceContractDetails)" />
      <MemberSignature Language="F#" Value="abstract member GetProductsByTags : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt;&#xA;override this.GetProductsByTags : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt;" Usage="apiManagementServiceResource.GetProductsByTags (filter, top, skip, includeNotTaggedProducts, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="includeNotTaggedProducts" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> |     Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| terms | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| state | filter | eq | substringof, contains, startswith, endswith |&lt;/br&gt;. </param>
        <param name="top"> Number of records to return. </param>
        <param name="skip"> Number of records to skip. </param>
        <param name="includeNotTaggedProducts"> Include not tagged Products. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists a collection of products associated with tags.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/productsByTags
            Operation Id: Product_ListByTags
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProductsByTagsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt; GetProductsByTagsAsync (string filter = default, int? top = default, int? skip = default, bool? includeNotTaggedProducts = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt; GetProductsByTagsAsync(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Nullable`1&lt;bool&gt; includeNotTaggedProducts, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetProductsByTagsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProductsByTagsAsync (Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional includeNotTaggedProducts As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of TagResourceContractDetails)" />
      <MemberSignature Language="F#" Value="abstract member GetProductsByTagsAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt;&#xA;override this.GetProductsByTagsAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt;" Usage="apiManagementServiceResource.GetProductsByTagsAsync (filter, top, skip, includeNotTaggedProducts, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="includeNotTaggedProducts" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> |     Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| terms | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| state | filter | eq | substringof, contains, startswith, endswith |&lt;/br&gt;. </param>
        <param name="top"> Number of records to return. </param>
        <param name="skip"> Number of records to skip. </param>
        <param name="includeNotTaggedProducts"> Include not tagged Products. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists a collection of products associated with tags.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/productsByTags
            Operation Id: Product_ListByTags
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQuotaByCounterKeys">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt; GetQuotaByCounterKeys (string quotaCounterKey, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt; GetQuotaByCounterKeys(string quotaCounterKey, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetQuotaByCounterKeys(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQuotaByCounterKeys (quotaCounterKey As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of QuotaCounterContract)" />
      <MemberSignature Language="F#" Value="abstract member GetQuotaByCounterKeys : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt;&#xA;override this.GetQuotaByCounterKeys : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt;" Usage="apiManagementServiceResource.GetQuotaByCounterKeys (quotaCounterKey, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotaCounterKey" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="quotaCounterKey"> Quota counter key identifier.This is the result of expression defined in counter-key attribute of the quota-by-key policy.For Example, if you specify counter-key="boo" in the policy, then it’s accessible by "boo" counter key. But if it’s defined as counter-key="@("b"+"a")" then it will be accessible by "ba" key. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists a collection of current quota counter periods associated with the counter-key configured in the policy on the specified service instance. The api does not support paging yet.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}
            Operation Id: QuotaByCounterKeys_ListByService
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="quotaCounterKey" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="quotaCounterKey" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetQuotaByCounterKeysAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt; GetQuotaByCounterKeysAsync (string quotaCounterKey, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt; GetQuotaByCounterKeysAsync(string quotaCounterKey, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetQuotaByCounterKeysAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQuotaByCounterKeysAsync (quotaCounterKey As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of QuotaCounterContract)" />
      <MemberSignature Language="F#" Value="abstract member GetQuotaByCounterKeysAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt;&#xA;override this.GetQuotaByCounterKeysAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt;" Usage="apiManagementServiceResource.GetQuotaByCounterKeysAsync (quotaCounterKey, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotaCounterKey" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="quotaCounterKey"> Quota counter key identifier.This is the result of expression defined in counter-key attribute of the quota-by-key policy.For Example, if you specify counter-key="boo" in the policy, then it’s accessible by "boo" counter key. But if it’s defined as counter-key="@("b"+"a")" then it will be accessible by "ba" key. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists a collection of current quota counter periods associated with the counter-key configured in the policy on the specified service instance. The api does not support paging yet.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}
            Operation Id: QuotaByCounterKeys_ListByService
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="quotaCounterKey" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="quotaCounterKey" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetQuotaByPeriodKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt; GetQuotaByPeriodKey (string quotaCounterKey, string quotaPeriodKey, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt; GetQuotaByPeriodKey(string quotaCounterKey, string quotaPeriodKey, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetQuotaByPeriodKey(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQuotaByPeriodKey (quotaCounterKey As String, quotaPeriodKey As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of QuotaCounterContract)" />
      <MemberSignature Language="F#" Value="abstract member GetQuotaByPeriodKey : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt;&#xA;override this.GetQuotaByPeriodKey : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt;" Usage="apiManagementServiceResource.GetQuotaByPeriodKey (quotaCounterKey, quotaPeriodKey, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotaCounterKey" Type="System.String" />
        <Parameter Name="quotaPeriodKey" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="quotaCounterKey"> Quota counter key identifier.This is the result of expression defined in counter-key attribute of the quota-by-key policy.For Example, if you specify counter-key="boo" in the policy, then it’s accessible by "boo" counter key. But if it’s defined as counter-key="@("b"+"a")" then it will be accessible by "ba" key. </param>
        <param name="quotaPeriodKey"> Quota period key identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the value of the quota counter associated with the counter-key in the policy for the specific period in service instance.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/periods/{quotaPeriodKey}
            Operation Id: QuotaByPeriodKeys_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="quotaCounterKey" /> or <paramref name="quotaPeriodKey" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="quotaCounterKey" /> or <paramref name="quotaPeriodKey" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetQuotaByPeriodKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt;&gt; GetQuotaByPeriodKeyAsync (string quotaCounterKey, string quotaPeriodKey, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt;&gt; GetQuotaByPeriodKeyAsync(string quotaCounterKey, string quotaPeriodKey, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetQuotaByPeriodKeyAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQuotaByPeriodKeyAsync (quotaCounterKey As String, quotaPeriodKey As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of QuotaCounterContract))" />
      <MemberSignature Language="F#" Value="abstract member GetQuotaByPeriodKeyAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt;&gt;&#xA;override this.GetQuotaByPeriodKeyAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt;&gt;" Usage="apiManagementServiceResource.GetQuotaByPeriodKeyAsync (quotaCounterKey, quotaPeriodKey, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotaCounterKey" Type="System.String" />
        <Parameter Name="quotaPeriodKey" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="quotaCounterKey"> Quota counter key identifier.This is the result of expression defined in counter-key attribute of the quota-by-key policy.For Example, if you specify counter-key="boo" in the policy, then it’s accessible by "boo" counter key. But if it’s defined as counter-key="@("b"+"a")" then it will be accessible by "ba" key. </param>
        <param name="quotaPeriodKey"> Quota period key identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the value of the quota counter associated with the counter-key in the policy for the specific period in service instance.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/periods/{quotaPeriodKey}
            Operation Id: QuotaByPeriodKeys_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="quotaCounterKey" /> or <paramref name="quotaPeriodKey" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="quotaCounterKey" /> or <paramref name="quotaPeriodKey" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRegions">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.RegionContract&gt; GetRegions (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.RegionContract&gt; GetRegions(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetRegions(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRegions (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of RegionContract)" />
      <MemberSignature Language="F#" Value="abstract member GetRegions : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.RegionContract&gt;&#xA;override this.GetRegions : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.RegionContract&gt;" Usage="apiManagementServiceResource.GetRegions cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.RegionContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all azure regions in which the service exists.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/regions
            Operation Id: Region_ListByService
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.RegionContract" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.RegionContract&gt; GetRegionsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.RegionContract&gt; GetRegionsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetRegionsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRegionsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of RegionContract)" />
      <MemberSignature Language="F#" Value="abstract member GetRegionsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.RegionContract&gt;&#xA;override this.GetRegionsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.RegionContract&gt;" Usage="apiManagementServiceResource.GetRegionsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.RegionContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all azure regions in which the service exists.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/regions
            Operation Id: Region_ListByService
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.RegionContract" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReportsByApi">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt; GetReportsByApi (string filter, int? top = default, int? skip = default, string orderBy = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt; GetReportsByApi(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, string orderBy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetReportsByApi(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReportsByApi (filter As String, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional orderBy As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ReportRecordContract)" />
      <MemberSignature Language="F#" Value="abstract member GetReportsByApi : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;&#xA;override this.GetReportsByApi : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;" Usage="apiManagementServiceResource.GetReportsByApi (filter, top, skip, orderBy, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="orderBy" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> The filter to apply on the operation. </param>
        <param name="top"> Number of records to return. </param>
        <param name="skip"> Number of records to skip. </param>
        <param name="orderBy"> OData order by query option. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists report records by API.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byApi
            Operation Id: Reports_ListByApi
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.ReportRecordContract" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filter" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReportsByApiAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt; GetReportsByApiAsync (string filter, int? top = default, int? skip = default, string orderBy = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt; GetReportsByApiAsync(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, string orderBy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetReportsByApiAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReportsByApiAsync (filter As String, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional orderBy As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ReportRecordContract)" />
      <MemberSignature Language="F#" Value="abstract member GetReportsByApiAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;&#xA;override this.GetReportsByApiAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;" Usage="apiManagementServiceResource.GetReportsByApiAsync (filter, top, skip, orderBy, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="orderBy" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> The filter to apply on the operation. </param>
        <param name="top"> Number of records to return. </param>
        <param name="skip"> Number of records to skip. </param>
        <param name="orderBy"> OData order by query option. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists report records by API.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byApi
            Operation Id: Reports_ListByApi
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.ReportRecordContract" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filter" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReportsByGeo">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt; GetReportsByGeo (string filter, int? top = default, int? skip = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt; GetReportsByGeo(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetReportsByGeo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReportsByGeo (filter As String, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ReportRecordContract)" />
      <MemberSignature Language="F#" Value="abstract member GetReportsByGeo : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;&#xA;override this.GetReportsByGeo : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;" Usage="apiManagementServiceResource.GetReportsByGeo (filter, top, skip, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> |   Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| timestamp | filter | ge, le |     | &lt;/br&gt;| country | select |     |     | &lt;/br&gt;| region | select |     |     | &lt;/br&gt;| zip | select |     |     | &lt;/br&gt;| apiRegion | filter | eq |     | &lt;/br&gt;| userId | filter | eq |     | &lt;/br&gt;| productId | filter | eq |     | &lt;/br&gt;| subscriptionId | filter | eq |     | &lt;/br&gt;| apiId | filter | eq |     | &lt;/br&gt;| operationId | filter | eq |     | &lt;/br&gt;| callCountSuccess | select |     |     | &lt;/br&gt;| callCountBlocked | select |     |     | &lt;/br&gt;| callCountFailed | select |     |     | &lt;/br&gt;| callCountOther | select |     |     | &lt;/br&gt;| bandwidth | select, orderBy |     |     | &lt;/br&gt;| cacheHitsCount | select |     |     | &lt;/br&gt;| cacheMissCount | select |     |     | &lt;/br&gt;| apiTimeAvg | select |     |     | &lt;/br&gt;| apiTimeMin | select |     |     | &lt;/br&gt;| apiTimeMax | select |     |     | &lt;/br&gt;| serviceTimeAvg | select |     |     | &lt;/br&gt;| serviceTimeMin | select |     |     | &lt;/br&gt;| serviceTimeMax | select |     |     | &lt;/br&gt;. </param>
        <param name="top"> Number of records to return. </param>
        <param name="skip"> Number of records to skip. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists report records by geography.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byGeo
            Operation Id: Reports_ListByGeo
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.ReportRecordContract" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filter" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReportsByGeoAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt; GetReportsByGeoAsync (string filter, int? top = default, int? skip = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt; GetReportsByGeoAsync(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetReportsByGeoAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReportsByGeoAsync (filter As String, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ReportRecordContract)" />
      <MemberSignature Language="F#" Value="abstract member GetReportsByGeoAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;&#xA;override this.GetReportsByGeoAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;" Usage="apiManagementServiceResource.GetReportsByGeoAsync (filter, top, skip, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> |   Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| timestamp | filter | ge, le |     | &lt;/br&gt;| country | select |     |     | &lt;/br&gt;| region | select |     |     | &lt;/br&gt;| zip | select |     |     | &lt;/br&gt;| apiRegion | filter | eq |     | &lt;/br&gt;| userId | filter | eq |     | &lt;/br&gt;| productId | filter | eq |     | &lt;/br&gt;| subscriptionId | filter | eq |     | &lt;/br&gt;| apiId | filter | eq |     | &lt;/br&gt;| operationId | filter | eq |     | &lt;/br&gt;| callCountSuccess | select |     |     | &lt;/br&gt;| callCountBlocked | select |     |     | &lt;/br&gt;| callCountFailed | select |     |     | &lt;/br&gt;| callCountOther | select |     |     | &lt;/br&gt;| bandwidth | select, orderBy |     |     | &lt;/br&gt;| cacheHitsCount | select |     |     | &lt;/br&gt;| cacheMissCount | select |     |     | &lt;/br&gt;| apiTimeAvg | select |     |     | &lt;/br&gt;| apiTimeMin | select |     |     | &lt;/br&gt;| apiTimeMax | select |     |     | &lt;/br&gt;| serviceTimeAvg | select |     |     | &lt;/br&gt;| serviceTimeMin | select |     |     | &lt;/br&gt;| serviceTimeMax | select |     |     | &lt;/br&gt;. </param>
        <param name="top"> Number of records to return. </param>
        <param name="skip"> Number of records to skip. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists report records by geography.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byGeo
            Operation Id: Reports_ListByGeo
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.ReportRecordContract" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filter" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReportsByOperation">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt; GetReportsByOperation (string filter, int? top = default, int? skip = default, string orderBy = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt; GetReportsByOperation(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, string orderBy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetReportsByOperation(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReportsByOperation (filter As String, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional orderBy As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ReportRecordContract)" />
      <MemberSignature Language="F#" Value="abstract member GetReportsByOperation : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;&#xA;override this.GetReportsByOperation : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;" Usage="apiManagementServiceResource.GetReportsByOperation (filter, top, skip, orderBy, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="orderBy" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> |   Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| timestamp | filter | ge, le |     | &lt;/br&gt;| displayName | select, orderBy |     |     | &lt;/br&gt;| apiRegion | filter | eq |     | &lt;/br&gt;| userId | filter | eq |     | &lt;/br&gt;| productId | filter | eq |     | &lt;/br&gt;| subscriptionId | filter | eq |     | &lt;/br&gt;| apiId | filter | eq |     | &lt;/br&gt;| operationId | select, filter | eq |     | &lt;/br&gt;| callCountSuccess | select, orderBy |     |     | &lt;/br&gt;| callCountBlocked | select, orderBy |     |     | &lt;/br&gt;| callCountFailed | select, orderBy |     |     | &lt;/br&gt;| callCountOther | select, orderBy |     |     | &lt;/br&gt;| callCountTotal | select, orderBy |     |     | &lt;/br&gt;| bandwidth | select, orderBy |     |     | &lt;/br&gt;| cacheHitsCount | select |     |     | &lt;/br&gt;| cacheMissCount | select |     |     | &lt;/br&gt;| apiTimeAvg | select, orderBy |     |     | &lt;/br&gt;| apiTimeMin | select |     |     | &lt;/br&gt;| apiTimeMax | select |     |     | &lt;/br&gt;| serviceTimeAvg | select |     |     | &lt;/br&gt;| serviceTimeMin | select |     |     | &lt;/br&gt;| serviceTimeMax | select |     |     | &lt;/br&gt;. </param>
        <param name="top"> Number of records to return. </param>
        <param name="skip"> Number of records to skip. </param>
        <param name="orderBy"> OData order by query option. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists report records by API Operations.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byOperation
            Operation Id: Reports_ListByOperation
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.ReportRecordContract" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filter" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReportsByOperationAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt; GetReportsByOperationAsync (string filter, int? top = default, int? skip = default, string orderBy = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt; GetReportsByOperationAsync(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, string orderBy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetReportsByOperationAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReportsByOperationAsync (filter As String, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional orderBy As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ReportRecordContract)" />
      <MemberSignature Language="F#" Value="abstract member GetReportsByOperationAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;&#xA;override this.GetReportsByOperationAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;" Usage="apiManagementServiceResource.GetReportsByOperationAsync (filter, top, skip, orderBy, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="orderBy" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> |   Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| timestamp | filter | ge, le |     | &lt;/br&gt;| displayName | select, orderBy |     |     | &lt;/br&gt;| apiRegion | filter | eq |     | &lt;/br&gt;| userId | filter | eq |     | &lt;/br&gt;| productId | filter | eq |     | &lt;/br&gt;| subscriptionId | filter | eq |     | &lt;/br&gt;| apiId | filter | eq |     | &lt;/br&gt;| operationId | select, filter | eq |     | &lt;/br&gt;| callCountSuccess | select, orderBy |     |     | &lt;/br&gt;| callCountBlocked | select, orderBy |     |     | &lt;/br&gt;| callCountFailed | select, orderBy |     |     | &lt;/br&gt;| callCountOther | select, orderBy |     |     | &lt;/br&gt;| callCountTotal | select, orderBy |     |     | &lt;/br&gt;| bandwidth | select, orderBy |     |     | &lt;/br&gt;| cacheHitsCount | select |     |     | &lt;/br&gt;| cacheMissCount | select |     |     | &lt;/br&gt;| apiTimeAvg | select, orderBy |     |     | &lt;/br&gt;| apiTimeMin | select |     |     | &lt;/br&gt;| apiTimeMax | select |     |     | &lt;/br&gt;| serviceTimeAvg | select |     |     | &lt;/br&gt;| serviceTimeMin | select |     |     | &lt;/br&gt;| serviceTimeMax | select |     |     | &lt;/br&gt;. </param>
        <param name="top"> Number of records to return. </param>
        <param name="skip"> Number of records to skip. </param>
        <param name="orderBy"> OData order by query option. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists report records by API Operations.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byOperation
            Operation Id: Reports_ListByOperation
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.ReportRecordContract" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filter" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReportsByProduct">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt; GetReportsByProduct (string filter, int? top = default, int? skip = default, string orderBy = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt; GetReportsByProduct(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, string orderBy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetReportsByProduct(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReportsByProduct (filter As String, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional orderBy As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ReportRecordContract)" />
      <MemberSignature Language="F#" Value="abstract member GetReportsByProduct : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;&#xA;override this.GetReportsByProduct : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;" Usage="apiManagementServiceResource.GetReportsByProduct (filter, top, skip, orderBy, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="orderBy" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> |   Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| timestamp | filter | ge, le |     | &lt;/br&gt;| displayName | select, orderBy |     |     | &lt;/br&gt;| apiRegion | filter | eq |     | &lt;/br&gt;| userId | filter | eq |     | &lt;/br&gt;| productId | select, filter | eq |     | &lt;/br&gt;| subscriptionId | filter | eq |     | &lt;/br&gt;| callCountSuccess | select, orderBy |     |     | &lt;/br&gt;| callCountBlocked | select, orderBy |     |     | &lt;/br&gt;| callCountFailed | select, orderBy |     |     | &lt;/br&gt;| callCountOther | select, orderBy |     |     | &lt;/br&gt;| callCountTotal | select, orderBy |     |     | &lt;/br&gt;| bandwidth | select, orderBy |     |     | &lt;/br&gt;| cacheHitsCount | select |     |     | &lt;/br&gt;| cacheMissCount | select |     |     | &lt;/br&gt;| apiTimeAvg | select, orderBy |     |     | &lt;/br&gt;| apiTimeMin | select |     |     | &lt;/br&gt;| apiTimeMax | select |     |     | &lt;/br&gt;| serviceTimeAvg | select |     |     | &lt;/br&gt;| serviceTimeMin | select |     |     | &lt;/br&gt;| serviceTimeMax | select |     |     | &lt;/br&gt;. </param>
        <param name="top"> Number of records to return. </param>
        <param name="skip"> Number of records to skip. </param>
        <param name="orderBy"> OData order by query option. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists report records by Product.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byProduct
            Operation Id: Reports_ListByProduct
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.ReportRecordContract" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filter" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReportsByProductAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt; GetReportsByProductAsync (string filter, int? top = default, int? skip = default, string orderBy = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt; GetReportsByProductAsync(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, string orderBy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetReportsByProductAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReportsByProductAsync (filter As String, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional orderBy As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ReportRecordContract)" />
      <MemberSignature Language="F#" Value="abstract member GetReportsByProductAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;&#xA;override this.GetReportsByProductAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;" Usage="apiManagementServiceResource.GetReportsByProductAsync (filter, top, skip, orderBy, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="orderBy" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> |   Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| timestamp | filter | ge, le |     | &lt;/br&gt;| displayName | select, orderBy |     |     | &lt;/br&gt;| apiRegion | filter | eq |     | &lt;/br&gt;| userId | filter | eq |     | &lt;/br&gt;| productId | select, filter | eq |     | &lt;/br&gt;| subscriptionId | filter | eq |     | &lt;/br&gt;| callCountSuccess | select, orderBy |     |     | &lt;/br&gt;| callCountBlocked | select, orderBy |     |     | &lt;/br&gt;| callCountFailed | select, orderBy |     |     | &lt;/br&gt;| callCountOther | select, orderBy |     |     | &lt;/br&gt;| callCountTotal | select, orderBy |     |     | &lt;/br&gt;| bandwidth | select, orderBy |     |     | &lt;/br&gt;| cacheHitsCount | select |     |     | &lt;/br&gt;| cacheMissCount | select |     |     | &lt;/br&gt;| apiTimeAvg | select, orderBy |     |     | &lt;/br&gt;| apiTimeMin | select |     |     | &lt;/br&gt;| apiTimeMax | select |     |     | &lt;/br&gt;| serviceTimeAvg | select |     |     | &lt;/br&gt;| serviceTimeMin | select |     |     | &lt;/br&gt;| serviceTimeMax | select |     |     | &lt;/br&gt;. </param>
        <param name="top"> Number of records to return. </param>
        <param name="skip"> Number of records to skip. </param>
        <param name="orderBy"> OData order by query option. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists report records by Product.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byProduct
            Operation Id: Reports_ListByProduct
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.ReportRecordContract" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filter" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReportsByRequest">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.RequestReportRecordContract&gt; GetReportsByRequest (string filter, int? top = default, int? skip = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.RequestReportRecordContract&gt; GetReportsByRequest(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetReportsByRequest(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReportsByRequest (filter As String, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of RequestReportRecordContract)" />
      <MemberSignature Language="F#" Value="abstract member GetReportsByRequest : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.RequestReportRecordContract&gt;&#xA;override this.GetReportsByRequest : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.RequestReportRecordContract&gt;" Usage="apiManagementServiceResource.GetReportsByRequest (filter, top, skip, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.RequestReportRecordContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> |   Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| timestamp | filter | ge, le |     | &lt;/br&gt;| apiId | filter | eq |     | &lt;/br&gt;| operationId | filter | eq |     | &lt;/br&gt;| productId | filter | eq |     | &lt;/br&gt;| userId | filter | eq |     | &lt;/br&gt;| apiRegion | filter | eq |     | &lt;/br&gt;| subscriptionId | filter | eq |     | &lt;/br&gt;. </param>
        <param name="top"> Number of records to return. </param>
        <param name="skip"> Number of records to skip. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists report records by Request.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byRequest
            Operation Id: Reports_ListByRequest
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.RequestReportRecordContract" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filter" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReportsByRequestAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.RequestReportRecordContract&gt; GetReportsByRequestAsync (string filter, int? top = default, int? skip = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.RequestReportRecordContract&gt; GetReportsByRequestAsync(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetReportsByRequestAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReportsByRequestAsync (filter As String, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of RequestReportRecordContract)" />
      <MemberSignature Language="F#" Value="abstract member GetReportsByRequestAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.RequestReportRecordContract&gt;&#xA;override this.GetReportsByRequestAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.RequestReportRecordContract&gt;" Usage="apiManagementServiceResource.GetReportsByRequestAsync (filter, top, skip, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.RequestReportRecordContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> |   Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| timestamp | filter | ge, le |     | &lt;/br&gt;| apiId | filter | eq |     | &lt;/br&gt;| operationId | filter | eq |     | &lt;/br&gt;| productId | filter | eq |     | &lt;/br&gt;| userId | filter | eq |     | &lt;/br&gt;| apiRegion | filter | eq |     | &lt;/br&gt;| subscriptionId | filter | eq |     | &lt;/br&gt;. </param>
        <param name="top"> Number of records to return. </param>
        <param name="skip"> Number of records to skip. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists report records by Request.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byRequest
            Operation Id: Reports_ListByRequest
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.RequestReportRecordContract" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filter" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReportsBySubscription">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt; GetReportsBySubscription (string filter, int? top = default, int? skip = default, string orderBy = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt; GetReportsBySubscription(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, string orderBy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetReportsBySubscription(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReportsBySubscription (filter As String, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional orderBy As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ReportRecordContract)" />
      <MemberSignature Language="F#" Value="abstract member GetReportsBySubscription : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;&#xA;override this.GetReportsBySubscription : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;" Usage="apiManagementServiceResource.GetReportsBySubscription (filter, top, skip, orderBy, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="orderBy" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> |   Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| timestamp | filter | ge, le |     | &lt;/br&gt;| displayName | select, orderBy |     |     | &lt;/br&gt;| apiRegion | filter | eq |     | &lt;/br&gt;| userId | select, filter | eq |     | &lt;/br&gt;| productId | select, filter | eq |     | &lt;/br&gt;| subscriptionId | select, filter | eq |     | &lt;/br&gt;| callCountSuccess | select, orderBy |     |     | &lt;/br&gt;| callCountBlocked | select, orderBy |     |     | &lt;/br&gt;| callCountFailed | select, orderBy |     |     | &lt;/br&gt;| callCountOther | select, orderBy |     |     | &lt;/br&gt;| callCountTotal | select, orderBy |     |     | &lt;/br&gt;| bandwidth | select, orderBy |     |     | &lt;/br&gt;| cacheHitsCount | select |     |     | &lt;/br&gt;| cacheMissCount | select |     |     | &lt;/br&gt;| apiTimeAvg | select, orderBy |     |     | &lt;/br&gt;| apiTimeMin | select |     |     | &lt;/br&gt;| apiTimeMax | select |     |     | &lt;/br&gt;| serviceTimeAvg | select |     |     | &lt;/br&gt;| serviceTimeMin | select |     |     | &lt;/br&gt;| serviceTimeMax | select |     |     | &lt;/br&gt;. </param>
        <param name="top"> Number of records to return. </param>
        <param name="skip"> Number of records to skip. </param>
        <param name="orderBy"> OData order by query option. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists report records by subscription.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/bySubscription
            Operation Id: Reports_ListBySubscription
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.ReportRecordContract" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filter" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReportsBySubscriptionAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt; GetReportsBySubscriptionAsync (string filter, int? top = default, int? skip = default, string orderBy = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt; GetReportsBySubscriptionAsync(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, string orderBy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetReportsBySubscriptionAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReportsBySubscriptionAsync (filter As String, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional orderBy As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ReportRecordContract)" />
      <MemberSignature Language="F#" Value="abstract member GetReportsBySubscriptionAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;&#xA;override this.GetReportsBySubscriptionAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;" Usage="apiManagementServiceResource.GetReportsBySubscriptionAsync (filter, top, skip, orderBy, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="orderBy" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> |   Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| timestamp | filter | ge, le |     | &lt;/br&gt;| displayName | select, orderBy |     |     | &lt;/br&gt;| apiRegion | filter | eq |     | &lt;/br&gt;| userId | select, filter | eq |     | &lt;/br&gt;| productId | select, filter | eq |     | &lt;/br&gt;| subscriptionId | select, filter | eq |     | &lt;/br&gt;| callCountSuccess | select, orderBy |     |     | &lt;/br&gt;| callCountBlocked | select, orderBy |     |     | &lt;/br&gt;| callCountFailed | select, orderBy |     |     | &lt;/br&gt;| callCountOther | select, orderBy |     |     | &lt;/br&gt;| callCountTotal | select, orderBy |     |     | &lt;/br&gt;| bandwidth | select, orderBy |     |     | &lt;/br&gt;| cacheHitsCount | select |     |     | &lt;/br&gt;| cacheMissCount | select |     |     | &lt;/br&gt;| apiTimeAvg | select, orderBy |     |     | &lt;/br&gt;| apiTimeMin | select |     |     | &lt;/br&gt;| apiTimeMax | select |     |     | &lt;/br&gt;| serviceTimeAvg | select |     |     | &lt;/br&gt;| serviceTimeMin | select |     |     | &lt;/br&gt;| serviceTimeMax | select |     |     | &lt;/br&gt;. </param>
        <param name="top"> Number of records to return. </param>
        <param name="skip"> Number of records to skip. </param>
        <param name="orderBy"> OData order by query option. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists report records by subscription.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/bySubscription
            Operation Id: Reports_ListBySubscription
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.ReportRecordContract" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filter" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReportsByTime">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt; GetReportsByTime (string filter, TimeSpan interval, int? top = default, int? skip = default, string orderBy = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt; GetReportsByTime(string filter, valuetype System.TimeSpan interval, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, string orderBy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetReportsByTime(System.String,System.TimeSpan,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReportsByTime (filter As String, interval As TimeSpan, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional orderBy As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ReportRecordContract)" />
      <MemberSignature Language="F#" Value="abstract member GetReportsByTime : string * TimeSpan * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;&#xA;override this.GetReportsByTime : string * TimeSpan * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;" Usage="apiManagementServiceResource.GetReportsByTime (filter, interval, top, skip, orderBy, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="interval" Type="System.TimeSpan" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="orderBy" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> |   Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| timestamp | filter, select | ge, le |     | &lt;/br&gt;| interval | select |     |     | &lt;/br&gt;| apiRegion | filter | eq |     | &lt;/br&gt;| userId | filter | eq |     | &lt;/br&gt;| productId | filter | eq |     | &lt;/br&gt;| subscriptionId | filter | eq |     | &lt;/br&gt;| apiId | filter | eq |     | &lt;/br&gt;| operationId | filter | eq |     | &lt;/br&gt;| callCountSuccess | select |     |     | &lt;/br&gt;| callCountBlocked | select |     |     | &lt;/br&gt;| callCountFailed | select |     |     | &lt;/br&gt;| callCountOther | select |     |     | &lt;/br&gt;| bandwidth | select, orderBy |     |     | &lt;/br&gt;| cacheHitsCount | select |     |     | &lt;/br&gt;| cacheMissCount | select |     |     | &lt;/br&gt;| apiTimeAvg | select |     |     | &lt;/br&gt;| apiTimeMin | select |     |     | &lt;/br&gt;| apiTimeMax | select |     |     | &lt;/br&gt;| serviceTimeAvg | select |     |     | &lt;/br&gt;| serviceTimeMin | select |     |     | &lt;/br&gt;| serviceTimeMax | select |     |     | &lt;/br&gt;. </param>
        <param name="interval"> By time interval. Interval must be multiple of 15 minutes and may not be zero. The value should be in ISO  8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations).This code can be used to convert TimeSpan to a valid interval string: XmlConvert.ToString(new TimeSpan(hours, minutes, seconds)). </param>
        <param name="top"> Number of records to return. </param>
        <param name="skip"> Number of records to skip. </param>
        <param name="orderBy"> OData order by query option. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists report records by Time.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byTime
            Operation Id: Reports_ListByTime
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.ReportRecordContract" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filter" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReportsByTimeAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt; GetReportsByTimeAsync (string filter, TimeSpan interval, int? top = default, int? skip = default, string orderBy = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt; GetReportsByTimeAsync(string filter, valuetype System.TimeSpan interval, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, string orderBy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetReportsByTimeAsync(System.String,System.TimeSpan,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReportsByTimeAsync (filter As String, interval As TimeSpan, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional orderBy As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ReportRecordContract)" />
      <MemberSignature Language="F#" Value="abstract member GetReportsByTimeAsync : string * TimeSpan * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;&#xA;override this.GetReportsByTimeAsync : string * TimeSpan * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;" Usage="apiManagementServiceResource.GetReportsByTimeAsync (filter, interval, top, skip, orderBy, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="interval" Type="System.TimeSpan" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="orderBy" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> |   Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| timestamp | filter, select | ge, le |     | &lt;/br&gt;| interval | select |     |     | &lt;/br&gt;| apiRegion | filter | eq |     | &lt;/br&gt;| userId | filter | eq |     | &lt;/br&gt;| productId | filter | eq |     | &lt;/br&gt;| subscriptionId | filter | eq |     | &lt;/br&gt;| apiId | filter | eq |     | &lt;/br&gt;| operationId | filter | eq |     | &lt;/br&gt;| callCountSuccess | select |     |     | &lt;/br&gt;| callCountBlocked | select |     |     | &lt;/br&gt;| callCountFailed | select |     |     | &lt;/br&gt;| callCountOther | select |     |     | &lt;/br&gt;| bandwidth | select, orderBy |     |     | &lt;/br&gt;| cacheHitsCount | select |     |     | &lt;/br&gt;| cacheMissCount | select |     |     | &lt;/br&gt;| apiTimeAvg | select |     |     | &lt;/br&gt;| apiTimeMin | select |     |     | &lt;/br&gt;| apiTimeMax | select |     |     | &lt;/br&gt;| serviceTimeAvg | select |     |     | &lt;/br&gt;| serviceTimeMin | select |     |     | &lt;/br&gt;| serviceTimeMax | select |     |     | &lt;/br&gt;. </param>
        <param name="interval"> By time interval. Interval must be multiple of 15 minutes and may not be zero. The value should be in ISO  8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations).This code can be used to convert TimeSpan to a valid interval string: XmlConvert.ToString(new TimeSpan(hours, minutes, seconds)). </param>
        <param name="top"> Number of records to return. </param>
        <param name="skip"> Number of records to skip. </param>
        <param name="orderBy"> OData order by query option. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists report records by Time.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byTime
            Operation Id: Reports_ListByTime
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.ReportRecordContract" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filter" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReportsByUser">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt; GetReportsByUser (string filter, int? top = default, int? skip = default, string orderBy = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt; GetReportsByUser(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, string orderBy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetReportsByUser(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReportsByUser (filter As String, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional orderBy As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ReportRecordContract)" />
      <MemberSignature Language="F#" Value="abstract member GetReportsByUser : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;&#xA;override this.GetReportsByUser : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;" Usage="apiManagementServiceResource.GetReportsByUser (filter, top, skip, orderBy, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="orderBy" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> |   Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| timestamp | filter | ge, le |     | &lt;/br&gt;| displayName | select, orderBy |     |     | &lt;/br&gt;| userId | select, filter | eq |     | &lt;/br&gt;| apiRegion | filter | eq |     | &lt;/br&gt;| productId | filter | eq |     | &lt;/br&gt;| subscriptionId | filter | eq |     | &lt;/br&gt;| apiId | filter | eq |     | &lt;/br&gt;| operationId | filter | eq |     | &lt;/br&gt;| callCountSuccess | select, orderBy |     |     | &lt;/br&gt;| callCountBlocked | select, orderBy |     |     | &lt;/br&gt;| callCountFailed | select, orderBy |     |     | &lt;/br&gt;| callCountOther | select, orderBy |     |     | &lt;/br&gt;| callCountTotal | select, orderBy |     |     | &lt;/br&gt;| bandwidth | select, orderBy |     |     | &lt;/br&gt;| cacheHitsCount | select |     |     | &lt;/br&gt;| cacheMissCount | select |     |     | &lt;/br&gt;| apiTimeAvg | select, orderBy |     |     | &lt;/br&gt;| apiTimeMin | select |     |     | &lt;/br&gt;| apiTimeMax | select |     |     | &lt;/br&gt;| serviceTimeAvg | select |     |     | &lt;/br&gt;| serviceTimeMin | select |     |     | &lt;/br&gt;| serviceTimeMax | select |     |     | &lt;/br&gt;. </param>
        <param name="top"> Number of records to return. </param>
        <param name="skip"> Number of records to skip. </param>
        <param name="orderBy"> OData order by query option. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists report records by User.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byUser
            Operation Id: Reports_ListByUser
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.ReportRecordContract" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filter" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReportsByUserAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt; GetReportsByUserAsync (string filter, int? top = default, int? skip = default, string orderBy = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt; GetReportsByUserAsync(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, string orderBy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetReportsByUserAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReportsByUserAsync (filter As String, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional orderBy As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ReportRecordContract)" />
      <MemberSignature Language="F#" Value="abstract member GetReportsByUserAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;&#xA;override this.GetReportsByUserAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;" Usage="apiManagementServiceResource.GetReportsByUserAsync (filter, top, skip, orderBy, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ReportRecordContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="orderBy" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> |   Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| timestamp | filter | ge, le |     | &lt;/br&gt;| displayName | select, orderBy |     |     | &lt;/br&gt;| userId | select, filter | eq |     | &lt;/br&gt;| apiRegion | filter | eq |     | &lt;/br&gt;| productId | filter | eq |     | &lt;/br&gt;| subscriptionId | filter | eq |     | &lt;/br&gt;| apiId | filter | eq |     | &lt;/br&gt;| operationId | filter | eq |     | &lt;/br&gt;| callCountSuccess | select, orderBy |     |     | &lt;/br&gt;| callCountBlocked | select, orderBy |     |     | &lt;/br&gt;| callCountFailed | select, orderBy |     |     | &lt;/br&gt;| callCountOther | select, orderBy |     |     | &lt;/br&gt;| callCountTotal | select, orderBy |     |     | &lt;/br&gt;| bandwidth | select, orderBy |     |     | &lt;/br&gt;| cacheHitsCount | select |     |     | &lt;/br&gt;| cacheMissCount | select |     |     | &lt;/br&gt;| apiTimeAvg | select, orderBy |     |     | &lt;/br&gt;| apiTimeMin | select |     |     | &lt;/br&gt;| apiTimeMax | select |     |     | &lt;/br&gt;| serviceTimeAvg | select |     |     | &lt;/br&gt;| serviceTimeMin | select |     |     | &lt;/br&gt;| serviceTimeMax | select |     |     | &lt;/br&gt;. </param>
        <param name="top"> Number of records to return. </param>
        <param name="skip"> Number of records to skip. </param>
        <param name="orderBy"> OData order by query option. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists report records by User.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byUser
            Operation Id: Reports_ListByUser
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.ReportRecordContract" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filter" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSsoToken">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceGetSsoTokenResult&gt; GetSsoToken (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceGetSsoTokenResult&gt; GetSsoToken(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetSsoToken(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSsoToken (Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementServiceGetSsoTokenResult)" />
      <MemberSignature Language="F#" Value="abstract member GetSsoToken : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceGetSsoTokenResult&gt;&#xA;override this.GetSsoToken : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceGetSsoTokenResult&gt;" Usage="apiManagementServiceResource.GetSsoToken cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceGetSsoTokenResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the Single-Sign-On token for the API Management Service which is valid for 5 Minutes.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/getssotoken
            Operation Id: ApiManagementService_GetSsoToken
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSsoTokenAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceGetSsoTokenResult&gt;&gt; GetSsoTokenAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceGetSsoTokenResult&gt;&gt; GetSsoTokenAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetSsoTokenAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSsoTokenAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementServiceGetSsoTokenResult))" />
      <MemberSignature Language="F#" Value="abstract member GetSsoTokenAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceGetSsoTokenResult&gt;&gt;&#xA;override this.GetSsoTokenAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceGetSsoTokenResult&gt;&gt;" Usage="apiManagementServiceResource.GetSsoTokenAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceGetSsoTokenResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the Single-Sign-On token for the API Management Service which is valid for 5 Minutes.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/getssotoken
            Operation Id: ApiManagementService_GetSsoToken
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTagResources">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt; GetTagResources (string filter = default, int? top = default, int? skip = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt; GetTagResources(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetTagResources(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTagResources (Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of TagResourceContractDetails)" />
      <MemberSignature Language="F#" Value="abstract member GetTagResources : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt;&#xA;override this.GetTagResources : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt;" Usage="apiManagementServiceResource.GetTagResources (filter, top, skip, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> |     Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| aid | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| apiName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| apiRevision | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| method | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| urlTemplate | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| terms | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| state | filter | eq |     |&lt;/br&gt;| isCurrent | filter | eq |     |&lt;/br&gt;. </param>
        <param name="top"> Number of records to return. </param>
        <param name="skip"> Number of records to skip. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists a collection of resources associated with tags.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tagResources
            Operation Id: TagResource_ListByService
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTagResourcesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt; GetTagResourcesAsync (string filter = default, int? top = default, int? skip = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt; GetTagResourcesAsync(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetTagResourcesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTagResourcesAsync (Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of TagResourceContractDetails)" />
      <MemberSignature Language="F#" Value="abstract member GetTagResourcesAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt;&#xA;override this.GetTagResourcesAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt;" Usage="apiManagementServiceResource.GetTagResourcesAsync (filter, top, skip, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> |     Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| aid | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| apiName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| apiRevision | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| method | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| urlTemplate | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| terms | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| state | filter | eq |     |&lt;/br&gt;| isCurrent | filter | eq |     |&lt;/br&gt;. </param>
        <param name="top"> Number of records to return. </param>
        <param name="skip"> Number of records to skip. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists a collection of resources associated with tags.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tagResources
            Operation Id: TagResource_ListByService
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTenantAccessInfo">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.TenantAccessInfoResource&gt; GetTenantAccessInfo (Azure.ResourceManager.ApiManagement.Models.AccessName accessName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.TenantAccessInfoResource&gt; GetTenantAccessInfo(valuetype Azure.ResourceManager.ApiManagement.Models.AccessName accessName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetTenantAccessInfo(Azure.ResourceManager.ApiManagement.Models.AccessName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTenantAccessInfo (accessName As AccessName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TenantAccessInfoResource)" />
      <MemberSignature Language="F#" Value="abstract member GetTenantAccessInfo : Azure.ResourceManager.ApiManagement.Models.AccessName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.TenantAccessInfoResource&gt;&#xA;override this.GetTenantAccessInfo : Azure.ResourceManager.ApiManagement.Models.AccessName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.TenantAccessInfoResource&gt;" Usage="apiManagementServiceResource.GetTenantAccessInfo (accessName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.TenantAccessInfoResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessName" Type="Azure.ResourceManager.ApiManagement.Models.AccessName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="accessName"> The identifier of the Access configuration. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get tenant access information details without secrets.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}
            Operation Id: TenantAccess_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTenantAccessInfoAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.TenantAccessInfoResource&gt;&gt; GetTenantAccessInfoAsync (Azure.ResourceManager.ApiManagement.Models.AccessName accessName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.TenantAccessInfoResource&gt;&gt; GetTenantAccessInfoAsync(valuetype Azure.ResourceManager.ApiManagement.Models.AccessName accessName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetTenantAccessInfoAsync(Azure.ResourceManager.ApiManagement.Models.AccessName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTenantAccessInfoAsync (accessName As AccessName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TenantAccessInfoResource))" />
      <MemberSignature Language="F#" Value="abstract member GetTenantAccessInfoAsync : Azure.ResourceManager.ApiManagement.Models.AccessName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.TenantAccessInfoResource&gt;&gt;&#xA;override this.GetTenantAccessInfoAsync : Azure.ResourceManager.ApiManagement.Models.AccessName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.TenantAccessInfoResource&gt;&gt;" Usage="apiManagementServiceResource.GetTenantAccessInfoAsync (accessName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.TenantAccessInfoResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessName" Type="Azure.ResourceManager.ApiManagement.Models.AccessName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="accessName"> The identifier of the Access configuration. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get tenant access information details without secrets.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}
            Operation Id: TenantAccess_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTenantAccessInfos">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.TenantAccessInfoCollection GetTenantAccessInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.TenantAccessInfoCollection GetTenantAccessInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetTenantAccessInfos" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTenantAccessInfos () As TenantAccessInfoCollection" />
      <MemberSignature Language="F#" Value="abstract member GetTenantAccessInfos : unit -&gt; Azure.ResourceManager.ApiManagement.TenantAccessInfoCollection&#xA;override this.GetTenantAccessInfos : unit -&gt; Azure.ResourceManager.ApiManagement.TenantAccessInfoCollection" Usage="apiManagementServiceResource.GetTenantAccessInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.TenantAccessInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of TenantAccessInfoResources in the ApiManagementService. </summary>
        <returns> An object representing collection of TenantAccessInfoResources and their operations over a TenantAccessInfoResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTenantConfigurationSyncState">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.TenantConfigurationSyncStateContract&gt; GetTenantConfigurationSyncState (Azure.ResourceManager.ApiManagement.Models.ConfigurationName configurationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.Models.TenantConfigurationSyncStateContract&gt; GetTenantConfigurationSyncState(valuetype Azure.ResourceManager.ApiManagement.Models.ConfigurationName configurationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetTenantConfigurationSyncState(Azure.ResourceManager.ApiManagement.Models.ConfigurationName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTenantConfigurationSyncState (configurationName As ConfigurationName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TenantConfigurationSyncStateContract)" />
      <MemberSignature Language="F#" Value="abstract member GetTenantConfigurationSyncState : Azure.ResourceManager.ApiManagement.Models.ConfigurationName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.TenantConfigurationSyncStateContract&gt;&#xA;override this.GetTenantConfigurationSyncState : Azure.ResourceManager.ApiManagement.Models.ConfigurationName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.TenantConfigurationSyncStateContract&gt;" Usage="apiManagementServiceResource.GetTenantConfigurationSyncState (configurationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.TenantConfigurationSyncStateContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configurationName" Type="Azure.ResourceManager.ApiManagement.Models.ConfigurationName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="configurationName"> The identifier of the Git Configuration Operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the status of the most recent synchronization between the configuration database and the Git repository.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/syncState
            Operation Id: TenantConfiguration_GetSyncState
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTenantConfigurationSyncStateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.TenantConfigurationSyncStateContract&gt;&gt; GetTenantConfigurationSyncStateAsync (Azure.ResourceManager.ApiManagement.Models.ConfigurationName configurationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.Models.TenantConfigurationSyncStateContract&gt;&gt; GetTenantConfigurationSyncStateAsync(valuetype Azure.ResourceManager.ApiManagement.Models.ConfigurationName configurationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.GetTenantConfigurationSyncStateAsync(Azure.ResourceManager.ApiManagement.Models.ConfigurationName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTenantConfigurationSyncStateAsync (configurationName As ConfigurationName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TenantConfigurationSyncStateContract))" />
      <MemberSignature Language="F#" Value="abstract member GetTenantConfigurationSyncStateAsync : Azure.ResourceManager.ApiManagement.Models.ConfigurationName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.TenantConfigurationSyncStateContract&gt;&gt;&#xA;override this.GetTenantConfigurationSyncStateAsync : Azure.ResourceManager.ApiManagement.Models.ConfigurationName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.TenantConfigurationSyncStateContract&gt;&gt;" Usage="apiManagementServiceResource.GetTenantConfigurationSyncStateAsync (configurationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.TenantConfigurationSyncStateContract&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configurationName" Type="Azure.ResourceManager.ApiManagement.Models.ConfigurationName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="configurationName"> The identifier of the Git Configuration Operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the status of the most recent synchronization between the configuration database and the Git repository.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/syncState
            Operation Id: TenantConfiguration_GetSyncState
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformConnectivityCheckAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.ConnectivityCheckResult&gt; PerformConnectivityCheckAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.ApiManagement.Models.ConnectivityCheckContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.ApiManagement.Models.ConnectivityCheckResult&gt; PerformConnectivityCheckAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.ApiManagement.Models.ConnectivityCheckContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.PerformConnectivityCheckAsync(Azure.WaitUntil,Azure.ResourceManager.ApiManagement.Models.ConnectivityCheckContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PerformConnectivityCheckAsync (waitUntil As WaitUntil, content As ConnectivityCheckContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of ConnectivityCheckResult)" />
      <MemberSignature Language="F#" Value="abstract member PerformConnectivityCheckAsync : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ConnectivityCheckContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.ConnectivityCheckResult&gt;&#xA;override this.PerformConnectivityCheckAsync : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ConnectivityCheckContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.ConnectivityCheckResult&gt;" Usage="apiManagementServiceResource.PerformConnectivityCheckAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.ConnectivityCheckResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.ApiManagement.Models.ConnectivityCheckContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Connectivity Check request parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Performs a connectivity check between the API Management service and a given destination, and returns metrics for the connection, as well as errors encountered while trying to establish it.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/connectivityCheck
            Operation Id: PerformConnectivityCheckAsync
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="PerformConnectivityCheckAsyncAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.ConnectivityCheckResult&gt;&gt; PerformConnectivityCheckAsyncAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.ApiManagement.Models.ConnectivityCheckContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.ApiManagement.Models.ConnectivityCheckResult&gt;&gt; PerformConnectivityCheckAsyncAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.ApiManagement.Models.ConnectivityCheckContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.PerformConnectivityCheckAsyncAsync(Azure.WaitUntil,Azure.ResourceManager.ApiManagement.Models.ConnectivityCheckContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PerformConnectivityCheckAsyncAsync (waitUntil As WaitUntil, content As ConnectivityCheckContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of ConnectivityCheckResult))" />
      <MemberSignature Language="F#" Value="abstract member PerformConnectivityCheckAsyncAsync : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ConnectivityCheckContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.ConnectivityCheckResult&gt;&gt;&#xA;override this.PerformConnectivityCheckAsyncAsync : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ConnectivityCheckContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.ConnectivityCheckResult&gt;&gt;" Usage="apiManagementServiceResource.PerformConnectivityCheckAsyncAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.ConnectivityCheckResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.ApiManagement.Models.ConnectivityCheckContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Connectivity Check request parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Performs a connectivity check between the API Management service and a given destination, and returns metrics for the connection, as well as errors encountered while trying to establish it.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/connectivityCheck
            Operation Id: PerformConnectivityCheckAsync
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt; RemoveTag (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt; RemoveTag(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.RemoveTag(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTag (key As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementServiceResource)" />
      <MemberSignature Language="F#" Value="abstract member RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&#xA;override this.RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;" Usage="apiManagementServiceResource.RemoveTag (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}
            Operation Id: ApiManagementService_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt; RemoveTagAsync (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt; RemoveTagAsync(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTagAsync (key As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementServiceResource))" />
      <MemberSignature Language="F#" Value="abstract member RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt;&#xA;override this.RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt;" Usage="apiManagementServiceResource.RemoveTagAsync (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}
            Operation Id: ApiManagementService_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Restore">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt; Restore (Azure.WaitUntil waitUntil, Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceBackupRestoreContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt; Restore(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceBackupRestoreContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.Restore(Azure.WaitUntil,Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceBackupRestoreContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Restore (waitUntil As WaitUntil, content As ApiManagementServiceBackupRestoreContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of ApiManagementServiceResource)" />
      <MemberSignature Language="F#" Value="abstract member Restore : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceBackupRestoreContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&#xA;override this.Restore : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceBackupRestoreContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;" Usage="apiManagementServiceResource.Restore (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceBackupRestoreContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Parameters supplied to the Restore API Management service from backup operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Restores a backup of an API Management service created using the ApiManagementService_Backup operation on the current service. This is a long running operation and could take several minutes to complete.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/restore
            Operation Id: ApiManagementService_Restore
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RestoreAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt; RestoreAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceBackupRestoreContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt; RestoreAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceBackupRestoreContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.RestoreAsync(Azure.WaitUntil,Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceBackupRestoreContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RestoreAsync (waitUntil As WaitUntil, content As ApiManagementServiceBackupRestoreContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of ApiManagementServiceResource))" />
      <MemberSignature Language="F#" Value="abstract member RestoreAsync : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceBackupRestoreContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt;&#xA;override this.RestoreAsync : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceBackupRestoreContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt;" Usage="apiManagementServiceResource.RestoreAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.ApiManagement.Models.ApiManagementServiceBackupRestoreContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Parameters supplied to the Restore API Management service from backup operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Restores a backup of an API Management service created using the ApiManagementService_Backup operation on the current service. This is a long running operation and could take several minutes to complete.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/restore
            Operation Id: ApiManagementService_Restore
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SaveTenantConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.GitOperationResultContractData&gt; SaveTenantConfiguration (Azure.WaitUntil waitUntil, Azure.ResourceManager.ApiManagement.Models.ConfigurationName configurationName, Azure.ResourceManager.ApiManagement.Models.ConfigurationSaveContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.ApiManagement.Models.GitOperationResultContractData&gt; SaveTenantConfiguration(valuetype Azure.WaitUntil waitUntil, valuetype Azure.ResourceManager.ApiManagement.Models.ConfigurationName configurationName, class Azure.ResourceManager.ApiManagement.Models.ConfigurationSaveContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.SaveTenantConfiguration(Azure.WaitUntil,Azure.ResourceManager.ApiManagement.Models.ConfigurationName,Azure.ResourceManager.ApiManagement.Models.ConfigurationSaveContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SaveTenantConfiguration (waitUntil As WaitUntil, configurationName As ConfigurationName, content As ConfigurationSaveContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of GitOperationResultContractData)" />
      <MemberSignature Language="F#" Value="abstract member SaveTenantConfiguration : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ConfigurationName * Azure.ResourceManager.ApiManagement.Models.ConfigurationSaveContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.GitOperationResultContractData&gt;&#xA;override this.SaveTenantConfiguration : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ConfigurationName * Azure.ResourceManager.ApiManagement.Models.ConfigurationSaveContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.GitOperationResultContractData&gt;" Usage="apiManagementServiceResource.SaveTenantConfiguration (waitUntil, configurationName, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.GitOperationResultContractData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="configurationName" Type="Azure.ResourceManager.ApiManagement.Models.ConfigurationName" />
        <Parameter Name="content" Type="Azure.ResourceManager.ApiManagement.Models.ConfigurationSaveContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="configurationName"> The identifier of the Git Configuration Operation. </param>
        <param name="content"> Save Configuration parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            This operation creates a commit with the current configuration snapshot to the specified branch in the repository. This is a long running operation and could take several minutes to complete.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/save
            Operation Id: TenantConfiguration_Save
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SaveTenantConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.GitOperationResultContractData&gt;&gt; SaveTenantConfigurationAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.ApiManagement.Models.ConfigurationName configurationName, Azure.ResourceManager.ApiManagement.Models.ConfigurationSaveContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.ApiManagement.Models.GitOperationResultContractData&gt;&gt; SaveTenantConfigurationAsync(valuetype Azure.WaitUntil waitUntil, valuetype Azure.ResourceManager.ApiManagement.Models.ConfigurationName configurationName, class Azure.ResourceManager.ApiManagement.Models.ConfigurationSaveContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.SaveTenantConfigurationAsync(Azure.WaitUntil,Azure.ResourceManager.ApiManagement.Models.ConfigurationName,Azure.ResourceManager.ApiManagement.Models.ConfigurationSaveContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SaveTenantConfigurationAsync (waitUntil As WaitUntil, configurationName As ConfigurationName, content As ConfigurationSaveContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of GitOperationResultContractData))" />
      <MemberSignature Language="F#" Value="abstract member SaveTenantConfigurationAsync : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ConfigurationName * Azure.ResourceManager.ApiManagement.Models.ConfigurationSaveContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.GitOperationResultContractData&gt;&gt;&#xA;override this.SaveTenantConfigurationAsync : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ConfigurationName * Azure.ResourceManager.ApiManagement.Models.ConfigurationSaveContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.GitOperationResultContractData&gt;&gt;" Usage="apiManagementServiceResource.SaveTenantConfigurationAsync (waitUntil, configurationName, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.GitOperationResultContractData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="configurationName" Type="Azure.ResourceManager.ApiManagement.Models.ConfigurationName" />
        <Parameter Name="content" Type="Azure.ResourceManager.ApiManagement.Models.ConfigurationSaveContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="configurationName"> The identifier of the Git Configuration Operation. </param>
        <param name="content"> Save Configuration parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            This operation creates a commit with the current configuration snapshot to the specified branch in the repository. This is a long running operation and could take several minutes to complete.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/save
            Operation Id: TenantConfiguration_Save
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SetTags">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt; SetTags (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt; SetTags(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTags (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiManagementServiceResource)" />
      <MemberSignature Language="F#" Value="abstract member SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&#xA;override this.SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;" Usage="apiManagementServiceResource.SetTags (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}
            Operation Id: ApiManagementService_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SetTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt; SetTagsAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt; SetTagsAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTagsAsync (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiManagementServiceResource))" />
      <MemberSignature Language="F#" Value="abstract member SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt;&#xA;override this.SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt;" Usage="apiManagementServiceResource.SetTagsAsync (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}
            Operation Id: ApiManagementService_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt; Update (Azure.WaitUntil waitUntil, Azure.ResourceManager.ApiManagement.Models.ApiManagementServicePatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt; Update(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.ApiManagement.Models.ApiManagementServicePatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.Update(Azure.WaitUntil,Azure.ResourceManager.ApiManagement.Models.ApiManagementServicePatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (waitUntil As WaitUntil, patch As ApiManagementServicePatch, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of ApiManagementServiceResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ApiManagementServicePatch * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&#xA;override this.Update : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ApiManagementServicePatch * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;" Usage="apiManagementServiceResource.Update (waitUntil, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="patch" Type="Azure.ResourceManager.ApiManagement.Models.ApiManagementServicePatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="patch"> Parameters supplied to the CreateOrUpdate API Management service operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates an existing API Management service.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}
            Operation Id: ApiManagementService_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt; UpdateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.ApiManagement.Models.ApiManagementServicePatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt; UpdateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.ApiManagement.Models.ApiManagementServicePatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.ApiManagement.Models.ApiManagementServicePatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (waitUntil As WaitUntil, patch As ApiManagementServicePatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of ApiManagementServiceResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ApiManagementServicePatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ApiManagementServicePatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt;" Usage="apiManagementServiceResource.UpdateAsync (waitUntil, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ApiManagementServiceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="patch" Type="Azure.ResourceManager.ApiManagement.Models.ApiManagementServicePatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="patch"> Parameters supplied to the CreateOrUpdate API Management service operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates an existing API Management service.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}
            Operation Id: ApiManagementService_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateQuotaByCounterKeys">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt; UpdateQuotaByCounterKeys (string quotaCounterKey, Azure.ResourceManager.ApiManagement.Models.QuotaCounterValueUpdateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt; UpdateQuotaByCounterKeys(string quotaCounterKey, class Azure.ResourceManager.ApiManagement.Models.QuotaCounterValueUpdateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.UpdateQuotaByCounterKeys(System.String,Azure.ResourceManager.ApiManagement.Models.QuotaCounterValueUpdateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateQuotaByCounterKeys (quotaCounterKey As String, content As QuotaCounterValueUpdateContent, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of QuotaCounterContract)" />
      <MemberSignature Language="F#" Value="abstract member UpdateQuotaByCounterKeys : string * Azure.ResourceManager.ApiManagement.Models.QuotaCounterValueUpdateContent * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt;&#xA;override this.UpdateQuotaByCounterKeys : string * Azure.ResourceManager.ApiManagement.Models.QuotaCounterValueUpdateContent * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt;" Usage="apiManagementServiceResource.UpdateQuotaByCounterKeys (quotaCounterKey, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotaCounterKey" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ApiManagement.Models.QuotaCounterValueUpdateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="quotaCounterKey"> Quota counter key identifier.This is the result of expression defined in counter-key attribute of the quota-by-key policy.For Example, if you specify counter-key="boo" in the policy, then it’s accessible by "boo" counter key. But if it’s defined as counter-key="@("b"+"a")" then it will be accessible by "ba" key. </param>
        <param name="content"> The value of the quota counter to be applied to all quota counter periods. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates all the quota counter values specified with the existing quota counter key to a value in the specified service instance. This should be used for reset of the quota counter values.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}
            Operation Id: QuotaByCounterKeys_Update
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="quotaCounterKey" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="quotaCounterKey" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateQuotaByCounterKeysAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt; UpdateQuotaByCounterKeysAsync (string quotaCounterKey, Azure.ResourceManager.ApiManagement.Models.QuotaCounterValueUpdateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt; UpdateQuotaByCounterKeysAsync(string quotaCounterKey, class Azure.ResourceManager.ApiManagement.Models.QuotaCounterValueUpdateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.UpdateQuotaByCounterKeysAsync(System.String,Azure.ResourceManager.ApiManagement.Models.QuotaCounterValueUpdateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateQuotaByCounterKeysAsync (quotaCounterKey As String, content As QuotaCounterValueUpdateContent, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of QuotaCounterContract)" />
      <MemberSignature Language="F#" Value="abstract member UpdateQuotaByCounterKeysAsync : string * Azure.ResourceManager.ApiManagement.Models.QuotaCounterValueUpdateContent * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt;&#xA;override this.UpdateQuotaByCounterKeysAsync : string * Azure.ResourceManager.ApiManagement.Models.QuotaCounterValueUpdateContent * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt;" Usage="apiManagementServiceResource.UpdateQuotaByCounterKeysAsync (quotaCounterKey, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotaCounterKey" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ApiManagement.Models.QuotaCounterValueUpdateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="quotaCounterKey"> Quota counter key identifier.This is the result of expression defined in counter-key attribute of the quota-by-key policy.For Example, if you specify counter-key="boo" in the policy, then it’s accessible by "boo" counter key. But if it’s defined as counter-key="@("b"+"a")" then it will be accessible by "ba" key. </param>
        <param name="content"> The value of the quota counter to be applied to all quota counter periods. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates all the quota counter values specified with the existing quota counter key to a value in the specified service instance. This should be used for reset of the quota counter values.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}
            Operation Id: QuotaByCounterKeys_Update
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="quotaCounterKey" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="quotaCounterKey" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateQuotaByPeriodKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt; UpdateQuotaByPeriodKey (string quotaCounterKey, string quotaPeriodKey, Azure.ResourceManager.ApiManagement.Models.QuotaCounterValueUpdateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt; UpdateQuotaByPeriodKey(string quotaCounterKey, string quotaPeriodKey, class Azure.ResourceManager.ApiManagement.Models.QuotaCounterValueUpdateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.UpdateQuotaByPeriodKey(System.String,System.String,Azure.ResourceManager.ApiManagement.Models.QuotaCounterValueUpdateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateQuotaByPeriodKey (quotaCounterKey As String, quotaPeriodKey As String, content As QuotaCounterValueUpdateContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of QuotaCounterContract)" />
      <MemberSignature Language="F#" Value="abstract member UpdateQuotaByPeriodKey : string * string * Azure.ResourceManager.ApiManagement.Models.QuotaCounterValueUpdateContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt;&#xA;override this.UpdateQuotaByPeriodKey : string * string * Azure.ResourceManager.ApiManagement.Models.QuotaCounterValueUpdateContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt;" Usage="apiManagementServiceResource.UpdateQuotaByPeriodKey (quotaCounterKey, quotaPeriodKey, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotaCounterKey" Type="System.String" />
        <Parameter Name="quotaPeriodKey" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ApiManagement.Models.QuotaCounterValueUpdateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="quotaCounterKey"> Quota counter key identifier.This is the result of expression defined in counter-key attribute of the quota-by-key policy.For Example, if you specify counter-key="boo" in the policy, then it’s accessible by "boo" counter key. But if it’s defined as counter-key="@("b"+"a")" then it will be accessible by "ba" key. </param>
        <param name="quotaPeriodKey"> Quota period key identifier. </param>
        <param name="content"> The value of the Quota counter to be applied on the specified period. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates an existing quota counter value in the specified service instance.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/periods/{quotaPeriodKey}
            Operation Id: QuotaByPeriodKeys_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="quotaCounterKey" /> or <paramref name="quotaPeriodKey" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="quotaCounterKey" />, <paramref name="quotaPeriodKey" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateQuotaByPeriodKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt;&gt; UpdateQuotaByPeriodKeyAsync (string quotaCounterKey, string quotaPeriodKey, Azure.ResourceManager.ApiManagement.Models.QuotaCounterValueUpdateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt;&gt; UpdateQuotaByPeriodKeyAsync(string quotaCounterKey, string quotaPeriodKey, class Azure.ResourceManager.ApiManagement.Models.QuotaCounterValueUpdateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.UpdateQuotaByPeriodKeyAsync(System.String,System.String,Azure.ResourceManager.ApiManagement.Models.QuotaCounterValueUpdateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateQuotaByPeriodKeyAsync (quotaCounterKey As String, quotaPeriodKey As String, content As QuotaCounterValueUpdateContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of QuotaCounterContract))" />
      <MemberSignature Language="F#" Value="abstract member UpdateQuotaByPeriodKeyAsync : string * string * Azure.ResourceManager.ApiManagement.Models.QuotaCounterValueUpdateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt;&gt;&#xA;override this.UpdateQuotaByPeriodKeyAsync : string * string * Azure.ResourceManager.ApiManagement.Models.QuotaCounterValueUpdateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt;&gt;" Usage="apiManagementServiceResource.UpdateQuotaByPeriodKeyAsync (quotaCounterKey, quotaPeriodKey, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.QuotaCounterContract&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotaCounterKey" Type="System.String" />
        <Parameter Name="quotaPeriodKey" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.ApiManagement.Models.QuotaCounterValueUpdateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="quotaCounterKey"> Quota counter key identifier.This is the result of expression defined in counter-key attribute of the quota-by-key policy.For Example, if you specify counter-key="boo" in the policy, then it’s accessible by "boo" counter key. But if it’s defined as counter-key="@("b"+"a")" then it will be accessible by "ba" key. </param>
        <param name="quotaPeriodKey"> Quota period key identifier. </param>
        <param name="content"> The value of the Quota counter to be applied on the specified period. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates an existing quota counter value in the specified service instance.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/periods/{quotaPeriodKey}
            Operation Id: QuotaByPeriodKeys_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="quotaCounterKey" /> or <paramref name="quotaPeriodKey" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="quotaCounterKey" />, <paramref name="quotaPeriodKey" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateTenantConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.GitOperationResultContractData&gt; ValidateTenantConfiguration (Azure.WaitUntil waitUntil, Azure.ResourceManager.ApiManagement.Models.ConfigurationName configurationName, Azure.ResourceManager.ApiManagement.Models.ConfigurationDeployContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.ApiManagement.Models.GitOperationResultContractData&gt; ValidateTenantConfiguration(valuetype Azure.WaitUntil waitUntil, valuetype Azure.ResourceManager.ApiManagement.Models.ConfigurationName configurationName, class Azure.ResourceManager.ApiManagement.Models.ConfigurationDeployContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.ValidateTenantConfiguration(Azure.WaitUntil,Azure.ResourceManager.ApiManagement.Models.ConfigurationName,Azure.ResourceManager.ApiManagement.Models.ConfigurationDeployContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateTenantConfiguration (waitUntil As WaitUntil, configurationName As ConfigurationName, content As ConfigurationDeployContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of GitOperationResultContractData)" />
      <MemberSignature Language="F#" Value="abstract member ValidateTenantConfiguration : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ConfigurationName * Azure.ResourceManager.ApiManagement.Models.ConfigurationDeployContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.GitOperationResultContractData&gt;&#xA;override this.ValidateTenantConfiguration : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ConfigurationName * Azure.ResourceManager.ApiManagement.Models.ConfigurationDeployContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.GitOperationResultContractData&gt;" Usage="apiManagementServiceResource.ValidateTenantConfiguration (waitUntil, configurationName, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.GitOperationResultContractData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="configurationName" Type="Azure.ResourceManager.ApiManagement.Models.ConfigurationName" />
        <Parameter Name="content" Type="Azure.ResourceManager.ApiManagement.Models.ConfigurationDeployContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="configurationName"> The identifier of the Git Configuration Operation. </param>
        <param name="content"> Validate Configuration parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            This operation validates the changes in the specified Git branch. This is a long running operation and could take several minutes to complete.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/validate
            Operation Id: TenantConfiguration_Validate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateTenantConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.GitOperationResultContractData&gt;&gt; ValidateTenantConfigurationAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.ApiManagement.Models.ConfigurationName configurationName, Azure.ResourceManager.ApiManagement.Models.ConfigurationDeployContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.ApiManagement.Models.GitOperationResultContractData&gt;&gt; ValidateTenantConfigurationAsync(valuetype Azure.WaitUntil waitUntil, valuetype Azure.ResourceManager.ApiManagement.Models.ConfigurationName configurationName, class Azure.ResourceManager.ApiManagement.Models.ConfigurationDeployContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource.ValidateTenantConfigurationAsync(Azure.WaitUntil,Azure.ResourceManager.ApiManagement.Models.ConfigurationName,Azure.ResourceManager.ApiManagement.Models.ConfigurationDeployContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateTenantConfigurationAsync (waitUntil As WaitUntil, configurationName As ConfigurationName, content As ConfigurationDeployContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of GitOperationResultContractData))" />
      <MemberSignature Language="F#" Value="abstract member ValidateTenantConfigurationAsync : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ConfigurationName * Azure.ResourceManager.ApiManagement.Models.ConfigurationDeployContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.GitOperationResultContractData&gt;&gt;&#xA;override this.ValidateTenantConfigurationAsync : Azure.WaitUntil * Azure.ResourceManager.ApiManagement.Models.ConfigurationName * Azure.ResourceManager.ApiManagement.Models.ConfigurationDeployContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.GitOperationResultContractData&gt;&gt;" Usage="apiManagementServiceResource.ValidateTenantConfigurationAsync (waitUntil, configurationName, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.Models.GitOperationResultContractData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="configurationName" Type="Azure.ResourceManager.ApiManagement.Models.ConfigurationName" />
        <Parameter Name="content" Type="Azure.ResourceManager.ApiManagement.Models.ConfigurationDeployContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="configurationName"> The identifier of the Git Configuration Operation. </param>
        <param name="content"> Validate Configuration parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            This operation validates the changes in the specified Git branch. This is a long running operation and could take several minutes to complete.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/validate
            Operation Id: TenantConfiguration_Validate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
