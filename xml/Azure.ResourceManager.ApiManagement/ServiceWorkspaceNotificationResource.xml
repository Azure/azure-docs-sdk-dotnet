<Type Name="ServiceWorkspaceNotificationResource" FullName="Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource">
  <TypeSignature Language="C#" Value="public class ServiceWorkspaceNotificationResource : Azure.ResourceManager.ArmResource, System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceWorkspaceNotificationResource extends Azure.ResourceManager.ArmResource implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceWorkspaceNotificationResource&#xA;Inherits ArmResource&#xA;Implements IJsonModel(Of ApiManagementNotificationData), IPersistableModel(Of ApiManagementNotificationData)" />
  <TypeSignature Language="F#" Value="type ServiceWorkspaceNotificationResource = class&#xA;    inherit ArmResource&#xA;    interface IJsonModel&lt;ApiManagementNotificationData&gt;&#xA;    interface IPersistableModel&lt;ApiManagementNotificationData&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A Class representing a ServiceWorkspaceNotification along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetServiceWorkspaceNotificationResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.ApiManagement.WorkspaceContractResource" /> using the GetServiceWorkspaceNotification method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ServiceWorkspaceNotificationResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckEntityExistsWorkspaceNotificationRecipientEmail">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; CheckEntityExistsWorkspaceNotificationRecipientEmail (string email, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; CheckEntityExistsWorkspaceNotificationRecipientEmail(string email, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.CheckEntityExistsWorkspaceNotificationRecipientEmail(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckEntityExistsWorkspaceNotificationRecipientEmail (email As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member CheckEntityExistsWorkspaceNotificationRecipientEmail : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.CheckEntityExistsWorkspaceNotificationRecipientEmail : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="serviceWorkspaceNotificationResource.CheckEntityExistsWorkspaceNotificationRecipientEmail (email, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="email"> Email identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Determine if Notification Recipient Email subscribed to the notification.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}/recipientEmails/{email}</description></item><item><term>Operation Id</term><description>WorkspaceNotificationRecipientEmail_CheckEntityExists</description></item><item><term>Default Api Version</term><description>2023-03-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="email" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="email" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckEntityExistsWorkspaceNotificationRecipientEmailAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; CheckEntityExistsWorkspaceNotificationRecipientEmailAsync (string email, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; CheckEntityExistsWorkspaceNotificationRecipientEmailAsync(string email, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.CheckEntityExistsWorkspaceNotificationRecipientEmailAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckEntityExistsWorkspaceNotificationRecipientEmailAsync (email As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member CheckEntityExistsWorkspaceNotificationRecipientEmailAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.CheckEntityExistsWorkspaceNotificationRecipientEmailAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="serviceWorkspaceNotificationResource.CheckEntityExistsWorkspaceNotificationRecipientEmailAsync (email, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="email"> Email identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Determine if Notification Recipient Email subscribed to the notification.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}/recipientEmails/{email}</description></item><item><term>Operation Id</term><description>WorkspaceNotificationRecipientEmail_CheckEntityExists</description></item><item><term>Default Api Version</term><description>2023-03-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="email" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="email" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckEntityExistsWorkspaceNotificationRecipientUser">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; CheckEntityExistsWorkspaceNotificationRecipientUser (string userId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; CheckEntityExistsWorkspaceNotificationRecipientUser(string userId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.CheckEntityExistsWorkspaceNotificationRecipientUser(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckEntityExistsWorkspaceNotificationRecipientUser (userId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member CheckEntityExistsWorkspaceNotificationRecipientUser : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.CheckEntityExistsWorkspaceNotificationRecipientUser : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="serviceWorkspaceNotificationResource.CheckEntityExistsWorkspaceNotificationRecipientUser (userId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userId"> User identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Determine if the Notification Recipient User is subscribed to the notification.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}/recipientUsers/{userId}</description></item><item><term>Operation Id</term><description>WorkspaceNotificationRecipientUser_CheckEntityExists</description></item><item><term>Default Api Version</term><description>2023-03-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="userId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckEntityExistsWorkspaceNotificationRecipientUserAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; CheckEntityExistsWorkspaceNotificationRecipientUserAsync (string userId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; CheckEntityExistsWorkspaceNotificationRecipientUserAsync(string userId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.CheckEntityExistsWorkspaceNotificationRecipientUserAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckEntityExistsWorkspaceNotificationRecipientUserAsync (userId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member CheckEntityExistsWorkspaceNotificationRecipientUserAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.CheckEntityExistsWorkspaceNotificationRecipientUserAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="serviceWorkspaceNotificationResource.CheckEntityExistsWorkspaceNotificationRecipientUserAsync (userId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userId"> User identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Determine if the Notification Recipient User is subscribed to the notification.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}/recipientUsers/{userId}</description></item><item><term>Operation Id</term><description>WorkspaceNotificationRecipientUser_CheckEntityExists</description></item><item><term>Default Api Version</term><description>2023-03-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="userId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateWorkspaceNotificationRecipientEmail">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.RecipientEmailContract&gt; CreateOrUpdateWorkspaceNotificationRecipientEmail (string email, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.Models.RecipientEmailContract&gt; CreateOrUpdateWorkspaceNotificationRecipientEmail(string email, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.CreateOrUpdateWorkspaceNotificationRecipientEmail(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateWorkspaceNotificationRecipientEmail (email As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RecipientEmailContract)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateWorkspaceNotificationRecipientEmail : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.RecipientEmailContract&gt;&#xA;override this.CreateOrUpdateWorkspaceNotificationRecipientEmail : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.RecipientEmailContract&gt;" Usage="serviceWorkspaceNotificationResource.CreateOrUpdateWorkspaceNotificationRecipientEmail (email, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.RecipientEmailContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="email"> Email identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Adds the Email address to the list of Recipients for the Notification.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}/recipientEmails/{email}</description></item><item><term>Operation Id</term><description>WorkspaceNotificationRecipientEmail_CreateOrUpdate</description></item><item><term>Default Api Version</term><description>2023-03-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="email" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="email" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateWorkspaceNotificationRecipientEmailAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.RecipientEmailContract&gt;&gt; CreateOrUpdateWorkspaceNotificationRecipientEmailAsync (string email, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.Models.RecipientEmailContract&gt;&gt; CreateOrUpdateWorkspaceNotificationRecipientEmailAsync(string email, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.CreateOrUpdateWorkspaceNotificationRecipientEmailAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateWorkspaceNotificationRecipientEmailAsync (email As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RecipientEmailContract))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateWorkspaceNotificationRecipientEmailAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.RecipientEmailContract&gt;&gt;&#xA;override this.CreateOrUpdateWorkspaceNotificationRecipientEmailAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.RecipientEmailContract&gt;&gt;" Usage="serviceWorkspaceNotificationResource.CreateOrUpdateWorkspaceNotificationRecipientEmailAsync (email, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.RecipientEmailContract&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="email"> Email identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Adds the Email address to the list of Recipients for the Notification.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}/recipientEmails/{email}</description></item><item><term>Operation Id</term><description>WorkspaceNotificationRecipientEmail_CreateOrUpdate</description></item><item><term>Default Api Version</term><description>2023-03-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="email" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="email" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateWorkspaceNotificationRecipientUser">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.RecipientUserContract&gt; CreateOrUpdateWorkspaceNotificationRecipientUser (string userId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.Models.RecipientUserContract&gt; CreateOrUpdateWorkspaceNotificationRecipientUser(string userId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.CreateOrUpdateWorkspaceNotificationRecipientUser(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateWorkspaceNotificationRecipientUser (userId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RecipientUserContract)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateWorkspaceNotificationRecipientUser : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.RecipientUserContract&gt;&#xA;override this.CreateOrUpdateWorkspaceNotificationRecipientUser : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.RecipientUserContract&gt;" Usage="serviceWorkspaceNotificationResource.CreateOrUpdateWorkspaceNotificationRecipientUser (userId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.RecipientUserContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userId"> User identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Adds the API Management User to the list of Recipients for the Notification.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}/recipientUsers/{userId}</description></item><item><term>Operation Id</term><description>WorkspaceNotificationRecipientUser_CreateOrUpdate</description></item><item><term>Default Api Version</term><description>2023-03-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="userId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateWorkspaceNotificationRecipientUserAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.RecipientUserContract&gt;&gt; CreateOrUpdateWorkspaceNotificationRecipientUserAsync (string userId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.Models.RecipientUserContract&gt;&gt; CreateOrUpdateWorkspaceNotificationRecipientUserAsync(string userId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.CreateOrUpdateWorkspaceNotificationRecipientUserAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateWorkspaceNotificationRecipientUserAsync (userId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RecipientUserContract))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateWorkspaceNotificationRecipientUserAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.RecipientUserContract&gt;&gt;&#xA;override this.CreateOrUpdateWorkspaceNotificationRecipientUserAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.RecipientUserContract&gt;&gt;" Usage="serviceWorkspaceNotificationResource.CreateOrUpdateWorkspaceNotificationRecipientUserAsync (userId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.Models.RecipientUserContract&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userId"> User identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Adds the API Management User to the list of Recipients for the Notification.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}/recipientUsers/{userId}</description></item><item><term>Operation Id</term><description>WorkspaceNotificationRecipientUser_CreateOrUpdate</description></item><item><term>Default Api Version</term><description>2023-03-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="userId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string serviceName, string workspaceId, Azure.ResourceManager.ApiManagement.Models.NotificationName notificationName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string serviceName, string workspaceId, valuetype Azure.ResourceManager.ApiManagement.Models.NotificationName notificationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.ApiManagement.Models.NotificationName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, serviceName As String, workspaceId As String, notificationName As NotificationName) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string * string * Azure.ResourceManager.ApiManagement.Models.NotificationName -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, serviceName, workspaceId, notificationName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serviceName" Type="System.String" />
        <Parameter Name="workspaceId" Type="System.String" />
        <Parameter Name="notificationName" Type="Azure.ResourceManager.ApiManagement.Models.NotificationName" />
      </Parameters>
      <Docs>
        <param name="subscriptionId"> The subscriptionId. </param>
        <param name="resourceGroupName"> The resourceGroupName. </param>
        <param name="serviceName"> The serviceName. </param>
        <param name="workspaceId"> The workspaceId. </param>
        <param name="notificationName"> The notificationName. </param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiManagementNotificationData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.ApiManagement.ApiManagementNotificationData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As ApiManagementNotificationData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.ApiManagement.ApiManagementNotificationData" Usage="Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementNotificationData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteWorkspaceNotificationRecipientEmail">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteWorkspaceNotificationRecipientEmail (string email, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteWorkspaceNotificationRecipientEmail(string email, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.DeleteWorkspaceNotificationRecipientEmail(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteWorkspaceNotificationRecipientEmail (email As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteWorkspaceNotificationRecipientEmail : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteWorkspaceNotificationRecipientEmail : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="serviceWorkspaceNotificationResource.DeleteWorkspaceNotificationRecipientEmail (email, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="email"> Email identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes the email from the list of Notification.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}/recipientEmails/{email}</description></item><item><term>Operation Id</term><description>WorkspaceNotificationRecipientEmail_Delete</description></item><item><term>Default Api Version</term><description>2023-03-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="email" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="email" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteWorkspaceNotificationRecipientEmailAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteWorkspaceNotificationRecipientEmailAsync (string email, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteWorkspaceNotificationRecipientEmailAsync(string email, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.DeleteWorkspaceNotificationRecipientEmailAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteWorkspaceNotificationRecipientEmailAsync (email As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteWorkspaceNotificationRecipientEmailAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteWorkspaceNotificationRecipientEmailAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="serviceWorkspaceNotificationResource.DeleteWorkspaceNotificationRecipientEmailAsync (email, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="email"> Email identifier. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes the email from the list of Notification.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}/recipientEmails/{email}</description></item><item><term>Operation Id</term><description>WorkspaceNotificationRecipientEmail_Delete</description></item><item><term>Default Api Version</term><description>2023-03-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="email" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="email" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteWorkspaceNotificationRecipientUser">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteWorkspaceNotificationRecipientUser (string userId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteWorkspaceNotificationRecipientUser(string userId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.DeleteWorkspaceNotificationRecipientUser(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteWorkspaceNotificationRecipientUser (userId As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteWorkspaceNotificationRecipientUser : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteWorkspaceNotificationRecipientUser : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="serviceWorkspaceNotificationResource.DeleteWorkspaceNotificationRecipientUser (userId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userId"> User identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes the API Management user from the list of Notification.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}/recipientUsers/{userId}</description></item><item><term>Operation Id</term><description>WorkspaceNotificationRecipientUser_Delete</description></item><item><term>Default Api Version</term><description>2023-03-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="userId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteWorkspaceNotificationRecipientUserAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteWorkspaceNotificationRecipientUserAsync (string userId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteWorkspaceNotificationRecipientUserAsync(string userId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.DeleteWorkspaceNotificationRecipientUserAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteWorkspaceNotificationRecipientUserAsync (userId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteWorkspaceNotificationRecipientUserAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteWorkspaceNotificationRecipientUserAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="serviceWorkspaceNotificationResource.DeleteWorkspaceNotificationRecipientUserAsync (userId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userId"> User identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes the API Management user from the list of Notification.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}/recipientUsers/{userId}</description></item><item><term>Operation Id</term><description>WorkspaceNotificationRecipientUser_Delete</description></item><item><term>Default Api Version</term><description>2023-03-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="userId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServiceWorkspaceNotificationResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource&gt;" Usage="serviceWorkspaceNotificationResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the Notification specified by its identifier.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}</description></item><item><term>Operation Id</term><description>WorkspaceNotification_Get</description></item><item><term>Default Api Version</term><description>2023-03-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServiceWorkspaceNotificationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource&gt;&gt;" Usage="serviceWorkspaceNotificationResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the Notification specified by its identifier.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}</description></item><item><term>Operation Id</term><description>WorkspaceNotification_Get</description></item><item><term>Default Api Version</term><description>2023-03-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkspaceNotificationRecipientEmailsByNotification">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.RecipientEmailContract&gt; GetWorkspaceNotificationRecipientEmailsByNotification (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.RecipientEmailContract&gt; GetWorkspaceNotificationRecipientEmailsByNotification(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.GetWorkspaceNotificationRecipientEmailsByNotification(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkspaceNotificationRecipientEmailsByNotification (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of RecipientEmailContract)" />
      <MemberSignature Language="F#" Value="abstract member GetWorkspaceNotificationRecipientEmailsByNotification : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.RecipientEmailContract&gt;&#xA;override this.GetWorkspaceNotificationRecipientEmailsByNotification : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.RecipientEmailContract&gt;" Usage="serviceWorkspaceNotificationResource.GetWorkspaceNotificationRecipientEmailsByNotification cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.RecipientEmailContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the list of the Notification Recipient Emails subscribed to a notification.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}/recipientEmails</description></item><item><term>Operation Id</term><description>WorkspaceNotificationRecipientEmail_ListByNotification</description></item><item><term>Default Api Version</term><description>2023-03-01-preview</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.RecipientEmailContract" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkspaceNotificationRecipientEmailsByNotificationAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.RecipientEmailContract&gt; GetWorkspaceNotificationRecipientEmailsByNotificationAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.RecipientEmailContract&gt; GetWorkspaceNotificationRecipientEmailsByNotificationAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.GetWorkspaceNotificationRecipientEmailsByNotificationAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkspaceNotificationRecipientEmailsByNotificationAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of RecipientEmailContract)" />
      <MemberSignature Language="F#" Value="abstract member GetWorkspaceNotificationRecipientEmailsByNotificationAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.RecipientEmailContract&gt;&#xA;override this.GetWorkspaceNotificationRecipientEmailsByNotificationAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.RecipientEmailContract&gt;" Usage="serviceWorkspaceNotificationResource.GetWorkspaceNotificationRecipientEmailsByNotificationAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.RecipientEmailContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the list of the Notification Recipient Emails subscribed to a notification.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}/recipientEmails</description></item><item><term>Operation Id</term><description>WorkspaceNotificationRecipientEmail_ListByNotification</description></item><item><term>Default Api Version</term><description>2023-03-01-preview</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.RecipientEmailContract" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkspaceNotificationRecipientUsersByNotification">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.RecipientUserContract&gt; GetWorkspaceNotificationRecipientUsersByNotification (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.RecipientUserContract&gt; GetWorkspaceNotificationRecipientUsersByNotification(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.GetWorkspaceNotificationRecipientUsersByNotification(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkspaceNotificationRecipientUsersByNotification (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of RecipientUserContract)" />
      <MemberSignature Language="F#" Value="abstract member GetWorkspaceNotificationRecipientUsersByNotification : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.RecipientUserContract&gt;&#xA;override this.GetWorkspaceNotificationRecipientUsersByNotification : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.RecipientUserContract&gt;" Usage="serviceWorkspaceNotificationResource.GetWorkspaceNotificationRecipientUsersByNotification cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.RecipientUserContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the list of the Notification Recipient User subscribed to the notification.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}/recipientUsers</description></item><item><term>Operation Id</term><description>WorkspaceNotificationRecipientUser_ListByNotification</description></item><item><term>Default Api Version</term><description>2023-03-01-preview</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.RecipientUserContract" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkspaceNotificationRecipientUsersByNotificationAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.RecipientUserContract&gt; GetWorkspaceNotificationRecipientUsersByNotificationAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.RecipientUserContract&gt; GetWorkspaceNotificationRecipientUsersByNotificationAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.GetWorkspaceNotificationRecipientUsersByNotificationAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkspaceNotificationRecipientUsersByNotificationAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of RecipientUserContract)" />
      <MemberSignature Language="F#" Value="abstract member GetWorkspaceNotificationRecipientUsersByNotificationAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.RecipientUserContract&gt;&#xA;override this.GetWorkspaceNotificationRecipientUsersByNotificationAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.RecipientUserContract&gt;" Usage="serviceWorkspaceNotificationResource.GetWorkspaceNotificationRecipientUsersByNotificationAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.RecipientUserContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the list of the Notification Recipient User subscribed to the notification.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}/recipientUsers</description></item><item><term>Operation Id</term><description>WorkspaceNotificationRecipientUser_ListByNotification</description></item><item><term>Default Api Version</term><description>2023-03-01-preview</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.RecipientUserContract" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.ApiManagement.ApiManagementNotificationData IJsonModel&lt;ApiManagementNotificationData&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementNotificationData System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#ApiManagement#ApiManagementNotificationData&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As ApiManagementNotificationData Implements IJsonModel(Of ApiManagementNotificationData).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.ApiManagement.ApiManagementNotificationData" Usage="serviceWorkspaceNotificationResource.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementNotificationData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;ApiManagementNotificationData&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#ApiManagement#ApiManagementNotificationData&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of ApiManagementNotificationData).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="serviceWorkspaceNotificationResource.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.ApiManagement.ApiManagementNotificationData IPersistableModel&lt;ApiManagementNotificationData&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiManagementNotificationData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#ApiManagement#ApiManagementNotificationData&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As ApiManagementNotificationData Implements IPersistableModel(Of ApiManagementNotificationData).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.ApiManagement.ApiManagementNotificationData" Usage="serviceWorkspaceNotificationResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiManagementNotificationData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;ApiManagementNotificationData&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#ApiManagement#ApiManagementNotificationData&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of ApiManagementNotificationData).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="serviceWorkspaceNotificationResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;ApiManagementNotificationData&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#ApiManagement#ApiManagementNotificationData&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of ApiManagementNotificationData).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="serviceWorkspaceNotificationResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiManagementNotificationData&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource&gt; Update (Azure.WaitUntil waitUntil, Azure.ETag? ifMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource&gt; Update(valuetype Azure.WaitUntil waitUntil, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.Update(Azure.WaitUntil,System.Nullable{Azure.ETag},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (waitUntil As WaitUntil, Optional ifMatch As Nullable(Of ETag) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of ServiceWorkspaceNotificationResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.WaitUntil * Nullable&lt;Azure.ETag&gt; * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource&gt;&#xA;override this.Update : Azure.WaitUntil * Nullable&lt;Azure.ETag&gt; * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource&gt;" Usage="serviceWorkspaceNotificationResource.Update (waitUntil, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="ifMatch" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="ifMatch"> ETag of the Entity. Not required when creating an entity, but required when updating an entity. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Create or Update API Management publisher notification for the workspace.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}</description></item><item><term>Operation Id</term><description>WorkspaceNotification_CreateOrUpdate</description></item><item><term>Default Api Version</term><description>2023-03-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource&gt;&gt; UpdateAsync (Azure.WaitUntil waitUntil, Azure.ETag? ifMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource&gt;&gt; UpdateAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource.UpdateAsync(Azure.WaitUntil,System.Nullable{Azure.ETag},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (waitUntil As WaitUntil, Optional ifMatch As Nullable(Of ETag) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of ServiceWorkspaceNotificationResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.WaitUntil * Nullable&lt;Azure.ETag&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.WaitUntil * Nullable&lt;Azure.ETag&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource&gt;&gt;" Usage="serviceWorkspaceNotificationResource.UpdateAsync (waitUntil, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="ifMatch" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="ifMatch"> ETag of the Entity. Not required when creating an entity, but required when updating an entity. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Create or Update API Management publisher notification for the workspace.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}</description></item><item><term>Operation Id</term><description>WorkspaceNotification_CreateOrUpdate</description></item><item><term>Default Api Version</term><description>2023-03-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiManagement.ServiceWorkspaceNotificationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
