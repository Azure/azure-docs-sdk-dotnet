<Type Name="ApiResource" FullName="Azure.ResourceManager.ApiManagement.ApiResource">
  <TypeSignature Language="C#" Value="public class ApiResource : Azure.ResourceManager.ArmResource, System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.ApiData&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiData&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ApiResource extends Azure.ResourceManager.ArmResource implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.ApiManagement.ApiData&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.ApiManagement.ApiData&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ApiManagement.ApiResource" />
  <TypeSignature Language="VB.NET" Value="Public Class ApiResource&#xA;Inherits ArmResource&#xA;Implements IJsonModel(Of ApiData), IPersistableModel(Of ApiData)" />
  <TypeSignature Language="F#" Value="type ApiResource = class&#xA;    inherit ArmResource&#xA;    interface IJsonModel&lt;ApiData&gt;&#xA;    interface IPersistableModel&lt;ApiData&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.ApiData&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiData&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A Class representing an Api along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.ApiManagement.ApiResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetApiResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementServiceResource" /> using the GetApi method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApiResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ApiManagement.ApiResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string serviceName, string apiId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string serviceName, string apiId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, serviceName As String, apiId As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.ApiManagement.ApiResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, serviceName, apiId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serviceName" Type="System.String" />
        <Parameter Name="apiId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId"> The subscriptionId. </param>
        <param name="resourceGroupName"> The resourceGroupName. </param>
        <param name="serviceName"> The serviceName. </param>
        <param name="apiId"> The apiId. </param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.ApiManagement.ApiResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.ApiManagement.ApiData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ApiManagement.ApiResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As ApiData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.ApiManagement.ApiData" Usage="Azure.ResourceManager.ApiManagement.ApiResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, Azure.ETag ifMatch, bool? deleteRevisions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, valuetype Azure.ETag ifMatch, valuetype System.Nullable`1&lt;bool&gt; deleteRevisions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.Delete(Azure.WaitUntil,Azure.ETag,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, ifMatch As ETag, Optional deleteRevisions As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * Azure.ETag * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * Azure.ETag * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="apiResource.Delete (waitUntil, ifMatch, deleteRevisions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="ifMatch" Type="Azure.ETag" />
        <Parameter Name="deleteRevisions" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="ifMatch"> ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update. </param>
        <param name="deleteRevisions"> Delete all revisions of the Api. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes the specified API of the API Management service instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}</description></item><item><term>Operation Id</term><description>Api_Delete</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiManagement.ApiResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, Azure.ETag ifMatch, bool? deleteRevisions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype Azure.ETag ifMatch, valuetype System.Nullable`1&lt;bool&gt; deleteRevisions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.DeleteAsync(Azure.WaitUntil,Azure.ETag,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, ifMatch As ETag, Optional deleteRevisions As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * Azure.ETag * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * Azure.ETag * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="apiResource.DeleteAsync (waitUntil, ifMatch, deleteRevisions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="ifMatch" Type="Azure.ETag" />
        <Parameter Name="deleteRevisions" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="ifMatch"> ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update. </param>
        <param name="deleteRevisions"> Delete all revisions of the Api. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes the specified API of the API Management service instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}</description></item><item><term>Operation Id</term><description>Api_Delete</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiManagement.ApiResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;" Usage="apiResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the API specified by its identifier.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}</description></item><item><term>Operation Id</term><description>Api_Get</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiManagement.ApiResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiDiagnostic">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiDiagnosticResource&gt; GetApiDiagnostic (string diagnosticId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiDiagnosticResource&gt; GetApiDiagnostic(string diagnosticId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetApiDiagnostic(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiDiagnostic (diagnosticId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiDiagnosticResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiDiagnostic : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiDiagnosticResource&gt;&#xA;override this.GetApiDiagnostic : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiDiagnosticResource&gt;" Usage="apiResource.GetApiDiagnostic (diagnosticId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiDiagnosticResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnosticId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="diagnosticId"> Diagnostic identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the Diagnostic for an API specified by its identifier.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/diagnostics/{diagnosticId}</description></item><item><term>Operation Id</term><description>ApiDiagnostic_Get</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiManagement.ApiDiagnosticResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="diagnosticId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="diagnosticId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiDiagnosticAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiDiagnosticResource&gt;&gt; GetApiDiagnosticAsync (string diagnosticId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiDiagnosticResource&gt;&gt; GetApiDiagnosticAsync(string diagnosticId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetApiDiagnosticAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiDiagnosticAsync (diagnosticId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiDiagnosticResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiDiagnosticAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiDiagnosticResource&gt;&gt;&#xA;override this.GetApiDiagnosticAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiDiagnosticResource&gt;&gt;" Usage="apiResource.GetApiDiagnosticAsync (diagnosticId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiDiagnosticResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnosticId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="diagnosticId"> Diagnostic identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the Diagnostic for an API specified by its identifier.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/diagnostics/{diagnosticId}</description></item><item><term>Operation Id</term><description>ApiDiagnostic_Get</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiManagement.ApiDiagnosticResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="diagnosticId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="diagnosticId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiDiagnostics">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiDiagnosticCollection GetApiDiagnostics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiDiagnosticCollection GetApiDiagnostics() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetApiDiagnostics" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiDiagnostics () As ApiDiagnosticCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiDiagnostics : unit -&gt; Azure.ResourceManager.ApiManagement.ApiDiagnosticCollection&#xA;override this.GetApiDiagnostics : unit -&gt; Azure.ResourceManager.ApiManagement.ApiDiagnosticCollection" Usage="apiResource.GetApiDiagnostics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiDiagnosticCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiDiagnosticResources in the Api. </summary>
        <returns> An object representing collection of ApiDiagnosticResources and their operations over a ApiDiagnosticResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiIssue">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiIssueResource&gt; GetApiIssue (string issueId, bool? expandCommentsAttachments = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiIssueResource&gt; GetApiIssue(string issueId, valuetype System.Nullable`1&lt;bool&gt; expandCommentsAttachments, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetApiIssue(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiIssue (issueId As String, Optional expandCommentsAttachments As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiIssueResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiIssue : string * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiIssueResource&gt;&#xA;override this.GetApiIssue : string * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiIssueResource&gt;" Usage="apiResource.GetApiIssue (issueId, expandCommentsAttachments, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiIssueResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issueId" Type="System.String" />
        <Parameter Name="expandCommentsAttachments" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="issueId"> Issue identifier. Must be unique in the current API Management service instance. </param>
        <param name="expandCommentsAttachments"> Expand the comment attachments. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the Issue for an API specified by its identifier.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}</description></item><item><term>Operation Id</term><description>ApiIssue_Get</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiManagement.ApiIssueResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="issueId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="issueId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiIssueAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiIssueResource&gt;&gt; GetApiIssueAsync (string issueId, bool? expandCommentsAttachments = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiIssueResource&gt;&gt; GetApiIssueAsync(string issueId, valuetype System.Nullable`1&lt;bool&gt; expandCommentsAttachments, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetApiIssueAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiIssueAsync (issueId As String, Optional expandCommentsAttachments As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiIssueResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiIssueAsync : string * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiIssueResource&gt;&gt;&#xA;override this.GetApiIssueAsync : string * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiIssueResource&gt;&gt;" Usage="apiResource.GetApiIssueAsync (issueId, expandCommentsAttachments, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiIssueResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issueId" Type="System.String" />
        <Parameter Name="expandCommentsAttachments" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="issueId"> Issue identifier. Must be unique in the current API Management service instance. </param>
        <param name="expandCommentsAttachments"> Expand the comment attachments. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the Issue for an API specified by its identifier.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}</description></item><item><term>Operation Id</term><description>ApiIssue_Get</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiManagement.ApiIssueResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="issueId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="issueId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiIssues">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiIssueCollection GetApiIssues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiIssueCollection GetApiIssues() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetApiIssues" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiIssues () As ApiIssueCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiIssues : unit -&gt; Azure.ResourceManager.ApiManagement.ApiIssueCollection&#xA;override this.GetApiIssues : unit -&gt; Azure.ResourceManager.ApiManagement.ApiIssueCollection" Usage="apiResource.GetApiIssues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiIssueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiIssueResources in the Api. </summary>
        <returns> An object representing collection of ApiIssueResources and their operations over a ApiIssueResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiOperation">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiOperationResource&gt; GetApiOperation (string operationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiOperationResource&gt; GetApiOperation(string operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetApiOperation(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiOperation (operationId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiOperationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiOperation : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiOperationResource&gt;&#xA;override this.GetApiOperation : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiOperationResource&gt;" Usage="apiResource.GetApiOperation (operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiOperationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operationId"> Operation identifier within an API. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the API Operation specified by its identifier.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}</description></item><item><term>Operation Id</term><description>ApiOperation_Get</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiManagement.ApiOperationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="operationId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="operationId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiOperationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiOperationResource&gt;&gt; GetApiOperationAsync (string operationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiOperationResource&gt;&gt; GetApiOperationAsync(string operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetApiOperationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiOperationAsync (operationId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiOperationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiOperationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiOperationResource&gt;&gt;&#xA;override this.GetApiOperationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiOperationResource&gt;&gt;" Usage="apiResource.GetApiOperationAsync (operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiOperationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operationId"> Operation identifier within an API. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the API Operation specified by its identifier.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}</description></item><item><term>Operation Id</term><description>ApiOperation_Get</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiManagement.ApiOperationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="operationId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="operationId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiOperations">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiOperationCollection GetApiOperations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiOperationCollection GetApiOperations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetApiOperations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiOperations () As ApiOperationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiOperations : unit -&gt; Azure.ResourceManager.ApiManagement.ApiOperationCollection&#xA;override this.GetApiOperations : unit -&gt; Azure.ResourceManager.ApiManagement.ApiOperationCollection" Usage="apiResource.GetApiOperations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiOperationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiOperationResources in the Api. </summary>
        <returns> An object representing collection of ApiOperationResources and their operations over a ApiOperationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiPolicyCollection GetApiPolicies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiPolicyCollection GetApiPolicies() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetApiPolicies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiPolicies () As ApiPolicyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiPolicies : unit -&gt; Azure.ResourceManager.ApiManagement.ApiPolicyCollection&#xA;override this.GetApiPolicies : unit -&gt; Azure.ResourceManager.ApiManagement.ApiPolicyCollection" Usage="apiResource.GetApiPolicies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiPolicyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiPolicyResources in the Api. </summary>
        <returns> An object representing collection of ApiPolicyResources and their operations over a ApiPolicyResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiPolicyResource&gt; GetApiPolicy (Azure.ResourceManager.ApiManagement.Models.PolicyName policyId, Azure.ResourceManager.ApiManagement.Models.PolicyExportFormat? format = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiPolicyResource&gt; GetApiPolicy(valuetype Azure.ResourceManager.ApiManagement.Models.PolicyName policyId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ApiManagement.Models.PolicyExportFormat&gt; format, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetApiPolicy(Azure.ResourceManager.ApiManagement.Models.PolicyName,System.Nullable{Azure.ResourceManager.ApiManagement.Models.PolicyExportFormat},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiPolicy (policyId As PolicyName, Optional format As Nullable(Of PolicyExportFormat) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiPolicy : Azure.ResourceManager.ApiManagement.Models.PolicyName * Nullable&lt;Azure.ResourceManager.ApiManagement.Models.PolicyExportFormat&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiPolicyResource&gt;&#xA;override this.GetApiPolicy : Azure.ResourceManager.ApiManagement.Models.PolicyName * Nullable&lt;Azure.ResourceManager.ApiManagement.Models.PolicyExportFormat&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiPolicyResource&gt;" Usage="apiResource.GetApiPolicy (policyId, format, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policyId" Type="Azure.ResourceManager.ApiManagement.Models.PolicyName" />
        <Parameter Name="format" Type="System.Nullable&lt;Azure.ResourceManager.ApiManagement.Models.PolicyExportFormat&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="policyId"> The identifier of the Policy. </param>
        <param name="format"> Policy Export Format. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the policy configuration at the API level.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/policies/{policyId}</description></item><item><term>Operation Id</term><description>ApiPolicy_Get</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiManagement.ApiPolicyResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiPolicyResource&gt;&gt; GetApiPolicyAsync (Azure.ResourceManager.ApiManagement.Models.PolicyName policyId, Azure.ResourceManager.ApiManagement.Models.PolicyExportFormat? format = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiPolicyResource&gt;&gt; GetApiPolicyAsync(valuetype Azure.ResourceManager.ApiManagement.Models.PolicyName policyId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ApiManagement.Models.PolicyExportFormat&gt; format, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetApiPolicyAsync(Azure.ResourceManager.ApiManagement.Models.PolicyName,System.Nullable{Azure.ResourceManager.ApiManagement.Models.PolicyExportFormat},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiPolicyAsync (policyId As PolicyName, Optional format As Nullable(Of PolicyExportFormat) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiPolicyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiPolicyAsync : Azure.ResourceManager.ApiManagement.Models.PolicyName * Nullable&lt;Azure.ResourceManager.ApiManagement.Models.PolicyExportFormat&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiPolicyResource&gt;&gt;&#xA;override this.GetApiPolicyAsync : Azure.ResourceManager.ApiManagement.Models.PolicyName * Nullable&lt;Azure.ResourceManager.ApiManagement.Models.PolicyExportFormat&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiPolicyResource&gt;&gt;" Usage="apiResource.GetApiPolicyAsync (policyId, format, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiPolicyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policyId" Type="Azure.ResourceManager.ApiManagement.Models.PolicyName" />
        <Parameter Name="format" Type="System.Nullable&lt;Azure.ResourceManager.ApiManagement.Models.PolicyExportFormat&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="policyId"> The identifier of the Policy. </param>
        <param name="format"> Policy Export Format. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the policy configuration at the API level.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/policies/{policyId}</description></item><item><term>Operation Id</term><description>ApiPolicy_Get</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiManagement.ApiPolicyResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiProducts">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.ApiManagementProductResource&gt; GetApiProducts (string filter = default, int? top = default, int? skip = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementProductResource&gt; GetApiProducts(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetApiProducts(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiProducts (Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ApiManagementProductResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiProducts : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.ApiManagementProductResource&gt;&#xA;override this.GetApiProducts : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.ApiManagementProductResource&gt;" Usage="apiResource.GetApiProducts (filter, top, skip, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.ApiManagementProductResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> |     Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;. </param>
        <param name="top"> Number of records to return. </param>
        <param name="skip"> Number of records to skip. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all Products, which the API is part of.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products</description></item><item><term>Operation Id</term><description>ApiProduct_ListByApis</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementProductResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiProductsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.ApiManagementProductResource&gt; GetApiProductsAsync (string filter = default, int? top = default, int? skip = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ApiManagement.ApiManagementProductResource&gt; GetApiProductsAsync(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetApiProductsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiProductsAsync (Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ApiManagementProductResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiProductsAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.ApiManagementProductResource&gt;&#xA;override this.GetApiProductsAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.ApiManagementProductResource&gt;" Usage="apiResource.GetApiProductsAsync (filter, top, skip, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.ApiManagementProductResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> |     Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;. </param>
        <param name="top"> Number of records to return. </param>
        <param name="skip"> Number of records to skip. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all Products, which the API is part of.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products</description></item><item><term>Operation Id</term><description>ApiProduct_ListByApis</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ApiManagement.ApiManagementProductResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiRelease">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiReleaseResource&gt; GetApiRelease (string releaseId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiReleaseResource&gt; GetApiRelease(string releaseId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetApiRelease(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiRelease (releaseId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiReleaseResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiRelease : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiReleaseResource&gt;&#xA;override this.GetApiRelease : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiReleaseResource&gt;" Usage="apiResource.GetApiRelease (releaseId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiReleaseResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="releaseId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="releaseId"> Release identifier within an API. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns the details of an API release.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/releases/{releaseId}</description></item><item><term>Operation Id</term><description>ApiRelease_Get</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiManagement.ApiReleaseResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="releaseId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="releaseId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiReleaseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiReleaseResource&gt;&gt; GetApiReleaseAsync (string releaseId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiReleaseResource&gt;&gt; GetApiReleaseAsync(string releaseId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetApiReleaseAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiReleaseAsync (releaseId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiReleaseResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiReleaseAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiReleaseResource&gt;&gt;&#xA;override this.GetApiReleaseAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiReleaseResource&gt;&gt;" Usage="apiResource.GetApiReleaseAsync (releaseId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiReleaseResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="releaseId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="releaseId"> Release identifier within an API. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns the details of an API release.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/releases/{releaseId}</description></item><item><term>Operation Id</term><description>ApiRelease_Get</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiManagement.ApiReleaseResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="releaseId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="releaseId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiReleases">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiReleaseCollection GetApiReleases ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiReleaseCollection GetApiReleases() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetApiReleases" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiReleases () As ApiReleaseCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiReleases : unit -&gt; Azure.ResourceManager.ApiManagement.ApiReleaseCollection&#xA;override this.GetApiReleases : unit -&gt; Azure.ResourceManager.ApiManagement.ApiReleaseCollection" Usage="apiResource.GetApiReleases " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiReleaseCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiReleaseResources in the Api. </summary>
        <returns> An object representing collection of ApiReleaseResources and their operations over a ApiReleaseResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiRevisionsByService">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ApiRevisionContract&gt; GetApiRevisionsByService (string filter = default, int? top = default, int? skip = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.ApiRevisionContract&gt; GetApiRevisionsByService(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetApiRevisionsByService(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiRevisionsByService (Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ApiRevisionContract)" />
      <MemberSignature Language="F#" Value="abstract member GetApiRevisionsByService : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ApiRevisionContract&gt;&#xA;override this.GetApiRevisionsByService : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ApiRevisionContract&gt;" Usage="apiResource.GetApiRevisionsByService (filter, top, skip, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.ApiRevisionContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> |     Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| apiRevision | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;. </param>
        <param name="top"> Number of records to return. </param>
        <param name="skip"> Number of records to skip. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all revisions of an API.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/revisions</description></item><item><term>Operation Id</term><description>ApiRevision_ListByService</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.ApiRevisionContract" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiRevisionsByServiceAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ApiRevisionContract&gt; GetApiRevisionsByServiceAsync (string filter = default, int? top = default, int? skip = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.ApiRevisionContract&gt; GetApiRevisionsByServiceAsync(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetApiRevisionsByServiceAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiRevisionsByServiceAsync (Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ApiRevisionContract)" />
      <MemberSignature Language="F#" Value="abstract member GetApiRevisionsByServiceAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ApiRevisionContract&gt;&#xA;override this.GetApiRevisionsByServiceAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ApiRevisionContract&gt;" Usage="apiResource.GetApiRevisionsByServiceAsync (filter, top, skip, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.ApiRevisionContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> |     Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| apiRevision | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;. </param>
        <param name="top"> Number of records to return. </param>
        <param name="skip"> Number of records to skip. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all revisions of an API.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/revisions</description></item><item><term>Operation Id</term><description>ApiRevision_ListByService</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.ApiRevisionContract" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiSchema">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiSchemaResource&gt; GetApiSchema (string schemaId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiSchemaResource&gt; GetApiSchema(string schemaId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetApiSchema(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiSchema (schemaId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiSchemaResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiSchema : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiSchemaResource&gt;&#xA;override this.GetApiSchema : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiSchemaResource&gt;" Usage="apiResource.GetApiSchema (schemaId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiSchemaResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="schemaId"> Schema id identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the schema configuration at the API level.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/schemas/{schemaId}</description></item><item><term>Operation Id</term><description>ApiSchema_Get</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiManagement.ApiSchemaResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="schemaId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="schemaId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiSchemaAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiSchemaResource&gt;&gt; GetApiSchemaAsync (string schemaId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiSchemaResource&gt;&gt; GetApiSchemaAsync(string schemaId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetApiSchemaAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiSchemaAsync (schemaId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiSchemaResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiSchemaAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiSchemaResource&gt;&gt;&#xA;override this.GetApiSchemaAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiSchemaResource&gt;&gt;" Usage="apiResource.GetApiSchemaAsync (schemaId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiSchemaResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="schemaId"> Schema id identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the schema configuration at the API level.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/schemas/{schemaId}</description></item><item><term>Operation Id</term><description>ApiSchema_Get</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiManagement.ApiSchemaResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="schemaId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="schemaId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiSchemas">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiSchemaCollection GetApiSchemas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiSchemaCollection GetApiSchemas() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetApiSchemas" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiSchemas () As ApiSchemaCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiSchemas : unit -&gt; Azure.ResourceManager.ApiManagement.ApiSchemaCollection&#xA;override this.GetApiSchemas : unit -&gt; Azure.ResourceManager.ApiManagement.ApiSchemaCollection" Usage="apiResource.GetApiSchemas " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiSchemaCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiSchemaResources in the Api. </summary>
        <returns> An object representing collection of ApiSchemaResources and their operations over a ApiSchemaResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiTagResource&gt; GetApiTag (string tagId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiTagResource&gt; GetApiTag(string tagId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetApiTag(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiTag (tagId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiTagResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiTagResource&gt;&#xA;override this.GetApiTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiTagResource&gt;" Usage="apiResource.GetApiTag (tagId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiTagResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tagId"> Tag identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get tag associated with the API.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tags/{tagId}</description></item><item><term>Operation Id</term><description>Tag_GetByApi</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiManagement.ApiTagResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tagId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="tagId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiTagResource&gt;&gt; GetApiTagAsync (string tagId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiTagResource&gt;&gt; GetApiTagAsync(string tagId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetApiTagAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiTagAsync (tagId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiTagResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiTagResource&gt;&gt;&#xA;override this.GetApiTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiTagResource&gt;&gt;" Usage="apiResource.GetApiTagAsync (tagId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiTagResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tagId"> Tag identifier. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get tag associated with the API.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tags/{tagId}</description></item><item><term>Operation Id</term><description>Tag_GetByApi</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiManagement.ApiTagResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tagId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="tagId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiTagDescription">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiTagDescriptionResource&gt; GetApiTagDescription (string tagDescriptionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiTagDescriptionResource&gt; GetApiTagDescription(string tagDescriptionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetApiTagDescription(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiTagDescription (tagDescriptionId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiTagDescriptionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApiTagDescription : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiTagDescriptionResource&gt;&#xA;override this.GetApiTagDescription : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiTagDescriptionResource&gt;" Usage="apiResource.GetApiTagDescription (tagDescriptionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiTagDescriptionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagDescriptionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tagDescriptionId"> Tag description identifier. Used when creating tagDescription for API/Tag association. Based on API and Tag names. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get Tag description in scope of API
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tagDescriptions/{tagDescriptionId}</description></item><item><term>Operation Id</term><description>ApiTagDescription_Get</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiManagement.ApiTagDescriptionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tagDescriptionId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="tagDescriptionId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiTagDescriptionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiTagDescriptionResource&gt;&gt; GetApiTagDescriptionAsync (string tagDescriptionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiTagDescriptionResource&gt;&gt; GetApiTagDescriptionAsync(string tagDescriptionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetApiTagDescriptionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiTagDescriptionAsync (tagDescriptionId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiTagDescriptionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApiTagDescriptionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiTagDescriptionResource&gt;&gt;&#xA;override this.GetApiTagDescriptionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiTagDescriptionResource&gt;&gt;" Usage="apiResource.GetApiTagDescriptionAsync (tagDescriptionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiTagDescriptionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagDescriptionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tagDescriptionId"> Tag description identifier. Used when creating tagDescription for API/Tag association. Based on API and Tag names. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get Tag description in scope of API
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tagDescriptions/{tagDescriptionId}</description></item><item><term>Operation Id</term><description>ApiTagDescription_Get</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiManagement.ApiTagDescriptionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tagDescriptionId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="tagDescriptionId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiTagDescriptions">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiTagDescriptionCollection GetApiTagDescriptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiTagDescriptionCollection GetApiTagDescriptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetApiTagDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiTagDescriptions () As ApiTagDescriptionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiTagDescriptions : unit -&gt; Azure.ResourceManager.ApiManagement.ApiTagDescriptionCollection&#xA;override this.GetApiTagDescriptions : unit -&gt; Azure.ResourceManager.ApiManagement.ApiTagDescriptionCollection" Usage="apiResource.GetApiTagDescriptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiTagDescriptionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiTagDescriptionResources in the Api. </summary>
        <returns> An object representing collection of ApiTagDescriptionResources and their operations over a ApiTagDescriptionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApiTags">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ApiTagCollection GetApiTags ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiTagCollection GetApiTags() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetApiTags" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApiTags () As ApiTagCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApiTags : unit -&gt; Azure.ResourceManager.ApiManagement.ApiTagCollection&#xA;override this.GetApiTags : unit -&gt; Azure.ResourceManager.ApiManagement.ApiTagCollection" Usage="apiResource.GetApiTags " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiTagCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApiTagResources in the Api. </summary>
        <returns> An object representing collection of ApiTagResources and their operations over a ApiTagResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;&gt;" Usage="apiResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the API specified by its identifier.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}</description></item><item><term>Operation Id</term><description>Api_Get</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiManagement.ApiResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntityTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; GetEntityTag (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; GetEntityTag(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetEntityTag(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEntityTag (Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member GetEntityTag : System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.GetEntityTag : System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="apiResource.GetEntityTag cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the entity state (Etag) version of the API specified by its identifier.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}</description></item><item><term>Operation Id</term><description>Api_GetEntityTag</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiManagement.ApiResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntityTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; GetEntityTagAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; GetEntityTagAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetEntityTagAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEntityTagAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member GetEntityTagAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.GetEntityTagAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="apiResource.GetEntityTagAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the entity state (Etag) version of the API specified by its identifier.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}</description></item><item><term>Operation Id</term><description>Api_GetEntityTag</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiManagement.ApiResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOperationsByTags">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt; GetOperationsByTags (string filter = default, int? top = default, int? skip = default, bool? includeNotTaggedOperations = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt; GetOperationsByTags(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Nullable`1&lt;bool&gt; includeNotTaggedOperations, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetOperationsByTags(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOperationsByTags (Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional includeNotTaggedOperations As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of TagResourceContractDetails)" />
      <MemberSignature Language="F#" Value="abstract member GetOperationsByTags : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt;&#xA;override this.GetOperationsByTags : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt;" Usage="apiResource.GetOperationsByTags (filter, top, skip, includeNotTaggedOperations, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="includeNotTaggedOperations" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> |     Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| apiName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| method | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| urlTemplate | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;. </param>
        <param name="top"> Number of records to return. </param>
        <param name="skip"> Number of records to skip. </param>
        <param name="includeNotTaggedOperations"> Include not tagged Operations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists a collection of operations associated with tags.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operationsByTags</description></item><item><term>Operation Id</term><description>Operation_ListByTags</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOperationsByTagsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt; GetOperationsByTagsAsync (string filter = default, int? top = default, int? skip = default, bool? includeNotTaggedOperations = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt; GetOperationsByTagsAsync(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Nullable`1&lt;bool&gt; includeNotTaggedOperations, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetOperationsByTagsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOperationsByTagsAsync (Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional includeNotTaggedOperations As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of TagResourceContractDetails)" />
      <MemberSignature Language="F#" Value="abstract member GetOperationsByTagsAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt;&#xA;override this.GetOperationsByTagsAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt;" Usage="apiResource.GetOperationsByTagsAsync (filter, top, skip, includeNotTaggedOperations, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="includeNotTaggedOperations" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> |     Field     |     Usage     |     Supported operators     |     Supported functions     |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| apiName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| method | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;| urlTemplate | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |&lt;/br&gt;. </param>
        <param name="top"> Number of records to return. </param>
        <param name="skip"> Number of records to skip. </param>
        <param name="includeNotTaggedOperations"> Include not tagged Operations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists a collection of operations associated with tags.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operationsByTags</description></item><item><term>Operation Id</term><description>Operation_ListByTags</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ApiManagement.Models.TagResourceContractDetails" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResolverContract">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ResolverContractResource&gt; GetResolverContract (string resolverId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ResolverContractResource&gt; GetResolverContract(string resolverId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetResolverContract(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResolverContract (resolverId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ResolverContractResource)" />
      <MemberSignature Language="F#" Value="abstract member GetResolverContract : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ResolverContractResource&gt;&#xA;override this.GetResolverContract : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ResolverContractResource&gt;" Usage="apiResource.GetResolverContract (resolverId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ResolverContractResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolverId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resolverId"> Resolver identifier within a GraphQL API. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the GraphQL API Resolver specified by its identifier.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/resolvers/{resolverId}</description></item><item><term>Operation Id</term><description>GraphQLApiResolver_Get</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiManagement.ResolverContractResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resolverId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resolverId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResolverContractAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ResolverContractResource&gt;&gt; GetResolverContractAsync (string resolverId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ResolverContractResource&gt;&gt; GetResolverContractAsync(string resolverId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetResolverContractAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResolverContractAsync (resolverId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ResolverContractResource))" />
      <MemberSignature Language="F#" Value="abstract member GetResolverContractAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ResolverContractResource&gt;&gt;&#xA;override this.GetResolverContractAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ResolverContractResource&gt;&gt;" Usage="apiResource.GetResolverContractAsync (resolverId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ResolverContractResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolverId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resolverId"> Resolver identifier within a GraphQL API. Must be unique in the current API Management service instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the GraphQL API Resolver specified by its identifier.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/resolvers/{resolverId}</description></item><item><term>Operation Id</term><description>GraphQLApiResolver_Get</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiManagement.ResolverContractResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resolverId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resolverId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResolverContracts">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ResolverContractCollection GetResolverContracts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ResolverContractCollection GetResolverContracts() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetResolverContracts" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResolverContracts () As ResolverContractCollection" />
      <MemberSignature Language="F#" Value="abstract member GetResolverContracts : unit -&gt; Azure.ResourceManager.ApiManagement.ResolverContractCollection&#xA;override this.GetResolverContracts : unit -&gt; Azure.ResourceManager.ApiManagement.ResolverContractCollection" Usage="apiResource.GetResolverContracts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ResolverContractCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ResolverContractResources in the Api. </summary>
        <returns> An object representing collection of ResolverContractResources and their operations over a ResolverContractResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceApiWiki">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.ServiceApiWikiResource GetServiceApiWiki ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ServiceApiWikiResource GetServiceApiWiki() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.GetServiceApiWiki" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceApiWiki () As ServiceApiWikiResource" />
      <MemberSignature Language="F#" Value="abstract member GetServiceApiWiki : unit -&gt; Azure.ResourceManager.ApiManagement.ServiceApiWikiResource&#xA;override this.GetServiceApiWiki : unit -&gt; Azure.ResourceManager.ApiManagement.ServiceApiWikiResource" Usage="apiResource.GetServiceApiWiki " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ServiceApiWikiResource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets an object representing a ServiceApiWikiResource along with the instance operations that can be performed on it in the Api. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiManagement.ServiceApiWikiResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ApiManagement.ApiResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.ApiManagement.ApiResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.ApiManagement.ApiResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.ApiManagement.ApiResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.ApiData&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.ApiManagement.ApiData IJsonModel&lt;ApiData&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiData System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.ApiData&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#ApiManagement#ApiData&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As ApiData Implements IJsonModel(Of ApiData).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.ApiData&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.ApiManagement.ApiData&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.ApiData&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.ApiManagement.ApiData" Usage="apiResource.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.ApiData&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.ApiData&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;ApiData&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.ApiData&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#ApiManagement#ApiData&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of ApiData).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.ApiData&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.ApiData&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="apiResource.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ApiManagement.ApiData&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiData&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.ApiManagement.ApiData IPersistableModel&lt;ApiData&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.ApiData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiData&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#ApiManagement#ApiData&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As ApiData Implements IPersistableModel(Of ApiData).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiData&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.ApiManagement.ApiData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiData&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.ApiManagement.ApiData" Usage="apiResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiData&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.ApiData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiData&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;ApiData&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiData&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#ApiManagement#ApiData&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of ApiData).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiData&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiData&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="apiResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiData&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiData&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;ApiData&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiData&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#ApiManagement#ApiData&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of ApiData).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiData&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiData&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="apiResource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ApiManagement.ApiData&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt; Update (Azure.ETag ifMatch, Azure.ResourceManager.ApiManagement.Models.ApiPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiResource&gt; Update(valuetype Azure.ETag ifMatch, class Azure.ResourceManager.ApiManagement.Models.ApiPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.Update(Azure.ETag,Azure.ResourceManager.ApiManagement.Models.ApiPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (ifMatch As ETag, patch As ApiPatch, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.ETag * Azure.ResourceManager.ApiManagement.Models.ApiPatch * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;&#xA;override this.Update : Azure.ETag * Azure.ResourceManager.ApiManagement.Models.ApiPatch * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;" Usage="apiResource.Update (ifMatch, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifMatch" Type="Azure.ETag" />
        <Parameter Name="patch" Type="Azure.ResourceManager.ApiManagement.Models.ApiPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ifMatch"> ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update. </param>
        <param name="patch"> API Update Contract parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates the specified API of the API Management service instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}</description></item><item><term>Operation Id</term><description>Api_Update</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiManagement.ApiResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;&gt; UpdateAsync (Azure.ETag ifMatch, Azure.ResourceManager.ApiManagement.Models.ApiPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ApiResource&gt;&gt; UpdateAsync(valuetype Azure.ETag ifMatch, class Azure.ResourceManager.ApiManagement.Models.ApiPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ApiResource.UpdateAsync(Azure.ETag,Azure.ResourceManager.ApiManagement.Models.ApiPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (ifMatch As ETag, patch As ApiPatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.ETag * Azure.ResourceManager.ApiManagement.Models.ApiPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.ETag * Azure.ResourceManager.ApiManagement.Models.ApiPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;&gt;" Usage="apiResource.UpdateAsync (ifMatch, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ApiResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifMatch" Type="Azure.ETag" />
        <Parameter Name="patch" Type="Azure.ResourceManager.ApiManagement.Models.ApiPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ifMatch"> ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update. </param>
        <param name="patch"> API Update Contract parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates the specified API of the API Management service instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}</description></item><item><term>Operation Id</term><description>Api_Update</description></item><item><term>Default Api Version</term><description>2022-08-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiManagement.ApiResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
