<Type Name="MockableEnergyServicesSubscriptionResource" FullName="Azure.ResourceManager.EnergyServices.Mocking.MockableEnergyServicesSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableEnergyServicesSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableEnergyServicesSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.EnergyServices.Mocking.MockableEnergyServicesSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableEnergyServicesSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableEnergyServicesSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.EnergyServices</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableEnergyServicesSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EnergyServices.Mocking.MockableEnergyServicesSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EnergyServices</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.EnergyServices.Mocking.MockableEnergyServicesSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckNameAvailabilityLocation">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityResult&gt; CheckNameAvailabilityLocation (Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityResult&gt; CheckNameAvailabilityLocation(class Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EnergyServices.Mocking.MockableEnergyServicesSubscriptionResource.CheckNameAvailabilityLocation(Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckNameAvailabilityLocation (content As EnergyServiceNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EnergyServiceNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckNameAvailabilityLocation : Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityResult&gt;&#xA;override this.CheckNameAvailabilityLocation : Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityResult&gt;" Usage="mockableEnergyServicesSubscriptionResource.CheckNameAvailabilityLocation (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EnergyServices</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> NameAvailabilityRequest object. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks the name availability of the resource with requested resource name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.OpenEnergyPlatform/checkNameAvailability</description></item><item><term>Operation Id</term><description>Locations_CheckNameAvailability</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckNameAvailabilityLocationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityResult&gt;&gt; CheckNameAvailabilityLocationAsync (Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityResult&gt;&gt; CheckNameAvailabilityLocationAsync(class Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EnergyServices.Mocking.MockableEnergyServicesSubscriptionResource.CheckNameAvailabilityLocationAsync(Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckNameAvailabilityLocationAsync (content As EnergyServiceNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EnergyServiceNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckNameAvailabilityLocationAsync : Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityResult&gt;&gt;&#xA;override this.CheckNameAvailabilityLocationAsync : Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityResult&gt;&gt;" Usage="mockableEnergyServicesSubscriptionResource.CheckNameAvailabilityLocationAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EnergyServices</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.EnergyServices.Models.EnergyServiceNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> NameAvailabilityRequest object. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks the name availability of the resource with requested resource name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.OpenEnergyPlatform/checkNameAvailability</description></item><item><term>Operation Id</term><description>Locations_CheckNameAvailability</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnergyServices">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.EnergyServices.EnergyServiceResource&gt; GetEnergyServices (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.EnergyServices.EnergyServiceResource&gt; GetEnergyServices(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EnergyServices.Mocking.MockableEnergyServicesSubscriptionResource.GetEnergyServices(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnergyServices (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of EnergyServiceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetEnergyServices : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EnergyServices.EnergyServiceResource&gt;&#xA;override this.GetEnergyServices : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EnergyServices.EnergyServiceResource&gt;" Usage="mockableEnergyServicesSubscriptionResource.GetEnergyServices cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EnergyServices</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.EnergyServices.EnergyServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists a collection of oep resources under the given Azure Subscription ID.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.OpenEnergyPlatform/energyServices</description></item><item><term>Operation Id</term><description>EnergyServices_ListBySubscription</description></item><item><term>Default Api Version</term><description>2022-04-04-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.EnergyServices.EnergyServiceResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.EnergyServices.EnergyServiceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnergyServicesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.EnergyServices.EnergyServiceResource&gt; GetEnergyServicesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.EnergyServices.EnergyServiceResource&gt; GetEnergyServicesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EnergyServices.Mocking.MockableEnergyServicesSubscriptionResource.GetEnergyServicesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnergyServicesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of EnergyServiceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetEnergyServicesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EnergyServices.EnergyServiceResource&gt;&#xA;override this.GetEnergyServicesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EnergyServices.EnergyServiceResource&gt;" Usage="mockableEnergyServicesSubscriptionResource.GetEnergyServicesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EnergyServices</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.EnergyServices.EnergyServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists a collection of oep resources under the given Azure Subscription ID.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.OpenEnergyPlatform/energyServices</description></item><item><term>Operation Id</term><description>EnergyServices_ListBySubscription</description></item><item><term>Default Api Version</term><description>2022-04-04-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.EnergyServices.EnergyServiceResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.EnergyServices.EnergyServiceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
