<Type Name="StorageExtensions" FullName="Azure.Storage.StorageExtensions">
  <TypeSignature Language="C#" Value="public static class StorageExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit StorageExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Storage.StorageExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Class StorageExtensions" />
  <TypeSignature Language="F#" Value="type StorageExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Storage.Common</AssemblyName>
    <AssemblyVersion>12.8.0.0</AssemblyVersion>
    <AssemblyVersion>12.9.0.0</AssemblyVersion>
    <AssemblyVersion>12.10.0.0</AssemblyVersion>
    <AssemblyVersion>12.11.0.0</AssemblyVersion>
    <AssemblyVersion>12.12.0.0</AssemblyVersion>
    <AssemblyVersion>12.13.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extensions and utilities for Azure Storage clients.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateServiceTimeoutScope">
      <MemberSignature Language="C#" Value="public static IDisposable CreateServiceTimeoutScope (TimeSpan? timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable CreateServiceTimeoutScope(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.StorageExtensions.CreateServiceTimeoutScope(System.Nullable{System.TimeSpan})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateServiceTimeoutScope (timeout As Nullable(Of TimeSpan)) As IDisposable" />
      <MemberSignature Language="F#" Value="static member CreateServiceTimeoutScope : Nullable&lt;TimeSpan&gt; -&gt; IDisposable" Usage="Azure.Storage.StorageExtensions.CreateServiceTimeoutScope timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Common</AssemblyName>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
        <AssemblyVersion>12.13.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="timeout">The server timeout for each HTTP request.</param>
        <summary>
             Allows you to specify a server timeout for any Storage operations executing on this thread for the duration of the scope.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-blob-service-operations">
             Setting timeouts for Blob service operations</see>,
             <see href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-file-service-operations">
             Setting timeouts for File service operations</see>,
             <see href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">
             Setting timeouts for Queue service operations</see>.
             </summary>
        <returns>The <see cref="T:System.IDisposable" /> instance that needs to be disposed when server timeout shouldn't be used anymore.</returns>
        <remarks>
             The server timeout is sent to the Azure Storage service for each REST request made within the scope.
             This value is not tracked or validated on the client, it is only passed to the Storage service.
            
             Consider passing a <see cref="T:System.Threading.CancellationToken" /> to client methods
             and properly sizing <see cref="P:Azure.Core.RetryOptions.NetworkTimeout" /> when configuring storage clients
             as prefered way of enforcing upper boundary of execution time.
             </remarks>
        <example>
             Sample usage:
             <code snippet="Snippet:Sample_StorageServerTimeout" language="csharp">
             BlobServiceClient client = new BlobServiceClient(connectionString, options);
             using (StorageExtensions.CreateServiceTimeoutScope(TimeSpan.FromSeconds(10)))
             {
                 client.GetProperties();
             }
             </code></example>
      </Docs>
    </Member>
  </Members>
</Type>
