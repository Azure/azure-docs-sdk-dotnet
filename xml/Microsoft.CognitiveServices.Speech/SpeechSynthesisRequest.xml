<Type Name="SpeechSynthesisRequest" FullName="Microsoft.CognitiveServices.Speech.SpeechSynthesisRequest">
  <TypeSignature Language="C#" Value="public class SpeechSynthesisRequest : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SpeechSynthesisRequest extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CognitiveServices.Speech.SpeechSynthesisRequest" />
  <TypeSignature Language="VB.NET" Value="Public Class SpeechSynthesisRequest&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type SpeechSynthesisRequest = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
    <AssemblyVersion>1.38.0.28</AssemblyVersion>
    <AssemblyVersion>1.41.1.28</AssemblyVersion>
    <AssemblyVersion>1.42.0.28</AssemblyVersion>
    <AssemblyVersion>1.43.0.28</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Contains detailed information for a speech synthesis request.
            Note: This class is in preview and may be subject to change in future versions.
            Added in version 1.37.0
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpeechSynthesisRequest (Microsoft.CognitiveServices.Speech.SpeechSynthesisRequestInputType inputType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.CognitiveServices.Speech.SpeechSynthesisRequestInputType inputType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechSynthesisRequest.#ctor(Microsoft.CognitiveServices.Speech.SpeechSynthesisRequestInputType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (inputType As SpeechSynthesisRequestInputType)" />
      <MemberSignature Language="F#" Value="new Microsoft.CognitiveServices.Speech.SpeechSynthesisRequest : Microsoft.CognitiveServices.Speech.SpeechSynthesisRequestInputType -&gt; Microsoft.CognitiveServices.Speech.SpeechSynthesisRequest" Usage="new Microsoft.CognitiveServices.Speech.SpeechSynthesisRequest inputType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.43.0.28</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="inputType" Type="Microsoft.CognitiveServices.Speech.SpeechSynthesisRequestInputType" />
      </Parameters>
      <Docs>
        <param name="inputType">The type of input for the request.</param>
        <summary>
            Creates a speech synthesis request.
            </summary>
        <remarks>
            This method creates a speech synthesis request.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechSynthesisRequest.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="speechSynthesisRequest.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.43.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Dispose of associated resources.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechSynthesisRequest.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="speechSynthesisRequest.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.43.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Flag to request disposal.</param>
        <summary>
            This method performs cleanup of resources.
            The Boolean parameter <paramref name="disposing" /> indicates whether the method is called from <see cref="M:System.IDisposable.Dispose" /> (if <paramref name="disposing" /> is true) or from the finalizer (if <paramref name="disposing" /> is false).
            Derived classes should override this method to dispose resource if needed.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public Microsoft.CognitiveServices.Speech.SpeechSynthesisRequestInputStream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CognitiveServices.Speech.SpeechSynthesisRequestInputStream InputStream" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CognitiveServices.Speech.SpeechSynthesisRequest.InputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputStream As SpeechSynthesisRequestInputStream" />
      <MemberSignature Language="F#" Value="member this.InputStream : Microsoft.CognitiveServices.Speech.SpeechSynthesisRequestInputStream" Usage="Microsoft.CognitiveServices.Speech.SpeechSynthesisRequest.InputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.43.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.SpeechSynthesisRequestInputStream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the input stream for the request.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pitch">
      <MemberSignature Language="C#" Value="public string Pitch { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pitch" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CognitiveServices.Speech.SpeechSynthesisRequest.Pitch" />
      <MemberSignature Language="VB.NET" Value="Public Property Pitch As String" />
      <MemberSignature Language="F#" Value="member this.Pitch : string" Usage="Microsoft.CognitiveServices.Speech.SpeechSynthesisRequest.Pitch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.43.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Sets the pitch of the synthesized speech.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public Microsoft.CognitiveServices.Speech.PropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CognitiveServices.Speech.PropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CognitiveServices.Speech.SpeechSynthesisRequest.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As PropertyCollection" />
      <MemberSignature Language="F#" Value="member this.Properties : Microsoft.CognitiveServices.Speech.PropertyCollection" Usage="Microsoft.CognitiveServices.Speech.SpeechSynthesisRequest.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.43.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Contains properties of the request.
            </summary>
        <value>To be added.</value>
        <remarks>
            Property keys appear in <see cref="T:Microsoft.CognitiveServices.Speech.PropertyId" /> and begin with
            SpeechServiceResponse_.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rate">
      <MemberSignature Language="C#" Value="public string Rate { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Rate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CognitiveServices.Speech.SpeechSynthesisRequest.Rate" />
      <MemberSignature Language="VB.NET" Value="Public Property Rate As String" />
      <MemberSignature Language="F#" Value="member this.Rate : string" Usage="Microsoft.CognitiveServices.Speech.SpeechSynthesisRequest.Rate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.43.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Sets the speaking rate of the synthesized speech.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Volume">
      <MemberSignature Language="C#" Value="public string Volume { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Volume" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CognitiveServices.Speech.SpeechSynthesisRequest.Volume" />
      <MemberSignature Language="VB.NET" Value="Public Property Volume As String" />
      <MemberSignature Language="F#" Value="member this.Volume : string" Usage="Microsoft.CognitiveServices.Speech.SpeechSynthesisRequest.Volume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.43.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Sets the volume of the synthesized speech.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
