<Type Name="SpeechTranslationConfig" FullName="Microsoft.CognitiveServices.Speech.SpeechTranslationConfig">
  <TypeSignature Language="C#" Value="public sealed class SpeechTranslationConfig : Microsoft.CognitiveServices.Speech.SpeechConfig" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SpeechTranslationConfig extends Microsoft.CognitiveServices.Speech.SpeechConfig" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CognitiveServices.Speech.SpeechTranslationConfig" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SpeechTranslationConfig&#xA;Inherits SpeechConfig" />
  <TypeSignature Language="F#" Value="type SpeechTranslationConfig = class&#xA;    inherit SpeechConfig" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CognitiveServices.Speech.SpeechConfig</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Speech translation configuration.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddTargetLanguage">
      <MemberSignature Language="C#" Value="public void AddTargetLanguage (string language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddTargetLanguage(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechTranslationConfig.AddTargetLanguage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddTargetLanguage (language As String)" />
      <MemberSignature Language="F#" Value="member this.AddTargetLanguage : string -&gt; unit" Usage="speechTranslationConfig.AddTargetLanguage language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language"></param>
        <summary>
            Add a target languages of translation.
            In case when speech synthesis is used and several target languages are specified for translation,
            the speech will be synthesized only for the first language.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromAuthorizationToken">
      <MemberSignature Language="C#" Value="public static Microsoft.CognitiveServices.Speech.SpeechTranslationConfig FromAuthorizationToken (string authorizationToken, string region);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.CognitiveServices.Speech.SpeechTranslationConfig FromAuthorizationToken(string authorizationToken, string region) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechTranslationConfig.FromAuthorizationToken(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromAuthorizationToken (authorizationToken As String, region As String) As SpeechTranslationConfig" />
      <MemberSignature Language="F#" Value="static member FromAuthorizationToken : string * string -&gt; Microsoft.CognitiveServices.Speech.SpeechTranslationConfig" Usage="Microsoft.CognitiveServices.Speech.SpeechTranslationConfig.FromAuthorizationToken (authorizationToken, region)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.SpeechTranslationConfig</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authorizationToken" Type="System.String" />
        <Parameter Name="region" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authorizationToken">The authorization token.</param>
        <param name="region">The region name (see the <a href="https://aka.ms/csspeech/region">region page</a>).</param>
        <summary>
            Creates an instance of the speech translation config with specified authorization token and region.
            Note: The caller needs to ensure that the authorization token is valid. Before the authorization token
            expires, the caller needs to refresh it by setting the property `AuthorizationToken` on the corresponding
            recognizer with a new valid token.
            </summary>
        <returns>A speech config instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromEndpoint">
      <MemberSignature Language="C#" Value="public static Microsoft.CognitiveServices.Speech.SpeechTranslationConfig FromEndpoint (Uri endpoint, string subscriptionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.CognitiveServices.Speech.SpeechTranslationConfig FromEndpoint(class System.Uri endpoint, string subscriptionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechTranslationConfig.FromEndpoint(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromEndpoint (endpoint As Uri, subscriptionKey As String) As SpeechTranslationConfig" />
      <MemberSignature Language="F#" Value="static member FromEndpoint : Uri * string -&gt; Microsoft.CognitiveServices.Speech.SpeechTranslationConfig" Usage="Microsoft.CognitiveServices.Speech.SpeechTranslationConfig.FromEndpoint (endpoint, subscriptionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.SpeechTranslationConfig</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="subscriptionKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="endpoint">The service endpoint to connect to.</param>
        <param name="subscriptionKey">The subscription key.</param>
        <summary>
            Creates an instance of the speech translation config with specified endpoint and subscription key.
            This method is intended only for users who use a non-standard service endpoint or parameters.
            Note: The query parameters specified in the endpoint URL are not changed, even if they are set by any other APIs.
            For example, if language is defined in the uri as query parameter "language=de-DE", and also set by CreateSpeechRecognizer("en-US"),
            the language setting in uri takes precedence, and the effective language is "de-DE".
            Only the parameters that are not specified in the endpoint URL can be set by other APIs.
            </summary>
        <returns>A speech config instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromSubscription">
      <MemberSignature Language="C#" Value="public static Microsoft.CognitiveServices.Speech.SpeechTranslationConfig FromSubscription (string subscriptionKey, string region);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.CognitiveServices.Speech.SpeechTranslationConfig FromSubscription(string subscriptionKey, string region) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechTranslationConfig.FromSubscription(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromSubscription (subscriptionKey As String, region As String) As SpeechTranslationConfig" />
      <MemberSignature Language="F#" Value="static member FromSubscription : string * string -&gt; Microsoft.CognitiveServices.Speech.SpeechTranslationConfig" Usage="Microsoft.CognitiveServices.Speech.SpeechTranslationConfig.FromSubscription (subscriptionKey, region)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.SpeechTranslationConfig</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionKey" Type="System.String" />
        <Parameter Name="region" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionKey">The subscription key, can be empty if authorization token is specified later.</param>
        <param name="region">The region name (see the <a href="https://aka.ms/csspeech/region">region page</a>).</param>
        <summary>
            Creates an instance of speech translation config with specified subscription key and region.
            </summary>
        <returns>A speech config instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetLanguages">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; TargetLanguages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; TargetLanguages" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CognitiveServices.Speech.SpeechTranslationConfig.TargetLanguages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetLanguages As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="F#" Value="member this.TargetLanguages : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="Microsoft.CognitiveServices.Speech.SpeechTranslationConfig.TargetLanguages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a collection of languages to translate to.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VoiceName">
      <MemberSignature Language="C#" Value="public string VoiceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VoiceName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CognitiveServices.Speech.SpeechTranslationConfig.VoiceName" />
      <MemberSignature Language="VB.NET" Value="Public Property VoiceName As String" />
      <MemberSignature Language="F#" Value="member this.VoiceName : string with get, set" Usage="Microsoft.CognitiveServices.Speech.SpeechTranslationConfig.VoiceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specifies the name of voice tag if a synthesized audio output is desired.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>