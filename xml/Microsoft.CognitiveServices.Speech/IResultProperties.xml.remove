<Type Name="IResultProperties" FullName="Microsoft.CognitiveServices.Speech.IResultProperties">
  <TypeSignature Language="C#" Value="public interface IResultProperties" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IResultProperties" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CognitiveServices.Speech.IResultProperties" />
  <TypeSignature Language="VB.NET" Value="Public Interface IResultProperties" />
  <TypeSignature Language="F#" Value="type IResultProperties = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Interface to retrieve a property value from property collection of recognition result.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Get&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Get&lt;T&gt; (Microsoft.CognitiveServices.Speech.ResultPropertyKind propertyKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T Get&lt;T&gt;(valuetype Microsoft.CognitiveServices.Speech.ResultPropertyKind propertyKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.IResultProperties.Get``1(Microsoft.CognitiveServices.Speech.ResultPropertyKind)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get(Of T) (propertyKind As ResultPropertyKind) As T" />
      <MemberSignature Language="F#" Value="abstract member Get : Microsoft.CognitiveServices.Speech.ResultPropertyKind -&gt; 'T" Usage="iResultProperties.Get propertyKind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyKind" Type="Microsoft.CognitiveServices.Speech.ResultPropertyKind" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of property. only string, int and bool are supported.</typeparam>
        <param name="propertyKind">The kind of property. see <see cref="T:Microsoft.CognitiveServices.Speech.ResultPropertyKind" /></param>
        <summary>
            Returns value of the property in type <typeparamref name="T" />. 
            The property must have the same type as <typeparamref name="T" />.
            Currently only string, int and bool are allowed.
            If the property value is not defined, a default value is returned: an empty string if <typeparamref name="T" /> is string,
            0 if <typeparamref name="T" /> is int, and false if <typeparamref name="T" /> is bool.
            </summary>
        <returns>value of the property.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Get&lt;T&gt; (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T Get&lt;T&gt;(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.IResultProperties.Get``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get(Of T) (propertyName As String) As T" />
      <MemberSignature Language="F#" Value="abstract member Get : string -&gt; 'T" Usage="iResultProperties.Get propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of property. only string, int and bool are supported.</typeparam>
        <param name="propertyName">The name of property.</param>
        <summary>
            Returns value of the property in type <typeparamref name="T" />. 
            The property must have the same type as <typeparamref name="T" />.
            Currently only string, int and bool are allowed.
            If the property value is not defined, a default value is returned: an empty string if <typeparamref name="T" /> is string,
            0 if <typeparamref name="T" /> is int, and false if <typeparamref name="T" /> is bool.
            </summary>
        <returns>value of the property.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Get&lt;T&gt; (Microsoft.CognitiveServices.Speech.ResultPropertyKind propertyKind, T defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T Get&lt;T&gt;(valuetype Microsoft.CognitiveServices.Speech.ResultPropertyKind propertyKind, !!T defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.IResultProperties.Get``1(Microsoft.CognitiveServices.Speech.ResultPropertyKind,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get(Of T) (propertyKind As ResultPropertyKind, defaultValue As T) As T" />
      <MemberSignature Language="F#" Value="abstract member Get : Microsoft.CognitiveServices.Speech.ResultPropertyKind * 'T -&gt; 'T" Usage="iResultProperties.Get (propertyKind, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyKind" Type="Microsoft.CognitiveServices.Speech.ResultPropertyKind" />
        <Parameter Name="defaultValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of property. only string, int and bool are supported.</typeparam>
        <param name="propertyKind">The kind of property. see <see cref="T:Microsoft.CognitiveServices.Speech.ResultPropertyKind" /></param>
        <param name="defaultValue">The default value which is returned if no value is defined for the property.</param>
        <summary>
            Returns value of the property in type <typeparamref name="T" />. 
            The property must have the same type as <typeparamref name="T" />.
            Currently only string, int and bool are allowed.
            If the property value is not defined, the specified defaultValue is returned.
            </summary>
        <returns>value of the property.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Get&lt;T&gt; (string propertyName, T defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T Get&lt;T&gt;(string propertyName, !!T defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.IResultProperties.Get``1(System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get(Of T) (propertyName As String, defaultValue As T) As T" />
      <MemberSignature Language="F#" Value="abstract member Get : string * 'T -&gt; 'T" Usage="iResultProperties.Get (propertyName, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="defaultValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of property. only string, int and bool are supported.</typeparam>
        <param name="propertyName">The name of property.</param>
        <param name="defaultValue">The default value which is returned if no value is defined for the property.</param>
        <summary>
            Returns value of the property in type <typeparamref name="T" />.
            The property must have the same type as <typeparamref name="T" />.
            Currently only string, int and bool are allowed.
            If the property value is not defined, the specified defaultValue is returned.
            </summary>
        <returns>value of the property.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Is&lt;T&gt;">
      <MemberSignature Language="C#" Value="public bool Is&lt;T&gt; (Microsoft.CognitiveServices.Speech.ResultPropertyKind propertyKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Is&lt;T&gt;(valuetype Microsoft.CognitiveServices.Speech.ResultPropertyKind propertyKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.IResultProperties.Is``1(Microsoft.CognitiveServices.Speech.ResultPropertyKind)" />
      <MemberSignature Language="VB.NET" Value="Public Function Is(Of T) (propertyKind As ResultPropertyKind) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Is : Microsoft.CognitiveServices.Speech.ResultPropertyKind -&gt; bool" Usage="iResultProperties.Is propertyKind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyKind" Type="Microsoft.CognitiveServices.Speech.ResultPropertyKind" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="propertyKind">The kind of property. see <see cref="T:Microsoft.CognitiveServices.Speech.ResultPropertyKind" /></param>
        <summary>
            Checks whether the property has a <typeparamref name="T" /> value.
            </summary>
        <returns>true if the property has a <typeparamref name="T" /> value, and false otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Is&lt;T&gt;">
      <MemberSignature Language="C#" Value="public bool Is&lt;T&gt; (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Is&lt;T&gt;(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.IResultProperties.Is``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Is(Of T) (propertyName As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Is : string -&gt; bool" Usage="iResultProperties.Is propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="propertyName">The name of property.</param>
        <summary>
            Checks whether the property has a <typeparamref name="T" /> value.
            </summary>
        <returns>true if the property has a <typeparamref name="T" /> value, and false otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
