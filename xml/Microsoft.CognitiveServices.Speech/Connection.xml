<Type Name="Connection" FullName="Microsoft.CognitiveServices.Speech.Connection">
  <TypeSignature Language="C#" Value="public sealed class Connection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Connection extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CognitiveServices.Speech.Connection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Connection" />
  <TypeSignature Language="F#" Value="type Connection = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Connection is a proxy class for managing connection to the speech service of the specified Recognizer.
            By default, a Recognizer autonomously manages connection to service when needed. 
            The Connection class provides additional methods for users to explicitly open or close a connection and 
            to subscribe to connection status changes.
            The use of Connection is optional, and mainly for scenarios where fine tuning of application
            behavior based on connection status is needed. Users can optionally call Open() to manually set up a connection 
            in advance before starting recognition on the Recognizer associated with this Connection. After starting recognition,
            calling Open() or Close() might fail, depending on the process state of the Recognizer. But this does not affect 
            the state of the associated Recognizer. And if the Recognizer needs to connect or disconnect to service, it will 
            setup or shutdown the connection independently. In this case the Connection will be notified by change of connection 
            status via Connected/Disconnected events.
            Added in version 1.2.0.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Connection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="connection.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Closes the connection the service.
            Users can optionally call Close() to manually shutdown the connection of the associated Recognizer. The call
            might fail, depending on the process state of the Recognizer. But the failure does not affect the state of the 
            associated Recognizer.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Connected">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CognitiveServices.Speech.ConnectionEventArgs&gt; Connected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CognitiveServices.Speech.ConnectionEventArgs&gt; Connected" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CognitiveServices.Speech.Connection.Connected" />
      <MemberSignature Language="VB.NET" Value="Public Event Connected As EventHandler(Of ConnectionEventArgs) " />
      <MemberSignature Language="F#" Value="member this.Connected : EventHandler&lt;Microsoft.CognitiveServices.Speech.ConnectionEventArgs&gt; " Usage="member this.Connected : System.EventHandler&lt;Microsoft.CognitiveServices.Speech.ConnectionEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CognitiveServices.Speech.ConnectionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The Connected event to indicate that the recognizer is connected to service.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Disconnected">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CognitiveServices.Speech.ConnectionEventArgs&gt; Disconnected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CognitiveServices.Speech.ConnectionEventArgs&gt; Disconnected" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CognitiveServices.Speech.Connection.Disconnected" />
      <MemberSignature Language="VB.NET" Value="Public Event Disconnected As EventHandler(Of ConnectionEventArgs) " />
      <MemberSignature Language="F#" Value="member this.Disconnected : EventHandler&lt;Microsoft.CognitiveServices.Speech.ConnectionEventArgs&gt; " Usage="member this.Disconnected : System.EventHandler&lt;Microsoft.CognitiveServices.Speech.ConnectionEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CognitiveServices.Speech.ConnectionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The Diconnected event to indicate that the recognizer is disconnected from service.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromRecognizer">
      <MemberSignature Language="C#" Value="public static Microsoft.CognitiveServices.Speech.Connection FromRecognizer (Microsoft.CognitiveServices.Speech.Recognizer recognizer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.CognitiveServices.Speech.Connection FromRecognizer(class Microsoft.CognitiveServices.Speech.Recognizer recognizer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Connection.FromRecognizer(Microsoft.CognitiveServices.Speech.Recognizer)" />
      <MemberSignature Language="F#" Value="static member FromRecognizer : Microsoft.CognitiveServices.Speech.Recognizer -&gt; Microsoft.CognitiveServices.Speech.Connection" Usage="Microsoft.CognitiveServices.Speech.Connection.FromRecognizer recognizer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.Connection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recognizer" Type="Microsoft.CognitiveServices.Speech.Recognizer" />
      </Parameters>
      <Docs>
        <param name="recognizer">The recognizer associated with the connection.</param>
        <summary>
            Gets the Connection instance from the specified recognizer. 
            </summary>
        <returns>The Connection instance of the recognizer.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open (bool forContinuousRecognition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Open(bool forContinuousRecognition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Connection.Open(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open (forContinuousRecognition As Boolean)" />
      <MemberSignature Language="F#" Value="member this.Open : bool -&gt; unit" Usage="connection.Open forContinuousRecognition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forContinuousRecognition" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="forContinuousRecognition">Indicates whether the connection is used for continuous recognition or single-shot recognition.</param>
        <summary>
            Starts to set up connection to the service.
            Users can optionally call Open() to manually set up a connection in advance before starting recognition on the 
            Recognizer associated with this Connection. After starting recognition, calling Open() might fail, depending on 
            the process state of the Recognizer. But the failure does not affect the state of the associated Recognizer.
            Note: On return, the connection might not be ready yet. Please subscribe to the Connected event to
            be notfied when the connection is established.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>