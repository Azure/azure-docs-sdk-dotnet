<Type Name="BinaryAudioStreamReader" FullName="Microsoft.CognitiveServices.Speech.BinaryAudioStreamReader">
  <TypeSignature Language="C#" Value="public sealed class BinaryAudioStreamReader : Microsoft.CognitiveServices.Speech.AudioInputStream, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BinaryAudioStreamReader extends Microsoft.CognitiveServices.Speech.AudioInputStream implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CognitiveServices.Speech.BinaryAudioStreamReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BinaryAudioStreamReader&#xA;Inherits AudioInputStream&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type BinaryAudioStreamReader = class&#xA;    inherit AudioInputStream&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CognitiveServices.Speech.AudioInputStream</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Adapter class to the native stream api.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryAudioStreamReader (Microsoft.CognitiveServices.Speech.AudioInputStreamFormat format, System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.CognitiveServices.Speech.AudioInputStreamFormat format, class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.BinaryAudioStreamReader.#ctor(Microsoft.CognitiveServices.Speech.AudioInputStreamFormat,System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (format As AudioInputStreamFormat, reader As BinaryReader)" />
      <MemberSignature Language="F#" Value="new Microsoft.CognitiveServices.Speech.BinaryAudioStreamReader : Microsoft.CognitiveServices.Speech.AudioInputStreamFormat * System.IO.BinaryReader -&gt; Microsoft.CognitiveServices.Speech.BinaryAudioStreamReader" Usage="new Microsoft.CognitiveServices.Speech.BinaryAudioStreamReader (format, reader)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="format" Type="Microsoft.CognitiveServices.Speech.AudioInputStreamFormat" />
        <Parameter Name="reader" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="format">The format of the underlying stream</param>
        <param name="reader">The underlying stream to read the audio data from. Note: The stream contains the bare sample data, not the container (like wave header data, etc).</param>
        <summary>
            Creates and initializes an instance of BinaryAudioStreamReader.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryAudioStreamReader (Microsoft.CognitiveServices.Speech.AudioInputStreamFormat format, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.CognitiveServices.Speech.AudioInputStreamFormat format, class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.BinaryAudioStreamReader.#ctor(Microsoft.CognitiveServices.Speech.AudioInputStreamFormat,System.IO.Stream)" />
      <MemberSignature Language="F#" Value="new Microsoft.CognitiveServices.Speech.BinaryAudioStreamReader : Microsoft.CognitiveServices.Speech.AudioInputStreamFormat * System.IO.Stream -&gt; Microsoft.CognitiveServices.Speech.BinaryAudioStreamReader" Usage="new Microsoft.CognitiveServices.Speech.BinaryAudioStreamReader (format, stream)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="format" Type="Microsoft.CognitiveServices.Speech.AudioInputStreamFormat" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="format">The format of the underlying stream</param>
        <param name="stream">The underlying stream to read the audio data from. Note: The stream contains the bare sample data, not the container (like wave header data, etc).</param>
        <summary>
            Creates and initializes an instance of BinaryAudioStreamReader.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.BinaryAudioStreamReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="binaryAudioStreamReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">If true, called through Dispose().</param>
        <summary>
            Disposes the resorces held by this instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public override Microsoft.CognitiveServices.Speech.AudioInputStreamFormat GetFormat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Microsoft.CognitiveServices.Speech.AudioInputStreamFormat GetFormat() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.BinaryAudioStreamReader.GetFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFormat () As AudioInputStreamFormat" />
      <MemberSignature Language="F#" Value="override this.GetFormat : unit -&gt; Microsoft.CognitiveServices.Speech.AudioInputStreamFormat" Usage="binaryAudioStreamReader.GetFormat " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.AudioInputStreamFormat</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the format of the stream.
            </summary>
        <returns>Returns the format of the stream</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] dataBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] dataBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.BinaryAudioStreamReader.Read(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (dataBuffer As Byte()) As Integer" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] -&gt; int" Usage="binaryAudioStreamReader.Read dataBuffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataBuffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="dataBuffer">The buffer to fill</param>
        <summary>
            Reads binary data from the stream.
            </summary>
        <returns>The number of bytes filled, or 0 in case the stream hits its end and there is no more data available.
            If there is no data immediate available, Read() blocks untils the next data becomes available.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
