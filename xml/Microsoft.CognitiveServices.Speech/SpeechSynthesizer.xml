<Type Name="SpeechSynthesizer" FullName="Microsoft.CognitiveServices.Speech.SpeechSynthesizer">
  <TypeSignature Language="C#" Value="public sealed class SpeechSynthesizer : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SpeechSynthesizer extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CognitiveServices.Speech.SpeechSynthesizer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SpeechSynthesizer&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type SpeechSynthesizer = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
    <AssemblyVersion>1.16.0.28</AssemblyVersion>
    <AssemblyVersion>1.17.0.28</AssemblyVersion>
    <AssemblyVersion>1.18.0.28</AssemblyVersion>
    <AssemblyVersion>1.19.0.28</AssemblyVersion>
    <AssemblyVersion>1.20.0.28</AssemblyVersion>
    <AssemblyVersion>1.21.0.28</AssemblyVersion>
    <AssemblyVersion>1.22.0.28</AssemblyVersion>
    <AssemblyVersion>1.23.0.28</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Performs speech synthesis to speaker, file, or other audio output streams, and gets synthesized audio as result.
            Updated in 1.16.0
            </summary>
    <remarks>
            See also: [Get started with text-to-speech](/azure/cognitive-services/speech-service/get-started-text-to-speech)
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpeechSynthesizer (Microsoft.CognitiveServices.Speech.EmbeddedSpeechConfig speechConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.CognitiveServices.Speech.EmbeddedSpeechConfig speechConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechSynthesizer.#ctor(Microsoft.CognitiveServices.Speech.EmbeddedSpeechConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (speechConfig As EmbeddedSpeechConfig)" />
      <MemberSignature Language="F#" Value="new Microsoft.CognitiveServices.Speech.SpeechSynthesizer : Microsoft.CognitiveServices.Speech.EmbeddedSpeechConfig -&gt; Microsoft.CognitiveServices.Speech.SpeechSynthesizer" Usage="new Microsoft.CognitiveServices.Speech.SpeechSynthesizer speechConfig" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
        <AssemblyVersion>1.23.0.28</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="speechConfig" Type="Microsoft.CognitiveServices.Speech.EmbeddedSpeechConfig" />
      </Parameters>
      <Docs>
        <param name="speechConfig">Embedded speech configuration</param>
        <summary>
            Creates a new instance of SpeechSynthesizer using EmbeddedSpeechConfig.
            Added in 1.19.0
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpeechSynthesizer (Microsoft.CognitiveServices.Speech.HybridSpeechConfig speechConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.CognitiveServices.Speech.HybridSpeechConfig speechConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechSynthesizer.#ctor(Microsoft.CognitiveServices.Speech.HybridSpeechConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (speechConfig As HybridSpeechConfig)" />
      <MemberSignature Language="F#" Value="new Microsoft.CognitiveServices.Speech.SpeechSynthesizer : Microsoft.CognitiveServices.Speech.HybridSpeechConfig -&gt; Microsoft.CognitiveServices.Speech.SpeechSynthesizer" Usage="new Microsoft.CognitiveServices.Speech.SpeechSynthesizer speechConfig" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.23.0.28</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="speechConfig" Type="Microsoft.CognitiveServices.Speech.HybridSpeechConfig" />
      </Parameters>
      <Docs>
        <param name="speechConfig">Hybrid speech configuration</param>
        <summary>
            Creates a new instance of SpeechSynthesizer using HybridSpeechConfig.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpeechSynthesizer (Microsoft.CognitiveServices.Speech.SpeechConfig speechConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.CognitiveServices.Speech.SpeechConfig speechConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechSynthesizer.#ctor(Microsoft.CognitiveServices.Speech.SpeechConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (speechConfig As SpeechConfig)" />
      <MemberSignature Language="F#" Value="new Microsoft.CognitiveServices.Speech.SpeechSynthesizer : Microsoft.CognitiveServices.Speech.SpeechConfig -&gt; Microsoft.CognitiveServices.Speech.SpeechSynthesizer" Usage="new Microsoft.CognitiveServices.Speech.SpeechSynthesizer speechConfig" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
        <AssemblyVersion>1.23.0.28</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="speechConfig" Type="Microsoft.CognitiveServices.Speech.SpeechConfig" />
      </Parameters>
      <Docs>
        <param name="speechConfig">Speech configuration</param>
        <summary>
            Creates a new instance of SpeechSynthesizer.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpeechSynthesizer (Microsoft.CognitiveServices.Speech.EmbeddedSpeechConfig speechConfig, Microsoft.CognitiveServices.Speech.Audio.AudioConfig audioConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.CognitiveServices.Speech.EmbeddedSpeechConfig speechConfig, class Microsoft.CognitiveServices.Speech.Audio.AudioConfig audioConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechSynthesizer.#ctor(Microsoft.CognitiveServices.Speech.EmbeddedSpeechConfig,Microsoft.CognitiveServices.Speech.Audio.AudioConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (speechConfig As EmbeddedSpeechConfig, audioConfig As AudioConfig)" />
      <MemberSignature Language="F#" Value="new Microsoft.CognitiveServices.Speech.SpeechSynthesizer : Microsoft.CognitiveServices.Speech.EmbeddedSpeechConfig * Microsoft.CognitiveServices.Speech.Audio.AudioConfig -&gt; Microsoft.CognitiveServices.Speech.SpeechSynthesizer" Usage="new Microsoft.CognitiveServices.Speech.SpeechSynthesizer (speechConfig, audioConfig)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
        <AssemblyVersion>1.23.0.28</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="speechConfig" Type="Microsoft.CognitiveServices.Speech.EmbeddedSpeechConfig" />
        <Parameter Name="audioConfig" Type="Microsoft.CognitiveServices.Speech.Audio.AudioConfig" />
      </Parameters>
      <Docs>
        <param name="speechConfig">Embedded speech configuration</param>
        <param name="audioConfig">Audio configuration</param>
        <summary>
            Creates a new instance of SpeechSynthesizer using EmbeddedSpeechConfig.
            Added in 1.19.0
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpeechSynthesizer (Microsoft.CognitiveServices.Speech.HybridSpeechConfig speechConfig, Microsoft.CognitiveServices.Speech.Audio.AudioConfig audioConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.CognitiveServices.Speech.HybridSpeechConfig speechConfig, class Microsoft.CognitiveServices.Speech.Audio.AudioConfig audioConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechSynthesizer.#ctor(Microsoft.CognitiveServices.Speech.HybridSpeechConfig,Microsoft.CognitiveServices.Speech.Audio.AudioConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (speechConfig As HybridSpeechConfig, audioConfig As AudioConfig)" />
      <MemberSignature Language="F#" Value="new Microsoft.CognitiveServices.Speech.SpeechSynthesizer : Microsoft.CognitiveServices.Speech.HybridSpeechConfig * Microsoft.CognitiveServices.Speech.Audio.AudioConfig -&gt; Microsoft.CognitiveServices.Speech.SpeechSynthesizer" Usage="new Microsoft.CognitiveServices.Speech.SpeechSynthesizer (speechConfig, audioConfig)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.23.0.28</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="speechConfig" Type="Microsoft.CognitiveServices.Speech.HybridSpeechConfig" />
        <Parameter Name="audioConfig" Type="Microsoft.CognitiveServices.Speech.Audio.AudioConfig" />
      </Parameters>
      <Docs>
        <param name="speechConfig">Hybrid speech configuration</param>
        <param name="audioConfig">Audio configuration</param>
        <summary>
            Creates a new instance of SpeechSynthesizer using HybridSpeechConfig.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpeechSynthesizer (Microsoft.CognitiveServices.Speech.SpeechConfig speechConfig, Microsoft.CognitiveServices.Speech.Audio.AudioConfig audioConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.CognitiveServices.Speech.SpeechConfig speechConfig, class Microsoft.CognitiveServices.Speech.Audio.AudioConfig audioConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechSynthesizer.#ctor(Microsoft.CognitiveServices.Speech.SpeechConfig,Microsoft.CognitiveServices.Speech.Audio.AudioConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (speechConfig As SpeechConfig, audioConfig As AudioConfig)" />
      <MemberSignature Language="F#" Value="new Microsoft.CognitiveServices.Speech.SpeechSynthesizer : Microsoft.CognitiveServices.Speech.SpeechConfig * Microsoft.CognitiveServices.Speech.Audio.AudioConfig -&gt; Microsoft.CognitiveServices.Speech.SpeechSynthesizer" Usage="new Microsoft.CognitiveServices.Speech.SpeechSynthesizer (speechConfig, audioConfig)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
        <AssemblyVersion>1.23.0.28</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="speechConfig" Type="Microsoft.CognitiveServices.Speech.SpeechConfig" />
        <Parameter Name="audioConfig" Type="Microsoft.CognitiveServices.Speech.Audio.AudioConfig" />
      </Parameters>
      <Docs>
        <param name="speechConfig">Speech configuration</param>
        <param name="audioConfig">Audio configuration</param>
        <summary>
            Creates a new instance of SpeechSynthesizer.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpeechSynthesizer (Microsoft.CognitiveServices.Speech.SpeechConfig speechConfig, Microsoft.CognitiveServices.Speech.AutoDetectSourceLanguageConfig autoDetectSourceLanguageConfig, Microsoft.CognitiveServices.Speech.Audio.AudioConfig audioConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.CognitiveServices.Speech.SpeechConfig speechConfig, class Microsoft.CognitiveServices.Speech.AutoDetectSourceLanguageConfig autoDetectSourceLanguageConfig, class Microsoft.CognitiveServices.Speech.Audio.AudioConfig audioConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechSynthesizer.#ctor(Microsoft.CognitiveServices.Speech.SpeechConfig,Microsoft.CognitiveServices.Speech.AutoDetectSourceLanguageConfig,Microsoft.CognitiveServices.Speech.Audio.AudioConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (speechConfig As SpeechConfig, autoDetectSourceLanguageConfig As AutoDetectSourceLanguageConfig, audioConfig As AudioConfig)" />
      <MemberSignature Language="F#" Value="new Microsoft.CognitiveServices.Speech.SpeechSynthesizer : Microsoft.CognitiveServices.Speech.SpeechConfig * Microsoft.CognitiveServices.Speech.AutoDetectSourceLanguageConfig * Microsoft.CognitiveServices.Speech.Audio.AudioConfig -&gt; Microsoft.CognitiveServices.Speech.SpeechSynthesizer" Usage="new Microsoft.CognitiveServices.Speech.SpeechSynthesizer (speechConfig, autoDetectSourceLanguageConfig, audioConfig)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
        <AssemblyVersion>1.23.0.28</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="speechConfig" Type="Microsoft.CognitiveServices.Speech.SpeechConfig" />
        <Parameter Name="autoDetectSourceLanguageConfig" Type="Microsoft.CognitiveServices.Speech.AutoDetectSourceLanguageConfig" />
        <Parameter Name="audioConfig" Type="Microsoft.CognitiveServices.Speech.Audio.AudioConfig" />
      </Parameters>
      <Docs>
        <param name="speechConfig">Speech configuration</param>
        <param name="autoDetectSourceLanguageConfig">The auto detect source language config</param>
        <param name="audioConfig">Audio configuration</param>
        <summary>
            Creates a new instance of SpeechSynthesizer.
            Added in 1.13.0
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationToken">
      <MemberSignature Language="C#" Value="public string AuthorizationToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthorizationToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CognitiveServices.Speech.SpeechSynthesizer.AuthorizationToken" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthorizationToken As String" />
      <MemberSignature Language="F#" Value="member this.AuthorizationToken : string with get, set" Usage="Microsoft.CognitiveServices.Speech.SpeechSynthesizer.AuthorizationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
        <AssemblyVersion>1.23.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets/sets authorization token used to communicate with the service.
            Note: The caller needs to ensure that the authorization token is valid. Before the authorization token
            expires, the caller needs to refresh it by calling this setter with a new valid token.
            Otherwise, the synthesizer will encounter errors while speech synthesis.
            Added in 1.7.0
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BookmarkReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisBookmarkEventArgs&gt; BookmarkReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CognitiveServices.Speech.SpeechSynthesisBookmarkEventArgs&gt; BookmarkReached" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CognitiveServices.Speech.SpeechSynthesizer.BookmarkReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BookmarkReached As EventHandler(Of SpeechSynthesisBookmarkEventArgs) " />
      <MemberSignature Language="F#" Value="member this.BookmarkReached : EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisBookmarkEventArgs&gt; " Usage="member this.BookmarkReached : System.EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisBookmarkEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
        <AssemblyVersion>1.23.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisBookmarkEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Signals that a bookmark was reached.
            Added in 1.16.0
            </summary>
        <remarks>
            See also: [Improve synthesis with Speech Synthesis Markup Language (SSML)](/azure/cognitive-services/speech-service/speech-synthesis-markup)
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechSynthesizer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="speechSynthesizer.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
        <AssemblyVersion>1.23.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Dispose of associated resources.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechSynthesizer.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="speechSynthesizer.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
        <AssemblyVersion>1.23.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVoicesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.CognitiveServices.Speech.SynthesisVoicesResult&gt; GetVoicesAsync (string locale = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.CognitiveServices.Speech.SynthesisVoicesResult&gt; GetVoicesAsync(string locale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechSynthesizer.GetVoicesAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetVoicesAsync (Optional locale As String = &quot;&quot;) As Task(Of SynthesisVoicesResult)" />
      <MemberSignature Language="F#" Value="member this.GetVoicesAsync : string -&gt; System.Threading.Tasks.Task&lt;Microsoft.CognitiveServices.Speech.SynthesisVoicesResult&gt;" Usage="speechSynthesizer.GetVoicesAsync locale" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
        <AssemblyVersion>1.23.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.CognitiveServices.Speech.SynthesisVoicesResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locale" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="locale">Specify the locale of voices, in BCP-47 format; or leave it empty to get all available voices.</param>
        <summary>
            Get the available voices.
            Added in 1.16.0
            </summary>
        <returns>A task representing the getting voices list operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public Microsoft.CognitiveServices.Speech.PropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CognitiveServices.Speech.PropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CognitiveServices.Speech.SpeechSynthesizer.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As PropertyCollection" />
      <MemberSignature Language="F#" Value="member this.Properties : Microsoft.CognitiveServices.Speech.PropertyCollection" Usage="Microsoft.CognitiveServices.Speech.SpeechSynthesizer.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
        <AssemblyVersion>1.23.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The collection of properties and their values defined for this <see cref="T:Microsoft.CognitiveServices.Speech.SpeechSynthesizer" />.
            Note: The property collection is only valid until the SpeechSynthesizer owning this Properties is disposed or finalized.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeakSsmlAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisResult&gt; SpeakSsmlAsync (string ssml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.CognitiveServices.Speech.SpeechSynthesisResult&gt; SpeakSsmlAsync(string ssml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechSynthesizer.SpeakSsmlAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakSsmlAsync (ssml As String) As Task(Of SpeechSynthesisResult)" />
      <MemberSignature Language="F#" Value="member this.SpeakSsmlAsync : string -&gt; System.Threading.Tasks.Task&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisResult&gt;" Usage="speechSynthesizer.SpeakSsmlAsync ssml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
        <AssemblyVersion>1.23.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ssml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ssml">The SSML to synthesize.</param>
        <summary>
            Synthesize speech from SSML synchronously (returns when done synthesizing).
            </summary>
        <returns>A task representing the started synthesis operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeakTextAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisResult&gt; SpeakTextAsync (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.CognitiveServices.Speech.SpeechSynthesisResult&gt; SpeakTextAsync(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechSynthesizer.SpeakTextAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakTextAsync (text As String) As Task(Of SpeechSynthesisResult)" />
      <MemberSignature Language="F#" Value="member this.SpeakTextAsync : string -&gt; System.Threading.Tasks.Task&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisResult&gt;" Usage="speechSynthesizer.SpeakTextAsync text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
        <AssemblyVersion>1.23.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Plain text to synthesize.</param>
        <summary>
            Synthesize speech from plain text synchronously (returns when done synthesizing).
            </summary>
        <returns>A task representing the completed synthesis operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartSpeakingSsmlAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisResult&gt; StartSpeakingSsmlAsync (string ssml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.CognitiveServices.Speech.SpeechSynthesisResult&gt; StartSpeakingSsmlAsync(string ssml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechSynthesizer.StartSpeakingSsmlAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartSpeakingSsmlAsync (ssml As String) As Task(Of SpeechSynthesisResult)" />
      <MemberSignature Language="F#" Value="member this.StartSpeakingSsmlAsync : string -&gt; System.Threading.Tasks.Task&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisResult&gt;" Usage="speechSynthesizer.StartSpeakingSsmlAsync ssml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
        <AssemblyVersion>1.23.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ssml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ssml">The SSML to synthesize.</param>
        <summary>
            Queue speech synthesis task from SSML as an asynchronous operation.
            </summary>
        <returns>A task representing the started synthesis operation.</returns>
        <remarks>
            This method is the asynchronous version of <see cref="M:Microsoft.CognitiveServices.Speech.SpeechSynthesizer.SpeakSsmlAsync(System.String)" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartSpeakingTextAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisResult&gt; StartSpeakingTextAsync (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.CognitiveServices.Speech.SpeechSynthesisResult&gt; StartSpeakingTextAsync(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechSynthesizer.StartSpeakingTextAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartSpeakingTextAsync (text As String) As Task(Of SpeechSynthesisResult)" />
      <MemberSignature Language="F#" Value="member this.StartSpeakingTextAsync : string -&gt; System.Threading.Tasks.Task&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisResult&gt;" Usage="speechSynthesizer.StartSpeakingTextAsync text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
        <AssemblyVersion>1.23.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The plain text to synthesize.</param>
        <summary>
            Queue speech synthesis task from plain text as an asynchronous operation.
            </summary>
        <returns>A task representing the started synthesis operation.</returns>
        <remarks>
            This method is the asynchronous version of <see cref="M:Microsoft.CognitiveServices.Speech.SpeechSynthesizer.SpeakTextAsync(System.String)" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopSpeakingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StopSpeakingAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StopSpeakingAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechSynthesizer.StopSpeakingAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function StopSpeakingAsync () As Task" />
      <MemberSignature Language="F#" Value="member this.StopSpeakingAsync : unit -&gt; System.Threading.Tasks.Task" Usage="speechSynthesizer.StopSpeakingAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
        <AssemblyVersion>1.23.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Stop speech synthesis.
            </summary>
        <returns>A task representing the asynchronous operation that stops the synthesis.</returns>
        <remarks>
            This method stops audio speech synthesis and discards any unread data in <see cref="T:Microsoft.CognitiveServices.Speech.Audio.PullAudioOutputStream" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SynthesisCanceled">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisEventArgs&gt; SynthesisCanceled;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CognitiveServices.Speech.SpeechSynthesisEventArgs&gt; SynthesisCanceled" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CognitiveServices.Speech.SpeechSynthesizer.SynthesisCanceled" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SynthesisCanceled As EventHandler(Of SpeechSynthesisEventArgs) " />
      <MemberSignature Language="F#" Value="member this.SynthesisCanceled : EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisEventArgs&gt; " Usage="member this.SynthesisCanceled : System.EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
        <AssemblyVersion>1.23.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Signals that the speech synthesis was canceled.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynthesisCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisEventArgs&gt; SynthesisCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CognitiveServices.Speech.SpeechSynthesisEventArgs&gt; SynthesisCompleted" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CognitiveServices.Speech.SpeechSynthesizer.SynthesisCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SynthesisCompleted As EventHandler(Of SpeechSynthesisEventArgs) " />
      <MemberSignature Language="F#" Value="member this.SynthesisCompleted : EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisEventArgs&gt; " Usage="member this.SynthesisCompleted : System.EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
        <AssemblyVersion>1.23.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Signals that speech synthesis has completed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynthesisStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisEventArgs&gt; SynthesisStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CognitiveServices.Speech.SpeechSynthesisEventArgs&gt; SynthesisStarted" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CognitiveServices.Speech.SpeechSynthesizer.SynthesisStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SynthesisStarted As EventHandler(Of SpeechSynthesisEventArgs) " />
      <MemberSignature Language="F#" Value="member this.SynthesisStarted : EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisEventArgs&gt; " Usage="member this.SynthesisStarted : System.EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
        <AssemblyVersion>1.23.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Signals that speech synthesis has started.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Synthesizing">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisEventArgs&gt; Synthesizing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CognitiveServices.Speech.SpeechSynthesisEventArgs&gt; Synthesizing" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CognitiveServices.Speech.SpeechSynthesizer.Synthesizing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Synthesizing As EventHandler(Of SpeechSynthesisEventArgs) " />
      <MemberSignature Language="F#" Value="member this.Synthesizing : EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisEventArgs&gt; " Usage="member this.Synthesizing : System.EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
        <AssemblyVersion>1.23.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Signals that speech synthesis is ongoing. This event fires each time the SDK receives an audio chunk from the Speech service.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisemeReceived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisVisemeEventArgs&gt; VisemeReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CognitiveServices.Speech.SpeechSynthesisVisemeEventArgs&gt; VisemeReceived" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CognitiveServices.Speech.SpeechSynthesizer.VisemeReceived" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VisemeReceived As EventHandler(Of SpeechSynthesisVisemeEventArgs) " />
      <MemberSignature Language="F#" Value="member this.VisemeReceived : EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisVisemeEventArgs&gt; " Usage="member this.VisemeReceived : System.EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisVisemeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
        <AssemblyVersion>1.23.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisVisemeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Signals that a viseme event was received.
            Added in 1.16.0
            </summary>
        <remarks>
            See also: [Get viseme events with the Speech SDK](/azure/cognitive-services/speech-service/how-to-speech-synthesis-viseme?pivots=programming-language-csharp#get-viseme-events-with-the-speech-sdk)
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WordBoundary">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisWordBoundaryEventArgs&gt; WordBoundary;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CognitiveServices.Speech.SpeechSynthesisWordBoundaryEventArgs&gt; WordBoundary" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CognitiveServices.Speech.SpeechSynthesizer.WordBoundary" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WordBoundary As EventHandler(Of SpeechSynthesisWordBoundaryEventArgs) " />
      <MemberSignature Language="F#" Value="member this.WordBoundary : EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisWordBoundaryEventArgs&gt; " Usage="member this.WordBoundary : System.EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisWordBoundaryEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.16.0.28</AssemblyVersion>
        <AssemblyVersion>1.17.0.28</AssemblyVersion>
        <AssemblyVersion>1.18.0.28</AssemblyVersion>
        <AssemblyVersion>1.19.0.28</AssemblyVersion>
        <AssemblyVersion>1.20.0.28</AssemblyVersion>
        <AssemblyVersion>1.21.0.28</AssemblyVersion>
        <AssemblyVersion>1.22.0.28</AssemblyVersion>
        <AssemblyVersion>1.23.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CognitiveServices.Speech.SpeechSynthesisWordBoundaryEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Signals that a word boundary was received.
            Added in 1.7.0
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
