<Type Name="IFactoryParameters" FullName="Microsoft.CognitiveServices.Speech.IFactoryParameters">
  <TypeSignature Language="C#" Value="public interface IFactoryParameters" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFactoryParameters" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CognitiveServices.Speech.IFactoryParameters" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFactoryParameters" />
  <TypeSignature Language="F#" Value="type IFactoryParameters = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Interface to retrieve a parameter value from factory parameter collection of speech factory.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Get&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Get&lt;T&gt; (Microsoft.CognitiveServices.Speech.FactoryParameterKind parameterKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T Get&lt;T&gt;(valuetype Microsoft.CognitiveServices.Speech.FactoryParameterKind parameterKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.IFactoryParameters.Get``1(Microsoft.CognitiveServices.Speech.FactoryParameterKind)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get(Of T) (parameterKind As FactoryParameterKind) As T" />
      <MemberSignature Language="F#" Value="abstract member Get : Microsoft.CognitiveServices.Speech.FactoryParameterKind -&gt; 'T" Usage="iFactoryParameters.Get parameterKind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="parameterKind" Type="Microsoft.CognitiveServices.Speech.FactoryParameterKind" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of parameter. only string, int and bool are supported.</typeparam>
        <param name="parameterKind">The kind of parameter. see <see cref="T:Microsoft.CognitiveServices.Speech.FactoryParameterKind" /></param>
        <summary>
            Returns value of the parameter in type <typeparamref name="T" />. 
            The parameter must have the same type as <typeparamref name="T" />.
            Currently only string, int and bool are allowed.
            If the parameter value is not defined, a default value is returned: an empty string if <typeparamref name="T" /> is string,
            0 if <typeparamref name="T" /> is int, and false if <typeparamref name="T" /> is bool.
            </summary>
        <returns>value of the parameter.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Get&lt;T&gt; (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T Get&lt;T&gt;(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.IFactoryParameters.Get``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get(Of T) (parameterName As String) As T" />
      <MemberSignature Language="F#" Value="abstract member Get : string -&gt; 'T" Usage="iFactoryParameters.Get parameterName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of parameter. only string, int and bool are supported.</typeparam>
        <param name="parameterName">The name of parameter.</param>
        <summary>
            Returns value of the parameter in type <typeparamref name="T" />. 
            The parameter must have the same type as <typeparamref name="T" />.
            Currently only string, int and bool are allowed.
            If the parameter value is not defined, a default value is returned: an empty string if <typeparamref name="T" /> is string,
            0 if <typeparamref name="T" /> is int, and false if <typeparamref name="T" /> is bool.
            </summary>
        <returns>value of the parameter.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Get&lt;T&gt; (Microsoft.CognitiveServices.Speech.FactoryParameterKind parameterKind, T defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T Get&lt;T&gt;(valuetype Microsoft.CognitiveServices.Speech.FactoryParameterKind parameterKind, !!T defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.IFactoryParameters.Get``1(Microsoft.CognitiveServices.Speech.FactoryParameterKind,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get(Of T) (parameterKind As FactoryParameterKind, defaultValue As T) As T" />
      <MemberSignature Language="F#" Value="abstract member Get : Microsoft.CognitiveServices.Speech.FactoryParameterKind * 'T -&gt; 'T" Usage="iFactoryParameters.Get (parameterKind, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="parameterKind" Type="Microsoft.CognitiveServices.Speech.FactoryParameterKind" />
        <Parameter Name="defaultValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of parameter. only string, int and bool are supported.</typeparam>
        <param name="parameterKind">The kind of parameter. see <see cref="T:Microsoft.CognitiveServices.Speech.FactoryParameterKind" /></param>
        <param name="defaultValue">The default value which is returned if no value is defined for the parameter.</param>
        <summary>
            Returns value of the parameter in type <typeparamref name="T" />. 
            The parameter must have the same type as <typeparamref name="T" />.
            Currently only string, int and bool are allowed.
            If the parameter value is not defined, the specified defaultValue is returned.
            </summary>
        <returns>value of the parameter.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Get&lt;T&gt; (string parameterName, T defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T Get&lt;T&gt;(string parameterName, !!T defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.IFactoryParameters.Get``1(System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get(Of T) (parameterName As String, defaultValue As T) As T" />
      <MemberSignature Language="F#" Value="abstract member Get : string * 'T -&gt; 'T" Usage="iFactoryParameters.Get (parameterName, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="defaultValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of parameter. only string, int and bool are supported.</typeparam>
        <param name="parameterName">The name of parameter.</param>
        <param name="defaultValue">The default value which is returned if no value is defined for the parameter.</param>
        <summary>
            Returns value of the parameter in type <typeparamref name="T" />. 
            The parameter must have the same type as <typeparamref name="T" />.
            Currently only string, int and bool are allowed.
            If the parameter value is not defined, the specified defaultValue is returned.
            </summary>
        <returns>value of the parameter.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Is&lt;T&gt;">
      <MemberSignature Language="C#" Value="public bool Is&lt;T&gt; (Microsoft.CognitiveServices.Speech.FactoryParameterKind parameterKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Is&lt;T&gt;(valuetype Microsoft.CognitiveServices.Speech.FactoryParameterKind parameterKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.IFactoryParameters.Is``1(Microsoft.CognitiveServices.Speech.FactoryParameterKind)" />
      <MemberSignature Language="VB.NET" Value="Public Function Is(Of T) (parameterKind As FactoryParameterKind) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Is : Microsoft.CognitiveServices.Speech.FactoryParameterKind -&gt; bool" Usage="iFactoryParameters.Is parameterKind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="parameterKind" Type="Microsoft.CognitiveServices.Speech.FactoryParameterKind" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="parameterKind">The kind of parameter. see <see cref="T:Microsoft.CognitiveServices.Speech.FactoryParameterKind" /></param>
        <summary>
            Checks whether the parameter has a <typeparamref name="T" /> value.
            </summary>
        <returns>true if the parameter has a <typeparamref name="T" /> value, and false otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Is&lt;T&gt;">
      <MemberSignature Language="C#" Value="public bool Is&lt;T&gt; (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Is&lt;T&gt;(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.IFactoryParameters.Is``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Is(Of T) (parameterName As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Is : string -&gt; bool" Usage="iFactoryParameters.Is parameterName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="parameterName">The name of parameter.</param>
        <summary>
            Checks whether the parameter has a <typeparamref name="T" /> value.
            </summary>
        <returns>true if the parameter has a <typeparamref name="T" /> value, and false otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (Microsoft.CognitiveServices.Speech.FactoryParameterKind parameterKind, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(valuetype Microsoft.CognitiveServices.Speech.FactoryParameterKind parameterKind, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.IFactoryParameters.Set(Microsoft.CognitiveServices.Speech.FactoryParameterKind,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Set (parameterKind As FactoryParameterKind, value As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Set : Microsoft.CognitiveServices.Speech.FactoryParameterKind * bool -&gt; unit" Usage="iFactoryParameters.Set (parameterKind, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterKind" Type="Microsoft.CognitiveServices.Speech.FactoryParameterKind" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameterKind">The kind of parameter. see <see cref="T:Microsoft.CognitiveServices.Speech.FactoryParameterKind" /></param>
        <param name="value">The value of the parameter.</param>
        <summary>
            Sets the boolean value of the parameter specified by name.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (Microsoft.CognitiveServices.Speech.FactoryParameterKind parameterKind, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(valuetype Microsoft.CognitiveServices.Speech.FactoryParameterKind parameterKind, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.IFactoryParameters.Set(Microsoft.CognitiveServices.Speech.FactoryParameterKind,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Set (parameterKind As FactoryParameterKind, value As Integer)" />
      <MemberSignature Language="F#" Value="abstract member Set : Microsoft.CognitiveServices.Speech.FactoryParameterKind * int -&gt; unit" Usage="iFactoryParameters.Set (parameterKind, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterKind" Type="Microsoft.CognitiveServices.Speech.FactoryParameterKind" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterKind">The kind of parameter. see <see cref="T:Microsoft.CognitiveServices.Speech.FactoryParameterKind" /></param>
        <param name="value">The value of the parameter.</param>
        <summary>
            Sets the integer value of the parameter specified by name.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (Microsoft.CognitiveServices.Speech.FactoryParameterKind parameterKind, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(valuetype Microsoft.CognitiveServices.Speech.FactoryParameterKind parameterKind, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.IFactoryParameters.Set(Microsoft.CognitiveServices.Speech.FactoryParameterKind,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Set (parameterKind As FactoryParameterKind, value As String)" />
      <MemberSignature Language="F#" Value="abstract member Set : Microsoft.CognitiveServices.Speech.FactoryParameterKind * string -&gt; unit" Usage="iFactoryParameters.Set (parameterKind, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterKind" Type="Microsoft.CognitiveServices.Speech.FactoryParameterKind" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterKind">The kind of parameter. see <see cref="T:Microsoft.CognitiveServices.Speech.FactoryParameterKind" /></param>
        <param name="value">The value of the parameter.</param>
        <summary>
            Sets the string value of the parameter specified by name.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (string parameterName, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string parameterName, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.IFactoryParameters.Set(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Set (parameterName As String, value As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Set : string * bool -&gt; unit" Usage="iFactoryParameters.Set (parameterName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameterName">The parameter name.</param>
        <param name="value">The value of the parameter.</param>
        <summary>
            Sets the boolean value of the parameter specified by name.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (string parameterName, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string parameterName, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.IFactoryParameters.Set(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Set (parameterName As String, value As Integer)" />
      <MemberSignature Language="F#" Value="abstract member Set : string * int -&gt; unit" Usage="iFactoryParameters.Set (parameterName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterName">The parameter name.</param>
        <param name="value">The value of the parameter.</param>
        <summary>
            Sets the integer value of the parameter specified by name.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (string parameterName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string parameterName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.IFactoryParameters.Set(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Set (parameterName As String, value As String)" />
      <MemberSignature Language="F#" Value="abstract member Set : string * string -&gt; unit" Usage="iFactoryParameters.Set (parameterName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">The name of parameter</param>
        <param name="value">The value of the parameter.</param>
        <summary>
            Sets the string value of the parameter specified by name.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
