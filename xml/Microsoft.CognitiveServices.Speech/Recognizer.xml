<Type Name="Recognizer" FullName="Microsoft.CognitiveServices.Speech.Recognizer">
  <TypeSignature Language="C#" Value="public class Recognizer : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Recognizer extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CognitiveServices.Speech.Recognizer" />
  <TypeSignature Language="VB.NET" Value="Public Class Recognizer&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type Recognizer = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Defines the base class Recognizer which mainly contains common event handlers.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Recognizer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="recognizer.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Dispose of associated resources.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Recognizer.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="recognizer.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Flag to request disposal.</param>
        <summary>
            This method performs cleanup of resources.
            The Boolean parameter <paramref name="disposing" /> indicates whether the method is called from <see cref="M:System.IDisposable.Dispose" /> (if <paramref name="disposing" /> is true) or from the finalizer (if <paramref name="disposing" /> is false).
            Derived classes should override this method to dispose resource if needed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CognitiveServices.Speech.SessionEventArgs&gt; SessionStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CognitiveServices.Speech.SessionEventArgs&gt; SessionStarted" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CognitiveServices.Speech.Recognizer.SessionStarted" />
      <MemberSignature Language="VB.NET" Value="Public Event SessionStarted As EventHandler(Of SessionEventArgs) " />
      <MemberSignature Language="F#" Value="member this.SessionStarted : EventHandler&lt;Microsoft.CognitiveServices.Speech.SessionEventArgs&gt; " Usage="member this.SessionStarted : System.EventHandler&lt;Microsoft.CognitiveServices.Speech.SessionEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CognitiveServices.Speech.SessionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Defines event handler for session started event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionStopped">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CognitiveServices.Speech.SessionEventArgs&gt; SessionStopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CognitiveServices.Speech.SessionEventArgs&gt; SessionStopped" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CognitiveServices.Speech.Recognizer.SessionStopped" />
      <MemberSignature Language="VB.NET" Value="Public Event SessionStopped As EventHandler(Of SessionEventArgs) " />
      <MemberSignature Language="F#" Value="member this.SessionStopped : EventHandler&lt;Microsoft.CognitiveServices.Speech.SessionEventArgs&gt; " Usage="member this.SessionStopped : System.EventHandler&lt;Microsoft.CognitiveServices.Speech.SessionEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CognitiveServices.Speech.SessionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Defines event handler for session stopped event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeechEndDetected">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CognitiveServices.Speech.RecognitionEventArgs&gt; SpeechEndDetected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CognitiveServices.Speech.RecognitionEventArgs&gt; SpeechEndDetected" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CognitiveServices.Speech.Recognizer.SpeechEndDetected" />
      <MemberSignature Language="VB.NET" Value="Public Event SpeechEndDetected As EventHandler(Of RecognitionEventArgs) " />
      <MemberSignature Language="F#" Value="member this.SpeechEndDetected : EventHandler&lt;Microsoft.CognitiveServices.Speech.RecognitionEventArgs&gt; " Usage="member this.SpeechEndDetected : System.EventHandler&lt;Microsoft.CognitiveServices.Speech.RecognitionEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CognitiveServices.Speech.RecognitionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Defines event handler for speech end detected event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeechStartDetected">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CognitiveServices.Speech.RecognitionEventArgs&gt; SpeechStartDetected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CognitiveServices.Speech.RecognitionEventArgs&gt; SpeechStartDetected" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CognitiveServices.Speech.Recognizer.SpeechStartDetected" />
      <MemberSignature Language="VB.NET" Value="Public Event SpeechStartDetected As EventHandler(Of RecognitionEventArgs) " />
      <MemberSignature Language="F#" Value="member this.SpeechStartDetected : EventHandler&lt;Microsoft.CognitiveServices.Speech.RecognitionEventArgs&gt; " Usage="member this.SpeechStartDetected : System.EventHandler&lt;Microsoft.CognitiveServices.Speech.RecognitionEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CognitiveServices.Speech.RecognitionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Defines event handler for speech start detected event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>