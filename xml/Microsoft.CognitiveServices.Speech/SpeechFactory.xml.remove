<Type Name="SpeechFactory" FullName="Microsoft.CognitiveServices.Speech.SpeechFactory">
  <TypeSignature Language="C#" Value="public sealed class SpeechFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SpeechFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CognitiveServices.Speech.SpeechFactory" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SpeechFactory" />
  <TypeSignature Language="F#" Value="type SpeechFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Factory methods to create recognizers.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AuthorizationToken">
      <MemberSignature Language="C#" Value="public string AuthorizationToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthorizationToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CognitiveServices.Speech.SpeechFactory.AuthorizationToken" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthorizationToken As String" />
      <MemberSignature Language="F#" Value="member this.AuthorizationToken : string with get, set" Usage="Microsoft.CognitiveServices.Speech.SpeechFactory.AuthorizationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets/sets the authorization token.
            If this is set, subscription key is ignored.
            User needs to make sure the provided authorization token is valid and not expired.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIntentRecognizer">
      <MemberSignature Language="C#" Value="public Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer CreateIntentRecognizer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer CreateIntentRecognizer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechFactory.CreateIntentRecognizer" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateIntentRecognizer () As IntentRecognizer" />
      <MemberSignature Language="F#" Value="member this.CreateIntentRecognizer : unit -&gt; Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer" Usage="speechFactory.CreateIntentRecognizer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates an intent recognizer using the default microphone input.
            </summary>
        <returns>An intent recognizer instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIntentRecognizer">
      <MemberSignature Language="C#" Value="public Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer CreateIntentRecognizer (string language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer CreateIntentRecognizer(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechFactory.CreateIntentRecognizer(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateIntentRecognizer (language As String) As IntentRecognizer" />
      <MemberSignature Language="F#" Value="member this.CreateIntentRecognizer : string -&gt; Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer" Usage="speechFactory.CreateIntentRecognizer language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">Specifies the name of spoken language to be recognized in BCP-47 format.</param>
        <summary>
            Creates an intent recognizer using the default microphone input for a specified language.
            </summary>
        <returns>An intent recognizer instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIntentRecognizerWithFileInput">
      <MemberSignature Language="C#" Value="public Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer CreateIntentRecognizerWithFileInput (string audioFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer CreateIntentRecognizerWithFileInput(string audioFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechFactory.CreateIntentRecognizerWithFileInput(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateIntentRecognizerWithFileInput (audioFile As String) As IntentRecognizer" />
      <MemberSignature Language="F#" Value="member this.CreateIntentRecognizerWithFileInput : string -&gt; Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer" Usage="speechFactory.CreateIntentRecognizerWithFileInput audioFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="audioFile">Specifies the audio input file. Currently, only WAV / PCM with 16-bit samples, 16 kHz sample rate, and a single channel (Mono) is supported.</param>
        <summary>
            Creates an intent recognizer using the specified file as audio input.
            </summary>
        <returns>An intent recognizer instance</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIntentRecognizerWithFileInput">
      <MemberSignature Language="C#" Value="public Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer CreateIntentRecognizerWithFileInput (string audioFile, string language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer CreateIntentRecognizerWithFileInput(string audioFile, string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechFactory.CreateIntentRecognizerWithFileInput(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateIntentRecognizerWithFileInput (audioFile As String, language As String) As IntentRecognizer" />
      <MemberSignature Language="F#" Value="member this.CreateIntentRecognizerWithFileInput : string * string -&gt; Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer" Usage="speechFactory.CreateIntentRecognizerWithFileInput (audioFile, language)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioFile" Type="System.String" />
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="audioFile">Specifies the audio input file. Currently, only WAV / PCM with 16-bit samples, 16 kHz sample rate, and a single channel (Mono) is supported.</param>
        <param name="language">Specifies the name of spoken language to be recognized in BCP-47 format.</param>
        <summary>
            Creates an intent recognizer using the specified file as audio input for a specified language.
            </summary>
        <returns>An intent recognizer instance</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIntentRecognizerWithStream">
      <MemberSignature Language="C#" Value="public Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer CreateIntentRecognizerWithStream (Microsoft.CognitiveServices.Speech.AudioInputStream audioStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer CreateIntentRecognizerWithStream(class Microsoft.CognitiveServices.Speech.AudioInputStream audioStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechFactory.CreateIntentRecognizerWithStream(Microsoft.CognitiveServices.Speech.AudioInputStream)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateIntentRecognizerWithStream (audioStream As AudioInputStream) As IntentRecognizer" />
      <MemberSignature Language="F#" Value="member this.CreateIntentRecognizerWithStream : Microsoft.CognitiveServices.Speech.AudioInputStream -&gt; Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer" Usage="speechFactory.CreateIntentRecognizerWithStream audioStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="Microsoft.CognitiveServices.Speech.AudioInputStream" />
      </Parameters>
      <Docs>
        <param name="audioStream">Specifies the audio input stream.</param>
        <summary>
            Creates an intent recognizer using the specified input stream as audio input.
            </summary>
        <returns>An intent recognizer instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIntentRecognizerWithStream">
      <MemberSignature Language="C#" Value="public Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer CreateIntentRecognizerWithStream (Microsoft.CognitiveServices.Speech.AudioInputStream audioStream, string language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer CreateIntentRecognizerWithStream(class Microsoft.CognitiveServices.Speech.AudioInputStream audioStream, string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechFactory.CreateIntentRecognizerWithStream(Microsoft.CognitiveServices.Speech.AudioInputStream,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateIntentRecognizerWithStream (audioStream As AudioInputStream, language As String) As IntentRecognizer" />
      <MemberSignature Language="F#" Value="member this.CreateIntentRecognizerWithStream : Microsoft.CognitiveServices.Speech.AudioInputStream * string -&gt; Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer" Usage="speechFactory.CreateIntentRecognizerWithStream (audioStream, language)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.Intent.IntentRecognizer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="Microsoft.CognitiveServices.Speech.AudioInputStream" />
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="audioStream">Specifies the audio input stream.</param>
        <param name="language">Specifies the name of spoken language to be recognized in BCP-47 format.</param>
        <summary>
            Creates an intent recognizer using the specified input stream as audio input for a specified language.
            </summary>
        <returns>An intent recognizer instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSpeechRecognizer">
      <MemberSignature Language="C#" Value="public Microsoft.CognitiveServices.Speech.SpeechRecognizer CreateSpeechRecognizer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CognitiveServices.Speech.SpeechRecognizer CreateSpeechRecognizer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechFactory.CreateSpeechRecognizer" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSpeechRecognizer () As SpeechRecognizer" />
      <MemberSignature Language="F#" Value="member this.CreateSpeechRecognizer : unit -&gt; Microsoft.CognitiveServices.Speech.SpeechRecognizer" Usage="speechFactory.CreateSpeechRecognizer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.SpeechRecognizer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a speech recognizer, using the default microphone input.
            </summary>
        <returns>A speech recognizer instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSpeechRecognizer">
      <MemberSignature Language="C#" Value="public Microsoft.CognitiveServices.Speech.SpeechRecognizer CreateSpeechRecognizer (string language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CognitiveServices.Speech.SpeechRecognizer CreateSpeechRecognizer(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechFactory.CreateSpeechRecognizer(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSpeechRecognizer (language As String) As SpeechRecognizer" />
      <MemberSignature Language="F#" Value="member this.CreateSpeechRecognizer : string -&gt; Microsoft.CognitiveServices.Speech.SpeechRecognizer" Usage="speechFactory.CreateSpeechRecognizer language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.SpeechRecognizer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">Specifies the name of spoken language to be recognized in BCP-47 format.</param>
        <summary>
            Creates a speech recognizer using the default microphone input for a specified language.
            </summary>
        <returns>A speech recognizer instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSpeechRecognizer">
      <MemberSignature Language="C#" Value="public Microsoft.CognitiveServices.Speech.SpeechRecognizer CreateSpeechRecognizer (string language, Microsoft.CognitiveServices.Speech.OutputFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CognitiveServices.Speech.SpeechRecognizer CreateSpeechRecognizer(string language, valuetype Microsoft.CognitiveServices.Speech.OutputFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechFactory.CreateSpeechRecognizer(System.String,Microsoft.CognitiveServices.Speech.OutputFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSpeechRecognizer (language As String, format As OutputFormat) As SpeechRecognizer" />
      <MemberSignature Language="F#" Value="member this.CreateSpeechRecognizer : string * Microsoft.CognitiveServices.Speech.OutputFormat -&gt; Microsoft.CognitiveServices.Speech.SpeechRecognizer" Usage="speechFactory.CreateSpeechRecognizer (language, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.SpeechRecognizer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="format" Type="Microsoft.CognitiveServices.Speech.OutputFormat" />
      </Parameters>
      <Docs>
        <param name="language">Specifies the name of spoken language to be recognized in BCP-47 format.</param>
        <param name="format">Output format: simple or detailed.</param>
        <summary>
            Creates a speech recognizer using the default microphone input for a specified language and a specified output format.
            </summary>
        <returns>A speech recognizer instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSpeechRecognizerWithFileInput">
      <MemberSignature Language="C#" Value="public Microsoft.CognitiveServices.Speech.SpeechRecognizer CreateSpeechRecognizerWithFileInput (string audioFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CognitiveServices.Speech.SpeechRecognizer CreateSpeechRecognizerWithFileInput(string audioFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechFactory.CreateSpeechRecognizerWithFileInput(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSpeechRecognizerWithFileInput (audioFile As String) As SpeechRecognizer" />
      <MemberSignature Language="F#" Value="member this.CreateSpeechRecognizerWithFileInput : string -&gt; Microsoft.CognitiveServices.Speech.SpeechRecognizer" Usage="speechFactory.CreateSpeechRecognizerWithFileInput audioFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.SpeechRecognizer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="audioFile">Specifies the audio input file. Currently, only WAV / PCM with 16-bit samples, 16 kHz sample rate, and a single channel (Mono) is supported.</param>
        <summary>
            Creates a speech recognizer using the specified file as audio input.
            </summary>
        <returns>A speech recognizer instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSpeechRecognizerWithFileInput">
      <MemberSignature Language="C#" Value="public Microsoft.CognitiveServices.Speech.SpeechRecognizer CreateSpeechRecognizerWithFileInput (string audioFile, string language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CognitiveServices.Speech.SpeechRecognizer CreateSpeechRecognizerWithFileInput(string audioFile, string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechFactory.CreateSpeechRecognizerWithFileInput(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSpeechRecognizerWithFileInput (audioFile As String, language As String) As SpeechRecognizer" />
      <MemberSignature Language="F#" Value="member this.CreateSpeechRecognizerWithFileInput : string * string -&gt; Microsoft.CognitiveServices.Speech.SpeechRecognizer" Usage="speechFactory.CreateSpeechRecognizerWithFileInput (audioFile, language)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.SpeechRecognizer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioFile" Type="System.String" />
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="audioFile">Specifies the audio input file. Currently, only WAV / PCM with 16-bit samples, 16 kHz sample rate, and a single channel (Mono) is supported.</param>
        <param name="language">Specifies the name of spoken language to be recognized in BCP-47 format.</param>
        <summary>
            Creates a speech recognizer using the specified file as audio input for a specified language.
            </summary>
        <returns>A speech recognizer instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSpeechRecognizerWithFileInput">
      <MemberSignature Language="C#" Value="public Microsoft.CognitiveServices.Speech.SpeechRecognizer CreateSpeechRecognizerWithFileInput (string audioFile, string language, Microsoft.CognitiveServices.Speech.OutputFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CognitiveServices.Speech.SpeechRecognizer CreateSpeechRecognizerWithFileInput(string audioFile, string language, valuetype Microsoft.CognitiveServices.Speech.OutputFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechFactory.CreateSpeechRecognizerWithFileInput(System.String,System.String,Microsoft.CognitiveServices.Speech.OutputFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSpeechRecognizerWithFileInput (audioFile As String, language As String, format As OutputFormat) As SpeechRecognizer" />
      <MemberSignature Language="F#" Value="member this.CreateSpeechRecognizerWithFileInput : string * string * Microsoft.CognitiveServices.Speech.OutputFormat -&gt; Microsoft.CognitiveServices.Speech.SpeechRecognizer" Usage="speechFactory.CreateSpeechRecognizerWithFileInput (audioFile, language, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.SpeechRecognizer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioFile" Type="System.String" />
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="format" Type="Microsoft.CognitiveServices.Speech.OutputFormat" />
      </Parameters>
      <Docs>
        <param name="audioFile">Specifies the audio input file. Currently, only WAV / PCM with 16-bit samples, 16 kHz sample rate, and a single channel (Mono) is supported.</param>
        <param name="language">Specifies the name of spoken language to be recognized in BCP-47 format.</param>
        <param name="format">Output format: simple or detailed.</param>
        <summary>
            Creates a speech recognizer using the specified file as audio input for a specified language and a specified output format.
            </summary>
        <returns>A speech recognizer instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSpeechRecognizerWithStream">
      <MemberSignature Language="C#" Value="public Microsoft.CognitiveServices.Speech.SpeechRecognizer CreateSpeechRecognizerWithStream (Microsoft.CognitiveServices.Speech.AudioInputStream audioStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CognitiveServices.Speech.SpeechRecognizer CreateSpeechRecognizerWithStream(class Microsoft.CognitiveServices.Speech.AudioInputStream audioStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechFactory.CreateSpeechRecognizerWithStream(Microsoft.CognitiveServices.Speech.AudioInputStream)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSpeechRecognizerWithStream (audioStream As AudioInputStream) As SpeechRecognizer" />
      <MemberSignature Language="F#" Value="member this.CreateSpeechRecognizerWithStream : Microsoft.CognitiveServices.Speech.AudioInputStream -&gt; Microsoft.CognitiveServices.Speech.SpeechRecognizer" Usage="speechFactory.CreateSpeechRecognizerWithStream audioStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.SpeechRecognizer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="Microsoft.CognitiveServices.Speech.AudioInputStream" />
      </Parameters>
      <Docs>
        <param name="audioStream">Specifies the audio input stream.</param>
        <summary>
            Creates a speech recognizer using the specified input stream as audio input.
            </summary>
        <returns>A speech recognizer instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSpeechRecognizerWithStream">
      <MemberSignature Language="C#" Value="public Microsoft.CognitiveServices.Speech.SpeechRecognizer CreateSpeechRecognizerWithStream (Microsoft.CognitiveServices.Speech.AudioInputStream audioStream, string language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CognitiveServices.Speech.SpeechRecognizer CreateSpeechRecognizerWithStream(class Microsoft.CognitiveServices.Speech.AudioInputStream audioStream, string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechFactory.CreateSpeechRecognizerWithStream(Microsoft.CognitiveServices.Speech.AudioInputStream,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSpeechRecognizerWithStream (audioStream As AudioInputStream, language As String) As SpeechRecognizer" />
      <MemberSignature Language="F#" Value="member this.CreateSpeechRecognizerWithStream : Microsoft.CognitiveServices.Speech.AudioInputStream * string -&gt; Microsoft.CognitiveServices.Speech.SpeechRecognizer" Usage="speechFactory.CreateSpeechRecognizerWithStream (audioStream, language)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.SpeechRecognizer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="Microsoft.CognitiveServices.Speech.AudioInputStream" />
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="audioStream">Specifies the audio input stream.</param>
        <param name="language">Specifies the name of spoken language to be recognized in BCP-47 format.</param>
        <summary>
            Creates a speech recognizer using the specified input stream as audio input for a specified language.
            </summary>
        <returns>A speech recognizer instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSpeechRecognizerWithStream">
      <MemberSignature Language="C#" Value="public Microsoft.CognitiveServices.Speech.SpeechRecognizer CreateSpeechRecognizerWithStream (Microsoft.CognitiveServices.Speech.AudioInputStream audioStream, string language, Microsoft.CognitiveServices.Speech.OutputFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CognitiveServices.Speech.SpeechRecognizer CreateSpeechRecognizerWithStream(class Microsoft.CognitiveServices.Speech.AudioInputStream audioStream, string language, valuetype Microsoft.CognitiveServices.Speech.OutputFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechFactory.CreateSpeechRecognizerWithStream(Microsoft.CognitiveServices.Speech.AudioInputStream,System.String,Microsoft.CognitiveServices.Speech.OutputFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSpeechRecognizerWithStream (audioStream As AudioInputStream, language As String, format As OutputFormat) As SpeechRecognizer" />
      <MemberSignature Language="F#" Value="member this.CreateSpeechRecognizerWithStream : Microsoft.CognitiveServices.Speech.AudioInputStream * string * Microsoft.CognitiveServices.Speech.OutputFormat -&gt; Microsoft.CognitiveServices.Speech.SpeechRecognizer" Usage="speechFactory.CreateSpeechRecognizerWithStream (audioStream, language, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.SpeechRecognizer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="Microsoft.CognitiveServices.Speech.AudioInputStream" />
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="format" Type="Microsoft.CognitiveServices.Speech.OutputFormat" />
      </Parameters>
      <Docs>
        <param name="audioStream">Specifies the audio input stream.</param>
        <param name="language">Specifies the name of spoken language to be recognized in BCP-47 format.</param>
        <param name="format">Output format: simple or detailed.</param>
        <summary>
            Creates a speech recognizer using the specified input stream as audio input for a specified language and a specified output format.
            </summary>
        <returns>A speech recognizer instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTranslationRecognizer">
      <MemberSignature Language="C#" Value="public Microsoft.CognitiveServices.Speech.Translation.TranslationRecognizer CreateTranslationRecognizer (string sourceLanguage, System.Collections.Generic.IEnumerable&lt;string&gt; targetLanguages);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CognitiveServices.Speech.Translation.TranslationRecognizer CreateTranslationRecognizer(string sourceLanguage, class System.Collections.Generic.IEnumerable`1&lt;string&gt; targetLanguages) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechFactory.CreateTranslationRecognizer(System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTranslationRecognizer (sourceLanguage As String, targetLanguages As IEnumerable(Of String)) As TranslationRecognizer" />
      <MemberSignature Language="F#" Value="member this.CreateTranslationRecognizer : string * seq&lt;string&gt; -&gt; Microsoft.CognitiveServices.Speech.Translation.TranslationRecognizer" Usage="speechFactory.CreateTranslationRecognizer (sourceLanguage, targetLanguages)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.Translation.TranslationRecognizer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceLanguage" Type="System.String" />
        <Parameter Name="targetLanguages" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="sourceLanguage">The spoken language that needs to be translated.</param>
        <param name="targetLanguages">The target languages of translation.</param>
        <summary>
            Creates a translation recognizer using the default microphone input for a specified source language and a specified list of target languages.
            </summary>
        <returns>A translation recognizer instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTranslationRecognizer">
      <MemberSignature Language="C#" Value="public Microsoft.CognitiveServices.Speech.Translation.TranslationRecognizer CreateTranslationRecognizer (string sourceLanguage, System.Collections.Generic.IEnumerable&lt;string&gt; targetLanguages, string voice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CognitiveServices.Speech.Translation.TranslationRecognizer CreateTranslationRecognizer(string sourceLanguage, class System.Collections.Generic.IEnumerable`1&lt;string&gt; targetLanguages, string voice) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechFactory.CreateTranslationRecognizer(System.String,System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTranslationRecognizer (sourceLanguage As String, targetLanguages As IEnumerable(Of String), voice As String) As TranslationRecognizer" />
      <MemberSignature Language="F#" Value="member this.CreateTranslationRecognizer : string * seq&lt;string&gt; * string -&gt; Microsoft.CognitiveServices.Speech.Translation.TranslationRecognizer" Usage="speechFactory.CreateTranslationRecognizer (sourceLanguage, targetLanguages, voice)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.Translation.TranslationRecognizer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceLanguage" Type="System.String" />
        <Parameter Name="targetLanguages" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="voice" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceLanguage">The spoken language that needs to be translated.</param>
        <param name="targetLanguages">The target languages of translation.</param>
        <param name="voice">Specifies the name of voice tag if a synthesized audio output is desired.</param>
        <summary>
            Creates a translation recognizer using the default microphone input for a specified source language, a specified list of target languages and a specified output voice.
            </summary>
        <returns>A translation recognizer instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTranslationRecognizerWithFileInput">
      <MemberSignature Language="C#" Value="public Microsoft.CognitiveServices.Speech.Translation.TranslationRecognizer CreateTranslationRecognizerWithFileInput (string audioFile, string sourceLanguage, System.Collections.Generic.IEnumerable&lt;string&gt; targetLanguages);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CognitiveServices.Speech.Translation.TranslationRecognizer CreateTranslationRecognizerWithFileInput(string audioFile, string sourceLanguage, class System.Collections.Generic.IEnumerable`1&lt;string&gt; targetLanguages) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechFactory.CreateTranslationRecognizerWithFileInput(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTranslationRecognizerWithFileInput (audioFile As String, sourceLanguage As String, targetLanguages As IEnumerable(Of String)) As TranslationRecognizer" />
      <MemberSignature Language="F#" Value="member this.CreateTranslationRecognizerWithFileInput : string * string * seq&lt;string&gt; -&gt; Microsoft.CognitiveServices.Speech.Translation.TranslationRecognizer" Usage="speechFactory.CreateTranslationRecognizerWithFileInput (audioFile, sourceLanguage, targetLanguages)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.Translation.TranslationRecognizer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioFile" Type="System.String" />
        <Parameter Name="sourceLanguage" Type="System.String" />
        <Parameter Name="targetLanguages" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="audioFile">Specifies the audio input file. Currently, only WAV / PCM with 16-bit samples, 16 kHz sample rate, and a single channel (Mono) is supported.</param>
        <param name="sourceLanguage">The spoken language that needs to be translated.</param>
        <param name="targetLanguages">The target languages of translation.</param>
        <summary>
            Creates a translation recognizer using the specified file as audio input for a specified source language and a specified list of target languages.
            </summary>
        <returns>A translation recognizer instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTranslationRecognizerWithFileInput">
      <MemberSignature Language="C#" Value="public Microsoft.CognitiveServices.Speech.Translation.TranslationRecognizer CreateTranslationRecognizerWithFileInput (string audioFile, string sourceLanguage, System.Collections.Generic.IEnumerable&lt;string&gt; targetLanguages, string voice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CognitiveServices.Speech.Translation.TranslationRecognizer CreateTranslationRecognizerWithFileInput(string audioFile, string sourceLanguage, class System.Collections.Generic.IEnumerable`1&lt;string&gt; targetLanguages, string voice) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechFactory.CreateTranslationRecognizerWithFileInput(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTranslationRecognizerWithFileInput (audioFile As String, sourceLanguage As String, targetLanguages As IEnumerable(Of String), voice As String) As TranslationRecognizer" />
      <MemberSignature Language="F#" Value="member this.CreateTranslationRecognizerWithFileInput : string * string * seq&lt;string&gt; * string -&gt; Microsoft.CognitiveServices.Speech.Translation.TranslationRecognizer" Usage="speechFactory.CreateTranslationRecognizerWithFileInput (audioFile, sourceLanguage, targetLanguages, voice)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.Translation.TranslationRecognizer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioFile" Type="System.String" />
        <Parameter Name="sourceLanguage" Type="System.String" />
        <Parameter Name="targetLanguages" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="voice" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="audioFile">Specifies the audio input file. Currently, only WAV / PCM with 16-bit samples, 16 kHz sample rate, and a single channel (Mono) is supported.</param>
        <param name="sourceLanguage">The spoken language that needs to be translated.</param>
        <param name="targetLanguages">The target languages of translation.</param>
        <param name="voice">Specifies the name of voice tag if a synthesized audio output is desired.</param>
        <summary>
            Creates a translation recognizer using the specified file as audio input for a specified source language, a specified list of target languages and a specified output voice.
            </summary>
        <returns>A translation recognizer instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTranslationRecognizerWithStream">
      <MemberSignature Language="C#" Value="public Microsoft.CognitiveServices.Speech.Translation.TranslationRecognizer CreateTranslationRecognizerWithStream (Microsoft.CognitiveServices.Speech.AudioInputStream audioStream, string sourceLanguage, System.Collections.Generic.IEnumerable&lt;string&gt; targetLanguages);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CognitiveServices.Speech.Translation.TranslationRecognizer CreateTranslationRecognizerWithStream(class Microsoft.CognitiveServices.Speech.AudioInputStream audioStream, string sourceLanguage, class System.Collections.Generic.IEnumerable`1&lt;string&gt; targetLanguages) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechFactory.CreateTranslationRecognizerWithStream(Microsoft.CognitiveServices.Speech.AudioInputStream,System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTranslationRecognizerWithStream (audioStream As AudioInputStream, sourceLanguage As String, targetLanguages As IEnumerable(Of String)) As TranslationRecognizer" />
      <MemberSignature Language="F#" Value="member this.CreateTranslationRecognizerWithStream : Microsoft.CognitiveServices.Speech.AudioInputStream * string * seq&lt;string&gt; -&gt; Microsoft.CognitiveServices.Speech.Translation.TranslationRecognizer" Usage="speechFactory.CreateTranslationRecognizerWithStream (audioStream, sourceLanguage, targetLanguages)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.Translation.TranslationRecognizer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="Microsoft.CognitiveServices.Speech.AudioInputStream" />
        <Parameter Name="sourceLanguage" Type="System.String" />
        <Parameter Name="targetLanguages" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="audioStream">Specifies the audio input stream.</param>
        <param name="sourceLanguage">The spoken language that needs to be translated.</param>
        <param name="targetLanguages">The target languages of translation.</param>
        <summary>
            Creates a translation recognizer using the specified input stream as audio input for a specified source language and a specified list of target languages.
            </summary>
        <returns>A translation recognizer instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTranslationRecognizerWithStream">
      <MemberSignature Language="C#" Value="public Microsoft.CognitiveServices.Speech.Translation.TranslationRecognizer CreateTranslationRecognizerWithStream (Microsoft.CognitiveServices.Speech.AudioInputStream audioStream, string sourceLanguage, System.Collections.Generic.IEnumerable&lt;string&gt; targetLanguages, string voice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CognitiveServices.Speech.Translation.TranslationRecognizer CreateTranslationRecognizerWithStream(class Microsoft.CognitiveServices.Speech.AudioInputStream audioStream, string sourceLanguage, class System.Collections.Generic.IEnumerable`1&lt;string&gt; targetLanguages, string voice) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechFactory.CreateTranslationRecognizerWithStream(Microsoft.CognitiveServices.Speech.AudioInputStream,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTranslationRecognizerWithStream (audioStream As AudioInputStream, sourceLanguage As String, targetLanguages As IEnumerable(Of String), voice As String) As TranslationRecognizer" />
      <MemberSignature Language="F#" Value="member this.CreateTranslationRecognizerWithStream : Microsoft.CognitiveServices.Speech.AudioInputStream * string * seq&lt;string&gt; * string -&gt; Microsoft.CognitiveServices.Speech.Translation.TranslationRecognizer" Usage="speechFactory.CreateTranslationRecognizerWithStream (audioStream, sourceLanguage, targetLanguages, voice)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.Translation.TranslationRecognizer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="Microsoft.CognitiveServices.Speech.AudioInputStream" />
        <Parameter Name="sourceLanguage" Type="System.String" />
        <Parameter Name="targetLanguages" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="voice" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="audioStream">Specifies the audio input stream.</param>
        <param name="sourceLanguage">The spoken language that needs to be translated.</param>
        <param name="targetLanguages">The target languages of translation.</param>
        <param name="voice">Specifies the name of voice tag if a synthesized audio output is desired.</param>
        <summary>
            Creates a translation recognizer using the specified input stream as audio input for a specified source language, a specified list of target languages and a specified output voice.
            </summary>
        <returns>A translation recognizer instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromAuthorizationToken">
      <MemberSignature Language="C#" Value="public static Microsoft.CognitiveServices.Speech.SpeechFactory FromAuthorizationToken (string authorizationToken, string region);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.CognitiveServices.Speech.SpeechFactory FromAuthorizationToken(string authorizationToken, string region) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechFactory.FromAuthorizationToken(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromAuthorizationToken (authorizationToken As String, region As String) As SpeechFactory" />
      <MemberSignature Language="F#" Value="static member FromAuthorizationToken : string * string -&gt; Microsoft.CognitiveServices.Speech.SpeechFactory" Usage="Microsoft.CognitiveServices.Speech.SpeechFactory.FromAuthorizationToken (authorizationToken, region)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.SpeechFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authorizationToken" Type="System.String" />
        <Parameter Name="region" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authorizationToken">The authorization token.</param>
        <param name="region">The region name (see the <a href="https://aka.ms/csspeech/region">region page</a>).</param>
        <summary>
            Creates an instance of the speech factory with specified authorization token and region.
            Note: The caller needs to ensure that the authorization token is valid. Before the authorization token
            expipres, the caller needs to refresh it by setting the property `AuthorizationToken` with a new valid token.
            Otherwise, all the recognizers created by this SpeechFactory instance will encounter errors during recognition.
            </summary>
        <returns>A speech factory instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromEndPoint">
      <MemberSignature Language="C#" Value="public static Microsoft.CognitiveServices.Speech.SpeechFactory FromEndPoint (Uri endpoint, string subscriptionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.CognitiveServices.Speech.SpeechFactory FromEndPoint(class System.Uri endpoint, string subscriptionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechFactory.FromEndPoint(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromEndPoint (endpoint As Uri, subscriptionKey As String) As SpeechFactory" />
      <MemberSignature Language="F#" Value="static member FromEndPoint : Uri * string -&gt; Microsoft.CognitiveServices.Speech.SpeechFactory" Usage="Microsoft.CognitiveServices.Speech.SpeechFactory.FromEndPoint (endpoint, subscriptionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.SpeechFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="subscriptionKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="endpoint">The service endpoint to connect to.</param>
        <param name="subscriptionKey">The subscription key.</param>
        <summary>
            Creates an instance of the speech factory with specified endpoint and subscription key.
            This method is intended only for users who use a non-standard service endpoint or paramters.
            Note: The query parameters specified in the endpoint URL are not changed, even if they are set by any other APIs.
            For example, if language is defined in the uri as query parameter "language=de-DE", and also set by CreateSpeechRecognizer("en-US"),
            the language setting in uri takes precedence, and the effective language is "de-DE".
            Only the parameters that are not specified in the endpoint URL can be set by other APIs.
            </summary>
        <returns>A speech factory instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromSubscription">
      <MemberSignature Language="C#" Value="public static Microsoft.CognitiveServices.Speech.SpeechFactory FromSubscription (string subscriptionKey, string region);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.CognitiveServices.Speech.SpeechFactory FromSubscription(string subscriptionKey, string region) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.SpeechFactory.FromSubscription(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromSubscription (subscriptionKey As String, region As String) As SpeechFactory" />
      <MemberSignature Language="F#" Value="static member FromSubscription : string * string -&gt; Microsoft.CognitiveServices.Speech.SpeechFactory" Usage="Microsoft.CognitiveServices.Speech.SpeechFactory.FromSubscription (subscriptionKey, region)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.SpeechFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionKey" Type="System.String" />
        <Parameter Name="region" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionKey">The subscription key.</param>
        <param name="region">The region name (see the <a href="https://aka.ms/csspeech/region">region page</a>).</param>
        <summary>
            Creates an instance of the speech factory with specified subscription key and region.
            </summary>
        <returns>A speech factory instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public Microsoft.CognitiveServices.Speech.IFactoryParameters Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CognitiveServices.Speech.IFactoryParameters Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CognitiveServices.Speech.SpeechFactory.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As IFactoryParameters" />
      <MemberSignature Language="F#" Value="member this.Parameters : Microsoft.CognitiveServices.Speech.IFactoryParameters" Usage="Microsoft.CognitiveServices.Speech.SpeechFactory.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.IFactoryParameters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The collection of parameters and their values defined for this <see cref="T:Microsoft.CognitiveServices.Speech.SpeechFactory" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Region">
      <MemberSignature Language="C#" Value="public string Region { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Region" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CognitiveServices.Speech.SpeechFactory.Region" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Region As String" />
      <MemberSignature Language="F#" Value="member this.Region : string" Usage="Microsoft.CognitiveServices.Speech.SpeechFactory.Region" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the region name of the service to be connected.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubscriptionKey">
      <MemberSignature Language="C#" Value="public string SubscriptionKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubscriptionKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CognitiveServices.Speech.SpeechFactory.SubscriptionKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubscriptionKey As String" />
      <MemberSignature Language="F#" Value="member this.SubscriptionKey : string" Usage="Microsoft.CognitiveServices.Speech.SpeechFactory.SubscriptionKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the subscription key.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
