<Type Name="IAppServiceTokenHandler" FullName="Microsoft.Azure.Mobile.Server.Authentication.IAppServiceTokenHandler">
  <TypeSignature Language="C#" Value="public interface IAppServiceTokenHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAppServiceTokenHandler" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Mobile.Server.Authentication.IAppServiceTokenHandler" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Mobile.Server.Authentication</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Provides an abstraction for handling security tokens. This abstraction can be used for validating security
            tokens and creating <see cref="T:System.Security.Claims.ClaimsPrincipal" /> instances.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateUserId">
      <MemberSignature Language="C#" Value="public string CreateUserId (string providerName, string providerUserId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateUserId(string providerName, string providerUserId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Mobile.Server.Authentication.IAppServiceTokenHandler.CreateUserId(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Mobile.Server.Authentication</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="providerUserId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerName">The login provider name.</param>
        <param name="providerUserId">The provider specific user id.</param>
        <summary>
            Creates a user id value contained within a <see cref="T:Microsoft.Azure.Mobile.Server.Authentication.ProviderCredentials" />. The user id is of the form
            <c>ProviderName:ProviderId</c> where the <c>ProviderName</c> is the unique identifier for the login provider
            and the <c>ProviderId</c> is the provider specific id for a given user.
            </summary>
        <returns>A formatted <see cref="T:System.String" /> representing the resulting value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseUserId">
      <MemberSignature Language="C#" Value="public bool TryParseUserId (string userId, out string providerName, out string providerUserId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryParseUserId(string userId, string providerName, string providerUserId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Mobile.Server.Authentication.IAppServiceTokenHandler.TryParseUserId(System.String,System.String@,System.String@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Mobile.Server.Authentication</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1021:AvoidOutParameters", Justification="This is not unreasonable for this API.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="providerName" Type="System.String&amp;" RefType="out" />
        <Parameter Name="providerUserId" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="userId">The input value to parse.</param>
        <param name="providerName">The login provider name; or <c>null</c> if the <paramref name="userId" /> is not valid.</param>
        <param name="providerUserId">The provider specific user id; or <c>null</c> is the <paramref name="userId" /> is not valid.</param>
        <summary>
            Parses a user id into its two components: a <c>ProviderName</c> which uniquely identifies the login provider
            and the <c>ProviderId</c> which identifies the provider specific id for a given user.
            </summary>
        <returns>
          <c>true</c> if <paramref name="userId" /> is valid; otherwise <c>false</c>/</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryValidateLoginToken">
      <MemberSignature Language="C#" Value="public bool TryValidateLoginToken (string token, string signingKey, System.Collections.Generic.IEnumerable&lt;string&gt; validAudiences, System.Collections.Generic.IEnumerable&lt;string&gt; validIssuers, out System.Security.Claims.ClaimsPrincipal claimsPrincipal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryValidateLoginToken(string token, string signingKey, class System.Collections.Generic.IEnumerable`1&lt;string&gt; validAudiences, class System.Collections.Generic.IEnumerable`1&lt;string&gt; validIssuers, class System.Security.Claims.ClaimsPrincipal claimsPrincipal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Mobile.Server.Authentication.IAppServiceTokenHandler.TryValidateLoginToken(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Security.Claims.ClaimsPrincipal@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Mobile.Server.Authentication</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.String" />
        <Parameter Name="signingKey" Type="System.String" />
        <Parameter Name="validAudiences" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="validIssuers" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="token">A <see cref="T:System.String" /> representation of the authentication token to validate.</param>
        <param name="signingKey">The secret key with which the token has been signed.</param>
        <param name="validAudiences">The valid audiences to accept in token validation.</param>
        <param name="validIssuers">The valid issuers to accept in token validation.</param>
        <param name="claimsPrincipal">The resulting <see cref="T:System.Security.Claims.ClaimsPrincipal" /> if the token is valid; null otherwise.</param>
        <summary>
            Validates a string representation of a mobile service authentication token used to authenticate a user request.
            </summary>
        <returns>
          <c>true</c> if <paramref name="token" /> is valid; otherwise <c>false</c>/</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
