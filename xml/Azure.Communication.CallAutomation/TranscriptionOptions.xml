<Type Name="TranscriptionOptions" FullName="Azure.Communication.CallAutomation.TranscriptionOptions">
  <TypeSignature Language="C#" Value="public class TranscriptionOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TranscriptionOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Communication.CallAutomation.TranscriptionOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class TranscriptionOptions" />
  <TypeSignature Language="F#" Value="type TranscriptionOptions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Options of live transcription. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TranscriptionOptions (Uri transportUri, Azure.Communication.CallAutomation.TranscriptionTransport transportType, string locale, bool startTranscription);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri transportUri, valuetype Azure.Communication.CallAutomation.TranscriptionTransport transportType, string locale, bool startTranscription) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.TranscriptionOptions.#ctor(System.Uri,Azure.Communication.CallAutomation.TranscriptionTransport,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transportUri As Uri, transportType As TranscriptionTransport, locale As String, startTranscription As Boolean)" />
      <MemberSignature Language="F#" Value="new Azure.Communication.CallAutomation.TranscriptionOptions : Uri * Azure.Communication.CallAutomation.TranscriptionTransport * string * bool -&gt; Azure.Communication.CallAutomation.TranscriptionOptions" Usage="new Azure.Communication.CallAutomation.TranscriptionOptions (transportUri, transportType, locale, startTranscription)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transportUri" Type="System.Uri" />
        <Parameter Name="transportType" Type="Azure.Communication.CallAutomation.TranscriptionTransport" />
        <Parameter Name="locale" Type="System.String" />
        <Parameter Name="startTranscription" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="transportUri"> Transport URL for live transcription. </param>
        <param name="transportType"> The type of transport to be used for live transcription, eg. Websocket. </param>
        <param name="locale"> Defines the locale for the data e.g en-CA, en-AU. </param>
        <param name="startTranscription"> Determines if the transcription should be started immediately after call is answered or not. </param>
        <summary> Initializes a new instance of TranscriptionOptions. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="transportUri" /> or <paramref name="locale" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Locale">
      <MemberSignature Language="C#" Value="public string Locale { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Locale" />
      <MemberSignature Language="DocId" Value="P:Azure.Communication.CallAutomation.TranscriptionOptions.Locale" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Locale As String" />
      <MemberSignature Language="F#" Value="member this.Locale : string" Usage="Azure.Communication.CallAutomation.TranscriptionOptions.Locale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Defines the locale for the data e.g en-CA, en-AU. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTranscription">
      <MemberSignature Language="C#" Value="public bool StartTranscription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StartTranscription" />
      <MemberSignature Language="DocId" Value="P:Azure.Communication.CallAutomation.TranscriptionOptions.StartTranscription" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartTranscription As Boolean" />
      <MemberSignature Language="F#" Value="member this.StartTranscription : bool" Usage="Azure.Communication.CallAutomation.TranscriptionOptions.StartTranscription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Determines if the transcription should be started immediately after call is answered or not. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranscriptionTransport">
      <MemberSignature Language="C#" Value="public Azure.Communication.CallAutomation.TranscriptionTransport TranscriptionTransport { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Azure.Communication.CallAutomation.TranscriptionTransport TranscriptionTransport" />
      <MemberSignature Language="DocId" Value="P:Azure.Communication.CallAutomation.TranscriptionOptions.TranscriptionTransport" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TranscriptionTransport As TranscriptionTransport" />
      <MemberSignature Language="F#" Value="member this.TranscriptionTransport : Azure.Communication.CallAutomation.TranscriptionTransport" Usage="Azure.Communication.CallAutomation.TranscriptionOptions.TranscriptionTransport" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.TranscriptionTransport</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The type of transport to be used for live transcription, eg. Websocket. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransportUrl">
      <MemberSignature Language="C#" Value="public Uri TransportUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri TransportUrl" />
      <MemberSignature Language="DocId" Value="P:Azure.Communication.CallAutomation.TranscriptionOptions.TransportUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransportUrl As Uri" />
      <MemberSignature Language="F#" Value="member this.TransportUrl : Uri" Usage="Azure.Communication.CallAutomation.TranscriptionOptions.TransportUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Transport URL for live transcription. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
