<Type Name="SendDtmfResult" FullName="Azure.Communication.CallAutomation.SendDtmfResult">
  <TypeSignature Language="C#" Value="public class SendDtmfResult" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SendDtmfResult extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Communication.CallAutomation.SendDtmfResult" />
  <TypeSignature Language="VB.NET" Value="Public Class SendDtmfResult" />
  <TypeSignature Language="F#" Value="type SendDtmfResult = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>The result from send dtmf request.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="WaitForEventProcessor">
      <MemberSignature Language="C#" Value="public Azure.Communication.CallAutomation.SendDtmfEventResult WaitForEventProcessor (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.Communication.CallAutomation.SendDtmfEventResult WaitForEventProcessor(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.SendDtmfResult.WaitForEventProcessor(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForEventProcessor (Optional cancellationToken As CancellationToken = Nothing) As SendDtmfEventResult" />
      <MemberSignature Language="F#" Value="member this.WaitForEventProcessor : System.Threading.CancellationToken -&gt; Azure.Communication.CallAutomation.SendDtmfEventResult" Usage="sendDtmfResult.WaitForEventProcessor cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.SendDtmfEventResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Cancellation Token can be used to set timeout or cancel this WaitForEventProcessor.</param>
        <summary>
            This is blocking call. Wait for <see cref="T:Azure.Communication.CallAutomation.SendDtmfEventResult" /> using <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventProcessor" />.
            </summary>
        <returns>Returns <see cref="T:Azure.Communication.CallAutomation.SendDtmfEventResult" /> which contains either <see cref="T:Azure.Communication.CallAutomation.SendDtmfCompleted" /> event or <see cref="T:Azure.Communication.CallAutomation.SendDtmfFailed" /> event.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForEventProcessorAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Azure.Communication.CallAutomation.SendDtmfEventResult&gt; WaitForEventProcessorAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Azure.Communication.CallAutomation.SendDtmfEventResult&gt; WaitForEventProcessorAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.SendDtmfResult.WaitForEventProcessorAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForEventProcessorAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of SendDtmfEventResult)" />
      <MemberSignature Language="F#" Value="member this.WaitForEventProcessorAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Communication.CallAutomation.SendDtmfEventResult&gt;" Usage="sendDtmfResult.WaitForEventProcessorAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Communication.CallAutomation.SendDtmfEventResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Cancellation Token can be used to set timeout or cancel this WaitForEventProcessor.</param>
        <summary>
            Wait for <see cref="T:Azure.Communication.CallAutomation.SendDtmfEventResult" /> using <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventProcessor" />.
            </summary>
        <returns>Returns <see cref="T:Azure.Communication.CallAutomation.SendDtmfEventResult" /> which contains either <see cref="T:Azure.Communication.CallAutomation.SendDtmfCompleted" /> event or <see cref="T:Azure.Communication.CallAutomation.SendDtmfCompleted" /> event.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
