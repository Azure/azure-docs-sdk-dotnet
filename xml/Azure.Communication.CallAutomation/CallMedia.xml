<Type Name="CallMedia" FullName="Azure.Communication.CallAutomation.CallMedia">
  <TypeSignature Language="C#" Value="public class CallMedia" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallMedia extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Communication.CallAutomation.CallMedia" />
  <TypeSignature Language="VB.NET" Value="Public Class CallMedia" />
  <TypeSignature Language="F#" Value="type CallMedia = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The Azure Communication Services Call Media Client.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CallMedia ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallMedia" /> for mocking.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallConnectionId">
      <MemberSignature Language="C#" Value="public virtual string CallConnectionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CallConnectionId" />
      <MemberSignature Language="DocId" Value="P:Azure.Communication.CallAutomation.CallMedia.CallConnectionId" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CallConnectionId As String" />
      <MemberSignature Language="F#" Value="member this.CallConnectionId : string" Usage="Azure.Communication.CallAutomation.CallMedia.CallConnectionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The call connection id.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAllMediaOperations">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.CallAutomation.CancelAllMediaOperationsResult&gt; CancelAllMediaOperations (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.CallAutomation.CancelAllMediaOperationsResult&gt; CancelAllMediaOperations(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.CancelAllMediaOperations(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelAllMediaOperations (Optional cancellationToken As CancellationToken = Nothing) As Response(Of CancelAllMediaOperationsResult)" />
      <MemberSignature Language="F#" Value="abstract member CancelAllMediaOperations : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallAutomation.CancelAllMediaOperationsResult&gt;&#xA;override this.CancelAllMediaOperations : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallAutomation.CancelAllMediaOperationsResult&gt;" Usage="callMedia.CancelAllMediaOperations cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.CallAutomation.CancelAllMediaOperationsResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Cancel any media operation to all participants.
            </summary>
        <returns>Returns <see cref="T:Azure.Communication.CallAutomation.CancelAllMediaOperationsResult" />, which can be used to wait for CancelAllMediaOperations' related events.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAllMediaOperationsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.CancelAllMediaOperationsResult&gt;&gt; CancelAllMediaOperationsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.CallAutomation.CancelAllMediaOperationsResult&gt;&gt; CancelAllMediaOperationsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.CancelAllMediaOperationsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelAllMediaOperationsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CancelAllMediaOperationsResult))" />
      <MemberSignature Language="F#" Value="abstract member CancelAllMediaOperationsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.CancelAllMediaOperationsResult&gt;&gt;&#xA;override this.CancelAllMediaOperationsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.CancelAllMediaOperationsResult&gt;&gt;" Usage="callMedia.CancelAllMediaOperationsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.CancelAllMediaOperationsResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Cancel any media operation to all participants.
            </summary>
        <returns>Returns <see cref="T:Azure.Communication.CallAutomation.CancelAllMediaOperationsResult" />, which can be used to wait for CancelAllMediaOperations' related events.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt; Play (Azure.Communication.CallAutomation.PlayOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.CallAutomation.PlayResult&gt; Play(class Azure.Communication.CallAutomation.PlayOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.Play(Azure.Communication.CallAutomation.PlayOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Play (options As PlayOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PlayResult)" />
      <MemberSignature Language="F#" Value="abstract member Play : Azure.Communication.CallAutomation.PlayOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&#xA;override this.Play : Azure.Communication.CallAutomation.PlayOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;" Usage="callMedia.Play (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.CallAutomation.PlayOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">An optional object containing play options and configurations.</param>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Plays audio to specified participant(s).
            </summary>
        <returns>Returns <see cref="T:Azure.Communication.CallAutomation.PlayResult" />, which can be used to wait for Play's related events.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt; Play (Azure.Communication.CallAutomation.PlaySource playSource, System.Collections.Generic.IEnumerable&lt;Azure.Communication.CommunicationIdentifier&gt; playTo, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.CallAutomation.PlayResult&gt; Play(class Azure.Communication.CallAutomation.PlaySource playSource, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Communication.CommunicationIdentifier&gt; playTo, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.Play(Azure.Communication.CallAutomation.PlaySource,System.Collections.Generic.IEnumerable{Azure.Communication.CommunicationIdentifier},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Play (playSource As PlaySource, playTo As IEnumerable(Of CommunicationIdentifier), Optional cancellationToken As CancellationToken = Nothing) As Response(Of PlayResult)" />
      <MemberSignature Language="F#" Value="abstract member Play : Azure.Communication.CallAutomation.PlaySource * seq&lt;Azure.Communication.CommunicationIdentifier&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&#xA;override this.Play : Azure.Communication.CallAutomation.PlaySource * seq&lt;Azure.Communication.CommunicationIdentifier&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;" Usage="callMedia.Play (playSource, playTo, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="playSource" Type="Azure.Communication.CallAutomation.PlaySource" />
        <Parameter Name="playTo" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.CommunicationIdentifier&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="playSource" />
        <param name="playTo" />
        <param name="cancellationToken" />
        <summary>
            Plays a file.
            </summary>
        <returns>Returns <see cref="T:Azure.Communication.CallAutomation.PlayResult" />, which can be used to wait for Play's related events.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt; PlayAsync (Azure.Communication.CallAutomation.PlayOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.CallAutomation.PlayResult&gt;&gt; PlayAsync(class Azure.Communication.CallAutomation.PlayOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.PlayAsync(Azure.Communication.CallAutomation.PlayOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PlayAsync (options As PlayOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PlayResult))" />
      <MemberSignature Language="F#" Value="abstract member PlayAsync : Azure.Communication.CallAutomation.PlayOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt;&#xA;override this.PlayAsync : Azure.Communication.CallAutomation.PlayOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt;" Usage="callMedia.PlayAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.CallAutomation.PlayOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">An optional object containing play options and configurations.</param>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Plays audio to specified participant(s) async.
            </summary>
        <returns>Returns a <see cref="T:Azure.Communication.CallAutomation.PlayResult" /> object, which can be used to wait for Play's related events.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt; PlayAsync (Azure.Communication.CallAutomation.PlaySource playSource, System.Collections.Generic.IEnumerable&lt;Azure.Communication.CommunicationIdentifier&gt; playTo, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.CallAutomation.PlayResult&gt;&gt; PlayAsync(class Azure.Communication.CallAutomation.PlaySource playSource, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Communication.CommunicationIdentifier&gt; playTo, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.PlayAsync(Azure.Communication.CallAutomation.PlaySource,System.Collections.Generic.IEnumerable{Azure.Communication.CommunicationIdentifier},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PlayAsync (playSource As PlaySource, playTo As IEnumerable(Of CommunicationIdentifier), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PlayResult))" />
      <MemberSignature Language="F#" Value="abstract member PlayAsync : Azure.Communication.CallAutomation.PlaySource * seq&lt;Azure.Communication.CommunicationIdentifier&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt;&#xA;override this.PlayAsync : Azure.Communication.CallAutomation.PlaySource * seq&lt;Azure.Communication.CommunicationIdentifier&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt;" Usage="callMedia.PlayAsync (playSource, playTo, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="playSource" Type="Azure.Communication.CallAutomation.PlaySource" />
        <Parameter Name="playTo" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.CommunicationIdentifier&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="playSource" />
        <param name="playTo" />
        <param name="cancellationToken" />
        <summary>
            Plays audio to specified participant(s) async.
            </summary>
        <returns>Returns <see cref="T:Azure.Communication.CallAutomation.PlayResult" />, which can be used to wait for Play's related events.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayToAll">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt; PlayToAll (Azure.Communication.CallAutomation.PlaySource playSource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.CallAutomation.PlayResult&gt; PlayToAll(class Azure.Communication.CallAutomation.PlaySource playSource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.PlayToAll(Azure.Communication.CallAutomation.PlaySource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PlayToAll (playSource As PlaySource, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PlayResult)" />
      <MemberSignature Language="F#" Value="abstract member PlayToAll : Azure.Communication.CallAutomation.PlaySource * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&#xA;override this.PlayToAll : Azure.Communication.CallAutomation.PlaySource * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;" Usage="callMedia.PlayToAll (playSource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="playSource" Type="Azure.Communication.CallAutomation.PlaySource" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="playSource" />
        <param name="cancellationToken" />
        <summary>
            Play to all participants.
            </summary>
        <returns>Returns <see cref="T:Azure.Communication.CallAutomation.PlayResult" />, which can be used to wait for Play's related events.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayToAll">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt; PlayToAll (Azure.Communication.CallAutomation.PlayToAllOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.CallAutomation.PlayResult&gt; PlayToAll(class Azure.Communication.CallAutomation.PlayToAllOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.PlayToAll(Azure.Communication.CallAutomation.PlayToAllOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PlayToAll (options As PlayToAllOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PlayResult)" />
      <MemberSignature Language="F#" Value="abstract member PlayToAll : Azure.Communication.CallAutomation.PlayToAllOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&#xA;override this.PlayToAll : Azure.Communication.CallAutomation.PlayToAllOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;" Usage="callMedia.PlayToAll (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.CallAutomation.PlayToAllOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">An optional object containing play options and configurations.</param>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Play audio to all participants.
            </summary>
        <returns>Returns <see cref="T:Azure.Communication.CallAutomation.PlayResult" />, which can be used to wait for Play's related events.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayToAllAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt; PlayToAllAsync (Azure.Communication.CallAutomation.PlaySource playSource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.CallAutomation.PlayResult&gt;&gt; PlayToAllAsync(class Azure.Communication.CallAutomation.PlaySource playSource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.PlayToAllAsync(Azure.Communication.CallAutomation.PlaySource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PlayToAllAsync (playSource As PlaySource, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PlayResult))" />
      <MemberSignature Language="F#" Value="abstract member PlayToAllAsync : Azure.Communication.CallAutomation.PlaySource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt;&#xA;override this.PlayToAllAsync : Azure.Communication.CallAutomation.PlaySource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt;" Usage="callMedia.PlayToAllAsync (playSource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="playSource" Type="Azure.Communication.CallAutomation.PlaySource" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="playSource" />
        <param name="cancellationToken" />
        <summary>
            Play to all participants async.
            </summary>
        <returns>Returns <see cref="T:Azure.Communication.CallAutomation.PlayResult" />, which can be used to wait for Play's related events.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayToAllAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt; PlayToAllAsync (Azure.Communication.CallAutomation.PlayToAllOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.CallAutomation.PlayResult&gt;&gt; PlayToAllAsync(class Azure.Communication.CallAutomation.PlayToAllOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.PlayToAllAsync(Azure.Communication.CallAutomation.PlayToAllOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PlayToAllAsync (options As PlayToAllOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PlayResult))" />
      <MemberSignature Language="F#" Value="abstract member PlayToAllAsync : Azure.Communication.CallAutomation.PlayToAllOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt;&#xA;override this.PlayToAllAsync : Azure.Communication.CallAutomation.PlayToAllOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt;" Usage="callMedia.PlayToAllAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.CallAutomation.PlayToAllOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">An optional object containing play options and configurations.</param>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Play audio to all participants async.
            </summary>
        <returns>Returns <see cref="T:Azure.Communication.CallAutomation.PlayResult" />, which can be used to wait for Play's related events.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendDtmfTones">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.CallAutomation.SendDtmfTonesResult&gt; SendDtmfTones (Azure.Communication.CallAutomation.SendDtmfTonesOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.CallAutomation.SendDtmfTonesResult&gt; SendDtmfTones(class Azure.Communication.CallAutomation.SendDtmfTonesOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.SendDtmfTones(Azure.Communication.CallAutomation.SendDtmfTonesOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendDtmfTones (options As SendDtmfTonesOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SendDtmfTonesResult)" />
      <MemberSignature Language="F#" Value="abstract member SendDtmfTones : Azure.Communication.CallAutomation.SendDtmfTonesOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallAutomation.SendDtmfTonesResult&gt;&#xA;override this.SendDtmfTones : Azure.Communication.CallAutomation.SendDtmfTonesOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallAutomation.SendDtmfTonesResult&gt;" Usage="callMedia.SendDtmfTones (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.CallAutomation.SendDtmfTonesResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.CallAutomation.SendDtmfTonesOptions" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="options">An optional object containing SendDtmfTones options and configurations.</param>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Send Dtmf tones with sendDtmfTonesOptions and configurations.
            </summary>
        <returns>Returns a Response containing a SendDtmfResult object indicating the result of the send operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendDtmfTones">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.CallAutomation.SendDtmfTonesResult&gt; SendDtmfTones (System.Collections.Generic.IEnumerable&lt;Azure.Communication.CallAutomation.DtmfTone&gt; tones, Azure.Communication.CommunicationIdentifier targetParticipant, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.CallAutomation.SendDtmfTonesResult&gt; SendDtmfTones(class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.Communication.CallAutomation.DtmfTone&gt; tones, class Azure.Communication.CommunicationIdentifier targetParticipant, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.SendDtmfTones(System.Collections.Generic.IEnumerable{Azure.Communication.CallAutomation.DtmfTone},Azure.Communication.CommunicationIdentifier,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendDtmfTones (tones As IEnumerable(Of DtmfTone), targetParticipant As CommunicationIdentifier, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SendDtmfTonesResult)" />
      <MemberSignature Language="F#" Value="abstract member SendDtmfTones : seq&lt;Azure.Communication.CallAutomation.DtmfTone&gt; * Azure.Communication.CommunicationIdentifier * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallAutomation.SendDtmfTonesResult&gt;&#xA;override this.SendDtmfTones : seq&lt;Azure.Communication.CallAutomation.DtmfTone&gt; * Azure.Communication.CommunicationIdentifier * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallAutomation.SendDtmfTonesResult&gt;" Usage="callMedia.SendDtmfTones (tones, targetParticipant, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.CallAutomation.SendDtmfTonesResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tones" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.CallAutomation.DtmfTone&gt;" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="targetParticipant" Type="Azure.Communication.CommunicationIdentifier" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="tones">A list of Tones to be sent.</param>
        <param name="targetParticipant">A target participant identifier for starting continuous Dtmf recognition.</param>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Send Dtmf tones.
            </summary>
        <returns>Returns a Response containing a SendDtmfResult object indicating the result of the send operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendDtmfTones">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.CallAutomation.SendDtmfTonesResult&gt; SendDtmfTones (System.Collections.Generic.IEnumerable&lt;Azure.Communication.CallAutomation.DtmfTone&gt; tones, Azure.Communication.CommunicationIdentifier targetParticipant, string operationContext = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.CallAutomation.SendDtmfTonesResult&gt; SendDtmfTones(class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.Communication.CallAutomation.DtmfTone&gt; tones, class Azure.Communication.CommunicationIdentifier targetParticipant, string operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.SendDtmfTones(System.Collections.Generic.IEnumerable{Azure.Communication.CallAutomation.DtmfTone},Azure.Communication.CommunicationIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendDtmfTones (tones As IEnumerable(Of DtmfTone), targetParticipant As CommunicationIdentifier, Optional operationContext As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SendDtmfTonesResult)" />
      <MemberSignature Language="F#" Value="abstract member SendDtmfTones : seq&lt;Azure.Communication.CallAutomation.DtmfTone&gt; * Azure.Communication.CommunicationIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallAutomation.SendDtmfTonesResult&gt;&#xA;override this.SendDtmfTones : seq&lt;Azure.Communication.CallAutomation.DtmfTone&gt; * Azure.Communication.CommunicationIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallAutomation.SendDtmfTonesResult&gt;" Usage="callMedia.SendDtmfTones (tones, targetParticipant, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.CallAutomation.SendDtmfTonesResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tones" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.CallAutomation.DtmfTone&gt;" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="targetParticipant" Type="Azure.Communication.CommunicationIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="operationContext" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="tones">A list of Tones to be sent.</param>
        <param name="targetParticipant">A target participant identifier for starting continuous Dtmf recognition.</param>
        <param name="operationContext">An optional context object containing information about the operation, such as a unique identifier or custom metadata.</param>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Send Dtmf tones.
            </summary>
        <returns>Returns a Response containing a SendDtmfResult object indicating the result of the send operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendDtmfTonesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.SendDtmfTonesResult&gt;&gt; SendDtmfTonesAsync (Azure.Communication.CallAutomation.SendDtmfTonesOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.CallAutomation.SendDtmfTonesResult&gt;&gt; SendDtmfTonesAsync(class Azure.Communication.CallAutomation.SendDtmfTonesOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.SendDtmfTonesAsync(Azure.Communication.CallAutomation.SendDtmfTonesOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendDtmfTonesAsync (options As SendDtmfTonesOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SendDtmfTonesResult))" />
      <MemberSignature Language="F#" Value="abstract member SendDtmfTonesAsync : Azure.Communication.CallAutomation.SendDtmfTonesOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.SendDtmfTonesResult&gt;&gt;&#xA;override this.SendDtmfTonesAsync : Azure.Communication.CallAutomation.SendDtmfTonesOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.SendDtmfTonesResult&gt;&gt;" Usage="callMedia.SendDtmfTonesAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.SendDtmfTonesResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.CallAutomation.SendDtmfTonesOptions" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="options">An optional object containing SendDtmfTones options and configurations.</param>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Send Dtmf tones in async mode with sendDtmfTonesOptions and configurations.
            </summary>
        <returns>Returns a Response containing a SendDtmfResult object indicating the result of the send operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendDtmfTonesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.SendDtmfTonesResult&gt;&gt; SendDtmfTonesAsync (System.Collections.Generic.IEnumerable&lt;Azure.Communication.CallAutomation.DtmfTone&gt; tones, Azure.Communication.CommunicationIdentifier targetParticipant, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.CallAutomation.SendDtmfTonesResult&gt;&gt; SendDtmfTonesAsync(class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.Communication.CallAutomation.DtmfTone&gt; tones, class Azure.Communication.CommunicationIdentifier targetParticipant, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.SendDtmfTonesAsync(System.Collections.Generic.IEnumerable{Azure.Communication.CallAutomation.DtmfTone},Azure.Communication.CommunicationIdentifier,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendDtmfTonesAsync (tones As IEnumerable(Of DtmfTone), targetParticipant As CommunicationIdentifier, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SendDtmfTonesResult))" />
      <MemberSignature Language="F#" Value="abstract member SendDtmfTonesAsync : seq&lt;Azure.Communication.CallAutomation.DtmfTone&gt; * Azure.Communication.CommunicationIdentifier * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.SendDtmfTonesResult&gt;&gt;&#xA;override this.SendDtmfTonesAsync : seq&lt;Azure.Communication.CallAutomation.DtmfTone&gt; * Azure.Communication.CommunicationIdentifier * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.SendDtmfTonesResult&gt;&gt;" Usage="callMedia.SendDtmfTonesAsync (tones, targetParticipant, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.SendDtmfTonesResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tones" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.CallAutomation.DtmfTone&gt;" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="targetParticipant" Type="Azure.Communication.CommunicationIdentifier" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="tones">A list of Tones to be sent.</param>
        <param name="targetParticipant">A target participant identifier for starting continuous Dtmf recognition.</param>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Send Dtmf tones in async mode.
            </summary>
        <returns>Returns a Response containing a SendDtmfResult object indicating the result of the send operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendDtmfTonesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.SendDtmfTonesResult&gt;&gt; SendDtmfTonesAsync (System.Collections.Generic.IEnumerable&lt;Azure.Communication.CallAutomation.DtmfTone&gt; tones, Azure.Communication.CommunicationIdentifier targetParticipant, string operationContext = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.CallAutomation.SendDtmfTonesResult&gt;&gt; SendDtmfTonesAsync(class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.Communication.CallAutomation.DtmfTone&gt; tones, class Azure.Communication.CommunicationIdentifier targetParticipant, string operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.SendDtmfTonesAsync(System.Collections.Generic.IEnumerable{Azure.Communication.CallAutomation.DtmfTone},Azure.Communication.CommunicationIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendDtmfTonesAsync (tones As IEnumerable(Of DtmfTone), targetParticipant As CommunicationIdentifier, Optional operationContext As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SendDtmfTonesResult))" />
      <MemberSignature Language="F#" Value="abstract member SendDtmfTonesAsync : seq&lt;Azure.Communication.CallAutomation.DtmfTone&gt; * Azure.Communication.CommunicationIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.SendDtmfTonesResult&gt;&gt;&#xA;override this.SendDtmfTonesAsync : seq&lt;Azure.Communication.CallAutomation.DtmfTone&gt; * Azure.Communication.CommunicationIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.SendDtmfTonesResult&gt;&gt;" Usage="callMedia.SendDtmfTonesAsync (tones, targetParticipant, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.SendDtmfTonesResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tones" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.CallAutomation.DtmfTone&gt;" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="targetParticipant" Type="Azure.Communication.CommunicationIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="operationContext" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="tones">A list of Tones to be sent.</param>
        <param name="targetParticipant">A target participant identifier for starting continuous Dtmf recognition.</param>
        <param name="operationContext">An optional context object containing information about the operation, such as a unique identifier or custom metadata.</param>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Send Dtmf tones in async mode.
            </summary>
        <returns>Returns a Response containing a SendDtmfResult object indicating the result of the send operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartContinuousDtmfRecognition">
      <MemberSignature Language="C#" Value="public virtual Azure.Response StartContinuousDtmfRecognition (Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response StartContinuousDtmfRecognition(class Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.StartContinuousDtmfRecognition(Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartContinuousDtmfRecognition (options As ContinuousDtmfRecognitionOptions, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member StartContinuousDtmfRecognition : Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.StartContinuousDtmfRecognition : Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="callMedia.StartContinuousDtmfRecognition (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="options">An optional object containing continuousDtmfRecognition options and configurations.</param>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Starts continuous Dtmf recognition with continuousDtmfRecognition options and configurations.
            </summary>
        <returns>Returns an HTTP response with a 200 status code for success, or an HTTP failure error code in case of an error.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartContinuousDtmfRecognition">
      <MemberSignature Language="C#" Value="public virtual Azure.Response StartContinuousDtmfRecognition (Azure.Communication.CommunicationIdentifier targetParticipant, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response StartContinuousDtmfRecognition(class Azure.Communication.CommunicationIdentifier targetParticipant, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.StartContinuousDtmfRecognition(Azure.Communication.CommunicationIdentifier,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartContinuousDtmfRecognition (targetParticipant As CommunicationIdentifier, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member StartContinuousDtmfRecognition : Azure.Communication.CommunicationIdentifier * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.StartContinuousDtmfRecognition : Azure.Communication.CommunicationIdentifier * System.Threading.CancellationToken -&gt; Azure.Response" Usage="callMedia.StartContinuousDtmfRecognition (targetParticipant, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetParticipant" Type="Azure.Communication.CommunicationIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="targetParticipant">A target participant identifier for starting continuous Dtmf recognition.</param>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Starts continuous Dtmf recognition.
            </summary>
        <returns>Returns an HTTP response with a 200 status code for success, or an HTTP failure error code in case of an error.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartContinuousDtmfRecognition">
      <MemberSignature Language="C#" Value="public virtual Azure.Response StartContinuousDtmfRecognition (Azure.Communication.CommunicationIdentifier targetParticipant, string operationContext = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response StartContinuousDtmfRecognition(class Azure.Communication.CommunicationIdentifier targetParticipant, string operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.StartContinuousDtmfRecognition(Azure.Communication.CommunicationIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartContinuousDtmfRecognition (targetParticipant As CommunicationIdentifier, Optional operationContext As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member StartContinuousDtmfRecognition : Azure.Communication.CommunicationIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.StartContinuousDtmfRecognition : Azure.Communication.CommunicationIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="callMedia.StartContinuousDtmfRecognition (targetParticipant, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetParticipant" Type="Azure.Communication.CommunicationIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="operationContext" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="targetParticipant">A target participant identifier for starting continuous Dtmf recognition.</param>
        <param name="operationContext">An optional context object containing information about the operation, such as a unique identifier or custom metadata.</param>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Starts continuous Dtmf recognition.
            </summary>
        <returns>Returns an HTTP response with a 200 status code for success, or an HTTP failure error code in case of an error.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartContinuousDtmfRecognitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; StartContinuousDtmfRecognitionAsync (Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; StartContinuousDtmfRecognitionAsync(class Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.StartContinuousDtmfRecognitionAsync(Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartContinuousDtmfRecognitionAsync (options As ContinuousDtmfRecognitionOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member StartContinuousDtmfRecognitionAsync : Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.StartContinuousDtmfRecognitionAsync : Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="callMedia.StartContinuousDtmfRecognitionAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="options">An optional object containing continuousDtmfRecognition options and configurations.</param>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Starts continuous Dtmf recognition in async mode  with continuousDtmfRecognition options and configurations.
            </summary>
        <returns>Returns an HTTP response with a 200 status code for success, or an HTTP failure error code in case of an error.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartContinuousDtmfRecognitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; StartContinuousDtmfRecognitionAsync (Azure.Communication.CommunicationIdentifier targetParticipant, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; StartContinuousDtmfRecognitionAsync(class Azure.Communication.CommunicationIdentifier targetParticipant, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.StartContinuousDtmfRecognitionAsync(Azure.Communication.CommunicationIdentifier,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartContinuousDtmfRecognitionAsync (targetParticipant As CommunicationIdentifier, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member StartContinuousDtmfRecognitionAsync : Azure.Communication.CommunicationIdentifier * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.StartContinuousDtmfRecognitionAsync : Azure.Communication.CommunicationIdentifier * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="callMedia.StartContinuousDtmfRecognitionAsync (targetParticipant, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetParticipant" Type="Azure.Communication.CommunicationIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="targetParticipant">A target participant identifier for starting continuous Dtmf recognition.</param>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Starts continuous Dtmf recognition in async mode.
            </summary>
        <returns>Returns an HTTP response with a 200 status code for success, or an HTTP failure error code in case of an error.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartContinuousDtmfRecognitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; StartContinuousDtmfRecognitionAsync (Azure.Communication.CommunicationIdentifier targetParticipant, string operationContext = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; StartContinuousDtmfRecognitionAsync(class Azure.Communication.CommunicationIdentifier targetParticipant, string operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.StartContinuousDtmfRecognitionAsync(Azure.Communication.CommunicationIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartContinuousDtmfRecognitionAsync (targetParticipant As CommunicationIdentifier, Optional operationContext As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member StartContinuousDtmfRecognitionAsync : Azure.Communication.CommunicationIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.StartContinuousDtmfRecognitionAsync : Azure.Communication.CommunicationIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="callMedia.StartContinuousDtmfRecognitionAsync (targetParticipant, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetParticipant" Type="Azure.Communication.CommunicationIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="operationContext" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="targetParticipant">A target participant identifier for starting continuous Dtmf recognition.</param>
        <param name="operationContext">An optional context object containing information about the operation, such as a unique identifier or custom metadata.</param>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Starts continuous Dtmf recognition in async mode.
            </summary>
        <returns>Returns an HTTP response with a 200 status code for success, or an HTTP failure error code in case of an error.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRecognizing">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.CallAutomation.StartRecognizingCallMediaResult&gt; StartRecognizing (Azure.Communication.CallAutomation.CallMediaRecognizeOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.CallAutomation.StartRecognizingCallMediaResult&gt; StartRecognizing(class Azure.Communication.CallAutomation.CallMediaRecognizeOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.StartRecognizing(Azure.Communication.CallAutomation.CallMediaRecognizeOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRecognizing (options As CallMediaRecognizeOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of StartRecognizingCallMediaResult)" />
      <MemberSignature Language="F#" Value="abstract member StartRecognizing : Azure.Communication.CallAutomation.CallMediaRecognizeOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallAutomation.StartRecognizingCallMediaResult&gt;&#xA;override this.StartRecognizing : Azure.Communication.CallAutomation.CallMediaRecognizeOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallAutomation.StartRecognizingCallMediaResult&gt;" Usage="callMedia.StartRecognizing (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.CallAutomation.StartRecognizingCallMediaResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.CallAutomation.CallMediaRecognizeOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">Configuration attributes for recognize.</param>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Recognize tones.
            </summary>
        <returns>Returns <see cref="T:Azure.Communication.CallAutomation.StartRecognizingCallMediaResult" />, which can be used to wait for StartRecognizing's related events.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRecognizingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.StartRecognizingCallMediaResult&gt;&gt; StartRecognizingAsync (Azure.Communication.CallAutomation.CallMediaRecognizeOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.CallAutomation.StartRecognizingCallMediaResult&gt;&gt; StartRecognizingAsync(class Azure.Communication.CallAutomation.CallMediaRecognizeOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.StartRecognizingAsync(Azure.Communication.CallAutomation.CallMediaRecognizeOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRecognizingAsync (options As CallMediaRecognizeOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of StartRecognizingCallMediaResult))" />
      <MemberSignature Language="F#" Value="abstract member StartRecognizingAsync : Azure.Communication.CallAutomation.CallMediaRecognizeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.StartRecognizingCallMediaResult&gt;&gt;&#xA;override this.StartRecognizingAsync : Azure.Communication.CallAutomation.CallMediaRecognizeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.StartRecognizingCallMediaResult&gt;&gt;" Usage="callMedia.StartRecognizingAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.StartRecognizingCallMediaResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.CallAutomation.CallMediaRecognizeOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">Configuration attributes for recognize.</param>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Recognize tones.
            </summary>
        <returns>Returns <see cref="T:Azure.Communication.CallAutomation.StartRecognizingCallMediaResult" />, which can be used to wait for StartRecognizing's related events.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopContinuousDtmfRecognition">
      <MemberSignature Language="C#" Value="public virtual Azure.Response StopContinuousDtmfRecognition (Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response StopContinuousDtmfRecognition(class Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.StopContinuousDtmfRecognition(Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StopContinuousDtmfRecognition (options As ContinuousDtmfRecognitionOptions, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member StopContinuousDtmfRecognition : Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.StopContinuousDtmfRecognition : Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="callMedia.StopContinuousDtmfRecognition (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="options">An optional object containing continuousDtmfRecognition options and configurations.</param>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Stops continuous Dtmf recognition with continuousDtmfRecognition options and configurations.
            </summary>
        <returns>Returns an HTTP response with a 200 status code for success, or an HTTP failure error code in case of an error.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopContinuousDtmfRecognition">
      <MemberSignature Language="C#" Value="public virtual Azure.Response StopContinuousDtmfRecognition (Azure.Communication.CommunicationIdentifier targetParticipant, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response StopContinuousDtmfRecognition(class Azure.Communication.CommunicationIdentifier targetParticipant, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.StopContinuousDtmfRecognition(Azure.Communication.CommunicationIdentifier,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StopContinuousDtmfRecognition (targetParticipant As CommunicationIdentifier, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member StopContinuousDtmfRecognition : Azure.Communication.CommunicationIdentifier * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.StopContinuousDtmfRecognition : Azure.Communication.CommunicationIdentifier * System.Threading.CancellationToken -&gt; Azure.Response" Usage="callMedia.StopContinuousDtmfRecognition (targetParticipant, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetParticipant" Type="Azure.Communication.CommunicationIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="targetParticipant">A target participant identifier for stopping continuous Dtmf recognition.</param>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Stops continuous Dtmf recognition.
            </summary>
        <returns>Returns an HTTP response with a 200 status code for success, or an HTTP failure error code in case of an error.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopContinuousDtmfRecognition">
      <MemberSignature Language="C#" Value="public virtual Azure.Response StopContinuousDtmfRecognition (Azure.Communication.CommunicationIdentifier targetParticipant, string operationContext = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response StopContinuousDtmfRecognition(class Azure.Communication.CommunicationIdentifier targetParticipant, string operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.StopContinuousDtmfRecognition(Azure.Communication.CommunicationIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StopContinuousDtmfRecognition (targetParticipant As CommunicationIdentifier, Optional operationContext As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member StopContinuousDtmfRecognition : Azure.Communication.CommunicationIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.StopContinuousDtmfRecognition : Azure.Communication.CommunicationIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="callMedia.StopContinuousDtmfRecognition (targetParticipant, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetParticipant" Type="Azure.Communication.CommunicationIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="operationContext" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="targetParticipant">A target participant identifier for stopping continuous Dtmf recognition.</param>
        <param name="operationContext">An optional context object containing information about the operation, such as a unique identifier or custom metadata.</param>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Stops continuous Dtmf recognition.
            </summary>
        <returns>Returns an HTTP response with a 200 status code for success, or an HTTP failure error code in case of an error.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopContinuousDtmfRecognitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; StopContinuousDtmfRecognitionAsync (Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; StopContinuousDtmfRecognitionAsync(class Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.StopContinuousDtmfRecognitionAsync(Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StopContinuousDtmfRecognitionAsync (options As ContinuousDtmfRecognitionOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member StopContinuousDtmfRecognitionAsync : Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.StopContinuousDtmfRecognitionAsync : Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="callMedia.StopContinuousDtmfRecognitionAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="options">An optional object containing continuousDtmfRecognition options and configurations.</param>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Stops continuous Dtmf recognition in async mode  with continuousDtmfRecognition options and configurations.
            </summary>
        <returns>Returns an HTTP response with a 200 status code for success, or an HTTP failure error code in case of an error.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopContinuousDtmfRecognitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; StopContinuousDtmfRecognitionAsync (Azure.Communication.CommunicationIdentifier targetParticipant, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; StopContinuousDtmfRecognitionAsync(class Azure.Communication.CommunicationIdentifier targetParticipant, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.StopContinuousDtmfRecognitionAsync(Azure.Communication.CommunicationIdentifier,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StopContinuousDtmfRecognitionAsync (targetParticipant As CommunicationIdentifier, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member StopContinuousDtmfRecognitionAsync : Azure.Communication.CommunicationIdentifier * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.StopContinuousDtmfRecognitionAsync : Azure.Communication.CommunicationIdentifier * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="callMedia.StopContinuousDtmfRecognitionAsync (targetParticipant, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetParticipant" Type="Azure.Communication.CommunicationIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="targetParticipant">A target participant identifier for stopping continuous Dtmf recognition.</param>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Stops continuous Dtmf recognition in async mode.
            </summary>
        <returns>Returns an HTTP response with a 200 status code for success, or an HTTP failure error code in case of an error.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopContinuousDtmfRecognitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; StopContinuousDtmfRecognitionAsync (Azure.Communication.CommunicationIdentifier targetParticipant, string operationContext = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; StopContinuousDtmfRecognitionAsync(class Azure.Communication.CommunicationIdentifier targetParticipant, string operationContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.StopContinuousDtmfRecognitionAsync(Azure.Communication.CommunicationIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StopContinuousDtmfRecognitionAsync (targetParticipant As CommunicationIdentifier, Optional operationContext As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member StopContinuousDtmfRecognitionAsync : Azure.Communication.CommunicationIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.StopContinuousDtmfRecognitionAsync : Azure.Communication.CommunicationIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="callMedia.StopContinuousDtmfRecognitionAsync (targetParticipant, operationContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetParticipant" Type="Azure.Communication.CommunicationIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="operationContext" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="targetParticipant">A target participant identifier for stopping continuous Dtmf recognition.</param>
        <param name="operationContext">An optional context object containing information about the operation, such as a unique identifier or custom metadata.</param>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Stops continuous Dtmf recognition in async mode.
            </summary>
        <returns>Returns an HTTP response with a 200 status code for success, or an HTTP failure error code in case of an error.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
