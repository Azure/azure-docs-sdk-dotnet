<Type Name="BaseDialog" FullName="Azure.Communication.CallAutomation.BaseDialog">
  <TypeSignature Language="C#" Value="public abstract class BaseDialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BaseDialog extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Communication.CallAutomation.BaseDialog" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BaseDialog" />
  <TypeSignature Language="F#" Value="type BaseDialog = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The BaseDialog.
            Please note <see cref="T:Azure.Communication.CallAutomation.BaseDialog" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.Communication.CallAutomation.AzureOpenAIDialog" /> and <see cref="T:Azure.Communication.CallAutomation.PowerVirtualAgentsDialog" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseDialog (System.Collections.Generic.IDictionary&lt;string,object&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.BaseDialog.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (context As IDictionary(Of String, Object))" />
      <MemberSignature Language="F#" Value="new Azure.Communication.CallAutomation.BaseDialog : System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; Azure.Communication.CallAutomation.BaseDialog" Usage="new Azure.Communication.CallAutomation.BaseDialog context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="context"> Dialog context. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.BaseDialog" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Context" />
      <MemberSignature Language="DocId" Value="P:Azure.Communication.CallAutomation.BaseDialog.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As IDictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="member this.Context : System.Collections.Generic.IDictionary&lt;string, obj&gt; with get, set" Usage="Azure.Communication.CallAutomation.BaseDialog.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Dialog context. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
