<Type Name="CallAutomationModelFactory" FullName="Azure.Communication.CallAutomation.CallAutomationModelFactory">
  <TypeSignature Language="C#" Value="public static class CallAutomationModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CallAutomationModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Communication.CallAutomation.CallAutomationModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class CallAutomationModelFactory" />
  <TypeSignature Language="F#" Value="type CallAutomationModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddParticipantFailed">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.AddParticipantFailed AddParticipantFailed (string callConnectionId = default, string serverCallId = default, string correlationId = default, string operationContext = default, Azure.Communication.CallAutomation.ResultInformation resultInformation = default, Azure.Communication.CommunicationIdentifier participant = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.AddParticipantFailed AddParticipantFailed(string callConnectionId, string serverCallId, string correlationId, string operationContext, class Azure.Communication.CallAutomation.ResultInformation resultInformation, class Azure.Communication.CommunicationIdentifier participant) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.AddParticipantFailed(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CommunicationIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddParticipantFailed (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional operationContext As String = Nothing, Optional resultInformation As ResultInformation = Nothing, Optional participant As CommunicationIdentifier = Nothing) As AddParticipantFailed" />
      <MemberSignature Language="F#" Value="static member AddParticipantFailed : string * string * string * string * Azure.Communication.CallAutomation.ResultInformation * Azure.Communication.CommunicationIdentifier -&gt; Azure.Communication.CallAutomation.AddParticipantFailed" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.AddParticipantFailed (callConnectionId, serverCallId, correlationId, operationContext, resultInformation, participant)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.AddParticipantFailed</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
        <Parameter Name="resultInformation" Type="Azure.Communication.CallAutomation.ResultInformation" />
        <Parameter Name="participant" Type="Azure.Communication.CommunicationIdentifier" />
      </Parameters>
      <Docs>
        <param name="callConnectionId">To be added.</param>
        <param name="serverCallId">To be added.</param>
        <param name="correlationId">To be added.</param>
        <param name="operationContext">To be added.</param>
        <param name="resultInformation">To be added.</param>
        <param name="participant">To be added.</param>
        <summary>
            Initializes a new instance of add participant failed event.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParticipantsResult">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.AddParticipantResult AddParticipantsResult (Azure.Communication.CallAutomation.CallParticipant participant = default, string operationContext = default, string invitationId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.AddParticipantResult AddParticipantsResult(class Azure.Communication.CallAutomation.CallParticipant participant, string operationContext, string invitationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.AddParticipantsResult(Azure.Communication.CallAutomation.CallParticipant,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddParticipantsResult (Optional participant As CallParticipant = Nothing, Optional operationContext As String = Nothing, Optional invitationId As String = Nothing) As AddParticipantResult" />
      <MemberSignature Language="F#" Value="static member AddParticipantsResult : Azure.Communication.CallAutomation.CallParticipant * string * string -&gt; Azure.Communication.CallAutomation.AddParticipantResult" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.AddParticipantsResult (participant, operationContext, invitationId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.AddParticipantResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="participant" Type="Azure.Communication.CallAutomation.CallParticipant" />
        <Parameter Name="operationContext" Type="System.String" />
        <Parameter Name="invitationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="participant"> Participant of the call. </param>
        <param name="operationContext"> The operation context provided by client. </param>
        <param name="invitationId">The Invitation ID used to cancel the add participant action</param>
        <summary> Initializes a new instance of AddParticipantsResult. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.AddParticipantResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParticipantSucceeded">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.AddParticipantSucceeded AddParticipantSucceeded (string callConnectionId = default, string serverCallId = default, string correlationId = default, string operationContext = default, Azure.Communication.CallAutomation.ResultInformation resultInformation = default, Azure.Communication.CommunicationIdentifier participant = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.AddParticipantSucceeded AddParticipantSucceeded(string callConnectionId, string serverCallId, string correlationId, string operationContext, class Azure.Communication.CallAutomation.ResultInformation resultInformation, class Azure.Communication.CommunicationIdentifier participant) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.AddParticipantSucceeded(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CommunicationIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddParticipantSucceeded (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional operationContext As String = Nothing, Optional resultInformation As ResultInformation = Nothing, Optional participant As CommunicationIdentifier = Nothing) As AddParticipantSucceeded" />
      <MemberSignature Language="F#" Value="static member AddParticipantSucceeded : string * string * string * string * Azure.Communication.CallAutomation.ResultInformation * Azure.Communication.CommunicationIdentifier -&gt; Azure.Communication.CallAutomation.AddParticipantSucceeded" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.AddParticipantSucceeded (callConnectionId, serverCallId, correlationId, operationContext, resultInformation, participant)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.AddParticipantSucceeded</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
        <Parameter Name="resultInformation" Type="Azure.Communication.CallAutomation.ResultInformation" />
        <Parameter Name="participant" Type="Azure.Communication.CommunicationIdentifier" />
      </Parameters>
      <Docs>
        <param name="callConnectionId">To be added.</param>
        <param name="serverCallId">To be added.</param>
        <param name="correlationId">To be added.</param>
        <param name="operationContext">To be added.</param>
        <param name="resultInformation">To be added.</param>
        <param name="participant">To be added.</param>
        <summary>
            Initializes a new instance of add participant success event.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnswerCallResult">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.AnswerCallResult AnswerCallResult (Azure.Communication.CallAutomation.CallConnection callConnection = default, Azure.Communication.CallAutomation.CallConnectionProperties callConnectionProperties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.AnswerCallResult AnswerCallResult(class Azure.Communication.CallAutomation.CallConnection callConnection, class Azure.Communication.CallAutomation.CallConnectionProperties callConnectionProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.AnswerCallResult(Azure.Communication.CallAutomation.CallConnection,Azure.Communication.CallAutomation.CallConnectionProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnswerCallResult (Optional callConnection As CallConnection = Nothing, Optional callConnectionProperties As CallConnectionProperties = Nothing) As AnswerCallResult" />
      <MemberSignature Language="F#" Value="static member AnswerCallResult : Azure.Communication.CallAutomation.CallConnection * Azure.Communication.CallAutomation.CallConnectionProperties -&gt; Azure.Communication.CallAutomation.AnswerCallResult" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.AnswerCallResult (callConnection, callConnectionProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.AnswerCallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnection" Type="Azure.Communication.CallAutomation.CallConnection" />
        <Parameter Name="callConnectionProperties" Type="Azure.Communication.CallAutomation.CallConnectionProperties" />
      </Parameters>
      <Docs>
        <param name="callConnection"> CallConnection Client. </param>
        <param name="callConnectionProperties"> Properties of the call. </param>
        <summary> Initializes a new instance of AnswerCallResult. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.AnswerCallResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallConnected">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.CallConnected CallConnected (string callConnectionId = default, string serverCallId = default, string correlationId = default, string operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.CallConnected CallConnected(string callConnectionId, string serverCallId, string correlationId, string operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.CallConnected(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CallConnected (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional operationContext As String = Nothing) As CallConnected" />
      <MemberSignature Language="F#" Value="static member CallConnected : string * string * string * string -&gt; Azure.Communication.CallAutomation.CallConnected" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.CallConnected (callConnectionId, serverCallId, correlationId, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.CallConnected</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callConnectionId"> Call connection ID. </param>
        <param name="serverCallId"> Server call ID. </param>
        <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        <param name="operationContext"> Used by customers to set the context for creating a new call. This property will be null for answering a call. </param>
        <summary> Initializes a new instance of CallConnected. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.CallConnected" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallConnectionProperties">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.CallConnectionProperties CallConnectionProperties (string callConnectionId = default, string serverCallId = default, System.Collections.Generic.IEnumerable&lt;Azure.Communication.CommunicationIdentifier&gt; targets = default, Azure.Communication.CallAutomation.CallConnectionState callConnectionState = default, Uri callbackUri = default, Azure.Communication.CommunicationIdentifier sourceIdentity = default, Azure.Communication.PhoneNumberIdentifier sourceCallerIdNumber = default, string sourceDisplayName = default, Azure.Communication.CommunicationIdentifier answeredBy = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.CallConnectionProperties CallConnectionProperties(string callConnectionId, string serverCallId, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Communication.CommunicationIdentifier&gt; targets, valuetype Azure.Communication.CallAutomation.CallConnectionState callConnectionState, class System.Uri callbackUri, class Azure.Communication.CommunicationIdentifier sourceIdentity, class Azure.Communication.PhoneNumberIdentifier sourceCallerIdNumber, string sourceDisplayName, class Azure.Communication.CommunicationIdentifier answeredBy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.CallConnectionProperties(System.String,System.String,System.Collections.Generic.IEnumerable{Azure.Communication.CommunicationIdentifier},Azure.Communication.CallAutomation.CallConnectionState,System.Uri,Azure.Communication.CommunicationIdentifier,Azure.Communication.PhoneNumberIdentifier,System.String,Azure.Communication.CommunicationIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CallConnectionProperties (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional targets As IEnumerable(Of CommunicationIdentifier) = Nothing, Optional callConnectionState As CallConnectionState = Nothing, Optional callbackUri As Uri = Nothing, Optional sourceIdentity As CommunicationIdentifier = Nothing, Optional sourceCallerIdNumber As PhoneNumberIdentifier = Nothing, Optional sourceDisplayName As String = Nothing, Optional answeredBy As CommunicationIdentifier = Nothing) As CallConnectionProperties" />
      <MemberSignature Language="F#" Value="static member CallConnectionProperties : string * string * seq&lt;Azure.Communication.CommunicationIdentifier&gt; * Azure.Communication.CallAutomation.CallConnectionState * Uri * Azure.Communication.CommunicationIdentifier * Azure.Communication.PhoneNumberIdentifier * string * Azure.Communication.CommunicationIdentifier -&gt; Azure.Communication.CallAutomation.CallConnectionProperties" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.CallConnectionProperties (callConnectionId, serverCallId, targets, callConnectionState, callbackUri, sourceIdentity, sourceCallerIdNumber, sourceDisplayName, answeredBy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.CallConnectionProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="targets" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.CommunicationIdentifier&gt;" />
        <Parameter Name="callConnectionState" Type="Azure.Communication.CallAutomation.CallConnectionState" />
        <Parameter Name="callbackUri" Type="System.Uri" />
        <Parameter Name="sourceIdentity" Type="Azure.Communication.CommunicationIdentifier" />
        <Parameter Name="sourceCallerIdNumber" Type="Azure.Communication.PhoneNumberIdentifier" />
        <Parameter Name="sourceDisplayName" Type="System.String" />
        <Parameter Name="answeredBy" Type="Azure.Communication.CommunicationIdentifier" />
      </Parameters>
      <Docs>
        <param name="callConnectionId">The call connection id.</param>
        <param name="serverCallId">The server call id.</param>
        <param name="targets">The targets of the call.</param>
        <param name="callConnectionState">The state of the call connection.</param>
        <param name="callbackUri">The callback URI.</param>
        <param name="sourceIdentity">Source identity.</param>
        <param name="sourceCallerIdNumber">Caller ID phone number to appear on the invitee.</param>
        <param name="sourceDisplayName">Display name to appear on the invitee.</param>
        <param name="answeredBy">AnsweredBy identity.</param>
        <summary> Initializes a new instance of CallConnectionProperties. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.CallConnectionProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallDisconnected">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.CallDisconnected CallDisconnected (string callConnectionId = default, string serverCallId = default, string correlationId = default, string operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.CallDisconnected CallDisconnected(string callConnectionId, string serverCallId, string correlationId, string operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.CallDisconnected(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CallDisconnected (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional operationContext As String = Nothing) As CallDisconnected" />
      <MemberSignature Language="F#" Value="static member CallDisconnected : string * string * string * string -&gt; Azure.Communication.CallAutomation.CallDisconnected" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.CallDisconnected (callConnectionId, serverCallId, correlationId, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.CallDisconnected</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callConnectionId"> Call connection ID. </param>
        <param name="serverCallId"> Server call ID. </param>
        <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        <param name="operationContext"> Used by customers to set the context for creating a new call. This property will be null for answering a call. </param>
        <summary> Initializes a new instance of CallDisconnected. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.CallDisconnected" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallParticipant">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.CallParticipant CallParticipant (Azure.Communication.CommunicationIdentifier identifier = default, bool isMuted = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.CallParticipant CallParticipant(class Azure.Communication.CommunicationIdentifier identifier, bool isMuted) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.CallParticipant(Azure.Communication.CommunicationIdentifier,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CallParticipant (Optional identifier As CommunicationIdentifier = Nothing, Optional isMuted As Boolean = false) As CallParticipant" />
      <MemberSignature Language="F#" Value="static member CallParticipant : Azure.Communication.CommunicationIdentifier * bool -&gt; Azure.Communication.CallAutomation.CallParticipant" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.CallParticipant (identifier, isMuted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.CallParticipant</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="Azure.Communication.CommunicationIdentifier" />
        <Parameter Name="isMuted" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="identifier"> The communication identifier. </param>
        <param name="isMuted"> Is participant muted. </param>
        <summary> Initializes a new instance of CallParticipant. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.CallParticipant" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallTransferAccepted">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.CallTransferAccepted CallTransferAccepted (string callConnectionId = default, string serverCallId = default, string correlationId = default, string operationContext = default, Azure.Communication.CallAutomation.ResultInformation resultInformation = default, Azure.Communication.CommunicationIdentifier transferee = default, Azure.Communication.CommunicationIdentifier transferTarget = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.CallTransferAccepted CallTransferAccepted(string callConnectionId, string serverCallId, string correlationId, string operationContext, class Azure.Communication.CallAutomation.ResultInformation resultInformation, class Azure.Communication.CommunicationIdentifier transferee, class Azure.Communication.CommunicationIdentifier transferTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.CallTransferAccepted(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CommunicationIdentifier,Azure.Communication.CommunicationIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CallTransferAccepted (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional operationContext As String = Nothing, Optional resultInformation As ResultInformation = Nothing, Optional transferee As CommunicationIdentifier = Nothing, Optional transferTarget As CommunicationIdentifier = Nothing) As CallTransferAccepted" />
      <MemberSignature Language="F#" Value="static member CallTransferAccepted : string * string * string * string * Azure.Communication.CallAutomation.ResultInformation * Azure.Communication.CommunicationIdentifier * Azure.Communication.CommunicationIdentifier -&gt; Azure.Communication.CallAutomation.CallTransferAccepted" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.CallTransferAccepted (callConnectionId, serverCallId, correlationId, operationContext, resultInformation, transferee, transferTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.CallTransferAccepted</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
        <Parameter Name="resultInformation" Type="Azure.Communication.CallAutomation.ResultInformation" />
        <Parameter Name="transferee" Type="Azure.Communication.CommunicationIdentifier" />
        <Parameter Name="transferTarget" Type="Azure.Communication.CommunicationIdentifier" />
      </Parameters>
      <Docs>
        <param name="callConnectionId"> Call connection ID. </param>
        <param name="serverCallId"> Server call ID. </param>
        <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
        <param name="resultInformation"> Contains the resulting SIP code/sub-code and message from NGC services. </param>
        <param name="transferee"> Transferee is the participant who is transferring the call.  </param>
        <param name="transferTarget"> The identity of the target where call should be transferred to. </param>
        <summary> Initializes a new instance of CallTransferAccepted. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.CallTransferAccepted" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallTransferFailed">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.CallTransferFailed CallTransferFailed (string callConnectionId = default, string serverCallId = default, string correlationId = default, string operationContext = default, Azure.Communication.CallAutomation.ResultInformation resultInformation = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.CallTransferFailed CallTransferFailed(string callConnectionId, string serverCallId, string correlationId, string operationContext, class Azure.Communication.CallAutomation.ResultInformation resultInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.CallTransferFailed(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CallTransferFailed (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional operationContext As String = Nothing, Optional resultInformation As ResultInformation = Nothing) As CallTransferFailed" />
      <MemberSignature Language="F#" Value="static member CallTransferFailed : string * string * string * string * Azure.Communication.CallAutomation.ResultInformation -&gt; Azure.Communication.CallAutomation.CallTransferFailed" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.CallTransferFailed (callConnectionId, serverCallId, correlationId, operationContext, resultInformation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.CallTransferFailed</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
        <Parameter Name="resultInformation" Type="Azure.Communication.CallAutomation.ResultInformation" />
      </Parameters>
      <Docs>
        <param name="callConnectionId"> Call connection ID. </param>
        <param name="serverCallId"> Server call ID. </param>
        <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
        <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
        <summary> Initializes a new instance of CallTransferFailed. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.CallTransferFailed" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAddParticipantFailed">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.CancelAddParticipantFailed CancelAddParticipantFailed (string callConnectionId = default, string serverCallId = default, string correlationId = default, string invitationId = default, Azure.Communication.CallAutomation.ResultInformation resultInformation = default, string operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.CancelAddParticipantFailed CancelAddParticipantFailed(string callConnectionId, string serverCallId, string correlationId, string invitationId, class Azure.Communication.CallAutomation.ResultInformation resultInformation, string operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.CancelAddParticipantFailed(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CancelAddParticipantFailed (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional invitationId As String = Nothing, Optional resultInformation As ResultInformation = Nothing, Optional operationContext As String = Nothing) As CancelAddParticipantFailed" />
      <MemberSignature Language="F#" Value="static member CancelAddParticipantFailed : string * string * string * string * Azure.Communication.CallAutomation.ResultInformation * string -&gt; Azure.Communication.CallAutomation.CancelAddParticipantFailed" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.CancelAddParticipantFailed (callConnectionId, serverCallId, correlationId, invitationId, resultInformation, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.CancelAddParticipantFailed</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="invitationId" Type="System.String" />
        <Parameter Name="resultInformation" Type="Azure.Communication.CallAutomation.ResultInformation" />
        <Parameter Name="operationContext" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callConnectionId">To be added.</param>
        <param name="serverCallId">To be added.</param>
        <param name="correlationId">To be added.</param>
        <param name="invitationId">To be added.</param>
        <param name="resultInformation">To be added.</param>
        <param name="operationContext">To be added.</param>
        <summary>
            Initializes a new instance of cancel add participant failed event.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAddParticipantResult">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.CancelAddParticipantOperationResult CancelAddParticipantResult (string invitationId = default, string operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.CancelAddParticipantOperationResult CancelAddParticipantResult(string invitationId, string operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.CancelAddParticipantResult(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CancelAddParticipantResult (Optional invitationId As String = Nothing, Optional operationContext As String = Nothing) As CancelAddParticipantOperationResult" />
      <MemberSignature Language="F#" Value="static member CancelAddParticipantResult : string * string -&gt; Azure.Communication.CallAutomation.CancelAddParticipantOperationResult" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.CancelAddParticipantResult (invitationId, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.CancelAddParticipantOperationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invitationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="invitationId"> Invitation ID used to cancel the request. </param>
        <param name="operationContext"> The operation context provided by client. </param>
        <summary> Initializes a new instance of CancelAddParticipantResult. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.CancelAddParticipantOperationResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAddParticipantSucceeded">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.CancelAddParticipantSucceeded CancelAddParticipantSucceeded (string callConnectionId = default, string serverCallId = default, string correlationId = default, string invitationId = default, string operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.CancelAddParticipantSucceeded CancelAddParticipantSucceeded(string callConnectionId, string serverCallId, string correlationId, string invitationId, string operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.CancelAddParticipantSucceeded(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CancelAddParticipantSucceeded (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional invitationId As String = Nothing, Optional operationContext As String = Nothing) As CancelAddParticipantSucceeded" />
      <MemberSignature Language="F#" Value="static member CancelAddParticipantSucceeded : string * string * string * string * string -&gt; Azure.Communication.CallAutomation.CancelAddParticipantSucceeded" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.CancelAddParticipantSucceeded (callConnectionId, serverCallId, correlationId, invitationId, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.CancelAddParticipantSucceeded</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="invitationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callConnectionId">To be added.</param>
        <param name="serverCallId">To be added.</param>
        <param name="correlationId">To be added.</param>
        <param name="invitationId">To be added.</param>
        <param name="operationContext">To be added.</param>
        <summary>
            Initializes a new instance of cancel add participant success event.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChoiceResult">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.ChoiceResult ChoiceResult (string label = default, string recognizedPhrase = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.ChoiceResult ChoiceResult(string label, string recognizedPhrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.ChoiceResult(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ChoiceResult (Optional label As String = Nothing, Optional recognizedPhrase As String = Nothing) As ChoiceResult" />
      <MemberSignature Language="F#" Value="static member ChoiceResult : string * string -&gt; Azure.Communication.CallAutomation.ChoiceResult" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.ChoiceResult (label, recognizedPhrase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.ChoiceResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="recognizedPhrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="label"> Label is the primary identifier for the choice detected. </param>
        <param name="recognizedPhrase">
            Phrases are set to the value if choice is selected via phrase detection.
            If Dtmf input is recognized, then Label will be the identifier for the choice detected and phrases will be set to null
            </param>
        <summary> Initializes a new instance of ChoiceResult. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.ChoiceResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinuousDtmfRecognitionStopped">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.ContinuousDtmfRecognitionStopped ContinuousDtmfRecognitionStopped (string callConnectionId = default, string serverCallId = default, string correlationId = default, string operationContext = default, Azure.Communication.CallAutomation.ResultInformation resultInformation = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.ContinuousDtmfRecognitionStopped ContinuousDtmfRecognitionStopped(string callConnectionId, string serverCallId, string correlationId, string operationContext, class Azure.Communication.CallAutomation.ResultInformation resultInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.ContinuousDtmfRecognitionStopped(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContinuousDtmfRecognitionStopped (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional operationContext As String = Nothing, Optional resultInformation As ResultInformation = Nothing) As ContinuousDtmfRecognitionStopped" />
      <MemberSignature Language="F#" Value="static member ContinuousDtmfRecognitionStopped : string * string * string * string * Azure.Communication.CallAutomation.ResultInformation -&gt; Azure.Communication.CallAutomation.ContinuousDtmfRecognitionStopped" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.ContinuousDtmfRecognitionStopped (callConnectionId, serverCallId, correlationId, operationContext, resultInformation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.ContinuousDtmfRecognitionStopped</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
        <Parameter Name="resultInformation" Type="Azure.Communication.CallAutomation.ResultInformation" />
      </Parameters>
      <Docs>
        <param name="callConnectionId"> Call connection ID. </param>
        <param name="serverCallId"> Server call ID. </param>
        <param name="correlationId"> Correlation ID for event to call correlation. </param>
        <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
        <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
        <summary> Initializes a new instance of ContinuousDtmfRecognitionStopped. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionStopped" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinuousDtmfRecognitionToneFailed">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneFailed ContinuousDtmfRecognitionToneFailed (string callConnectionId = default, string serverCallId = default, string correlationId = default, Azure.Communication.CallAutomation.ResultInformation resultInformation = default, string operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneFailed ContinuousDtmfRecognitionToneFailed(string callConnectionId, string serverCallId, string correlationId, class Azure.Communication.CallAutomation.ResultInformation resultInformation, string operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.ContinuousDtmfRecognitionToneFailed(System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContinuousDtmfRecognitionToneFailed (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional resultInformation As ResultInformation = Nothing, Optional operationContext As String = Nothing) As ContinuousDtmfRecognitionToneFailed" />
      <MemberSignature Language="F#" Value="static member ContinuousDtmfRecognitionToneFailed : string * string * string * Azure.Communication.CallAutomation.ResultInformation * string -&gt; Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneFailed" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.ContinuousDtmfRecognitionToneFailed (callConnectionId, serverCallId, correlationId, resultInformation, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneFailed</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="resultInformation" Type="Azure.Communication.CallAutomation.ResultInformation" />
        <Parameter Name="operationContext" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callConnectionId"> Call connection ID. </param>
        <param name="serverCallId"> Server call ID. </param>
        <param name="correlationId"> Correlation ID for event to call correlation. </param>
        <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
        <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
        <summary> Initializes a new instance of ContinuousDtmfRecognitionToneFailed. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneFailed" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinuousDtmfRecognitionToneReceived">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneReceived ContinuousDtmfRecognitionToneReceived (int? sequenceId = default, Azure.Communication.CallAutomation.DtmfTone? tone = default, string callConnectionId = default, string serverCallId = default, string correlationId = default, Azure.Communication.CallAutomation.ResultInformation resultInformation = default, string operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneReceived ContinuousDtmfRecognitionToneReceived(valuetype System.Nullable`1&lt;int32&gt; sequenceId, valuetype System.Nullable`1&lt;valuetype Azure.Communication.CallAutomation.DtmfTone&gt; tone, string callConnectionId, string serverCallId, string correlationId, class Azure.Communication.CallAutomation.ResultInformation resultInformation, string operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.ContinuousDtmfRecognitionToneReceived(System.Nullable{System.Int32},System.Nullable{Azure.Communication.CallAutomation.DtmfTone},System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContinuousDtmfRecognitionToneReceived (Optional sequenceId As Nullable(Of Integer) = Nothing, Optional tone As Nullable(Of DtmfTone) = Nothing, Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional resultInformation As ResultInformation = Nothing, Optional operationContext As String = Nothing) As ContinuousDtmfRecognitionToneReceived" />
      <MemberSignature Language="F#" Value="static member ContinuousDtmfRecognitionToneReceived : Nullable&lt;int&gt; * Nullable&lt;Azure.Communication.CallAutomation.DtmfTone&gt; * string * string * string * Azure.Communication.CallAutomation.ResultInformation * string -&gt; Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneReceived" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.ContinuousDtmfRecognitionToneReceived (sequenceId, tone, callConnectionId, serverCallId, correlationId, resultInformation, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneReceived</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceId" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="tone" Type="System.Nullable&lt;Azure.Communication.CallAutomation.DtmfTone&gt;" />
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="resultInformation" Type="Azure.Communication.CallAutomation.ResultInformation" />
        <Parameter Name="operationContext" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sequenceId"> The sequence id which can be used to determine if the same tone was played multiple times or if any tones were missed. </param>
        <param name="tone" />
        <param name="callConnectionId"> Call connection ID. </param>
        <param name="serverCallId"> Server call ID. </param>
        <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId or skype chain ID. </param>
        <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
        <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
        <summary> Initializes a new instance of ContinuousDtmfRecognitionToneReceived. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneReceived" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCallResult">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.CreateCallResult CreateCallResult (Azure.Communication.CallAutomation.CallConnection callConnection = default, Azure.Communication.CallAutomation.CallConnectionProperties callConnectionProperties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.CreateCallResult CreateCallResult(class Azure.Communication.CallAutomation.CallConnection callConnection, class Azure.Communication.CallAutomation.CallConnectionProperties callConnectionProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.CreateCallResult(Azure.Communication.CallAutomation.CallConnection,Azure.Communication.CallAutomation.CallConnectionProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCallResult (Optional callConnection As CallConnection = Nothing, Optional callConnectionProperties As CallConnectionProperties = Nothing) As CreateCallResult" />
      <MemberSignature Language="F#" Value="static member CreateCallResult : Azure.Communication.CallAutomation.CallConnection * Azure.Communication.CallAutomation.CallConnectionProperties -&gt; Azure.Communication.CallAutomation.CreateCallResult" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.CreateCallResult (callConnection, callConnectionProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.CreateCallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnection" Type="Azure.Communication.CallAutomation.CallConnection" />
        <Parameter Name="callConnectionProperties" Type="Azure.Communication.CallAutomation.CallConnectionProperties" />
      </Parameters>
      <Docs>
        <param name="callConnection">The instance of callConnection.</param>
        <param name="callConnectionProperties">The properties of the call.</param>
        <summary> Initializes a new instance of CallParticipant. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.CreateCallResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DtmfResult">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.DtmfResult DtmfResult (System.Collections.Generic.IEnumerable&lt;Azure.Communication.CallAutomation.DtmfTone&gt; tones = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.DtmfResult DtmfResult(class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.Communication.CallAutomation.DtmfTone&gt; tones) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.DtmfResult(System.Collections.Generic.IEnumerable{Azure.Communication.CallAutomation.DtmfTone})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DtmfResult (Optional tones As IEnumerable(Of DtmfTone) = Nothing) As DtmfResult" />
      <MemberSignature Language="F#" Value="static member DtmfResult : seq&lt;Azure.Communication.CallAutomation.DtmfTone&gt; -&gt; Azure.Communication.CallAutomation.DtmfResult" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.DtmfResult tones" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.DtmfResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tones" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.CallAutomation.DtmfTone&gt;" />
      </Parameters>
      <Docs>
        <param name="tones" />
        <summary> Initializes a new instance of DtmfResult. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.DtmfResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticipantsUpdated">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.ParticipantsUpdated ParticipantsUpdated (string callConnectionId = default, string serverCallId = default, string correlationId = default, System.Collections.Generic.IEnumerable&lt;Azure.Communication.CallAutomation.CallParticipant&gt; participants = default, int sequenceNumber = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.ParticipantsUpdated ParticipantsUpdated(string callConnectionId, string serverCallId, string correlationId, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Communication.CallAutomation.CallParticipant&gt; participants, int32 sequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.ParticipantsUpdated(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.Communication.CallAutomation.CallParticipant},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParticipantsUpdated (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional participants As IEnumerable(Of CallParticipant) = Nothing, Optional sequenceNumber As Integer = 0) As ParticipantsUpdated" />
      <MemberSignature Language="F#" Value="static member ParticipantsUpdated : string * string * string * seq&lt;Azure.Communication.CallAutomation.CallParticipant&gt; * int -&gt; Azure.Communication.CallAutomation.ParticipantsUpdated" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.ParticipantsUpdated (callConnectionId, serverCallId, correlationId, participants, sequenceNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.ParticipantsUpdated</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="participants" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.CallAutomation.CallParticipant&gt;" />
        <Parameter Name="sequenceNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="callConnectionId">To be added.</param>
        <param name="serverCallId">To be added.</param>
        <param name="correlationId">To be added.</param>
        <param name="participants">To be added.</param>
        <param name="sequenceNumber">To be added.</param>
        <summary>
            Initializes a new instance of Participants Updated event.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayCanceled">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.PlayCanceled PlayCanceled (string callConnectionId = default, string serverCallId = default, string correlationId = default, string operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.PlayCanceled PlayCanceled(string callConnectionId, string serverCallId, string correlationId, string operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.PlayCanceled(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlayCanceled (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional operationContext As String = Nothing) As PlayCanceled" />
      <MemberSignature Language="F#" Value="static member PlayCanceled : string * string * string * string -&gt; Azure.Communication.CallAutomation.PlayCanceled" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.PlayCanceled (callConnectionId, serverCallId, correlationId, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.PlayCanceled</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callConnectionId"> Call connection ID. </param>
        <param name="serverCallId"> Server call ID. </param>
        <param name="correlationId"> Correlation ID for event to call correlation. </param>
        <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
        <summary> Initializes a new instance of PlayCanceled. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.PlayCanceled" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayCompleted">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.PlayCompleted PlayCompleted (string callConnectionId = default, string serverCallId = default, string correlationId = default, string operationContext = default, Azure.Communication.CallAutomation.ResultInformation resultInformation = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.PlayCompleted PlayCompleted(string callConnectionId, string serverCallId, string correlationId, string operationContext, class Azure.Communication.CallAutomation.ResultInformation resultInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.PlayCompleted(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlayCompleted (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional operationContext As String = Nothing, Optional resultInformation As ResultInformation = Nothing) As PlayCompleted" />
      <MemberSignature Language="F#" Value="static member PlayCompleted : string * string * string * string * Azure.Communication.CallAutomation.ResultInformation -&gt; Azure.Communication.CallAutomation.PlayCompleted" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.PlayCompleted (callConnectionId, serverCallId, correlationId, operationContext, resultInformation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.PlayCompleted</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
        <Parameter Name="resultInformation" Type="Azure.Communication.CallAutomation.ResultInformation" />
      </Parameters>
      <Docs>
        <param name="callConnectionId"> Call connection ID. </param>
        <param name="serverCallId"> Server call ID. </param>
        <param name="correlationId"> Correlation ID for event to call correlation. </param>
        <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
        <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
        <summary> Initializes a new instance of PlayCompleted. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.PlayCompleted" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayFailed">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.PlayFailed PlayFailed (string callConnectionId = default, string serverCallId = default, string correlationId = default, string operationContext = default, Azure.Communication.CallAutomation.ResultInformation resultInformation = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.PlayFailed PlayFailed(string callConnectionId, string serverCallId, string correlationId, string operationContext, class Azure.Communication.CallAutomation.ResultInformation resultInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.PlayFailed(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlayFailed (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional operationContext As String = Nothing, Optional resultInformation As ResultInformation = Nothing) As PlayFailed" />
      <MemberSignature Language="F#" Value="static member PlayFailed : string * string * string * string * Azure.Communication.CallAutomation.ResultInformation -&gt; Azure.Communication.CallAutomation.PlayFailed" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.PlayFailed (callConnectionId, serverCallId, correlationId, operationContext, resultInformation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.PlayFailed</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
        <Parameter Name="resultInformation" Type="Azure.Communication.CallAutomation.ResultInformation" />
      </Parameters>
      <Docs>
        <param name="callConnectionId"> Call connection ID. </param>
        <param name="serverCallId"> Server call ID. </param>
        <param name="correlationId"> Correlation ID for event to call correlation. </param>
        <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
        <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
        <summary> Initializes a new instance of PlayFailed. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.PlayFailed" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecognizeCanceled">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.RecognizeCanceled RecognizeCanceled (string callConnectionId = default, string serverCallId = default, string correlationId = default, string operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.RecognizeCanceled RecognizeCanceled(string callConnectionId, string serverCallId, string correlationId, string operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.RecognizeCanceled(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RecognizeCanceled (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional operationContext As String = Nothing) As RecognizeCanceled" />
      <MemberSignature Language="F#" Value="static member RecognizeCanceled : string * string * string * string -&gt; Azure.Communication.CallAutomation.RecognizeCanceled" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.RecognizeCanceled (callConnectionId, serverCallId, correlationId, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.RecognizeCanceled</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callConnectionId"> Call connection ID. </param>
        <param name="serverCallId"> Server call ID. </param>
        <param name="correlationId"> Correlation ID for event to call correlation. </param>
        <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
        <summary> Initializes a new instance of RecognizeCanceled. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.RecognizeCanceled" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecognizeCompleted">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.RecognizeCompleted RecognizeCompleted (string callConnectionId = default, string serverCallId = default, string correlationId = default, string operationContext = default, Azure.Communication.CallAutomation.ResultInformation resultInformation = default, Azure.Communication.CallAutomation.CallMediaRecognitionType recognitionType = default, Azure.Communication.CallAutomation.RecognizeResult recognizeResult = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.RecognizeCompleted RecognizeCompleted(string callConnectionId, string serverCallId, string correlationId, string operationContext, class Azure.Communication.CallAutomation.ResultInformation resultInformation, valuetype Azure.Communication.CallAutomation.CallMediaRecognitionType recognitionType, class Azure.Communication.CallAutomation.RecognizeResult recognizeResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.RecognizeCompleted(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CallAutomation.CallMediaRecognitionType,Azure.Communication.CallAutomation.RecognizeResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RecognizeCompleted (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional operationContext As String = Nothing, Optional resultInformation As ResultInformation = Nothing, Optional recognitionType As CallMediaRecognitionType = Nothing, Optional recognizeResult As RecognizeResult = Nothing) As RecognizeCompleted" />
      <MemberSignature Language="F#" Value="static member RecognizeCompleted : string * string * string * string * Azure.Communication.CallAutomation.ResultInformation * Azure.Communication.CallAutomation.CallMediaRecognitionType * Azure.Communication.CallAutomation.RecognizeResult -&gt; Azure.Communication.CallAutomation.RecognizeCompleted" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.RecognizeCompleted (callConnectionId, serverCallId, correlationId, operationContext, resultInformation, recognitionType, recognizeResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.RecognizeCompleted</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
        <Parameter Name="resultInformation" Type="Azure.Communication.CallAutomation.ResultInformation" />
        <Parameter Name="recognitionType" Type="Azure.Communication.CallAutomation.CallMediaRecognitionType" />
        <Parameter Name="recognizeResult" Type="Azure.Communication.CallAutomation.RecognizeResult" />
      </Parameters>
      <Docs>
        <param name="callConnectionId"> Call connection ID. </param>
        <param name="serverCallId"> Server call ID. </param>
        <param name="correlationId"> Correlation ID for event to call corre lation. Also called ChainId for skype chain ID. </param>
        <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
        <param name="resultInformation"> Contains the resulting SIP code/sub-code and message. </param>
        <param name="recognitionType">
            Determines the sub-type of the recognize operation.
            In case of cancel operation the this field is not set and is returned empty
            </param>
        <param name="recognizeResult"> Defines the result for RecognitionType = Dtmf, Choice, Speech. </param>
        <summary> Initializes a new instance of RecognizeCompletedInternal. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.RecognizeCompleted" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecognizeFailed">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.RecognizeFailed RecognizeFailed (string callConnectionId = default, string serverCallId = default, string correlationId = default, string operationContext = default, Azure.Communication.CallAutomation.ResultInformation resultInformation = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.RecognizeFailed RecognizeFailed(string callConnectionId, string serverCallId, string correlationId, string operationContext, class Azure.Communication.CallAutomation.ResultInformation resultInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.RecognizeFailed(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RecognizeFailed (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional operationContext As String = Nothing, Optional resultInformation As ResultInformation = Nothing) As RecognizeFailed" />
      <MemberSignature Language="F#" Value="static member RecognizeFailed : string * string * string * string * Azure.Communication.CallAutomation.ResultInformation -&gt; Azure.Communication.CallAutomation.RecognizeFailed" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.RecognizeFailed (callConnectionId, serverCallId, correlationId, operationContext, resultInformation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.RecognizeFailed</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
        <Parameter Name="resultInformation" Type="Azure.Communication.CallAutomation.ResultInformation" />
      </Parameters>
      <Docs>
        <param name="callConnectionId"> Call connection ID. </param>
        <param name="serverCallId"> Server call ID. </param>
        <param name="correlationId"> Correlation ID for event to call correlation. </param>
        <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
        <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
        <summary> Initializes a new instance of RecognizeFailed. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.RecognizeFailed" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordingStateChanged">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.RecordingStateChanged RecordingStateChanged (string callConnectionId = default, string serverCallId = default, string correlationId = default, string recordingId = default, Azure.Communication.CallAutomation.RecordingState state = default, DateTimeOffset? startDateTime = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.RecordingStateChanged RecordingStateChanged(string callConnectionId, string serverCallId, string correlationId, string recordingId, valuetype Azure.Communication.CallAutomation.RecordingState state, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.RecordingStateChanged(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.RecordingState,System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RecordingStateChanged (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional recordingId As String = Nothing, Optional state As RecordingState = Nothing, Optional startDateTime As Nullable(Of DateTimeOffset) = Nothing) As RecordingStateChanged" />
      <MemberSignature Language="F#" Value="static member RecordingStateChanged : string * string * string * string * Azure.Communication.CallAutomation.RecordingState * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.Communication.CallAutomation.RecordingStateChanged" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.RecordingStateChanged (callConnectionId, serverCallId, correlationId, recordingId, state, startDateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.RecordingStateChanged</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="recordingId" Type="System.String" />
        <Parameter Name="state" Type="Azure.Communication.CallAutomation.RecordingState" />
        <Parameter Name="startDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="callConnectionId"> Call connection ID. </param>
        <param name="serverCallId"> Server call ID. </param>
        <param name="correlationId"> Correlation ID for event to call correlation. </param>
        <param name="recordingId"> The call recording id. </param>
        <param name="state" />
        <param name="startDateTime"> The time of the recording started. </param>
        <summary> Initializes a new instance of RecordingStateChanged. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.RecordingStateChanged" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordingStateResult">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.RecordingStateResult RecordingStateResult (string recordingId = default, Azure.Communication.CallAutomation.RecordingState? recordingState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.RecordingStateResult RecordingStateResult(string recordingId, valuetype System.Nullable`1&lt;valuetype Azure.Communication.CallAutomation.RecordingState&gt; recordingState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.RecordingStateResult(System.String,System.Nullable{Azure.Communication.CallAutomation.RecordingState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RecordingStateResult (Optional recordingId As String = Nothing, Optional recordingState As Nullable(Of RecordingState) = Nothing) As RecordingStateResult" />
      <MemberSignature Language="F#" Value="static member RecordingStateResult : string * Nullable&lt;Azure.Communication.CallAutomation.RecordingState&gt; -&gt; Azure.Communication.CallAutomation.RecordingStateResult" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.RecordingStateResult (recordingId, recordingState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.RecordingStateResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordingId" Type="System.String" />
        <Parameter Name="recordingState" Type="System.Nullable&lt;Azure.Communication.CallAutomation.RecordingState&gt;" />
      </Parameters>
      <Docs>
        <param name="recordingId" />
        <param name="recordingState" />
        <summary> Initializes a new instance of RecordingStateResult. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.RecordingStateResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveParticipantFailed">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.RemoveParticipantFailed RemoveParticipantFailed (string callConnectionId = default, string serverCallId = default, string correlationId = default, string operationContext = default, Azure.Communication.CallAutomation.ResultInformation resultInformation = default, Azure.Communication.CommunicationIdentifier participant = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.RemoveParticipantFailed RemoveParticipantFailed(string callConnectionId, string serverCallId, string correlationId, string operationContext, class Azure.Communication.CallAutomation.ResultInformation resultInformation, class Azure.Communication.CommunicationIdentifier participant) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.RemoveParticipantFailed(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CommunicationIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RemoveParticipantFailed (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional operationContext As String = Nothing, Optional resultInformation As ResultInformation = Nothing, Optional participant As CommunicationIdentifier = Nothing) As RemoveParticipantFailed" />
      <MemberSignature Language="F#" Value="static member RemoveParticipantFailed : string * string * string * string * Azure.Communication.CallAutomation.ResultInformation * Azure.Communication.CommunicationIdentifier -&gt; Azure.Communication.CallAutomation.RemoveParticipantFailed" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.RemoveParticipantFailed (callConnectionId, serverCallId, correlationId, operationContext, resultInformation, participant)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.RemoveParticipantFailed</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
        <Parameter Name="resultInformation" Type="Azure.Communication.CallAutomation.ResultInformation" />
        <Parameter Name="participant" Type="Azure.Communication.CommunicationIdentifier" />
      </Parameters>
      <Docs>
        <param name="callConnectionId">To be added.</param>
        <param name="serverCallId">To be added.</param>
        <param name="correlationId">To be added.</param>
        <param name="operationContext">To be added.</param>
        <param name="resultInformation">To be added.</param>
        <param name="participant">To be added.</param>
        <summary>
            Initializes a new instance of remove participant failed event.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveParticipantResult">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.RemoveParticipantResult RemoveParticipantResult (string operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.RemoveParticipantResult RemoveParticipantResult(string operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.RemoveParticipantResult(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RemoveParticipantResult (Optional operationContext As String = Nothing) As RemoveParticipantResult" />
      <MemberSignature Language="F#" Value="static member RemoveParticipantResult : string -&gt; Azure.Communication.CallAutomation.RemoveParticipantResult" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.RemoveParticipantResult operationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.RemoveParticipantResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationContext" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operationContext"> The operation context provided by client. </param>
        <summary> Initializes a new instance of RemoveParticipantResult. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.RemoveParticipantResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveParticipantSucceeded">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.RemoveParticipantSucceeded RemoveParticipantSucceeded (string callConnectionId = default, string serverCallId = default, string correlationId = default, string operationContext = default, Azure.Communication.CallAutomation.ResultInformation resultInformation = default, Azure.Communication.CommunicationIdentifier participant = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.RemoveParticipantSucceeded RemoveParticipantSucceeded(string callConnectionId, string serverCallId, string correlationId, string operationContext, class Azure.Communication.CallAutomation.ResultInformation resultInformation, class Azure.Communication.CommunicationIdentifier participant) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.RemoveParticipantSucceeded(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CommunicationIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RemoveParticipantSucceeded (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional operationContext As String = Nothing, Optional resultInformation As ResultInformation = Nothing, Optional participant As CommunicationIdentifier = Nothing) As RemoveParticipantSucceeded" />
      <MemberSignature Language="F#" Value="static member RemoveParticipantSucceeded : string * string * string * string * Azure.Communication.CallAutomation.ResultInformation * Azure.Communication.CommunicationIdentifier -&gt; Azure.Communication.CallAutomation.RemoveParticipantSucceeded" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.RemoveParticipantSucceeded (callConnectionId, serverCallId, correlationId, operationContext, resultInformation, participant)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.RemoveParticipantSucceeded</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
        <Parameter Name="resultInformation" Type="Azure.Communication.CallAutomation.ResultInformation" />
        <Parameter Name="participant" Type="Azure.Communication.CommunicationIdentifier" />
      </Parameters>
      <Docs>
        <param name="callConnectionId">To be added.</param>
        <param name="serverCallId">To be added.</param>
        <param name="correlationId">To be added.</param>
        <param name="operationContext">To be added.</param>
        <param name="resultInformation">To be added.</param>
        <param name="participant">To be added.</param>
        <summary>
            Initializes a new instance of remove participant success event.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResultInformation">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.ResultInformation ResultInformation (int? code = default, int? subCode = default, string message = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.ResultInformation ResultInformation(valuetype System.Nullable`1&lt;int32&gt; code, valuetype System.Nullable`1&lt;int32&gt; subCode, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.ResultInformation(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResultInformation (Optional code As Nullable(Of Integer) = Nothing, Optional subCode As Nullable(Of Integer) = Nothing, Optional message As String = Nothing) As ResultInformation" />
      <MemberSignature Language="F#" Value="static member ResultInformation : Nullable&lt;int&gt; * Nullable&lt;int&gt; * string -&gt; Azure.Communication.CallAutomation.ResultInformation" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.ResultInformation (code, subCode, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.ResultInformation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="subCode" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="code"> Code of the current result. This can be helpful to Call Automation team to troubleshoot the issue if this result was unexpected. </param>
        <param name="subCode"> Subcode of the current result. This can be helpful to Call Automation team to troubleshoot the issue if this result was unexpected. </param>
        <param name="message"> Detail message that describes the current result. </param>
        <summary> Initializes a new instance of ResultInformation. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.ResultInformation" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendDtmfTonesCompleted">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.SendDtmfTonesCompleted SendDtmfTonesCompleted (string callConnectionId = default, string serverCallId = default, string correlationId = default, string operationContext = default, Azure.Communication.CallAutomation.ResultInformation resultInformation = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.SendDtmfTonesCompleted SendDtmfTonesCompleted(string callConnectionId, string serverCallId, string correlationId, string operationContext, class Azure.Communication.CallAutomation.ResultInformation resultInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.SendDtmfTonesCompleted(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SendDtmfTonesCompleted (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional operationContext As String = Nothing, Optional resultInformation As ResultInformation = Nothing) As SendDtmfTonesCompleted" />
      <MemberSignature Language="F#" Value="static member SendDtmfTonesCompleted : string * string * string * string * Azure.Communication.CallAutomation.ResultInformation -&gt; Azure.Communication.CallAutomation.SendDtmfTonesCompleted" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.SendDtmfTonesCompleted (callConnectionId, serverCallId, correlationId, operationContext, resultInformation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.SendDtmfTonesCompleted</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
        <Parameter Name="resultInformation" Type="Azure.Communication.CallAutomation.ResultInformation" />
      </Parameters>
      <Docs>
        <param name="callConnectionId"> Call connection ID. </param>
        <param name="serverCallId"> Server call ID. </param>
        <param name="correlationId"> Correlation ID for event to call corre lation. Also called ChainId for skype chain ID. </param>
        <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
        <param name="resultInformation"> Contains the resulting SIP code/sub-code and message. </param>
        <summary>
            Initializes a new instance of SendDtmfTonesCompleted.
            </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.SendDtmfTonesCompleted" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendDtmfTonesFailed">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.SendDtmfTonesFailed SendDtmfTonesFailed (string callConnectionId = default, string serverCallId = default, string correlationId = default, string operationContext = default, Azure.Communication.CallAutomation.ResultInformation resultInformation = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.SendDtmfTonesFailed SendDtmfTonesFailed(string callConnectionId, string serverCallId, string correlationId, string operationContext, class Azure.Communication.CallAutomation.ResultInformation resultInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.SendDtmfTonesFailed(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SendDtmfTonesFailed (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional operationContext As String = Nothing, Optional resultInformation As ResultInformation = Nothing) As SendDtmfTonesFailed" />
      <MemberSignature Language="F#" Value="static member SendDtmfTonesFailed : string * string * string * string * Azure.Communication.CallAutomation.ResultInformation -&gt; Azure.Communication.CallAutomation.SendDtmfTonesFailed" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.SendDtmfTonesFailed (callConnectionId, serverCallId, correlationId, operationContext, resultInformation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.SendDtmfTonesFailed</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
        <Parameter Name="resultInformation" Type="Azure.Communication.CallAutomation.ResultInformation" />
      </Parameters>
      <Docs>
        <param name="callConnectionId"> Call connection ID. </param>
        <param name="serverCallId"> Server call ID. </param>
        <param name="correlationId"> Correlation ID for event to call corre lation. Also called ChainId for skype chain ID. </param>
        <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
        <param name="resultInformation"> Contains the resulting SIP code/sub-code and message. </param>
        <summary>
            Initializes a new instance of SendDtmfTonesFailed.
            </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.SendDtmfTonesFailed" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeechResult">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.SpeechResult SpeechResult (string speech = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.SpeechResult SpeechResult(string speech) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.SpeechResult(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SpeechResult (Optional speech As String = Nothing) As SpeechResult" />
      <MemberSignature Language="F#" Value="static member SpeechResult : string -&gt; Azure.Communication.CallAutomation.SpeechResult" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.SpeechResult speech" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.SpeechResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="speech" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="speech"> The recognized speech in string. </param>
        <summary> Initializes a new instance of SpeechResult. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.SpeechResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransferCallToParticipantResult">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.TransferCallToParticipantResult TransferCallToParticipantResult (string operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.TransferCallToParticipantResult TransferCallToParticipantResult(string operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.TransferCallToParticipantResult(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TransferCallToParticipantResult (Optional operationContext As String = Nothing) As TransferCallToParticipantResult" />
      <MemberSignature Language="F#" Value="static member TransferCallToParticipantResult : string -&gt; Azure.Communication.CallAutomation.TransferCallToParticipantResult" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.TransferCallToParticipantResult operationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.TransferCallToParticipantResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationContext" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operationContext"> The operation context provided by client. </param>
        <summary> Initializes a new instance of TransferCallToParticipantResult. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.TransferCallToParticipantResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
