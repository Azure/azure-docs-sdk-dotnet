<Type Name="MockableDataLakeStoreSubscriptionResource" FullName="Azure.ResourceManager.DataLakeStore.Mocking.MockableDataLakeStoreSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableDataLakeStoreSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableDataLakeStoreSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataLakeStore.Mocking.MockableDataLakeStoreSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableDataLakeStoreSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableDataLakeStoreSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataLakeStore</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableDataLakeStoreSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeStore.Mocking.MockableDataLakeStoreSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeStore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.DataLakeStore.Mocking.MockableDataLakeStoreSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckDataLakeStoreAccountNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountNameAvailabilityResult&gt; CheckDataLakeStoreAccountNameAvailability (Azure.Core.AzureLocation location, Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountNameAvailabilityResult&gt; CheckDataLakeStoreAccountNameAvailability(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeStore.Mocking.MockableDataLakeStoreSubscriptionResource.CheckDataLakeStoreAccountNameAvailability(Azure.Core.AzureLocation,Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckDataLakeStoreAccountNameAvailability (location As AzureLocation, content As DataLakeStoreAccountNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataLakeStoreAccountNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckDataLakeStoreAccountNameAvailability : Azure.Core.AzureLocation * Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountNameAvailabilityResult&gt;&#xA;override this.CheckDataLakeStoreAccountNameAvailability : Azure.Core.AzureLocation * Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountNameAvailabilityResult&gt;" Usage="mockableDataLakeStoreSubscriptionResource.CheckDataLakeStoreAccountNameAvailability (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeStore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The resource location without whitespace. </param>
        <param name="content"> Parameters supplied to check the Data Lake Store account name availability. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks whether the specified account name is available or taken.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/locations/{location}/checkNameAvailability</description></item><item><term>Operation Id</term><description>Accounts_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2016-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataLakeStore.DataLakeStoreAccountResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckDataLakeStoreAccountNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountNameAvailabilityResult&gt;&gt; CheckDataLakeStoreAccountNameAvailabilityAsync (Azure.Core.AzureLocation location, Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountNameAvailabilityResult&gt;&gt; CheckDataLakeStoreAccountNameAvailabilityAsync(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeStore.Mocking.MockableDataLakeStoreSubscriptionResource.CheckDataLakeStoreAccountNameAvailabilityAsync(Azure.Core.AzureLocation,Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckDataLakeStoreAccountNameAvailabilityAsync (location As AzureLocation, content As DataLakeStoreAccountNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataLakeStoreAccountNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckDataLakeStoreAccountNameAvailabilityAsync : Azure.Core.AzureLocation * Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountNameAvailabilityResult&gt;&gt;&#xA;override this.CheckDataLakeStoreAccountNameAvailabilityAsync : Azure.Core.AzureLocation * Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountNameAvailabilityResult&gt;&gt;" Usage="mockableDataLakeStoreSubscriptionResource.CheckDataLakeStoreAccountNameAvailabilityAsync (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeStore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The resource location without whitespace. </param>
        <param name="content"> Parameters supplied to check the Data Lake Store account name availability. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks whether the specified account name is available or taken.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/locations/{location}/checkNameAvailability</description></item><item><term>Operation Id</term><description>Accounts_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2016-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataLakeStore.DataLakeStoreAccountResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAccounts">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountBasicData&gt; GetAccounts (Azure.ResourceManager.DataLakeStore.Models.SubscriptionResourceGetAccountsOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountBasicData&gt; GetAccounts(class Azure.ResourceManager.DataLakeStore.Models.SubscriptionResourceGetAccountsOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeStore.Mocking.MockableDataLakeStoreSubscriptionResource.GetAccounts(Azure.ResourceManager.DataLakeStore.Models.SubscriptionResourceGetAccountsOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAccounts (options As SubscriptionResourceGetAccountsOptions, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DataLakeStoreAccountBasicData)" />
      <MemberSignature Language="F#" Value="abstract member GetAccounts : Azure.ResourceManager.DataLakeStore.Models.SubscriptionResourceGetAccountsOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountBasicData&gt;&#xA;override this.GetAccounts : Azure.ResourceManager.DataLakeStore.Models.SubscriptionResourceGetAccountsOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountBasicData&gt;" Usage="mockableDataLakeStoreSubscriptionResource.GetAccounts (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeStore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountBasicData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.ResourceManager.DataLakeStore.Models.SubscriptionResourceGetAccountsOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the Data Lake Store accounts within the subscription. The response includes a link to the next page of results, if any.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/accounts</description></item><item><term>Operation Id</term><description>Accounts_List</description></item><item><term>Default Api Version</term><description>2016-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataLakeStore.DataLakeStoreAccountResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountBasicData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccounts">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountBasicData&gt; GetAccounts (string filter = default, int? top = default, int? skip = default, string select = default, string orderBy = default, bool? count = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountBasicData&gt; GetAccounts(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, string select, string orderBy, valuetype System.Nullable`1&lt;bool&gt; count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeStore.Mocking.MockableDataLakeStoreSubscriptionResource.GetAccounts(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAccounts (Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional select As String = Nothing, Optional orderBy As String = Nothing, Optional count As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DataLakeStoreAccountBasicData)" />
      <MemberSignature Language="F#" Value="abstract member GetAccounts : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * string * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountBasicData&gt;&#xA;override this.GetAccounts : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * string * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountBasicData&gt;" Usage="mockableDataLakeStoreSubscriptionResource.GetAccounts (filter, top, skip, select, orderBy, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeStore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountBasicData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="select" Type="System.String" />
        <Parameter Name="orderBy" Type="System.String" />
        <Parameter Name="count" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> OData filter. Optional. </param>
        <param name="top"> The number of items to return. Optional. </param>
        <param name="skip"> The number of items to skip over before returning elements. Optional. </param>
        <param name="select"> OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional. </param>
        <param name="orderBy"> OrderBy clause. One or more comma-separated expressions with an optional "asc" (the default) or "desc" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional. </param>
        <param name="count"> The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the Data Lake Store accounts within the subscription. The response includes a link to the next page of results, if any.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/accounts</description></item><item><term>Operation Id</term><description>Accounts_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountBasicData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccountsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountBasicData&gt; GetAccountsAsync (Azure.ResourceManager.DataLakeStore.Models.SubscriptionResourceGetAccountsOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountBasicData&gt; GetAccountsAsync(class Azure.ResourceManager.DataLakeStore.Models.SubscriptionResourceGetAccountsOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeStore.Mocking.MockableDataLakeStoreSubscriptionResource.GetAccountsAsync(Azure.ResourceManager.DataLakeStore.Models.SubscriptionResourceGetAccountsOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAccountsAsync (options As SubscriptionResourceGetAccountsOptions, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DataLakeStoreAccountBasicData)" />
      <MemberSignature Language="F#" Value="abstract member GetAccountsAsync : Azure.ResourceManager.DataLakeStore.Models.SubscriptionResourceGetAccountsOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountBasicData&gt;&#xA;override this.GetAccountsAsync : Azure.ResourceManager.DataLakeStore.Models.SubscriptionResourceGetAccountsOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountBasicData&gt;" Usage="mockableDataLakeStoreSubscriptionResource.GetAccountsAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeStore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountBasicData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.ResourceManager.DataLakeStore.Models.SubscriptionResourceGetAccountsOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the Data Lake Store accounts within the subscription. The response includes a link to the next page of results, if any.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/accounts</description></item><item><term>Operation Id</term><description>Accounts_List</description></item><item><term>Default Api Version</term><description>2016-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DataLakeStore.DataLakeStoreAccountResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountBasicData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccountsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountBasicData&gt; GetAccountsAsync (string filter = default, int? top = default, int? skip = default, string select = default, string orderBy = default, bool? count = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountBasicData&gt; GetAccountsAsync(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, string select, string orderBy, valuetype System.Nullable`1&lt;bool&gt; count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeStore.Mocking.MockableDataLakeStoreSubscriptionResource.GetAccountsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAccountsAsync (Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional select As String = Nothing, Optional orderBy As String = Nothing, Optional count As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DataLakeStoreAccountBasicData)" />
      <MemberSignature Language="F#" Value="abstract member GetAccountsAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * string * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountBasicData&gt;&#xA;override this.GetAccountsAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * string * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountBasicData&gt;" Usage="mockableDataLakeStoreSubscriptionResource.GetAccountsAsync (filter, top, skip, select, orderBy, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeStore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountBasicData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="select" Type="System.String" />
        <Parameter Name="orderBy" Type="System.String" />
        <Parameter Name="count" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> OData filter. Optional. </param>
        <param name="top"> The number of items to return. Optional. </param>
        <param name="skip"> The number of items to skip over before returning elements. Optional. </param>
        <param name="select"> OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional. </param>
        <param name="orderBy"> OrderBy clause. One or more comma-separated expressions with an optional "asc" (the default) or "desc" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional. </param>
        <param name="count"> The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the Data Lake Store accounts within the subscription. The response includes a link to the next page of results, if any.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/accounts</description></item><item><term>Operation Id</term><description>Accounts_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountBasicData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCapabilityByLocation">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCapabilityInformation&gt; GetCapabilityByLocation (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCapabilityInformation&gt; GetCapabilityByLocation(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeStore.Mocking.MockableDataLakeStoreSubscriptionResource.GetCapabilityByLocation(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCapabilityByLocation (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataLakeStoreCapabilityInformation)" />
      <MemberSignature Language="F#" Value="abstract member GetCapabilityByLocation : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCapabilityInformation&gt;&#xA;override this.GetCapabilityByLocation : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCapabilityInformation&gt;" Usage="mockableDataLakeStoreSubscriptionResource.GetCapabilityByLocation (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeStore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCapabilityInformation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The resource location without whitespace. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets subscription-level properties and limits for Data Lake Store specified by resource location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/locations/{location}/capability</description></item><item><term>Operation Id</term><description>Locations_GetCapability</description></item><item><term>Default Api Version</term><description>2016-11-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCapabilityByLocationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCapabilityInformation&gt;&gt; GetCapabilityByLocationAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCapabilityInformation&gt;&gt; GetCapabilityByLocationAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeStore.Mocking.MockableDataLakeStoreSubscriptionResource.GetCapabilityByLocationAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCapabilityByLocationAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataLakeStoreCapabilityInformation))" />
      <MemberSignature Language="F#" Value="abstract member GetCapabilityByLocationAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCapabilityInformation&gt;&gt;&#xA;override this.GetCapabilityByLocationAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCapabilityInformation&gt;&gt;" Usage="mockableDataLakeStoreSubscriptionResource.GetCapabilityByLocationAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeStore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCapabilityInformation&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The resource location without whitespace. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets subscription-level properties and limits for Data Lake Store specified by resource location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/locations/{location}/capability</description></item><item><term>Operation Id</term><description>Locations_GetCapability</description></item><item><term>Default Api Version</term><description>2016-11-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUsagesByLocation">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsage&gt; GetUsagesByLocation (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsage&gt; GetUsagesByLocation(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeStore.Mocking.MockableDataLakeStoreSubscriptionResource.GetUsagesByLocation(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUsagesByLocation (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DataLakeStoreUsage)" />
      <MemberSignature Language="F#" Value="abstract member GetUsagesByLocation : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsage&gt;&#xA;override this.GetUsagesByLocation : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsage&gt;" Usage="mockableDataLakeStoreSubscriptionResource.GetUsagesByLocation (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeStore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The resource location without whitespace. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the current usage count and the limit for the resources of the location under the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/locations/{location}/usages</description></item><item><term>Operation Id</term><description>Locations_GetUsage</description></item><item><term>Default Api Version</term><description>2016-11-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUsagesByLocationAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsage&gt; GetUsagesByLocationAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsage&gt; GetUsagesByLocationAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeStore.Mocking.MockableDataLakeStoreSubscriptionResource.GetUsagesByLocationAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUsagesByLocationAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DataLakeStoreUsage)" />
      <MemberSignature Language="F#" Value="abstract member GetUsagesByLocationAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsage&gt;&#xA;override this.GetUsagesByLocationAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsage&gt;" Usage="mockableDataLakeStoreSubscriptionResource.GetUsagesByLocationAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeStore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The resource location without whitespace. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the current usage count and the limit for the resources of the location under the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/locations/{location}/usages</description></item><item><term>Operation Id</term><description>Locations_GetUsage</description></item><item><term>Default Api Version</term><description>2016-11-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
