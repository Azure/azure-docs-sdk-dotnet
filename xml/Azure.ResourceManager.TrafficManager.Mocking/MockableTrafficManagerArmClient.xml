<Type Name="MockableTrafficManagerArmClient" FullName="Azure.ResourceManager.TrafficManager.Mocking.MockableTrafficManagerArmClient">
  <TypeSignature Language="C#" Value="public class MockableTrafficManagerArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableTrafficManagerArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.TrafficManager.Mocking.MockableTrafficManagerArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableTrafficManagerArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableTrafficManagerArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.TrafficManager</AssemblyName>
    <AssemblyVersion>1.1.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableTrafficManagerArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.TrafficManager.Mocking.MockableTrafficManagerArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.TrafficManager</AssemblyName>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.TrafficManager.Mocking.MockableTrafficManagerArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrafficManagerEndpointResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.TrafficManager.TrafficManagerEndpointResource GetTrafficManagerEndpointResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.TrafficManager.TrafficManagerEndpointResource GetTrafficManagerEndpointResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.TrafficManager.Mocking.MockableTrafficManagerArmClient.GetTrafficManagerEndpointResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTrafficManagerEndpointResource (id As ResourceIdentifier) As TrafficManagerEndpointResource" />
      <MemberSignature Language="F#" Value="abstract member GetTrafficManagerEndpointResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.TrafficManager.TrafficManagerEndpointResource&#xA;override this.GetTrafficManagerEndpointResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.TrafficManager.TrafficManagerEndpointResource" Usage="mockableTrafficManagerArmClient.GetTrafficManagerEndpointResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.TrafficManager</AssemblyName>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.TrafficManager.TrafficManagerEndpointResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.TrafficManager.TrafficManagerEndpointResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.TrafficManager.TrafficManagerEndpointResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.TrafficManager.TrafficManagerEndpointResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.TrafficManager.TrafficManagerEndpointResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrafficManagerGeographicHierarchyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.TrafficManager.TrafficManagerGeographicHierarchyResource GetTrafficManagerGeographicHierarchyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.TrafficManager.TrafficManagerGeographicHierarchyResource GetTrafficManagerGeographicHierarchyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.TrafficManager.Mocking.MockableTrafficManagerArmClient.GetTrafficManagerGeographicHierarchyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTrafficManagerGeographicHierarchyResource (id As ResourceIdentifier) As TrafficManagerGeographicHierarchyResource" />
      <MemberSignature Language="F#" Value="abstract member GetTrafficManagerGeographicHierarchyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.TrafficManager.TrafficManagerGeographicHierarchyResource&#xA;override this.GetTrafficManagerGeographicHierarchyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.TrafficManager.TrafficManagerGeographicHierarchyResource" Usage="mockableTrafficManagerArmClient.GetTrafficManagerGeographicHierarchyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.TrafficManager</AssemblyName>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.TrafficManager.TrafficManagerGeographicHierarchyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.TrafficManager.TrafficManagerGeographicHierarchyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.TrafficManager.TrafficManagerGeographicHierarchyResource.CreateResourceIdentifier" /> to create a <see cref="T:Azure.ResourceManager.TrafficManager.TrafficManagerGeographicHierarchyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.TrafficManager.TrafficManagerGeographicHierarchyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrafficManagerHeatMapResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.TrafficManager.TrafficManagerHeatMapResource GetTrafficManagerHeatMapResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.TrafficManager.TrafficManagerHeatMapResource GetTrafficManagerHeatMapResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.TrafficManager.Mocking.MockableTrafficManagerArmClient.GetTrafficManagerHeatMapResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTrafficManagerHeatMapResource (id As ResourceIdentifier) As TrafficManagerHeatMapResource" />
      <MemberSignature Language="F#" Value="abstract member GetTrafficManagerHeatMapResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.TrafficManager.TrafficManagerHeatMapResource&#xA;override this.GetTrafficManagerHeatMapResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.TrafficManager.TrafficManagerHeatMapResource" Usage="mockableTrafficManagerArmClient.GetTrafficManagerHeatMapResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.TrafficManager</AssemblyName>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.TrafficManager.TrafficManagerHeatMapResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.TrafficManager.TrafficManagerHeatMapResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.TrafficManager.TrafficManagerHeatMapResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.TrafficManager.Models.TrafficManagerHeatMapType)" /> to create a <see cref="T:Azure.ResourceManager.TrafficManager.TrafficManagerHeatMapResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.TrafficManager.TrafficManagerHeatMapResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrafficManagerProfileResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.TrafficManager.TrafficManagerProfileResource GetTrafficManagerProfileResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.TrafficManager.TrafficManagerProfileResource GetTrafficManagerProfileResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.TrafficManager.Mocking.MockableTrafficManagerArmClient.GetTrafficManagerProfileResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTrafficManagerProfileResource (id As ResourceIdentifier) As TrafficManagerProfileResource" />
      <MemberSignature Language="F#" Value="abstract member GetTrafficManagerProfileResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.TrafficManager.TrafficManagerProfileResource&#xA;override this.GetTrafficManagerProfileResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.TrafficManager.TrafficManagerProfileResource" Usage="mockableTrafficManagerArmClient.GetTrafficManagerProfileResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.TrafficManager</AssemblyName>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.TrafficManager.TrafficManagerProfileResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.TrafficManager.TrafficManagerProfileResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.TrafficManager.TrafficManagerProfileResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.TrafficManager.TrafficManagerProfileResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.TrafficManager.TrafficManagerProfileResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrafficManagerUserMetricsResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.TrafficManager.TrafficManagerUserMetricsResource GetTrafficManagerUserMetricsResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.TrafficManager.TrafficManagerUserMetricsResource GetTrafficManagerUserMetricsResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.TrafficManager.Mocking.MockableTrafficManagerArmClient.GetTrafficManagerUserMetricsResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTrafficManagerUserMetricsResource (id As ResourceIdentifier) As TrafficManagerUserMetricsResource" />
      <MemberSignature Language="F#" Value="abstract member GetTrafficManagerUserMetricsResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.TrafficManager.TrafficManagerUserMetricsResource&#xA;override this.GetTrafficManagerUserMetricsResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.TrafficManager.TrafficManagerUserMetricsResource" Usage="mockableTrafficManagerArmClient.GetTrafficManagerUserMetricsResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.TrafficManager</AssemblyName>
        <AssemblyVersion>1.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.TrafficManager.TrafficManagerUserMetricsResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.TrafficManager.TrafficManagerUserMetricsResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.TrafficManager.TrafficManagerUserMetricsResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.TrafficManager.TrafficManagerUserMetricsResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.TrafficManager.TrafficManagerUserMetricsResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
