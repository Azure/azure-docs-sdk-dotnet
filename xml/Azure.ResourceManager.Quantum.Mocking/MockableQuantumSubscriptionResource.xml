<Type Name="MockableQuantumSubscriptionResource" FullName="Azure.ResourceManager.Quantum.Mocking.MockableQuantumSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableQuantumSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableQuantumSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Quantum.Mocking.MockableQuantumSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableQuantumSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableQuantumSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Quantum</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableQuantumSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quantum.Mocking.MockableQuantumSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quantum</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Quantum.Mocking.MockableQuantumSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckWorkspaceNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Quantum.Models.WorkspaceNameAvailabilityResult&gt; CheckWorkspaceNameAvailability (string locationName, Azure.ResourceManager.Quantum.Models.WorkspaceNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Quantum.Models.WorkspaceNameAvailabilityResult&gt; CheckWorkspaceNameAvailability(string locationName, class Azure.ResourceManager.Quantum.Models.WorkspaceNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quantum.Mocking.MockableQuantumSubscriptionResource.CheckWorkspaceNameAvailability(System.String,Azure.ResourceManager.Quantum.Models.WorkspaceNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckWorkspaceNameAvailability (locationName As String, content As WorkspaceNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of WorkspaceNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckWorkspaceNameAvailability : string * Azure.ResourceManager.Quantum.Models.WorkspaceNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Quantum.Models.WorkspaceNameAvailabilityResult&gt;&#xA;override this.CheckWorkspaceNameAvailability : string * Azure.ResourceManager.Quantum.Models.WorkspaceNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Quantum.Models.WorkspaceNameAvailabilityResult&gt;" Usage="mockableQuantumSubscriptionResource.CheckWorkspaceNameAvailability (locationName, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quantum</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Quantum.Models.WorkspaceNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.Quantum.Models.WorkspaceNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> Location. </param>
        <param name="content"> The name and type of the resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check the availability of the resource name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Quantum/locations/{locationName}/checkNameAvailability</description></item><item><term>Operation Id</term><description>Workspace_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2023-11-13-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckWorkspaceNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Quantum.Models.WorkspaceNameAvailabilityResult&gt;&gt; CheckWorkspaceNameAvailabilityAsync (string locationName, Azure.ResourceManager.Quantum.Models.WorkspaceNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Quantum.Models.WorkspaceNameAvailabilityResult&gt;&gt; CheckWorkspaceNameAvailabilityAsync(string locationName, class Azure.ResourceManager.Quantum.Models.WorkspaceNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quantum.Mocking.MockableQuantumSubscriptionResource.CheckWorkspaceNameAvailabilityAsync(System.String,Azure.ResourceManager.Quantum.Models.WorkspaceNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckWorkspaceNameAvailabilityAsync (locationName As String, content As WorkspaceNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of WorkspaceNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckWorkspaceNameAvailabilityAsync : string * Azure.ResourceManager.Quantum.Models.WorkspaceNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Quantum.Models.WorkspaceNameAvailabilityResult&gt;&gt;&#xA;override this.CheckWorkspaceNameAvailabilityAsync : string * Azure.ResourceManager.Quantum.Models.WorkspaceNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Quantum.Models.WorkspaceNameAvailabilityResult&gt;&gt;" Usage="mockableQuantumSubscriptionResource.CheckWorkspaceNameAvailabilityAsync (locationName, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quantum</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Quantum.Models.WorkspaceNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.Quantum.Models.WorkspaceNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> Location. </param>
        <param name="content"> The name and type of the resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check the availability of the resource name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Quantum/locations/{locationName}/checkNameAvailability</description></item><item><term>Operation Id</term><description>Workspace_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2023-11-13-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetOfferings">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Quantum.Models.QuantumProviderDescription&gt; GetOfferings (string locationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Quantum.Models.QuantumProviderDescription&gt; GetOfferings(string locationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quantum.Mocking.MockableQuantumSubscriptionResource.GetOfferings(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOfferings (locationName As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of QuantumProviderDescription)" />
      <MemberSignature Language="F#" Value="abstract member GetOfferings : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Quantum.Models.QuantumProviderDescription&gt;&#xA;override this.GetOfferings : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Quantum.Models.QuantumProviderDescription&gt;" Usage="mockableQuantumSubscriptionResource.GetOfferings (locationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quantum</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Quantum.Models.QuantumProviderDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> Location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns the list of all provider offerings available for the given location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Quantum/locations/{locationName}/offerings</description></item><item><term>Operation Id</term><description>Offerings_List</description></item><item><term>Default Api Version</term><description>2023-11-13-preview</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Quantum.Models.QuantumProviderDescription" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetOfferingsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Quantum.Models.QuantumProviderDescription&gt; GetOfferingsAsync (string locationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Quantum.Models.QuantumProviderDescription&gt; GetOfferingsAsync(string locationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quantum.Mocking.MockableQuantumSubscriptionResource.GetOfferingsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOfferingsAsync (locationName As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of QuantumProviderDescription)" />
      <MemberSignature Language="F#" Value="abstract member GetOfferingsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Quantum.Models.QuantumProviderDescription&gt;&#xA;override this.GetOfferingsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Quantum.Models.QuantumProviderDescription&gt;" Usage="mockableQuantumSubscriptionResource.GetOfferingsAsync (locationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quantum</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Quantum.Models.QuantumProviderDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> Location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns the list of all provider offerings available for the given location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Quantum/locations/{locationName}/offerings</description></item><item><term>Operation Id</term><description>Offerings_List</description></item><item><term>Default Api Version</term><description>2023-11-13-preview</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Quantum.Models.QuantumProviderDescription" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetQuantumWorkspaces">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Quantum.QuantumWorkspaceResource&gt; GetQuantumWorkspaces (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Quantum.QuantumWorkspaceResource&gt; GetQuantumWorkspaces(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quantum.Mocking.MockableQuantumSubscriptionResource.GetQuantumWorkspaces(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQuantumWorkspaces (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of QuantumWorkspaceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetQuantumWorkspaces : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Quantum.QuantumWorkspaceResource&gt;&#xA;override this.GetQuantumWorkspaces : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Quantum.QuantumWorkspaceResource&gt;" Usage="mockableQuantumSubscriptionResource.GetQuantumWorkspaces cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quantum</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Quantum.QuantumWorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the list of Workspaces within a Subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Quantum/workspaces</description></item><item><term>Operation Id</term><description>Workspaces_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-11-13-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Quantum.QuantumWorkspaceResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Quantum.QuantumWorkspaceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQuantumWorkspacesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Quantum.QuantumWorkspaceResource&gt; GetQuantumWorkspacesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Quantum.QuantumWorkspaceResource&gt; GetQuantumWorkspacesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Quantum.Mocking.MockableQuantumSubscriptionResource.GetQuantumWorkspacesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQuantumWorkspacesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of QuantumWorkspaceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetQuantumWorkspacesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Quantum.QuantumWorkspaceResource&gt;&#xA;override this.GetQuantumWorkspacesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Quantum.QuantumWorkspaceResource&gt;" Usage="mockableQuantumSubscriptionResource.GetQuantumWorkspacesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Quantum</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Quantum.QuantumWorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the list of Workspaces within a Subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Quantum/workspaces</description></item><item><term>Operation Id</term><description>Workspaces_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-11-13-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Quantum.QuantumWorkspaceResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Quantum.QuantumWorkspaceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
