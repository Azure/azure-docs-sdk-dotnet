<Type Name="MockableRecoveryServicesBackupResourceGroupResource" FullName="Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableRecoveryServicesBackupResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableRecoveryServicesBackupResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableRecoveryServicesBackupResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableRecoveryServicesBackupResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
    <AssemblyVersion>1.1.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableRecoveryServicesBackupResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response ExportJob (string vaultName, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response ExportJob(string vaultName, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.ExportJob(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExportJob (vaultName As String, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member ExportJob : string * string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.ExportJob : string * string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="mockableRecoveryServicesBackupResourceGroupResource.ExportJob (vaultName, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="filter"> OData filter options. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers export of jobs specified by filters and returns an OperationID to track.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupJobsExport</description></item><item><term>Operation Id</term><description>Jobs_Export</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExportJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; ExportJobAsync (string vaultName, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; ExportJobAsync(string vaultName, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.ExportJobAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExportJobAsync (vaultName As String, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member ExportJobAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.ExportJobAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.ExportJobAsync (vaultName, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="filter"> OData filter options. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Triggers export of jobs specified by filters and returns an OperationID to track.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupJobsExport</description></item><item><term>Operation Id</term><description>Jobs_Export</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupEngine">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupEngineResource&gt; GetBackupEngine (string vaultName, string backupEngineName, string filter = default, string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.BackupEngineResource&gt; GetBackupEngine(string vaultName, string backupEngineName, string filter, string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupEngine(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupEngine (vaultName As String, backupEngineName As String, Optional filter As String = Nothing, Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BackupEngineResource)" />
      <MemberSignature Language="F#" Value="abstract member GetBackupEngine : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupEngineResource&gt;&#xA;override this.GetBackupEngine : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupEngineResource&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupEngine (vaultName, backupEngineName, filter, skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupEngineResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="backupEngineName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="backupEngineName"> Name of the backup management server. </param>
        <param name="filter"> OData filter options. </param>
        <param name="skipToken"> skipToken Filter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns backup management server registered to Recovery Services Vault.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupEngines/{backupEngineName}</description></item><item><term>Operation Id</term><description>BackupEngines_Get</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesBackup.BackupEngineResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> or <paramref name="backupEngineName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> or <paramref name="backupEngineName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupEngineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupEngineResource&gt;&gt; GetBackupEngineAsync (string vaultName, string backupEngineName, string filter = default, string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.BackupEngineResource&gt;&gt; GetBackupEngineAsync(string vaultName, string backupEngineName, string filter, string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupEngineAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupEngineAsync (vaultName As String, backupEngineName As String, Optional filter As String = Nothing, Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BackupEngineResource))" />
      <MemberSignature Language="F#" Value="abstract member GetBackupEngineAsync : string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupEngineResource&gt;&gt;&#xA;override this.GetBackupEngineAsync : string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupEngineResource&gt;&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupEngineAsync (vaultName, backupEngineName, filter, skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupEngineResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="backupEngineName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="backupEngineName"> Name of the backup management server. </param>
        <param name="filter"> OData filter options. </param>
        <param name="skipToken"> skipToken Filter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns backup management server registered to Recovery Services Vault.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupEngines/{backupEngineName}</description></item><item><term>Operation Id</term><description>BackupEngines_Get</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesBackup.BackupEngineResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> or <paramref name="backupEngineName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> or <paramref name="backupEngineName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupEngines">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.RecoveryServicesBackup.BackupEngineCollection GetBackupEngines (string vaultName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.RecoveryServicesBackup.BackupEngineCollection GetBackupEngines(string vaultName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupEngines(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupEngines (vaultName As String) As BackupEngineCollection" />
      <MemberSignature Language="F#" Value="abstract member GetBackupEngines : string -&gt; Azure.ResourceManager.RecoveryServicesBackup.BackupEngineCollection&#xA;override this.GetBackupEngines : string -&gt; Azure.ResourceManager.RecoveryServicesBackup.BackupEngineCollection" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupEngines vaultName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RecoveryServicesBackup.BackupEngineCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <summary> Gets a collection of BackupEngineResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of BackupEngineResources and their operations over a BackupEngineResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupJobResource&gt; GetBackupJob (string vaultName, string jobName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.BackupJobResource&gt; GetBackupJob(string vaultName, string jobName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupJob(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupJob (vaultName As String, jobName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BackupJobResource)" />
      <MemberSignature Language="F#" Value="abstract member GetBackupJob : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupJobResource&gt;&#xA;override this.GetBackupJob : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupJobResource&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupJob (vaultName, jobName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupJobResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="jobName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="jobName"> Name of the job whose details are to be fetched. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets extended information associated with the job.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupJobs/{jobName}</description></item><item><term>Operation Id</term><description>JobDetails_Get</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesBackup.BackupJobResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> or <paramref name="jobName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> or <paramref name="jobName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupJobResource&gt;&gt; GetBackupJobAsync (string vaultName, string jobName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.BackupJobResource&gt;&gt; GetBackupJobAsync(string vaultName, string jobName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupJobAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupJobAsync (vaultName As String, jobName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BackupJobResource))" />
      <MemberSignature Language="F#" Value="abstract member GetBackupJobAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupJobResource&gt;&gt;&#xA;override this.GetBackupJobAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupJobResource&gt;&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupJobAsync (vaultName, jobName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupJobResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="jobName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="jobName"> Name of the job whose details are to be fetched. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets extended information associated with the job.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupJobs/{jobName}</description></item><item><term>Operation Id</term><description>JobDetails_Get</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesBackup.BackupJobResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> or <paramref name="jobName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> or <paramref name="jobName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupJobs">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.RecoveryServicesBackup.BackupJobCollection GetBackupJobs (string vaultName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.RecoveryServicesBackup.BackupJobCollection GetBackupJobs(string vaultName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupJobs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupJobs (vaultName As String) As BackupJobCollection" />
      <MemberSignature Language="F#" Value="abstract member GetBackupJobs : string -&gt; Azure.ResourceManager.RecoveryServicesBackup.BackupJobCollection&#xA;override this.GetBackupJobs : string -&gt; Azure.ResourceManager.RecoveryServicesBackup.BackupJobCollection" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupJobs vaultName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RecoveryServicesBackup.BackupJobCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <summary> Gets a collection of BackupJobResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of BackupJobResources and their operations over a BackupJobResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupPrivateEndpointConnection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupPrivateEndpointConnectionResource&gt; GetBackupPrivateEndpointConnection (string vaultName, string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.BackupPrivateEndpointConnectionResource&gt; GetBackupPrivateEndpointConnection(string vaultName, string privateEndpointConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupPrivateEndpointConnection(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupPrivateEndpointConnection (vaultName As String, privateEndpointConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BackupPrivateEndpointConnectionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetBackupPrivateEndpointConnection : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupPrivateEndpointConnectionResource&gt;&#xA;override this.GetBackupPrivateEndpointConnection : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupPrivateEndpointConnectionResource&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupPrivateEndpointConnection (vaultName, privateEndpointConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupPrivateEndpointConnectionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="privateEndpointConnectionName"> The name of the private endpoint connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get Private Endpoint Connection. This call is made by Backup Admin.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/privateEndpointConnections/{privateEndpointConnectionName}</description></item><item><term>Operation Id</term><description>PrivateEndpointConnection_Get</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesBackup.BackupPrivateEndpointConnectionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> or <paramref name="privateEndpointConnectionName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> or <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupPrivateEndpointConnectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupPrivateEndpointConnectionResource&gt;&gt; GetBackupPrivateEndpointConnectionAsync (string vaultName, string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.BackupPrivateEndpointConnectionResource&gt;&gt; GetBackupPrivateEndpointConnectionAsync(string vaultName, string privateEndpointConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupPrivateEndpointConnectionAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupPrivateEndpointConnectionAsync (vaultName As String, privateEndpointConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BackupPrivateEndpointConnectionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetBackupPrivateEndpointConnectionAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupPrivateEndpointConnectionResource&gt;&gt;&#xA;override this.GetBackupPrivateEndpointConnectionAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupPrivateEndpointConnectionResource&gt;&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupPrivateEndpointConnectionAsync (vaultName, privateEndpointConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupPrivateEndpointConnectionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="privateEndpointConnectionName"> The name of the private endpoint connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get Private Endpoint Connection. This call is made by Backup Admin.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/privateEndpointConnections/{privateEndpointConnectionName}</description></item><item><term>Operation Id</term><description>PrivateEndpointConnection_Get</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesBackup.BackupPrivateEndpointConnectionResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> or <paramref name="privateEndpointConnectionName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> or <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupPrivateEndpointConnections">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.RecoveryServicesBackup.BackupPrivateEndpointConnectionCollection GetBackupPrivateEndpointConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.RecoveryServicesBackup.BackupPrivateEndpointConnectionCollection GetBackupPrivateEndpointConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupPrivateEndpointConnections" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupPrivateEndpointConnections () As BackupPrivateEndpointConnectionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetBackupPrivateEndpointConnections : unit -&gt; Azure.ResourceManager.RecoveryServicesBackup.BackupPrivateEndpointConnectionCollection&#xA;override this.GetBackupPrivateEndpointConnections : unit -&gt; Azure.ResourceManager.RecoveryServicesBackup.BackupPrivateEndpointConnectionCollection" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupPrivateEndpointConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RecoveryServicesBackup.BackupPrivateEndpointConnectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of BackupPrivateEndpointConnectionResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of BackupPrivateEndpointConnectionResources and their operations over a BackupPrivateEndpointConnectionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBackupProtectableItems">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.WorkloadProtectableItemResource&gt; GetBackupProtectableItems (string vaultName, string filter = default, string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.Models.WorkloadProtectableItemResource&gt; GetBackupProtectableItems(string vaultName, string filter, string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectableItems(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupProtectableItems (vaultName As String, Optional filter As String = Nothing, Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of WorkloadProtectableItemResource)" />
      <MemberSignature Language="F#" Value="abstract member GetBackupProtectableItems : string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.WorkloadProtectableItemResource&gt;&#xA;override this.GetBackupProtectableItems : string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.WorkloadProtectableItemResource&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectableItems (vaultName, filter, skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.WorkloadProtectableItemResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="filter"> OData filter options. </param>
        <param name="skipToken"> skipToken Filter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Provides a pageable list of protectable objects within your subscription according to the query filter and the
            pagination parameters.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupProtectableItems</description></item><item><term>Operation Id</term><description>BackupProtectableItems_List</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.RecoveryServicesBackup.Models.WorkloadProtectableItemResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupProtectableItemsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.WorkloadProtectableItemResource&gt; GetBackupProtectableItemsAsync (string vaultName, string filter = default, string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.Models.WorkloadProtectableItemResource&gt; GetBackupProtectableItemsAsync(string vaultName, string filter, string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectableItemsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupProtectableItemsAsync (vaultName As String, Optional filter As String = Nothing, Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of WorkloadProtectableItemResource)" />
      <MemberSignature Language="F#" Value="abstract member GetBackupProtectableItemsAsync : string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.WorkloadProtectableItemResource&gt;&#xA;override this.GetBackupProtectableItemsAsync : string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.WorkloadProtectableItemResource&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectableItemsAsync (vaultName, filter, skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.WorkloadProtectableItemResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="filter"> OData filter options. </param>
        <param name="skipToken"> skipToken Filter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Provides a pageable list of protectable objects within your subscription according to the query filter and the
            pagination parameters.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupProtectableItems</description></item><item><term>Operation Id</term><description>BackupProtectableItems_List</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.RecoveryServicesBackup.Models.WorkloadProtectableItemResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupProtectedItems">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectedItemResource&gt; GetBackupProtectedItems (string vaultName, string filter = default, string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.BackupProtectedItemResource&gt; GetBackupProtectedItems(string vaultName, string filter, string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectedItems(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupProtectedItems (vaultName As String, Optional filter As String = Nothing, Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of BackupProtectedItemResource)" />
      <MemberSignature Language="F#" Value="abstract member GetBackupProtectedItems : string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectedItemResource&gt;&#xA;override this.GetBackupProtectedItems : string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectedItemResource&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectedItems (vaultName, filter, skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectedItemResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="filter"> OData filter options. </param>
        <param name="skipToken"> skipToken Filter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Provides a pageable list of all items that are backed up within a vault.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupProtectedItems</description></item><item><term>Operation Id</term><description>BackupProtectedItems_List</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.RecoveryServicesBackup.BackupProtectedItemResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupProtectedItemsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectedItemResource&gt; GetBackupProtectedItemsAsync (string vaultName, string filter = default, string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.BackupProtectedItemResource&gt; GetBackupProtectedItemsAsync(string vaultName, string filter, string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectedItemsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupProtectedItemsAsync (vaultName As String, Optional filter As String = Nothing, Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of BackupProtectedItemResource)" />
      <MemberSignature Language="F#" Value="abstract member GetBackupProtectedItemsAsync : string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectedItemResource&gt;&#xA;override this.GetBackupProtectedItemsAsync : string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectedItemResource&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectedItemsAsync (vaultName, filter, skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectedItemResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="filter"> OData filter options. </param>
        <param name="skipToken"> skipToken Filter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Provides a pageable list of all items that are backed up within a vault.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupProtectedItems</description></item><item><term>Operation Id</term><description>BackupProtectedItems_List</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.RecoveryServicesBackup.BackupProtectedItemResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupProtectionContainer">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource&gt; GetBackupProtectionContainer (string vaultName, string fabricName, string containerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource&gt; GetBackupProtectionContainer(string vaultName, string fabricName, string containerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectionContainer(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupProtectionContainer (vaultName As String, fabricName As String, containerName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BackupProtectionContainerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetBackupProtectionContainer : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource&gt;&#xA;override this.GetBackupProtectionContainer : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectionContainer (vaultName, fabricName, containerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="fabricName" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="fabricName"> Name of the fabric where the container belongs. </param>
        <param name="containerName"> Name of the container whose details need to be fetched. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets details of the specific container registered to your Recovery Services Vault.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}</description></item><item><term>Operation Id</term><description>ProtectionContainers_Get</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" />, <paramref name="fabricName" /> or <paramref name="containerName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" />, <paramref name="fabricName" /> or <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupProtectionContainerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource&gt;&gt; GetBackupProtectionContainerAsync (string vaultName, string fabricName, string containerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource&gt;&gt; GetBackupProtectionContainerAsync(string vaultName, string fabricName, string containerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectionContainerAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupProtectionContainerAsync (vaultName As String, fabricName As String, containerName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BackupProtectionContainerResource))" />
      <MemberSignature Language="F#" Value="abstract member GetBackupProtectionContainerAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource&gt;&gt;&#xA;override this.GetBackupProtectionContainerAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource&gt;&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectionContainerAsync (vaultName, fabricName, containerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="fabricName" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="fabricName"> Name of the fabric where the container belongs. </param>
        <param name="containerName"> Name of the container whose details need to be fetched. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets details of the specific container registered to your Recovery Services Vault.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}</description></item><item><term>Operation Id</term><description>ProtectionContainers_Get</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" />, <paramref name="fabricName" /> or <paramref name="containerName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" />, <paramref name="fabricName" /> or <paramref name="containerName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupProtectionContainers">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerCollection GetBackupProtectionContainers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerCollection GetBackupProtectionContainers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectionContainers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupProtectionContainers () As BackupProtectionContainerCollection" />
      <MemberSignature Language="F#" Value="abstract member GetBackupProtectionContainers : unit -&gt; Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerCollection&#xA;override this.GetBackupProtectionContainers : unit -&gt; Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerCollection" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectionContainers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of BackupProtectionContainerResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of BackupProtectionContainerResources and their operations over a BackupProtectionContainerResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBackupProtectionContainers">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource&gt; GetBackupProtectionContainers (string vaultName, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource&gt; GetBackupProtectionContainers(string vaultName, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectionContainers(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupProtectionContainers (vaultName As String, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of BackupProtectionContainerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetBackupProtectionContainers : string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource&gt;&#xA;override this.GetBackupProtectionContainers : string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectionContainers (vaultName, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="filter"> OData filter options. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the containers registered to Recovery Services Vault.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupProtectionContainers</description></item><item><term>Operation Id</term><description>BackupProtectionContainers_List</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupProtectionContainersAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource&gt; GetBackupProtectionContainersAsync (string vaultName, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource&gt; GetBackupProtectionContainersAsync(string vaultName, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectionContainersAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupProtectionContainersAsync (vaultName As String, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of BackupProtectionContainerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetBackupProtectionContainersAsync : string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource&gt;&#xA;override this.GetBackupProtectionContainersAsync : string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectionContainersAsync (vaultName, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="filter"> OData filter options. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the containers registered to Recovery Services Vault.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupProtectionContainers</description></item><item><term>Operation Id</term><description>BackupProtectionContainers_List</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupProtectionIntent">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionIntentResource&gt; GetBackupProtectionIntent (string vaultName, string fabricName, string intentObjectName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionIntentResource&gt; GetBackupProtectionIntent(string vaultName, string fabricName, string intentObjectName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectionIntent(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupProtectionIntent (vaultName As String, fabricName As String, intentObjectName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BackupProtectionIntentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetBackupProtectionIntent : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionIntentResource&gt;&#xA;override this.GetBackupProtectionIntent : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionIntentResource&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectionIntent (vaultName, fabricName, intentObjectName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionIntentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="fabricName" Type="System.String" />
        <Parameter Name="intentObjectName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="fabricName"> Fabric name associated with the backed up item. </param>
        <param name="intentObjectName"> Backed up item name whose details are to be fetched. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Provides the details of the protection intent up item. This is an asynchronous operation. To know the status of the operation,
            call the GetItemOperationResult API.
            <list type="bullet"><item><term>Request Path</term><description>/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/backupProtectionIntent/{intentObjectName}</description></item><item><term>Operation Id</term><description>ProtectionIntent_Get</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionIntentResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" />, <paramref name="fabricName" /> or <paramref name="intentObjectName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" />, <paramref name="fabricName" /> or <paramref name="intentObjectName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupProtectionIntentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionIntentResource&gt;&gt; GetBackupProtectionIntentAsync (string vaultName, string fabricName, string intentObjectName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionIntentResource&gt;&gt; GetBackupProtectionIntentAsync(string vaultName, string fabricName, string intentObjectName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectionIntentAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupProtectionIntentAsync (vaultName As String, fabricName As String, intentObjectName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BackupProtectionIntentResource))" />
      <MemberSignature Language="F#" Value="abstract member GetBackupProtectionIntentAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionIntentResource&gt;&gt;&#xA;override this.GetBackupProtectionIntentAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionIntentResource&gt;&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectionIntentAsync (vaultName, fabricName, intentObjectName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionIntentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="fabricName" Type="System.String" />
        <Parameter Name="intentObjectName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="fabricName"> Fabric name associated with the backed up item. </param>
        <param name="intentObjectName"> Backed up item name whose details are to be fetched. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Provides the details of the protection intent up item. This is an asynchronous operation. To know the status of the operation,
            call the GetItemOperationResult API.
            <list type="bullet"><item><term>Request Path</term><description>/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/backupProtectionIntent/{intentObjectName}</description></item><item><term>Operation Id</term><description>ProtectionIntent_Get</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionIntentResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" />, <paramref name="fabricName" /> or <paramref name="intentObjectName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" />, <paramref name="fabricName" /> or <paramref name="intentObjectName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupProtectionIntents">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionIntentCollection GetBackupProtectionIntents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionIntentCollection GetBackupProtectionIntents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectionIntents" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupProtectionIntents () As BackupProtectionIntentCollection" />
      <MemberSignature Language="F#" Value="abstract member GetBackupProtectionIntents : unit -&gt; Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionIntentCollection&#xA;override this.GetBackupProtectionIntents : unit -&gt; Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionIntentCollection" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectionIntents " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionIntentCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of BackupProtectionIntentResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of BackupProtectionIntentResources and their operations over a BackupProtectionIntentResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBackupProtectionIntents">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionIntentResource&gt; GetBackupProtectionIntents (string vaultName, string filter = default, string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionIntentResource&gt; GetBackupProtectionIntents(string vaultName, string filter, string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectionIntents(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupProtectionIntents (vaultName As String, Optional filter As String = Nothing, Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of BackupProtectionIntentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetBackupProtectionIntents : string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionIntentResource&gt;&#xA;override this.GetBackupProtectionIntents : string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionIntentResource&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectionIntents (vaultName, filter, skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionIntentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="filter"> OData filter options. </param>
        <param name="skipToken"> skipToken Filter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Provides a pageable list of all intents that are present within a vault.
            <list type="bullet"><item><term>Request Path</term><description>/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupProtectionIntents</description></item><item><term>Operation Id</term><description>BackupProtectionIntent_List</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionIntentResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupProtectionIntentsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionIntentResource&gt; GetBackupProtectionIntentsAsync (string vaultName, string filter = default, string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionIntentResource&gt; GetBackupProtectionIntentsAsync(string vaultName, string filter, string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectionIntentsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupProtectionIntentsAsync (vaultName As String, Optional filter As String = Nothing, Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of BackupProtectionIntentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetBackupProtectionIntentsAsync : string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionIntentResource&gt;&#xA;override this.GetBackupProtectionIntentsAsync : string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionIntentResource&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectionIntentsAsync (vaultName, filter, skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionIntentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="filter"> OData filter options. </param>
        <param name="skipToken"> skipToken Filter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Provides a pageable list of all intents that are present within a vault.
            <list type="bullet"><item><term>Request Path</term><description>/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupProtectionIntents</description></item><item><term>Operation Id</term><description>BackupProtectionIntent_List</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionIntentResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupProtectionPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionPolicyCollection GetBackupProtectionPolicies (string vaultName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionPolicyCollection GetBackupProtectionPolicies(string vaultName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectionPolicies(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupProtectionPolicies (vaultName As String) As BackupProtectionPolicyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetBackupProtectionPolicies : string -&gt; Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionPolicyCollection&#xA;override this.GetBackupProtectionPolicies : string -&gt; Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionPolicyCollection" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectionPolicies vaultName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionPolicyCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <summary> Gets a collection of BackupProtectionPolicyResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of BackupProtectionPolicyResources and their operations over a BackupProtectionPolicyResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupProtectionPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionPolicyResource&gt; GetBackupProtectionPolicy (string vaultName, string policyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionPolicyResource&gt; GetBackupProtectionPolicy(string vaultName, string policyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectionPolicy(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupProtectionPolicy (vaultName As String, policyName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BackupProtectionPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetBackupProtectionPolicy : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionPolicyResource&gt;&#xA;override this.GetBackupProtectionPolicy : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionPolicyResource&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectionPolicy (vaultName, policyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="policyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="policyName"> Backup policy information to be fetched. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Provides the details of the backup policies associated to Recovery Services Vault. This is an asynchronous
            operation. Status of the operation can be fetched using GetPolicyOperationResult API.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupPolicies/{policyName}</description></item><item><term>Operation Id</term><description>ProtectionPolicies_Get</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionPolicyResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> or <paramref name="policyName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> or <paramref name="policyName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupProtectionPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionPolicyResource&gt;&gt; GetBackupProtectionPolicyAsync (string vaultName, string policyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionPolicyResource&gt;&gt; GetBackupProtectionPolicyAsync(string vaultName, string policyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectionPolicyAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupProtectionPolicyAsync (vaultName As String, policyName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BackupProtectionPolicyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetBackupProtectionPolicyAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionPolicyResource&gt;&gt;&#xA;override this.GetBackupProtectionPolicyAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionPolicyResource&gt;&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupProtectionPolicyAsync (vaultName, policyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionPolicyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="policyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="policyName"> Backup policy information to be fetched. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Provides the details of the backup policies associated to Recovery Services Vault. This is an asynchronous
            operation. Status of the operation can be fetched using GetPolicyOperationResult API.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupPolicies/{policyName}</description></item><item><term>Operation Id</term><description>ProtectionPolicies_Get</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionPolicyResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> or <paramref name="policyName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> or <paramref name="policyName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupResourceConfig">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupResourceConfigResource&gt; GetBackupResourceConfig (string vaultName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.BackupResourceConfigResource&gt; GetBackupResourceConfig(string vaultName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupResourceConfig(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupResourceConfig (vaultName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BackupResourceConfigResource)" />
      <MemberSignature Language="F#" Value="abstract member GetBackupResourceConfig : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupResourceConfigResource&gt;&#xA;override this.GetBackupResourceConfig : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupResourceConfigResource&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupResourceConfig (vaultName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupResourceConfigResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Fetches resource storage config.
            <list type="bullet"><item><term>Request Path</term><description>/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupstorageconfig/vaultstorageconfig</description></item><item><term>Operation Id</term><description>BackupResourceStorageConfigsNonCRR_Get</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesBackup.BackupResourceConfigResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupResourceConfigAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupResourceConfigResource&gt;&gt; GetBackupResourceConfigAsync (string vaultName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.BackupResourceConfigResource&gt;&gt; GetBackupResourceConfigAsync(string vaultName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupResourceConfigAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupResourceConfigAsync (vaultName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BackupResourceConfigResource))" />
      <MemberSignature Language="F#" Value="abstract member GetBackupResourceConfigAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupResourceConfigResource&gt;&gt;&#xA;override this.GetBackupResourceConfigAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupResourceConfigResource&gt;&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupResourceConfigAsync (vaultName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupResourceConfigResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Fetches resource storage config.
            <list type="bullet"><item><term>Request Path</term><description>/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupstorageconfig/vaultstorageconfig</description></item><item><term>Operation Id</term><description>BackupResourceStorageConfigsNonCRR_Get</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesBackup.BackupResourceConfigResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupResourceConfigs">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.RecoveryServicesBackup.BackupResourceConfigCollection GetBackupResourceConfigs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.RecoveryServicesBackup.BackupResourceConfigCollection GetBackupResourceConfigs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupResourceConfigs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupResourceConfigs () As BackupResourceConfigCollection" />
      <MemberSignature Language="F#" Value="abstract member GetBackupResourceConfigs : unit -&gt; Azure.ResourceManager.RecoveryServicesBackup.BackupResourceConfigCollection&#xA;override this.GetBackupResourceConfigs : unit -&gt; Azure.ResourceManager.RecoveryServicesBackup.BackupResourceConfigCollection" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupResourceConfigs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RecoveryServicesBackup.BackupResourceConfigCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of BackupResourceConfigResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of BackupResourceConfigResources and their operations over a BackupResourceConfigResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBackupResourceEncryptionConfigExtended">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupResourceEncryptionConfigExtendedResource&gt; GetBackupResourceEncryptionConfigExtended (string vaultName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.BackupResourceEncryptionConfigExtendedResource&gt; GetBackupResourceEncryptionConfigExtended(string vaultName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupResourceEncryptionConfigExtended(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupResourceEncryptionConfigExtended (vaultName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BackupResourceEncryptionConfigExtendedResource)" />
      <MemberSignature Language="F#" Value="abstract member GetBackupResourceEncryptionConfigExtended : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupResourceEncryptionConfigExtendedResource&gt;&#xA;override this.GetBackupResourceEncryptionConfigExtended : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupResourceEncryptionConfigExtendedResource&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupResourceEncryptionConfigExtended (vaultName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupResourceEncryptionConfigExtendedResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Fetches Vault Encryption config.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupEncryptionConfigs/backupResourceEncryptionConfig</description></item><item><term>Operation Id</term><description>BackupResourceEncryptionConfigs_Get</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesBackup.BackupResourceEncryptionConfigExtendedResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupResourceEncryptionConfigExtendedAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupResourceEncryptionConfigExtendedResource&gt;&gt; GetBackupResourceEncryptionConfigExtendedAsync (string vaultName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.BackupResourceEncryptionConfigExtendedResource&gt;&gt; GetBackupResourceEncryptionConfigExtendedAsync(string vaultName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupResourceEncryptionConfigExtendedAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupResourceEncryptionConfigExtendedAsync (vaultName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BackupResourceEncryptionConfigExtendedResource))" />
      <MemberSignature Language="F#" Value="abstract member GetBackupResourceEncryptionConfigExtendedAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupResourceEncryptionConfigExtendedResource&gt;&gt;&#xA;override this.GetBackupResourceEncryptionConfigExtendedAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupResourceEncryptionConfigExtendedResource&gt;&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupResourceEncryptionConfigExtendedAsync (vaultName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupResourceEncryptionConfigExtendedResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Fetches Vault Encryption config.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupEncryptionConfigs/backupResourceEncryptionConfig</description></item><item><term>Operation Id</term><description>BackupResourceEncryptionConfigs_Get</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesBackup.BackupResourceEncryptionConfigExtendedResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupResourceEncryptionConfigExtendeds">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.RecoveryServicesBackup.BackupResourceEncryptionConfigExtendedCollection GetBackupResourceEncryptionConfigExtendeds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.RecoveryServicesBackup.BackupResourceEncryptionConfigExtendedCollection GetBackupResourceEncryptionConfigExtendeds() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupResourceEncryptionConfigExtendeds" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupResourceEncryptionConfigExtendeds () As BackupResourceEncryptionConfigExtendedCollection" />
      <MemberSignature Language="F#" Value="abstract member GetBackupResourceEncryptionConfigExtendeds : unit -&gt; Azure.ResourceManager.RecoveryServicesBackup.BackupResourceEncryptionConfigExtendedCollection&#xA;override this.GetBackupResourceEncryptionConfigExtendeds : unit -&gt; Azure.ResourceManager.RecoveryServicesBackup.BackupResourceEncryptionConfigExtendedCollection" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupResourceEncryptionConfigExtendeds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RecoveryServicesBackup.BackupResourceEncryptionConfigExtendedCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of BackupResourceEncryptionConfigExtendedResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of BackupResourceEncryptionConfigExtendedResources and their operations over a BackupResourceEncryptionConfigExtendedResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBackupResourceVaultConfig">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupResourceVaultConfigResource&gt; GetBackupResourceVaultConfig (string vaultName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.BackupResourceVaultConfigResource&gt; GetBackupResourceVaultConfig(string vaultName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupResourceVaultConfig(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupResourceVaultConfig (vaultName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BackupResourceVaultConfigResource)" />
      <MemberSignature Language="F#" Value="abstract member GetBackupResourceVaultConfig : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupResourceVaultConfigResource&gt;&#xA;override this.GetBackupResourceVaultConfig : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupResourceVaultConfigResource&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupResourceVaultConfig (vaultName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupResourceVaultConfigResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Fetches resource vault config.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupconfig/vaultconfig</description></item><item><term>Operation Id</term><description>BackupResourceVaultConfigs_Get</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesBackup.BackupResourceVaultConfigResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupResourceVaultConfigAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupResourceVaultConfigResource&gt;&gt; GetBackupResourceVaultConfigAsync (string vaultName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.BackupResourceVaultConfigResource&gt;&gt; GetBackupResourceVaultConfigAsync(string vaultName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupResourceVaultConfigAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupResourceVaultConfigAsync (vaultName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BackupResourceVaultConfigResource))" />
      <MemberSignature Language="F#" Value="abstract member GetBackupResourceVaultConfigAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupResourceVaultConfigResource&gt;&gt;&#xA;override this.GetBackupResourceVaultConfigAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupResourceVaultConfigResource&gt;&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupResourceVaultConfigAsync (vaultName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupResourceVaultConfigResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Fetches resource vault config.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupconfig/vaultconfig</description></item><item><term>Operation Id</term><description>BackupResourceVaultConfigs_Get</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesBackup.BackupResourceVaultConfigResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupResourceVaultConfigs">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.RecoveryServicesBackup.BackupResourceVaultConfigCollection GetBackupResourceVaultConfigs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.RecoveryServicesBackup.BackupResourceVaultConfigCollection GetBackupResourceVaultConfigs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupResourceVaultConfigs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupResourceVaultConfigs () As BackupResourceVaultConfigCollection" />
      <MemberSignature Language="F#" Value="abstract member GetBackupResourceVaultConfigs : unit -&gt; Azure.ResourceManager.RecoveryServicesBackup.BackupResourceVaultConfigCollection&#xA;override this.GetBackupResourceVaultConfigs : unit -&gt; Azure.ResourceManager.RecoveryServicesBackup.BackupResourceVaultConfigCollection" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupResourceVaultConfigs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RecoveryServicesBackup.BackupResourceVaultConfigCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of BackupResourceVaultConfigResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of BackupResourceVaultConfigResources and their operations over a BackupResourceVaultConfigResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBackupUsageSummaries">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.BackupManagementUsage&gt; GetBackupUsageSummaries (string vaultName, string filter = default, string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.Models.BackupManagementUsage&gt; GetBackupUsageSummaries(string vaultName, string filter, string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupUsageSummaries(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupUsageSummaries (vaultName As String, Optional filter As String = Nothing, Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of BackupManagementUsage)" />
      <MemberSignature Language="F#" Value="abstract member GetBackupUsageSummaries : string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.BackupManagementUsage&gt;&#xA;override this.GetBackupUsageSummaries : string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.BackupManagementUsage&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupUsageSummaries (vaultName, filter, skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.BackupManagementUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="filter"> OData filter options. </param>
        <param name="skipToken"> skipToken Filter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Fetches the backup management usage summaries of the vault.
            <list type="bullet"><item><term>Request Path</term><description>/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupUsageSummaries</description></item><item><term>Operation Id</term><description>BackupUsageSummaries_List</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.RecoveryServicesBackup.Models.BackupManagementUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBackupUsageSummariesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.BackupManagementUsage&gt; GetBackupUsageSummariesAsync (string vaultName, string filter = default, string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.Models.BackupManagementUsage&gt; GetBackupUsageSummariesAsync(string vaultName, string filter, string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetBackupUsageSummariesAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBackupUsageSummariesAsync (vaultName As String, Optional filter As String = Nothing, Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of BackupManagementUsage)" />
      <MemberSignature Language="F#" Value="abstract member GetBackupUsageSummariesAsync : string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.BackupManagementUsage&gt;&#xA;override this.GetBackupUsageSummariesAsync : string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.BackupManagementUsage&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetBackupUsageSummariesAsync (vaultName, filter, skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.BackupManagementUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="filter"> OData filter options. </param>
        <param name="skipToken"> skipToken Filter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Fetches the backup management usage summaries of the vault.
            <list type="bullet"><item><term>Request Path</term><description>/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupUsageSummaries</description></item><item><term>Operation Id</term><description>BackupUsageSummaries_List</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.RecoveryServicesBackup.Models.BackupManagementUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGetTieringCostOperationResult">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.TieringCostInfo&gt; GetGetTieringCostOperationResult (string vaultName, string operationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.Models.TieringCostInfo&gt; GetGetTieringCostOperationResult(string vaultName, string operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetGetTieringCostOperationResult(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGetTieringCostOperationResult (vaultName As String, operationId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TieringCostInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetGetTieringCostOperationResult : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.TieringCostInfo&gt;&#xA;override this.GetGetTieringCostOperationResult : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.TieringCostInfo&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetGetTieringCostOperationResult (vaultName, operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.TieringCostInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="operationId"> The <see cref="T:System.String" /> to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the result of async operation for tiering cost
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupTieringCost/default/operationResults/{operationId}</description></item><item><term>Operation Id</term><description>GetTieringCostOperationResult_Get</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> or <paramref name="operationId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> or <paramref name="operationId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGetTieringCostOperationResultAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.TieringCostInfo&gt;&gt; GetGetTieringCostOperationResultAsync (string vaultName, string operationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.Models.TieringCostInfo&gt;&gt; GetGetTieringCostOperationResultAsync(string vaultName, string operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetGetTieringCostOperationResultAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGetTieringCostOperationResultAsync (vaultName As String, operationId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TieringCostInfo))" />
      <MemberSignature Language="F#" Value="abstract member GetGetTieringCostOperationResultAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.TieringCostInfo&gt;&gt;&#xA;override this.GetGetTieringCostOperationResultAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.TieringCostInfo&gt;&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetGetTieringCostOperationResultAsync (vaultName, operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.TieringCostInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="operationId"> The <see cref="T:System.String" /> to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the result of async operation for tiering cost
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupTieringCost/default/operationResults/{operationId}</description></item><item><term>Operation Id</term><description>GetTieringCostOperationResult_Get</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> or <paramref name="operationId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> or <paramref name="operationId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProtectableContainers">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.ProtectableContainerResource&gt; GetProtectableContainers (string vaultName, string fabricName, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.Models.ProtectableContainerResource&gt; GetProtectableContainers(string vaultName, string fabricName, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetProtectableContainers(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProtectableContainers (vaultName As String, fabricName As String, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ProtectableContainerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetProtectableContainers : string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.ProtectableContainerResource&gt;&#xA;override this.GetProtectableContainers : string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.ProtectableContainerResource&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetProtectableContainers (vaultName, fabricName, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.ProtectableContainerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="fabricName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="fabricName"> The <see cref="T:System.String" /> to use. </param>
        <param name="filter"> OData filter options. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the containers that can be registered to Recovery Services Vault.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectableContainers</description></item><item><term>Operation Id</term><description>ProtectableContainers_List</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.RecoveryServicesBackup.Models.ProtectableContainerResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> or <paramref name="fabricName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> or <paramref name="fabricName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProtectableContainersAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.ProtectableContainerResource&gt; GetProtectableContainersAsync (string vaultName, string fabricName, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.Models.ProtectableContainerResource&gt; GetProtectableContainersAsync(string vaultName, string fabricName, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetProtectableContainersAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProtectableContainersAsync (vaultName As String, fabricName As String, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ProtectableContainerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetProtectableContainersAsync : string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.ProtectableContainerResource&gt;&#xA;override this.GetProtectableContainersAsync : string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.ProtectableContainerResource&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetProtectableContainersAsync (vaultName, fabricName, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.ProtectableContainerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="fabricName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="fabricName"> The <see cref="T:System.String" /> to use. </param>
        <param name="filter"> OData filter options. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the containers that can be registered to Recovery Services Vault.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectableContainers</description></item><item><term>Operation Id</term><description>ProtectableContainers_List</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.RecoveryServicesBackup.Models.ProtectableContainerResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> or <paramref name="fabricName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> or <paramref name="fabricName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceGuardProxies">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.RecoveryServicesBackup.ResourceGuardProxyCollection GetResourceGuardProxies (string vaultName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.RecoveryServicesBackup.ResourceGuardProxyCollection GetResourceGuardProxies(string vaultName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetResourceGuardProxies(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceGuardProxies (vaultName As String) As ResourceGuardProxyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetResourceGuardProxies : string -&gt; Azure.ResourceManager.RecoveryServicesBackup.ResourceGuardProxyCollection&#xA;override this.GetResourceGuardProxies : string -&gt; Azure.ResourceManager.RecoveryServicesBackup.ResourceGuardProxyCollection" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetResourceGuardProxies vaultName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RecoveryServicesBackup.ResourceGuardProxyCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <summary> Gets a collection of ResourceGuardProxyResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of ResourceGuardProxyResources and their operations over a ResourceGuardProxyResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceGuardProxy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.ResourceGuardProxyResource&gt; GetResourceGuardProxy (string vaultName, string resourceGuardProxyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.ResourceGuardProxyResource&gt; GetResourceGuardProxy(string vaultName, string resourceGuardProxyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetResourceGuardProxy(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceGuardProxy (vaultName As String, resourceGuardProxyName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ResourceGuardProxyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetResourceGuardProxy : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.ResourceGuardProxyResource&gt;&#xA;override this.GetResourceGuardProxy : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.ResourceGuardProxyResource&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetResourceGuardProxy (vaultName, resourceGuardProxyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.ResourceGuardProxyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="resourceGuardProxyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="resourceGuardProxyName"> The <see cref="T:System.String" /> to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns ResourceGuardProxy under vault and with the name referenced in request
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupResourceGuardProxies/{resourceGuardProxyName}</description></item><item><term>Operation Id</term><description>ResourceGuardProxy_Get</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesBackup.ResourceGuardProxyResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> or <paramref name="resourceGuardProxyName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> or <paramref name="resourceGuardProxyName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceGuardProxyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.ResourceGuardProxyResource&gt;&gt; GetResourceGuardProxyAsync (string vaultName, string resourceGuardProxyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.ResourceGuardProxyResource&gt;&gt; GetResourceGuardProxyAsync(string vaultName, string resourceGuardProxyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetResourceGuardProxyAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceGuardProxyAsync (vaultName As String, resourceGuardProxyName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ResourceGuardProxyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetResourceGuardProxyAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.ResourceGuardProxyResource&gt;&gt;&#xA;override this.GetResourceGuardProxyAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.ResourceGuardProxyResource&gt;&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetResourceGuardProxyAsync (vaultName, resourceGuardProxyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.ResourceGuardProxyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="resourceGuardProxyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="resourceGuardProxyName"> The <see cref="T:System.String" /> to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns ResourceGuardProxy under vault and with the name referenced in request
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupResourceGuardProxies/{resourceGuardProxyName}</description></item><item><term>Operation Id</term><description>ResourceGuardProxy_Get</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesBackup.ResourceGuardProxyResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> or <paramref name="resourceGuardProxyName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> or <paramref name="resourceGuardProxyName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityPin">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.TokenInformation&gt; GetSecurityPin (string vaultName, Azure.ResourceManager.RecoveryServicesBackup.Models.SecurityPinContent content = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.Models.TokenInformation&gt; GetSecurityPin(string vaultName, class Azure.ResourceManager.RecoveryServicesBackup.Models.SecurityPinContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetSecurityPin(System.String,Azure.ResourceManager.RecoveryServicesBackup.Models.SecurityPinContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityPin (vaultName As String, Optional content As SecurityPinContent = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TokenInformation)" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityPin : string * Azure.ResourceManager.RecoveryServicesBackup.Models.SecurityPinContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.TokenInformation&gt;&#xA;override this.GetSecurityPin : string * Azure.ResourceManager.RecoveryServicesBackup.Models.SecurityPinContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.TokenInformation&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetSecurityPin (vaultName, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.TokenInformation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.RecoveryServicesBackup.Models.SecurityPinContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="content"> security pin request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the security PIN.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupSecurityPIN</description></item><item><term>Operation Id</term><description>SecurityPINs_Get</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityPinAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.TokenInformation&gt;&gt; GetSecurityPinAsync (string vaultName, Azure.ResourceManager.RecoveryServicesBackup.Models.SecurityPinContent content = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.Models.TokenInformation&gt;&gt; GetSecurityPinAsync(string vaultName, class Azure.ResourceManager.RecoveryServicesBackup.Models.SecurityPinContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetSecurityPinAsync(System.String,Azure.ResourceManager.RecoveryServicesBackup.Models.SecurityPinContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityPinAsync (vaultName As String, Optional content As SecurityPinContent = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TokenInformation))" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityPinAsync : string * Azure.ResourceManager.RecoveryServicesBackup.Models.SecurityPinContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.TokenInformation&gt;&gt;&#xA;override this.GetSecurityPinAsync : string * Azure.ResourceManager.RecoveryServicesBackup.Models.SecurityPinContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.TokenInformation&gt;&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetSecurityPinAsync (vaultName, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.TokenInformation&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.RecoveryServicesBackup.Models.SecurityPinContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="content"> security pin request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the security PIN.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupSecurityPIN</description></item><item><term>Operation Id</term><description>SecurityPINs_Get</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSoftDeletedProtectionContainers">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource&gt; GetSoftDeletedProtectionContainers (string vaultName, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource&gt; GetSoftDeletedProtectionContainers(string vaultName, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetSoftDeletedProtectionContainers(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSoftDeletedProtectionContainers (vaultName As String, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of BackupProtectionContainerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSoftDeletedProtectionContainers : string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource&gt;&#xA;override this.GetSoftDeletedProtectionContainers : string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetSoftDeletedProtectionContainers (vaultName, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="filter"> OData filter options. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the soft deleted containers registered to Recovery Services Vault.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupDeletedProtectionContainers</description></item><item><term>Operation Id</term><description>DeletedProtectionContainers_List</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSoftDeletedProtectionContainersAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource&gt; GetSoftDeletedProtectionContainersAsync (string vaultName, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource&gt; GetSoftDeletedProtectionContainersAsync(string vaultName, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.GetSoftDeletedProtectionContainersAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSoftDeletedProtectionContainersAsync (vaultName As String, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of BackupProtectionContainerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSoftDeletedProtectionContainersAsync : string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource&gt;&#xA;override this.GetSoftDeletedProtectionContainersAsync : string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.GetSoftDeletedProtectionContainersAsync (vaultName, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="filter"> OData filter options. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the soft deleted containers registered to Recovery Services Vault.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupDeletedProtectionContainers</description></item><item><term>Operation Id</term><description>DeletedProtectionContainers_List</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="PostFetchTieringCost">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.TieringCostInfo&gt; PostFetchTieringCost (Azure.WaitUntil waitUntil, string vaultName, Azure.ResourceManager.RecoveryServicesBackup.Models.FetchTieringCostInfoContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.Models.TieringCostInfo&gt; PostFetchTieringCost(valuetype Azure.WaitUntil waitUntil, string vaultName, class Azure.ResourceManager.RecoveryServicesBackup.Models.FetchTieringCostInfoContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.PostFetchTieringCost(Azure.WaitUntil,System.String,Azure.ResourceManager.RecoveryServicesBackup.Models.FetchTieringCostInfoContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PostFetchTieringCost (waitUntil As WaitUntil, vaultName As String, content As FetchTieringCostInfoContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of TieringCostInfo)" />
      <MemberSignature Language="F#" Value="abstract member PostFetchTieringCost : Azure.WaitUntil * string * Azure.ResourceManager.RecoveryServicesBackup.Models.FetchTieringCostInfoContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.TieringCostInfo&gt;&#xA;override this.PostFetchTieringCost : Azure.WaitUntil * string * Azure.ResourceManager.RecoveryServicesBackup.Models.FetchTieringCostInfoContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.TieringCostInfo&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.PostFetchTieringCost (waitUntil, vaultName, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.TieringCostInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.RecoveryServicesBackup.Models.FetchTieringCostInfoContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="content"> Fetch Tiering Cost Request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Provides the details of the tiering related sizes and cost.
            Status of the operation can be fetched using GetTieringCostOperationStatus API and result using GetTieringCostOperationResult API.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupTieringCost/default/fetchTieringCost</description></item><item><term>Operation Id</term><description>FetchTieringCost_Post</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="PostFetchTieringCostAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.TieringCostInfo&gt;&gt; PostFetchTieringCostAsync (Azure.WaitUntil waitUntil, string vaultName, Azure.ResourceManager.RecoveryServicesBackup.Models.FetchTieringCostInfoContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.RecoveryServicesBackup.Models.TieringCostInfo&gt;&gt; PostFetchTieringCostAsync(valuetype Azure.WaitUntil waitUntil, string vaultName, class Azure.ResourceManager.RecoveryServicesBackup.Models.FetchTieringCostInfoContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.PostFetchTieringCostAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.RecoveryServicesBackup.Models.FetchTieringCostInfoContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PostFetchTieringCostAsync (waitUntil As WaitUntil, vaultName As String, content As FetchTieringCostInfoContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of TieringCostInfo))" />
      <MemberSignature Language="F#" Value="abstract member PostFetchTieringCostAsync : Azure.WaitUntil * string * Azure.ResourceManager.RecoveryServicesBackup.Models.FetchTieringCostInfoContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.TieringCostInfo&gt;&gt;&#xA;override this.PostFetchTieringCostAsync : Azure.WaitUntil * string * Azure.ResourceManager.RecoveryServicesBackup.Models.FetchTieringCostInfoContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.TieringCostInfo&gt;&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.PostFetchTieringCostAsync (waitUntil, vaultName, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesBackup.Models.TieringCostInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.RecoveryServicesBackup.Models.FetchTieringCostInfoContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="content"> Fetch Tiering Cost Request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Provides the details of the tiering related sizes and cost.
            Status of the operation can be fetched using GetTieringCostOperationStatus API and result using GetTieringCostOperationResult API.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupTieringCost/default/fetchTieringCost</description></item><item><term>Operation Id</term><description>FetchTieringCost_Post</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RefreshProtectionContainer">
      <MemberSignature Language="C#" Value="public virtual Azure.Response RefreshProtectionContainer (string vaultName, string fabricName, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response RefreshProtectionContainer(string vaultName, string fabricName, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.RefreshProtectionContainer(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RefreshProtectionContainer (vaultName As String, fabricName As String, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member RefreshProtectionContainer : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.RefreshProtectionContainer : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="mockableRecoveryServicesBackupResourceGroupResource.RefreshProtectionContainer (vaultName, fabricName, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="fabricName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="fabricName"> Fabric name associated the container. </param>
        <param name="filter"> OData filter options. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Discovers all the containers in the subscription that can be backed up to Recovery Services Vault. This is an
            asynchronous operation. To know the status of the operation, call GetRefreshOperationResult API.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/refreshContainers</description></item><item><term>Operation Id</term><description>ProtectionContainers_Refresh</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> or <paramref name="fabricName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> or <paramref name="fabricName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RefreshProtectionContainerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; RefreshProtectionContainerAsync (string vaultName, string fabricName, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; RefreshProtectionContainerAsync(string vaultName, string fabricName, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesBackup.Mocking.MockableRecoveryServicesBackupResourceGroupResource.RefreshProtectionContainerAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RefreshProtectionContainerAsync (vaultName As String, fabricName As String, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member RefreshProtectionContainerAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.RefreshProtectionContainerAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="mockableRecoveryServicesBackupResourceGroupResource.RefreshProtectionContainerAsync (vaultName, fabricName, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesBackup</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="fabricName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the recovery services vault. </param>
        <param name="fabricName"> Fabric name associated the container. </param>
        <param name="filter"> OData filter options. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Discovers all the containers in the subscription that can be backed up to Recovery Services Vault. This is an
            asynchronous operation. To know the status of the operation, call GetRefreshOperationResult API.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/refreshContainers</description></item><item><term>Operation Id</term><description>ProtectionContainers_Refresh</description></item><item><term>Default Api Version</term><description>2023-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.RecoveryServicesBackup.BackupProtectionContainerResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vaultName" /> or <paramref name="fabricName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> or <paramref name="fabricName" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
