<Type Name="AzureBlobFSSource" FullName="Azure.ResourceManager.DataFactory.Models.AzureBlobFSSource">
  <TypeSignature Language="C#" Value="public class AzureBlobFSSource : Azure.ResourceManager.DataFactory.Models.CopyActivitySource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AzureBlobFSSource extends Azure.ResourceManager.DataFactory.Models.CopyActivitySource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataFactory.Models.AzureBlobFSSource" />
  <TypeSignature Language="VB.NET" Value="Public Class AzureBlobFSSource&#xA;Inherits CopyActivitySource" />
  <TypeSignature Language="F#" Value="type AzureBlobFSSource = class&#xA;    inherit CopyActivitySource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.DataFactory.Models.CopyActivitySource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A copy activity Azure BlobFS source. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AzureBlobFSSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.AzureBlobFSSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of AzureBlobFSSource. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Recursive">
      <MemberSignature Language="C#" Value="public Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;bool&gt; Recursive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Expressions.DataFactory.DataFactoryElement`1&lt;bool&gt; Recursive" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AzureBlobFSSource.Recursive" />
      <MemberSignature Language="VB.NET" Value="Public Property Recursive As DataFactoryElement(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.Recursive : Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AzureBlobFSSource.Recursive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipHeaderLineCount">
      <MemberSignature Language="C#" Value="public Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;int&gt; SkipHeaderLineCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Expressions.DataFactory.DataFactoryElement`1&lt;int32&gt; SkipHeaderLineCount" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AzureBlobFSSource.SkipHeaderLineCount" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipHeaderLineCount As DataFactoryElement(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.SkipHeaderLineCount : Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;int&gt; with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AzureBlobFSSource.SkipHeaderLineCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Number of header lines to skip from each blob. Type: integer (or Expression with resultType integer). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TreatEmptyAsNull">
      <MemberSignature Language="C#" Value="public Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;bool&gt; TreatEmptyAsNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Expressions.DataFactory.DataFactoryElement`1&lt;bool&gt; TreatEmptyAsNull" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AzureBlobFSSource.TreatEmptyAsNull" />
      <MemberSignature Language="VB.NET" Value="Public Property TreatEmptyAsNull As DataFactoryElement(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.TreatEmptyAsNull : Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AzureBlobFSSource.TreatEmptyAsNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Treat empty as null. Type: boolean (or Expression with resultType boolean). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
