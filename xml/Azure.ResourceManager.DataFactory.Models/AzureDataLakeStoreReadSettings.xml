<Type Name="AzureDataLakeStoreReadSettings" FullName="Azure.ResourceManager.DataFactory.Models.AzureDataLakeStoreReadSettings">
  <TypeSignature Language="C#" Value="public class AzureDataLakeStoreReadSettings : Azure.ResourceManager.DataFactory.Models.StoreReadSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AzureDataLakeStoreReadSettings extends Azure.ResourceManager.DataFactory.Models.StoreReadSettings" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataFactory.Models.AzureDataLakeStoreReadSettings" />
  <TypeSignature Language="VB.NET" Value="Public Class AzureDataLakeStoreReadSettings&#xA;Inherits StoreReadSettings" />
  <TypeSignature Language="F#" Value="type AzureDataLakeStoreReadSettings = class&#xA;    inherit StoreReadSettings" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.DataFactory.Models.StoreReadSettings</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Azure data lake store read settings. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AzureDataLakeStoreReadSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.AzureDataLakeStoreReadSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of AzureDataLakeStoreReadSettings. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteFilesAfterCompletion">
      <MemberSignature Language="C#" Value="public BinaryData DeleteFilesAfterCompletion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData DeleteFilesAfterCompletion" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AzureDataLakeStoreReadSettings.DeleteFilesAfterCompletion" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteFilesAfterCompletion As BinaryData" />
      <MemberSignature Language="F#" Value="member this.DeleteFilesAfterCompletion : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AzureDataLakeStoreReadSettings.DeleteFilesAfterCompletion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePartitionDiscovery">
      <MemberSignature Language="C#" Value="public bool? EnablePartitionDiscovery { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; EnablePartitionDiscovery" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AzureDataLakeStoreReadSettings.EnablePartitionDiscovery" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePartitionDiscovery As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.EnablePartitionDiscovery : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AzureDataLakeStoreReadSettings.EnablePartitionDiscovery" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Indicates whether to enable partition discovery. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileListPath">
      <MemberSignature Language="C#" Value="public BinaryData FileListPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData FileListPath" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AzureDataLakeStoreReadSettings.FileListPath" />
      <MemberSignature Language="VB.NET" Value="Public Property FileListPath As BinaryData" />
      <MemberSignature Language="F#" Value="member this.FileListPath : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AzureDataLakeStoreReadSettings.FileListPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAfter">
      <MemberSignature Language="C#" Value="public BinaryData ListAfter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData ListAfter" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AzureDataLakeStoreReadSettings.ListAfter" />
      <MemberSignature Language="VB.NET" Value="Public Property ListAfter As BinaryData" />
      <MemberSignature Language="F#" Value="member this.ListAfter : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AzureDataLakeStoreReadSettings.ListAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Lists files after the value (exclusive) based on file/folder namesâ€™ lexicographical order. Applies under the folderPath in data set, and filter files/sub-folders under the folderPath. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListBefore">
      <MemberSignature Language="C#" Value="public BinaryData ListBefore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData ListBefore" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AzureDataLakeStoreReadSettings.ListBefore" />
      <MemberSignature Language="VB.NET" Value="Public Property ListBefore As BinaryData" />
      <MemberSignature Language="F#" Value="member this.ListBefore : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AzureDataLakeStoreReadSettings.ListBefore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Lists files before the value (inclusive) based on file/folder namesâ€™ lexicographical order. Applies under the folderPath in data set, and filter files/sub-folders under the folderPath. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifiedDatetimeEnd">
      <MemberSignature Language="C#" Value="public BinaryData ModifiedDatetimeEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData ModifiedDatetimeEnd" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AzureDataLakeStoreReadSettings.ModifiedDatetimeEnd" />
      <MemberSignature Language="VB.NET" Value="Public Property ModifiedDatetimeEnd As BinaryData" />
      <MemberSignature Language="F#" Value="member this.ModifiedDatetimeEnd : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AzureDataLakeStoreReadSettings.ModifiedDatetimeEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The end of file's modified datetime. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifiedDatetimeStart">
      <MemberSignature Language="C#" Value="public BinaryData ModifiedDatetimeStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData ModifiedDatetimeStart" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AzureDataLakeStoreReadSettings.ModifiedDatetimeStart" />
      <MemberSignature Language="VB.NET" Value="Public Property ModifiedDatetimeStart As BinaryData" />
      <MemberSignature Language="F#" Value="member this.ModifiedDatetimeStart : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AzureDataLakeStoreReadSettings.ModifiedDatetimeStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The start of file's modified datetime. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartitionRootPath">
      <MemberSignature Language="C#" Value="public BinaryData PartitionRootPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData PartitionRootPath" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AzureDataLakeStoreReadSettings.PartitionRootPath" />
      <MemberSignature Language="VB.NET" Value="Public Property PartitionRootPath As BinaryData" />
      <MemberSignature Language="F#" Value="member this.PartitionRootPath : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AzureDataLakeStoreReadSettings.PartitionRootPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Recursive">
      <MemberSignature Language="C#" Value="public BinaryData Recursive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData Recursive" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AzureDataLakeStoreReadSettings.Recursive" />
      <MemberSignature Language="VB.NET" Value="Public Property Recursive As BinaryData" />
      <MemberSignature Language="F#" Value="member this.Recursive : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AzureDataLakeStoreReadSettings.Recursive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WildcardFileName">
      <MemberSignature Language="C#" Value="public BinaryData WildcardFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData WildcardFileName" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AzureDataLakeStoreReadSettings.WildcardFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property WildcardFileName As BinaryData" />
      <MemberSignature Language="F#" Value="member this.WildcardFileName : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AzureDataLakeStoreReadSettings.WildcardFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            ADLS wildcardFileName. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WildcardFolderPath">
      <MemberSignature Language="C#" Value="public BinaryData WildcardFolderPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData WildcardFolderPath" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AzureDataLakeStoreReadSettings.WildcardFolderPath" />
      <MemberSignature Language="VB.NET" Value="Public Property WildcardFolderPath As BinaryData" />
      <MemberSignature Language="F#" Value="member this.WildcardFolderPath : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AzureDataLakeStoreReadSettings.WildcardFolderPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            ADLS wildcardFolderPath. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
