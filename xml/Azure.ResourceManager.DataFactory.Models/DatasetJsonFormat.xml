<Type Name="DatasetJsonFormat" FullName="Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat">
  <TypeSignature Language="C#" Value="public class DatasetJsonFormat : Azure.ResourceManager.DataFactory.Models.DatasetStorageFormat, System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DatasetJsonFormat extends Azure.ResourceManager.DataFactory.Models.DatasetStorageFormat implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat" />
  <TypeSignature Language="VB.NET" Value="Public Class DatasetJsonFormat&#xA;Inherits DatasetStorageFormat&#xA;Implements IJsonModel(Of DatasetJsonFormat), IPersistableModel(Of DatasetJsonFormat)" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type DatasetJsonFormat = class&#xA;    inherit DatasetStorageFormat&#xA;    interface IJsonModel&lt;DatasetJsonFormat&gt;&#xA;    interface IPersistableModel&lt;DatasetJsonFormat&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public class DatasetJsonFormat : Azure.ResourceManager.DataFactory.Models.DatasetStorageFormat" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DatasetJsonFormat extends Azure.ResourceManager.DataFactory.Models.DatasetStorageFormat" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public Class DatasetJsonFormat&#xA;Inherits DatasetStorageFormat" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type DatasetJsonFormat = class&#xA;    inherit DatasetStorageFormat" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.DataFactory.Models.DatasetStorageFormat</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> The data stored in JSON format. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DatasetJsonFormat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat" />. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodingName">
      <MemberSignature Language="C#" Value="public Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;string&gt; EncodingName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Expressions.DataFactory.DataFactoryElement`1&lt;string&gt; EncodingName" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat.EncodingName" />
      <MemberSignature Language="VB.NET" Value="Public Property EncodingName As DataFactoryElement(Of String)" />
      <MemberSignature Language="F#" Value="member this.EncodingName : Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;string&gt; with get, set" Usage="Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat.EncodingName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The code page name of the preferred encoding. If not provided, the default value is 'utf-8', unless the byte order mark (BOM) denotes another Unicode encoding. The full list of supported values can be found in the 'Name' column of the table of encodings in the following reference: https://go.microsoft.com/fwlink/?linkid=861078. Type: string (or Expression with resultType string). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePattern">
      <MemberSignature Language="C#" Value="public BinaryData FilePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData FilePattern" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat.FilePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property FilePattern As BinaryData" />
      <MemberSignature Language="F#" Value="member this.FilePattern : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat.FilePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            File pattern of JSON. To be more specific, the way of separating a collection of JSON objects. The default value is 'setOfObjects'. It is case-sensitive.
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JsonNodeReference">
      <MemberSignature Language="C#" Value="public Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;string&gt; JsonNodeReference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Expressions.DataFactory.DataFactoryElement`1&lt;string&gt; JsonNodeReference" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat.JsonNodeReference" />
      <MemberSignature Language="VB.NET" Value="Public Property JsonNodeReference As DataFactoryElement(Of String)" />
      <MemberSignature Language="F#" Value="member this.JsonNodeReference : Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;string&gt; with get, set" Usage="Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat.JsonNodeReference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The JSONPath of the JSON array element to be flattened. Example: "$.ArrayPath". Type: string (or Expression with resultType string). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JsonPathDefinition">
      <MemberSignature Language="C#" Value="public BinaryData JsonPathDefinition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData JsonPathDefinition" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat.JsonPathDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Property JsonPathDefinition As BinaryData" />
      <MemberSignature Language="F#" Value="member this.JsonPathDefinition : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat.JsonPathDefinition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The JSONPath definition for each column mapping with a customized column name to extract data from JSON file. For fields under root object, start with "$"; for fields inside the array chosen by jsonNodeReference property, start from the array element. Example: {"Column1": "$.Column1Path", "Column2": "Column2PathInArray"}. Type: object (or Expression with resultType object).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NestingSeparator">
      <MemberSignature Language="C#" Value="public Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;string&gt; NestingSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Expressions.DataFactory.DataFactoryElement`1&lt;string&gt; NestingSeparator" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat.NestingSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property NestingSeparator As DataFactoryElement(Of String)" />
      <MemberSignature Language="F#" Value="member this.NestingSeparator : Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;string&gt; with get, set" Usage="Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat.NestingSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The character used to separate nesting levels. Default value is '.' (dot). Type: string (or Expression with resultType string). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat IJsonModel&lt;DatasetJsonFormat&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#DataFactory#Models#DatasetJsonFormat&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As DatasetJsonFormat Implements IJsonModel(Of DatasetJsonFormat).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat" Usage="datasetJsonFormat.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;DatasetJsonFormat&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#DataFactory#Models#DatasetJsonFormat&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of DatasetJsonFormat).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="datasetJsonFormat.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat IPersistableModel&lt;DatasetJsonFormat&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#DataFactory#Models#DatasetJsonFormat&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As DatasetJsonFormat Implements IPersistableModel(Of DatasetJsonFormat).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat" Usage="datasetJsonFormat.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;DatasetJsonFormat&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#DataFactory#Models#DatasetJsonFormat&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of DatasetJsonFormat).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="datasetJsonFormat.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;DatasetJsonFormat&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#DataFactory#Models#DatasetJsonFormat&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of DatasetJsonFormat).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="datasetJsonFormat.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
