<Type Name="FactoryRepoConfiguration" FullName="Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration">
  <TypeSignature Language="C#" Value="public abstract class FactoryRepoConfiguration : System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FactoryRepoConfiguration extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FactoryRepoConfiguration&#xA;Implements IJsonModel(Of FactoryRepoConfiguration), IPersistableModel(Of FactoryRepoConfiguration)" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type FactoryRepoConfiguration = class&#xA;    interface IJsonModel&lt;FactoryRepoConfiguration&gt;&#xA;    interface IPersistableModel&lt;FactoryRepoConfiguration&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public abstract class FactoryRepoConfiguration" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FactoryRepoConfiguration extends System.Object" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FactoryRepoConfiguration" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type FactoryRepoConfiguration = class" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="azure-dotnet">
      <AttributeName Language="C#">[System.ClientModel.Primitives.PersistableModelProxy(typeof(Azure.ResourceManager.DataFactory.Models.UnknownFactoryRepoConfiguration))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ClientModel.Primitives.PersistableModelProxy(typeof(Azure.ResourceManager.DataFactory.Models.UnknownFactoryRepoConfiguration))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Factory's git repo information.
            Please note <see cref="T:Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.DataFactory.Models.FactoryGitHubConfiguration" /> and <see cref="T:Azure.ResourceManager.DataFactory.Models.FactoryVstsConfiguration" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FactoryRepoConfiguration (string accountName, string repositoryName, string collaborationBranch, string rootFolder);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string accountName, string repositoryName, string collaborationBranch, string rootFolder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration.#ctor(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (accountName As String, repositoryName As String, collaborationBranch As String, rootFolder As String)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration : string * string * string * string -&gt; Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration" Usage="new Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration (accountName, repositoryName, collaborationBranch, rootFolder)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="repositoryName" Type="System.String" />
        <Parameter Name="collaborationBranch" Type="System.String" />
        <Parameter Name="rootFolder" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="accountName"> Account name. </param>
        <param name="repositoryName"> Repository name. </param>
        <param name="collaborationBranch"> Collaboration branch. </param>
        <param name="rootFolder"> Root folder. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="accountName" />, <paramref name="repositoryName" />, <paramref name="collaborationBranch" /> or <paramref name="rootFolder" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AccountName">
      <MemberSignature Language="C#" Value="public string AccountName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccountName" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration.AccountName" />
      <MemberSignature Language="VB.NET" Value="Public Property AccountName As String" />
      <MemberSignature Language="F#" Value="member this.AccountName : string with get, set" Usage="Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration.AccountName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Account name. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollaborationBranch">
      <MemberSignature Language="C#" Value="public string CollaborationBranch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CollaborationBranch" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration.CollaborationBranch" />
      <MemberSignature Language="VB.NET" Value="Public Property CollaborationBranch As String" />
      <MemberSignature Language="F#" Value="member this.CollaborationBranch : string with get, set" Usage="Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration.CollaborationBranch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Collaboration branch. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisablePublish">
      <MemberSignature Language="C#" Value="public bool? DisablePublish { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; DisablePublish" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration.DisablePublish" />
      <MemberSignature Language="VB.NET" Value="Public Property DisablePublish As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.DisablePublish : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration.DisablePublish" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Disable manual publish operation in ADF studio to favor automated publish. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastCommitId">
      <MemberSignature Language="C#" Value="public string LastCommitId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LastCommitId" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration.LastCommitId" />
      <MemberSignature Language="VB.NET" Value="Public Property LastCommitId As String" />
      <MemberSignature Language="F#" Value="member this.LastCommitId : string with get, set" Usage="Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration.LastCommitId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Last commit id. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RepositoryName">
      <MemberSignature Language="C#" Value="public string RepositoryName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RepositoryName" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration.RepositoryName" />
      <MemberSignature Language="VB.NET" Value="Public Property RepositoryName As String" />
      <MemberSignature Language="F#" Value="member this.RepositoryName : string with get, set" Usage="Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration.RepositoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Repository name. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootFolder">
      <MemberSignature Language="C#" Value="public string RootFolder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootFolder" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration.RootFolder" />
      <MemberSignature Language="VB.NET" Value="Public Property RootFolder As String" />
      <MemberSignature Language="F#" Value="member this.RootFolder : string with get, set" Usage="Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration.RootFolder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Root folder. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration IJsonModel&lt;FactoryRepoConfiguration&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#DataFactory#Models#FactoryRepoConfiguration&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As FactoryRepoConfiguration Implements IJsonModel(Of FactoryRepoConfiguration).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration" Usage="factoryRepoConfiguration.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;FactoryRepoConfiguration&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#DataFactory#Models#FactoryRepoConfiguration&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of FactoryRepoConfiguration).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="factoryRepoConfiguration.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration IPersistableModel&lt;FactoryRepoConfiguration&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#DataFactory#Models#FactoryRepoConfiguration&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As FactoryRepoConfiguration Implements IPersistableModel(Of FactoryRepoConfiguration).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration" Usage="factoryRepoConfiguration.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;FactoryRepoConfiguration&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#DataFactory#Models#FactoryRepoConfiguration&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of FactoryRepoConfiguration).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="factoryRepoConfiguration.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;FactoryRepoConfiguration&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#DataFactory#Models#FactoryRepoConfiguration&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of FactoryRepoConfiguration).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="factoryRepoConfiguration.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.FactoryRepoConfiguration&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
