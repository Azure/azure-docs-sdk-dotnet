<Type Name="SapOdpSource" FullName="Azure.ResourceManager.DataFactory.Models.SapOdpSource">
  <TypeSignature Language="C#" Value="public class SapOdpSource : Azure.ResourceManager.DataFactory.Models.TabularSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SapOdpSource extends Azure.ResourceManager.DataFactory.Models.TabularSource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataFactory.Models.SapOdpSource" />
  <TypeSignature Language="VB.NET" Value="Public Class SapOdpSource&#xA;Inherits TabularSource" />
  <TypeSignature Language="F#" Value="type SapOdpSource = class&#xA;    inherit TabularSource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.DataFactory.Models.TabularSource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A copy activity source for SAP ODP source. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SapOdpSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.SapOdpSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of SapOdpSource. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractionMode">
      <MemberSignature Language="C#" Value="public BinaryData ExtractionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData ExtractionMode" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SapOdpSource.ExtractionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtractionMode As BinaryData" />
      <MemberSignature Language="F#" Value="member this.ExtractionMode : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SapOdpSource.ExtractionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The extraction mode. Allowed value include: Full, Delta and Recovery. The default value is Full. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Projection">
      <MemberSignature Language="C#" Value="public BinaryData Projection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData Projection" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SapOdpSource.Projection" />
      <MemberSignature Language="VB.NET" Value="Public Property Projection As BinaryData" />
      <MemberSignature Language="F#" Value="member this.Projection : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SapOdpSource.Projection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specifies the columns to be selected from source data. Type: array of objects(projection) (or Expression with resultType array of objects).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Selection">
      <MemberSignature Language="C#" Value="public BinaryData Selection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData Selection" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SapOdpSource.Selection" />
      <MemberSignature Language="VB.NET" Value="Public Property Selection As BinaryData" />
      <MemberSignature Language="F#" Value="member this.Selection : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SapOdpSource.Selection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specifies the selection conditions from source data. Type: array of objects(selection) (or Expression with resultType array of objects).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubscriberProcess">
      <MemberSignature Language="C#" Value="public BinaryData SubscriberProcess { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData SubscriberProcess" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SapOdpSource.SubscriberProcess" />
      <MemberSignature Language="VB.NET" Value="Public Property SubscriberProcess As BinaryData" />
      <MemberSignature Language="F#" Value="member this.SubscriberProcess : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SapOdpSource.SubscriberProcess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The subscriber process to manage the delta process. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
