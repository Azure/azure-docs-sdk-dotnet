<Type Name="DatabricksNotebookActivity" FullName="Azure.ResourceManager.DataFactory.Models.DatabricksNotebookActivity">
  <TypeSignature Language="C#" Value="public class DatabricksNotebookActivity : Azure.ResourceManager.DataFactory.Models.ExecutionActivity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DatabricksNotebookActivity extends Azure.ResourceManager.DataFactory.Models.ExecutionActivity" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataFactory.Models.DatabricksNotebookActivity" />
  <TypeSignature Language="VB.NET" Value="Public Class DatabricksNotebookActivity&#xA;Inherits ExecutionActivity" />
  <TypeSignature Language="F#" Value="type DatabricksNotebookActivity = class&#xA;    inherit ExecutionActivity" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.DataFactory.Models.ExecutionActivity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> DatabricksNotebook activity. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DatabricksNotebookActivity (string name, BinaryData notebookPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.BinaryData notebookPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.DatabricksNotebookActivity.#ctor(System.String,System.BinaryData)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, notebookPath As BinaryData)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.DataFactory.Models.DatabricksNotebookActivity : string * BinaryData -&gt; Azure.ResourceManager.DataFactory.Models.DatabricksNotebookActivity" Usage="new Azure.ResourceManager.DataFactory.Models.DatabricksNotebookActivity (name, notebookPath)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="notebookPath" Type="System.BinaryData" />
      </Parameters>
      <Docs>
        <param name="name"> Activity name. </param>
        <param name="notebookPath"> The absolute path of the notebook to be run in the Databricks Workspace. This path must begin with a slash. Type: string (or Expression with resultType string). </param>
        <summary> Initializes a new instance of DatabricksNotebookActivity. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> or <paramref name="notebookPath" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseParameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,BinaryData&gt; BaseParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class System.BinaryData&gt; BaseParameters" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.DatabricksNotebookActivity.BaseParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseParameters As IDictionary(Of String, BinaryData)" />
      <MemberSignature Language="F#" Value="member this.BaseParameters : System.Collections.Generic.IDictionary&lt;string, BinaryData&gt;" Usage="Azure.ResourceManager.DataFactory.Models.DatabricksNotebookActivity.BaseParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Base parameters to be used for each run of this job.If the notebook takes a parameter that is not specified, the default value from the notebook will be used. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Libraries">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Collections.Generic.IDictionary&lt;string,BinaryData&gt;&gt; Libraries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Collections.Generic.IDictionary`2&lt;string, class System.BinaryData&gt;&gt; Libraries" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.DatabricksNotebookActivity.Libraries" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Libraries As IList(Of IDictionary(Of String, BinaryData))" />
      <MemberSignature Language="F#" Value="member this.Libraries : System.Collections.Generic.IList&lt;System.Collections.Generic.IDictionary&lt;string, BinaryData&gt;&gt;" Usage="Azure.ResourceManager.DataFactory.Models.DatabricksNotebookActivity.Libraries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Collections.Generic.IDictionary&lt;System.String,System.BinaryData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A list of libraries to be installed on the cluster that will execute the job. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotebookPath">
      <MemberSignature Language="C#" Value="public BinaryData NotebookPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData NotebookPath" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.DatabricksNotebookActivity.NotebookPath" />
      <MemberSignature Language="VB.NET" Value="Public Property NotebookPath As BinaryData" />
      <MemberSignature Language="F#" Value="member this.NotebookPath : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.DatabricksNotebookActivity.NotebookPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The absolute path of the notebook to be run in the Databricks Workspace. This path must begin with a slash. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
