<Type Name="AzureMLExecutePipelineActivity" FullName="Azure.ResourceManager.DataFactory.Models.AzureMLExecutePipelineActivity">
  <TypeSignature Language="C#" Value="public class AzureMLExecutePipelineActivity : Azure.ResourceManager.DataFactory.Models.ExecutionActivity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AzureMLExecutePipelineActivity extends Azure.ResourceManager.DataFactory.Models.ExecutionActivity" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataFactory.Models.AzureMLExecutePipelineActivity" />
  <TypeSignature Language="VB.NET" Value="Public Class AzureMLExecutePipelineActivity&#xA;Inherits ExecutionActivity" />
  <TypeSignature Language="F#" Value="type AzureMLExecutePipelineActivity = class&#xA;    inherit ExecutionActivity" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.DataFactory.Models.ExecutionActivity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Azure ML Execute Pipeline activity. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AzureMLExecutePipelineActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.AzureMLExecutePipelineActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.DataFactory.Models.AzureMLExecutePipelineActivity : string -&gt; Azure.ResourceManager.DataFactory.Models.AzureMLExecutePipelineActivity" Usage="new Azure.ResourceManager.DataFactory.Models.AzureMLExecutePipelineActivity name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"> Activity name. </param>
        <summary> Initializes a new instance of AzureMLExecutePipelineActivity. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueOnStepFailure">
      <MemberSignature Language="C#" Value="public BinaryData ContinueOnStepFailure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData ContinueOnStepFailure" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AzureMLExecutePipelineActivity.ContinueOnStepFailure" />
      <MemberSignature Language="VB.NET" Value="Public Property ContinueOnStepFailure As BinaryData" />
      <MemberSignature Language="F#" Value="member this.ContinueOnStepFailure : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AzureMLExecutePipelineActivity.ContinueOnStepFailure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether to continue execution of other steps in the PipelineRun if a step fails. This information will be passed in the continueOnStepFailure property of the published pipeline execution request. Type: boolean (or Expression with resultType boolean).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataPathAssignments">
      <MemberSignature Language="C#" Value="public BinaryData DataPathAssignments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData DataPathAssignments" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AzureMLExecutePipelineActivity.DataPathAssignments" />
      <MemberSignature Language="VB.NET" Value="Public Property DataPathAssignments As BinaryData" />
      <MemberSignature Language="F#" Value="member this.DataPathAssignments : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AzureMLExecutePipelineActivity.DataPathAssignments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Dictionary used for changing data path assignments without retraining. Values will be passed in the dataPathAssignments property of the published pipeline execution request. Type: object with key value pairs (or Expression with resultType object).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExperimentName">
      <MemberSignature Language="C#" Value="public BinaryData ExperimentName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData ExperimentName" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AzureMLExecutePipelineActivity.ExperimentName" />
      <MemberSignature Language="VB.NET" Value="Public Property ExperimentName As BinaryData" />
      <MemberSignature Language="F#" Value="member this.ExperimentName : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AzureMLExecutePipelineActivity.ExperimentName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Run history experiment name of the pipeline run. This information will be passed in the ExperimentName property of the published pipeline execution request. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MlParentRunId">
      <MemberSignature Language="C#" Value="public BinaryData MlParentRunId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData MlParentRunId" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AzureMLExecutePipelineActivity.MlParentRunId" />
      <MemberSignature Language="VB.NET" Value="Public Property MlParentRunId As BinaryData" />
      <MemberSignature Language="F#" Value="member this.MlParentRunId : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AzureMLExecutePipelineActivity.MlParentRunId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The parent Azure ML Service pipeline run id. This information will be passed in the ParentRunId property of the published pipeline execution request. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MlPipelineEndpointId">
      <MemberSignature Language="C#" Value="public BinaryData MlPipelineEndpointId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData MlPipelineEndpointId" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AzureMLExecutePipelineActivity.MlPipelineEndpointId" />
      <MemberSignature Language="VB.NET" Value="Public Property MlPipelineEndpointId As BinaryData" />
      <MemberSignature Language="F#" Value="member this.MlPipelineEndpointId : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AzureMLExecutePipelineActivity.MlPipelineEndpointId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            ID of the published Azure ML pipeline endpoint. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MlPipelineId">
      <MemberSignature Language="C#" Value="public BinaryData MlPipelineId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData MlPipelineId" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AzureMLExecutePipelineActivity.MlPipelineId" />
      <MemberSignature Language="VB.NET" Value="Public Property MlPipelineId As BinaryData" />
      <MemberSignature Language="F#" Value="member this.MlPipelineId : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AzureMLExecutePipelineActivity.MlPipelineId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            ID of the published Azure ML pipeline. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MlPipelineParameters">
      <MemberSignature Language="C#" Value="public BinaryData MlPipelineParameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData MlPipelineParameters" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AzureMLExecutePipelineActivity.MlPipelineParameters" />
      <MemberSignature Language="VB.NET" Value="Public Property MlPipelineParameters As BinaryData" />
      <MemberSignature Language="F#" Value="member this.MlPipelineParameters : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AzureMLExecutePipelineActivity.MlPipelineParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Key,Value pairs to be passed to the published Azure ML pipeline endpoint. Keys must match the names of pipeline parameters defined in the published pipeline. Values will be passed in the ParameterAssignments property of the published pipeline execution request. Type: object with key value pairs (or Expression with resultType object).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public BinaryData Version { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData Version" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AzureMLExecutePipelineActivity.Version" />
      <MemberSignature Language="VB.NET" Value="Public Property Version As BinaryData" />
      <MemberSignature Language="F#" Value="member this.Version : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AzureMLExecutePipelineActivity.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Version of the published Azure ML pipeline endpoint. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
