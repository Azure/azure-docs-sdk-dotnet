<Type Name="ForEachActivity" FullName="Azure.ResourceManager.DataFactory.Models.ForEachActivity">
  <TypeSignature Language="C#" Value="public class ForEachActivity : Azure.ResourceManager.DataFactory.Models.ControlActivity, System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ForEachActivity extends Azure.ResourceManager.DataFactory.Models.ControlActivity implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataFactory.Models.ForEachActivity" />
  <TypeSignature Language="VB.NET" Value="Public Class ForEachActivity&#xA;Inherits ControlActivity&#xA;Implements IJsonModel(Of ForEachActivity), IPersistableModel(Of ForEachActivity)" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type ForEachActivity = class&#xA;    inherit ControlActivity&#xA;    interface IJsonModel&lt;ForEachActivity&gt;&#xA;    interface IPersistableModel&lt;ForEachActivity&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public class ForEachActivity : Azure.ResourceManager.DataFactory.Models.ControlActivity" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ForEachActivity extends Azure.ResourceManager.DataFactory.Models.ControlActivity" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public Class ForEachActivity&#xA;Inherits ControlActivity" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type ForEachActivity = class&#xA;    inherit ControlActivity" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.DataFactory.Models.ControlActivity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> This activity is used for iterating over a collection and execute given activities. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ForEachActivity (string name, Azure.ResourceManager.DataFactory.Models.DataFactoryExpression items, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DataFactory.Models.PipelineActivity&gt; activities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class Azure.ResourceManager.DataFactory.Models.DataFactoryExpression items, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.DataFactory.Models.PipelineActivity&gt; activities) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.ForEachActivity.#ctor(System.String,Azure.ResourceManager.DataFactory.Models.DataFactoryExpression,System.Collections.Generic.IEnumerable{Azure.ResourceManager.DataFactory.Models.PipelineActivity})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, items As DataFactoryExpression, activities As IEnumerable(Of PipelineActivity))" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.DataFactory.Models.ForEachActivity : string * Azure.ResourceManager.DataFactory.Models.DataFactoryExpression * seq&lt;Azure.ResourceManager.DataFactory.Models.PipelineActivity&gt; -&gt; Azure.ResourceManager.DataFactory.Models.ForEachActivity" Usage="new Azure.ResourceManager.DataFactory.Models.ForEachActivity (name, items, activities)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="items" Type="Azure.ResourceManager.DataFactory.Models.DataFactoryExpression" />
        <Parameter Name="activities" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DataFactory.Models.PipelineActivity&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> Activity name. </param>
        <param name="items"> Collection to iterate. </param>
        <param name="activities">
            List of activities to execute .
            Please note <see cref="T:Azure.ResourceManager.DataFactory.Models.PipelineActivity" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.DataFactory.Models.AppendVariableActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureDataExplorerCommandActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureFunctionActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureMLBatchExecutionActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureMLExecutePipelineActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureMLUpdateResourceActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ControlActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.CopyActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.CustomActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.DatabricksNotebookActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.DatabricksSparkJarActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.DatabricksSparkPythonActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.DataLakeAnalyticsUsqlActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.DeleteActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ExecuteDataFlowActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ExecutePipelineActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ExecuteSsisPackageActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ExecuteWranglingDataflowActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ExecutionActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.FailActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.FilterActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ForEachActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.GetDatasetMetadataActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.HDInsightHiveActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.HDInsightMapReduceActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.HDInsightPigActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.HDInsightSparkActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.HDInsightStreamingActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.IfConditionActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.LookupActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.DataFactoryScriptActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.SetVariableActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.SynapseSparkJobDefinitionActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.SqlServerStoredProcedureActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.SwitchActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.SynapseNotebookActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.UntilActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ValidationActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.WaitActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.WebActivity" /> and <see cref="T:Azure.ResourceManager.DataFactory.Models.WebHookActivity" />.
            </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DataFactory.Models.ForEachActivity" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" />, <paramref name="items" /> or <paramref name="activities" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Activities">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.ResourceManager.DataFactory.Models.PipelineActivity&gt; Activities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.ResourceManager.DataFactory.Models.PipelineActivity&gt; Activities" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.ForEachActivity.Activities" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Activities As IList(Of PipelineActivity)" />
      <MemberSignature Language="F#" Value="member this.Activities : System.Collections.Generic.IList&lt;Azure.ResourceManager.DataFactory.Models.PipelineActivity&gt;" Usage="Azure.ResourceManager.DataFactory.Models.ForEachActivity.Activities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.ResourceManager.DataFactory.Models.PipelineActivity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            List of activities to execute .
            Please note <see cref="T:Azure.ResourceManager.DataFactory.Models.PipelineActivity" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.DataFactory.Models.AppendVariableActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureDataExplorerCommandActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureFunctionActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureMLBatchExecutionActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureMLExecutePipelineActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureMLUpdateResourceActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ControlActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.CopyActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.CustomActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.DatabricksNotebookActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.DatabricksSparkJarActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.DatabricksSparkPythonActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.DataLakeAnalyticsUsqlActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.DeleteActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ExecuteDataFlowActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ExecutePipelineActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ExecuteSsisPackageActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ExecuteWranglingDataflowActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ExecutionActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.FailActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.FilterActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ForEachActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.GetDatasetMetadataActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.HDInsightHiveActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.HDInsightMapReduceActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.HDInsightPigActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.HDInsightSparkActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.HDInsightStreamingActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.IfConditionActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.LookupActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.DataFactoryScriptActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.SetVariableActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.SynapseSparkJobDefinitionActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.SqlServerStoredProcedureActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.SwitchActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.SynapseNotebookActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.UntilActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ValidationActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.WaitActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.WebActivity" /> and <see cref="T:Azure.ResourceManager.DataFactory.Models.WebHookActivity" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchCount">
      <MemberSignature Language="C#" Value="public int? BatchCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; BatchCount" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.ForEachActivity.BatchCount" />
      <MemberSignature Language="VB.NET" Value="Public Property BatchCount As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.BatchCount : Nullable&lt;int&gt; with get, set" Usage="Azure.ResourceManager.DataFactory.Models.ForEachActivity.BatchCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Batch count to be used for controlling the number of parallel execution (when isSequential is set to false). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSequential">
      <MemberSignature Language="C#" Value="public bool? IsSequential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsSequential" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.ForEachActivity.IsSequential" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSequential As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsSequential : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.DataFactory.Models.ForEachActivity.IsSequential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Should the loop be executed in sequence or in parallel (max 50). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.DataFactory.Models.DataFactoryExpression Items { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.DataFactory.Models.DataFactoryExpression Items" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.ForEachActivity.Items" />
      <MemberSignature Language="VB.NET" Value="Public Property Items As DataFactoryExpression" />
      <MemberSignature Language="F#" Value="member this.Items : Azure.ResourceManager.DataFactory.Models.DataFactoryExpression with get, set" Usage="Azure.ResourceManager.DataFactory.Models.ForEachActivity.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.DataFactoryExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Collection to iterate. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.DataFactory.Models.ForEachActivity IJsonModel&lt;ForEachActivity&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.DataFactory.Models.ForEachActivity System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.ForEachActivity.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#DataFactory#Models#ForEachActivity&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As ForEachActivity Implements IJsonModel(Of ForEachActivity).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataFactory.Models.ForEachActivity&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataFactory.Models.ForEachActivity" Usage="forEachActivity.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.ForEachActivity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;ForEachActivity&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.ForEachActivity.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#DataFactory#Models#ForEachActivity&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of ForEachActivity).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="forEachActivity.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.DataFactory.Models.ForEachActivity IPersistableModel&lt;ForEachActivity&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.DataFactory.Models.ForEachActivity System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.ForEachActivity.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#DataFactory#Models#ForEachActivity&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As ForEachActivity Implements IPersistableModel(Of ForEachActivity).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataFactory.Models.ForEachActivity&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataFactory.Models.ForEachActivity" Usage="forEachActivity.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.ForEachActivity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;ForEachActivity&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.ForEachActivity.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#DataFactory#Models#ForEachActivity&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of ForEachActivity).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="forEachActivity.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;ForEachActivity&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.ForEachActivity.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#DataFactory#Models#ForEachActivity&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of ForEachActivity).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="forEachActivity.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.ForEachActivity&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
