<Type Name="SynapseNotebookActivity" FullName="Azure.ResourceManager.DataFactory.Models.SynapseNotebookActivity">
  <TypeSignature Language="C#" Value="public class SynapseNotebookActivity : Azure.ResourceManager.DataFactory.Models.ExecutionActivity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SynapseNotebookActivity extends Azure.ResourceManager.DataFactory.Models.ExecutionActivity" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataFactory.Models.SynapseNotebookActivity" />
  <TypeSignature Language="VB.NET" Value="Public Class SynapseNotebookActivity&#xA;Inherits ExecutionActivity" />
  <TypeSignature Language="F#" Value="type SynapseNotebookActivity = class&#xA;    inherit ExecutionActivity" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.DataFactory.Models.ExecutionActivity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Execute Synapse notebook activity. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynapseNotebookActivity (string name, Azure.ResourceManager.DataFactory.Models.SynapseNotebookReference notebook);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class Azure.ResourceManager.DataFactory.Models.SynapseNotebookReference notebook) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.SynapseNotebookActivity.#ctor(System.String,Azure.ResourceManager.DataFactory.Models.SynapseNotebookReference)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, notebook As SynapseNotebookReference)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.DataFactory.Models.SynapseNotebookActivity : string * Azure.ResourceManager.DataFactory.Models.SynapseNotebookReference -&gt; Azure.ResourceManager.DataFactory.Models.SynapseNotebookActivity" Usage="new Azure.ResourceManager.DataFactory.Models.SynapseNotebookActivity (name, notebook)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="notebook" Type="Azure.ResourceManager.DataFactory.Models.SynapseNotebookReference" />
      </Parameters>
      <Docs>
        <param name="name"> Activity name. </param>
        <param name="notebook"> Synapse notebook reference. </param>
        <summary> Initializes a new instance of SynapseNotebookActivity. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> or <paramref name="notebook" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Conf">
      <MemberSignature Language="C#" Value="public BinaryData Conf { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData Conf" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SynapseNotebookActivity.Conf" />
      <MemberSignature Language="VB.NET" Value="Public Property Conf As BinaryData" />
      <MemberSignature Language="F#" Value="member this.Conf : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SynapseNotebookActivity.Conf" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Spark configuration properties, which will override the 'conf' of the notebook you provide.
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigurationType">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.DataFactory.Models.DataFactorySparkConfigurationType? ConfigurationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DataFactory.Models.DataFactorySparkConfigurationType&gt; ConfigurationType" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SynapseNotebookActivity.ConfigurationType" />
      <MemberSignature Language="VB.NET" Value="Public Property ConfigurationType As Nullable(Of DataFactorySparkConfigurationType)" />
      <MemberSignature Language="F#" Value="member this.ConfigurationType : Nullable&lt;Azure.ResourceManager.DataFactory.Models.DataFactorySparkConfigurationType&gt; with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SynapseNotebookActivity.ConfigurationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ResourceManager.DataFactory.Models.DataFactorySparkConfigurationType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The type of the spark config. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DriverSize">
      <MemberSignature Language="C#" Value="public Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;string&gt; DriverSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Expressions.DataFactory.DataFactoryElement`1&lt;string&gt; DriverSize" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SynapseNotebookActivity.DriverSize" />
      <MemberSignature Language="VB.NET" Value="Public Property DriverSize As DataFactoryElement(Of String)" />
      <MemberSignature Language="F#" Value="member this.DriverSize : Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;string&gt; with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SynapseNotebookActivity.DriverSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Number of core and memory to be used for driver allocated in the specified Spark pool for the session, which will be used for overriding 'driverCores' and 'driverMemory' of the notebook you provide. Type: string (or Expression with resultType string). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutorSize">
      <MemberSignature Language="C#" Value="public Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;string&gt; ExecutorSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Expressions.DataFactory.DataFactoryElement`1&lt;string&gt; ExecutorSize" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SynapseNotebookActivity.ExecutorSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ExecutorSize As DataFactoryElement(Of String)" />
      <MemberSignature Language="F#" Value="member this.ExecutorSize : Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;string&gt; with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SynapseNotebookActivity.ExecutorSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Number of core and memory to be used for executors allocated in the specified Spark pool for the session, which will be used for overriding 'executorCores' and 'executorMemory' of the notebook you provide. Type: string (or Expression with resultType string). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Notebook">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.DataFactory.Models.SynapseNotebookReference Notebook { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.DataFactory.Models.SynapseNotebookReference Notebook" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SynapseNotebookActivity.Notebook" />
      <MemberSignature Language="VB.NET" Value="Public Property Notebook As SynapseNotebookReference" />
      <MemberSignature Language="F#" Value="member this.Notebook : Azure.ResourceManager.DataFactory.Models.SynapseNotebookReference with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SynapseNotebookActivity.Notebook" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.SynapseNotebookReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Synapse notebook reference. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumExecutors">
      <MemberSignature Language="C#" Value="public Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;int&gt; NumExecutors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Expressions.DataFactory.DataFactoryElement`1&lt;int32&gt; NumExecutors" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SynapseNotebookActivity.NumExecutors" />
      <MemberSignature Language="VB.NET" Value="Public Property NumExecutors As DataFactoryElement(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.NumExecutors : Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;int&gt; with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SynapseNotebookActivity.NumExecutors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Number of executors to launch for this session, which will override the 'numExecutors' of the notebook you provide. Type: integer (or Expression with resultType integer). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Azure.ResourceManager.DataFactory.Models.NotebookParameter&gt; Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Azure.ResourceManager.DataFactory.Models.NotebookParameter&gt; Parameters" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SynapseNotebookActivity.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As IDictionary(Of String, NotebookParameter)" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Collections.Generic.IDictionary&lt;string, Azure.ResourceManager.DataFactory.Models.NotebookParameter&gt;" Usage="Azure.ResourceManager.DataFactory.Models.SynapseNotebookActivity.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Azure.ResourceManager.DataFactory.Models.NotebookParameter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Notebook parameters. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SparkConfig">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,BinaryData&gt; SparkConfig { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class System.BinaryData&gt; SparkConfig" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SynapseNotebookActivity.SparkConfig" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SparkConfig As IDictionary(Of String, BinaryData)" />
      <MemberSignature Language="F#" Value="member this.SparkConfig : System.Collections.Generic.IDictionary&lt;string, BinaryData&gt;" Usage="Azure.ResourceManager.DataFactory.Models.SynapseNotebookActivity.SparkConfig" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Spark configuration property.
            <para>
            To assign an object to the value of this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SparkPool">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.DataFactory.Models.BigDataPoolParametrizationReference SparkPool { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.DataFactory.Models.BigDataPoolParametrizationReference SparkPool" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SynapseNotebookActivity.SparkPool" />
      <MemberSignature Language="VB.NET" Value="Public Property SparkPool As BigDataPoolParametrizationReference" />
      <MemberSignature Language="F#" Value="member this.SparkPool : Azure.ResourceManager.DataFactory.Models.BigDataPoolParametrizationReference with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SynapseNotebookActivity.SparkPool" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.BigDataPoolParametrizationReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The name of the big data pool which will be used to execute the notebook. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetSparkConfiguration">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.DataFactory.Models.SparkConfigurationParametrizationReference TargetSparkConfiguration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.DataFactory.Models.SparkConfigurationParametrizationReference TargetSparkConfiguration" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SynapseNotebookActivity.TargetSparkConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetSparkConfiguration As SparkConfigurationParametrizationReference" />
      <MemberSignature Language="F#" Value="member this.TargetSparkConfiguration : Azure.ResourceManager.DataFactory.Models.SparkConfigurationParametrizationReference with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SynapseNotebookActivity.TargetSparkConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.SparkConfigurationParametrizationReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The spark configuration of the spark job. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
