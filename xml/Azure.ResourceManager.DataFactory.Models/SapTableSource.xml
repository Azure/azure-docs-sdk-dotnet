<Type Name="SapTableSource" FullName="Azure.ResourceManager.DataFactory.Models.SapTableSource">
  <TypeSignature Language="C#" Value="public class SapTableSource : Azure.ResourceManager.DataFactory.Models.TabularSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SapTableSource extends Azure.ResourceManager.DataFactory.Models.TabularSource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataFactory.Models.SapTableSource" />
  <TypeSignature Language="VB.NET" Value="Public Class SapTableSource&#xA;Inherits TabularSource" />
  <TypeSignature Language="F#" Value="type SapTableSource = class&#xA;    inherit TabularSource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.DataFactory.Models.TabularSource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A copy activity source for SAP Table source. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SapTableSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.SapTableSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of SapTableSource. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchSize">
      <MemberSignature Language="C#" Value="public BinaryData BatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData BatchSize" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SapTableSource.BatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Property BatchSize As BinaryData" />
      <MemberSignature Language="F#" Value="member this.BatchSize : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SapTableSource.BatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specifies the maximum number of rows that will be retrieved at a time when retrieving data from SAP Table. Type: integer (or Expression with resultType integer).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomRfcReadTableFunctionModule">
      <MemberSignature Language="C#" Value="public BinaryData CustomRfcReadTableFunctionModule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData CustomRfcReadTableFunctionModule" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SapTableSource.CustomRfcReadTableFunctionModule" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomRfcReadTableFunctionModule As BinaryData" />
      <MemberSignature Language="F#" Value="member this.CustomRfcReadTableFunctionModule : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SapTableSource.CustomRfcReadTableFunctionModule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specifies the custom RFC function module that will be used to read data from SAP Table. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartitionOption">
      <MemberSignature Language="C#" Value="public BinaryData PartitionOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData PartitionOption" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SapTableSource.PartitionOption" />
      <MemberSignature Language="VB.NET" Value="Public Property PartitionOption As BinaryData" />
      <MemberSignature Language="F#" Value="member this.PartitionOption : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SapTableSource.PartitionOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The partition mechanism that will be used for SAP table read in parallel. Possible values include: "None", "PartitionOnInt", "PartitionOnCalendarYear", "PartitionOnCalendarMonth", "PartitionOnCalendarDate", "PartitionOnTime".
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartitionSettings">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.DataFactory.Models.SapTablePartitionSettings PartitionSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.DataFactory.Models.SapTablePartitionSettings PartitionSettings" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SapTableSource.PartitionSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property PartitionSettings As SapTablePartitionSettings" />
      <MemberSignature Language="F#" Value="member this.PartitionSettings : Azure.ResourceManager.DataFactory.Models.SapTablePartitionSettings with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SapTableSource.PartitionSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.SapTablePartitionSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The settings that will be leveraged for SAP table source partitioning. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RfcTableFields">
      <MemberSignature Language="C#" Value="public BinaryData RfcTableFields { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData RfcTableFields" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SapTableSource.RfcTableFields" />
      <MemberSignature Language="VB.NET" Value="Public Property RfcTableFields As BinaryData" />
      <MemberSignature Language="F#" Value="member this.RfcTableFields : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SapTableSource.RfcTableFields" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The fields of the SAP table that will be retrieved. For example, column0, column1. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RfcTableOptions">
      <MemberSignature Language="C#" Value="public BinaryData RfcTableOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData RfcTableOptions" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SapTableSource.RfcTableOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property RfcTableOptions As BinaryData" />
      <MemberSignature Language="F#" Value="member this.RfcTableOptions : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SapTableSource.RfcTableOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The options for the filtering of the SAP Table. For example, COLUMN0 EQ SOME VALUE. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowCount">
      <MemberSignature Language="C#" Value="public BinaryData RowCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData RowCount" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SapTableSource.RowCount" />
      <MemberSignature Language="VB.NET" Value="Public Property RowCount As BinaryData" />
      <MemberSignature Language="F#" Value="member this.RowCount : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SapTableSource.RowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The number of rows to be retrieved. Type: integer(or Expression with resultType integer).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowSkips">
      <MemberSignature Language="C#" Value="public BinaryData RowSkips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData RowSkips" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SapTableSource.RowSkips" />
      <MemberSignature Language="VB.NET" Value="Public Property RowSkips As BinaryData" />
      <MemberSignature Language="F#" Value="member this.RowSkips : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SapTableSource.RowSkips" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The number of rows that will be skipped. Type: integer (or Expression with resultType integer).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SapDataColumnDelimiter">
      <MemberSignature Language="C#" Value="public BinaryData SapDataColumnDelimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData SapDataColumnDelimiter" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SapTableSource.SapDataColumnDelimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property SapDataColumnDelimiter As BinaryData" />
      <MemberSignature Language="F#" Value="member this.SapDataColumnDelimiter : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SapTableSource.SapDataColumnDelimiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The single character that will be used as delimiter passed to SAP RFC as well as splitting the output data retrieved. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
