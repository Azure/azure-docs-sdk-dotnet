<Type Name="WebBasicAuthentication" FullName="Azure.ResourceManager.DataFactory.Models.WebBasicAuthentication">
  <TypeSignature Language="C#" Value="public class WebBasicAuthentication : Azure.ResourceManager.DataFactory.Models.WebLinkedServiceTypeProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebBasicAuthentication extends Azure.ResourceManager.DataFactory.Models.WebLinkedServiceTypeProperties" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataFactory.Models.WebBasicAuthentication" />
  <TypeSignature Language="VB.NET" Value="Public Class WebBasicAuthentication&#xA;Inherits WebLinkedServiceTypeProperties" />
  <TypeSignature Language="F#" Value="type WebBasicAuthentication = class&#xA;    inherit WebLinkedServiceTypeProperties" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.DataFactory.Models.WebLinkedServiceTypeProperties</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A WebLinkedService that uses basic authentication to communicate with an HTTP endpoint. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebBasicAuthentication (BinaryData uri, BinaryData username, Azure.ResourceManager.DataFactory.Models.FactorySecretBaseDefinition password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.BinaryData uri, class System.BinaryData username, class Azure.ResourceManager.DataFactory.Models.FactorySecretBaseDefinition password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.WebBasicAuthentication.#ctor(System.BinaryData,System.BinaryData,Azure.ResourceManager.DataFactory.Models.FactorySecretBaseDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uri As BinaryData, username As BinaryData, password As FactorySecretBaseDefinition)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.DataFactory.Models.WebBasicAuthentication : BinaryData * BinaryData * Azure.ResourceManager.DataFactory.Models.FactorySecretBaseDefinition -&gt; Azure.ResourceManager.DataFactory.Models.WebBasicAuthentication" Usage="new Azure.ResourceManager.DataFactory.Models.WebBasicAuthentication (uri, username, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.BinaryData" />
        <Parameter Name="username" Type="System.BinaryData" />
        <Parameter Name="password" Type="Azure.ResourceManager.DataFactory.Models.FactorySecretBaseDefinition" />
      </Parameters>
      <Docs>
        <param name="uri"> The URL of the web service endpoint, e.g. http://www.microsoft.com . Type: string (or Expression with resultType string). </param>
        <param name="username"> User name for Basic authentication. Type: string (or Expression with resultType string). </param>
        <param name="password">
            The password for Basic authentication.
            Please note <see cref="T:Azure.ResourceManager.DataFactory.Models.FactorySecretBaseDefinition" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.DataFactory.Models.FactorySecretString" /> and <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureKeyVaultSecretReference" />.
            </param>
        <summary> Initializes a new instance of WebBasicAuthentication. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uri" />, <paramref name="username" /> or <paramref name="password" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.DataFactory.Models.FactorySecretBaseDefinition Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.DataFactory.Models.FactorySecretBaseDefinition Password" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.WebBasicAuthentication.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As FactorySecretBaseDefinition" />
      <MemberSignature Language="F#" Value="member this.Password : Azure.ResourceManager.DataFactory.Models.FactorySecretBaseDefinition with get, set" Usage="Azure.ResourceManager.DataFactory.Models.WebBasicAuthentication.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.FactorySecretBaseDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The password for Basic authentication.
            Please note <see cref="T:Azure.ResourceManager.DataFactory.Models.FactorySecretBaseDefinition" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.DataFactory.Models.FactorySecretString" /> and <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureKeyVaultSecretReference" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Username">
      <MemberSignature Language="C#" Value="public BinaryData Username { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData Username" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.WebBasicAuthentication.Username" />
      <MemberSignature Language="VB.NET" Value="Public Property Username As BinaryData" />
      <MemberSignature Language="F#" Value="member this.Username : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.WebBasicAuthentication.Username" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            User name for Basic authentication. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
