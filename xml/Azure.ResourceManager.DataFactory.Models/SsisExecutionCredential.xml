<Type Name="SsisExecutionCredential" FullName="Azure.ResourceManager.DataFactory.Models.SsisExecutionCredential">
  <TypeSignature Language="C#" Value="public class SsisExecutionCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SsisExecutionCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataFactory.Models.SsisExecutionCredential" />
  <TypeSignature Language="VB.NET" Value="Public Class SsisExecutionCredential" />
  <TypeSignature Language="F#" Value="type SsisExecutionCredential = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> SSIS package execution credential. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SsisExecutionCredential (BinaryData domain, BinaryData userName, Azure.ResourceManager.DataFactory.Models.FactorySecretString password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.BinaryData domain, class System.BinaryData userName, class Azure.ResourceManager.DataFactory.Models.FactorySecretString password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.SsisExecutionCredential.#ctor(System.BinaryData,System.BinaryData,Azure.ResourceManager.DataFactory.Models.FactorySecretString)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (domain As BinaryData, userName As BinaryData, password As FactorySecretString)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.DataFactory.Models.SsisExecutionCredential : BinaryData * BinaryData * Azure.ResourceManager.DataFactory.Models.FactorySecretString -&gt; Azure.ResourceManager.DataFactory.Models.SsisExecutionCredential" Usage="new Azure.ResourceManager.DataFactory.Models.SsisExecutionCredential (domain, userName, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="domain" Type="System.BinaryData" />
        <Parameter Name="userName" Type="System.BinaryData" />
        <Parameter Name="password" Type="Azure.ResourceManager.DataFactory.Models.FactorySecretString" />
      </Parameters>
      <Docs>
        <param name="domain"> Domain for windows authentication. </param>
        <param name="userName"> UseName for windows authentication. </param>
        <param name="password"> Password for windows authentication. </param>
        <summary> Initializes a new instance of SsisExecutionCredential. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="domain" />, <paramref name="userName" /> or <paramref name="password" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public BinaryData Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData Domain" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SsisExecutionCredential.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Property Domain As BinaryData" />
      <MemberSignature Language="F#" Value="member this.Domain : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SsisExecutionCredential.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Domain for windows authentication.
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.DataFactory.Models.FactorySecretString Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.DataFactory.Models.FactorySecretString Password" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SsisExecutionCredential.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As FactorySecretString" />
      <MemberSignature Language="F#" Value="member this.Password : Azure.ResourceManager.DataFactory.Models.FactorySecretString with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SsisExecutionCredential.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.FactorySecretString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Password for windows authentication. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public BinaryData UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData UserName" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SsisExecutionCredential.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Property UserName As BinaryData" />
      <MemberSignature Language="F#" Value="member this.UserName : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SsisExecutionCredential.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            UseName for windows authentication.
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
