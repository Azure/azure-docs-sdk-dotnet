<Type Name="WebHookActivity" FullName="Azure.ResourceManager.DataFactory.Models.WebHookActivity">
  <TypeSignature Language="C#" Value="public class WebHookActivity : Azure.ResourceManager.DataFactory.Models.ControlActivity, System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebHookActivity extends Azure.ResourceManager.DataFactory.Models.ControlActivity implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataFactory.Models.WebHookActivity" />
  <TypeSignature Language="VB.NET" Value="Public Class WebHookActivity&#xA;Inherits ControlActivity&#xA;Implements IJsonModel(Of WebHookActivity), IPersistableModel(Of WebHookActivity)" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type WebHookActivity = class&#xA;    inherit ControlActivity&#xA;    interface IJsonModel&lt;WebHookActivity&gt;&#xA;    interface IPersistableModel&lt;WebHookActivity&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public class WebHookActivity : Azure.ResourceManager.DataFactory.Models.ControlActivity" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebHookActivity extends Azure.ResourceManager.DataFactory.Models.ControlActivity" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public Class WebHookActivity&#xA;Inherits ControlActivity" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type WebHookActivity = class&#xA;    inherit ControlActivity" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.DataFactory.Models.ControlActivity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> WebHook activity. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebHookActivity (string name, Azure.ResourceManager.DataFactory.Models.WebHookActivityMethod method, Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;string&gt; uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype Azure.ResourceManager.DataFactory.Models.WebHookActivityMethod method, class Azure.Core.Expressions.DataFactory.DataFactoryElement`1&lt;string&gt; uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.WebHookActivity.#ctor(System.String,Azure.ResourceManager.DataFactory.Models.WebHookActivityMethod,Azure.Core.Expressions.DataFactory.DataFactoryElement{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, method As WebHookActivityMethod, uri As DataFactoryElement(Of String))" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.DataFactory.Models.WebHookActivity : string * Azure.ResourceManager.DataFactory.Models.WebHookActivityMethod * Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;string&gt; -&gt; Azure.ResourceManager.DataFactory.Models.WebHookActivity" Usage="new Azure.ResourceManager.DataFactory.Models.WebHookActivity (name, method, uri)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="method" Type="Azure.ResourceManager.DataFactory.Models.WebHookActivityMethod" />
        <Parameter Name="uri" Type="Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> Activity name. </param>
        <param name="method"> Rest API method for target endpoint. </param>
        <param name="uri"> WebHook activity target endpoint and path. Type: string (or Expression with resultType string). </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DataFactory.Models.WebHookActivity" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> or <paramref name="uri" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Authentication">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.DataFactory.Models.WebActivityAuthentication Authentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.DataFactory.Models.WebActivityAuthentication Authentication" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.WebHookActivity.Authentication" />
      <MemberSignature Language="VB.NET" Value="Public Property Authentication As WebActivityAuthentication" />
      <MemberSignature Language="F#" Value="member this.Authentication : Azure.ResourceManager.DataFactory.Models.WebActivityAuthentication with get, set" Usage="Azure.ResourceManager.DataFactory.Models.WebHookActivity.Authentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.WebActivityAuthentication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Authentication method used for calling the endpoint. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Body">
      <MemberSignature Language="C#" Value="public Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;string&gt; Body { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Expressions.DataFactory.DataFactoryElement`1&lt;string&gt; Body" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.WebHookActivity.Body" />
      <MemberSignature Language="VB.NET" Value="Public Property Body As DataFactoryElement(Of String)" />
      <MemberSignature Language="F#" Value="member this.Body : Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;string&gt; with get, set" Usage="Azure.ResourceManager.DataFactory.Models.WebHookActivity.Body" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Represents the payload that will be sent to the endpoint. Required for POST/PUT method, not allowed for GET method Type: string (or Expression with resultType string). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;string&gt;&gt; Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Azure.Core.Expressions.DataFactory.DataFactoryElement`1&lt;string&gt;&gt; Headers" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.WebHookActivity.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As IDictionary(Of String, DataFactoryElement(Of String))" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Generic.IDictionary&lt;string, Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;string&gt;&gt;" Usage="Azure.ResourceManager.DataFactory.Models.WebHookActivity.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Represents the headers that will be sent to the request. For example, to set the language and type on a request: "headers" : { "Accept-Language": "en-us", "Content-Type": "application/json" }. Type: string (or Expression with resultType string). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.DataFactory.Models.WebHookActivityMethod Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Azure.ResourceManager.DataFactory.Models.WebHookActivityMethod Method" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.WebHookActivity.Method" />
      <MemberSignature Language="VB.NET" Value="Public Property Method As WebHookActivityMethod" />
      <MemberSignature Language="F#" Value="member this.Method : Azure.ResourceManager.DataFactory.Models.WebHookActivityMethod with get, set" Usage="Azure.ResourceManager.DataFactory.Models.WebHookActivity.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.WebHookActivityMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Rest API method for target endpoint. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Policy">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.DataFactory.Models.SecureInputOutputPolicy Policy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.DataFactory.Models.SecureInputOutputPolicy Policy" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.WebHookActivity.Policy" />
      <MemberSignature Language="VB.NET" Value="Public Property Policy As SecureInputOutputPolicy" />
      <MemberSignature Language="F#" Value="member this.Policy : Azure.ResourceManager.DataFactory.Models.SecureInputOutputPolicy with get, set" Usage="Azure.ResourceManager.DataFactory.Models.WebHookActivity.Policy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.SecureInputOutputPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Activity policy. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportStatusOnCallBack">
      <MemberSignature Language="C#" Value="public Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;bool&gt; ReportStatusOnCallBack { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Expressions.DataFactory.DataFactoryElement`1&lt;bool&gt; ReportStatusOnCallBack" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.WebHookActivity.ReportStatusOnCallBack" />
      <MemberSignature Language="VB.NET" Value="Public Property ReportStatusOnCallBack As DataFactoryElement(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.ReportStatusOnCallBack : Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.DataFactory.Models.WebHookActivity.ReportStatusOnCallBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> When set to true, statusCode, output and error in callback request body will be consumed by activity. The activity can be marked as failed by setting statusCode &gt;= 400 in callback request. Default is false. Type: boolean (or Expression with resultType boolean). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestHeaders">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,BinaryData&gt; RequestHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class System.BinaryData&gt; RequestHeaders" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.WebHookActivity.RequestHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestHeaders As IDictionary(Of String, BinaryData)" />
      <MemberSignature Language="F#" Value="member this.RequestHeaders : System.Collections.Generic.IDictionary&lt;string, BinaryData&gt;" Usage="Azure.ResourceManager.DataFactory.Models.WebHookActivity.RequestHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Represents the headers that will be sent to the request. For example, to set the language and type on a request: "headers" : { "Accept-Language": "en-us", "Content-Type": "application/json" }. Type: string (or Expression with resultType string).
            <para>
            To assign an object to the value of this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.DataFactory.Models.WebHookActivity IJsonModel&lt;WebHookActivity&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.DataFactory.Models.WebHookActivity System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.WebHookActivity.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#DataFactory#Models#WebHookActivity&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As WebHookActivity Implements IJsonModel(Of WebHookActivity).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataFactory.Models.WebHookActivity&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataFactory.Models.WebHookActivity" Usage="webHookActivity.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.WebHookActivity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;WebHookActivity&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.WebHookActivity.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#DataFactory#Models#WebHookActivity&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of WebHookActivity).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="webHookActivity.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.DataFactory.Models.WebHookActivity IPersistableModel&lt;WebHookActivity&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.DataFactory.Models.WebHookActivity System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.WebHookActivity.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#DataFactory#Models#WebHookActivity&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As WebHookActivity Implements IPersistableModel(Of WebHookActivity).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataFactory.Models.WebHookActivity&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataFactory.Models.WebHookActivity" Usage="webHookActivity.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.WebHookActivity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;WebHookActivity&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.WebHookActivity.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#DataFactory#Models#WebHookActivity&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of WebHookActivity).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="webHookActivity.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;WebHookActivity&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.WebHookActivity.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#DataFactory#Models#WebHookActivity&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of WebHookActivity).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="webHookActivity.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.WebHookActivity&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public string Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Timeout" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.WebHookActivity.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As String" />
      <MemberSignature Language="F#" Value="member this.Timeout : string with get, set" Usage="Azure.ResourceManager.DataFactory.Models.WebHookActivity.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The timeout within which the webhook should be called back. If there is no value specified, it defaults to 10 minutes. Type: string. Pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;string&gt; Uri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Expressions.DataFactory.DataFactoryElement`1&lt;string&gt; Uri" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.WebHookActivity.Uri" />
      <MemberSignature Language="VB.NET" Value="Public Property Uri As DataFactoryElement(Of String)" />
      <MemberSignature Language="F#" Value="member this.Uri : Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;string&gt; with get, set" Usage="Azure.ResourceManager.DataFactory.Models.WebHookActivity.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> WebHook activity target endpoint and path. Type: string (or Expression with resultType string). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
