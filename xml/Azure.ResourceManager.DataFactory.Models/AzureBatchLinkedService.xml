<Type Name="AzureBatchLinkedService" FullName="Azure.ResourceManager.DataFactory.Models.AzureBatchLinkedService">
  <TypeSignature Language="C#" Value="public class AzureBatchLinkedService : Azure.ResourceManager.DataFactory.Models.FactoryLinkedServiceDefinition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AzureBatchLinkedService extends Azure.ResourceManager.DataFactory.Models.FactoryLinkedServiceDefinition" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataFactory.Models.AzureBatchLinkedService" />
  <TypeSignature Language="VB.NET" Value="Public Class AzureBatchLinkedService&#xA;Inherits FactoryLinkedServiceDefinition" />
  <TypeSignature Language="F#" Value="type AzureBatchLinkedService = class&#xA;    inherit FactoryLinkedServiceDefinition" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.DataFactory.Models.FactoryLinkedServiceDefinition</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Azure Batch linked service. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AzureBatchLinkedService (BinaryData accountName, BinaryData batchUri, BinaryData poolName, Azure.ResourceManager.DataFactory.Models.FactoryLinkedServiceReference linkedServiceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.BinaryData accountName, class System.BinaryData batchUri, class System.BinaryData poolName, class Azure.ResourceManager.DataFactory.Models.FactoryLinkedServiceReference linkedServiceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.AzureBatchLinkedService.#ctor(System.BinaryData,System.BinaryData,System.BinaryData,Azure.ResourceManager.DataFactory.Models.FactoryLinkedServiceReference)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (accountName As BinaryData, batchUri As BinaryData, poolName As BinaryData, linkedServiceName As FactoryLinkedServiceReference)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.DataFactory.Models.AzureBatchLinkedService : BinaryData * BinaryData * BinaryData * Azure.ResourceManager.DataFactory.Models.FactoryLinkedServiceReference -&gt; Azure.ResourceManager.DataFactory.Models.AzureBatchLinkedService" Usage="new Azure.ResourceManager.DataFactory.Models.AzureBatchLinkedService (accountName, batchUri, poolName, linkedServiceName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="accountName" Type="System.BinaryData" />
        <Parameter Name="batchUri" Type="System.BinaryData" />
        <Parameter Name="poolName" Type="System.BinaryData" />
        <Parameter Name="linkedServiceName" Type="Azure.ResourceManager.DataFactory.Models.FactoryLinkedServiceReference" />
      </Parameters>
      <Docs>
        <param name="accountName"> The Azure Batch account name. Type: string (or Expression with resultType string). </param>
        <param name="batchUri"> The Azure Batch URI. Type: string (or Expression with resultType string). </param>
        <param name="poolName"> The Azure Batch pool name. Type: string (or Expression with resultType string). </param>
        <param name="linkedServiceName"> The Azure Storage linked service reference. </param>
        <summary> Initializes a new instance of AzureBatchLinkedService. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="accountName" />, <paramref name="batchUri" />, <paramref name="poolName" /> or <paramref name="linkedServiceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AccessKey">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.DataFactory.Models.FactorySecretBaseDefinition AccessKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.DataFactory.Models.FactorySecretBaseDefinition AccessKey" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AzureBatchLinkedService.AccessKey" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessKey As FactorySecretBaseDefinition" />
      <MemberSignature Language="F#" Value="member this.AccessKey : Azure.ResourceManager.DataFactory.Models.FactorySecretBaseDefinition with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AzureBatchLinkedService.AccessKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.FactorySecretBaseDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The Azure Batch account access key.
            Please note <see cref="T:Azure.ResourceManager.DataFactory.Models.FactorySecretBaseDefinition" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.DataFactory.Models.FactorySecretString" /> and <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureKeyVaultSecretReference" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccountName">
      <MemberSignature Language="C#" Value="public BinaryData AccountName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData AccountName" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AzureBatchLinkedService.AccountName" />
      <MemberSignature Language="VB.NET" Value="Public Property AccountName As BinaryData" />
      <MemberSignature Language="F#" Value="member this.AccountName : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AzureBatchLinkedService.AccountName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The Azure Batch account name. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchUri">
      <MemberSignature Language="C#" Value="public BinaryData BatchUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData BatchUri" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AzureBatchLinkedService.BatchUri" />
      <MemberSignature Language="VB.NET" Value="Public Property BatchUri As BinaryData" />
      <MemberSignature Language="F#" Value="member this.BatchUri : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AzureBatchLinkedService.BatchUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The Azure Batch URI. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credential">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.DataFactory.Models.FactoryCredentialReference Credential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.DataFactory.Models.FactoryCredentialReference Credential" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AzureBatchLinkedService.Credential" />
      <MemberSignature Language="VB.NET" Value="Public Property Credential As FactoryCredentialReference" />
      <MemberSignature Language="F#" Value="member this.Credential : Azure.ResourceManager.DataFactory.Models.FactoryCredentialReference with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AzureBatchLinkedService.Credential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.FactoryCredentialReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The credential reference containing authentication information. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptedCredential">
      <MemberSignature Language="C#" Value="public BinaryData EncryptedCredential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData EncryptedCredential" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AzureBatchLinkedService.EncryptedCredential" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptedCredential As BinaryData" />
      <MemberSignature Language="F#" Value="member this.EncryptedCredential : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AzureBatchLinkedService.EncryptedCredential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkedServiceName">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.DataFactory.Models.FactoryLinkedServiceReference LinkedServiceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.DataFactory.Models.FactoryLinkedServiceReference LinkedServiceName" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AzureBatchLinkedService.LinkedServiceName" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkedServiceName As FactoryLinkedServiceReference" />
      <MemberSignature Language="F#" Value="member this.LinkedServiceName : Azure.ResourceManager.DataFactory.Models.FactoryLinkedServiceReference with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AzureBatchLinkedService.LinkedServiceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.FactoryLinkedServiceReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The Azure Storage linked service reference. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PoolName">
      <MemberSignature Language="C#" Value="public BinaryData PoolName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData PoolName" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AzureBatchLinkedService.PoolName" />
      <MemberSignature Language="VB.NET" Value="Public Property PoolName As BinaryData" />
      <MemberSignature Language="F#" Value="member this.PoolName : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AzureBatchLinkedService.PoolName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The Azure Batch pool name. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
