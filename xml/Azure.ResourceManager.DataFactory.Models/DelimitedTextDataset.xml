<Type Name="DelimitedTextDataset" FullName="Azure.ResourceManager.DataFactory.Models.DelimitedTextDataset">
  <TypeSignature Language="C#" Value="public class DelimitedTextDataset : Azure.ResourceManager.DataFactory.Models.FactoryDatasetDefinition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DelimitedTextDataset extends Azure.ResourceManager.DataFactory.Models.FactoryDatasetDefinition" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataFactory.Models.DelimitedTextDataset" />
  <TypeSignature Language="VB.NET" Value="Public Class DelimitedTextDataset&#xA;Inherits FactoryDatasetDefinition" />
  <TypeSignature Language="F#" Value="type DelimitedTextDataset = class&#xA;    inherit FactoryDatasetDefinition" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.DataFactory.Models.FactoryDatasetDefinition</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Delimited text dataset. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelimitedTextDataset (Azure.ResourceManager.DataFactory.Models.FactoryLinkedServiceReference linkedServiceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.ResourceManager.DataFactory.Models.FactoryLinkedServiceReference linkedServiceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.DelimitedTextDataset.#ctor(Azure.ResourceManager.DataFactory.Models.FactoryLinkedServiceReference)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (linkedServiceName As FactoryLinkedServiceReference)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.DataFactory.Models.DelimitedTextDataset : Azure.ResourceManager.DataFactory.Models.FactoryLinkedServiceReference -&gt; Azure.ResourceManager.DataFactory.Models.DelimitedTextDataset" Usage="new Azure.ResourceManager.DataFactory.Models.DelimitedTextDataset linkedServiceName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="linkedServiceName" Type="Azure.ResourceManager.DataFactory.Models.FactoryLinkedServiceReference" />
      </Parameters>
      <Docs>
        <param name="linkedServiceName"> Linked service reference. </param>
        <summary> Initializes a new instance of DelimitedTextDataset. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="linkedServiceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ColumnDelimiter">
      <MemberSignature Language="C#" Value="public BinaryData ColumnDelimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData ColumnDelimiter" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.DelimitedTextDataset.ColumnDelimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnDelimiter As BinaryData" />
      <MemberSignature Language="F#" Value="member this.ColumnDelimiter : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.DelimitedTextDataset.ColumnDelimiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The column delimiter. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressionCodec">
      <MemberSignature Language="C#" Value="public BinaryData CompressionCodec { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData CompressionCodec" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.DelimitedTextDataset.CompressionCodec" />
      <MemberSignature Language="VB.NET" Value="Public Property CompressionCodec As BinaryData" />
      <MemberSignature Language="F#" Value="member this.CompressionCodec : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.DelimitedTextDataset.CompressionCodec" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The data compressionCodec. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressionLevel">
      <MemberSignature Language="C#" Value="public BinaryData CompressionLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData CompressionLevel" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.DelimitedTextDataset.CompressionLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property CompressionLevel As BinaryData" />
      <MemberSignature Language="F#" Value="member this.CompressionLevel : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.DelimitedTextDataset.CompressionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The data compression method used for DelimitedText.
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLocation">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.DataFactory.Models.DatasetLocation DataLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.DataFactory.Models.DatasetLocation DataLocation" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.DelimitedTextDataset.DataLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property DataLocation As DatasetLocation" />
      <MemberSignature Language="F#" Value="member this.DataLocation : Azure.ResourceManager.DataFactory.Models.DatasetLocation with get, set" Usage="Azure.ResourceManager.DataFactory.Models.DelimitedTextDataset.DataLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.DatasetLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The location of the delimited text storage.
            Please note <see cref="T:Azure.ResourceManager.DataFactory.Models.DatasetLocation" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.DataFactory.Models.AmazonS3CompatibleLocation" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.AmazonS3Location" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureBlobFSLocation" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureBlobStorageLocation" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureDataLakeStoreLocation" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureFileStorageLocation" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.FileServerLocation" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.FtpServerLocation" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.GoogleCloudStorageLocation" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.HdfsLocation" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.HttpServerLocation" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.OracleCloudStorageLocation" /> and <see cref="T:Azure.ResourceManager.DataFactory.Models.SftpLocation" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodingName">
      <MemberSignature Language="C#" Value="public BinaryData EncodingName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData EncodingName" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.DelimitedTextDataset.EncodingName" />
      <MemberSignature Language="VB.NET" Value="Public Property EncodingName As BinaryData" />
      <MemberSignature Language="F#" Value="member this.EncodingName : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.DelimitedTextDataset.EncodingName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The code page name of the preferred encoding. If miss, the default value is UTF-8, unless BOM denotes another Unicode encoding. Refer to the name column of the table in the following link to set supported values: https://msdn.microsoft.com/library/system.text.encoding.aspx. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapeChar">
      <MemberSignature Language="C#" Value="public BinaryData EscapeChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData EscapeChar" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.DelimitedTextDataset.EscapeChar" />
      <MemberSignature Language="VB.NET" Value="Public Property EscapeChar As BinaryData" />
      <MemberSignature Language="F#" Value="member this.EscapeChar : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.DelimitedTextDataset.EscapeChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The escape character. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstRowAsHeader">
      <MemberSignature Language="C#" Value="public BinaryData FirstRowAsHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData FirstRowAsHeader" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.DelimitedTextDataset.FirstRowAsHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstRowAsHeader As BinaryData" />
      <MemberSignature Language="F#" Value="member this.FirstRowAsHeader : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.DelimitedTextDataset.FirstRowAsHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            When used as input, treat the first row of data as headers. When used as output,write the headers into the output as the first row of data. The default value is false. Type: boolean (or Expression with resultType boolean).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullValue">
      <MemberSignature Language="C#" Value="public BinaryData NullValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData NullValue" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.DelimitedTextDataset.NullValue" />
      <MemberSignature Language="VB.NET" Value="Public Property NullValue As BinaryData" />
      <MemberSignature Language="F#" Value="member this.NullValue : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.DelimitedTextDataset.NullValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The null value string. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public BinaryData QuoteChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData QuoteChar" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.DelimitedTextDataset.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Property QuoteChar As BinaryData" />
      <MemberSignature Language="F#" Value="member this.QuoteChar : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.DelimitedTextDataset.QuoteChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The quote character. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowDelimiter">
      <MemberSignature Language="C#" Value="public BinaryData RowDelimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData RowDelimiter" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.DelimitedTextDataset.RowDelimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property RowDelimiter As BinaryData" />
      <MemberSignature Language="F#" Value="member this.RowDelimiter : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.DelimitedTextDataset.RowDelimiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The row delimiter. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
