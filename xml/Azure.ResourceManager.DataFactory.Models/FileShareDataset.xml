<Type Name="FileShareDataset" FullName="Azure.ResourceManager.DataFactory.Models.FileShareDataset">
  <TypeSignature Language="C#" Value="public class FileShareDataset : Azure.ResourceManager.DataFactory.Models.FactoryDatasetDefinition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileShareDataset extends Azure.ResourceManager.DataFactory.Models.FactoryDatasetDefinition" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataFactory.Models.FileShareDataset" />
  <TypeSignature Language="VB.NET" Value="Public Class FileShareDataset&#xA;Inherits FactoryDatasetDefinition" />
  <TypeSignature Language="F#" Value="type FileShareDataset = class&#xA;    inherit FactoryDatasetDefinition" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.DataFactory.Models.FactoryDatasetDefinition</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> An on-premises file system dataset. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileShareDataset (Azure.ResourceManager.DataFactory.Models.FactoryLinkedServiceReference linkedServiceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.ResourceManager.DataFactory.Models.FactoryLinkedServiceReference linkedServiceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.FileShareDataset.#ctor(Azure.ResourceManager.DataFactory.Models.FactoryLinkedServiceReference)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (linkedServiceName As FactoryLinkedServiceReference)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.DataFactory.Models.FileShareDataset : Azure.ResourceManager.DataFactory.Models.FactoryLinkedServiceReference -&gt; Azure.ResourceManager.DataFactory.Models.FileShareDataset" Usage="new Azure.ResourceManager.DataFactory.Models.FileShareDataset linkedServiceName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="linkedServiceName" Type="Azure.ResourceManager.DataFactory.Models.FactoryLinkedServiceReference" />
      </Parameters>
      <Docs>
        <param name="linkedServiceName"> Linked service reference. </param>
        <summary> Initializes a new instance of FileShareDataset. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="linkedServiceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Compression">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.DataFactory.Models.DatasetCompression Compression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.DataFactory.Models.DatasetCompression Compression" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.FileShareDataset.Compression" />
      <MemberSignature Language="VB.NET" Value="Public Property Compression As DatasetCompression" />
      <MemberSignature Language="F#" Value="member this.Compression : Azure.ResourceManager.DataFactory.Models.DatasetCompression with get, set" Usage="Azure.ResourceManager.DataFactory.Models.FileShareDataset.Compression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.DatasetCompression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The data compression method used for the file system. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileFilter">
      <MemberSignature Language="C#" Value="public BinaryData FileFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData FileFilter" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.FileShareDataset.FileFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property FileFilter As BinaryData" />
      <MemberSignature Language="F#" Value="member this.FileFilter : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.FileShareDataset.FileFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specify a filter to be used to select a subset of files in the folderPath rather than all files. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public BinaryData FileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData FileName" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.FileShareDataset.FileName" />
      <MemberSignature Language="VB.NET" Value="Public Property FileName As BinaryData" />
      <MemberSignature Language="F#" Value="member this.FileName : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.FileShareDataset.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The name of the on-premises file system. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FolderPath">
      <MemberSignature Language="C#" Value="public BinaryData FolderPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData FolderPath" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.FileShareDataset.FolderPath" />
      <MemberSignature Language="VB.NET" Value="Public Property FolderPath As BinaryData" />
      <MemberSignature Language="F#" Value="member this.FolderPath : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.FileShareDataset.FolderPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The path of the on-premises file system. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.DataFactory.Models.DatasetStorageFormat Format { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.DataFactory.Models.DatasetStorageFormat Format" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.FileShareDataset.Format" />
      <MemberSignature Language="VB.NET" Value="Public Property Format As DatasetStorageFormat" />
      <MemberSignature Language="F#" Value="member this.Format : Azure.ResourceManager.DataFactory.Models.DatasetStorageFormat with get, set" Usage="Azure.ResourceManager.DataFactory.Models.FileShareDataset.Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.DatasetStorageFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The format of the files.
            Please note <see cref="T:Azure.ResourceManager.DataFactory.Models.DatasetStorageFormat" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.DataFactory.Models.DatasetAvroFormat" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.DatasetJsonFormat" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.DatasetOrcFormat" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.DatasetParquetFormat" /> and <see cref="T:Azure.ResourceManager.DataFactory.Models.DatasetTextFormat" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifiedDatetimeEnd">
      <MemberSignature Language="C#" Value="public BinaryData ModifiedDatetimeEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData ModifiedDatetimeEnd" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.FileShareDataset.ModifiedDatetimeEnd" />
      <MemberSignature Language="VB.NET" Value="Public Property ModifiedDatetimeEnd As BinaryData" />
      <MemberSignature Language="F#" Value="member this.ModifiedDatetimeEnd : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.FileShareDataset.ModifiedDatetimeEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The end of file's modified datetime. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifiedDatetimeStart">
      <MemberSignature Language="C#" Value="public BinaryData ModifiedDatetimeStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData ModifiedDatetimeStart" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.FileShareDataset.ModifiedDatetimeStart" />
      <MemberSignature Language="VB.NET" Value="Public Property ModifiedDatetimeStart As BinaryData" />
      <MemberSignature Language="F#" Value="member this.ModifiedDatetimeStart : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.FileShareDataset.ModifiedDatetimeStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The start of file's modified datetime. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
