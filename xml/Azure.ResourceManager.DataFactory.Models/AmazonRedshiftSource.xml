<Type Name="AmazonRedshiftSource" FullName="Azure.ResourceManager.DataFactory.Models.AmazonRedshiftSource">
  <TypeSignature Language="C#" Value="public class AmazonRedshiftSource : Azure.ResourceManager.DataFactory.Models.TabularSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AmazonRedshiftSource extends Azure.ResourceManager.DataFactory.Models.TabularSource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataFactory.Models.AmazonRedshiftSource" />
  <TypeSignature Language="VB.NET" Value="Public Class AmazonRedshiftSource&#xA;Inherits TabularSource" />
  <TypeSignature Language="F#" Value="type AmazonRedshiftSource = class&#xA;    inherit TabularSource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.DataFactory.Models.TabularSource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A copy activity source for Amazon Redshift Source. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmazonRedshiftSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.AmazonRedshiftSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of AmazonRedshiftSource. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public BinaryData Query { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData Query" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AmazonRedshiftSource.Query" />
      <MemberSignature Language="VB.NET" Value="Public Property Query As BinaryData" />
      <MemberSignature Language="F#" Value="member this.Query : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AmazonRedshiftSource.Query" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Database query. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedshiftUnloadSettings">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings RedshiftUnloadSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings RedshiftUnloadSettings" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.AmazonRedshiftSource.RedshiftUnloadSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property RedshiftUnloadSettings As RedshiftUnloadSettings" />
      <MemberSignature Language="F#" Value="member this.RedshiftUnloadSettings : Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings with get, set" Usage="Azure.ResourceManager.DataFactory.Models.AmazonRedshiftSource.RedshiftUnloadSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The Amazon S3 settings needed for the interim Amazon S3 when copying from Amazon Redshift with unload. With this, data from Amazon Redshift source will be unloaded into S3 first and then copied into the targeted sink from the interim S3. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
