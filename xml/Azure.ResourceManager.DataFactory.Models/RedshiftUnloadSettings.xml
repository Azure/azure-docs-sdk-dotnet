<Type Name="RedshiftUnloadSettings" FullName="Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings">
  <TypeSignature Language="C#" Value="public class RedshiftUnloadSettings : System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RedshiftUnloadSettings extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings" />
  <TypeSignature Language="VB.NET" Value="Public Class RedshiftUnloadSettings&#xA;Implements IJsonModel(Of RedshiftUnloadSettings), IPersistableModel(Of RedshiftUnloadSettings)" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type RedshiftUnloadSettings = class&#xA;    interface IJsonModel&lt;RedshiftUnloadSettings&gt;&#xA;    interface IPersistableModel&lt;RedshiftUnloadSettings&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public class RedshiftUnloadSettings" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RedshiftUnloadSettings extends System.Object" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public Class RedshiftUnloadSettings" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type RedshiftUnloadSettings = class" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> The Amazon S3 settings needed for the interim Amazon S3 when copying from Amazon Redshift with unload. With this, data from Amazon Redshift source will be unloaded into S3 first and then copied into the targeted sink from the interim S3. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RedshiftUnloadSettings (Azure.Core.Expressions.DataFactory.DataFactoryLinkedServiceReference s3LinkedServiceName, Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;string&gt; bucketName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.Core.Expressions.DataFactory.DataFactoryLinkedServiceReference s3LinkedServiceName, class Azure.Core.Expressions.DataFactory.DataFactoryElement`1&lt;string&gt; bucketName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings.#ctor(Azure.Core.Expressions.DataFactory.DataFactoryLinkedServiceReference,Azure.Core.Expressions.DataFactory.DataFactoryElement{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (s3LinkedServiceName As DataFactoryLinkedServiceReference, bucketName As DataFactoryElement(Of String))" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings : Azure.Core.Expressions.DataFactory.DataFactoryLinkedServiceReference * Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;string&gt; -&gt; Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings" Usage="new Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings (s3LinkedServiceName, bucketName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="s3LinkedServiceName" Type="Azure.Core.Expressions.DataFactory.DataFactoryLinkedServiceReference" />
        <Parameter Name="bucketName" Type="Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="s3LinkedServiceName"> The name of the Amazon S3 linked service which will be used for the unload operation when copying from the Amazon Redshift source. </param>
        <param name="bucketName"> The bucket of the interim Amazon S3 which will be used to store the unloaded data from Amazon Redshift source. The bucket must be in the same region as the Amazon Redshift source. Type: string (or Expression with resultType string). </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="s3LinkedServiceName" /> or <paramref name="bucketName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="BucketName">
      <MemberSignature Language="C#" Value="public Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;string&gt; BucketName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Expressions.DataFactory.DataFactoryElement`1&lt;string&gt; BucketName" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings.BucketName" />
      <MemberSignature Language="VB.NET" Value="Public Property BucketName As DataFactoryElement(Of String)" />
      <MemberSignature Language="F#" Value="member this.BucketName : Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;string&gt; with get, set" Usage="Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings.BucketName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The bucket of the interim Amazon S3 which will be used to store the unloaded data from Amazon Redshift source. The bucket must be in the same region as the Amazon Redshift source. Type: string (or Expression with resultType string). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="S3LinkedServiceName">
      <MemberSignature Language="C#" Value="public Azure.Core.Expressions.DataFactory.DataFactoryLinkedServiceReference S3LinkedServiceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Expressions.DataFactory.DataFactoryLinkedServiceReference S3LinkedServiceName" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings.S3LinkedServiceName" />
      <MemberSignature Language="VB.NET" Value="Public Property S3LinkedServiceName As DataFactoryLinkedServiceReference" />
      <MemberSignature Language="F#" Value="member this.S3LinkedServiceName : Azure.Core.Expressions.DataFactory.DataFactoryLinkedServiceReference with get, set" Usage="Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings.S3LinkedServiceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Expressions.DataFactory.DataFactoryLinkedServiceReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The name of the Amazon S3 linked service which will be used for the unload operation when copying from the Amazon Redshift source. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings IJsonModel&lt;RedshiftUnloadSettings&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#DataFactory#Models#RedshiftUnloadSettings&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As RedshiftUnloadSettings Implements IJsonModel(Of RedshiftUnloadSettings).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings" Usage="redshiftUnloadSettings.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;RedshiftUnloadSettings&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#DataFactory#Models#RedshiftUnloadSettings&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of RedshiftUnloadSettings).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="redshiftUnloadSettings.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings IPersistableModel&lt;RedshiftUnloadSettings&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#DataFactory#Models#RedshiftUnloadSettings&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As RedshiftUnloadSettings Implements IPersistableModel(Of RedshiftUnloadSettings).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings" Usage="redshiftUnloadSettings.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;RedshiftUnloadSettings&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#DataFactory#Models#RedshiftUnloadSettings&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of RedshiftUnloadSettings).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="redshiftUnloadSettings.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;RedshiftUnloadSettings&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#DataFactory#Models#RedshiftUnloadSettings&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of RedshiftUnloadSettings).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="redshiftUnloadSettings.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.RedshiftUnloadSettings&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
