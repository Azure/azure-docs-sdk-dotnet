<Type Name="DynamicsAXLinkedService" FullName="Azure.ResourceManager.DataFactory.Models.DynamicsAXLinkedService">
  <TypeSignature Language="C#" Value="public class DynamicsAXLinkedService : Azure.ResourceManager.DataFactory.Models.FactoryLinkedServiceDefinition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicsAXLinkedService extends Azure.ResourceManager.DataFactory.Models.FactoryLinkedServiceDefinition" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataFactory.Models.DynamicsAXLinkedService" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicsAXLinkedService&#xA;Inherits FactoryLinkedServiceDefinition" />
  <TypeSignature Language="F#" Value="type DynamicsAXLinkedService = class&#xA;    inherit FactoryLinkedServiceDefinition" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.DataFactory.Models.FactoryLinkedServiceDefinition</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Dynamics AX linked service. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicsAXLinkedService (BinaryData uri, BinaryData servicePrincipalId, Azure.ResourceManager.DataFactory.Models.FactorySecretBaseDefinition servicePrincipalKey, BinaryData tenant, BinaryData aadResourceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.BinaryData uri, class System.BinaryData servicePrincipalId, class Azure.ResourceManager.DataFactory.Models.FactorySecretBaseDefinition servicePrincipalKey, class System.BinaryData tenant, class System.BinaryData aadResourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.DynamicsAXLinkedService.#ctor(System.BinaryData,System.BinaryData,Azure.ResourceManager.DataFactory.Models.FactorySecretBaseDefinition,System.BinaryData,System.BinaryData)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uri As BinaryData, servicePrincipalId As BinaryData, servicePrincipalKey As FactorySecretBaseDefinition, tenant As BinaryData, aadResourceId As BinaryData)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.DataFactory.Models.DynamicsAXLinkedService : BinaryData * BinaryData * Azure.ResourceManager.DataFactory.Models.FactorySecretBaseDefinition * BinaryData * BinaryData -&gt; Azure.ResourceManager.DataFactory.Models.DynamicsAXLinkedService" Usage="new Azure.ResourceManager.DataFactory.Models.DynamicsAXLinkedService (uri, servicePrincipalId, servicePrincipalKey, tenant, aadResourceId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.BinaryData" />
        <Parameter Name="servicePrincipalId" Type="System.BinaryData" />
        <Parameter Name="servicePrincipalKey" Type="Azure.ResourceManager.DataFactory.Models.FactorySecretBaseDefinition" />
        <Parameter Name="tenant" Type="System.BinaryData" />
        <Parameter Name="aadResourceId" Type="System.BinaryData" />
      </Parameters>
      <Docs>
        <param name="uri"> The Dynamics AX (or Dynamics 365 Finance and Operations) instance OData endpoint. </param>
        <param name="servicePrincipalId"> Specify the application's client ID. Type: string (or Expression with resultType string). </param>
        <param name="servicePrincipalKey">
            Specify the application's key. Mark this field as a SecureString to store it securely in Data Factory, or reference a secret stored in Azure Key Vault. Type: string (or Expression with resultType string).
            Please note <see cref="T:Azure.ResourceManager.DataFactory.Models.FactorySecretBaseDefinition" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.DataFactory.Models.FactorySecretString" /> and <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureKeyVaultSecretReference" />.
            </param>
        <param name="tenant"> Specify the tenant information (domain name or tenant ID) under which your application resides. Retrieve it by hovering the mouse in the top-right corner of the Azure portal. Type: string (or Expression with resultType string). </param>
        <param name="aadResourceId"> Specify the resource you are requesting authorization. Type: string (or Expression with resultType string). </param>
        <summary> Initializes a new instance of DynamicsAXLinkedService. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uri" />, <paramref name="servicePrincipalId" />, <paramref name="servicePrincipalKey" />, <paramref name="tenant" /> or <paramref name="aadResourceId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AadResourceId">
      <MemberSignature Language="C#" Value="public BinaryData AadResourceId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData AadResourceId" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.DynamicsAXLinkedService.AadResourceId" />
      <MemberSignature Language="VB.NET" Value="Public Property AadResourceId As BinaryData" />
      <MemberSignature Language="F#" Value="member this.AadResourceId : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.DynamicsAXLinkedService.AadResourceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specify the resource you are requesting authorization. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptedCredential">
      <MemberSignature Language="C#" Value="public BinaryData EncryptedCredential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData EncryptedCredential" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.DynamicsAXLinkedService.EncryptedCredential" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptedCredential As BinaryData" />
      <MemberSignature Language="F#" Value="member this.EncryptedCredential : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.DynamicsAXLinkedService.EncryptedCredential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServicePrincipalId">
      <MemberSignature Language="C#" Value="public BinaryData ServicePrincipalId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData ServicePrincipalId" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.DynamicsAXLinkedService.ServicePrincipalId" />
      <MemberSignature Language="VB.NET" Value="Public Property ServicePrincipalId As BinaryData" />
      <MemberSignature Language="F#" Value="member this.ServicePrincipalId : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.DynamicsAXLinkedService.ServicePrincipalId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specify the application's client ID. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServicePrincipalKey">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.DataFactory.Models.FactorySecretBaseDefinition ServicePrincipalKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.DataFactory.Models.FactorySecretBaseDefinition ServicePrincipalKey" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.DynamicsAXLinkedService.ServicePrincipalKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ServicePrincipalKey As FactorySecretBaseDefinition" />
      <MemberSignature Language="F#" Value="member this.ServicePrincipalKey : Azure.ResourceManager.DataFactory.Models.FactorySecretBaseDefinition with get, set" Usage="Azure.ResourceManager.DataFactory.Models.DynamicsAXLinkedService.ServicePrincipalKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.FactorySecretBaseDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specify the application's key. Mark this field as a SecureString to store it securely in Data Factory, or reference a secret stored in Azure Key Vault. Type: string (or Expression with resultType string).
            Please note <see cref="T:Azure.ResourceManager.DataFactory.Models.FactorySecretBaseDefinition" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.DataFactory.Models.FactorySecretString" /> and <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureKeyVaultSecretReference" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tenant">
      <MemberSignature Language="C#" Value="public BinaryData Tenant { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData Tenant" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.DynamicsAXLinkedService.Tenant" />
      <MemberSignature Language="VB.NET" Value="Public Property Tenant As BinaryData" />
      <MemberSignature Language="F#" Value="member this.Tenant : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.DynamicsAXLinkedService.Tenant" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specify the tenant information (domain name or tenant ID) under which your application resides. Retrieve it by hovering the mouse in the top-right corner of the Azure portal. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public BinaryData Uri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData Uri" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.DynamicsAXLinkedService.Uri" />
      <MemberSignature Language="VB.NET" Value="Public Property Uri As BinaryData" />
      <MemberSignature Language="F#" Value="member this.Uri : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.DynamicsAXLinkedService.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The Dynamics AX (or Dynamics 365 Finance and Operations) instance OData endpoint.
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
