<Type Name="UntilActivity" FullName="Azure.ResourceManager.DataFactory.Models.UntilActivity">
  <TypeSignature Language="C#" Value="public class UntilActivity : Azure.ResourceManager.DataFactory.Models.ControlActivity, System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UntilActivity extends Azure.ResourceManager.DataFactory.Models.ControlActivity implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataFactory.Models.UntilActivity" />
  <TypeSignature Language="VB.NET" Value="Public Class UntilActivity&#xA;Inherits ControlActivity&#xA;Implements IJsonModel(Of UntilActivity), IPersistableModel(Of UntilActivity)" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type UntilActivity = class&#xA;    inherit ControlActivity&#xA;    interface IJsonModel&lt;UntilActivity&gt;&#xA;    interface IPersistableModel&lt;UntilActivity&gt;" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public class UntilActivity : Azure.ResourceManager.DataFactory.Models.ControlActivity" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UntilActivity extends Azure.ResourceManager.DataFactory.Models.ControlActivity" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public Class UntilActivity&#xA;Inherits ControlActivity" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type UntilActivity = class&#xA;    inherit ControlActivity" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.DataFactory.Models.ControlActivity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> This activity executes inner activities until the specified boolean expression results to true or timeout is reached, whichever is earlier. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UntilActivity (string name, Azure.ResourceManager.DataFactory.Models.DataFactoryExpression expression, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DataFactory.Models.PipelineActivity&gt; activities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class Azure.ResourceManager.DataFactory.Models.DataFactoryExpression expression, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.DataFactory.Models.PipelineActivity&gt; activities) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.UntilActivity.#ctor(System.String,Azure.ResourceManager.DataFactory.Models.DataFactoryExpression,System.Collections.Generic.IEnumerable{Azure.ResourceManager.DataFactory.Models.PipelineActivity})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, expression As DataFactoryExpression, activities As IEnumerable(Of PipelineActivity))" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.DataFactory.Models.UntilActivity : string * Azure.ResourceManager.DataFactory.Models.DataFactoryExpression * seq&lt;Azure.ResourceManager.DataFactory.Models.PipelineActivity&gt; -&gt; Azure.ResourceManager.DataFactory.Models.UntilActivity" Usage="new Azure.ResourceManager.DataFactory.Models.UntilActivity (name, expression, activities)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expression" Type="Azure.ResourceManager.DataFactory.Models.DataFactoryExpression" />
        <Parameter Name="activities" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DataFactory.Models.PipelineActivity&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> Activity name. </param>
        <param name="expression"> An expression that would evaluate to Boolean. The loop will continue until this expression evaluates to true. </param>
        <param name="activities">
            List of activities to execute.
            Please note <see cref="T:Azure.ResourceManager.DataFactory.Models.PipelineActivity" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.DataFactory.Models.AppendVariableActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureDataExplorerCommandActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureFunctionActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureMLBatchExecutionActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureMLExecutePipelineActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureMLUpdateResourceActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ControlActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.CopyActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.CustomActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.DatabricksNotebookActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.DatabricksSparkJarActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.DatabricksSparkPythonActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.DataLakeAnalyticsUsqlActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.DeleteActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ExecuteDataFlowActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ExecutePipelineActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ExecuteSsisPackageActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ExecuteWranglingDataflowActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ExecutionActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.FailActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.FilterActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ForEachActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.GetDatasetMetadataActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.HDInsightHiveActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.HDInsightMapReduceActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.HDInsightPigActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.HDInsightSparkActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.HDInsightStreamingActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.IfConditionActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.LookupActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.DataFactoryScriptActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.SetVariableActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.SynapseSparkJobDefinitionActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.SqlServerStoredProcedureActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.SwitchActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.SynapseNotebookActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.UntilActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ValidationActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.WaitActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.WebActivity" /> and <see cref="T:Azure.ResourceManager.DataFactory.Models.WebHookActivity" />.
            </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DataFactory.Models.UntilActivity" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" />, <paramref name="expression" /> or <paramref name="activities" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Activities">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.ResourceManager.DataFactory.Models.PipelineActivity&gt; Activities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.ResourceManager.DataFactory.Models.PipelineActivity&gt; Activities" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.UntilActivity.Activities" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Activities As IList(Of PipelineActivity)" />
      <MemberSignature Language="F#" Value="member this.Activities : System.Collections.Generic.IList&lt;Azure.ResourceManager.DataFactory.Models.PipelineActivity&gt;" Usage="Azure.ResourceManager.DataFactory.Models.UntilActivity.Activities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.ResourceManager.DataFactory.Models.PipelineActivity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            List of activities to execute.
            Please note <see cref="T:Azure.ResourceManager.DataFactory.Models.PipelineActivity" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.DataFactory.Models.AppendVariableActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureDataExplorerCommandActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureFunctionActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureMLBatchExecutionActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureMLExecutePipelineActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureMLUpdateResourceActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ControlActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.CopyActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.CustomActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.DatabricksNotebookActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.DatabricksSparkJarActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.DatabricksSparkPythonActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.DataLakeAnalyticsUsqlActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.DeleteActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ExecuteDataFlowActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ExecutePipelineActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ExecuteSsisPackageActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ExecuteWranglingDataflowActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ExecutionActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.FailActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.FilterActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ForEachActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.GetDatasetMetadataActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.HDInsightHiveActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.HDInsightMapReduceActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.HDInsightPigActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.HDInsightSparkActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.HDInsightStreamingActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.IfConditionActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.LookupActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.DataFactoryScriptActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.SetVariableActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.SynapseSparkJobDefinitionActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.SqlServerStoredProcedureActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.SwitchActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.SynapseNotebookActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.UntilActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.ValidationActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.WaitActivity" />, <see cref="T:Azure.ResourceManager.DataFactory.Models.WebActivity" /> and <see cref="T:Azure.ResourceManager.DataFactory.Models.WebHookActivity" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.DataFactory.Models.DataFactoryExpression Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.DataFactory.Models.DataFactoryExpression Expression" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.UntilActivity.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As DataFactoryExpression" />
      <MemberSignature Language="F#" Value="member this.Expression : Azure.ResourceManager.DataFactory.Models.DataFactoryExpression with get, set" Usage="Azure.ResourceManager.DataFactory.Models.UntilActivity.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.DataFactoryExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> An expression that would evaluate to Boolean. The loop will continue until this expression evaluates to true. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.DataFactory.Models.UntilActivity IJsonModel&lt;UntilActivity&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.DataFactory.Models.UntilActivity System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.UntilActivity.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#DataFactory#Models#UntilActivity&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As UntilActivity Implements IJsonModel(Of UntilActivity).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataFactory.Models.UntilActivity&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataFactory.Models.UntilActivity" Usage="untilActivity.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.UntilActivity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;UntilActivity&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.UntilActivity.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#DataFactory#Models#UntilActivity&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of UntilActivity).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="untilActivity.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.DataFactory.Models.UntilActivity IPersistableModel&lt;UntilActivity&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.DataFactory.Models.UntilActivity System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.UntilActivity.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#DataFactory#Models#UntilActivity&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As UntilActivity Implements IPersistableModel(Of UntilActivity).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataFactory.Models.UntilActivity&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.DataFactory.Models.UntilActivity" Usage="untilActivity.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.UntilActivity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;UntilActivity&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.UntilActivity.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#DataFactory#Models#UntilActivity&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of UntilActivity).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="untilActivity.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;UntilActivity&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.UntilActivity.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#DataFactory#Models#UntilActivity&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of UntilActivity).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="untilActivity.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.DataFactory.Models.UntilActivity&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;string&gt; Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Expressions.DataFactory.DataFactoryElement`1&lt;string&gt; Timeout" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.UntilActivity.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As DataFactoryElement(Of String)" />
      <MemberSignature Language="F#" Value="member this.Timeout : Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;string&gt; with get, set" Usage="Azure.ResourceManager.DataFactory.Models.UntilActivity.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Specifies the timeout for the activity to run. If there is no value specified, it takes the value of TimeSpan.FromDays(7) which is 1 week as default. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
