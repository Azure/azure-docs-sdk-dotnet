<Type Name="SapOpenHubSource" FullName="Azure.ResourceManager.DataFactory.Models.SapOpenHubSource">
  <TypeSignature Language="C#" Value="public class SapOpenHubSource : Azure.ResourceManager.DataFactory.Models.TabularSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SapOpenHubSource extends Azure.ResourceManager.DataFactory.Models.TabularSource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataFactory.Models.SapOpenHubSource" />
  <TypeSignature Language="VB.NET" Value="Public Class SapOpenHubSource&#xA;Inherits TabularSource" />
  <TypeSignature Language="F#" Value="type SapOpenHubSource = class&#xA;    inherit TabularSource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.DataFactory.Models.TabularSource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A copy activity source for SAP Business Warehouse Open Hub Destination source. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SapOpenHubSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.SapOpenHubSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of SapOpenHubSource. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseRequestId">
      <MemberSignature Language="C#" Value="public BinaryData BaseRequestId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData BaseRequestId" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SapOpenHubSource.BaseRequestId" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseRequestId As BinaryData" />
      <MemberSignature Language="F#" Value="member this.BaseRequestId : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SapOpenHubSource.BaseRequestId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The ID of request for delta loading. Once it is set, only data with requestId larger than the value of this property will be retrieved. The default value is 0. Type: integer (or Expression with resultType integer ).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomRfcReadTableFunctionModule">
      <MemberSignature Language="C#" Value="public BinaryData CustomRfcReadTableFunctionModule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData CustomRfcReadTableFunctionModule" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SapOpenHubSource.CustomRfcReadTableFunctionModule" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomRfcReadTableFunctionModule As BinaryData" />
      <MemberSignature Language="F#" Value="member this.CustomRfcReadTableFunctionModule : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SapOpenHubSource.CustomRfcReadTableFunctionModule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specifies the custom RFC function module that will be used to read data from SAP Table. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExcludeLastRequest">
      <MemberSignature Language="C#" Value="public BinaryData ExcludeLastRequest { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData ExcludeLastRequest" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SapOpenHubSource.ExcludeLastRequest" />
      <MemberSignature Language="VB.NET" Value="Public Property ExcludeLastRequest As BinaryData" />
      <MemberSignature Language="F#" Value="member this.ExcludeLastRequest : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SapOpenHubSource.ExcludeLastRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether to exclude the records of the last request. The default value is true. Type: boolean (or Expression with resultType boolean).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SapDataColumnDelimiter">
      <MemberSignature Language="C#" Value="public BinaryData SapDataColumnDelimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData SapDataColumnDelimiter" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SapOpenHubSource.SapDataColumnDelimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property SapDataColumnDelimiter As BinaryData" />
      <MemberSignature Language="F#" Value="member this.SapDataColumnDelimiter : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SapOpenHubSource.SapDataColumnDelimiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The single character that will be used as delimiter passed to SAP RFC as well as splitting the output data retrieved. Type: string (or Expression with resultType string).
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
