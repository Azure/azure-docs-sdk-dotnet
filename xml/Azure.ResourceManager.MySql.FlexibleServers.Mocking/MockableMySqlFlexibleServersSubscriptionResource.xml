<Type Name="MockableMySqlFlexibleServersSubscriptionResource" FullName="Azure.ResourceManager.MySql.FlexibleServers.Mocking.MockableMySqlFlexibleServersSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableMySqlFlexibleServersSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableMySqlFlexibleServersSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.MySql.FlexibleServers.Mocking.MockableMySqlFlexibleServersSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableMySqlFlexibleServersSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableMySqlFlexibleServersSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.MySql</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableMySqlFlexibleServersSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MySql.FlexibleServers.Mocking.MockableMySqlFlexibleServersSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MySql</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Mocking.MockableMySqlFlexibleServersSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckMySqlFlexibleServerNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityResult&gt; CheckMySqlFlexibleServerNameAvailability (Azure.Core.AzureLocation locationName, Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityResult&gt; CheckMySqlFlexibleServerNameAvailability(valuetype Azure.Core.AzureLocation locationName, class Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MySql.FlexibleServers.Mocking.MockableMySqlFlexibleServersSubscriptionResource.CheckMySqlFlexibleServerNameAvailability(Azure.Core.AzureLocation,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckMySqlFlexibleServerNameAvailability (locationName As AzureLocation, content As MySqlFlexibleServerNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MySqlFlexibleServerNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckMySqlFlexibleServerNameAvailability : Azure.Core.AzureLocation * Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityResult&gt;&#xA;override this.CheckMySqlFlexibleServerNameAvailability : Azure.Core.AzureLocation * Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityResult&gt;" Usage="mockableMySqlFlexibleServersSubscriptionResource.CheckMySqlFlexibleServerNameAvailability (locationName, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MySql</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> The name of the location. </param>
        <param name="content"> The required parameters for checking if server name is available. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check the availability of name for server
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/checkNameAvailability</description></item><item><term>Operation Id</term><description>CheckNameAvailability_Execute</description></item><item><term>Default Api Version</term><description>2023-12-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckMySqlFlexibleServerNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityResult&gt;&gt; CheckMySqlFlexibleServerNameAvailabilityAsync (Azure.Core.AzureLocation locationName, Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityResult&gt;&gt; CheckMySqlFlexibleServerNameAvailabilityAsync(valuetype Azure.Core.AzureLocation locationName, class Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MySql.FlexibleServers.Mocking.MockableMySqlFlexibleServersSubscriptionResource.CheckMySqlFlexibleServerNameAvailabilityAsync(Azure.Core.AzureLocation,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckMySqlFlexibleServerNameAvailabilityAsync (locationName As AzureLocation, content As MySqlFlexibleServerNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MySqlFlexibleServerNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckMySqlFlexibleServerNameAvailabilityAsync : Azure.Core.AzureLocation * Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityResult&gt;&gt;&#xA;override this.CheckMySqlFlexibleServerNameAvailabilityAsync : Azure.Core.AzureLocation * Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityResult&gt;&gt;" Usage="mockableMySqlFlexibleServersSubscriptionResource.CheckMySqlFlexibleServerNameAvailabilityAsync (locationName, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MySql</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> The name of the location. </param>
        <param name="content"> The required parameters for checking if server name is available. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check the availability of name for server
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/checkNameAvailability</description></item><item><term>Operation Id</term><description>CheckNameAvailability_Execute</description></item><item><term>Default Api Version</term><description>2023-12-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckMySqlFlexibleServerNameAvailabilityWithoutLocation">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityResult&gt; CheckMySqlFlexibleServerNameAvailabilityWithoutLocation (Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityResult&gt; CheckMySqlFlexibleServerNameAvailabilityWithoutLocation(class Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MySql.FlexibleServers.Mocking.MockableMySqlFlexibleServersSubscriptionResource.CheckMySqlFlexibleServerNameAvailabilityWithoutLocation(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckMySqlFlexibleServerNameAvailabilityWithoutLocation (content As MySqlFlexibleServerNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MySqlFlexibleServerNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckMySqlFlexibleServerNameAvailabilityWithoutLocation : Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityResult&gt;&#xA;override this.CheckMySqlFlexibleServerNameAvailabilityWithoutLocation : Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityResult&gt;" Usage="mockableMySqlFlexibleServersSubscriptionResource.CheckMySqlFlexibleServerNameAvailabilityWithoutLocation (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MySql</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The required parameters for checking if server name is available. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check the availability of name for server
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/checkNameAvailability</description></item><item><term>Operation Id</term><description>CheckNameAvailabilityWithoutLocation_Execute</description></item><item><term>Default Api Version</term><description>2023-12-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckMySqlFlexibleServerNameAvailabilityWithoutLocationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityResult&gt;&gt; CheckMySqlFlexibleServerNameAvailabilityWithoutLocationAsync (Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityResult&gt;&gt; CheckMySqlFlexibleServerNameAvailabilityWithoutLocationAsync(class Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MySql.FlexibleServers.Mocking.MockableMySqlFlexibleServersSubscriptionResource.CheckMySqlFlexibleServerNameAvailabilityWithoutLocationAsync(Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckMySqlFlexibleServerNameAvailabilityWithoutLocationAsync (content As MySqlFlexibleServerNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MySqlFlexibleServerNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckMySqlFlexibleServerNameAvailabilityWithoutLocationAsync : Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityResult&gt;&gt;&#xA;override this.CheckMySqlFlexibleServerNameAvailabilityWithoutLocationAsync : Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityResult&gt;&gt;" Usage="mockableMySqlFlexibleServersSubscriptionResource.CheckMySqlFlexibleServerNameAvailabilityWithoutLocationAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MySql</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The required parameters for checking if server name is available. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check the availability of name for server
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/checkNameAvailability</description></item><item><term>Operation Id</term><description>CheckNameAvailabilityWithoutLocation_Execute</description></item><item><term>Default Api Version</term><description>2023-12-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteCheckVirtualNetworkSubnetUsage">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageResult&gt; ExecuteCheckVirtualNetworkSubnetUsage (Azure.Core.AzureLocation locationName, Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageParameter mySqlFlexibleServerVirtualNetworkSubnetUsageParameter, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageResult&gt; ExecuteCheckVirtualNetworkSubnetUsage(valuetype Azure.Core.AzureLocation locationName, class Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageParameter mySqlFlexibleServerVirtualNetworkSubnetUsageParameter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MySql.FlexibleServers.Mocking.MockableMySqlFlexibleServersSubscriptionResource.ExecuteCheckVirtualNetworkSubnetUsage(Azure.Core.AzureLocation,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageParameter,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecuteCheckVirtualNetworkSubnetUsage (locationName As AzureLocation, mySqlFlexibleServerVirtualNetworkSubnetUsageParameter As MySqlFlexibleServerVirtualNetworkSubnetUsageParameter, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MySqlFlexibleServerVirtualNetworkSubnetUsageResult)" />
      <MemberSignature Language="F#" Value="abstract member ExecuteCheckVirtualNetworkSubnetUsage : Azure.Core.AzureLocation * Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageParameter * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageResult&gt;&#xA;override this.ExecuteCheckVirtualNetworkSubnetUsage : Azure.Core.AzureLocation * Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageParameter * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageResult&gt;" Usage="mockableMySqlFlexibleServersSubscriptionResource.ExecuteCheckVirtualNetworkSubnetUsage (locationName, mySqlFlexibleServerVirtualNetworkSubnetUsageParameter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MySql</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="mySqlFlexibleServerVirtualNetworkSubnetUsageParameter" Type="Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageParameter" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> The name of the location. </param>
        <param name="mySqlFlexibleServerVirtualNetworkSubnetUsageParameter"> The required parameters for creating or updating a server. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get virtual network subnet usage for a given vNet resource id.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/checkVirtualNetworkSubnetUsage</description></item><item><term>Operation Id</term><description>CheckVirtualNetworkSubnetUsage_Execute</description></item><item><term>Default Api Version</term><description>2023-12-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="mySqlFlexibleServerVirtualNetworkSubnetUsageParameter" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteCheckVirtualNetworkSubnetUsageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageResult&gt;&gt; ExecuteCheckVirtualNetworkSubnetUsageAsync (Azure.Core.AzureLocation locationName, Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageParameter mySqlFlexibleServerVirtualNetworkSubnetUsageParameter, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageResult&gt;&gt; ExecuteCheckVirtualNetworkSubnetUsageAsync(valuetype Azure.Core.AzureLocation locationName, class Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageParameter mySqlFlexibleServerVirtualNetworkSubnetUsageParameter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MySql.FlexibleServers.Mocking.MockableMySqlFlexibleServersSubscriptionResource.ExecuteCheckVirtualNetworkSubnetUsageAsync(Azure.Core.AzureLocation,Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageParameter,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecuteCheckVirtualNetworkSubnetUsageAsync (locationName As AzureLocation, mySqlFlexibleServerVirtualNetworkSubnetUsageParameter As MySqlFlexibleServerVirtualNetworkSubnetUsageParameter, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MySqlFlexibleServerVirtualNetworkSubnetUsageResult))" />
      <MemberSignature Language="F#" Value="abstract member ExecuteCheckVirtualNetworkSubnetUsageAsync : Azure.Core.AzureLocation * Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageParameter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageResult&gt;&gt;&#xA;override this.ExecuteCheckVirtualNetworkSubnetUsageAsync : Azure.Core.AzureLocation * Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageParameter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageResult&gt;&gt;" Usage="mockableMySqlFlexibleServersSubscriptionResource.ExecuteCheckVirtualNetworkSubnetUsageAsync (locationName, mySqlFlexibleServerVirtualNetworkSubnetUsageParameter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MySql</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="mySqlFlexibleServerVirtualNetworkSubnetUsageParameter" Type="Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerVirtualNetworkSubnetUsageParameter" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> The name of the location. </param>
        <param name="mySqlFlexibleServerVirtualNetworkSubnetUsageParameter"> The required parameters for creating or updating a server. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get virtual network subnet usage for a given vNet resource id.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/checkVirtualNetworkSubnetUsage</description></item><item><term>Operation Id</term><description>CheckVirtualNetworkSubnetUsage_Execute</description></item><item><term>Default Api Version</term><description>2023-12-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="mySqlFlexibleServerVirtualNetworkSubnetUsageParameter" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLocationBasedCapabilities">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCapabilityProperties&gt; GetLocationBasedCapabilities (Azure.Core.AzureLocation locationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCapabilityProperties&gt; GetLocationBasedCapabilities(valuetype Azure.Core.AzureLocation locationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MySql.FlexibleServers.Mocking.MockableMySqlFlexibleServersSubscriptionResource.GetLocationBasedCapabilities(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLocationBasedCapabilities (locationName As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of MySqlFlexibleServerCapabilityProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetLocationBasedCapabilities : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCapabilityProperties&gt;&#xA;override this.GetLocationBasedCapabilities : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCapabilityProperties&gt;" Usage="mockableMySqlFlexibleServersSubscriptionResource.GetLocationBasedCapabilities (locationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MySql</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCapabilityProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> The name of the location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get capabilities at specified location in a given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/capabilities</description></item><item><term>Operation Id</term><description>LocationBasedCapabilities_List</description></item><item><term>Default Api Version</term><description>2023-12-01-preview</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCapabilityProperties" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocationBasedCapabilitiesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCapabilityProperties&gt; GetLocationBasedCapabilitiesAsync (Azure.Core.AzureLocation locationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCapabilityProperties&gt; GetLocationBasedCapabilitiesAsync(valuetype Azure.Core.AzureLocation locationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MySql.FlexibleServers.Mocking.MockableMySqlFlexibleServersSubscriptionResource.GetLocationBasedCapabilitiesAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLocationBasedCapabilitiesAsync (locationName As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of MySqlFlexibleServerCapabilityProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetLocationBasedCapabilitiesAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCapabilityProperties&gt;&#xA;override this.GetLocationBasedCapabilitiesAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCapabilityProperties&gt;" Usage="mockableMySqlFlexibleServersSubscriptionResource.GetLocationBasedCapabilitiesAsync (locationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MySql</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCapabilityProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> The name of the location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get capabilities at specified location in a given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/capabilities</description></item><item><term>Operation Id</term><description>LocationBasedCapabilities_List</description></item><item><term>Default Api Version</term><description>2023-12-01-preview</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.Models.MySqlFlexibleServerCapabilityProperties" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMySqlFlexibleServers">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource&gt; GetMySqlFlexibleServers (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource&gt; GetMySqlFlexibleServers(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MySql.FlexibleServers.Mocking.MockableMySqlFlexibleServersSubscriptionResource.GetMySqlFlexibleServers(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMySqlFlexibleServers (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of MySqlFlexibleServerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetMySqlFlexibleServers : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource&gt;&#xA;override this.GetMySqlFlexibleServers : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource&gt;" Usage="mockableMySqlFlexibleServersSubscriptionResource.GetMySqlFlexibleServers cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MySql</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the servers in a given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/flexibleServers</description></item><item><term>Operation Id</term><description>Servers_List</description></item><item><term>Default Api Version</term><description>2023-12-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMySqlFlexibleServersAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource&gt; GetMySqlFlexibleServersAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource&gt; GetMySqlFlexibleServersAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MySql.FlexibleServers.Mocking.MockableMySqlFlexibleServersSubscriptionResource.GetMySqlFlexibleServersAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMySqlFlexibleServersAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of MySqlFlexibleServerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetMySqlFlexibleServersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource&gt;&#xA;override this.GetMySqlFlexibleServersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource&gt;" Usage="mockableMySqlFlexibleServersSubscriptionResource.GetMySqlFlexibleServersAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MySql</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the servers in a given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/flexibleServers</description></item><item><term>Operation Id</term><description>Servers_List</description></item><item><term>Default Api Version</term><description>2023-12-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServerResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMySqlFlexibleServersCapabilities">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServersCapabilityCollection GetMySqlFlexibleServersCapabilities (Azure.Core.AzureLocation locationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServersCapabilityCollection GetMySqlFlexibleServersCapabilities(valuetype Azure.Core.AzureLocation locationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MySql.FlexibleServers.Mocking.MockableMySqlFlexibleServersSubscriptionResource.GetMySqlFlexibleServersCapabilities(Azure.Core.AzureLocation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMySqlFlexibleServersCapabilities (locationName As AzureLocation) As MySqlFlexibleServersCapabilityCollection" />
      <MemberSignature Language="F#" Value="abstract member GetMySqlFlexibleServersCapabilities : Azure.Core.AzureLocation -&gt; Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServersCapabilityCollection&#xA;override this.GetMySqlFlexibleServersCapabilities : Azure.Core.AzureLocation -&gt; Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServersCapabilityCollection" Usage="mockableMySqlFlexibleServersSubscriptionResource.GetMySqlFlexibleServersCapabilities locationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MySql</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServersCapabilityCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
      </Parameters>
      <Docs>
        <param name="locationName"> The name of the location. </param>
        <summary> Gets a collection of MySqlFlexibleServersCapabilityResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of MySqlFlexibleServersCapabilityResources and their operations over a MySqlFlexibleServersCapabilityResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMySqlFlexibleServersCapability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServersCapabilityResource&gt; GetMySqlFlexibleServersCapability (Azure.Core.AzureLocation locationName, string capabilitySetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServersCapabilityResource&gt; GetMySqlFlexibleServersCapability(valuetype Azure.Core.AzureLocation locationName, string capabilitySetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MySql.FlexibleServers.Mocking.MockableMySqlFlexibleServersSubscriptionResource.GetMySqlFlexibleServersCapability(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMySqlFlexibleServersCapability (locationName As AzureLocation, capabilitySetName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MySqlFlexibleServersCapabilityResource)" />
      <MemberSignature Language="F#" Value="abstract member GetMySqlFlexibleServersCapability : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServersCapabilityResource&gt;&#xA;override this.GetMySqlFlexibleServersCapability : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServersCapabilityResource&gt;" Usage="mockableMySqlFlexibleServersSubscriptionResource.GetMySqlFlexibleServersCapability (locationName, capabilitySetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MySql</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServersCapabilityResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="capabilitySetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> The name of the location. </param>
        <param name="capabilitySetName"> Name of capability set. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get capabilities at specified location in a given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/capabilitySets/{capabilitySetName}</description></item><item><term>Operation Id</term><description>LocationBasedCapabilitySet_Get</description></item><item><term>Default Api Version</term><description>2023-12-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServersCapabilityResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="capabilitySetName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="capabilitySetName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMySqlFlexibleServersCapabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServersCapabilityResource&gt;&gt; GetMySqlFlexibleServersCapabilityAsync (Azure.Core.AzureLocation locationName, string capabilitySetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServersCapabilityResource&gt;&gt; GetMySqlFlexibleServersCapabilityAsync(valuetype Azure.Core.AzureLocation locationName, string capabilitySetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MySql.FlexibleServers.Mocking.MockableMySqlFlexibleServersSubscriptionResource.GetMySqlFlexibleServersCapabilityAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMySqlFlexibleServersCapabilityAsync (locationName As AzureLocation, capabilitySetName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MySqlFlexibleServersCapabilityResource))" />
      <MemberSignature Language="F#" Value="abstract member GetMySqlFlexibleServersCapabilityAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServersCapabilityResource&gt;&gt;&#xA;override this.GetMySqlFlexibleServersCapabilityAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServersCapabilityResource&gt;&gt;" Usage="mockableMySqlFlexibleServersSubscriptionResource.GetMySqlFlexibleServersCapabilityAsync (locationName, capabilitySetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MySql</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServersCapabilityResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="capabilitySetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> The name of the location. </param>
        <param name="capabilitySetName"> Name of capability set. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get capabilities at specified location in a given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/capabilitySets/{capabilitySetName}</description></item><item><term>Operation Id</term><description>LocationBasedCapabilitySet_Get</description></item><item><term>Default Api Version</term><description>2023-12-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.MySql.FlexibleServers.MySqlFlexibleServersCapabilityResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="capabilitySetName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="capabilitySetName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetOperationResult">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.OperationStatusExtendedResult&gt; GetOperationResult (Azure.Core.AzureLocation locationName, string operationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.MySql.FlexibleServers.Models.OperationStatusExtendedResult&gt; GetOperationResult(valuetype Azure.Core.AzureLocation locationName, string operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MySql.FlexibleServers.Mocking.MockableMySqlFlexibleServersSubscriptionResource.GetOperationResult(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOperationResult (locationName As AzureLocation, operationId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of OperationStatusExtendedResult)" />
      <MemberSignature Language="F#" Value="abstract member GetOperationResult : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.OperationStatusExtendedResult&gt;&#xA;override this.GetOperationResult : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.OperationStatusExtendedResult&gt;" Usage="mockableMySqlFlexibleServersSubscriptionResource.GetOperationResult (locationName, operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MySql</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.OperationStatusExtendedResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> The name of the location. </param>
        <param name="operationId"> The operation Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the operation result for a long running operation.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/operationResults/{operationId}</description></item><item><term>Operation Id</term><description>OperationResults_Get</description></item><item><term>Default Api Version</term><description>2023-12-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="operationId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="operationId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetOperationResultAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.OperationStatusExtendedResult&gt;&gt; GetOperationResultAsync (Azure.Core.AzureLocation locationName, string operationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.MySql.FlexibleServers.Models.OperationStatusExtendedResult&gt;&gt; GetOperationResultAsync(valuetype Azure.Core.AzureLocation locationName, string operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MySql.FlexibleServers.Mocking.MockableMySqlFlexibleServersSubscriptionResource.GetOperationResultAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOperationResultAsync (locationName As AzureLocation, operationId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of OperationStatusExtendedResult))" />
      <MemberSignature Language="F#" Value="abstract member GetOperationResultAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.OperationStatusExtendedResult&gt;&gt;&#xA;override this.GetOperationResultAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.OperationStatusExtendedResult&gt;&gt;" Usage="mockableMySqlFlexibleServersSubscriptionResource.GetOperationResultAsync (locationName, operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MySql</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MySql.FlexibleServers.Models.OperationStatusExtendedResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="Azure.Core.AzureLocation" />
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="locationName"> The name of the location. </param>
        <param name="operationId"> The operation Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the operation result for a long running operation.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/locations/{locationName}/operationResults/{operationId}</description></item><item><term>Operation Id</term><description>OperationResults_Get</description></item><item><term>Default Api Version</term><description>2023-12-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="operationId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="operationId" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
