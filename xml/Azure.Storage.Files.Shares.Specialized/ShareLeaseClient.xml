<Type Name="ShareLeaseClient" FullName="Azure.Storage.Files.Shares.Specialized.ShareLeaseClient">
  <TypeSignature Language="C#" Value="public class ShareLeaseClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ShareLeaseClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient" />
  <TypeSignature Language="VB.NET" Value="Public Class ShareLeaseClient" />
  <TypeSignature Language="F#" Value="type ShareLeaseClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
    <AssemblyVersion>12.1.0.0</AssemblyVersion>
    <AssemblyVersion>12.2.0.0</AssemblyVersion>
    <AssemblyVersion>12.2.1.0</AssemblyVersion>
    <AssemblyVersion>12.2.2.0</AssemblyVersion>
    <AssemblyVersion>12.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The <see cref="T:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient" /> allows you to manipulate Azure
            Storage leases on files.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ShareLeaseClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient" /> class
            for mocking.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ShareLeaseClient (Azure.Storage.Files.Shares.ShareFileClient client, string leaseId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.Storage.Files.Shares.ShareFileClient client, string leaseId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.#ctor(Azure.Storage.Files.Shares.ShareFileClient,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (client As ShareFileClient, Optional leaseId As String = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.Shares.Specialized.ShareLeaseClient : Azure.Storage.Files.Shares.ShareFileClient * string -&gt; Azure.Storage.Files.Shares.Specialized.ShareLeaseClient" Usage="new Azure.Storage.Files.Shares.Specialized.ShareLeaseClient (client, leaseId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="client" Type="Azure.Storage.Files.Shares.ShareFileClient" />
        <Parameter Name="leaseId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="client">
            A <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" /> representing the file being leased.
            </param>
        <param name="leaseId">
            An optional lease ID.  If no lease ID is provided, a random lease
            ID will be created.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Acquire">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareFileLease&gt; Acquire (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.Shares.Models.ShareFileLease&gt; Acquire(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Acquire(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Acquire (Optional cancellationToken As CancellationToken = Nothing) As Response(Of ShareFileLease)" />
      <MemberSignature Language="F#" Value="abstract member Acquire : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareFileLease&gt;&#xA;override this.Acquire : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareFileLease&gt;" Usage="shareLeaseClient.Acquire cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareFileLease&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Acquire(System.Threading.CancellationToken)" /> operation acquires a lease on
             the file.
            
             If the file does not have an active lease, the File service
             creates a lease on the file and returns it.  If the
             file has an active lease, you can only request a new lease
             using the active lease ID as <see cref="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.LeaseId" /></summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the lease.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcquireAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareFileLease&gt;&gt; AcquireAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.Shares.Models.ShareFileLease&gt;&gt; AcquireAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.AcquireAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AcquireAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ShareFileLease))" />
      <MemberSignature Language="F#" Value="abstract member AcquireAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareFileLease&gt;&gt;&#xA;override this.AcquireAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareFileLease&gt;&gt;" Usage="shareLeaseClient.AcquireAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareFileLease&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.AcquireAsync(System.Threading.CancellationToken)" /> operation acquires a lease on
             the file.
            
             If the file does not have an active lease, the File service
             creates a lease on the file and returns it.  If the
             file has an active lease, you can only request a new lease
             using the active lease ID as <see cref="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.LeaseId" />.
            
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the lease.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Break">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareFileLease&gt; Break (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.Shares.Models.ShareFileLease&gt; Break(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Break(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Break (Optional cancellationToken As CancellationToken = Nothing) As Response(Of ShareFileLease)" />
      <MemberSignature Language="F#" Value="abstract member Break : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareFileLease&gt;&#xA;override this.Break : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareFileLease&gt;" Usage="shareLeaseClient.Break cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareFileLease&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Break(System.Threading.CancellationToken)" /> operation breaks the files's
             previously-acquired lease (if it exists).
            
             Once a lease is broken, it cannot be renewed.  Any authorized
             request can break the lease; the request is not required to
             specify a matching lease ID.
            
             A lease that has been broken can also be released.  A client can
             immediately acquire a file lease that has been
             released.
            
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the broken lease.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareFileLease&gt;&gt; BreakAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.Shares.Models.ShareFileLease&gt;&gt; BreakAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.BreakAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BreakAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ShareFileLease))" />
      <MemberSignature Language="F#" Value="abstract member BreakAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareFileLease&gt;&gt;&#xA;override this.BreakAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareFileLease&gt;&gt;" Usage="shareLeaseClient.BreakAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareFileLease&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.BreakAsync(System.Threading.CancellationToken)" /> operation breaks the files's
             previously-acquired lease (if it exists).
            
             Once a lease is broken, it cannot be renewed.  Any authorized
             request can break the lease; the request is not required to
             specify a matching lease ID.
            
             A lease that has been broken can also be released.  A client can
             immediately acquire a file lease that has been
             released.
            
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the broken lease.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Change">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareFileLease&gt; Change (string proposedId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.Shares.Models.ShareFileLease&gt; Change(string proposedId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Change(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Change (proposedId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ShareFileLease)" />
      <MemberSignature Language="F#" Value="abstract member Change : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareFileLease&gt;&#xA;override this.Change : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareFileLease&gt;" Usage="shareLeaseClient.Change (proposedId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareFileLease&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="proposedId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="proposedId">
             An optional proposed lease ID, in a GUID string format. A
             <see cref="T:Azure.RequestFailedException" /> will be thrown if the
             proposed lease ID is not in the correct format.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Change(System.String,System.Threading.CancellationToken)" /> operation changes the lease
             of an active lease.  A change must include the current
             <see cref="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.LeaseId" /> and a new <paramref name="proposedId" />.
            
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the lease.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareFileLease&gt;&gt; ChangeAsync (string proposedId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.Shares.Models.ShareFileLease&gt;&gt; ChangeAsync(string proposedId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.ChangeAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ChangeAsync (proposedId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ShareFileLease))" />
      <MemberSignature Language="F#" Value="abstract member ChangeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareFileLease&gt;&gt;&#xA;override this.ChangeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareFileLease&gt;&gt;" Usage="shareLeaseClient.ChangeAsync (proposedId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareFileLease&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="proposedId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="proposedId">
             An optional proposed lease ID, in a GUID string format. A
             <see cref="T:Azure.RequestFailedException" /> will be thrown if the
             proposed lease ID is not in the correct format.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.ChangeAsync(System.String,System.Threading.CancellationToken)" /> operation changes the lease
             of an active lease.  A change must include the current
             <see cref="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.LeaseId" /> and a new <paramref name="proposedId" />.
            
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the lease.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileClient">
      <MemberSignature Language="C#" Value="protected virtual Azure.Storage.Files.Shares.ShareFileClient FileClient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Storage.Files.Shares.ShareFileClient FileClient" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.FileClient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property FileClient As ShareFileClient" />
      <MemberSignature Language="F#" Value="member this.FileClient : Azure.Storage.Files.Shares.ShareFileClient" Usage="Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.FileClient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Files.Shares.ShareFileClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" /> to manage leases for.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeaseId">
      <MemberSignature Language="C#" Value="public string LeaseId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LeaseId" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.LeaseId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LeaseId As String" />
      <MemberSignature Language="F#" Value="member this.LeaseId : string" Usage="Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.LeaseId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Lease ID for this lease.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.Shares.Models.FileLeaseReleaseInfo&gt; Release (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.Shares.Models.FileLeaseReleaseInfo&gt; Release(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Release(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Release (Optional cancellationToken As CancellationToken = Nothing) As Response(Of FileLeaseReleaseInfo)" />
      <MemberSignature Language="F#" Value="abstract member Release : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Shares.Models.FileLeaseReleaseInfo&gt;&#xA;override this.Release : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Shares.Models.FileLeaseReleaseInfo&gt;" Usage="shareLeaseClient.Release cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.Shares.Models.FileLeaseReleaseInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Release(System.Threading.CancellationToken)" /> operation releases the
             files's previously-acquired lease.
            
             The lease may be released if the <see cref="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.LeaseId" />
             matches that associated with the file.  Releasing the
             lease allows another client to immediately acquire the lease for the
             file as soon as the release is complete.
            
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             updated blob or container.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.FileLeaseReleaseInfo&gt;&gt; ReleaseAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.Shares.Models.FileLeaseReleaseInfo&gt;&gt; ReleaseAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.ReleaseAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReleaseAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of FileLeaseReleaseInfo))" />
      <MemberSignature Language="F#" Value="abstract member ReleaseAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.FileLeaseReleaseInfo&gt;&gt;&#xA;override this.ReleaseAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.FileLeaseReleaseInfo&gt;&gt;" Usage="shareLeaseClient.ReleaseAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.FileLeaseReleaseInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.ReleaseAsync(System.Threading.CancellationToken)" /> operation releases the
             files's previously-acquired lease.
            
             The lease may be released if the <see cref="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.LeaseId" />
             matches that associated with the file.  Releasing the
             lease allows another client to immediately acquire the lease for the
             file as soon as the release is complete.
            
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             updated file.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public Uri Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Uri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Uri As Uri" />
      <MemberSignature Language="F#" Value="member this.Uri : Uri" Usage="Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the URI of the object being leased.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
