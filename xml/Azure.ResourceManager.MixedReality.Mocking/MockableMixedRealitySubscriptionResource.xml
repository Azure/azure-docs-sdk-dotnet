<Type Name="MockableMixedRealitySubscriptionResource" FullName="Azure.ResourceManager.MixedReality.Mocking.MockableMixedRealitySubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableMixedRealitySubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableMixedRealitySubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.MixedReality.Mocking.MockableMixedRealitySubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableMixedRealitySubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableMixedRealitySubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.MixedReality</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableMixedRealitySubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MixedReality.Mocking.MockableMixedRealitySubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MixedReality</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MixedReality.Mocking.MockableMixedRealitySubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckMixedRealityNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.MixedReality.Models.MixedRealityNameAvailabilityResult&gt; CheckMixedRealityNameAvailability (Azure.Core.AzureLocation location, Azure.ResourceManager.MixedReality.Models.MixedRealityNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.MixedReality.Models.MixedRealityNameAvailabilityResult&gt; CheckMixedRealityNameAvailability(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.MixedReality.Models.MixedRealityNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MixedReality.Mocking.MockableMixedRealitySubscriptionResource.CheckMixedRealityNameAvailability(Azure.Core.AzureLocation,Azure.ResourceManager.MixedReality.Models.MixedRealityNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckMixedRealityNameAvailability (location As AzureLocation, content As MixedRealityNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MixedRealityNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckMixedRealityNameAvailability : Azure.Core.AzureLocation * Azure.ResourceManager.MixedReality.Models.MixedRealityNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.MixedReality.Models.MixedRealityNameAvailabilityResult&gt;&#xA;override this.CheckMixedRealityNameAvailability : Azure.Core.AzureLocation * Azure.ResourceManager.MixedReality.Models.MixedRealityNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.MixedReality.Models.MixedRealityNameAvailabilityResult&gt;" Usage="mockableMixedRealitySubscriptionResource.CheckMixedRealityNameAvailability (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MixedReality</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.MixedReality.Models.MixedRealityNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.MixedReality.Models.MixedRealityNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location in which uniqueness will be verified. </param>
        <param name="content"> Check Name Availability Request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check Name Availability for local uniqueness
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.MixedReality/locations/{location}/checkNameAvailability</description></item><item><term>Operation Id</term><description>CheckNameAvailabilityLocal</description></item><item><term>Default Api Version</term><description>2021-01-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckMixedRealityNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MixedReality.Models.MixedRealityNameAvailabilityResult&gt;&gt; CheckMixedRealityNameAvailabilityAsync (Azure.Core.AzureLocation location, Azure.ResourceManager.MixedReality.Models.MixedRealityNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.MixedReality.Models.MixedRealityNameAvailabilityResult&gt;&gt; CheckMixedRealityNameAvailabilityAsync(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.MixedReality.Models.MixedRealityNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MixedReality.Mocking.MockableMixedRealitySubscriptionResource.CheckMixedRealityNameAvailabilityAsync(Azure.Core.AzureLocation,Azure.ResourceManager.MixedReality.Models.MixedRealityNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckMixedRealityNameAvailabilityAsync (location As AzureLocation, content As MixedRealityNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MixedRealityNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckMixedRealityNameAvailabilityAsync : Azure.Core.AzureLocation * Azure.ResourceManager.MixedReality.Models.MixedRealityNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MixedReality.Models.MixedRealityNameAvailabilityResult&gt;&gt;&#xA;override this.CheckMixedRealityNameAvailabilityAsync : Azure.Core.AzureLocation * Azure.ResourceManager.MixedReality.Models.MixedRealityNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MixedReality.Models.MixedRealityNameAvailabilityResult&gt;&gt;" Usage="mockableMixedRealitySubscriptionResource.CheckMixedRealityNameAvailabilityAsync (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MixedReality</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MixedReality.Models.MixedRealityNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.MixedReality.Models.MixedRealityNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location in which uniqueness will be verified. </param>
        <param name="content"> Check Name Availability Request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check Name Availability for local uniqueness
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.MixedReality/locations/{location}/checkNameAvailability</description></item><item><term>Operation Id</term><description>CheckNameAvailabilityLocal</description></item><item><term>Default Api Version</term><description>2021-01-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRemoteRenderingAccounts">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.MixedReality.RemoteRenderingAccountResource&gt; GetRemoteRenderingAccounts (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.MixedReality.RemoteRenderingAccountResource&gt; GetRemoteRenderingAccounts(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MixedReality.Mocking.MockableMixedRealitySubscriptionResource.GetRemoteRenderingAccounts(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRemoteRenderingAccounts (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of RemoteRenderingAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRemoteRenderingAccounts : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.MixedReality.RemoteRenderingAccountResource&gt;&#xA;override this.GetRemoteRenderingAccounts : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.MixedReality.RemoteRenderingAccountResource&gt;" Usage="mockableMixedRealitySubscriptionResource.GetRemoteRenderingAccounts cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MixedReality</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.MixedReality.RemoteRenderingAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List Remote Rendering Accounts by Subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.MixedReality/remoteRenderingAccounts</description></item><item><term>Operation Id</term><description>RemoteRenderingAccounts_ListBySubscription</description></item><item><term>Default Api Version</term><description>2021-01-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.MixedReality.RemoteRenderingAccountResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.MixedReality.RemoteRenderingAccountResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRemoteRenderingAccountsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.MixedReality.RemoteRenderingAccountResource&gt; GetRemoteRenderingAccountsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.MixedReality.RemoteRenderingAccountResource&gt; GetRemoteRenderingAccountsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MixedReality.Mocking.MockableMixedRealitySubscriptionResource.GetRemoteRenderingAccountsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRemoteRenderingAccountsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of RemoteRenderingAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRemoteRenderingAccountsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.MixedReality.RemoteRenderingAccountResource&gt;&#xA;override this.GetRemoteRenderingAccountsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.MixedReality.RemoteRenderingAccountResource&gt;" Usage="mockableMixedRealitySubscriptionResource.GetRemoteRenderingAccountsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MixedReality</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.MixedReality.RemoteRenderingAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List Remote Rendering Accounts by Subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.MixedReality/remoteRenderingAccounts</description></item><item><term>Operation Id</term><description>RemoteRenderingAccounts_ListBySubscription</description></item><item><term>Default Api Version</term><description>2021-01-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.MixedReality.RemoteRenderingAccountResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.MixedReality.RemoteRenderingAccountResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSpatialAnchorsAccounts">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.MixedReality.SpatialAnchorsAccountResource&gt; GetSpatialAnchorsAccounts (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.MixedReality.SpatialAnchorsAccountResource&gt; GetSpatialAnchorsAccounts(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MixedReality.Mocking.MockableMixedRealitySubscriptionResource.GetSpatialAnchorsAccounts(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSpatialAnchorsAccounts (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SpatialAnchorsAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSpatialAnchorsAccounts : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.MixedReality.SpatialAnchorsAccountResource&gt;&#xA;override this.GetSpatialAnchorsAccounts : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.MixedReality.SpatialAnchorsAccountResource&gt;" Usage="mockableMixedRealitySubscriptionResource.GetSpatialAnchorsAccounts cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MixedReality</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.MixedReality.SpatialAnchorsAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List Spatial Anchors Accounts by Subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.MixedReality/spatialAnchorsAccounts</description></item><item><term>Operation Id</term><description>SpatialAnchorsAccounts_ListBySubscription</description></item><item><term>Default Api Version</term><description>2021-01-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.MixedReality.SpatialAnchorsAccountResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.MixedReality.SpatialAnchorsAccountResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSpatialAnchorsAccountsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.MixedReality.SpatialAnchorsAccountResource&gt; GetSpatialAnchorsAccountsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.MixedReality.SpatialAnchorsAccountResource&gt; GetSpatialAnchorsAccountsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MixedReality.Mocking.MockableMixedRealitySubscriptionResource.GetSpatialAnchorsAccountsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSpatialAnchorsAccountsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SpatialAnchorsAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSpatialAnchorsAccountsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.MixedReality.SpatialAnchorsAccountResource&gt;&#xA;override this.GetSpatialAnchorsAccountsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.MixedReality.SpatialAnchorsAccountResource&gt;" Usage="mockableMixedRealitySubscriptionResource.GetSpatialAnchorsAccountsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MixedReality</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.MixedReality.SpatialAnchorsAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List Spatial Anchors Accounts by Subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.MixedReality/spatialAnchorsAccounts</description></item><item><term>Operation Id</term><description>SpatialAnchorsAccounts_ListBySubscription</description></item><item><term>Default Api Version</term><description>2021-01-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.MixedReality.SpatialAnchorsAccountResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.MixedReality.SpatialAnchorsAccountResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
