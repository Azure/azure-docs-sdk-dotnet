<Type Name="ComponentLinkedStorageAccountCollection" FullName="Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountCollection">
  <TypeSignature Language="C#" Value="public class ComponentLinkedStorageAccountCollection : Azure.ResourceManager.ArmCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComponentLinkedStorageAccountCollection extends Azure.ResourceManager.ArmCollection" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ComponentLinkedStorageAccountCollection&#xA;Inherits ArmCollection" />
  <TypeSignature Language="F#" Value="type ComponentLinkedStorageAccountCollection = class&#xA;    inherit ArmCollection" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ApplicationInsights</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            To get a <see cref="T:Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountCollection" /> instance call the GetComponentLinkedStorageAccounts method from an instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ComponentLinkedStorageAccountCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApplicationInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountCollection" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdate">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource&gt; CreateOrUpdate (Azure.WaitUntil waitUntil, string resourceName, Azure.ResourceManager.ApplicationInsights.Models.StorageType storageType, Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource&gt; CreateOrUpdate(valuetype Azure.WaitUntil waitUntil, string resourceName, valuetype Azure.ResourceManager.ApplicationInsights.Models.StorageType storageType, class Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.ApplicationInsights.Models.StorageType,Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdate (waitUntil As WaitUntil, resourceName As String, storageType As StorageType, data As ComponentLinkedStorageAccountData, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of ComponentLinkedStorageAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdate : Azure.WaitUntil * string * Azure.ResourceManager.ApplicationInsights.Models.StorageType * Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource&gt;&#xA;override this.CreateOrUpdate : Azure.WaitUntil * string * Azure.ResourceManager.ApplicationInsights.Models.StorageType * Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource&gt;" Usage="componentLinkedStorageAccountCollection.CreateOrUpdate (waitUntil, resourceName, storageType, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApplicationInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="storageType" Type="Azure.ResourceManager.ApplicationInsights.Models.StorageType" />
        <Parameter Name="data" Type="Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="resourceName"> The name of the Application Insights component resource. </param>
        <param name="storageType"> The type of the Application Insights component data source for the linked storage account. </param>
        <param name="data"> Properties that need to be specified to update linked storage accounts for an Application Insights component. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace current linked storage account for an Application Insights component.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/components/{resourceName}/linkedStorageAccounts/{storageType}
            Operation Id: ComponentLinkedStorageAccounts_CreateAndUpdate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceName" /> or <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource&gt;&gt; CreateOrUpdateAsync (Azure.WaitUntil waitUntil, string resourceName, Azure.ResourceManager.ApplicationInsights.Models.StorageType storageType, Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource&gt;&gt; CreateOrUpdateAsync(valuetype Azure.WaitUntil waitUntil, string resourceName, valuetype Azure.ResourceManager.ApplicationInsights.Models.StorageType storageType, class Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.ApplicationInsights.Models.StorageType,Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateAsync (waitUntil As WaitUntil, resourceName As String, storageType As StorageType, data As ComponentLinkedStorageAccountData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of ComponentLinkedStorageAccountResource))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateAsync : Azure.WaitUntil * string * Azure.ResourceManager.ApplicationInsights.Models.StorageType * Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource&gt;&gt;&#xA;override this.CreateOrUpdateAsync : Azure.WaitUntil * string * Azure.ResourceManager.ApplicationInsights.Models.StorageType * Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource&gt;&gt;" Usage="componentLinkedStorageAccountCollection.CreateOrUpdateAsync (waitUntil, resourceName, storageType, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApplicationInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="storageType" Type="Azure.ResourceManager.ApplicationInsights.Models.StorageType" />
        <Parameter Name="data" Type="Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="resourceName"> The name of the Application Insights component resource. </param>
        <param name="storageType"> The type of the Application Insights component data source for the linked storage account. </param>
        <param name="data"> Properties that need to be specified to update linked storage accounts for an Application Insights component. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace current linked storage account for an Application Insights component.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/components/{resourceName}/linkedStorageAccounts/{storageType}
            Operation Id: ComponentLinkedStorageAccounts_CreateAndUpdate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceName" /> or <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; Exists (string resourceName, Azure.ResourceManager.ApplicationInsights.Models.StorageType storageType, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; Exists(string resourceName, valuetype Azure.ResourceManager.ApplicationInsights.Models.StorageType storageType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountCollection.Exists(System.String,Azure.ResourceManager.ApplicationInsights.Models.StorageType,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Exists (resourceName As String, storageType As StorageType, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Exists : string * Azure.ResourceManager.ApplicationInsights.Models.StorageType * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.Exists : string * Azure.ResourceManager.ApplicationInsights.Models.StorageType * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="componentLinkedStorageAccountCollection.Exists (resourceName, storageType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApplicationInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="storageType" Type="Azure.ResourceManager.ApplicationInsights.Models.StorageType" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceName"> The name of the Application Insights component resource. </param>
        <param name="storageType"> The type of the Application Insights component data source for the linked storage account. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks to see if the resource exists in azure.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/components/{resourceName}/linkedStorageAccounts/{storageType}
            Operation Id: ComponentLinkedStorageAccounts_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; ExistsAsync (string resourceName, Azure.ResourceManager.ApplicationInsights.Models.StorageType storageType, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; ExistsAsync(string resourceName, valuetype Azure.ResourceManager.ApplicationInsights.Models.StorageType storageType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountCollection.ExistsAsync(System.String,Azure.ResourceManager.ApplicationInsights.Models.StorageType,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExistsAsync (resourceName As String, storageType As StorageType, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member ExistsAsync : string * Azure.ResourceManager.ApplicationInsights.Models.StorageType * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.ExistsAsync : string * Azure.ResourceManager.ApplicationInsights.Models.StorageType * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="componentLinkedStorageAccountCollection.ExistsAsync (resourceName, storageType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApplicationInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="storageType" Type="Azure.ResourceManager.ApplicationInsights.Models.StorageType" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceName"> The name of the Application Insights component resource. </param>
        <param name="storageType"> The type of the Application Insights component data source for the linked storage account. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks to see if the resource exists in azure.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/components/{resourceName}/linkedStorageAccounts/{storageType}
            Operation Id: ComponentLinkedStorageAccounts_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource&gt; Get (string resourceName, Azure.ResourceManager.ApplicationInsights.Models.StorageType storageType, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource&gt; Get(string resourceName, valuetype Azure.ResourceManager.ApplicationInsights.Models.StorageType storageType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountCollection.Get(System.String,Azure.ResourceManager.ApplicationInsights.Models.StorageType,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (resourceName As String, storageType As StorageType, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ComponentLinkedStorageAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * Azure.ResourceManager.ApplicationInsights.Models.StorageType * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource&gt;&#xA;override this.Get : string * Azure.ResourceManager.ApplicationInsights.Models.StorageType * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource&gt;" Usage="componentLinkedStorageAccountCollection.Get (resourceName, storageType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApplicationInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="storageType" Type="Azure.ResourceManager.ApplicationInsights.Models.StorageType" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceName"> The name of the Application Insights component resource. </param>
        <param name="storageType"> The type of the Application Insights component data source for the linked storage account. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns the current linked storage settings for an Application Insights component.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/components/{resourceName}/linkedStorageAccounts/{storageType}
            Operation Id: ComponentLinkedStorageAccounts_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource&gt;&gt; GetAsync (string resourceName, Azure.ResourceManager.ApplicationInsights.Models.StorageType storageType, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource&gt;&gt; GetAsync(string resourceName, valuetype Azure.ResourceManager.ApplicationInsights.Models.StorageType storageType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountCollection.GetAsync(System.String,Azure.ResourceManager.ApplicationInsights.Models.StorageType,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (resourceName As String, storageType As StorageType, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ComponentLinkedStorageAccountResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * Azure.ResourceManager.ApplicationInsights.Models.StorageType * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource&gt;&gt;&#xA;override this.GetAsync : string * Azure.ResourceManager.ApplicationInsights.Models.StorageType * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource&gt;&gt;" Usage="componentLinkedStorageAccountCollection.GetAsync (resourceName, storageType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApplicationInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApplicationInsights.ComponentLinkedStorageAccountResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="storageType" Type="Azure.ResourceManager.ApplicationInsights.Models.StorageType" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceName"> The name of the Application Insights component resource. </param>
        <param name="storageType"> The type of the Application Insights component data source for the linked storage account. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns the current linked storage settings for an Application Insights component.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/components/{resourceName}/linkedStorageAccounts/{storageType}
            Operation Id: ComponentLinkedStorageAccounts_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceName" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
