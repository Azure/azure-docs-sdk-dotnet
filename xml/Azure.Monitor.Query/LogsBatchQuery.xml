<Type Name="LogsBatchQuery" FullName="Azure.Monitor.Query.LogsBatchQuery">
  <TypeSignature Language="C#" Value="public class LogsBatchQuery" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LogsBatchQuery extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Monitor.Query.LogsBatchQuery" />
  <TypeSignature Language="VB.NET" Value="Public Class LogsBatchQuery" />
  <TypeSignature Language="F#" Value="type LogsBatchQuery = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Monitor.Query</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents a batch that consists of multiple log queries.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogsBatchQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Monitor.Query.LogsBatchQuery.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Monitor.Query</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of <see cref="T:Azure.Monitor.Query.LogsBatchQuery" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddWorkspaceQuery">
      <MemberSignature Language="C#" Value="public virtual string AddWorkspaceQuery (string workspaceId, string query, Azure.Monitor.Query.QueryTimeRange timeRange, Azure.Monitor.Query.LogsQueryOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string AddWorkspaceQuery(string workspaceId, string query, valuetype Azure.Monitor.Query.QueryTimeRange timeRange, class Azure.Monitor.Query.LogsQueryOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Monitor.Query.LogsBatchQuery.AddWorkspaceQuery(System.String,System.String,Azure.Monitor.Query.QueryTimeRange,Azure.Monitor.Query.LogsQueryOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddWorkspaceQuery (workspaceId As String, query As String, timeRange As QueryTimeRange, Optional options As LogsQueryOptions = Nothing) As String" />
      <MemberSignature Language="F#" Value="abstract member AddWorkspaceQuery : string * string * Azure.Monitor.Query.QueryTimeRange * Azure.Monitor.Query.LogsQueryOptions -&gt; string&#xA;override this.AddWorkspaceQuery : string * string * Azure.Monitor.Query.QueryTimeRange * Azure.Monitor.Query.LogsQueryOptions -&gt; string" Usage="logsBatchQuery.AddWorkspaceQuery (workspaceId, query, timeRange, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Monitor.Query</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workspaceId" Type="System.String" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="timeRange" Type="Azure.Monitor.Query.QueryTimeRange" />
        <Parameter Name="options" Type="Azure.Monitor.Query.LogsQueryOptions" />
      </Parameters>
      <Docs>
        <param name="workspaceId">The workspace to include in the query.</param>
        <param name="query">The query text to execute.</param>
        <param name="timeRange">The timespan over which to query data.</param>
        <param name="options">The <see cref="T:Azure.Monitor.Query.LogsQueryOptions" /> to configure the query.</param>
        <summary>
             Adds the specified query to the batch. Results can be retrieved after the query is submitted via the <see cref="M:Azure.Monitor.Query.LogsQueryClient.QueryBatchAsync(Azure.Monitor.Query.LogsBatchQuery,System.Threading.CancellationToken)" /> call.
             <example snippet="Snippet:BatchQueryAddAndGet"><code language="csharp">
             string countQueryId = batch.AddWorkspaceQuery(
                 workspaceId,
                 "AzureActivity | count",
                 new QueryTimeRange(TimeSpan.FromDays(1)));
             string topQueryId = batch.AddWorkspaceQuery(
                 workspaceId,
                 "AzureActivity | summarize Count = count() by ResourceGroup | top 10 by Count",
                 new QueryTimeRange(TimeSpan.FromDays(1)));
            
             Response&lt;LogsBatchQueryResultCollection&gt; response = await client.QueryBatchAsync(batch);
            
             var count = response.Value.GetResult&lt;int&gt;(countQueryId).Single();
             var topEntries = response.Value.GetResult&lt;MyLogEntryModel&gt;(topQueryId);
             </code></example></summary>
        <returns>The query identifier that has to be passed into <see cref="M:Azure.Monitor.Query.Models.LogsBatchQueryResultCollection.GetResult(System.String)" /> to get the result.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
