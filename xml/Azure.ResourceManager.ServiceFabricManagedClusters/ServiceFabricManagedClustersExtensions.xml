<Type Name="ServiceFabricManagedClustersExtensions" FullName="Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions">
  <TypeSignature Language="C#" Value="public static class ServiceFabricManagedClustersExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ServiceFabricManagedClustersExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ServiceFabricManagedClustersExtensions" />
  <TypeSignature Language="F#" Value="type ServiceFabricManagedClustersExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.ServiceFabricManagedClusters. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetManagedClusterVersion">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt; GetManagedClusterVersion (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, string clusterVersion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt; GetManagedClusterVersion(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, string clusterVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetManagedClusterVersion(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedClusterVersion (subscriptionResource As SubscriptionResource, location As AzureLocation, clusterVersion As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServiceFabricManagedClusterVersion)" />
      <MemberSignature Language="F#" Value="static member GetManagedClusterVersion : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetManagedClusterVersion (subscriptionResource, location, clusterVersion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="clusterVersion" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="clusterVersion"> The cluster code version. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about an available Service Fabric managed cluster code version.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedClusterVersions/{clusterVersion}</description></item><item><term>Operation Id</term><description>ManagedClusterVersion_Get</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource.GetManagedClusterVersion(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterVersion" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="clusterVersion" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedClusterVersionAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;&gt; GetManagedClusterVersionAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, string clusterVersion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;&gt; GetManagedClusterVersionAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, string clusterVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetManagedClusterVersionAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedClusterVersionAsync (subscriptionResource As SubscriptionResource, location As AzureLocation, clusterVersion As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServiceFabricManagedClusterVersion))" />
      <MemberSignature Language="F#" Value="static member GetManagedClusterVersionAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;&gt;" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetManagedClusterVersionAsync (subscriptionResource, location, clusterVersion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="clusterVersion" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="clusterVersion"> The cluster code version. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about an available Service Fabric managed cluster code version.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedClusterVersions/{clusterVersion}</description></item><item><term>Operation Id</term><description>ManagedClusterVersion_Get</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource.GetManagedClusterVersion(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterVersion" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="clusterVersion" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedClusterVersionByEnvironment">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt; GetManagedClusterVersionByEnvironment (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment environment, string clusterVersion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt; GetManagedClusterVersionByEnvironment(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment environment, string clusterVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetManagedClusterVersionByEnvironment(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedClusterVersionByEnvironment (subscriptionResource As SubscriptionResource, location As AzureLocation, environment As ManagedClusterVersionEnvironment, clusterVersion As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServiceFabricManagedClusterVersion)" />
      <MemberSignature Language="F#" Value="static member GetManagedClusterVersionByEnvironment : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetManagedClusterVersionByEnvironment (subscriptionResource, location, environment, clusterVersion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="environment" Type="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment" />
        <Parameter Name="clusterVersion" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="environment"> The operating system of the cluster. The default means all. </param>
        <param name="clusterVersion"> The cluster code version. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about an available Service Fabric cluster code version by environment.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/managedClusterVersions/{clusterVersion}</description></item><item><term>Operation Id</term><description>ManagedClusterVersion_GetByEnvironment</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource.GetManagedClusterVersionByEnvironment(Azure.Core.AzureLocation,Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterVersion" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="clusterVersion" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedClusterVersionByEnvironmentAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;&gt; GetManagedClusterVersionByEnvironmentAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment environment, string clusterVersion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;&gt; GetManagedClusterVersionByEnvironmentAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment environment, string clusterVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetManagedClusterVersionByEnvironmentAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedClusterVersionByEnvironmentAsync (subscriptionResource As SubscriptionResource, location As AzureLocation, environment As ManagedClusterVersionEnvironment, clusterVersion As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServiceFabricManagedClusterVersion))" />
      <MemberSignature Language="F#" Value="static member GetManagedClusterVersionByEnvironmentAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;&gt;" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetManagedClusterVersionByEnvironmentAsync (subscriptionResource, location, environment, clusterVersion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="environment" Type="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment" />
        <Parameter Name="clusterVersion" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="environment"> The operating system of the cluster. The default means all. </param>
        <param name="clusterVersion"> The cluster code version. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about an available Service Fabric cluster code version by environment.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/managedClusterVersions/{clusterVersion}</description></item><item><term>Operation Id</term><description>ManagedClusterVersion_GetByEnvironment</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource.GetManagedClusterVersionByEnvironment(Azure.Core.AzureLocation,Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterVersion" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="clusterVersion" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedClusterVersions">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt; GetManagedClusterVersions (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt; GetManagedClusterVersions(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetManagedClusterVersions(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedClusterVersions (subscriptionResource As SubscriptionResource, location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ServiceFabricManagedClusterVersion)" />
      <MemberSignature Language="F#" Value="static member GetManagedClusterVersions : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetManagedClusterVersions (subscriptionResource, location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all available code versions for Service Fabric cluster resources by location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedClusterVersions</description></item><item><term>Operation Id</term><description>ManagedClusterVersion_List</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource.GetManagedClusterVersions(Azure.Core.AzureLocation,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedClusterVersionsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt; GetManagedClusterVersionsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt; GetManagedClusterVersionsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetManagedClusterVersionsAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedClusterVersionsAsync (subscriptionResource As SubscriptionResource, location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ServiceFabricManagedClusterVersion)" />
      <MemberSignature Language="F#" Value="static member GetManagedClusterVersionsAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetManagedClusterVersionsAsync (subscriptionResource, location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all available code versions for Service Fabric cluster resources by location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedClusterVersions</description></item><item><term>Operation Id</term><description>ManagedClusterVersion_List</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource.GetManagedClusterVersions(Azure.Core.AzureLocation,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedClusterVersionsByEnvironment">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt; GetManagedClusterVersionsByEnvironment (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment environment, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt; GetManagedClusterVersionsByEnvironment(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment environment, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetManagedClusterVersionsByEnvironment(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedClusterVersionsByEnvironment (subscriptionResource As SubscriptionResource, location As AzureLocation, environment As ManagedClusterVersionEnvironment, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ServiceFabricManagedClusterVersion)" />
      <MemberSignature Language="F#" Value="static member GetManagedClusterVersionsByEnvironment : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetManagedClusterVersionsByEnvironment (subscriptionResource, location, environment, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="environment" Type="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="environment"> The operating system of the cluster. The default means all. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all available code versions for Service Fabric cluster resources by environment.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/managedClusterVersions</description></item><item><term>Operation Id</term><description>ManagedClusterVersion_ListByEnvironment</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource.GetManagedClusterVersionsByEnvironment(Azure.Core.AzureLocation,Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedClusterVersionsByEnvironmentAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt; GetManagedClusterVersionsByEnvironmentAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment environment, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt; GetManagedClusterVersionsByEnvironmentAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment environment, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetManagedClusterVersionsByEnvironmentAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedClusterVersionsByEnvironmentAsync (subscriptionResource As SubscriptionResource, location As AzureLocation, environment As ManagedClusterVersionEnvironment, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ServiceFabricManagedClusterVersion)" />
      <MemberSignature Language="F#" Value="static member GetManagedClusterVersionsByEnvironmentAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetManagedClusterVersionsByEnvironmentAsync (subscriptionResource, location, environment, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="environment" Type="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="environment"> The operating system of the cluster. The default means all. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all available code versions for Service Fabric cluster resources by environment.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/managedClusterVersions</description></item><item><term>Operation Id</term><description>ManagedClusterVersion_ListByEnvironment</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource.GetManagedClusterVersionsByEnvironment(Azure.Core.AzureLocation,Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterVersionEnvironment,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedUnsupportedVmSize">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt; GetManagedUnsupportedVmSize (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, string vmSize, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt; GetManagedUnsupportedVmSize(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, string vmSize, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetManagedUnsupportedVmSize(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedUnsupportedVmSize (subscriptionResource As SubscriptionResource, location As AzureLocation, vmSize As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServiceFabricManagedUnsupportedVmSize)" />
      <MemberSignature Language="F#" Value="static member GetManagedUnsupportedVmSize : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt;" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetManagedUnsupportedVmSize (subscriptionResource, location, vmSize, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="vmSize" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="vmSize"> VM Size name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get unsupported vm size for Service Fabric Managed Clusters.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedUnsupportedVMSizes/{vmSize}</description></item><item><term>Operation Id</term><description>managedUnsupportedVMSizes_Get</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource.GetManagedUnsupportedVmSize(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vmSize" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="vmSize" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedUnsupportedVmSizeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt;&gt; GetManagedUnsupportedVmSizeAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, string vmSize, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt;&gt; GetManagedUnsupportedVmSizeAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, string vmSize, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetManagedUnsupportedVmSizeAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedUnsupportedVmSizeAsync (subscriptionResource As SubscriptionResource, location As AzureLocation, vmSize As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServiceFabricManagedUnsupportedVmSize))" />
      <MemberSignature Language="F#" Value="static member GetManagedUnsupportedVmSizeAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt;&gt;" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetManagedUnsupportedVmSizeAsync (subscriptionResource, location, vmSize, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="vmSize" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="vmSize"> VM Size name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get unsupported vm size for Service Fabric Managed Clusters.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedUnsupportedVMSizes/{vmSize}</description></item><item><term>Operation Id</term><description>managedUnsupportedVMSizes_Get</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource.GetManagedUnsupportedVmSize(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vmSize" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="vmSize" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedUnsupportedVmSizes">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt; GetManagedUnsupportedVmSizes (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt; GetManagedUnsupportedVmSizes(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetManagedUnsupportedVmSizes(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedUnsupportedVmSizes (subscriptionResource As SubscriptionResource, location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ServiceFabricManagedUnsupportedVmSize)" />
      <MemberSignature Language="F#" Value="static member GetManagedUnsupportedVmSizes : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt;" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetManagedUnsupportedVmSizes (subscriptionResource, location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the lists of unsupported vm sizes for Service Fabric Managed Clusters.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedUnsupportedVMSizes</description></item><item><term>Operation Id</term><description>managedUnsupportedVMSizes_List</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource.GetManagedUnsupportedVmSizes(Azure.Core.AzureLocation,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedUnsupportedVmSizesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt; GetManagedUnsupportedVmSizesAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt; GetManagedUnsupportedVmSizesAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetManagedUnsupportedVmSizesAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedUnsupportedVmSizesAsync (subscriptionResource As SubscriptionResource, location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ServiceFabricManagedUnsupportedVmSize)" />
      <MemberSignature Language="F#" Value="static member GetManagedUnsupportedVmSizesAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt;" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetManagedUnsupportedVmSizesAsync (subscriptionResource, location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the lists of unsupported vm sizes for Service Fabric Managed Clusters.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedUnsupportedVMSizes</description></item><item><term>Operation Id</term><description>managedUnsupportedVMSizes_List</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource.GetManagedUnsupportedVmSizes(Azure.Core.AzureLocation,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceFabricManagedApplicationResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationResource GetServiceFabricManagedApplicationResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationResource GetServiceFabricManagedApplicationResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetServiceFabricManagedApplicationResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServiceFabricManagedApplicationResource (client As ArmClient, id As ResourceIdentifier) As ServiceFabricManagedApplicationResource" />
      <MemberSignature Language="F#" Value="static member GetServiceFabricManagedApplicationResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationResource" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetServiceFabricManagedApplicationResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersArmClient.GetServiceFabricManagedApplicationResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceFabricManagedApplicationTypeResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationTypeResource GetServiceFabricManagedApplicationTypeResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationTypeResource GetServiceFabricManagedApplicationTypeResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetServiceFabricManagedApplicationTypeResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServiceFabricManagedApplicationTypeResource (client As ArmClient, id As ResourceIdentifier) As ServiceFabricManagedApplicationTypeResource" />
      <MemberSignature Language="F#" Value="static member GetServiceFabricManagedApplicationTypeResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationTypeResource" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetServiceFabricManagedApplicationTypeResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationTypeResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationTypeResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationTypeResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationTypeResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersArmClient.GetServiceFabricManagedApplicationTypeResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationTypeResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceFabricManagedApplicationTypeVersionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationTypeVersionResource GetServiceFabricManagedApplicationTypeVersionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationTypeVersionResource GetServiceFabricManagedApplicationTypeVersionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetServiceFabricManagedApplicationTypeVersionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServiceFabricManagedApplicationTypeVersionResource (client As ArmClient, id As ResourceIdentifier) As ServiceFabricManagedApplicationTypeVersionResource" />
      <MemberSignature Language="F#" Value="static member GetServiceFabricManagedApplicationTypeVersionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationTypeVersionResource" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetServiceFabricManagedApplicationTypeVersionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationTypeVersionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationTypeVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationTypeVersionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationTypeVersionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersArmClient.GetServiceFabricManagedApplicationTypeVersionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationTypeVersionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceFabricManagedCluster">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource&gt; GetServiceFabricManagedCluster (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string clusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource&gt; GetServiceFabricManagedCluster(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string clusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetServiceFabricManagedCluster(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServiceFabricManagedCluster (resourceGroupResource As ResourceGroupResource, clusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServiceFabricManagedClusterResource)" />
      <MemberSignature Language="F#" Value="static member GetServiceFabricManagedCluster : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource&gt;" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetServiceFabricManagedCluster (resourceGroupResource, clusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="clusterName"> The name of the cluster resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Service Fabric managed cluster resource created or in the process of being created in the specified resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}</description></item><item><term>Operation Id</term><description>ManagedClusters_Get</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersResourceGroupResource.GetServiceFabricManagedCluster(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="clusterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceFabricManagedClusterAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource&gt;&gt; GetServiceFabricManagedClusterAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string clusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource&gt;&gt; GetServiceFabricManagedClusterAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string clusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetServiceFabricManagedClusterAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServiceFabricManagedClusterAsync (resourceGroupResource As ResourceGroupResource, clusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServiceFabricManagedClusterResource))" />
      <MemberSignature Language="F#" Value="static member GetServiceFabricManagedClusterAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource&gt;&gt;" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetServiceFabricManagedClusterAsync (resourceGroupResource, clusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="clusterName"> The name of the cluster resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Service Fabric managed cluster resource created or in the process of being created in the specified resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}</description></item><item><term>Operation Id</term><description>ManagedClusters_Get</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersResourceGroupResource.GetServiceFabricManagedClusterAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="clusterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceFabricManagedClusterResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource GetServiceFabricManagedClusterResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource GetServiceFabricManagedClusterResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetServiceFabricManagedClusterResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServiceFabricManagedClusterResource (client As ArmClient, id As ResourceIdentifier) As ServiceFabricManagedClusterResource" />
      <MemberSignature Language="F#" Value="static member GetServiceFabricManagedClusterResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetServiceFabricManagedClusterResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersArmClient.GetServiceFabricManagedClusterResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceFabricManagedClusters">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterCollection GetServiceFabricManagedClusters (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterCollection GetServiceFabricManagedClusters(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetServiceFabricManagedClusters(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServiceFabricManagedClusters (resourceGroupResource As ResourceGroupResource) As ServiceFabricManagedClusterCollection" />
      <MemberSignature Language="F#" Value="static member GetServiceFabricManagedClusters : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterCollection" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetServiceFabricManagedClusters resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of ServiceFabricManagedClusterResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersResourceGroupResource.GetServiceFabricManagedClusters" /> instead.</description></item></summary>
        <returns> An object representing collection of ServiceFabricManagedClusterResources and their operations over a ServiceFabricManagedClusterResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceFabricManagedClusters">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource&gt; GetServiceFabricManagedClusters (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource&gt; GetServiceFabricManagedClusters(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetServiceFabricManagedClusters(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServiceFabricManagedClusters (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ServiceFabricManagedClusterResource)" />
      <MemberSignature Language="F#" Value="static member GetServiceFabricManagedClusters : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource&gt;" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetServiceFabricManagedClusters (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all Service Fabric cluster resources created or in the process of being created in the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/managedClusters</description></item><item><term>Operation Id</term><description>ManagedClusters_ListBySubscription</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource.GetServiceFabricManagedClusters(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceFabricManagedClustersAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource&gt; GetServiceFabricManagedClustersAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource&gt; GetServiceFabricManagedClustersAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetServiceFabricManagedClustersAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServiceFabricManagedClustersAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ServiceFabricManagedClusterResource)" />
      <MemberSignature Language="F#" Value="static member GetServiceFabricManagedClustersAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource&gt;" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetServiceFabricManagedClustersAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all Service Fabric cluster resources created or in the process of being created in the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/managedClusters</description></item><item><term>Operation Id</term><description>ManagedClusters_ListBySubscription</description></item><item><term>Default Api Version</term><description>2024-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersSubscriptionResource.GetServiceFabricManagedClusters(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceFabricManagedNodeTypeResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedNodeTypeResource GetServiceFabricManagedNodeTypeResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedNodeTypeResource GetServiceFabricManagedNodeTypeResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetServiceFabricManagedNodeTypeResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServiceFabricManagedNodeTypeResource (client As ArmClient, id As ResourceIdentifier) As ServiceFabricManagedNodeTypeResource" />
      <MemberSignature Language="F#" Value="static member GetServiceFabricManagedNodeTypeResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedNodeTypeResource" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetServiceFabricManagedNodeTypeResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedNodeTypeResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedNodeTypeResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedNodeTypeResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedNodeTypeResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersArmClient.GetServiceFabricManagedNodeTypeResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedNodeTypeResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceFabricManagedServiceResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedServiceResource GetServiceFabricManagedServiceResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedServiceResource GetServiceFabricManagedServiceResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetServiceFabricManagedServiceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServiceFabricManagedServiceResource (client As ArmClient, id As ResourceIdentifier) As ServiceFabricManagedServiceResource" />
      <MemberSignature Language="F#" Value="static member GetServiceFabricManagedServiceResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedServiceResource" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClustersExtensions.GetServiceFabricManagedServiceResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedServiceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedServiceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedServiceResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedServiceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ServiceFabricManagedClusters.Mocking.MockableServiceFabricManagedClustersArmClient.GetServiceFabricManagedServiceResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedServiceResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
