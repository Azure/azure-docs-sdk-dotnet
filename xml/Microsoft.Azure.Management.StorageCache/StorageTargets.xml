<Type Name="StorageTargets" FullName="Microsoft.Azure.Management.StorageCache.StorageTargets">
  <TypeSignature Language="C#" Value="public class StorageTargets : Microsoft.Azure.Management.StorageCache.IStorageTargets, Microsoft.Rest.IServiceOperations&lt;Microsoft.Azure.Management.StorageCache.StorageCacheManagementClient&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StorageTargets extends System.Object implements class Microsoft.Azure.Management.StorageCache.IStorageTargets, class Microsoft.Rest.IServiceOperations`1&lt;class Microsoft.Azure.Management.StorageCache.StorageCacheManagementClient&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.StorageCache.StorageTargets" />
  <TypeSignature Language="VB.NET" Value="Public Class StorageTargets&#xA;Implements IServiceOperations(Of StorageCacheManagementClient), IStorageTargets" />
  <TypeSignature Language="F#" Value="type StorageTargets = class&#xA;    interface IServiceOperations&lt;StorageCacheManagementClient&gt;&#xA;    interface IStorageTargets" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.StorageCache.IStorageTargets</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Rest.IServiceOperations&lt;Microsoft.Azure.Management.StorageCache.StorageCacheManagementClient&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            StorageTargets operations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StorageTargets (Microsoft.Azure.Management.StorageCache.StorageCacheManagementClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Azure.Management.StorageCache.StorageCacheManagementClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.StorageCache.StorageTargets.#ctor(Microsoft.Azure.Management.StorageCache.StorageCacheManagementClient)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (client As StorageCacheManagementClient)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.StorageCache.StorageTargets : Microsoft.Azure.Management.StorageCache.StorageCacheManagementClient -&gt; Microsoft.Azure.Management.StorageCache.StorageTargets" Usage="new Microsoft.Azure.Management.StorageCache.StorageTargets client" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="client" Type="Microsoft.Azure.Management.StorageCache.StorageCacheManagementClient" />
      </Parameters>
      <Docs>
        <param name="client">
            Reference to the service client.
            </param>
        <summary>
            Initializes a new instance of the StorageTargets class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.StorageCache.StorageCacheManagementClient Client { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.StorageCache.StorageCacheManagementClient Client" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.StorageCache.StorageTargets.Client" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Client As StorageCacheManagementClient" />
      <MemberSignature Language="F#" Value="member this.Client : Microsoft.Azure.Management.StorageCache.StorageCacheManagementClient" Usage="Microsoft.Azure.Management.StorageCache.StorageTargets.Client" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.StorageCache.StorageCacheManagementClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a reference to the StorageCacheManagementClient
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.Management.StorageCache.Models.StorageTarget&gt;&gt; CreateOrUpdateWithHttpMessagesAsync (string resourceGroupName, string cacheName, string storageTargetName, Microsoft.Azure.Management.StorageCache.Models.StorageTarget storagetarget = default, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.Management.StorageCache.Models.StorageTarget&gt;&gt; CreateOrUpdateWithHttpMessagesAsync(string resourceGroupName, string cacheName, string storageTargetName, class Microsoft.Azure.Management.StorageCache.Models.StorageTarget storagetarget, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.StorageCache.StorageTargets.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.StorageCache.Models.StorageTarget,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateOrUpdateWithHttpMessagesAsync (resourceGroupName As String, cacheName As String, storageTargetName As String, Optional storagetarget As StorageTarget = Nothing, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of StorageTarget))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateWithHttpMessagesAsync : string * string * string * Microsoft.Azure.Management.StorageCache.Models.StorageTarget * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.Management.StorageCache.Models.StorageTarget&gt;&gt;&#xA;override this.CreateOrUpdateWithHttpMessagesAsync : string * string * string * Microsoft.Azure.Management.StorageCache.Models.StorageTarget * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.Management.StorageCache.Models.StorageTarget&gt;&gt;" Usage="storageTargets.CreateOrUpdateWithHttpMessagesAsync (resourceGroupName, cacheName, storageTargetName, storagetarget, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.StorageCache.IStorageTargets.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.StorageCache.Models.StorageTarget,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.Management.StorageCache.Models.StorageTarget&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="cacheName" Type="System.String" />
        <Parameter Name="storageTargetName" Type="System.String" />
        <Parameter Name="storagetarget" Type="Microsoft.Azure.Management.StorageCache.Models.StorageTarget" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">
            Target resource group.
            </param>
        <param name="cacheName">
            Name of Cache. Length of name must be not greater than 80 and chars must be
            in list of [-0-9a-zA-Z_] char class.
            </param>
        <param name="storageTargetName">
            Name of the Storage Target. Length of name must be not greater than 80 and
            chars must be in list of [-0-9a-zA-Z_] char class.
            </param>
        <param name="storagetarget">
            Object containing the definition of a Storage Target.
            </param>
        <param name="customHeaders">
            Headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Create or update a Storage Target. This operation is allowed at any time,
            but if the Cache is down or unhealthy, the actual creation/modification of
            the Storage Target may be delayed until the Cache is healthy again.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.Management.StorageCache.Models.CloudErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        <return>
            A response object containing the response body and response headers.
            </return>
      </Docs>
    </Member>
    <Member MemberName="DeleteWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;object&gt;&gt; DeleteWithHttpMessagesAsync (string resourceGroupName, string cacheName, string storageTargetName, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;object&gt;&gt; DeleteWithHttpMessagesAsync(string resourceGroupName, string cacheName, string storageTargetName, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.StorageCache.StorageTargets.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteWithHttpMessagesAsync (resourceGroupName As String, cacheName As String, storageTargetName As String, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of Object))" />
      <MemberSignature Language="F#" Value="abstract member DeleteWithHttpMessagesAsync : string * string * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;obj&gt;&gt;&#xA;override this.DeleteWithHttpMessagesAsync : string * string * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;obj&gt;&gt;" Usage="storageTargets.DeleteWithHttpMessagesAsync (resourceGroupName, cacheName, storageTargetName, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.StorageCache.IStorageTargets.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="cacheName" Type="System.String" />
        <Parameter Name="storageTargetName" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">
            Target resource group.
            </param>
        <param name="cacheName">
            Name of Cache. Length of name must be not greater than 80 and chars must be
            in list of [-0-9a-zA-Z_] char class.
            </param>
        <param name="storageTargetName">
            Name of Storage Target.
            </param>
        <param name="customHeaders">
            Headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Removes a Storage Target from a Cache. This operation is allowed at any
            time, but if the Cache is down or unhealthy, the actual removal of the
            Storage Target may be delayed until the Cache is healthy again. Note that
            if the Cache has data to flush to the Storage Target, the data will be
            flushed before the Storage Target will be deleted.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.Management.StorageCache.Models.CloudErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        <return>
            A response object containing the response body and response headers.
            </return>
      </Docs>
    </Member>
    <Member MemberName="GetWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.Management.StorageCache.Models.StorageTarget&gt;&gt; GetWithHttpMessagesAsync (string resourceGroupName, string cacheName, string storageTargetName, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.Management.StorageCache.Models.StorageTarget&gt;&gt; GetWithHttpMessagesAsync(string resourceGroupName, string cacheName, string storageTargetName, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.StorageCache.StorageTargets.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWithHttpMessagesAsync (resourceGroupName As String, cacheName As String, storageTargetName As String, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of StorageTarget))" />
      <MemberSignature Language="F#" Value="abstract member GetWithHttpMessagesAsync : string * string * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.Management.StorageCache.Models.StorageTarget&gt;&gt;&#xA;override this.GetWithHttpMessagesAsync : string * string * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.Management.StorageCache.Models.StorageTarget&gt;&gt;" Usage="storageTargets.GetWithHttpMessagesAsync (resourceGroupName, cacheName, storageTargetName, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.StorageCache.IStorageTargets.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.Management.StorageCache.Models.StorageTarget&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="cacheName" Type="System.String" />
        <Parameter Name="storageTargetName" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">
            Target resource group.
            </param>
        <param name="cacheName">
            Name of Cache. Length of name must be not greater than 80 and chars must be
            in list of [-0-9a-zA-Z_] char class.
            </param>
        <param name="storageTargetName">
            Name of the Storage Target. Length of name must be not greater than 80 and
            chars must be in list of [-0-9a-zA-Z_] char class.
            </param>
        <param name="customHeaders">
            Headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Returns a Storage Target from a Cache.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.Management.StorageCache.Models.CloudErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        <return>
            A response object containing the response body and response headers.
            </return>
      </Docs>
    </Member>
    <Member MemberName="ListByCacheWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.Management.StorageCache.Models.StorageTargetsResult&gt;&gt; ListByCacheWithHttpMessagesAsync (string resourceGroupName, string cacheName, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.Management.StorageCache.Models.StorageTargetsResult&gt;&gt; ListByCacheWithHttpMessagesAsync(string resourceGroupName, string cacheName, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.StorageCache.StorageTargets.ListByCacheWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListByCacheWithHttpMessagesAsync (resourceGroupName As String, cacheName As String, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of StorageTargetsResult))" />
      <MemberSignature Language="F#" Value="abstract member ListByCacheWithHttpMessagesAsync : string * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.Management.StorageCache.Models.StorageTargetsResult&gt;&gt;&#xA;override this.ListByCacheWithHttpMessagesAsync : string * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.Management.StorageCache.Models.StorageTargetsResult&gt;&gt;" Usage="storageTargets.ListByCacheWithHttpMessagesAsync (resourceGroupName, cacheName, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.StorageCache.IStorageTargets.ListByCacheWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.Management.StorageCache.Models.StorageTargetsResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="cacheName" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">
            Target resource group.
            </param>
        <param name="cacheName">
            Name of Cache. Length of name must be not greater than 80 and chars must be
            in list of [-0-9a-zA-Z_] char class.
            </param>
        <param name="customHeaders">
            Headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Returns a list of Storage Targets for the specified Cache.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.Management.StorageCache.Models.CloudErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        <return>
            A response object containing the response body and response headers.
            </return>
      </Docs>
    </Member>
  </Members>
</Type>
