<Type Name="X12ProtocolSettings" FullName="Azure.ResourceManager.Logic.Models.X12ProtocolSettings">
  <TypeSignature Language="C#" Value="public class X12ProtocolSettings" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X12ProtocolSettings extends System.Object" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Logic.Models.X12ProtocolSettings" />
  <TypeSignature Language="VB.NET" Value="Public Class X12ProtocolSettings" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type X12ProtocolSettings = class" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public class X12ProtocolSettings : System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X12ProtocolSettings extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public Class X12ProtocolSettings&#xA;Implements IJsonModel(Of X12ProtocolSettings), IPersistableModel(Of X12ProtocolSettings)" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type X12ProtocolSettings = class&#xA;    interface IJsonModel&lt;X12ProtocolSettings&gt;&#xA;    interface IPersistableModel&lt;X12ProtocolSettings&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> The X12 agreement protocol settings. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X12ProtocolSettings (Azure.ResourceManager.Logic.Models.X12ValidationSettings validationSettings, Azure.ResourceManager.Logic.Models.X12FramingSettings framingSettings, Azure.ResourceManager.Logic.Models.X12EnvelopeSettings envelopeSettings, Azure.ResourceManager.Logic.Models.X12AcknowledgementSettings acknowledgementSettings, Azure.ResourceManager.Logic.Models.X12MessageFilter messageFilter, Azure.ResourceManager.Logic.Models.X12SecuritySettings securitySettings, Azure.ResourceManager.Logic.Models.X12ProcessingSettings processingSettings, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Logic.Models.X12SchemaReference&gt; schemaReferences);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.ResourceManager.Logic.Models.X12ValidationSettings validationSettings, class Azure.ResourceManager.Logic.Models.X12FramingSettings framingSettings, class Azure.ResourceManager.Logic.Models.X12EnvelopeSettings envelopeSettings, class Azure.ResourceManager.Logic.Models.X12AcknowledgementSettings acknowledgementSettings, class Azure.ResourceManager.Logic.Models.X12MessageFilter messageFilter, class Azure.ResourceManager.Logic.Models.X12SecuritySettings securitySettings, class Azure.ResourceManager.Logic.Models.X12ProcessingSettings processingSettings, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Logic.Models.X12SchemaReference&gt; schemaReferences) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.Models.X12ProtocolSettings.#ctor(Azure.ResourceManager.Logic.Models.X12ValidationSettings,Azure.ResourceManager.Logic.Models.X12FramingSettings,Azure.ResourceManager.Logic.Models.X12EnvelopeSettings,Azure.ResourceManager.Logic.Models.X12AcknowledgementSettings,Azure.ResourceManager.Logic.Models.X12MessageFilter,Azure.ResourceManager.Logic.Models.X12SecuritySettings,Azure.ResourceManager.Logic.Models.X12ProcessingSettings,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Logic.Models.X12SchemaReference})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (validationSettings As X12ValidationSettings, framingSettings As X12FramingSettings, envelopeSettings As X12EnvelopeSettings, acknowledgementSettings As X12AcknowledgementSettings, messageFilter As X12MessageFilter, securitySettings As X12SecuritySettings, processingSettings As X12ProcessingSettings, schemaReferences As IEnumerable(Of X12SchemaReference))" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.Logic.Models.X12ProtocolSettings : Azure.ResourceManager.Logic.Models.X12ValidationSettings * Azure.ResourceManager.Logic.Models.X12FramingSettings * Azure.ResourceManager.Logic.Models.X12EnvelopeSettings * Azure.ResourceManager.Logic.Models.X12AcknowledgementSettings * Azure.ResourceManager.Logic.Models.X12MessageFilter * Azure.ResourceManager.Logic.Models.X12SecuritySettings * Azure.ResourceManager.Logic.Models.X12ProcessingSettings * seq&lt;Azure.ResourceManager.Logic.Models.X12SchemaReference&gt; -&gt; Azure.ResourceManager.Logic.Models.X12ProtocolSettings" Usage="new Azure.ResourceManager.Logic.Models.X12ProtocolSettings (validationSettings, framingSettings, envelopeSettings, acknowledgementSettings, messageFilter, securitySettings, processingSettings, schemaReferences)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validationSettings" Type="Azure.ResourceManager.Logic.Models.X12ValidationSettings" />
        <Parameter Name="framingSettings" Type="Azure.ResourceManager.Logic.Models.X12FramingSettings" />
        <Parameter Name="envelopeSettings" Type="Azure.ResourceManager.Logic.Models.X12EnvelopeSettings" />
        <Parameter Name="acknowledgementSettings" Type="Azure.ResourceManager.Logic.Models.X12AcknowledgementSettings" />
        <Parameter Name="messageFilter" Type="Azure.ResourceManager.Logic.Models.X12MessageFilter" />
        <Parameter Name="securitySettings" Type="Azure.ResourceManager.Logic.Models.X12SecuritySettings" />
        <Parameter Name="processingSettings" Type="Azure.ResourceManager.Logic.Models.X12ProcessingSettings" />
        <Parameter Name="schemaReferences" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Logic.Models.X12SchemaReference&gt;" />
      </Parameters>
      <Docs>
        <param name="validationSettings"> The X12 validation settings. </param>
        <param name="framingSettings"> The X12 framing settings. </param>
        <param name="envelopeSettings"> The X12 envelope settings. </param>
        <param name="acknowledgementSettings"> The X12 acknowledgment settings. </param>
        <param name="messageFilter"> The X12 message filter. </param>
        <param name="securitySettings"> The X12 security settings. </param>
        <param name="processingSettings"> The X12 processing settings. </param>
        <param name="schemaReferences"> The X12 schema references. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Logic.Models.X12ProtocolSettings" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="validationSettings" />, <paramref name="framingSettings" />, <paramref name="envelopeSettings" />, <paramref name="acknowledgementSettings" />, <paramref name="messageFilter" />, <paramref name="securitySettings" />, <paramref name="processingSettings" /> or <paramref name="schemaReferences" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AcknowledgementSettings">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.Logic.Models.X12AcknowledgementSettings AcknowledgementSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Logic.Models.X12AcknowledgementSettings AcknowledgementSettings" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Logic.Models.X12ProtocolSettings.AcknowledgementSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property AcknowledgementSettings As X12AcknowledgementSettings" />
      <MemberSignature Language="F#" Value="member this.AcknowledgementSettings : Azure.ResourceManager.Logic.Models.X12AcknowledgementSettings with get, set" Usage="Azure.ResourceManager.Logic.Models.X12ProtocolSettings.AcknowledgementSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.Models.X12AcknowledgementSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The X12 acknowledgment settings. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvelopeOverrides">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt; EnvelopeOverrides { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt; EnvelopeOverrides" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Logic.Models.X12ProtocolSettings.EnvelopeOverrides" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnvelopeOverrides As IList(Of X12EnvelopeOverride)" />
      <MemberSignature Language="F#" Value="member this.EnvelopeOverrides : System.Collections.Generic.IList&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;" Usage="Azure.ResourceManager.Logic.Models.X12ProtocolSettings.EnvelopeOverrides" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The X12 envelope override settings. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvelopeSettings">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.Logic.Models.X12EnvelopeSettings EnvelopeSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Logic.Models.X12EnvelopeSettings EnvelopeSettings" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Logic.Models.X12ProtocolSettings.EnvelopeSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property EnvelopeSettings As X12EnvelopeSettings" />
      <MemberSignature Language="F#" Value="member this.EnvelopeSettings : Azure.ResourceManager.Logic.Models.X12EnvelopeSettings with get, set" Usage="Azure.ResourceManager.Logic.Models.X12ProtocolSettings.EnvelopeSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.Models.X12EnvelopeSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The X12 envelope settings. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FramingSettings">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.Logic.Models.X12FramingSettings FramingSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Logic.Models.X12FramingSettings FramingSettings" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Logic.Models.X12ProtocolSettings.FramingSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property FramingSettings As X12FramingSettings" />
      <MemberSignature Language="F#" Value="member this.FramingSettings : Azure.ResourceManager.Logic.Models.X12FramingSettings with get, set" Usage="Azure.ResourceManager.Logic.Models.X12ProtocolSettings.FramingSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.Models.X12FramingSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The X12 framing settings. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageFilterList">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.ResourceManager.Logic.Models.X12MessageIdentifier&gt; MessageFilterList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.ResourceManager.Logic.Models.X12MessageIdentifier&gt; MessageFilterList" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Logic.Models.X12ProtocolSettings.MessageFilterList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MessageFilterList As IList(Of X12MessageIdentifier)" />
      <MemberSignature Language="F#" Value="member this.MessageFilterList : System.Collections.Generic.IList&lt;Azure.ResourceManager.Logic.Models.X12MessageIdentifier&gt;" Usage="Azure.ResourceManager.Logic.Models.X12ProtocolSettings.MessageFilterList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.ResourceManager.Logic.Models.X12MessageIdentifier&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The X12 message filter list. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageFilterType">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.Logic.Models.MessageFilterType? MessageFilterType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Logic.Models.MessageFilterType&gt; MessageFilterType" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Logic.Models.X12ProtocolSettings.MessageFilterType" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageFilterType As Nullable(Of MessageFilterType)" />
      <MemberSignature Language="F#" Value="member this.MessageFilterType : Nullable&lt;Azure.ResourceManager.Logic.Models.MessageFilterType&gt; with get, set" Usage="Azure.ResourceManager.Logic.Models.X12ProtocolSettings.MessageFilterType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ResourceManager.Logic.Models.MessageFilterType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The message filter type. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessingSettings">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.Logic.Models.X12ProcessingSettings ProcessingSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Logic.Models.X12ProcessingSettings ProcessingSettings" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Logic.Models.X12ProtocolSettings.ProcessingSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property ProcessingSettings As X12ProcessingSettings" />
      <MemberSignature Language="F#" Value="member this.ProcessingSettings : Azure.ResourceManager.Logic.Models.X12ProcessingSettings with get, set" Usage="Azure.ResourceManager.Logic.Models.X12ProtocolSettings.ProcessingSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.Models.X12ProcessingSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The X12 processing settings. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaReferences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.ResourceManager.Logic.Models.X12SchemaReference&gt; SchemaReferences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.ResourceManager.Logic.Models.X12SchemaReference&gt; SchemaReferences" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Logic.Models.X12ProtocolSettings.SchemaReferences" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaReferences As IList(Of X12SchemaReference)" />
      <MemberSignature Language="F#" Value="member this.SchemaReferences : System.Collections.Generic.IList&lt;Azure.ResourceManager.Logic.Models.X12SchemaReference&gt;" Usage="Azure.ResourceManager.Logic.Models.X12ProtocolSettings.SchemaReferences" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.ResourceManager.Logic.Models.X12SchemaReference&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The X12 schema references. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecuritySettings">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.Logic.Models.X12SecuritySettings SecuritySettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Logic.Models.X12SecuritySettings SecuritySettings" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Logic.Models.X12ProtocolSettings.SecuritySettings" />
      <MemberSignature Language="VB.NET" Value="Public Property SecuritySettings As X12SecuritySettings" />
      <MemberSignature Language="F#" Value="member this.SecuritySettings : Azure.ResourceManager.Logic.Models.X12SecuritySettings with get, set" Usage="Azure.ResourceManager.Logic.Models.X12ProtocolSettings.SecuritySettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.Models.X12SecuritySettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The X12 security settings. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.Logic.Models.X12ProtocolSettings IJsonModel&lt;X12ProtocolSettings&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.Logic.Models.X12ProtocolSettings System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.Models.X12ProtocolSettings.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#Logic#Models#X12ProtocolSettings&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As X12ProtocolSettings Implements IJsonModel(Of X12ProtocolSettings).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Logic.Models.X12ProtocolSettings&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Logic.Models.X12ProtocolSettings" Usage="x12ProtocolSettings.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.Models.X12ProtocolSettings</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;X12ProtocolSettings&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.Models.X12ProtocolSettings.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#Logic#Models#X12ProtocolSettings&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of X12ProtocolSettings).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="x12ProtocolSettings.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.Logic.Models.X12ProtocolSettings IPersistableModel&lt;X12ProtocolSettings&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.Logic.Models.X12ProtocolSettings System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.Models.X12ProtocolSettings.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Logic#Models#X12ProtocolSettings&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As X12ProtocolSettings Implements IPersistableModel(Of X12ProtocolSettings).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Logic.Models.X12ProtocolSettings&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Logic.Models.X12ProtocolSettings" Usage="x12ProtocolSettings.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.Models.X12ProtocolSettings</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;X12ProtocolSettings&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.Models.X12ProtocolSettings.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Logic#Models#X12ProtocolSettings&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of X12ProtocolSettings).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="x12ProtocolSettings.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;X12ProtocolSettings&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.Models.X12ProtocolSettings.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Logic#Models#X12ProtocolSettings&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of X12ProtocolSettings).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="x12ProtocolSettings.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12ProtocolSettings&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidationOverrides">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.ResourceManager.Logic.Models.X12ValidationOverride&gt; ValidationOverrides { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.ResourceManager.Logic.Models.X12ValidationOverride&gt; ValidationOverrides" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Logic.Models.X12ProtocolSettings.ValidationOverrides" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationOverrides As IList(Of X12ValidationOverride)" />
      <MemberSignature Language="F#" Value="member this.ValidationOverrides : System.Collections.Generic.IList&lt;Azure.ResourceManager.Logic.Models.X12ValidationOverride&gt;" Usage="Azure.ResourceManager.Logic.Models.X12ProtocolSettings.ValidationOverrides" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.ResourceManager.Logic.Models.X12ValidationOverride&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The X12 validation override settings. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationSettings">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.Logic.Models.X12ValidationSettings ValidationSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Logic.Models.X12ValidationSettings ValidationSettings" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Logic.Models.X12ProtocolSettings.ValidationSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationSettings As X12ValidationSettings" />
      <MemberSignature Language="F#" Value="member this.ValidationSettings : Azure.ResourceManager.Logic.Models.X12ValidationSettings with get, set" Usage="Azure.ResourceManager.Logic.Models.X12ProtocolSettings.ValidationSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.Models.X12ValidationSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The X12 validation settings. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="X12DelimiterOverrides">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.ResourceManager.Logic.Models.X12DelimiterOverrides&gt; X12DelimiterOverrides { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.ResourceManager.Logic.Models.X12DelimiterOverrides&gt; X12DelimiterOverrides" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Logic.Models.X12ProtocolSettings.X12DelimiterOverrides" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property X12DelimiterOverrides As IList(Of X12DelimiterOverrides)" />
      <MemberSignature Language="F#" Value="member this.X12DelimiterOverrides : System.Collections.Generic.IList&lt;Azure.ResourceManager.Logic.Models.X12DelimiterOverrides&gt;" Usage="Azure.ResourceManager.Logic.Models.X12ProtocolSettings.X12DelimiterOverrides" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.ResourceManager.Logic.Models.X12DelimiterOverrides&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The X12 delimiter override settings. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
