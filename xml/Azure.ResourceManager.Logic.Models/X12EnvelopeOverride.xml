<Type Name="X12EnvelopeOverride" FullName="Azure.ResourceManager.Logic.Models.X12EnvelopeOverride">
  <TypeSignature Language="C#" Value="public class X12EnvelopeOverride" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X12EnvelopeOverride extends System.Object" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Logic.Models.X12EnvelopeOverride" />
  <TypeSignature Language="VB.NET" Value="Public Class X12EnvelopeOverride" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type X12EnvelopeOverride = class" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public class X12EnvelopeOverride : System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X12EnvelopeOverride extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public Class X12EnvelopeOverride&#xA;Implements IJsonModel(Of X12EnvelopeOverride), IPersistableModel(Of X12EnvelopeOverride)" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type X12EnvelopeOverride = class&#xA;    interface IJsonModel&lt;X12EnvelopeOverride&gt;&#xA;    interface IPersistableModel&lt;X12EnvelopeOverride&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> The X12 envelope override settings. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X12EnvelopeOverride (string targetNamespace, string protocolVersion, string messageId, string responsibleAgencyCode, string headerVersion, string senderApplicationId, string receiverApplicationId, Azure.ResourceManager.Logic.Models.X12DateFormat dateFormat, Azure.ResourceManager.Logic.Models.X12TimeFormat timeFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string targetNamespace, string protocolVersion, string messageId, string responsibleAgencyCode, string headerVersion, string senderApplicationId, string receiverApplicationId, valuetype Azure.ResourceManager.Logic.Models.X12DateFormat dateFormat, valuetype Azure.ResourceManager.Logic.Models.X12TimeFormat timeFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.Models.X12EnvelopeOverride.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.Logic.Models.X12DateFormat,Azure.ResourceManager.Logic.Models.X12TimeFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetNamespace As String, protocolVersion As String, messageId As String, responsibleAgencyCode As String, headerVersion As String, senderApplicationId As String, receiverApplicationId As String, dateFormat As X12DateFormat, timeFormat As X12TimeFormat)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.Logic.Models.X12EnvelopeOverride : string * string * string * string * string * string * string * Azure.ResourceManager.Logic.Models.X12DateFormat * Azure.ResourceManager.Logic.Models.X12TimeFormat -&gt; Azure.ResourceManager.Logic.Models.X12EnvelopeOverride" Usage="new Azure.ResourceManager.Logic.Models.X12EnvelopeOverride (targetNamespace, protocolVersion, messageId, responsibleAgencyCode, headerVersion, senderApplicationId, receiverApplicationId, dateFormat, timeFormat)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetNamespace" Type="System.String" />
        <Parameter Name="protocolVersion" Type="System.String" />
        <Parameter Name="messageId" Type="System.String" />
        <Parameter Name="responsibleAgencyCode" Type="System.String" />
        <Parameter Name="headerVersion" Type="System.String" />
        <Parameter Name="senderApplicationId" Type="System.String" />
        <Parameter Name="receiverApplicationId" Type="System.String" />
        <Parameter Name="dateFormat" Type="Azure.ResourceManager.Logic.Models.X12DateFormat" />
        <Parameter Name="timeFormat" Type="Azure.ResourceManager.Logic.Models.X12TimeFormat" />
      </Parameters>
      <Docs>
        <param name="targetNamespace"> The target namespace on which this envelope settings has to be applied. </param>
        <param name="protocolVersion"> The protocol version on which this envelope settings has to be applied. </param>
        <param name="messageId"> The message id on which this envelope settings has to be applied. </param>
        <param name="responsibleAgencyCode"> The responsible agency code. </param>
        <param name="headerVersion"> The header version. </param>
        <param name="senderApplicationId"> The sender application id. </param>
        <param name="receiverApplicationId"> The receiver application id. </param>
        <param name="dateFormat"> The date format. </param>
        <param name="timeFormat"> The time format. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Logic.Models.X12EnvelopeOverride" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetNamespace" />, <paramref name="protocolVersion" />, <paramref name="messageId" />, <paramref name="responsibleAgencyCode" />, <paramref name="headerVersion" />, <paramref name="senderApplicationId" /> or <paramref name="receiverApplicationId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DateFormat">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.Logic.Models.X12DateFormat DateFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Azure.ResourceManager.Logic.Models.X12DateFormat DateFormat" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Logic.Models.X12EnvelopeOverride.DateFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property DateFormat As X12DateFormat" />
      <MemberSignature Language="F#" Value="member this.DateFormat : Azure.ResourceManager.Logic.Models.X12DateFormat with get, set" Usage="Azure.ResourceManager.Logic.Models.X12EnvelopeOverride.DateFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.Models.X12DateFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The date format. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FunctionalIdentifierCode">
      <MemberSignature Language="C#" Value="public string FunctionalIdentifierCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FunctionalIdentifierCode" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Logic.Models.X12EnvelopeOverride.FunctionalIdentifierCode" />
      <MemberSignature Language="VB.NET" Value="Public Property FunctionalIdentifierCode As String" />
      <MemberSignature Language="F#" Value="member this.FunctionalIdentifierCode : string with get, set" Usage="Azure.ResourceManager.Logic.Models.X12EnvelopeOverride.FunctionalIdentifierCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The functional identifier code. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderVersion">
      <MemberSignature Language="C#" Value="public string HeaderVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderVersion" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Logic.Models.X12EnvelopeOverride.HeaderVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderVersion As String" />
      <MemberSignature Language="F#" Value="member this.HeaderVersion : string with get, set" Usage="Azure.ResourceManager.Logic.Models.X12EnvelopeOverride.HeaderVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The header version. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageId">
      <MemberSignature Language="C#" Value="public string MessageId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MessageId" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Logic.Models.X12EnvelopeOverride.MessageId" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageId As String" />
      <MemberSignature Language="F#" Value="member this.MessageId : string with get, set" Usage="Azure.ResourceManager.Logic.Models.X12EnvelopeOverride.MessageId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The message id on which this envelope settings has to be applied. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtocolVersion">
      <MemberSignature Language="C#" Value="public string ProtocolVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProtocolVersion" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Logic.Models.X12EnvelopeOverride.ProtocolVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtocolVersion As String" />
      <MemberSignature Language="F#" Value="member this.ProtocolVersion : string with get, set" Usage="Azure.ResourceManager.Logic.Models.X12EnvelopeOverride.ProtocolVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The protocol version on which this envelope settings has to be applied. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiverApplicationId">
      <MemberSignature Language="C#" Value="public string ReceiverApplicationId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReceiverApplicationId" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Logic.Models.X12EnvelopeOverride.ReceiverApplicationId" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiverApplicationId As String" />
      <MemberSignature Language="F#" Value="member this.ReceiverApplicationId : string with get, set" Usage="Azure.ResourceManager.Logic.Models.X12EnvelopeOverride.ReceiverApplicationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The receiver application id. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponsibleAgencyCode">
      <MemberSignature Language="C#" Value="public string ResponsibleAgencyCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResponsibleAgencyCode" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Logic.Models.X12EnvelopeOverride.ResponsibleAgencyCode" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponsibleAgencyCode As String" />
      <MemberSignature Language="F#" Value="member this.ResponsibleAgencyCode : string with get, set" Usage="Azure.ResourceManager.Logic.Models.X12EnvelopeOverride.ResponsibleAgencyCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The responsible agency code. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SenderApplicationId">
      <MemberSignature Language="C#" Value="public string SenderApplicationId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SenderApplicationId" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Logic.Models.X12EnvelopeOverride.SenderApplicationId" />
      <MemberSignature Language="VB.NET" Value="Public Property SenderApplicationId As String" />
      <MemberSignature Language="F#" Value="member this.SenderApplicationId : string with get, set" Usage="Azure.ResourceManager.Logic.Models.X12EnvelopeOverride.SenderApplicationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The sender application id. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.Logic.Models.X12EnvelopeOverride IJsonModel&lt;X12EnvelopeOverride&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.Logic.Models.X12EnvelopeOverride System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.Models.X12EnvelopeOverride.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#Logic#Models#X12EnvelopeOverride&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As X12EnvelopeOverride Implements IJsonModel(Of X12EnvelopeOverride).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Logic.Models.X12EnvelopeOverride" Usage="x12EnvelopeOverride.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.Models.X12EnvelopeOverride</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;X12EnvelopeOverride&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.Models.X12EnvelopeOverride.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#Logic#Models#X12EnvelopeOverride&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of X12EnvelopeOverride).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="x12EnvelopeOverride.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.Logic.Models.X12EnvelopeOverride IPersistableModel&lt;X12EnvelopeOverride&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.Logic.Models.X12EnvelopeOverride System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.Models.X12EnvelopeOverride.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Logic#Models#X12EnvelopeOverride&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As X12EnvelopeOverride Implements IPersistableModel(Of X12EnvelopeOverride).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Logic.Models.X12EnvelopeOverride" Usage="x12EnvelopeOverride.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.Models.X12EnvelopeOverride</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;X12EnvelopeOverride&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.Models.X12EnvelopeOverride.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Logic#Models#X12EnvelopeOverride&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of X12EnvelopeOverride).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="x12EnvelopeOverride.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;X12EnvelopeOverride&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.Models.X12EnvelopeOverride.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Logic#Models#X12EnvelopeOverride&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of X12EnvelopeOverride).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="x12EnvelopeOverride.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Logic.Models.X12EnvelopeOverride&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TargetNamespace">
      <MemberSignature Language="C#" Value="public string TargetNamespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetNamespace" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Logic.Models.X12EnvelopeOverride.TargetNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetNamespace As String" />
      <MemberSignature Language="F#" Value="member this.TargetNamespace : string with get, set" Usage="Azure.ResourceManager.Logic.Models.X12EnvelopeOverride.TargetNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The target namespace on which this envelope settings has to be applied. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeFormat">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.Logic.Models.X12TimeFormat TimeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Azure.ResourceManager.Logic.Models.X12TimeFormat TimeFormat" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Logic.Models.X12EnvelopeOverride.TimeFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeFormat As X12TimeFormat" />
      <MemberSignature Language="F#" Value="member this.TimeFormat : Azure.ResourceManager.Logic.Models.X12TimeFormat with get, set" Usage="Azure.ResourceManager.Logic.Models.X12EnvelopeOverride.TimeFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.Models.X12TimeFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The time format. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
