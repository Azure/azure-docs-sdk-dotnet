<Type Name="ClassificationModel" FullName="Azure.ResourceManager.MachineLearning.Models.ClassificationModel">
  <TypeSignature Language="C#" Value="public readonly struct ClassificationModel : IEquatable&lt;Azure.ResourceManager.MachineLearning.Models.ClassificationModel&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ClassificationModel extends System.ValueType implements class System.IEquatable`1&lt;valuetype Azure.ResourceManager.MachineLearning.Models.ClassificationModel&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.MachineLearning.Models.ClassificationModel" />
  <TypeSignature Language="VB.NET" Value="Public Structure ClassificationModel&#xA;Implements IEquatable(Of ClassificationModel)" />
  <TypeSignature Language="F#" Value="type ClassificationModel = struct" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Azure.ResourceManager.MachineLearning.Models.ClassificationModel&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Enum for all classification models supported by AutoML. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClassificationModel (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.ClassificationModel.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.MachineLearning.Models.ClassificationModel : string -&gt; Azure.ResourceManager.MachineLearning.Models.ClassificationModel" Usage="new Azure.ResourceManager.MachineLearning.Models.ClassificationModel value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MachineLearning.Models.ClassificationModel" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="BernoulliNaiveBayes">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ClassificationModel BernoulliNaiveBayes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ClassificationModel BernoulliNaiveBayes" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ClassificationModel.BernoulliNaiveBayes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property BernoulliNaiveBayes As ClassificationModel" />
      <MemberSignature Language="F#" Value="static member BernoulliNaiveBayes : Azure.ResourceManager.MachineLearning.Models.ClassificationModel" Usage="Azure.ResourceManager.MachineLearning.Models.ClassificationModel.BernoulliNaiveBayes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ClassificationModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Naive Bayes classifier for multivariate Bernoulli models. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecisionTree">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ClassificationModel DecisionTree { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ClassificationModel DecisionTree" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ClassificationModel.DecisionTree" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecisionTree As ClassificationModel" />
      <MemberSignature Language="F#" Value="static member DecisionTree : Azure.ResourceManager.MachineLearning.Models.ClassificationModel" Usage="Azure.ResourceManager.MachineLearning.Models.ClassificationModel.DecisionTree" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ClassificationModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Decision Trees are a non-parametric supervised learning method used for both classification and regression tasks.
            The goal is to create a model that predicts the value of a target variable by learning simple decision rules inferred from the data features.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Azure.ResourceManager.MachineLearning.Models.ClassificationModel other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype Azure.ResourceManager.MachineLearning.Models.ClassificationModel other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.ClassificationModel.Equals(Azure.ResourceManager.MachineLearning.Models.ClassificationModel)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ClassificationModel) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Azure.ResourceManager.MachineLearning.Models.ClassificationModel -&gt; bool" Usage="classificationModel.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Azure.ResourceManager.MachineLearning.Models.ClassificationModel" />
      </Parameters>
      <Docs>
        <param name="other">An object to compare with this object.</param>
        <summary>Indicates whether the current object is equal to another object of the same type.</summary>
        <returns>
          <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.ClassificationModel.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="classificationModel.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to compare with the current instance.</param>
        <summary>Indicates whether this instance and a specified object are equal.</summary>
        <returns>
          <see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtremeRandomTrees">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ClassificationModel ExtremeRandomTrees { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ClassificationModel ExtremeRandomTrees" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ClassificationModel.ExtremeRandomTrees" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ExtremeRandomTrees As ClassificationModel" />
      <MemberSignature Language="F#" Value="static member ExtremeRandomTrees : Azure.ResourceManager.MachineLearning.Models.ClassificationModel" Usage="Azure.ResourceManager.MachineLearning.Models.ClassificationModel.ExtremeRandomTrees" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ClassificationModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Extreme Trees is an ensemble machine learning algorithm that combines the predictions from many decision trees. It is related to the widely used random forest algorithm. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.ClassificationModel.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="classificationModel.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the hash code for this instance.</summary>
        <returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GradientBoosting">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ClassificationModel GradientBoosting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ClassificationModel GradientBoosting" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ClassificationModel.GradientBoosting" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property GradientBoosting As ClassificationModel" />
      <MemberSignature Language="F#" Value="static member GradientBoosting : Azure.ResourceManager.MachineLearning.Models.ClassificationModel" Usage="Azure.ResourceManager.MachineLearning.Models.ClassificationModel.GradientBoosting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ClassificationModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The technique of transiting week learners into a strong learner is called Boosting. The gradient boosting algorithm process works on this theory of execution. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KNN">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ClassificationModel KNN { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ClassificationModel KNN" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ClassificationModel.KNN" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property KNN As ClassificationModel" />
      <MemberSignature Language="F#" Value="static member KNN : Azure.ResourceManager.MachineLearning.Models.ClassificationModel" Usage="Azure.ResourceManager.MachineLearning.Models.ClassificationModel.KNN" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ClassificationModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            K-nearest neighbors (KNN) algorithm uses 'feature similarity' to predict the values of new datapoints
            which further means that the new data point will be assigned a value based on how closely it matches the points in the training set.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LightGBM">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ClassificationModel LightGBM { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ClassificationModel LightGBM" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ClassificationModel.LightGBM" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LightGBM As ClassificationModel" />
      <MemberSignature Language="F#" Value="static member LightGBM : Azure.ResourceManager.MachineLearning.Models.ClassificationModel" Usage="Azure.ResourceManager.MachineLearning.Models.ClassificationModel.LightGBM" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ClassificationModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> LightGBM is a gradient boosting framework that uses tree based learning algorithms. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinearSVM">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ClassificationModel LinearSVM { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ClassificationModel LinearSVM" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ClassificationModel.LinearSVM" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LinearSVM As ClassificationModel" />
      <MemberSignature Language="F#" Value="static member LinearSVM : Azure.ResourceManager.MachineLearning.Models.ClassificationModel" Usage="Azure.ResourceManager.MachineLearning.Models.ClassificationModel.LinearSVM" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ClassificationModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A support vector machine (SVM) is a supervised machine learning model that uses classification algorithms for two-group classification problems.
            After giving an SVM model sets of labeled training data for each category, they're able to categorize new text.
            Linear SVM performs best when input data is linear, i.e., data can be easily classified by drawing the straight line between classified values on a plotted graph.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogisticRegression">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ClassificationModel LogisticRegression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ClassificationModel LogisticRegression" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ClassificationModel.LogisticRegression" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LogisticRegression As ClassificationModel" />
      <MemberSignature Language="F#" Value="static member LogisticRegression : Azure.ResourceManager.MachineLearning.Models.ClassificationModel" Usage="Azure.ResourceManager.MachineLearning.Models.ClassificationModel.LogisticRegression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ClassificationModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Logistic regression is a fundamental classification technique.
            It belongs to the group of linear classifiers and is somewhat similar to polynomial and linear regression.
            Logistic regression is fast and relatively uncomplicated, and it's convenient for you to interpret the results.
            Although it's essentially a method for binary classification, it can also be applied to multiclass problems.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultinomialNaiveBayes">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ClassificationModel MultinomialNaiveBayes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ClassificationModel MultinomialNaiveBayes" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ClassificationModel.MultinomialNaiveBayes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MultinomialNaiveBayes As ClassificationModel" />
      <MemberSignature Language="F#" Value="static member MultinomialNaiveBayes : Azure.ResourceManager.MachineLearning.Models.ClassificationModel" Usage="Azure.ResourceManager.MachineLearning.Models.ClassificationModel.MultinomialNaiveBayes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ClassificationModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The multinomial Naive Bayes classifier is suitable for classification with discrete features (e.g., word counts for text classification).
            The multinomial distribution normally requires integer feature counts. However, in practice, fractional counts such as tf-idf may also work.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Azure.ResourceManager.MachineLearning.Models.ClassificationModel left, Azure.ResourceManager.MachineLearning.Models.ClassificationModel right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype Azure.ResourceManager.MachineLearning.Models.ClassificationModel left, valuetype Azure.ResourceManager.MachineLearning.Models.ClassificationModel right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.ClassificationModel.op_Equality(Azure.ResourceManager.MachineLearning.Models.ClassificationModel,Azure.ResourceManager.MachineLearning.Models.ClassificationModel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ClassificationModel, right As ClassificationModel) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Azure.ResourceManager.MachineLearning.Models.ClassificationModel * Azure.ResourceManager.MachineLearning.Models.ClassificationModel -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Azure.ResourceManager.MachineLearning.Models.ClassificationModel" />
        <Parameter Name="right" Type="Azure.ResourceManager.MachineLearning.Models.ClassificationModel" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary> Determines if two <see cref="T:Azure.ResourceManager.MachineLearning.Models.ClassificationModel" /> values are the same. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Azure.ResourceManager.MachineLearning.Models.ClassificationModel (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype Azure.ResourceManager.MachineLearning.Models.ClassificationModel op_Implicit(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.ClassificationModel.op_Implicit(System.String)~Azure.ResourceManager.MachineLearning.Models.ClassificationModel" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As String) As ClassificationModel" />
      <MemberSignature Language="F#" Value="static member op_Implicit : string -&gt; Azure.ResourceManager.MachineLearning.Models.ClassificationModel" Usage="Azure.ResourceManager.MachineLearning.Models.ClassificationModel.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ClassificationModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MachineLearning.Models.ClassificationModel" />. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Azure.ResourceManager.MachineLearning.Models.ClassificationModel left, Azure.ResourceManager.MachineLearning.Models.ClassificationModel right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype Azure.ResourceManager.MachineLearning.Models.ClassificationModel left, valuetype Azure.ResourceManager.MachineLearning.Models.ClassificationModel right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.ClassificationModel.op_Inequality(Azure.ResourceManager.MachineLearning.Models.ClassificationModel,Azure.ResourceManager.MachineLearning.Models.ClassificationModel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ClassificationModel, right As ClassificationModel) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Azure.ResourceManager.MachineLearning.Models.ClassificationModel * Azure.ResourceManager.MachineLearning.Models.ClassificationModel -&gt; bool" Usage="Azure.ResourceManager.MachineLearning.Models.ClassificationModel.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Azure.ResourceManager.MachineLearning.Models.ClassificationModel" />
        <Parameter Name="right" Type="Azure.ResourceManager.MachineLearning.Models.ClassificationModel" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary> Determines if two <see cref="T:Azure.ResourceManager.MachineLearning.Models.ClassificationModel" /> values are not the same. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RandomForest">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ClassificationModel RandomForest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ClassificationModel RandomForest" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ClassificationModel.RandomForest" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RandomForest As ClassificationModel" />
      <MemberSignature Language="F#" Value="static member RandomForest : Azure.ResourceManager.MachineLearning.Models.ClassificationModel" Usage="Azure.ResourceManager.MachineLearning.Models.ClassificationModel.RandomForest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ClassificationModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Random forest is a supervised learning algorithm.
            The "forest" it builds, is an ensemble of decision trees, usually trained with the “bagging” method.
            The general idea of the bagging method is that a combination of learning models increases the overall result.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SGD">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ClassificationModel SGD { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ClassificationModel SGD" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ClassificationModel.SGD" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SGD As ClassificationModel" />
      <MemberSignature Language="F#" Value="static member SGD : Azure.ResourceManager.MachineLearning.Models.ClassificationModel" Usage="Azure.ResourceManager.MachineLearning.Models.ClassificationModel.SGD" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ClassificationModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            SGD: Stochastic gradient descent is an optimization algorithm often used in machine learning applications
            to find the model parameters that correspond to the best fit between predicted and actual outputs.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SVM">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ClassificationModel SVM { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ClassificationModel SVM" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ClassificationModel.SVM" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SVM As ClassificationModel" />
      <MemberSignature Language="F#" Value="static member SVM : Azure.ResourceManager.MachineLearning.Models.ClassificationModel" Usage="Azure.ResourceManager.MachineLearning.Models.ClassificationModel.SVM" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ClassificationModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A support vector machine (SVM) is a supervised machine learning model that uses classification algorithms for two-group classification problems.
            After giving an SVM model sets of labeled training data for each category, they're able to categorize new text.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.ClassificationModel.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="classificationModel.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the fully qualified type name of this instance.</summary>
        <returns>The fully qualified type name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XGBoostClassifier">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ClassificationModel XGBoostClassifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ClassificationModel XGBoostClassifier" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ClassificationModel.XGBoostClassifier" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property XGBoostClassifier As ClassificationModel" />
      <MemberSignature Language="F#" Value="static member XGBoostClassifier : Azure.ResourceManager.MachineLearning.Models.ClassificationModel" Usage="Azure.ResourceManager.MachineLearning.Models.ClassificationModel.XGBoostClassifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ClassificationModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> XGBoost: Extreme Gradient Boosting Algorithm. This algorithm is used for structured data where target column values can be divided into distinct class values. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
