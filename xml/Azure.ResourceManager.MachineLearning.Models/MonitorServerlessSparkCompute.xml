<Type Name="MonitorServerlessSparkCompute" FullName="Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute">
  <TypeSignature Language="C#" Value="public class MonitorServerlessSparkCompute : Azure.ResourceManager.MachineLearning.Models.MonitorComputeConfigurationBase, System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MonitorServerlessSparkCompute extends Azure.ResourceManager.MachineLearning.Models.MonitorComputeConfigurationBase implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute" />
  <TypeSignature Language="VB.NET" Value="Public Class MonitorServerlessSparkCompute&#xA;Inherits MonitorComputeConfigurationBase&#xA;Implements IJsonModel(Of MonitorServerlessSparkCompute), IPersistableModel(Of MonitorServerlessSparkCompute)" />
  <TypeSignature Language="F#" Value="type MonitorServerlessSparkCompute = class&#xA;    inherit MonitorComputeConfigurationBase&#xA;    interface IJsonModel&lt;MonitorServerlessSparkCompute&gt;&#xA;    interface IPersistableModel&lt;MonitorServerlessSparkCompute&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.MachineLearning.Models.MonitorComputeConfigurationBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Monitor serverless spark compute definition. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MonitorServerlessSparkCompute (Azure.ResourceManager.MachineLearning.Models.MonitorComputeIdentityBase computeIdentity, string instanceType, string runtimeVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.ResourceManager.MachineLearning.Models.MonitorComputeIdentityBase computeIdentity, string instanceType, string runtimeVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute.#ctor(Azure.ResourceManager.MachineLearning.Models.MonitorComputeIdentityBase,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (computeIdentity As MonitorComputeIdentityBase, instanceType As String, runtimeVersion As String)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute : Azure.ResourceManager.MachineLearning.Models.MonitorComputeIdentityBase * string * string -&gt; Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute" Usage="new Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute (computeIdentity, instanceType, runtimeVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="computeIdentity" Type="Azure.ResourceManager.MachineLearning.Models.MonitorComputeIdentityBase" />
        <Parameter Name="instanceType" Type="System.String" />
        <Parameter Name="runtimeVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="computeIdentity">
            [Required] The identity scheme leveraged to by the spark jobs running on serverless Spark.
            Please note <see cref="T:Azure.ResourceManager.MachineLearning.Models.MonitorComputeIdentityBase" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.MachineLearning.Models.AmlTokenComputeIdentity" /> and <see cref="T:Azure.ResourceManager.MachineLearning.Models.ManagedComputeIdentity" />.
            </param>
        <param name="instanceType"> [Required] The instance type running the Spark job. </param>
        <param name="runtimeVersion"> [Required] The Spark runtime version. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="computeIdentity" />, <paramref name="instanceType" /> or <paramref name="runtimeVersion" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ComputeIdentity">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.MachineLearning.Models.MonitorComputeIdentityBase ComputeIdentity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.MachineLearning.Models.MonitorComputeIdentityBase ComputeIdentity" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute.ComputeIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Property ComputeIdentity As MonitorComputeIdentityBase" />
      <MemberSignature Language="F#" Value="member this.ComputeIdentity : Azure.ResourceManager.MachineLearning.Models.MonitorComputeIdentityBase with get, set" Usage="Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute.ComputeIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.MonitorComputeIdentityBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            [Required] The identity scheme leveraged to by the spark jobs running on serverless Spark.
            Please note <see cref="T:Azure.ResourceManager.MachineLearning.Models.MonitorComputeIdentityBase" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.MachineLearning.Models.AmlTokenComputeIdentity" /> and <see cref="T:Azure.ResourceManager.MachineLearning.Models.ManagedComputeIdentity" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceType">
      <MemberSignature Language="C#" Value="public string InstanceType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstanceType" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute.InstanceType" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceType As String" />
      <MemberSignature Language="F#" Value="member this.InstanceType : string with get, set" Usage="Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute.InstanceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> [Required] The instance type running the Spark job. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RuntimeVersion">
      <MemberSignature Language="C#" Value="public string RuntimeVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RuntimeVersion" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute.RuntimeVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property RuntimeVersion As String" />
      <MemberSignature Language="F#" Value="member this.RuntimeVersion : string with get, set" Usage="Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute.RuntimeVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> [Required] The Spark runtime version. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute IJsonModel&lt;MonitorServerlessSparkCompute&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#MachineLearning#Models#MonitorServerlessSparkCompute&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As MonitorServerlessSparkCompute Implements IJsonModel(Of MonitorServerlessSparkCompute).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute" Usage="monitorServerlessSparkCompute.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;MonitorServerlessSparkCompute&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#MachineLearning#Models#MonitorServerlessSparkCompute&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of MonitorServerlessSparkCompute).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="monitorServerlessSparkCompute.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute IPersistableModel&lt;MonitorServerlessSparkCompute&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#MachineLearning#Models#MonitorServerlessSparkCompute&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As MonitorServerlessSparkCompute Implements IPersistableModel(Of MonitorServerlessSparkCompute).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute" Usage="monitorServerlessSparkCompute.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;MonitorServerlessSparkCompute&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#MachineLearning#Models#MonitorServerlessSparkCompute&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of MonitorServerlessSparkCompute).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="monitorServerlessSparkCompute.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;MonitorServerlessSparkCompute&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#MachineLearning#Models#MonitorServerlessSparkCompute&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of MonitorServerlessSparkCompute).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="monitorServerlessSparkCompute.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.MonitorServerlessSparkCompute&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
