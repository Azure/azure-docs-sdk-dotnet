<Type Name="RegressionModel" FullName="Azure.ResourceManager.MachineLearning.Models.RegressionModel">
  <TypeSignature Language="C#" Value="public readonly struct RegressionModel : IEquatable&lt;Azure.ResourceManager.MachineLearning.Models.RegressionModel&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit RegressionModel extends System.ValueType implements class System.IEquatable`1&lt;valuetype Azure.ResourceManager.MachineLearning.Models.RegressionModel&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.MachineLearning.Models.RegressionModel" />
  <TypeSignature Language="VB.NET" Value="Public Structure RegressionModel&#xA;Implements IEquatable(Of RegressionModel)" />
  <TypeSignature Language="F#" Value="type RegressionModel = struct" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Azure.ResourceManager.MachineLearning.Models.RegressionModel&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Enum for all Regression models supported by AutoML. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegressionModel (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.RegressionModel.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.MachineLearning.Models.RegressionModel : string -&gt; Azure.ResourceManager.MachineLearning.Models.RegressionModel" Usage="new Azure.ResourceManager.MachineLearning.Models.RegressionModel value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MachineLearning.Models.RegressionModel" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DecisionTree">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.RegressionModel DecisionTree { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.RegressionModel DecisionTree" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.RegressionModel.DecisionTree" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecisionTree As RegressionModel" />
      <MemberSignature Language="F#" Value="static member DecisionTree : Azure.ResourceManager.MachineLearning.Models.RegressionModel" Usage="Azure.ResourceManager.MachineLearning.Models.RegressionModel.DecisionTree" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.RegressionModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Decision Trees are a non-parametric supervised learning method used for both classification and regression tasks.
            The goal is to create a model that predicts the value of a target variable by learning simple decision rules inferred from the data features.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElasticNet">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.RegressionModel ElasticNet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.RegressionModel ElasticNet" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.RegressionModel.ElasticNet" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ElasticNet As RegressionModel" />
      <MemberSignature Language="F#" Value="static member ElasticNet : Azure.ResourceManager.MachineLearning.Models.RegressionModel" Usage="Azure.ResourceManager.MachineLearning.Models.RegressionModel.ElasticNet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.RegressionModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Elastic net is a popular type of regularized linear regression that combines two popular penalties, specifically the L1 and L2 penalty functions. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Azure.ResourceManager.MachineLearning.Models.RegressionModel other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype Azure.ResourceManager.MachineLearning.Models.RegressionModel other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.RegressionModel.Equals(Azure.ResourceManager.MachineLearning.Models.RegressionModel)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As RegressionModel) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Azure.ResourceManager.MachineLearning.Models.RegressionModel -&gt; bool" Usage="regressionModel.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Azure.ResourceManager.MachineLearning.Models.RegressionModel" />
      </Parameters>
      <Docs>
        <param name="other">An object to compare with this object.</param>
        <summary>Indicates whether the current object is equal to another object of the same type.</summary>
        <returns>
          <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.RegressionModel.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="regressionModel.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to compare with the current instance.</param>
        <summary>Indicates whether this instance and a specified object are equal.</summary>
        <returns>
          <see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtremeRandomTrees">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.RegressionModel ExtremeRandomTrees { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.RegressionModel ExtremeRandomTrees" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.RegressionModel.ExtremeRandomTrees" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ExtremeRandomTrees As RegressionModel" />
      <MemberSignature Language="F#" Value="static member ExtremeRandomTrees : Azure.ResourceManager.MachineLearning.Models.RegressionModel" Usage="Azure.ResourceManager.MachineLearning.Models.RegressionModel.ExtremeRandomTrees" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.RegressionModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Extreme Trees is an ensemble machine learning algorithm that combines the predictions from many decision trees. It is related to the widely used random forest algorithm. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.RegressionModel.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="regressionModel.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the hash code for this instance.</summary>
        <returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GradientBoosting">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.RegressionModel GradientBoosting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.RegressionModel GradientBoosting" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.RegressionModel.GradientBoosting" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property GradientBoosting As RegressionModel" />
      <MemberSignature Language="F#" Value="static member GradientBoosting : Azure.ResourceManager.MachineLearning.Models.RegressionModel" Usage="Azure.ResourceManager.MachineLearning.Models.RegressionModel.GradientBoosting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.RegressionModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The technique of transiting week learners into a strong learner is called Boosting. The gradient boosting algorithm process works on this theory of execution. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KNN">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.RegressionModel KNN { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.RegressionModel KNN" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.RegressionModel.KNN" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property KNN As RegressionModel" />
      <MemberSignature Language="F#" Value="static member KNN : Azure.ResourceManager.MachineLearning.Models.RegressionModel" Usage="Azure.ResourceManager.MachineLearning.Models.RegressionModel.KNN" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.RegressionModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            K-nearest neighbors (KNN) algorithm uses 'feature similarity' to predict the values of new datapoints
            which further means that the new data point will be assigned a value based on how closely it matches the points in the training set.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LassoLars">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.RegressionModel LassoLars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.RegressionModel LassoLars" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.RegressionModel.LassoLars" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LassoLars As RegressionModel" />
      <MemberSignature Language="F#" Value="static member LassoLars : Azure.ResourceManager.MachineLearning.Models.RegressionModel" Usage="Azure.ResourceManager.MachineLearning.Models.RegressionModel.LassoLars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.RegressionModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Lasso model fit with Least Angle Regression a.k.a. Lars. It is a Linear Model trained with an L1 prior as regularizer. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LightGBM">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.RegressionModel LightGBM { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.RegressionModel LightGBM" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.RegressionModel.LightGBM" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LightGBM As RegressionModel" />
      <MemberSignature Language="F#" Value="static member LightGBM : Azure.ResourceManager.MachineLearning.Models.RegressionModel" Usage="Azure.ResourceManager.MachineLearning.Models.RegressionModel.LightGBM" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.RegressionModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> LightGBM is a gradient boosting framework that uses tree based learning algorithms. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Azure.ResourceManager.MachineLearning.Models.RegressionModel left, Azure.ResourceManager.MachineLearning.Models.RegressionModel right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype Azure.ResourceManager.MachineLearning.Models.RegressionModel left, valuetype Azure.ResourceManager.MachineLearning.Models.RegressionModel right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.RegressionModel.op_Equality(Azure.ResourceManager.MachineLearning.Models.RegressionModel,Azure.ResourceManager.MachineLearning.Models.RegressionModel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As RegressionModel, right As RegressionModel) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Azure.ResourceManager.MachineLearning.Models.RegressionModel * Azure.ResourceManager.MachineLearning.Models.RegressionModel -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Azure.ResourceManager.MachineLearning.Models.RegressionModel" />
        <Parameter Name="right" Type="Azure.ResourceManager.MachineLearning.Models.RegressionModel" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary> Determines if two <see cref="T:Azure.ResourceManager.MachineLearning.Models.RegressionModel" /> values are the same. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Azure.ResourceManager.MachineLearning.Models.RegressionModel (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype Azure.ResourceManager.MachineLearning.Models.RegressionModel op_Implicit(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.RegressionModel.op_Implicit(System.String)~Azure.ResourceManager.MachineLearning.Models.RegressionModel" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As String) As RegressionModel" />
      <MemberSignature Language="F#" Value="static member op_Implicit : string -&gt; Azure.ResourceManager.MachineLearning.Models.RegressionModel" Usage="Azure.ResourceManager.MachineLearning.Models.RegressionModel.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.RegressionModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MachineLearning.Models.RegressionModel" />. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Azure.ResourceManager.MachineLearning.Models.RegressionModel left, Azure.ResourceManager.MachineLearning.Models.RegressionModel right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype Azure.ResourceManager.MachineLearning.Models.RegressionModel left, valuetype Azure.ResourceManager.MachineLearning.Models.RegressionModel right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.RegressionModel.op_Inequality(Azure.ResourceManager.MachineLearning.Models.RegressionModel,Azure.ResourceManager.MachineLearning.Models.RegressionModel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As RegressionModel, right As RegressionModel) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Azure.ResourceManager.MachineLearning.Models.RegressionModel * Azure.ResourceManager.MachineLearning.Models.RegressionModel -&gt; bool" Usage="Azure.ResourceManager.MachineLearning.Models.RegressionModel.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Azure.ResourceManager.MachineLearning.Models.RegressionModel" />
        <Parameter Name="right" Type="Azure.ResourceManager.MachineLearning.Models.RegressionModel" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary> Determines if two <see cref="T:Azure.ResourceManager.MachineLearning.Models.RegressionModel" /> values are not the same. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RandomForest">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.RegressionModel RandomForest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.RegressionModel RandomForest" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.RegressionModel.RandomForest" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RandomForest As RegressionModel" />
      <MemberSignature Language="F#" Value="static member RandomForest : Azure.ResourceManager.MachineLearning.Models.RegressionModel" Usage="Azure.ResourceManager.MachineLearning.Models.RegressionModel.RandomForest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.RegressionModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Random forest is a supervised learning algorithm.
            The "forest" it builds, is an ensemble of decision trees, usually trained with the “bagging” method.
            The general idea of the bagging method is that a combination of learning models increases the overall result.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SGD">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.RegressionModel SGD { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.RegressionModel SGD" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.RegressionModel.SGD" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SGD As RegressionModel" />
      <MemberSignature Language="F#" Value="static member SGD : Azure.ResourceManager.MachineLearning.Models.RegressionModel" Usage="Azure.ResourceManager.MachineLearning.Models.RegressionModel.SGD" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.RegressionModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            SGD: Stochastic gradient descent is an optimization algorithm often used in machine learning applications
            to find the model parameters that correspond to the best fit between predicted and actual outputs.
            It's an inexact but powerful technique.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.RegressionModel.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="regressionModel.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the fully qualified type name of this instance.</summary>
        <returns>The fully qualified type name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XGBoostRegressor">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.RegressionModel XGBoostRegressor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.RegressionModel XGBoostRegressor" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.RegressionModel.XGBoostRegressor" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property XGBoostRegressor As RegressionModel" />
      <MemberSignature Language="F#" Value="static member XGBoostRegressor : Azure.ResourceManager.MachineLearning.Models.RegressionModel" Usage="Azure.ResourceManager.MachineLearning.Models.RegressionModel.XGBoostRegressor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.RegressionModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> XGBoostRegressor: Extreme Gradient Boosting Regressor is a supervised machine learning model using ensemble of base learners. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
