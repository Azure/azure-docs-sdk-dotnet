<Type Name="ForecastingModel" FullName="Azure.ResourceManager.MachineLearning.Models.ForecastingModel">
  <TypeSignature Language="C#" Value="public readonly struct ForecastingModel : IEquatable&lt;Azure.ResourceManager.MachineLearning.Models.ForecastingModel&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ForecastingModel extends System.ValueType implements class System.IEquatable`1&lt;valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModel&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.MachineLearning.Models.ForecastingModel" />
  <TypeSignature Language="VB.NET" Value="Public Structure ForecastingModel&#xA;Implements IEquatable(Of ForecastingModel)" />
  <TypeSignature Language="F#" Value="type ForecastingModel = struct" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Azure.ResourceManager.MachineLearning.Models.ForecastingModel&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Enum for all forecasting models supported by AutoML. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ForecastingModel (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.ForecastingModel.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.MachineLearning.Models.ForecastingModel : string -&gt; Azure.ResourceManager.MachineLearning.Models.ForecastingModel" Usage="new Azure.ResourceManager.MachineLearning.Models.ForecastingModel value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MachineLearning.Models.ForecastingModel" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Arimax">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModel Arimax { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModel Arimax" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModel.Arimax" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Arimax As ForecastingModel" />
      <MemberSignature Language="F#" Value="static member Arimax : Azure.ResourceManager.MachineLearning.Models.ForecastingModel" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModel.Arimax" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An Autoregressive Integrated Moving Average with Explanatory Variable (ARIMAX) model can be viewed as a multiple regression model with one or more autoregressive (AR) terms and/or one or more moving average (MA) terms.
            This method is suitable for forecasting when data is stationary/non stationary, and multivariate with any type of data pattern, i.e., level/trend /seasonality/cyclicity.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoArima">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModel AutoArima { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModel AutoArima" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModel.AutoArima" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AutoArima As ForecastingModel" />
      <MemberSignature Language="F#" Value="static member AutoArima : Azure.ResourceManager.MachineLearning.Models.ForecastingModel" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModel.AutoArima" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Auto-Autoregressive Integrated Moving Average (ARIMA) model uses time-series data and statistical analysis to interpret the data and make future predictions.
            This model aims to explain data by using time series data on its past values and uses linear regression to make predictions.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModel Average { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModel Average" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModel.Average" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Average As ForecastingModel" />
      <MemberSignature Language="F#" Value="static member Average : Azure.ResourceManager.MachineLearning.Models.ForecastingModel" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModel.Average" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The Average forecasting model makes predictions by carrying forward the average of the target values for each time-series in the training data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecisionTree">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModel DecisionTree { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModel DecisionTree" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModel.DecisionTree" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecisionTree As ForecastingModel" />
      <MemberSignature Language="F#" Value="static member DecisionTree : Azure.ResourceManager.MachineLearning.Models.ForecastingModel" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModel.DecisionTree" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Decision Trees are a non-parametric supervised learning method used for both classification and regression tasks.
            The goal is to create a model that predicts the value of a target variable by learning simple decision rules inferred from the data features.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElasticNet">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModel ElasticNet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModel ElasticNet" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModel.ElasticNet" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ElasticNet As ForecastingModel" />
      <MemberSignature Language="F#" Value="static member ElasticNet : Azure.ResourceManager.MachineLearning.Models.ForecastingModel" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModel.ElasticNet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Elastic net is a popular type of regularized linear regression that combines two popular penalties, specifically the L1 and L2 penalty functions. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Azure.ResourceManager.MachineLearning.Models.ForecastingModel other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModel other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.ForecastingModel.Equals(Azure.ResourceManager.MachineLearning.Models.ForecastingModel)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ForecastingModel) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Azure.ResourceManager.MachineLearning.Models.ForecastingModel -&gt; bool" Usage="forecastingModel.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Azure.ResourceManager.MachineLearning.Models.ForecastingModel" />
      </Parameters>
      <Docs>
        <param name="other">An object to compare with this object.</param>
        <summary>Indicates whether the current object is equal to another object of the same type.</summary>
        <returns>
          <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.ForecastingModel.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="forecastingModel.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to compare with the current instance.</param>
        <summary>Indicates whether this instance and a specified object are equal.</summary>
        <returns>
          <see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExponentialSmoothing">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModel ExponentialSmoothing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModel ExponentialSmoothing" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModel.ExponentialSmoothing" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ExponentialSmoothing As ForecastingModel" />
      <MemberSignature Language="F#" Value="static member ExponentialSmoothing : Azure.ResourceManager.MachineLearning.Models.ForecastingModel" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModel.ExponentialSmoothing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Exponential smoothing is a time series forecasting method for univariate data that can be extended to support data with a systematic trend or seasonal component. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtremeRandomTrees">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModel ExtremeRandomTrees { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModel ExtremeRandomTrees" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModel.ExtremeRandomTrees" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ExtremeRandomTrees As ForecastingModel" />
      <MemberSignature Language="F#" Value="static member ExtremeRandomTrees : Azure.ResourceManager.MachineLearning.Models.ForecastingModel" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModel.ExtremeRandomTrees" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Extreme Trees is an ensemble machine learning algorithm that combines the predictions from many decision trees. It is related to the widely used random forest algorithm. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.ForecastingModel.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="forecastingModel.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the hash code for this instance.</summary>
        <returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GradientBoosting">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModel GradientBoosting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModel GradientBoosting" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModel.GradientBoosting" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property GradientBoosting As ForecastingModel" />
      <MemberSignature Language="F#" Value="static member GradientBoosting : Azure.ResourceManager.MachineLearning.Models.ForecastingModel" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModel.GradientBoosting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The technique of transiting week learners into a strong learner is called Boosting. The gradient boosting algorithm process works on this theory of execution. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KNN">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModel KNN { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModel KNN" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModel.KNN" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property KNN As ForecastingModel" />
      <MemberSignature Language="F#" Value="static member KNN : Azure.ResourceManager.MachineLearning.Models.ForecastingModel" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModel.KNN" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            K-nearest neighbors (KNN) algorithm uses 'feature similarity' to predict the values of new datapoints
            which further means that the new data point will be assigned a value based on how closely it matches the points in the training set.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LassoLars">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModel LassoLars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModel LassoLars" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModel.LassoLars" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LassoLars As ForecastingModel" />
      <MemberSignature Language="F#" Value="static member LassoLars : Azure.ResourceManager.MachineLearning.Models.ForecastingModel" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModel.LassoLars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Lasso model fit with Least Angle Regression a.k.a. Lars. It is a Linear Model trained with an L1 prior as regularizer. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LightGBM">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModel LightGBM { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModel LightGBM" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModel.LightGBM" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LightGBM As ForecastingModel" />
      <MemberSignature Language="F#" Value="static member LightGBM : Azure.ResourceManager.MachineLearning.Models.ForecastingModel" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModel.LightGBM" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> LightGBM is a gradient boosting framework that uses tree based learning algorithms. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Naive">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModel Naive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModel Naive" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModel.Naive" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Naive As ForecastingModel" />
      <MemberSignature Language="F#" Value="static member Naive : Azure.ResourceManager.MachineLearning.Models.ForecastingModel" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModel.Naive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The Naive forecasting model makes predictions by carrying forward the latest target value for each time-series in the training data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Azure.ResourceManager.MachineLearning.Models.ForecastingModel left, Azure.ResourceManager.MachineLearning.Models.ForecastingModel right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModel left, valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModel right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.ForecastingModel.op_Equality(Azure.ResourceManager.MachineLearning.Models.ForecastingModel,Azure.ResourceManager.MachineLearning.Models.ForecastingModel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ForecastingModel, right As ForecastingModel) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Azure.ResourceManager.MachineLearning.Models.ForecastingModel * Azure.ResourceManager.MachineLearning.Models.ForecastingModel -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Azure.ResourceManager.MachineLearning.Models.ForecastingModel" />
        <Parameter Name="right" Type="Azure.ResourceManager.MachineLearning.Models.ForecastingModel" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary> Determines if two <see cref="T:Azure.ResourceManager.MachineLearning.Models.ForecastingModel" /> values are the same. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Azure.ResourceManager.MachineLearning.Models.ForecastingModel (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModel op_Implicit(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.ForecastingModel.op_Implicit(System.String)~Azure.ResourceManager.MachineLearning.Models.ForecastingModel" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As String) As ForecastingModel" />
      <MemberSignature Language="F#" Value="static member op_Implicit : string -&gt; Azure.ResourceManager.MachineLearning.Models.ForecastingModel" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModel.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MachineLearning.Models.ForecastingModel" />. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Azure.ResourceManager.MachineLearning.Models.ForecastingModel left, Azure.ResourceManager.MachineLearning.Models.ForecastingModel right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModel left, valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModel right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.ForecastingModel.op_Inequality(Azure.ResourceManager.MachineLearning.Models.ForecastingModel,Azure.ResourceManager.MachineLearning.Models.ForecastingModel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ForecastingModel, right As ForecastingModel) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Azure.ResourceManager.MachineLearning.Models.ForecastingModel * Azure.ResourceManager.MachineLearning.Models.ForecastingModel -&gt; bool" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModel.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Azure.ResourceManager.MachineLearning.Models.ForecastingModel" />
        <Parameter Name="right" Type="Azure.ResourceManager.MachineLearning.Models.ForecastingModel" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary> Determines if two <see cref="T:Azure.ResourceManager.MachineLearning.Models.ForecastingModel" /> values are not the same. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Prophet">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModel Prophet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModel Prophet" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModel.Prophet" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Prophet As ForecastingModel" />
      <MemberSignature Language="F#" Value="static member Prophet : Azure.ResourceManager.MachineLearning.Models.ForecastingModel" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModel.Prophet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Prophet is a procedure for forecasting time series data based on an additive model where non-linear trends are fit with yearly, weekly, and daily seasonality, plus holiday effects.
            It works best with time series that have strong seasonal effects and several seasons of historical data. Prophet is robust to missing data and shifts in the trend, and typically handles outliers well.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RandomForest">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModel RandomForest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModel RandomForest" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModel.RandomForest" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RandomForest As ForecastingModel" />
      <MemberSignature Language="F#" Value="static member RandomForest : Azure.ResourceManager.MachineLearning.Models.ForecastingModel" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModel.RandomForest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Random forest is a supervised learning algorithm.
            The "forest" it builds, is an ensemble of decision trees, usually trained with the “bagging” method.
            The general idea of the bagging method is that a combination of learning models increases the overall result.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeasonalAverage">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModel SeasonalAverage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModel SeasonalAverage" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModel.SeasonalAverage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SeasonalAverage As ForecastingModel" />
      <MemberSignature Language="F#" Value="static member SeasonalAverage : Azure.ResourceManager.MachineLearning.Models.ForecastingModel" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModel.SeasonalAverage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The Seasonal Average forecasting model makes predictions by carrying forward the average value of the latest season of data for each time-series in the training data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeasonalNaive">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModel SeasonalNaive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModel SeasonalNaive" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModel.SeasonalNaive" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SeasonalNaive As ForecastingModel" />
      <MemberSignature Language="F#" Value="static member SeasonalNaive : Azure.ResourceManager.MachineLearning.Models.ForecastingModel" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModel.SeasonalNaive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The Seasonal Naive forecasting model makes predictions by carrying forward the latest season of target values for each time-series in the training data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SGD">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModel SGD { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModel SGD" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModel.SGD" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SGD As ForecastingModel" />
      <MemberSignature Language="F#" Value="static member SGD : Azure.ResourceManager.MachineLearning.Models.ForecastingModel" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModel.SGD" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            SGD: Stochastic gradient descent is an optimization algorithm often used in machine learning applications
            to find the model parameters that correspond to the best fit between predicted and actual outputs.
            It's an inexact but powerful technique.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TCNForecaster">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModel TCNForecaster { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModel TCNForecaster" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModel.TCNForecaster" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TCNForecaster As ForecastingModel" />
      <MemberSignature Language="F#" Value="static member TCNForecaster : Azure.ResourceManager.MachineLearning.Models.ForecastingModel" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModel.TCNForecaster" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> TCNForecaster: Temporal Convolutional Networks Forecaster. //TODO: Ask forecasting team for brief intro. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.ForecastingModel.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="forecastingModel.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the fully qualified type name of this instance.</summary>
        <returns>The fully qualified type name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XGBoostRegressor">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModel XGBoostRegressor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModel XGBoostRegressor" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModel.XGBoostRegressor" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property XGBoostRegressor As ForecastingModel" />
      <MemberSignature Language="F#" Value="static member XGBoostRegressor : Azure.ResourceManager.MachineLearning.Models.ForecastingModel" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModel.XGBoostRegressor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> XGBoostRegressor: Extreme Gradient Boosting Regressor is a supervised machine learning model using ensemble of base learners. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
