<Type Name="DataCollector" FullName="Azure.ResourceManager.MachineLearning.Models.DataCollector">
  <TypeSignature Language="C#" Value="public class DataCollector : System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataCollector extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.MachineLearning.Models.DataCollector" />
  <TypeSignature Language="VB.NET" Value="Public Class DataCollector&#xA;Implements IJsonModel(Of DataCollector), IPersistableModel(Of DataCollector)" />
  <TypeSignature Language="F#" Value="type DataCollector = class&#xA;    interface IJsonModel&lt;DataCollector&gt;&#xA;    interface IPersistableModel&lt;DataCollector&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> The DataCollector. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataCollector (System.Collections.Generic.IDictionary&lt;string,Azure.ResourceManager.MachineLearning.Models.DataCollectionConfiguration&gt; collections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;string, class Azure.ResourceManager.MachineLearning.Models.DataCollectionConfiguration&gt; collections) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.DataCollector.#ctor(System.Collections.Generic.IDictionary{System.String,Azure.ResourceManager.MachineLearning.Models.DataCollectionConfiguration})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collections As IDictionary(Of String, DataCollectionConfiguration))" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.MachineLearning.Models.DataCollector : System.Collections.Generic.IDictionary&lt;string, Azure.ResourceManager.MachineLearning.Models.DataCollectionConfiguration&gt; -&gt; Azure.ResourceManager.MachineLearning.Models.DataCollector" Usage="new Azure.ResourceManager.MachineLearning.Models.DataCollector collections" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Generic.IDictionary&lt;System.String,Azure.ResourceManager.MachineLearning.Models.DataCollectionConfiguration&gt;" />
      </Parameters>
      <Docs>
        <param name="collections">
            [Required] The collection configuration. Each collection has it own configuration to collect model data and the name of collection can be arbitrary string.
            Model data collector can be used for either payload logging or custom logging or both of them. Collection request and response are reserved for payload logging, others are for custom logging.
            </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MachineLearning.Models.DataCollector" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="collections" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Collections">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Azure.ResourceManager.MachineLearning.Models.DataCollectionConfiguration&gt; Collections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Azure.ResourceManager.MachineLearning.Models.DataCollectionConfiguration&gt; Collections" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.DataCollector.Collections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Collections As IDictionary(Of String, DataCollectionConfiguration)" />
      <MemberSignature Language="F#" Value="member this.Collections : System.Collections.Generic.IDictionary&lt;string, Azure.ResourceManager.MachineLearning.Models.DataCollectionConfiguration&gt;" Usage="Azure.ResourceManager.MachineLearning.Models.DataCollector.Collections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Azure.ResourceManager.MachineLearning.Models.DataCollectionConfiguration&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            [Required] The collection configuration. Each collection has it own configuration to collect model data and the name of collection can be arbitrary string.
            Model data collector can be used for either payload logging or custom logging or both of them. Collection request and response are reserved for payload logging, others are for custom logging.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestLoggingCaptureHeaders">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; RequestLoggingCaptureHeaders { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; RequestLoggingCaptureHeaders" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.DataCollector.RequestLoggingCaptureHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestLoggingCaptureHeaders As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.RequestLoggingCaptureHeaders : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Azure.ResourceManager.MachineLearning.Models.DataCollector.RequestLoggingCaptureHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> For payload logging, we only collect payload by default. If customers also want to collect the specified headers, they can set them in captureHeaders so that backend will collect those headers along with payload. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RollingRate">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.MachineLearning.Models.RollingRateType? RollingRate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.MachineLearning.Models.RollingRateType&gt; RollingRate" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.DataCollector.RollingRate" />
      <MemberSignature Language="VB.NET" Value="Public Property RollingRate As Nullable(Of RollingRateType)" />
      <MemberSignature Language="F#" Value="member this.RollingRate : Nullable&lt;Azure.ResourceManager.MachineLearning.Models.RollingRateType&gt; with get, set" Usage="Azure.ResourceManager.MachineLearning.Models.DataCollector.RollingRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ResourceManager.MachineLearning.Models.RollingRateType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            When model data is collected to blob storage, we need to roll the data to different path to avoid logging all of them in a single blob file.
            If the rolling rate is hour, all data will be collected in the blob path /yyyy/MM/dd/HH/.
            If it's day, all data will be collected in blob path /yyyy/MM/dd/.
            The other benefit of rolling path is that model monitoring ui is able to select a time range of data very quickly.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.MachineLearning.Models.DataCollector IJsonModel&lt;DataCollector&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.MachineLearning.Models.DataCollector System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.DataCollector.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#MachineLearning#Models#DataCollector&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As DataCollector Implements IJsonModel(Of DataCollector).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.MachineLearning.Models.DataCollector&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.MachineLearning.Models.DataCollector" Usage="dataCollector.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.DataCollector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;DataCollector&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.DataCollector.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#MachineLearning#Models#DataCollector&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of DataCollector).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="dataCollector.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.MachineLearning.Models.DataCollector IPersistableModel&lt;DataCollector&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.MachineLearning.Models.DataCollector System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.DataCollector.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#MachineLearning#Models#DataCollector&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As DataCollector Implements IPersistableModel(Of DataCollector).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.MachineLearning.Models.DataCollector&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.MachineLearning.Models.DataCollector" Usage="dataCollector.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.DataCollector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;DataCollector&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.DataCollector.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#MachineLearning#Models#DataCollector&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of DataCollector).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="dataCollector.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;DataCollector&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.DataCollector.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#MachineLearning#Models#DataCollector&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of DataCollector).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="dataCollector.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.DataCollector&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
