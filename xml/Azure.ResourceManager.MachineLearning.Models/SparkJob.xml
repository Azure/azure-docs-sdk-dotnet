<Type Name="SparkJob" FullName="Azure.ResourceManager.MachineLearning.Models.SparkJob">
  <TypeSignature Language="C#" Value="public class SparkJob : Azure.ResourceManager.MachineLearning.Models.MachineLearningJobProperties, System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SparkJob extends Azure.ResourceManager.MachineLearning.Models.MachineLearningJobProperties implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.MachineLearning.Models.SparkJob" />
  <TypeSignature Language="VB.NET" Value="Public Class SparkJob&#xA;Inherits MachineLearningJobProperties&#xA;Implements IJsonModel(Of SparkJob), IPersistableModel(Of SparkJob)" />
  <TypeSignature Language="F#" Value="type SparkJob = class&#xA;    inherit MachineLearningJobProperties&#xA;    interface IJsonModel&lt;SparkJob&gt;&#xA;    interface IPersistableModel&lt;SparkJob&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.MachineLearning.Models.MachineLearningJobProperties</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Spark job definition. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SparkJob (string codeId, Azure.ResourceManager.MachineLearning.Models.SparkJobEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string codeId, class Azure.ResourceManager.MachineLearning.Models.SparkJobEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.SparkJob.#ctor(System.String,Azure.ResourceManager.MachineLearning.Models.SparkJobEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (codeId As String, entry As SparkJobEntry)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.MachineLearning.Models.SparkJob : string * Azure.ResourceManager.MachineLearning.Models.SparkJobEntry -&gt; Azure.ResourceManager.MachineLearning.Models.SparkJob" Usage="new Azure.ResourceManager.MachineLearning.Models.SparkJob (codeId, entry)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeId" Type="System.String" />
        <Parameter Name="entry" Type="Azure.ResourceManager.MachineLearning.Models.SparkJobEntry" />
      </Parameters>
      <Docs>
        <param name="codeId"> [Required] ARM resource ID of the code asset. </param>
        <param name="entry">
            [Required] The entry to execute on startup of the job.
            Please note <see cref="T:Azure.ResourceManager.MachineLearning.Models.SparkJobEntry" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.MachineLearning.Models.SparkJobPythonEntry" /> and <see cref="T:Azure.ResourceManager.MachineLearning.Models.SparkJobScalaEntry" />.
            </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MachineLearning.Models.SparkJob" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="codeId" /> or <paramref name="entry" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Archives">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; Archives { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; Archives" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.SparkJob.Archives" />
      <MemberSignature Language="VB.NET" Value="Public Property Archives As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.Archives : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Azure.ResourceManager.MachineLearning.Models.SparkJob.Archives" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Archive files used in the job. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Args">
      <MemberSignature Language="C#" Value="public string Args { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Args" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.SparkJob.Args" />
      <MemberSignature Language="VB.NET" Value="Public Property Args As String" />
      <MemberSignature Language="F#" Value="member this.Args : string with get, set" Usage="Azure.ResourceManager.MachineLearning.Models.SparkJob.Args" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Arguments for the job. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeId">
      <MemberSignature Language="C#" Value="public string CodeId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeId" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.SparkJob.CodeId" />
      <MemberSignature Language="VB.NET" Value="Public Property CodeId As String" />
      <MemberSignature Language="F#" Value="member this.CodeId : string with get, set" Usage="Azure.ResourceManager.MachineLearning.Models.SparkJob.CodeId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> [Required] ARM resource ID of the code asset. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Conf">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Conf { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Conf" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.SparkJob.Conf" />
      <MemberSignature Language="VB.NET" Value="Public Property Conf As IDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="member this.Conf : System.Collections.Generic.IDictionary&lt;string, string&gt; with get, set" Usage="Azure.ResourceManager.MachineLearning.Models.SparkJob.Conf" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Spark configured properties. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Entry">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.MachineLearning.Models.SparkJobEntry Entry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.MachineLearning.Models.SparkJobEntry Entry" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.SparkJob.Entry" />
      <MemberSignature Language="VB.NET" Value="Public Property Entry As SparkJobEntry" />
      <MemberSignature Language="F#" Value="member this.Entry : Azure.ResourceManager.MachineLearning.Models.SparkJobEntry with get, set" Usage="Azure.ResourceManager.MachineLearning.Models.SparkJob.Entry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.SparkJobEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            [Required] The entry to execute on startup of the job.
            Please note <see cref="T:Azure.ResourceManager.MachineLearning.Models.SparkJobEntry" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.MachineLearning.Models.SparkJobPythonEntry" /> and <see cref="T:Azure.ResourceManager.MachineLearning.Models.SparkJobScalaEntry" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvironmentId">
      <MemberSignature Language="C#" Value="public string EnvironmentId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EnvironmentId" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.SparkJob.EnvironmentId" />
      <MemberSignature Language="VB.NET" Value="Public Property EnvironmentId As String" />
      <MemberSignature Language="F#" Value="member this.EnvironmentId : string with get, set" Usage="Azure.ResourceManager.MachineLearning.Models.SparkJob.EnvironmentId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The ARM resource ID of the Environment specification for the job. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Files">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; Files { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; Files" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.SparkJob.Files" />
      <MemberSignature Language="VB.NET" Value="Public Property Files As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.Files : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Azure.ResourceManager.MachineLearning.Models.SparkJob.Files" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Files used in the job. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inputs">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Azure.ResourceManager.MachineLearning.Models.MachineLearningJobInput&gt; Inputs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Azure.ResourceManager.MachineLearning.Models.MachineLearningJobInput&gt; Inputs" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.SparkJob.Inputs" />
      <MemberSignature Language="VB.NET" Value="Public Property Inputs As IDictionary(Of String, MachineLearningJobInput)" />
      <MemberSignature Language="F#" Value="member this.Inputs : System.Collections.Generic.IDictionary&lt;string, Azure.ResourceManager.MachineLearning.Models.MachineLearningJobInput&gt; with get, set" Usage="Azure.ResourceManager.MachineLearning.Models.SparkJob.Inputs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Azure.ResourceManager.MachineLearning.Models.MachineLearningJobInput&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Mapping of input data bindings used in the job.
            Please note <see cref="T:Azure.ResourceManager.MachineLearning.Models.MachineLearningJobInput" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.MachineLearning.Models.MachineLearningCustomModelJobInput" />, <see cref="T:Azure.ResourceManager.MachineLearning.Models.MachineLearningLiteralJobInput" />, <see cref="T:Azure.ResourceManager.MachineLearning.Models.MachineLearningFlowModelJobInput" />, <see cref="T:Azure.ResourceManager.MachineLearning.Models.MachineLearningTableJobInput" />, <see cref="T:Azure.ResourceManager.MachineLearning.Models.MachineLearningTritonModelJobInput" />, <see cref="T:Azure.ResourceManager.MachineLearning.Models.MachineLearningUriFileJobInput" /> and <see cref="T:Azure.ResourceManager.MachineLearning.Models.MachineLearningUriFolderJobInput" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Jars">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; Jars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; Jars" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.SparkJob.Jars" />
      <MemberSignature Language="VB.NET" Value="Public Property Jars As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.Jars : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Azure.ResourceManager.MachineLearning.Models.SparkJob.Jars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Jar files used in the job. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Outputs">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Azure.ResourceManager.MachineLearning.Models.MachineLearningJobOutput&gt; Outputs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Azure.ResourceManager.MachineLearning.Models.MachineLearningJobOutput&gt; Outputs" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.SparkJob.Outputs" />
      <MemberSignature Language="VB.NET" Value="Public Property Outputs As IDictionary(Of String, MachineLearningJobOutput)" />
      <MemberSignature Language="F#" Value="member this.Outputs : System.Collections.Generic.IDictionary&lt;string, Azure.ResourceManager.MachineLearning.Models.MachineLearningJobOutput&gt; with get, set" Usage="Azure.ResourceManager.MachineLearning.Models.SparkJob.Outputs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Azure.ResourceManager.MachineLearning.Models.MachineLearningJobOutput&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Mapping of output data bindings used in the job.
            Please note <see cref="T:Azure.ResourceManager.MachineLearning.Models.MachineLearningJobOutput" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.MachineLearning.Models.MachineLearningCustomModelJobOutput" />, <see cref="T:Azure.ResourceManager.MachineLearning.Models.MachineLearningFlowModelJobOutput" />, <see cref="T:Azure.ResourceManager.MachineLearning.Models.MachineLearningTableJobOutput" />, <see cref="T:Azure.ResourceManager.MachineLearning.Models.MachineLearningTritonModelJobOutput" />, <see cref="T:Azure.ResourceManager.MachineLearning.Models.MachineLearningUriFileJobOutput" /> and <see cref="T:Azure.ResourceManager.MachineLearning.Models.MachineLearningUriFolderJobOutput" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PyFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; PyFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; PyFiles" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.SparkJob.PyFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property PyFiles As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.PyFiles : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Azure.ResourceManager.MachineLearning.Models.SparkJob.PyFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Python files used in the job. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueSettings">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.MachineLearning.Models.JobQueueSettings QueueSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.MachineLearning.Models.JobQueueSettings QueueSettings" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.SparkJob.QueueSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property QueueSettings As JobQueueSettings" />
      <MemberSignature Language="F#" Value="member this.QueueSettings : Azure.ResourceManager.MachineLearning.Models.JobQueueSettings with get, set" Usage="Azure.ResourceManager.MachineLearning.Models.SparkJob.QueueSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.JobQueueSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Queue settings for the job. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resources">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.MachineLearning.Models.SparkResourceConfiguration Resources { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.MachineLearning.Models.SparkResourceConfiguration Resources" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.SparkJob.Resources" />
      <MemberSignature Language="VB.NET" Value="Public Property Resources As SparkResourceConfiguration" />
      <MemberSignature Language="F#" Value="member this.Resources : Azure.ResourceManager.MachineLearning.Models.SparkResourceConfiguration with get, set" Usage="Azure.ResourceManager.MachineLearning.Models.SparkJob.Resources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.SparkResourceConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Compute Resource configuration for the job. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.MachineLearning.Models.SparkJob IJsonModel&lt;SparkJob&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.MachineLearning.Models.SparkJob System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.SparkJob.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#MachineLearning#Models#SparkJob&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As SparkJob Implements IJsonModel(Of SparkJob).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.MachineLearning.Models.SparkJob&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.MachineLearning.Models.SparkJob" Usage="sparkJob.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.SparkJob</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;SparkJob&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.SparkJob.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#MachineLearning#Models#SparkJob&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of SparkJob).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="sparkJob.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.MachineLearning.Models.SparkJob IPersistableModel&lt;SparkJob&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.MachineLearning.Models.SparkJob System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.SparkJob.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#MachineLearning#Models#SparkJob&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As SparkJob Implements IPersistableModel(Of SparkJob).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.MachineLearning.Models.SparkJob&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.MachineLearning.Models.SparkJob" Usage="sparkJob.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.SparkJob</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;SparkJob&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.SparkJob.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#MachineLearning#Models#SparkJob&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of SparkJob).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="sparkJob.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;SparkJob&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.SparkJob.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#MachineLearning#Models#SparkJob&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of SparkJob).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="sparkJob.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.MachineLearning.Models.SparkJob&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
