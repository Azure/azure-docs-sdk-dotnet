<Type Name="ForecastingModels" FullName="Azure.ResourceManager.MachineLearning.Models.ForecastingModels">
  <TypeSignature Language="C#" Value="public readonly struct ForecastingModels : IEquatable&lt;Azure.ResourceManager.MachineLearning.Models.ForecastingModels&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ForecastingModels extends System.ValueType implements class System.IEquatable`1&lt;valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModels&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.MachineLearning.Models.ForecastingModels" />
  <TypeSignature Language="VB.NET" Value="Public Structure ForecastingModels&#xA;Implements IEquatable(Of ForecastingModels)" />
  <TypeSignature Language="F#" Value="type ForecastingModels = struct" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Azure.ResourceManager.MachineLearning.Models.ForecastingModels&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Enum for all forecasting models supported by AutoML. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ForecastingModels (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.ForecastingModels.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.MachineLearning.Models.ForecastingModels : string -&gt; Azure.ResourceManager.MachineLearning.Models.ForecastingModels" Usage="new Azure.ResourceManager.MachineLearning.Models.ForecastingModels value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.MachineLearning.Models.ForecastingModels" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Arimax">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModels Arimax { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModels Arimax" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModels.Arimax" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Arimax As ForecastingModels" />
      <MemberSignature Language="F#" Value="member this.Arimax : Azure.ResourceManager.MachineLearning.Models.ForecastingModels" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModels.Arimax" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModels</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An Autoregressive Integrated Moving Average with Explanatory Variable (ARIMAX) model can be viewed as a multiple regression model with one or more autoregressive (AR) terms and/or one or more moving average (MA) terms.
            This method is suitable for forecasting when data is stationary/non stationary, and multivariate with any type of data pattern, i.e., level/trend /seasonality/cyclicity.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoArima">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModels AutoArima { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModels AutoArima" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModels.AutoArima" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AutoArima As ForecastingModels" />
      <MemberSignature Language="F#" Value="member this.AutoArima : Azure.ResourceManager.MachineLearning.Models.ForecastingModels" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModels.AutoArima" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModels</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Auto-Autoregressive Integrated Moving Average (ARIMA) model uses time-series data and statistical analysis to interpret the data and make future predictions.
            This model aims to explain data by using time series data on its past values and uses linear regression to make predictions.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModels Average { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModels Average" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModels.Average" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Average As ForecastingModels" />
      <MemberSignature Language="F#" Value="member this.Average : Azure.ResourceManager.MachineLearning.Models.ForecastingModels" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModels.Average" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModels</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The Average forecasting model makes predictions by carrying forward the average of the target values for each time-series in the training data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecisionTree">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModels DecisionTree { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModels DecisionTree" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModels.DecisionTree" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecisionTree As ForecastingModels" />
      <MemberSignature Language="F#" Value="member this.DecisionTree : Azure.ResourceManager.MachineLearning.Models.ForecastingModels" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModels.DecisionTree" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModels</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Decision Trees are a non-parametric supervised learning method used for both classification and regression tasks.
            The goal is to create a model that predicts the value of a target variable by learning simple decision rules inferred from the data features.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElasticNet">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModels ElasticNet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModels ElasticNet" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModels.ElasticNet" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ElasticNet As ForecastingModels" />
      <MemberSignature Language="F#" Value="member this.ElasticNet : Azure.ResourceManager.MachineLearning.Models.ForecastingModels" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModels.ElasticNet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModels</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Elastic net is a popular type of regularized linear regression that combines two popular penalties, specifically the L1 and L2 penalty functions. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Azure.ResourceManager.MachineLearning.Models.ForecastingModels other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModels other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.ForecastingModels.Equals(Azure.ResourceManager.MachineLearning.Models.ForecastingModels)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ForecastingModels) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Azure.ResourceManager.MachineLearning.Models.ForecastingModels -&gt; bool" Usage="forecastingModels.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Azure.ResourceManager.MachineLearning.Models.ForecastingModels" />
      </Parameters>
      <Docs>
        <param name="other">An object to compare with this object.</param>
        <summary>Indicates whether the current object is equal to another object of the same type.</summary>
        <returns>
          <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.ForecastingModels.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="forecastingModels.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to compare with the current instance.</param>
        <summary>Indicates whether this instance and a specified object are equal.</summary>
        <returns>
          <see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExponentialSmoothing">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModels ExponentialSmoothing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModels ExponentialSmoothing" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModels.ExponentialSmoothing" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ExponentialSmoothing As ForecastingModels" />
      <MemberSignature Language="F#" Value="member this.ExponentialSmoothing : Azure.ResourceManager.MachineLearning.Models.ForecastingModels" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModels.ExponentialSmoothing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModels</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Exponential smoothing is a time series forecasting method for univariate data that can be extended to support data with a systematic trend or seasonal component. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtremeRandomTrees">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModels ExtremeRandomTrees { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModels ExtremeRandomTrees" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModels.ExtremeRandomTrees" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ExtremeRandomTrees As ForecastingModels" />
      <MemberSignature Language="F#" Value="member this.ExtremeRandomTrees : Azure.ResourceManager.MachineLearning.Models.ForecastingModels" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModels.ExtremeRandomTrees" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModels</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Extreme Trees is an ensemble machine learning algorithm that combines the predictions from many decision trees. It is related to the widely used random forest algorithm. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.ForecastingModels.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="forecastingModels.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the hash code for this instance.</summary>
        <returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GradientBoosting">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModels GradientBoosting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModels GradientBoosting" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModels.GradientBoosting" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property GradientBoosting As ForecastingModels" />
      <MemberSignature Language="F#" Value="member this.GradientBoosting : Azure.ResourceManager.MachineLearning.Models.ForecastingModels" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModels.GradientBoosting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModels</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The technique of transiting week learners into a strong learner is called Boosting. The gradient boosting algorithm process works on this theory of execution. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KNN">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModels KNN { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModels KNN" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModels.KNN" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property KNN As ForecastingModels" />
      <MemberSignature Language="F#" Value="member this.KNN : Azure.ResourceManager.MachineLearning.Models.ForecastingModels" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModels.KNN" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModels</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            K-nearest neighbors (KNN) algorithm uses 'feature similarity' to predict the values of new datapoints
            which further means that the new data point will be assigned a value based on how closely it matches the points in the training set.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LassoLars">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModels LassoLars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModels LassoLars" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModels.LassoLars" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LassoLars As ForecastingModels" />
      <MemberSignature Language="F#" Value="member this.LassoLars : Azure.ResourceManager.MachineLearning.Models.ForecastingModels" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModels.LassoLars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModels</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Lasso model fit with Least Angle Regression a.k.a. Lars. It is a Linear Model trained with an L1 prior as regularizer. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LightGBM">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModels LightGBM { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModels LightGBM" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModels.LightGBM" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LightGBM As ForecastingModels" />
      <MemberSignature Language="F#" Value="member this.LightGBM : Azure.ResourceManager.MachineLearning.Models.ForecastingModels" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModels.LightGBM" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModels</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> LightGBM is a gradient boosting framework that uses tree based learning algorithms. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Naive">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModels Naive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModels Naive" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModels.Naive" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Naive As ForecastingModels" />
      <MemberSignature Language="F#" Value="member this.Naive : Azure.ResourceManager.MachineLearning.Models.ForecastingModels" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModels.Naive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModels</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The Naive forecasting model makes predictions by carrying forward the latest target value for each time-series in the training data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Azure.ResourceManager.MachineLearning.Models.ForecastingModels left, Azure.ResourceManager.MachineLearning.Models.ForecastingModels right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModels left, valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModels right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.ForecastingModels.op_Equality(Azure.ResourceManager.MachineLearning.Models.ForecastingModels,Azure.ResourceManager.MachineLearning.Models.ForecastingModels)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ForecastingModels, right As ForecastingModels) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Azure.ResourceManager.MachineLearning.Models.ForecastingModels * Azure.ResourceManager.MachineLearning.Models.ForecastingModels -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Azure.ResourceManager.MachineLearning.Models.ForecastingModels" />
        <Parameter Name="right" Type="Azure.ResourceManager.MachineLearning.Models.ForecastingModels" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary> Determines if two <see cref="T:Azure.ResourceManager.MachineLearning.Models.ForecastingModels" /> values are the same. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Azure.ResourceManager.MachineLearning.Models.ForecastingModels (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModels op_Implicit(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.ForecastingModels.op_Implicit(System.String)~Azure.ResourceManager.MachineLearning.Models.ForecastingModels" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As String) As ForecastingModels" />
      <MemberSignature Language="F#" Value="static member op_Implicit : string -&gt; Azure.ResourceManager.MachineLearning.Models.ForecastingModels" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModels.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModels</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary> Converts a string to a <see cref="T:Azure.ResourceManager.MachineLearning.Models.ForecastingModels" />. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Azure.ResourceManager.MachineLearning.Models.ForecastingModels left, Azure.ResourceManager.MachineLearning.Models.ForecastingModels right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModels left, valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModels right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.ForecastingModels.op_Inequality(Azure.ResourceManager.MachineLearning.Models.ForecastingModels,Azure.ResourceManager.MachineLearning.Models.ForecastingModels)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ForecastingModels, right As ForecastingModels) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Azure.ResourceManager.MachineLearning.Models.ForecastingModels * Azure.ResourceManager.MachineLearning.Models.ForecastingModels -&gt; bool" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModels.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Azure.ResourceManager.MachineLearning.Models.ForecastingModels" />
        <Parameter Name="right" Type="Azure.ResourceManager.MachineLearning.Models.ForecastingModels" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary> Determines if two <see cref="T:Azure.ResourceManager.MachineLearning.Models.ForecastingModels" /> values are not the same. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Prophet">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModels Prophet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModels Prophet" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModels.Prophet" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Prophet As ForecastingModels" />
      <MemberSignature Language="F#" Value="member this.Prophet : Azure.ResourceManager.MachineLearning.Models.ForecastingModels" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModels.Prophet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModels</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Prophet is a procedure for forecasting time series data based on an additive model where non-linear trends are fit with yearly, weekly, and daily seasonality, plus holiday effects.
            It works best with time series that have strong seasonal effects and several seasons of historical data. Prophet is robust to missing data and shifts in the trend, and typically handles outliers well.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RandomForest">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModels RandomForest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModels RandomForest" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModels.RandomForest" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RandomForest As ForecastingModels" />
      <MemberSignature Language="F#" Value="member this.RandomForest : Azure.ResourceManager.MachineLearning.Models.ForecastingModels" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModels.RandomForest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModels</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Random forest is a supervised learning algorithm.
            The "forest" it builds, is an ensemble of decision trees, usually trained with the “bagging” method.
            The general idea of the bagging method is that a combination of learning models increases the overall result.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeasonalAverage">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModels SeasonalAverage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModels SeasonalAverage" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModels.SeasonalAverage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SeasonalAverage As ForecastingModels" />
      <MemberSignature Language="F#" Value="member this.SeasonalAverage : Azure.ResourceManager.MachineLearning.Models.ForecastingModels" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModels.SeasonalAverage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModels</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The Seasonal Average forecasting model makes predictions by carrying forward the average value of the latest season of data for each time-series in the training data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeasonalNaive">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModels SeasonalNaive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModels SeasonalNaive" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModels.SeasonalNaive" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SeasonalNaive As ForecastingModels" />
      <MemberSignature Language="F#" Value="member this.SeasonalNaive : Azure.ResourceManager.MachineLearning.Models.ForecastingModels" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModels.SeasonalNaive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModels</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The Seasonal Naive forecasting model makes predictions by carrying forward the latest season of target values for each time-series in the training data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SGD">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModels SGD { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModels SGD" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModels.SGD" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SGD As ForecastingModels" />
      <MemberSignature Language="F#" Value="member this.SGD : Azure.ResourceManager.MachineLearning.Models.ForecastingModels" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModels.SGD" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModels</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            SGD: Stochastic gradient descent is an optimization algorithm often used in machine learning applications
            to find the model parameters that correspond to the best fit between predicted and actual outputs.
            It's an inexact but powerful technique.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TCNForecaster">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModels TCNForecaster { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModels TCNForecaster" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModels.TCNForecaster" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TCNForecaster As ForecastingModels" />
      <MemberSignature Language="F#" Value="member this.TCNForecaster : Azure.ResourceManager.MachineLearning.Models.ForecastingModels" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModels.TCNForecaster" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModels</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> TCNForecaster: Temporal Convolutional Networks Forecaster. //TODO: Ask forecasting team for brief intro. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.ForecastingModels.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="forecastingModels.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the fully qualified type name of this instance.</summary>
        <returns>The fully qualified type name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XGBoostRegressor">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.MachineLearning.Models.ForecastingModels XGBoostRegressor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.ResourceManager.MachineLearning.Models.ForecastingModels XGBoostRegressor" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.ForecastingModels.XGBoostRegressor" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property XGBoostRegressor As ForecastingModels" />
      <MemberSignature Language="F#" Value="member this.XGBoostRegressor : Azure.ResourceManager.MachineLearning.Models.ForecastingModels" Usage="Azure.ResourceManager.MachineLearning.Models.ForecastingModels.XGBoostRegressor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MachineLearning.Models.ForecastingModels</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> XGBoostRegressor: Extreme Gradient Boosting Regressor is a supervised machine learning model using ensemble of base learners. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
