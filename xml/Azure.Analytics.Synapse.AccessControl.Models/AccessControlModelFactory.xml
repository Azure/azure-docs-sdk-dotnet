<Type Name="AccessControlModelFactory" FullName="Azure.Analytics.Synapse.AccessControl.Models.AccessControlModelFactory">
  <TypeSignature Language="C#" Value="public static class AccessControlModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AccessControlModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Synapse.AccessControl.Models.AccessControlModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class AccessControlModelFactory" />
  <TypeSignature Language="F#" Value="type AccessControlModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for read-only models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckAccessDecision">
      <MemberSignature Language="C#" Value="public static Azure.Analytics.Synapse.AccessControl.Models.CheckAccessDecision CheckAccessDecision (string accessDecision = default, string actionId = default, Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails roleAssignment = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Analytics.Synapse.AccessControl.Models.CheckAccessDecision CheckAccessDecision(string accessDecision, string actionId, class Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails roleAssignment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.Models.AccessControlModelFactory.CheckAccessDecision(System.String,System.String,Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CheckAccessDecision (Optional accessDecision As String = Nothing, Optional actionId As String = Nothing, Optional roleAssignment As RoleAssignmentDetails = Nothing) As CheckAccessDecision" />
      <MemberSignature Language="F#" Value="static member CheckAccessDecision : string * string * Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails -&gt; Azure.Analytics.Synapse.AccessControl.Models.CheckAccessDecision" Usage="Azure.Analytics.Synapse.AccessControl.Models.AccessControlModelFactory.CheckAccessDecision (accessDecision, actionId, roleAssignment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.AccessControl.Models.CheckAccessDecision</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessDecision" Type="System.String" />
        <Parameter Name="actionId" Type="System.String" />
        <Parameter Name="roleAssignment" Type="Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails" />
      </Parameters>
      <Docs>
        <param name="accessDecision"> Access Decision. </param>
        <param name="actionId"> Action Id. </param>
        <param name="roleAssignment"> Role Assignment response details. </param>
        <summary> Initializes a new instance of CheckAccessDecision. </summary>
        <returns> A new <see cref="T:Azure.Analytics.Synapse.AccessControl.Models.CheckAccessDecision" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckPrincipalAccessResponse">
      <MemberSignature Language="C#" Value="public static Azure.Analytics.Synapse.AccessControl.Models.CheckPrincipalAccessResponse CheckPrincipalAccessResponse (System.Collections.Generic.IEnumerable&lt;Azure.Analytics.Synapse.AccessControl.Models.CheckAccessDecision&gt; accessDecisions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Analytics.Synapse.AccessControl.Models.CheckPrincipalAccessResponse CheckPrincipalAccessResponse(class System.Collections.Generic.IEnumerable`1&lt;class Azure.Analytics.Synapse.AccessControl.Models.CheckAccessDecision&gt; accessDecisions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.Models.AccessControlModelFactory.CheckPrincipalAccessResponse(System.Collections.Generic.IEnumerable{Azure.Analytics.Synapse.AccessControl.Models.CheckAccessDecision})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CheckPrincipalAccessResponse (Optional accessDecisions As IEnumerable(Of CheckAccessDecision) = Nothing) As CheckPrincipalAccessResponse" />
      <MemberSignature Language="F#" Value="static member CheckPrincipalAccessResponse : seq&lt;Azure.Analytics.Synapse.AccessControl.Models.CheckAccessDecision&gt; -&gt; Azure.Analytics.Synapse.AccessControl.Models.CheckPrincipalAccessResponse" Usage="Azure.Analytics.Synapse.AccessControl.Models.AccessControlModelFactory.CheckPrincipalAccessResponse accessDecisions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.AccessControl.Models.CheckPrincipalAccessResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessDecisions" Type="System.Collections.Generic.IEnumerable&lt;Azure.Analytics.Synapse.AccessControl.Models.CheckAccessDecision&gt;" />
      </Parameters>
      <Docs>
        <param name="accessDecisions"> To check if the current user, group, or service principal has permission to read artifacts in the specified workspace. </param>
        <summary> Initializes a new instance of CheckPrincipalAccessResponse. </summary>
        <returns> A new <see cref="T:Azure.Analytics.Synapse.AccessControl.Models.CheckPrincipalAccessResponse" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleAssignmentDetails">
      <MemberSignature Language="C#" Value="public static Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails RoleAssignmentDetails (string id = default, Guid? roleDefinitionId = default, Guid? principalId = default, string scope = default, string principalType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails RoleAssignmentDetails(string id, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; roleDefinitionId, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; principalId, string scope, string principalType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.Models.AccessControlModelFactory.RoleAssignmentDetails(System.String,System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RoleAssignmentDetails (Optional id As String = Nothing, Optional roleDefinitionId As Nullable(Of Guid) = Nothing, Optional principalId As Nullable(Of Guid) = Nothing, Optional scope As String = Nothing, Optional principalType As String = Nothing) As RoleAssignmentDetails" />
      <MemberSignature Language="F#" Value="static member RoleAssignmentDetails : string * Nullable&lt;Guid&gt; * Nullable&lt;Guid&gt; * string * string -&gt; Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails" Usage="Azure.Analytics.Synapse.AccessControl.Models.AccessControlModelFactory.RoleAssignmentDetails (id, roleDefinitionId, principalId, scope, principalType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="roleDefinitionId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="principalId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="principalType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> Role Assignment ID. </param>
        <param name="roleDefinitionId"> Role ID of the Synapse Built-In Role. </param>
        <param name="principalId"> Object ID of the AAD principal or security-group. </param>
        <param name="scope"> Scope at the role assignment is created. </param>
        <param name="principalType"> Type of the principal Id: User, Group or ServicePrincipal. </param>
        <summary> Initializes a new instance of RoleAssignmentDetails. </summary>
        <returns> A new <see cref="T:Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleAssignmentDetailsList">
      <MemberSignature Language="C#" Value="public static Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetailsList RoleAssignmentDetailsList (int? count = default, System.Collections.Generic.IEnumerable&lt;Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails&gt; value = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetailsList RoleAssignmentDetailsList(valuetype System.Nullable`1&lt;int32&gt; count, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.Models.AccessControlModelFactory.RoleAssignmentDetailsList(System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RoleAssignmentDetailsList (Optional count As Nullable(Of Integer) = Nothing, Optional value As IEnumerable(Of RoleAssignmentDetails) = Nothing) As RoleAssignmentDetailsList" />
      <MemberSignature Language="F#" Value="static member RoleAssignmentDetailsList : Nullable&lt;int&gt; * seq&lt;Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails&gt; -&gt; Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetailsList" Usage="Azure.Analytics.Synapse.AccessControl.Models.AccessControlModelFactory.RoleAssignmentDetailsList (count, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetailsList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="value" Type="System.Collections.Generic.IEnumerable&lt;Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails&gt;" />
      </Parameters>
      <Docs>
        <param name="count"> Number of role assignments. </param>
        <param name="value"> A list of role assignments. </param>
        <summary> Initializes a new instance of RoleAssignmentDetailsList. </summary>
        <returns> A new <see cref="T:Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetailsList" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseRbacPermission">
      <MemberSignature Language="C#" Value="public static Azure.Analytics.Synapse.AccessControl.Models.SynapseRbacPermission SynapseRbacPermission (System.Collections.Generic.IEnumerable&lt;string&gt; actions = default, System.Collections.Generic.IEnumerable&lt;string&gt; notActions = default, System.Collections.Generic.IEnumerable&lt;string&gt; dataActions = default, System.Collections.Generic.IEnumerable&lt;string&gt; notDataActions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Analytics.Synapse.AccessControl.Models.SynapseRbacPermission SynapseRbacPermission(class System.Collections.Generic.IEnumerable`1&lt;string&gt; actions, class System.Collections.Generic.IEnumerable`1&lt;string&gt; notActions, class System.Collections.Generic.IEnumerable`1&lt;string&gt; dataActions, class System.Collections.Generic.IEnumerable`1&lt;string&gt; notDataActions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.Models.AccessControlModelFactory.SynapseRbacPermission(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseRbacPermission (Optional actions As IEnumerable(Of String) = Nothing, Optional notActions As IEnumerable(Of String) = Nothing, Optional dataActions As IEnumerable(Of String) = Nothing, Optional notDataActions As IEnumerable(Of String) = Nothing) As SynapseRbacPermission" />
      <MemberSignature Language="F#" Value="static member SynapseRbacPermission : seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; -&gt; Azure.Analytics.Synapse.AccessControl.Models.SynapseRbacPermission" Usage="Azure.Analytics.Synapse.AccessControl.Models.AccessControlModelFactory.SynapseRbacPermission (actions, notActions, dataActions, notDataActions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.AccessControl.Models.SynapseRbacPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actions" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="notActions" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="dataActions" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="notDataActions" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="actions"> List of actions. </param>
        <param name="notActions"> List of Not actions. </param>
        <param name="dataActions"> List of data actions. </param>
        <param name="notDataActions"> List of Not data actions. </param>
        <summary> Initializes a new instance of SynapseRbacPermission. </summary>
        <returns> A new <see cref="T:Azure.Analytics.Synapse.AccessControl.Models.SynapseRbacPermission" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynapseRoleDefinition">
      <MemberSignature Language="C#" Value="public static Azure.Analytics.Synapse.AccessControl.Models.SynapseRoleDefinition SynapseRoleDefinition (Guid? id = default, string name = default, bool? isBuiltIn = default, string description = default, System.Collections.Generic.IEnumerable&lt;Azure.Analytics.Synapse.AccessControl.Models.SynapseRbacPermission&gt; permissions = default, System.Collections.Generic.IEnumerable&lt;string&gt; scopes = default, string availabilityStatus = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Analytics.Synapse.AccessControl.Models.SynapseRoleDefinition SynapseRoleDefinition(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; id, string name, valuetype System.Nullable`1&lt;bool&gt; isBuiltIn, string description, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Analytics.Synapse.AccessControl.Models.SynapseRbacPermission&gt; permissions, class System.Collections.Generic.IEnumerable`1&lt;string&gt; scopes, string availabilityStatus) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.Models.AccessControlModelFactory.SynapseRoleDefinition(System.Nullable{System.Guid},System.String,System.Nullable{System.Boolean},System.String,System.Collections.Generic.IEnumerable{Azure.Analytics.Synapse.AccessControl.Models.SynapseRbacPermission},System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SynapseRoleDefinition (Optional id As Nullable(Of Guid) = Nothing, Optional name As String = Nothing, Optional isBuiltIn As Nullable(Of Boolean) = Nothing, Optional description As String = Nothing, Optional permissions As IEnumerable(Of SynapseRbacPermission) = Nothing, Optional scopes As IEnumerable(Of String) = Nothing, Optional availabilityStatus As String = Nothing) As SynapseRoleDefinition" />
      <MemberSignature Language="F#" Value="static member SynapseRoleDefinition : Nullable&lt;Guid&gt; * string * Nullable&lt;bool&gt; * string * seq&lt;Azure.Analytics.Synapse.AccessControl.Models.SynapseRbacPermission&gt; * seq&lt;string&gt; * string -&gt; Azure.Analytics.Synapse.AccessControl.Models.SynapseRoleDefinition" Usage="Azure.Analytics.Synapse.AccessControl.Models.AccessControlModelFactory.SynapseRoleDefinition (id, name, isBuiltIn, description, permissions, scopes, availabilityStatus)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.AccessControl.Models.SynapseRoleDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="isBuiltIn" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="permissions" Type="System.Collections.Generic.IEnumerable&lt;Azure.Analytics.Synapse.AccessControl.Models.SynapseRbacPermission&gt;" />
        <Parameter Name="scopes" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="availabilityStatus" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> Role Definition ID. </param>
        <param name="name"> Name of the Synapse role. </param>
        <param name="isBuiltIn"> Is a built-in role or not. </param>
        <param name="description"> Description for the Synapse role. </param>
        <param name="permissions"> Permissions for the Synapse role. </param>
        <param name="scopes"> Allowed scopes for the Synapse role. </param>
        <param name="availabilityStatus"> Availability of the Synapse role. </param>
        <summary> Initializes a new instance of SynapseRoleDefinition. </summary>
        <returns> A new <see cref="T:Azure.Analytics.Synapse.AccessControl.Models.SynapseRoleDefinition" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
