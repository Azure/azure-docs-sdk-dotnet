<Type Name="NetworkApplicationList" FullName="System.Fabric.Query.NetworkApplicationList">
  <TypeSignature Language="C#" Value="public sealed class NetworkApplicationList : System.Fabric.Query.PagedList&lt;System.Fabric.Query.NetworkApplication&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NetworkApplicationList extends System.Fabric.Query.PagedList`1&lt;class System.Fabric.Query.NetworkApplication&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Fabric.Query.NetworkApplicationList" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NetworkApplicationList&#xA;Inherits PagedList(Of NetworkApplication)" />
  <TypeSignature Language="F#" Value="type NetworkApplicationList = class&#xA;    inherit PagedList&lt;NetworkApplication&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Fabric</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Fabric.Query.PagedList&lt;System.Fabric.Query.NetworkApplication&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">System.Fabric.Query.NetworkApplication</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>Represents one page of <see cref="T:System.Fabric.Query.NetworkApplication" /> retrieved by calling
            <see cref="M:System.Fabric.FabricClient.NetworkManagementClient.GetNetworkApplicationListAsync(System.Fabric.Description.NetworkApplicationQueryDescription)" />. Paged lists consist
            of the return results it holds (a list), along with a continuation token which may be used to access subsequent pages.</para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members />
</Type>