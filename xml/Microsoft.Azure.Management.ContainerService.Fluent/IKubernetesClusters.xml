<Type Name="IKubernetesClusters" FullName="Microsoft.Azure.Management.ContainerService.Fluent.IKubernetesClusters">
  <TypeSignature Language="C#" Value="public interface IKubernetesClusters : Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsBatchCreation&lt;Microsoft.Azure.Management.ContainerService.Fluent.IKubernetesCluster&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating&lt;Microsoft.Azure.Management.ContainerService.Fluent.KubernetesCluster.Definition.IBlank&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingById, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingByResourceGroup, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById&lt;Microsoft.Azure.Management.ContainerService.Fluent.IKubernetesCluster&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByResourceGroup&lt;Microsoft.Azure.Management.ContainerService.Fluent.IKubernetesCluster&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListing&lt;Microsoft.Azure.Management.ContainerService.Fluent.IKubernetesCluster&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListingByResourceGroup&lt;Microsoft.Azure.Management.ContainerService.Fluent.IKubernetesCluster&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner&lt;Microsoft.Azure.Management.ContainerService.Fluent.IManagedClustersOperations&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager&lt;Microsoft.Azure.Management.ContainerService.Fluent.IContainerServiceManager&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IKubernetesClusters implements class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsBatchCreation`1&lt;class Microsoft.Azure.Management.ContainerService.Fluent.IKubernetesCluster&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating`1&lt;class Microsoft.Azure.Management.ContainerService.Fluent.KubernetesCluster.Definition.IBlank&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingById, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingByResourceGroup, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById`1&lt;class Microsoft.Azure.Management.ContainerService.Fluent.IKubernetesCluster&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByResourceGroup`1&lt;class Microsoft.Azure.Management.ContainerService.Fluent.IKubernetesCluster&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListing`1&lt;class Microsoft.Azure.Management.ContainerService.Fluent.IKubernetesCluster&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListingByResourceGroup`1&lt;class Microsoft.Azure.Management.ContainerService.Fluent.IKubernetesCluster&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner`1&lt;class Microsoft.Azure.Management.ContainerService.Fluent.IManagedClustersOperations&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager`1&lt;class Microsoft.Azure.Management.ContainerService.Fluent.IContainerServiceManager&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ContainerService.Fluent.IKubernetesClusters" />
  <TypeSignature Language="VB.NET" Value="Public Interface IKubernetesClusters&#xA;Implements IBeta, IHasInner(Of IManagedClustersOperations), IHasManager(Of IContainerServiceManager), ISupportsBatchCreation(Of IKubernetesCluster), ISupportsCreating(Of IBlank), ISupportsDeletingById, ISupportsDeletingByResourceGroup, ISupportsGettingById(Of IKubernetesCluster), ISupportsGettingByResourceGroup(Of IKubernetesCluster), ISupportsListing(Of IKubernetesCluster), ISupportsListingByResourceGroup(Of IKubernetesCluster)" />
  <TypeSignature Language="F#" Value="type IKubernetesClusters = interface&#xA;    interface IBeta&#xA;    interface IHasManager&lt;IContainerServiceManager&gt;&#xA;    interface IHasInner&lt;IManagedClustersOperations&gt;&#xA;    interface ISupportsCreating&lt;IBlank&gt;&#xA;    interface ISupportsBatchCreation&lt;IKubernetesCluster&gt;&#xA;    interface ISupportsListing&lt;IKubernetesCluster&gt;&#xA;    interface ISupportsGettingById&lt;IKubernetesCluster&gt;&#xA;    interface ISupportsDeletingById&#xA;    interface ISupportsDeletingByResourceGroup&#xA;    interface ISupportsListingByResourceGroup&lt;IKubernetesCluster&gt;&#xA;    interface ISupportsGettingByResourceGroup&lt;IKubernetesCluster&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.61</AssemblyVersion>
    <AssemblyVersion>1.0.0.62</AssemblyVersion>
    <AssemblyVersion>1.0.0.63</AssemblyVersion>
    <AssemblyVersion>1.0.0.64</AssemblyVersion>
    <AssemblyVersion>1.0.0.65</AssemblyVersion>
    <AssemblyVersion>1.0.0.66</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsBatchCreation&lt;Microsoft.Azure.Management.ContainerService.Fluent.IKubernetesCluster&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsCreating&lt;Microsoft.Azure.Management.ContainerService.Fluent.KubernetesCluster.Definition.IBlank&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingById</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsDeletingByResourceGroup</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingById&lt;Microsoft.Azure.Management.ContainerService.Fluent.IKubernetesCluster&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByResourceGroup&lt;Microsoft.Azure.Management.ContainerService.Fluent.IKubernetesCluster&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListing&lt;Microsoft.Azure.Management.ContainerService.Fluent.IKubernetesCluster&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListingByResourceGroup&lt;Microsoft.Azure.Management.ContainerService.Fluent.IKubernetesCluster&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasInner&lt;Microsoft.Azure.Management.ContainerService.Fluent.IManagedClustersOperations&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasManager&lt;Microsoft.Azure.Management.ContainerService.Fluent.IContainerServiceManager&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Entry point to managed Kubernetes service management API.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetAdminKubeConfigContents">
      <MemberSignature Language="C#" Value="public byte[] GetAdminKubeConfigContents (string resourceGroupName, string kubernetesClusterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetAdminKubeConfigContents(string resourceGroupName, string kubernetesClusterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerService.Fluent.IKubernetesClusters.GetAdminKubeConfigContents(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAdminKubeConfigContents (resourceGroupName As String, kubernetesClusterName As String) As Byte()" />
      <MemberSignature Language="F#" Value="abstract member GetAdminKubeConfigContents : string * string -&gt; byte[]" Usage="iKubernetesClusters.GetAdminKubeConfigContents (resourceGroupName, kubernetesClusterName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="kubernetesClusterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">The resource group name where the cluster is.</param>
        <param name="kubernetesClusterName">The managed cluster name.</param>
        <summary>
            Returns the admin Kube.config content which can be used with a Kubernetes client.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The Kube.config content which can be used with a Kubernetes client.</return>
      </Docs>
    </Member>
    <Member MemberName="GetAdminKubeConfigContentsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; GetAdminKubeConfigContentsAsync (string resourceGroupName, string kubernetesClusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; GetAdminKubeConfigContentsAsync(string resourceGroupName, string kubernetesClusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerService.Fluent.IKubernetesClusters.GetAdminKubeConfigContentsAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAdminKubeConfigContentsAsync (resourceGroupName As String, kubernetesClusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Byte())" />
      <MemberSignature Language="F#" Value="abstract member GetAdminKubeConfigContentsAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="iKubernetesClusters.GetAdminKubeConfigContentsAsync (resourceGroupName, kubernetesClusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="kubernetesClusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <param name="resourceGroupName">The resource group name where the cluster is.</param>
        <param name="kubernetesClusterName">The managed cluster name.</param>
        <summary>
            Returns asynchronously the admin Kube.config content which can be used with a Kubernetes client.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>A future representation of the Kube.config content which can be used with a Kubernetes client.</return>
      </Docs>
    </Member>
    <Member MemberName="GetUserKubeConfigContents">
      <MemberSignature Language="C#" Value="public byte[] GetUserKubeConfigContents (string resourceGroupName, string kubernetesClusterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetUserKubeConfigContents(string resourceGroupName, string kubernetesClusterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerService.Fluent.IKubernetesClusters.GetUserKubeConfigContents(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUserKubeConfigContents (resourceGroupName As String, kubernetesClusterName As String) As Byte()" />
      <MemberSignature Language="F#" Value="abstract member GetUserKubeConfigContents : string * string -&gt; byte[]" Usage="iKubernetesClusters.GetUserKubeConfigContents (resourceGroupName, kubernetesClusterName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="kubernetesClusterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">The resource group name where the cluster is.</param>
        <param name="kubernetesClusterName">The managed cluster name.</param>
        <summary>
            Returns the user Kube.config content which can be used with a Kubernetes client.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The Kube.config content which can be used with a Kubernetes client.</return>
      </Docs>
    </Member>
    <Member MemberName="GetUserKubeConfigContentsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; GetUserKubeConfigContentsAsync (string resourceGroupName, string kubernetesClusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; GetUserKubeConfigContentsAsync(string resourceGroupName, string kubernetesClusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerService.Fluent.IKubernetesClusters.GetUserKubeConfigContentsAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUserKubeConfigContentsAsync (resourceGroupName As String, kubernetesClusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Byte())" />
      <MemberSignature Language="F#" Value="abstract member GetUserKubeConfigContentsAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="iKubernetesClusters.GetUserKubeConfigContentsAsync (resourceGroupName, kubernetesClusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="kubernetesClusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <param name="resourceGroupName">The resource group name where the cluster is.</param>
        <param name="kubernetesClusterName">The managed cluster name.</param>
        <summary>
            Returns asynchronously the user Kube.config content which can be used with a Kubernetes client.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>A future representation of the Kube.config content which can be used with a Kubernetes client.</return>
      </Docs>
    </Member>
    <Member MemberName="ListKubernetesVersions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ISet&lt;string&gt; ListKubernetesVersions (Microsoft.Azure.Management.ResourceManager.Fluent.Core.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.ISet`1&lt;string&gt; ListKubernetesVersions(class Microsoft.Azure.Management.ResourceManager.Fluent.Core.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerService.Fluent.IKubernetesClusters.ListKubernetesVersions(Microsoft.Azure.Management.ResourceManager.Fluent.Core.Region)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListKubernetesVersions (region As Region) As ISet(Of String)" />
      <MemberSignature Language="F#" Value="abstract member ListKubernetesVersions : Microsoft.Azure.Management.ResourceManager.Fluent.Core.Region -&gt; System.Collections.Generic.ISet&lt;string&gt;" Usage="iKubernetesClusters.ListKubernetesVersions region" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ISet&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="Microsoft.Azure.Management.ResourceManager.Fluent.Core.Region" />
      </Parameters>
      <Docs>
        <param name="region">The Azure region to query into.</param>
        <summary>
            Returns the list of available Kubernetes versions available for the given Azure region.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>A set of Kubernetes versions which can be used when creating a service in this region.</return>
      </Docs>
    </Member>
    <Member MemberName="ListKubernetesVersionsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.ISet&lt;string&gt;&gt; ListKubernetesVersionsAsync (Microsoft.Azure.Management.ResourceManager.Fluent.Core.Region region, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.ISet`1&lt;string&gt;&gt; ListKubernetesVersionsAsync(class Microsoft.Azure.Management.ResourceManager.Fluent.Core.Region region, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ContainerService.Fluent.IKubernetesClusters.ListKubernetesVersionsAsync(Microsoft.Azure.Management.ResourceManager.Fluent.Core.Region,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListKubernetesVersionsAsync (region As Region, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ISet(Of String))" />
      <MemberSignature Language="F#" Value="abstract member ListKubernetesVersionsAsync : Microsoft.Azure.Management.ResourceManager.Fluent.Core.Region * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.ISet&lt;string&gt;&gt;" Usage="iKubernetesClusters.ListKubernetesVersionsAsync (region, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ContainerService.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.ISet&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="Microsoft.Azure.Management.ResourceManager.Fluent.Core.Region" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <param name="region">The Azure region to query into.</param>
        <summary>
            Returns the list of available Kubernetes versions available for the given Azure region.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>A future representation of a set of Kubernetes versions which can be used when creating a service in this region.</return>
      </Docs>
    </Member>
  </Members>
</Type>
