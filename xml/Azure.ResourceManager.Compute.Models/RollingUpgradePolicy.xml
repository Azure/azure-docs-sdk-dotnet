<Type Name="RollingUpgradePolicy" FullName="Azure.ResourceManager.Compute.Models.RollingUpgradePolicy">
  <TypeSignature Language="C#" Value="public class RollingUpgradePolicy : System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RollingUpgradePolicy extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Compute.Models.RollingUpgradePolicy" />
  <TypeSignature Language="VB.NET" Value="Public Class RollingUpgradePolicy&#xA;Implements IJsonModel(Of RollingUpgradePolicy), IPersistableModel(Of RollingUpgradePolicy)" />
  <TypeSignature Language="F#" Value="type RollingUpgradePolicy = class&#xA;    interface IJsonModel&lt;RollingUpgradePolicy&gt;&#xA;    interface IPersistableModel&lt;RollingUpgradePolicy&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
    <AssemblyVersion>1.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> The configuration parameters used while performing a rolling upgrade. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RollingUpgradePolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Compute.Models.RollingUpgradePolicy" />. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCrossZoneUpgrade">
      <MemberSignature Language="C#" Value="public bool? EnableCrossZoneUpgrade { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; EnableCrossZoneUpgrade" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.EnableCrossZoneUpgrade" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCrossZoneUpgrade As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.EnableCrossZoneUpgrade : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.EnableCrossZoneUpgrade" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Allow VMSS to ignore AZ boundaries when constructing upgrade batches. Take into consideration the Update Domain and maxBatchInstancePercent to determine the batch size. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMaxSurgeEnabled">
      <MemberSignature Language="C#" Value="public bool? IsMaxSurgeEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsMaxSurgeEnabled" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.IsMaxSurgeEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMaxSurgeEnabled As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsMaxSurgeEnabled : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.IsMaxSurgeEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Create new virtual machines to upgrade the scale set, rather than updating the existing virtual machines. Existing virtual machines will be deleted once the new virtual machines are created for each batch. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBatchInstancePercent">
      <MemberSignature Language="C#" Value="public int? MaxBatchInstancePercent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MaxBatchInstancePercent" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.MaxBatchInstancePercent" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBatchInstancePercent As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.MaxBatchInstancePercent : Nullable&lt;int&gt; with get, set" Usage="Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.MaxBatchInstancePercent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. The default value for this parameter is 20%. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxUnhealthyInstancePercent">
      <MemberSignature Language="C#" Value="public int? MaxUnhealthyInstancePercent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MaxUnhealthyInstancePercent" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.MaxUnhealthyInstancePercent" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxUnhealthyInstancePercent As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.MaxUnhealthyInstancePercent : Nullable&lt;int&gt; with get, set" Usage="Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.MaxUnhealthyInstancePercent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. The default value for this parameter is 20%. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxUnhealthyUpgradedInstancePercent">
      <MemberSignature Language="C#" Value="public int? MaxUnhealthyUpgradedInstancePercent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MaxUnhealthyUpgradedInstancePercent" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.MaxUnhealthyUpgradedInstancePercent" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxUnhealthyUpgradedInstancePercent As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.MaxUnhealthyUpgradedInstancePercent : Nullable&lt;int&gt; with get, set" Usage="Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.MaxUnhealthyUpgradedInstancePercent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. The default value for this parameter is 20%. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PauseTimeBetweenBatches">
      <MemberSignature Language="C#" Value="public string PauseTimeBetweenBatches { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PauseTimeBetweenBatches" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.PauseTimeBetweenBatches" />
      <MemberSignature Language="VB.NET" Value="Public Property PauseTimeBetweenBatches As String" />
      <MemberSignature Language="F#" Value="member this.PauseTimeBetweenBatches : string with get, set" Usage="Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.PauseTimeBetweenBatches" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format. The default value is 0 seconds (PT0S). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrioritizeUnhealthyInstances">
      <MemberSignature Language="C#" Value="public bool? PrioritizeUnhealthyInstances { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; PrioritizeUnhealthyInstances" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.PrioritizeUnhealthyInstances" />
      <MemberSignature Language="VB.NET" Value="Public Property PrioritizeUnhealthyInstances As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.PrioritizeUnhealthyInstances : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.PrioritizeUnhealthyInstances" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Upgrade all unhealthy instances in a scale set before any healthy instances. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RollbackFailedInstancesOnPolicyBreach">
      <MemberSignature Language="C#" Value="public bool? RollbackFailedInstancesOnPolicyBreach { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; RollbackFailedInstancesOnPolicyBreach" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.RollbackFailedInstancesOnPolicyBreach" />
      <MemberSignature Language="VB.NET" Value="Public Property RollbackFailedInstancesOnPolicyBreach As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.RollbackFailedInstancesOnPolicyBreach : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.RollbackFailedInstancesOnPolicyBreach" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Rollback failed instances to previous model if the Rolling Upgrade policy is violated. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.Compute.Models.RollingUpgradePolicy IJsonModel&lt;RollingUpgradePolicy&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.Compute.Models.RollingUpgradePolicy System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#Compute#Models#RollingUpgradePolicy&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As RollingUpgradePolicy Implements IJsonModel(Of RollingUpgradePolicy).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Compute.Models.RollingUpgradePolicy" Usage="rollingUpgradePolicy.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.Models.RollingUpgradePolicy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;RollingUpgradePolicy&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#Compute#Models#RollingUpgradePolicy&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of RollingUpgradePolicy).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="rollingUpgradePolicy.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.Compute.Models.RollingUpgradePolicy IPersistableModel&lt;RollingUpgradePolicy&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.Compute.Models.RollingUpgradePolicy System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Compute#Models#RollingUpgradePolicy&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As RollingUpgradePolicy Implements IPersistableModel(Of RollingUpgradePolicy).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Compute.Models.RollingUpgradePolicy" Usage="rollingUpgradePolicy.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.Models.RollingUpgradePolicy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;RollingUpgradePolicy&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Compute#Models#RollingUpgradePolicy&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of RollingUpgradePolicy).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="rollingUpgradePolicy.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;RollingUpgradePolicy&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Models.RollingUpgradePolicy.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Compute#Models#RollingUpgradePolicy&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of RollingUpgradePolicy).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="rollingUpgradePolicy.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Compute.Models.RollingUpgradePolicy&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
