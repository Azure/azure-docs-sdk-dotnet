<Type Name="ArmDataLakeStoreModelFactory" FullName="Azure.ResourceManager.DataLakeStore.Models.ArmDataLakeStoreModelFactory">
  <TypeSignature Language="C#" Value="public static class ArmDataLakeStoreModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ArmDataLakeStoreModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataLakeStore.Models.ArmDataLakeStoreModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ArmDataLakeStoreModelFactory" />
  <TypeSignature Language="F#" Value="type ArmDataLakeStoreModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataLakeStore</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DataLakeStoreAccountBasicData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountBasicData DataLakeStoreAccountBasicData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Guid? accountId = default, Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountStatus? provisioningState = default, Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountState? state = default, DateTimeOffset? createdOn = default, DateTimeOffset? lastModifiedOn = default, string endpoint = default, Azure.Core.AzureLocation? location = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; tags = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountBasicData DataLakeStoreAccountBasicData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; accountId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountStatus&gt; provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountState&gt; state, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastModifiedOn, string endpoint, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeStore.Models.ArmDataLakeStoreModelFactory.DataLakeStoreAccountBasicData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountStatus},System.Nullable{Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountState},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.Nullable{Azure.Core.AzureLocation},System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DataLakeStoreAccountBasicData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional accountId As Nullable(Of Guid) = Nothing, Optional provisioningState As Nullable(Of DataLakeStoreAccountStatus) = Nothing, Optional state As Nullable(Of DataLakeStoreAccountState) = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional lastModifiedOn As Nullable(Of DateTimeOffset) = Nothing, Optional endpoint As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional tags As IReadOnlyDictionary(Of String, String) = Nothing) As DataLakeStoreAccountBasicData" />
      <MemberSignature Language="F#" Value="static member DataLakeStoreAccountBasicData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Guid&gt; * Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountStatus&gt; * Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountState&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * string * Nullable&lt;Azure.Core.AzureLocation&gt; * System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt; -&gt; Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountBasicData" Usage="Azure.ResourceManager.DataLakeStore.Models.ArmDataLakeStoreModelFactory.DataLakeStoreAccountBasicData (id, name, resourceType, systemData, accountId, provisioningState, state, createdOn, lastModifiedOn, endpoint, location, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeStore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountBasicData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="accountId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountStatus&gt;" />
        <Parameter Name="state" Type="System.Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountState&gt;" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="lastModifiedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endpoint" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="tags" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="accountId"> The unique identifier associated with this Data Lake Store account. </param>
        <param name="provisioningState"> The provisioning status of the Data Lake Store account. </param>
        <param name="state"> The state of the Data Lake Store account. </param>
        <param name="createdOn"> The account creation time. </param>
        <param name="lastModifiedOn"> The account last modified time. </param>
        <param name="endpoint"> The full CName endpoint for this account. </param>
        <param name="location"> The resource location. </param>
        <param name="tags"> The resource tags. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountBasicData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountBasicData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLakeStoreAccountCreateOrUpdateContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountCreateOrUpdateContent DataLakeStoreAccountCreateOrUpdateContent (Azure.Core.AzureLocation location = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, string defaultGroup = default, Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountEncryptionConfig encryptionConfig = default, Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreEncryptionState? encryptionState = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DataLakeStore.Models.FirewallRuleForDataLakeStoreAccountCreateOrUpdateContent&gt; firewallRules = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DataLakeStore.Models.VirtualNetworkRuleForDataLakeStoreAccountCreateOrUpdateContent&gt; virtualNetworkRules = default, Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreFirewallState? firewallState = default, Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreFirewallAllowAzureIPsState? firewallAllowAzureIPs = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DataLakeStore.Models.TrustedIdProviderForDataLakeStoreAccountCreateOrUpdateContent&gt; trustedIdProviders = default, Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreTrustedIdProviderState? trustedIdProviderState = default, Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCommitmentTierType? newTier = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountCreateOrUpdateContent DataLakeStoreAccountCreateOrUpdateContent(valuetype Azure.Core.AzureLocation location, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, string defaultGroup, class Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountEncryptionConfig encryptionConfig, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreEncryptionState&gt; encryptionState, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.DataLakeStore.Models.FirewallRuleForDataLakeStoreAccountCreateOrUpdateContent&gt; firewallRules, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.DataLakeStore.Models.VirtualNetworkRuleForDataLakeStoreAccountCreateOrUpdateContent&gt; virtualNetworkRules, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreFirewallState&gt; firewallState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreFirewallAllowAzureIPsState&gt; firewallAllowAzureIPs, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.DataLakeStore.Models.TrustedIdProviderForDataLakeStoreAccountCreateOrUpdateContent&gt; trustedIdProviders, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreTrustedIdProviderState&gt; trustedIdProviderState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCommitmentTierType&gt; newTier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeStore.Models.ArmDataLakeStoreModelFactory.DataLakeStoreAccountCreateOrUpdateContent(Azure.Core.AzureLocation,System.Collections.Generic.IDictionary{System.String,System.String},Azure.ResourceManager.Models.ManagedServiceIdentity,System.String,Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountEncryptionConfig,System.Nullable{Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreEncryptionState},System.Collections.Generic.IEnumerable{Azure.ResourceManager.DataLakeStore.Models.FirewallRuleForDataLakeStoreAccountCreateOrUpdateContent},System.Collections.Generic.IEnumerable{Azure.ResourceManager.DataLakeStore.Models.VirtualNetworkRuleForDataLakeStoreAccountCreateOrUpdateContent},System.Nullable{Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreFirewallState},System.Nullable{Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreFirewallAllowAzureIPsState},System.Collections.Generic.IEnumerable{Azure.ResourceManager.DataLakeStore.Models.TrustedIdProviderForDataLakeStoreAccountCreateOrUpdateContent},System.Nullable{Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreTrustedIdProviderState},System.Nullable{Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCommitmentTierType})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DataLakeStoreAccountCreateOrUpdateContent (Optional location As AzureLocation = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional defaultGroup As String = Nothing, Optional encryptionConfig As DataLakeStoreAccountEncryptionConfig = Nothing, Optional encryptionState As Nullable(Of DataLakeStoreEncryptionState) = Nothing, Optional firewallRules As IEnumerable(Of FirewallRuleForDataLakeStoreAccountCreateOrUpdateContent) = Nothing, Optional virtualNetworkRules As IEnumerable(Of VirtualNetworkRuleForDataLakeStoreAccountCreateOrUpdateContent) = Nothing, Optional firewallState As Nullable(Of DataLakeStoreFirewallState) = Nothing, Optional firewallAllowAzureIPs As Nullable(Of DataLakeStoreFirewallAllowAzureIPsState) = Nothing, Optional trustedIdProviders As IEnumerable(Of TrustedIdProviderForDataLakeStoreAccountCreateOrUpdateContent) = Nothing, Optional trustedIdProviderState As Nullable(Of DataLakeStoreTrustedIdProviderState) = Nothing, Optional newTier As Nullable(Of DataLakeStoreCommitmentTierType) = Nothing) As DataLakeStoreAccountCreateOrUpdateContent" />
      <MemberSignature Language="F#" Value="static member DataLakeStoreAccountCreateOrUpdateContent : Azure.Core.AzureLocation * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.ResourceManager.Models.ManagedServiceIdentity * string * Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountEncryptionConfig * Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreEncryptionState&gt; * seq&lt;Azure.ResourceManager.DataLakeStore.Models.FirewallRuleForDataLakeStoreAccountCreateOrUpdateContent&gt; * seq&lt;Azure.ResourceManager.DataLakeStore.Models.VirtualNetworkRuleForDataLakeStoreAccountCreateOrUpdateContent&gt; * Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreFirewallState&gt; * Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreFirewallAllowAzureIPsState&gt; * seq&lt;Azure.ResourceManager.DataLakeStore.Models.TrustedIdProviderForDataLakeStoreAccountCreateOrUpdateContent&gt; * Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreTrustedIdProviderState&gt; * Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCommitmentTierType&gt; -&gt; Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountCreateOrUpdateContent" Usage="Azure.ResourceManager.DataLakeStore.Models.ArmDataLakeStoreModelFactory.DataLakeStoreAccountCreateOrUpdateContent (location, tags, identity, defaultGroup, encryptionConfig, encryptionState, firewallRules, virtualNetworkRules, firewallState, firewallAllowAzureIPs, trustedIdProviders, trustedIdProviderState, newTier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeStore</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountCreateOrUpdateContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="defaultGroup" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="encryptionConfig" Type="Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountEncryptionConfig" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="encryptionState" Type="System.Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreEncryptionState&gt;" Index="5" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="firewallRules" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DataLakeStore.Models.FirewallRuleForDataLakeStoreAccountCreateOrUpdateContent&gt;" Index="6" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="virtualNetworkRules" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DataLakeStore.Models.VirtualNetworkRuleForDataLakeStoreAccountCreateOrUpdateContent&gt;" Index="7" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="firewallState" Type="System.Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreFirewallState&gt;" Index="8" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="firewallAllowAzureIPs" Type="System.Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreFirewallAllowAzureIPsState&gt;" Index="9" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="trustedIdProviders" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DataLakeStore.Models.TrustedIdProviderForDataLakeStoreAccountCreateOrUpdateContent&gt;" Index="10" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="trustedIdProviderState" Type="System.Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreTrustedIdProviderState&gt;" Index="11" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="newTier" Type="System.Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCommitmentTierType&gt;" Index="12" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="location"> The resource location. </param>
        <param name="tags"> The resource tags. </param>
        <param name="identity"> The Key Vault encryption identity, if any. Current supported identity types: SystemAssigned. </param>
        <param name="defaultGroup"> The default owner group for all new folders and files created in the Data Lake Store account. </param>
        <param name="encryptionConfig"> The Key Vault encryption configuration. </param>
        <param name="encryptionState"> The current state of encryption for this Data Lake Store account. </param>
        <param name="firewallRules"> The list of firewall rules associated with this Data Lake Store account. </param>
        <param name="virtualNetworkRules"> The list of virtual network rules associated with this Data Lake Store account. </param>
        <param name="firewallState"> The current state of the IP address firewall for this Data Lake Store account. </param>
        <param name="firewallAllowAzureIPs"> The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced. </param>
        <param name="trustedIdProviders"> The list of trusted identity providers associated with this Data Lake Store account. </param>
        <param name="trustedIdProviderState"> The current state of the trusted identity provider feature for this Data Lake Store account. </param>
        <param name="newTier"> The commitment tier to use for next month. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountCreateOrUpdateContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountCreateOrUpdateContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLakeStoreAccountData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DataLakeStore.DataLakeStoreAccountData DataLakeStoreAccountData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, Guid? accountId = default, Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountStatus? provisioningState = default, Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountState? state = default, DateTimeOffset? createdOn = default, DateTimeOffset? lastModifiedOn = default, string endpoint = default, string defaultGroup = default, Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountEncryptionConfig encryptionConfig = default, Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreEncryptionState? encryptionState = default, Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreEncryptionProvisioningState? encryptionProvisioningState = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DataLakeStore.DataLakeStoreFirewallRuleData&gt; firewallRules = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DataLakeStore.DataLakeStoreVirtualNetworkRuleData&gt; virtualNetworkRules = default, Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreFirewallState? firewallState = default, Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreFirewallAllowAzureIPsState? firewallAllowAzureIPs = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DataLakeStore.DataLakeStoreTrustedIdProviderData&gt; trustedIdProviders = default, Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreTrustedIdProviderState? trustedIdProviderState = default, Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCommitmentTierType? newTier = default, Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCommitmentTierType? currentTier = default, Azure.Core.AzureLocation? location = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; tags = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DataLakeStore.DataLakeStoreAccountData DataLakeStoreAccountData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; accountId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountStatus&gt; provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountState&gt; state, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastModifiedOn, string endpoint, string defaultGroup, class Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountEncryptionConfig encryptionConfig, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreEncryptionState&gt; encryptionState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreEncryptionProvisioningState&gt; encryptionProvisioningState, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.DataLakeStore.DataLakeStoreFirewallRuleData&gt; firewallRules, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.DataLakeStore.DataLakeStoreVirtualNetworkRuleData&gt; virtualNetworkRules, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreFirewallState&gt; firewallState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreFirewallAllowAzureIPsState&gt; firewallAllowAzureIPs, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.DataLakeStore.DataLakeStoreTrustedIdProviderData&gt; trustedIdProviders, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreTrustedIdProviderState&gt; trustedIdProviderState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCommitmentTierType&gt; newTier, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCommitmentTierType&gt; currentTier, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeStore.Models.ArmDataLakeStoreModelFactory.DataLakeStoreAccountData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.Models.ManagedServiceIdentity,System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountStatus},System.Nullable{Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountState},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.String,Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountEncryptionConfig,System.Nullable{Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreEncryptionState},System.Nullable{Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreEncryptionProvisioningState},System.Collections.Generic.IEnumerable{Azure.ResourceManager.DataLakeStore.DataLakeStoreFirewallRuleData},System.Collections.Generic.IEnumerable{Azure.ResourceManager.DataLakeStore.DataLakeStoreVirtualNetworkRuleData},System.Nullable{Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreFirewallState},System.Nullable{Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreFirewallAllowAzureIPsState},System.Collections.Generic.IEnumerable{Azure.ResourceManager.DataLakeStore.DataLakeStoreTrustedIdProviderData},System.Nullable{Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreTrustedIdProviderState},System.Nullable{Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCommitmentTierType},System.Nullable{Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCommitmentTierType},System.Nullable{Azure.Core.AzureLocation},System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DataLakeStoreAccountData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional accountId As Nullable(Of Guid) = Nothing, Optional provisioningState As Nullable(Of DataLakeStoreAccountStatus) = Nothing, Optional state As Nullable(Of DataLakeStoreAccountState) = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional lastModifiedOn As Nullable(Of DateTimeOffset) = Nothing, Optional endpoint As String = Nothing, Optional defaultGroup As String = Nothing, Optional encryptionConfig As DataLakeStoreAccountEncryptionConfig = Nothing, Optional encryptionState As Nullable(Of DataLakeStoreEncryptionState) = Nothing, Optional encryptionProvisioningState As Nullable(Of DataLakeStoreEncryptionProvisioningState) = Nothing, Optional firewallRules As IEnumerable(Of DataLakeStoreFirewallRuleData) = Nothing, Optional virtualNetworkRules As IEnumerable(Of DataLakeStoreVirtualNetworkRuleData) = Nothing, Optional firewallState As Nullable(Of DataLakeStoreFirewallState) = Nothing, Optional firewallAllowAzureIPs As Nullable(Of DataLakeStoreFirewallAllowAzureIPsState) = Nothing, Optional trustedIdProviders As IEnumerable(Of DataLakeStoreTrustedIdProviderData) = Nothing, Optional trustedIdProviderState As Nullable(Of DataLakeStoreTrustedIdProviderState) = Nothing, Optional newTier As Nullable(Of DataLakeStoreCommitmentTierType) = Nothing, Optional currentTier As Nullable(Of DataLakeStoreCommitmentTierType) = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional tags As IReadOnlyDictionary(Of String, String) = Nothing) As DataLakeStoreAccountData" />
      <MemberSignature Language="F#" Value="static member DataLakeStoreAccountData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.ResourceManager.Models.ManagedServiceIdentity * Nullable&lt;Guid&gt; * Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountStatus&gt; * Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountState&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * string * string * Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountEncryptionConfig * Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreEncryptionState&gt; * Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreEncryptionProvisioningState&gt; * seq&lt;Azure.ResourceManager.DataLakeStore.DataLakeStoreFirewallRuleData&gt; * seq&lt;Azure.ResourceManager.DataLakeStore.DataLakeStoreVirtualNetworkRuleData&gt; * Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreFirewallState&gt; * Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreFirewallAllowAzureIPsState&gt; * seq&lt;Azure.ResourceManager.DataLakeStore.DataLakeStoreTrustedIdProviderData&gt; * Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreTrustedIdProviderState&gt; * Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCommitmentTierType&gt; * Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCommitmentTierType&gt; * Nullable&lt;Azure.Core.AzureLocation&gt; * System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt; -&gt; Azure.ResourceManager.DataLakeStore.DataLakeStoreAccountData" Usage="Azure.ResourceManager.DataLakeStore.Models.ArmDataLakeStoreModelFactory.DataLakeStoreAccountData (id, name, resourceType, systemData, identity, accountId, provisioningState, state, createdOn, lastModifiedOn, endpoint, defaultGroup, encryptionConfig, encryptionState, encryptionProvisioningState, firewallRules, virtualNetworkRules, firewallState, firewallAllowAzureIPs, trustedIdProviders, trustedIdProviderState, newTier, currentTier, location, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeStore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataLakeStore.DataLakeStoreAccountData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" />
        <Parameter Name="accountId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountStatus&gt;" />
        <Parameter Name="state" Type="System.Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountState&gt;" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="lastModifiedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endpoint" Type="System.String" />
        <Parameter Name="defaultGroup" Type="System.String" />
        <Parameter Name="encryptionConfig" Type="Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountEncryptionConfig" />
        <Parameter Name="encryptionState" Type="System.Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreEncryptionState&gt;" />
        <Parameter Name="encryptionProvisioningState" Type="System.Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreEncryptionProvisioningState&gt;" />
        <Parameter Name="firewallRules" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DataLakeStore.DataLakeStoreFirewallRuleData&gt;" />
        <Parameter Name="virtualNetworkRules" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DataLakeStore.DataLakeStoreVirtualNetworkRuleData&gt;" />
        <Parameter Name="firewallState" Type="System.Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreFirewallState&gt;" />
        <Parameter Name="firewallAllowAzureIPs" Type="System.Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreFirewallAllowAzureIPsState&gt;" />
        <Parameter Name="trustedIdProviders" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DataLakeStore.DataLakeStoreTrustedIdProviderData&gt;" />
        <Parameter Name="trustedIdProviderState" Type="System.Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreTrustedIdProviderState&gt;" />
        <Parameter Name="newTier" Type="System.Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCommitmentTierType&gt;" />
        <Parameter Name="currentTier" Type="System.Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCommitmentTierType&gt;" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="tags" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="identity"> The Key Vault encryption identity, if any. Current supported identity types: SystemAssigned. </param>
        <param name="accountId"> The unique identifier associated with this Data Lake Store account. </param>
        <param name="provisioningState"> The provisioning status of the Data Lake Store account. </param>
        <param name="state"> The state of the Data Lake Store account. </param>
        <param name="createdOn"> The account creation time. </param>
        <param name="lastModifiedOn"> The account last modified time. </param>
        <param name="endpoint"> The full CName endpoint for this account. </param>
        <param name="defaultGroup"> The default owner group for all new folders and files created in the Data Lake Store account. </param>
        <param name="encryptionConfig"> The Key Vault encryption configuration. </param>
        <param name="encryptionState"> The current state of encryption for this Data Lake Store account. </param>
        <param name="encryptionProvisioningState"> The current state of encryption provisioning for this Data Lake Store account. </param>
        <param name="firewallRules"> The list of firewall rules associated with this Data Lake Store account. </param>
        <param name="virtualNetworkRules"> The list of virtual network rules associated with this Data Lake Store account. </param>
        <param name="firewallState"> The current state of the IP address firewall for this Data Lake Store account. </param>
        <param name="firewallAllowAzureIPs"> The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced. </param>
        <param name="trustedIdProviders"> The list of trusted identity providers associated with this Data Lake Store account. </param>
        <param name="trustedIdProviderState"> The current state of the trusted identity provider feature for this Data Lake Store account. </param>
        <param name="newTier"> The commitment tier to use for next month. </param>
        <param name="currentTier"> The commitment tier in use for the current month. </param>
        <param name="location"> The resource location. </param>
        <param name="tags"> The resource tags. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DataLakeStore.DataLakeStoreAccountData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DataLakeStore.DataLakeStoreAccountData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLakeStoreAccountNameAvailabilityResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountNameAvailabilityResult DataLakeStoreAccountNameAvailabilityResult (bool? isNameAvailable = default, string reason = default, string message = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountNameAvailabilityResult DataLakeStoreAccountNameAvailabilityResult(valuetype System.Nullable`1&lt;bool&gt; isNameAvailable, string reason, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeStore.Models.ArmDataLakeStoreModelFactory.DataLakeStoreAccountNameAvailabilityResult(System.Nullable{System.Boolean},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DataLakeStoreAccountNameAvailabilityResult (Optional isNameAvailable As Nullable(Of Boolean) = Nothing, Optional reason As String = Nothing, Optional message As String = Nothing) As DataLakeStoreAccountNameAvailabilityResult" />
      <MemberSignature Language="F#" Value="static member DataLakeStoreAccountNameAvailabilityResult : Nullable&lt;bool&gt; * string * string -&gt; Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountNameAvailabilityResult" Usage="Azure.ResourceManager.DataLakeStore.Models.ArmDataLakeStoreModelFactory.DataLakeStoreAccountNameAvailabilityResult (isNameAvailable, reason, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeStore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountNameAvailabilityResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isNameAvailable" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="isNameAvailable"> The Boolean value of true or false to indicate whether the Data Lake Store account name is available or not. </param>
        <param name="reason"> The reason why the Data Lake Store account name is not available, if nameAvailable is false. </param>
        <param name="message"> The message describing why the Data Lake Store account name is not available, if nameAvailable is false. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountNameAvailabilityResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreAccountNameAvailabilityResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLakeStoreCapabilityInformation">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCapabilityInformation DataLakeStoreCapabilityInformation (Guid? subscriptionId = default, Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreSubscriptionState? state = default, int? maxAccountCount = default, int? accountCount = default, bool? isUnderMigrationState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCapabilityInformation DataLakeStoreCapabilityInformation(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; subscriptionId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreSubscriptionState&gt; state, valuetype System.Nullable`1&lt;int32&gt; maxAccountCount, valuetype System.Nullable`1&lt;int32&gt; accountCount, valuetype System.Nullable`1&lt;bool&gt; isUnderMigrationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeStore.Models.ArmDataLakeStoreModelFactory.DataLakeStoreCapabilityInformation(System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreSubscriptionState},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DataLakeStoreCapabilityInformation (Optional subscriptionId As Nullable(Of Guid) = Nothing, Optional state As Nullable(Of DataLakeStoreSubscriptionState) = Nothing, Optional maxAccountCount As Nullable(Of Integer) = Nothing, Optional accountCount As Nullable(Of Integer) = Nothing, Optional isUnderMigrationState As Nullable(Of Boolean) = Nothing) As DataLakeStoreCapabilityInformation" />
      <MemberSignature Language="F#" Value="static member DataLakeStoreCapabilityInformation : Nullable&lt;Guid&gt; * Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreSubscriptionState&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCapabilityInformation" Usage="Azure.ResourceManager.DataLakeStore.Models.ArmDataLakeStoreModelFactory.DataLakeStoreCapabilityInformation (subscriptionId, state, maxAccountCount, accountCount, isUnderMigrationState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeStore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCapabilityInformation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="state" Type="System.Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreSubscriptionState&gt;" />
        <Parameter Name="maxAccountCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="accountCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="isUnderMigrationState" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="subscriptionId"> The subscription credentials that uniquely identifies the subscription. </param>
        <param name="state"> The subscription state. </param>
        <param name="maxAccountCount"> The maximum supported number of accounts under this subscription. </param>
        <param name="accountCount"> The current number of accounts under this subscription. </param>
        <param name="isUnderMigrationState"> The Boolean value of true or false to indicate the maintenance state. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCapabilityInformation" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreCapabilityInformation" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLakeStoreFirewallRuleData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DataLakeStore.DataLakeStoreFirewallRuleData DataLakeStoreFirewallRuleData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Net.IPAddress startIPAddress = default, System.Net.IPAddress endIPAddress = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DataLakeStore.DataLakeStoreFirewallRuleData DataLakeStoreFirewallRuleData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Net.IPAddress startIPAddress, class System.Net.IPAddress endIPAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeStore.Models.ArmDataLakeStoreModelFactory.DataLakeStoreFirewallRuleData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Net.IPAddress,System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DataLakeStoreFirewallRuleData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional startIPAddress As IPAddress = Nothing, Optional endIPAddress As IPAddress = Nothing) As DataLakeStoreFirewallRuleData" />
      <MemberSignature Language="F#" Value="static member DataLakeStoreFirewallRuleData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Net.IPAddress * System.Net.IPAddress -&gt; Azure.ResourceManager.DataLakeStore.DataLakeStoreFirewallRuleData" Usage="Azure.ResourceManager.DataLakeStore.Models.ArmDataLakeStoreModelFactory.DataLakeStoreFirewallRuleData (id, name, resourceType, systemData, startIPAddress, endIPAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeStore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataLakeStore.DataLakeStoreFirewallRuleData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="startIPAddress" Type="System.Net.IPAddress" />
        <Parameter Name="endIPAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="startIPAddress"> The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol. </param>
        <param name="endIPAddress"> The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DataLakeStore.DataLakeStoreFirewallRuleData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DataLakeStore.DataLakeStoreFirewallRuleData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLakeStoreTrustedIdProviderData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DataLakeStore.DataLakeStoreTrustedIdProviderData DataLakeStoreTrustedIdProviderData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Uri idProvider = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DataLakeStore.DataLakeStoreTrustedIdProviderData DataLakeStoreTrustedIdProviderData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Uri idProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeStore.Models.ArmDataLakeStoreModelFactory.DataLakeStoreTrustedIdProviderData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DataLakeStoreTrustedIdProviderData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional idProvider As Uri = Nothing) As DataLakeStoreTrustedIdProviderData" />
      <MemberSignature Language="F#" Value="static member DataLakeStoreTrustedIdProviderData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Uri -&gt; Azure.ResourceManager.DataLakeStore.DataLakeStoreTrustedIdProviderData" Usage="Azure.ResourceManager.DataLakeStore.Models.ArmDataLakeStoreModelFactory.DataLakeStoreTrustedIdProviderData (id, name, resourceType, systemData, idProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeStore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataLakeStore.DataLakeStoreTrustedIdProviderData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="idProvider" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="idProvider"> The URL of this trusted identity provider. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DataLakeStore.DataLakeStoreTrustedIdProviderData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DataLakeStore.DataLakeStoreTrustedIdProviderData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLakeStoreUsage">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsage DataLakeStoreUsage (Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsageUnit? unit = default, Azure.Core.ResourceIdentifier id = default, int? currentValue = default, int? limit = default, Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsageName name = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsage DataLakeStoreUsage(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsageUnit&gt; unit, class Azure.Core.ResourceIdentifier id, valuetype System.Nullable`1&lt;int32&gt; currentValue, valuetype System.Nullable`1&lt;int32&gt; limit, class Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsageName name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeStore.Models.ArmDataLakeStoreModelFactory.DataLakeStoreUsage(System.Nullable{Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsageUnit},Azure.Core.ResourceIdentifier,System.Nullable{System.Int32},System.Nullable{System.Int32},Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsageName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DataLakeStoreUsage (Optional unit As Nullable(Of DataLakeStoreUsageUnit) = Nothing, Optional id As ResourceIdentifier = Nothing, Optional currentValue As Nullable(Of Integer) = Nothing, Optional limit As Nullable(Of Integer) = Nothing, Optional name As DataLakeStoreUsageName = Nothing) As DataLakeStoreUsage" />
      <MemberSignature Language="F#" Value="static member DataLakeStoreUsage : Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsageUnit&gt; * Azure.Core.ResourceIdentifier * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsageName -&gt; Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsage" Usage="Azure.ResourceManager.DataLakeStore.Models.ArmDataLakeStoreModelFactory.DataLakeStoreUsage (unit, id, currentValue, limit, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeStore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.Nullable&lt;Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsageUnit&gt;" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="currentValue" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="name" Type="Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsageName" />
      </Parameters>
      <Docs>
        <param name="unit"> Gets the unit of measurement. </param>
        <param name="id"> Resource identifier. </param>
        <param name="currentValue"> Gets the current count of the allocated resources in the subscription. </param>
        <param name="limit"> Gets the maximum count of the resources that can be allocated in the subscription. </param>
        <param name="name"> Gets the name of the type of usage. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsage" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsage" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLakeStoreUsageName">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsageName DataLakeStoreUsageName (string value = default, string localizedValue = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsageName DataLakeStoreUsageName(string value, string localizedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeStore.Models.ArmDataLakeStoreModelFactory.DataLakeStoreUsageName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DataLakeStoreUsageName (Optional value As String = Nothing, Optional localizedValue As String = Nothing) As DataLakeStoreUsageName" />
      <MemberSignature Language="F#" Value="static member DataLakeStoreUsageName : string * string -&gt; Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsageName" Usage="Azure.ResourceManager.DataLakeStore.Models.ArmDataLakeStoreModelFactory.DataLakeStoreUsageName (value, localizedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeStore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsageName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="localizedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"> Gets a string describing the resource name. </param>
        <param name="localizedValue"> Gets a localized string describing the resource name. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsageName" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DataLakeStore.Models.DataLakeStoreUsageName" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLakeStoreVirtualNetworkRuleData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DataLakeStore.DataLakeStoreVirtualNetworkRuleData DataLakeStoreVirtualNetworkRuleData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.ResourceIdentifier subnetId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DataLakeStore.DataLakeStoreVirtualNetworkRuleData DataLakeStoreVirtualNetworkRuleData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.Core.ResourceIdentifier subnetId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeStore.Models.ArmDataLakeStoreModelFactory.DataLakeStoreVirtualNetworkRuleData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DataLakeStoreVirtualNetworkRuleData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional subnetId As ResourceIdentifier = Nothing) As DataLakeStoreVirtualNetworkRuleData" />
      <MemberSignature Language="F#" Value="static member DataLakeStoreVirtualNetworkRuleData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataLakeStore.DataLakeStoreVirtualNetworkRuleData" Usage="Azure.ResourceManager.DataLakeStore.Models.ArmDataLakeStoreModelFactory.DataLakeStoreVirtualNetworkRuleData (id, name, resourceType, systemData, subnetId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeStore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataLakeStore.DataLakeStoreVirtualNetworkRuleData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="subnetId" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="subnetId"> The resource identifier for the subnet. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DataLakeStore.DataLakeStoreVirtualNetworkRuleData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DataLakeStore.DataLakeStoreVirtualNetworkRuleData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirewallRuleForDataLakeStoreAccountUpdateContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DataLakeStore.Models.FirewallRuleForDataLakeStoreAccountUpdateContent FirewallRuleForDataLakeStoreAccountUpdateContent (string name = default, System.Net.IPAddress startIPAddress = default, System.Net.IPAddress endIPAddress = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DataLakeStore.Models.FirewallRuleForDataLakeStoreAccountUpdateContent FirewallRuleForDataLakeStoreAccountUpdateContent(string name, class System.Net.IPAddress startIPAddress, class System.Net.IPAddress endIPAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeStore.Models.ArmDataLakeStoreModelFactory.FirewallRuleForDataLakeStoreAccountUpdateContent(System.String,System.Net.IPAddress,System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FirewallRuleForDataLakeStoreAccountUpdateContent (Optional name As String = Nothing, Optional startIPAddress As IPAddress = Nothing, Optional endIPAddress As IPAddress = Nothing) As FirewallRuleForDataLakeStoreAccountUpdateContent" />
      <MemberSignature Language="F#" Value="static member FirewallRuleForDataLakeStoreAccountUpdateContent : string * System.Net.IPAddress * System.Net.IPAddress -&gt; Azure.ResourceManager.DataLakeStore.Models.FirewallRuleForDataLakeStoreAccountUpdateContent" Usage="Azure.ResourceManager.DataLakeStore.Models.ArmDataLakeStoreModelFactory.FirewallRuleForDataLakeStoreAccountUpdateContent (name, startIPAddress, endIPAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeStore</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataLakeStore.Models.FirewallRuleForDataLakeStoreAccountUpdateContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="startIPAddress" Type="System.Net.IPAddress" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="endIPAddress" Type="System.Net.IPAddress" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> The unique name of the firewall rule to update. </param>
        <param name="startIPAddress"> The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol. </param>
        <param name="endIPAddress"> The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DataLakeStore.Models.FirewallRuleForDataLakeStoreAccountUpdateContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DataLakeStore.Models.FirewallRuleForDataLakeStoreAccountUpdateContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrustedIdProviderForDataLakeStoreAccountUpdateContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DataLakeStore.Models.TrustedIdProviderForDataLakeStoreAccountUpdateContent TrustedIdProviderForDataLakeStoreAccountUpdateContent (string name = default, Uri idProvider = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DataLakeStore.Models.TrustedIdProviderForDataLakeStoreAccountUpdateContent TrustedIdProviderForDataLakeStoreAccountUpdateContent(string name, class System.Uri idProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeStore.Models.ArmDataLakeStoreModelFactory.TrustedIdProviderForDataLakeStoreAccountUpdateContent(System.String,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TrustedIdProviderForDataLakeStoreAccountUpdateContent (Optional name As String = Nothing, Optional idProvider As Uri = Nothing) As TrustedIdProviderForDataLakeStoreAccountUpdateContent" />
      <MemberSignature Language="F#" Value="static member TrustedIdProviderForDataLakeStoreAccountUpdateContent : string * Uri -&gt; Azure.ResourceManager.DataLakeStore.Models.TrustedIdProviderForDataLakeStoreAccountUpdateContent" Usage="Azure.ResourceManager.DataLakeStore.Models.ArmDataLakeStoreModelFactory.TrustedIdProviderForDataLakeStoreAccountUpdateContent (name, idProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeStore</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataLakeStore.Models.TrustedIdProviderForDataLakeStoreAccountUpdateContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="idProvider" Type="System.Uri" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> The unique name of the trusted identity provider to update. </param>
        <param name="idProvider"> The URL of this trusted identity provider. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DataLakeStore.Models.TrustedIdProviderForDataLakeStoreAccountUpdateContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DataLakeStore.Models.TrustedIdProviderForDataLakeStoreAccountUpdateContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualNetworkRuleForDataLakeStoreAccountUpdateContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DataLakeStore.Models.VirtualNetworkRuleForDataLakeStoreAccountUpdateContent VirtualNetworkRuleForDataLakeStoreAccountUpdateContent (string name = default, Azure.Core.ResourceIdentifier subnetId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DataLakeStore.Models.VirtualNetworkRuleForDataLakeStoreAccountUpdateContent VirtualNetworkRuleForDataLakeStoreAccountUpdateContent(string name, class Azure.Core.ResourceIdentifier subnetId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeStore.Models.ArmDataLakeStoreModelFactory.VirtualNetworkRuleForDataLakeStoreAccountUpdateContent(System.String,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VirtualNetworkRuleForDataLakeStoreAccountUpdateContent (Optional name As String = Nothing, Optional subnetId As ResourceIdentifier = Nothing) As VirtualNetworkRuleForDataLakeStoreAccountUpdateContent" />
      <MemberSignature Language="F#" Value="static member VirtualNetworkRuleForDataLakeStoreAccountUpdateContent : string * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataLakeStore.Models.VirtualNetworkRuleForDataLakeStoreAccountUpdateContent" Usage="Azure.ResourceManager.DataLakeStore.Models.ArmDataLakeStoreModelFactory.VirtualNetworkRuleForDataLakeStoreAccountUpdateContent (name, subnetId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeStore</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataLakeStore.Models.VirtualNetworkRuleForDataLakeStoreAccountUpdateContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="subnetId" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> The unique name of the virtual network rule to update. </param>
        <param name="subnetId"> The resource identifier for the subnet. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DataLakeStore.Models.VirtualNetworkRuleForDataLakeStoreAccountUpdateContent" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DataLakeStore.Models.VirtualNetworkRuleForDataLakeStoreAccountUpdateContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
