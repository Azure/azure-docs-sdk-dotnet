<Type Name="MockableServiceFabricSubscriptionResource" FullName="Azure.ResourceManager.ServiceFabric.Mocking.MockableServiceFabricSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableServiceFabricSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableServiceFabricSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ServiceFabric.Mocking.MockableServiceFabricSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableServiceFabricSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableServiceFabricSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ServiceFabric</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableServiceFabricSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabric.Mocking.MockableServiceFabricSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ServiceFabric.Mocking.MockableServiceFabricSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClusterVersions">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt; GetClusterVersions (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt; GetClusterVersions(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabric.Mocking.MockableServiceFabricSubscriptionResource.GetClusterVersions(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClusterVersions (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ClusterCodeVersionsResult)" />
      <MemberSignature Language="F#" Value="abstract member GetClusterVersions : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt;&#xA;override this.GetClusterVersions : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt;" Usage="mockableServiceFabricSubscriptionResource.GetClusterVersions (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all available code versions for Service Fabric cluster resources by location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/clusterVersions</description></item><item><term>Operation Id</term><description>ClusterVersions_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClusterVersions">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt; GetClusterVersions (Azure.Core.AzureLocation location, string clusterVersion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt; GetClusterVersions(valuetype Azure.Core.AzureLocation location, string clusterVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabric.Mocking.MockableServiceFabricSubscriptionResource.GetClusterVersions(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClusterVersions (location As AzureLocation, clusterVersion As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ClusterCodeVersionsResult)" />
      <MemberSignature Language="F#" Value="abstract member GetClusterVersions : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt;&#xA;override this.GetClusterVersions : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt;" Usage="mockableServiceFabricSubscriptionResource.GetClusterVersions (location, clusterVersion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="clusterVersion" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="clusterVersion"> The cluster code version. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about an available Service Fabric cluster code version.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/clusterVersions/{clusterVersion}</description></item><item><term>Operation Id</term><description>ClusterVersions_Get</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterVersion" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clusterVersion" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetClusterVersionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt; GetClusterVersionsAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt; GetClusterVersionsAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabric.Mocking.MockableServiceFabricSubscriptionResource.GetClusterVersionsAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClusterVersionsAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ClusterCodeVersionsResult)" />
      <MemberSignature Language="F#" Value="abstract member GetClusterVersionsAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt;&#xA;override this.GetClusterVersionsAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt;" Usage="mockableServiceFabricSubscriptionResource.GetClusterVersionsAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all available code versions for Service Fabric cluster resources by location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/clusterVersions</description></item><item><term>Operation Id</term><description>ClusterVersions_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClusterVersionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt; GetClusterVersionsAsync (Azure.Core.AzureLocation location, string clusterVersion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt; GetClusterVersionsAsync(valuetype Azure.Core.AzureLocation location, string clusterVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabric.Mocking.MockableServiceFabricSubscriptionResource.GetClusterVersionsAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClusterVersionsAsync (location As AzureLocation, clusterVersion As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ClusterCodeVersionsResult)" />
      <MemberSignature Language="F#" Value="abstract member GetClusterVersionsAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt;&#xA;override this.GetClusterVersionsAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt;" Usage="mockableServiceFabricSubscriptionResource.GetClusterVersionsAsync (location, clusterVersion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="clusterVersion" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="clusterVersion"> The cluster code version. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about an available Service Fabric cluster code version.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/clusterVersions/{clusterVersion}</description></item><item><term>Operation Id</term><description>ClusterVersions_Get</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterVersion" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clusterVersion" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetClusterVersionsByEnvironment">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt; GetClusterVersionsByEnvironment (Azure.Core.AzureLocation location, Azure.ResourceManager.ServiceFabric.Models.ClusterVersionsEnvironment environment, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt; GetClusterVersionsByEnvironment(valuetype Azure.Core.AzureLocation location, valuetype Azure.ResourceManager.ServiceFabric.Models.ClusterVersionsEnvironment environment, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabric.Mocking.MockableServiceFabricSubscriptionResource.GetClusterVersionsByEnvironment(Azure.Core.AzureLocation,Azure.ResourceManager.ServiceFabric.Models.ClusterVersionsEnvironment,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClusterVersionsByEnvironment (location As AzureLocation, environment As ClusterVersionsEnvironment, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ClusterCodeVersionsResult)" />
      <MemberSignature Language="F#" Value="abstract member GetClusterVersionsByEnvironment : Azure.Core.AzureLocation * Azure.ResourceManager.ServiceFabric.Models.ClusterVersionsEnvironment * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt;&#xA;override this.GetClusterVersionsByEnvironment : Azure.Core.AzureLocation * Azure.ResourceManager.ServiceFabric.Models.ClusterVersionsEnvironment * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt;" Usage="mockableServiceFabricSubscriptionResource.GetClusterVersionsByEnvironment (location, environment, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="environment" Type="Azure.ResourceManager.ServiceFabric.Models.ClusterVersionsEnvironment" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="environment"> The operating system of the cluster. The default means all. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all available code versions for Service Fabric cluster resources by environment.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/clusterVersions</description></item><item><term>Operation Id</term><description>ClusterVersions_ListByEnvironment</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClusterVersionsByEnvironment">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt; GetClusterVersionsByEnvironment (Azure.Core.AzureLocation location, Azure.ResourceManager.ServiceFabric.Models.ClusterVersionsEnvironment environment, string clusterVersion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt; GetClusterVersionsByEnvironment(valuetype Azure.Core.AzureLocation location, valuetype Azure.ResourceManager.ServiceFabric.Models.ClusterVersionsEnvironment environment, string clusterVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabric.Mocking.MockableServiceFabricSubscriptionResource.GetClusterVersionsByEnvironment(Azure.Core.AzureLocation,Azure.ResourceManager.ServiceFabric.Models.ClusterVersionsEnvironment,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClusterVersionsByEnvironment (location As AzureLocation, environment As ClusterVersionsEnvironment, clusterVersion As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ClusterCodeVersionsResult)" />
      <MemberSignature Language="F#" Value="abstract member GetClusterVersionsByEnvironment : Azure.Core.AzureLocation * Azure.ResourceManager.ServiceFabric.Models.ClusterVersionsEnvironment * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt;&#xA;override this.GetClusterVersionsByEnvironment : Azure.Core.AzureLocation * Azure.ResourceManager.ServiceFabric.Models.ClusterVersionsEnvironment * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt;" Usage="mockableServiceFabricSubscriptionResource.GetClusterVersionsByEnvironment (location, environment, clusterVersion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="environment" Type="Azure.ResourceManager.ServiceFabric.Models.ClusterVersionsEnvironment" />
        <Parameter Name="clusterVersion" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="environment"> The operating system of the cluster. The default means all. </param>
        <param name="clusterVersion"> The cluster code version. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about an available Service Fabric cluster code version by environment.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/clusterVersions/{clusterVersion}</description></item><item><term>Operation Id</term><description>ClusterVersions_GetByEnvironment</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterVersion" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clusterVersion" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetClusterVersionsByEnvironmentAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt; GetClusterVersionsByEnvironmentAsync (Azure.Core.AzureLocation location, Azure.ResourceManager.ServiceFabric.Models.ClusterVersionsEnvironment environment, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt; GetClusterVersionsByEnvironmentAsync(valuetype Azure.Core.AzureLocation location, valuetype Azure.ResourceManager.ServiceFabric.Models.ClusterVersionsEnvironment environment, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabric.Mocking.MockableServiceFabricSubscriptionResource.GetClusterVersionsByEnvironmentAsync(Azure.Core.AzureLocation,Azure.ResourceManager.ServiceFabric.Models.ClusterVersionsEnvironment,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClusterVersionsByEnvironmentAsync (location As AzureLocation, environment As ClusterVersionsEnvironment, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ClusterCodeVersionsResult)" />
      <MemberSignature Language="F#" Value="abstract member GetClusterVersionsByEnvironmentAsync : Azure.Core.AzureLocation * Azure.ResourceManager.ServiceFabric.Models.ClusterVersionsEnvironment * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt;&#xA;override this.GetClusterVersionsByEnvironmentAsync : Azure.Core.AzureLocation * Azure.ResourceManager.ServiceFabric.Models.ClusterVersionsEnvironment * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt;" Usage="mockableServiceFabricSubscriptionResource.GetClusterVersionsByEnvironmentAsync (location, environment, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="environment" Type="Azure.ResourceManager.ServiceFabric.Models.ClusterVersionsEnvironment" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="environment"> The operating system of the cluster. The default means all. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all available code versions for Service Fabric cluster resources by environment.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/clusterVersions</description></item><item><term>Operation Id</term><description>ClusterVersions_ListByEnvironment</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClusterVersionsByEnvironmentAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt; GetClusterVersionsByEnvironmentAsync (Azure.Core.AzureLocation location, Azure.ResourceManager.ServiceFabric.Models.ClusterVersionsEnvironment environment, string clusterVersion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt; GetClusterVersionsByEnvironmentAsync(valuetype Azure.Core.AzureLocation location, valuetype Azure.ResourceManager.ServiceFabric.Models.ClusterVersionsEnvironment environment, string clusterVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabric.Mocking.MockableServiceFabricSubscriptionResource.GetClusterVersionsByEnvironmentAsync(Azure.Core.AzureLocation,Azure.ResourceManager.ServiceFabric.Models.ClusterVersionsEnvironment,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClusterVersionsByEnvironmentAsync (location As AzureLocation, environment As ClusterVersionsEnvironment, clusterVersion As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ClusterCodeVersionsResult)" />
      <MemberSignature Language="F#" Value="abstract member GetClusterVersionsByEnvironmentAsync : Azure.Core.AzureLocation * Azure.ResourceManager.ServiceFabric.Models.ClusterVersionsEnvironment * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt;&#xA;override this.GetClusterVersionsByEnvironmentAsync : Azure.Core.AzureLocation * Azure.ResourceManager.ServiceFabric.Models.ClusterVersionsEnvironment * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt;" Usage="mockableServiceFabricSubscriptionResource.GetClusterVersionsByEnvironmentAsync (location, environment, clusterVersion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="environment" Type="Azure.ResourceManager.ServiceFabric.Models.ClusterVersionsEnvironment" />
        <Parameter Name="clusterVersion" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location for the cluster code versions. This is different from cluster location. </param>
        <param name="environment"> The operating system of the cluster. The default means all. </param>
        <param name="clusterVersion"> The cluster code version. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about an available Service Fabric cluster code version by environment.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/clusterVersions/{clusterVersion}</description></item><item><term>Operation Id</term><description>ClusterVersions_GetByEnvironment</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ServiceFabric.Models.ClusterCodeVersionsResult" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterVersion" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clusterVersion" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceFabricClusters">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ServiceFabric.ServiceFabricClusterResource&gt; GetServiceFabricClusters (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ServiceFabric.ServiceFabricClusterResource&gt; GetServiceFabricClusters(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabric.Mocking.MockableServiceFabricSubscriptionResource.GetServiceFabricClusters(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceFabricClusters (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ServiceFabricClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceFabricClusters : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ServiceFabric.ServiceFabricClusterResource&gt;&#xA;override this.GetServiceFabricClusters : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ServiceFabric.ServiceFabricClusterResource&gt;" Usage="mockableServiceFabricSubscriptionResource.GetServiceFabricClusters cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ServiceFabric.ServiceFabricClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all Service Fabric cluster resources created or in the process of being created in the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/clusters</description></item><item><term>Operation Id</term><description>Clusters_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ServiceFabric.ServiceFabricClusterResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceFabricClustersAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabric.ServiceFabricClusterResource&gt; GetServiceFabricClustersAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ServiceFabric.ServiceFabricClusterResource&gt; GetServiceFabricClustersAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabric.Mocking.MockableServiceFabricSubscriptionResource.GetServiceFabricClustersAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceFabricClustersAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ServiceFabricClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceFabricClustersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabric.ServiceFabricClusterResource&gt;&#xA;override this.GetServiceFabricClustersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabric.ServiceFabricClusterResource&gt;" Usage="mockableServiceFabricSubscriptionResource.GetServiceFabricClustersAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ServiceFabric.ServiceFabricClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all Service Fabric cluster resources created or in the process of being created in the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/clusters</description></item><item><term>Operation Id</term><description>Clusters_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ServiceFabric.ServiceFabricClusterResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
