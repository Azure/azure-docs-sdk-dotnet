<Type Name="TimeSeriesInsightsInstances" FullName="Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsInstances">
  <TypeSignature Language="C#" Value="public class TimeSeriesInsightsInstances" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TimeSeriesInsightsInstances extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsInstances" />
  <TypeSignature Language="VB.NET" Value="Public Class TimeSeriesInsightsInstances" />
  <TypeSignature Language="F#" Value="type TimeSeriesInsightsInstances = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.IoT.TimeSeriesInsights</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Perform operations such as creating, listing, replacing and deleting Time Series instances.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TimeSeriesInsightsInstances ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsInstances.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.TimeSeriesInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of TimeSeriesInsightsInstances. This constructor should only be used for mocking purposes.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrReplace">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt; CreateOrReplace (System.Collections.Generic.IEnumerable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesInstance&gt; timeSeriesInstances, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt; CreateOrReplace(class System.Collections.Generic.IEnumerable`1&lt;class Azure.IoT.TimeSeriesInsights.TimeSeriesInstance&gt; timeSeriesInstances, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsInstances.CreateOrReplace(System.Collections.Generic.IEnumerable{Azure.IoT.TimeSeriesInsights.TimeSeriesInstance},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrReplace (timeSeriesInstances As IEnumerable(Of TimeSeriesInstance), Optional cancellationToken As CancellationToken = Nothing) As Response(Of TimeSeriesOperationError())" />
      <MemberSignature Language="F#" Value="abstract member CreateOrReplace : seq&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesInstance&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;&#xA;override this.CreateOrReplace : seq&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesInstance&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;" Usage="timeSeriesInsightsInstances.CreateOrReplace (timeSeriesInstances, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.TimeSeriesInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSeriesInstances" Type="System.Collections.Generic.IEnumerable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesInstance&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeSeriesInstances">The Time Series instances to be created or replaced.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Creates Time Series instances synchronously. If a provided instance is already in use, then this will attempt to replace the existing
            instance with the provided Time Series Instance.
            </summary>
        <returns>
            List of error objects corresponding by position to the <paramref name="timeSeriesInstances" /> array in the request.
            A <seealso cref="T:Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError" /> object will be set when operation is unsuccessful.
            </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsInstances.CreateOrReplaceAsync(System.Collections.Generic.IEnumerable{Azure.IoT.TimeSeriesInsights.TimeSeriesInstance},System.Threading.CancellationToken)" />
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="timeSeriesInstances" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
            The exception is thrown when <paramref name="timeSeriesInstances" /> is empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrReplaceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;&gt; CreateOrReplaceAsync (System.Collections.Generic.IEnumerable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesInstance&gt; timeSeriesInstances, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;&gt; CreateOrReplaceAsync(class System.Collections.Generic.IEnumerable`1&lt;class Azure.IoT.TimeSeriesInsights.TimeSeriesInstance&gt; timeSeriesInstances, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsInstances.CreateOrReplaceAsync(System.Collections.Generic.IEnumerable{Azure.IoT.TimeSeriesInsights.TimeSeriesInstance},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrReplaceAsync (timeSeriesInstances As IEnumerable(Of TimeSeriesInstance), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TimeSeriesOperationError()))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrReplaceAsync : seq&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesInstance&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;&gt;&#xA;override this.CreateOrReplaceAsync : seq&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesInstance&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;&gt;" Usage="timeSeriesInsightsInstances.CreateOrReplaceAsync (timeSeriesInstances, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.TimeSeriesInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSeriesInstances" Type="System.Collections.Generic.IEnumerable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesInstance&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeSeriesInstances">The Time Series instances to be created or replaced.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
             Creates Time Series instances asynchronously. If a provided instance is already in use, then this will attempt to replace the existing
             instance with the provided Time Series Instance.
             </summary>
        <returns>
             List of error objects corresponding by position to the <paramref name="timeSeriesInstances" /> array in the request.
             A <seealso cref="T:Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError" /> object will be set when operation is unsuccessful.
             </returns>
        <remarks>
             For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/main/sdk/timeseriesinsights/Azure.IoT.TimeSeriesInsights/samples">our repo samples</see>.
             </remarks>
        <example>
          <code snippet="Snippet:TimeSeriesInsightsSampleCreateInstance" language="csharp">
             // Create a Time Series Instance object with the default Time Series Insights type Id.
             // The default type Id can be obtained programmatically by using the ModelSettings client.
             // tsId is created above using `TimeSeriesIdHelper.CreateTimeSeriesId`.
             var instance = new TimeSeriesInstance(tsId, defaultTypeId)
             {
                 Name = "instance1",
             };
            
             var tsiInstancesToCreate = new List&lt;TimeSeriesInstance&gt;
             {
                 instance,
             };
            
             Response&lt;TimeSeriesOperationError[]&gt; createInstanceErrors = await instancesClient
                 .CreateOrReplaceAsync(tsiInstancesToCreate);
            
             // The response of calling the API contains a list of error objects corresponding by position to the input parameter
             // array in the request. If the error object is set to null, this means the operation was a success.
             for (int i = 0; i &lt; createInstanceErrors.Value.Length; i++)
             {
                 TimeSeriesId tsiId = tsiInstancesToCreate[i].TimeSeriesId;
            
                 if (createInstanceErrors.Value[i] == null)
                 {
                     Console.WriteLine($"Created Time Series Insights instance with Id '{tsiId}'.");
                 }
                 else
                 {
                     Console.WriteLine($"Failed to create a Time Series Insights instance with Id '{tsiId}', " +
                         $"Error Message: '{createInstanceErrors.Value[i].Message}, " +
                         $"Error code: '{createInstanceErrors.Value[i].Code}'.");
                 }
             }
             </code>
        </example>
        <exception cref="T:System.ArgumentNullException">
             The exception is thrown when <paramref name="timeSeriesInstances" /> is <c>null</c>.
             </exception>
        <exception cref="T:System.ArgumentException">
             The exception is thrown when <paramref name="timeSeriesInstances" /> is empty.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteById">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt; DeleteById (System.Collections.Generic.IEnumerable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesId&gt; timeSeriesIds, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt; DeleteById(class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.IoT.TimeSeriesInsights.TimeSeriesId&gt; timeSeriesIds, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsInstances.DeleteById(System.Collections.Generic.IEnumerable{Azure.IoT.TimeSeriesInsights.TimeSeriesId},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteById (timeSeriesIds As IEnumerable(Of TimeSeriesId), Optional cancellationToken As CancellationToken = Nothing) As Response(Of TimeSeriesOperationError())" />
      <MemberSignature Language="F#" Value="abstract member DeleteById : seq&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesId&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;&#xA;override this.DeleteById : seq&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesId&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;" Usage="timeSeriesInsightsInstances.DeleteById (timeSeriesIds, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.TimeSeriesInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSeriesIds" Type="System.Collections.Generic.IEnumerable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesId&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeSeriesIds">List of Ids of the Time Series instances to delete.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Deletes Time Series instances from the environment by Time Series Ids synchronously.
            </summary>
        <returns>
            List of error objects corresponding by position to the array in the request. Null means the instance has been deleted, or did not exist.
            Error object is set when operation is unsuccessful.
            </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsInstances.DeleteByIdAsync(System.Collections.Generic.IEnumerable{Azure.IoT.TimeSeriesInsights.TimeSeriesId},System.Threading.CancellationToken)" />
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="timeSeriesIds" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
            The exception is thrown when <paramref name="timeSeriesIds" /> is empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteByIdAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;&gt; DeleteByIdAsync (System.Collections.Generic.IEnumerable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesId&gt; timeSeriesIds, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;&gt; DeleteByIdAsync(class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.IoT.TimeSeriesInsights.TimeSeriesId&gt; timeSeriesIds, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsInstances.DeleteByIdAsync(System.Collections.Generic.IEnumerable{Azure.IoT.TimeSeriesInsights.TimeSeriesId},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteByIdAsync (timeSeriesIds As IEnumerable(Of TimeSeriesId), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TimeSeriesOperationError()))" />
      <MemberSignature Language="F#" Value="abstract member DeleteByIdAsync : seq&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesId&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;&gt;&#xA;override this.DeleteByIdAsync : seq&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesId&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;&gt;" Usage="timeSeriesInsightsInstances.DeleteByIdAsync (timeSeriesIds, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.TimeSeriesInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSeriesIds" Type="System.Collections.Generic.IEnumerable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesId&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeSeriesIds">List of Ids of the Time Series instances to delete.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Deletes Time Series instances from the environment by Time Series Ids asynchronously.
            </summary>
        <returns>
            List of error objects corresponding by position to the array in the request. Null means the instance has been deleted, or did not exist.
            Error object is set when operation is unsuccessful.
            </returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/main/sdk/timeseriesinsights/Azure.IoT.TimeSeriesInsights/samples">our repo samples</see>.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="timeSeriesIds" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
            The exception is thrown when <paramref name="timeSeriesIds" /> is empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteByName">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt; DeleteByName (System.Collections.Generic.IEnumerable&lt;string&gt; timeSeriesNames, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt; DeleteByName(class System.Collections.Generic.IEnumerable`1&lt;string&gt; timeSeriesNames, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsInstances.DeleteByName(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteByName (timeSeriesNames As IEnumerable(Of String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of TimeSeriesOperationError())" />
      <MemberSignature Language="F#" Value="abstract member DeleteByName : seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;&#xA;override this.DeleteByName : seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;" Usage="timeSeriesInsightsInstances.DeleteByName (timeSeriesNames, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.TimeSeriesInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSeriesNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeSeriesNames">List of names of the Time Series instance to delete.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Deletes Time Series instances from the environment by instance names synchronously.
            </summary>
        <returns>
            List of error objects corresponding by position to the array in the request. Null means the instance has been deleted, or did not exist.
            Error object is set when operation is unsuccessful.
            </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsInstances.DeleteByNameAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="timeSeriesNames" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
            The exception is thrown when <paramref name="timeSeriesNames" /> is empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteByNameAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;&gt; DeleteByNameAsync (System.Collections.Generic.IEnumerable&lt;string&gt; timeSeriesNames, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;&gt; DeleteByNameAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; timeSeriesNames, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsInstances.DeleteByNameAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteByNameAsync (timeSeriesNames As IEnumerable(Of String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TimeSeriesOperationError()))" />
      <MemberSignature Language="F#" Value="abstract member DeleteByNameAsync : seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;&gt;&#xA;override this.DeleteByNameAsync : seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;&gt;" Usage="timeSeriesInsightsInstances.DeleteByNameAsync (timeSeriesNames, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.TimeSeriesInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSeriesNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeSeriesNames">List of names of the Time Series instance to delete.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
             Deletes Time Series instances from the environment by instance names asynchronously.
             </summary>
        <returns>
             List of error objects corresponding by position to the array in the request. Null means the instance has been deleted, or did not exist.
             Error object is set when operation is unsuccessful.
             </returns>
        <remarks>
             For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/main/sdk/timeseriesinsights/Azure.IoT.TimeSeriesInsights/samples">our repo samples</see>.
             </remarks>
        <example>
          <code snippet="Snippet:TimeSeriesInsightsSampleDeleteInstanceById" language="csharp">
             // tsId is created above using `TimeSeriesIdHelper.CreateTimeSeriesId`.
             var instancesToDelete = new List&lt;TimeSeriesId&gt;
             {
                 tsId,
             };
            
             Response&lt;TimeSeriesOperationError[]&gt; deleteInstanceErrors = await instancesClient
                 .DeleteByIdAsync(instancesToDelete);
            
             // The response of calling the API contains a list of error objects corresponding by position to the input parameter
             // array in the request. If the error object is set to null, this means the operation was a success.
             for (int i = 0; i &lt; deleteInstanceErrors.Value.Length; i++)
             {
                 TimeSeriesId tsiId = instancesToDelete[i];
            
                 if (deleteInstanceErrors.Value[i] == null)
                 {
                     Console.WriteLine($"Deleted Time Series Insights instance with Id '{tsiId}'.");
                 }
                 else
                 {
                     Console.WriteLine($"Failed to delete a Time Series Insights instance with Id '{tsiId}'. Error Message: '{deleteInstanceErrors.Value[i].Message}'");
                 }
             }
             </code>
        </example>
        <exception cref="T:System.ArgumentNullException">
             The exception is thrown when <paramref name="timeSeriesNames" /> is <c>null</c>.
             </exception>
        <exception cref="T:System.ArgumentException">
             The exception is thrown when <paramref name="timeSeriesNames" /> is empty.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesInstance&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.IoT.TimeSeriesInsights.TimeSeriesInstance&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsInstances.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of TimeSeriesInstance)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesInstance&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesInstance&gt;" Usage="timeSeriesInsightsInstances.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.TimeSeriesInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets Time Series instances synchronously in pages.
            </summary>
        <returns>The pageable list <see cref="T:Azure.Pageable`1" /> of Time Series instances belonging to the TSI environment and the http response.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsInstances.GetAsync(System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesInstance&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.IoT.TimeSeriesInsights.TimeSeriesInstance&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsInstances.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of TimeSeriesInstance)" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesInstance&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesInstance&gt;" Usage="timeSeriesInsightsInstances.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.TimeSeriesInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets Time Series instances in pages asynchronously.
            </summary>
        <returns>The pageable list <see cref="T:Azure.AsyncPageable`1" /> of Time Series instances belonging to the TSI environment and the http response.</returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/main/sdk/timeseriesinsights/Azure.IoT.TimeSeriesInsights/samples">our repo samples</see>.
            </remarks>
        <example>
          <code snippet="Snippet:TimeSeriesInsightsGetAllInstances" language="csharp">
            // Get all instances for the Time Series Insights environment
            AsyncPageable&lt;TimeSeriesInstance&gt; tsiInstances = instancesClient.GetAsync();
            await foreach (TimeSeriesInstance tsiInstance in tsiInstances)
            {
                Console.WriteLine($"Retrieved Time Series Insights instance with Id '{tsiInstance.TimeSeriesId}' and name '{tsiInstance.Name}'.");
            }
            </code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="GetById">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.TimeSeriesInsights.InstancesOperationResult[]&gt; GetById (System.Collections.Generic.IEnumerable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesId&gt; timeSeriesIds, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.TimeSeriesInsights.InstancesOperationResult[]&gt; GetById(class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.IoT.TimeSeriesInsights.TimeSeriesId&gt; timeSeriesIds, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsInstances.GetById(System.Collections.Generic.IEnumerable{Azure.IoT.TimeSeriesInsights.TimeSeriesId},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetById (timeSeriesIds As IEnumerable(Of TimeSeriesId), Optional cancellationToken As CancellationToken = Nothing) As Response(Of InstancesOperationResult())" />
      <MemberSignature Language="F#" Value="abstract member GetById : seq&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesId&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.TimeSeriesInsights.InstancesOperationResult[]&gt;&#xA;override this.GetById : seq&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesId&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.TimeSeriesInsights.InstancesOperationResult[]&gt;" Usage="timeSeriesInsightsInstances.GetById (timeSeriesIds, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.TimeSeriesInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.TimeSeriesInsights.InstancesOperationResult[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSeriesIds" Type="System.Collections.Generic.IEnumerable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesId&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeSeriesIds">List of Ids of the Time Series instances to return.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets Time Series instances by Time Series Ids synchronously.
            </summary>
        <returns>
            List of instance or error objects corresponding by position to the array in the request. Instance object is set when operation is successful
            and error object is set when operation is unsuccessful.
            </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsInstances.GetByIdAsync(System.Collections.Generic.IEnumerable{Azure.IoT.TimeSeriesInsights.TimeSeriesId},System.Threading.CancellationToken)" />
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="timeSeriesIds" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
            The exception is thrown when <paramref name="timeSeriesIds" /> is empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetByIdAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.InstancesOperationResult[]&gt;&gt; GetByIdAsync (System.Collections.Generic.IEnumerable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesId&gt; timeSeriesIds, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.TimeSeriesInsights.InstancesOperationResult[]&gt;&gt; GetByIdAsync(class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.IoT.TimeSeriesInsights.TimeSeriesId&gt; timeSeriesIds, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsInstances.GetByIdAsync(System.Collections.Generic.IEnumerable{Azure.IoT.TimeSeriesInsights.TimeSeriesId},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByIdAsync (timeSeriesIds As IEnumerable(Of TimeSeriesId), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of InstancesOperationResult()))" />
      <MemberSignature Language="F#" Value="abstract member GetByIdAsync : seq&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesId&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.InstancesOperationResult[]&gt;&gt;&#xA;override this.GetByIdAsync : seq&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesId&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.InstancesOperationResult[]&gt;&gt;" Usage="timeSeriesInsightsInstances.GetByIdAsync (timeSeriesIds, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.TimeSeriesInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.InstancesOperationResult[]&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSeriesIds" Type="System.Collections.Generic.IEnumerable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesId&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeSeriesIds">List of Ids of the Time Series instances to return.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
             Gets Time Series instances by Time Series Ids asynchronously.
             </summary>
        <returns>
             List of instance or error objects corresponding by position to the array in the request. Instance object is set when operation is successful
             and error object is set when operation is unsuccessful.
             </returns>
        <remarks>
             For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/main/sdk/timeseriesinsights/Azure.IoT.TimeSeriesInsights/samples">our repo samples</see>.
             </remarks>
        <example>
          <code snippet="Snippet:TimeSeriesInsightsGetnstancesById" language="csharp">
             // Get Time Series Insights instances by Id
             // tsId is created above using `TimeSeriesIdHelper.CreateTimeSeriesId`.
             var timeSeriesIds = new List&lt;TimeSeriesId&gt;
             {
                 tsId,
             };
            
             Response&lt;InstancesOperationResult[]&gt; getByIdsResult = await instancesClient.GetByIdAsync(timeSeriesIds);
            
             // The response of calling the API contains a list of instance or error objects corresponding by position to the array in the request.
             // Instance object is set when operation is successful and error object is set when operation is unsuccessful.
             for (int i = 0; i &lt; getByIdsResult.Value.Length; i++)
             {
                 InstancesOperationResult currentOperationResult = getByIdsResult.Value[i];
            
                 if (currentOperationResult.Instance != null)
                 {
                     Console.WriteLine($"Retrieved Time Series Insights instance with Id '{currentOperationResult.Instance.TimeSeriesId}' and name '{currentOperationResult.Instance.Name}'.");
                 }
                 else if (currentOperationResult.Error != null)
                 {
                     Console.WriteLine($"Failed to retrieve a Time Series Insights instance with Id '{timeSeriesIds[i]}'. Error message: '{currentOperationResult.Error.Message}'.");
                 }
             }
             </code>
        </example>
        <exception cref="T:System.ArgumentNullException">
             The exception is thrown when <paramref name="timeSeriesIds" /> is <c>null</c>.
             </exception>
        <exception cref="T:System.ArgumentException">
             The exception is thrown when <paramref name="timeSeriesIds" /> is empty.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="GetByName">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.TimeSeriesInsights.InstancesOperationResult[]&gt; GetByName (System.Collections.Generic.IEnumerable&lt;string&gt; timeSeriesNames, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.TimeSeriesInsights.InstancesOperationResult[]&gt; GetByName(class System.Collections.Generic.IEnumerable`1&lt;string&gt; timeSeriesNames, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsInstances.GetByName(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByName (timeSeriesNames As IEnumerable(Of String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of InstancesOperationResult())" />
      <MemberSignature Language="F#" Value="abstract member GetByName : seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.TimeSeriesInsights.InstancesOperationResult[]&gt;&#xA;override this.GetByName : seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.TimeSeriesInsights.InstancesOperationResult[]&gt;" Usage="timeSeriesInsightsInstances.GetByName (timeSeriesNames, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.TimeSeriesInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.TimeSeriesInsights.InstancesOperationResult[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSeriesNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeSeriesNames">List of names of the Time Series instance to return.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets Time Series instances by instance names synchronously.
            </summary>
        <returns>
            List of instance or error objects corresponding by position to the array in the request. Instance object is set when operation is successful
            and error object is set when operation is unsuccessful.
            </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsInstances.GetByNameAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="timeSeriesNames" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
            The exception is thrown when <paramref name="timeSeriesNames" /> is empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetByNameAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.InstancesOperationResult[]&gt;&gt; GetByNameAsync (System.Collections.Generic.IEnumerable&lt;string&gt; timeSeriesNames, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.TimeSeriesInsights.InstancesOperationResult[]&gt;&gt; GetByNameAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; timeSeriesNames, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsInstances.GetByNameAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByNameAsync (timeSeriesNames As IEnumerable(Of String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of InstancesOperationResult()))" />
      <MemberSignature Language="F#" Value="abstract member GetByNameAsync : seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.InstancesOperationResult[]&gt;&gt;&#xA;override this.GetByNameAsync : seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.InstancesOperationResult[]&gt;&gt;" Usage="timeSeriesInsightsInstances.GetByNameAsync (timeSeriesNames, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.TimeSeriesInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.InstancesOperationResult[]&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSeriesNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeSeriesNames">List of names of the Time Series instance to return.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets Time Series instances by instance names asynchronously.
            </summary>
        <returns>
            List of instance or error objects corresponding by position to the array in the request. Instance object is set when operation is successful
            and error object is set when operation is unsuccessful.
            </returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/main/sdk/timeseriesinsights/Azure.IoT.TimeSeriesInsights/samples">our repo samples</see>.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="timeSeriesNames" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
            The exception is thrown when <paramref name="timeSeriesNames" /> is empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.TimeSeriesInsights.InstancesOperationResult[]&gt; Replace (System.Collections.Generic.IEnumerable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesInstance&gt; timeSeriesInstances, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.TimeSeriesInsights.InstancesOperationResult[]&gt; Replace(class System.Collections.Generic.IEnumerable`1&lt;class Azure.IoT.TimeSeriesInsights.TimeSeriesInstance&gt; timeSeriesInstances, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsInstances.Replace(System.Collections.Generic.IEnumerable{Azure.IoT.TimeSeriesInsights.TimeSeriesInstance},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Replace (timeSeriesInstances As IEnumerable(Of TimeSeriesInstance), Optional cancellationToken As CancellationToken = Nothing) As Response(Of InstancesOperationResult())" />
      <MemberSignature Language="F#" Value="abstract member Replace : seq&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesInstance&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.TimeSeriesInsights.InstancesOperationResult[]&gt;&#xA;override this.Replace : seq&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesInstance&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.TimeSeriesInsights.InstancesOperationResult[]&gt;" Usage="timeSeriesInsightsInstances.Replace (timeSeriesInstances, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.TimeSeriesInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.TimeSeriesInsights.InstancesOperationResult[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSeriesInstances" Type="System.Collections.Generic.IEnumerable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesInstance&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeSeriesInstances">The Time Series instances to be replaced.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Replaces Time Series instances synchronously.
            </summary>
        <returns>
            List of objects corresponding by position to the <paramref name="timeSeriesInstances" /> array in the request. Instance object
            is set when operation is successful and error object is set when operation is unsuccessful.
            </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsInstances.ReplaceAsync(System.Collections.Generic.IEnumerable{Azure.IoT.TimeSeriesInsights.TimeSeriesInstance},System.Threading.CancellationToken)" />
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="timeSeriesInstances" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
            The exception is thrown when <paramref name="timeSeriesInstances" /> is empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ReplaceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.InstancesOperationResult[]&gt;&gt; ReplaceAsync (System.Collections.Generic.IEnumerable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesInstance&gt; timeSeriesInstances, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.TimeSeriesInsights.InstancesOperationResult[]&gt;&gt; ReplaceAsync(class System.Collections.Generic.IEnumerable`1&lt;class Azure.IoT.TimeSeriesInsights.TimeSeriesInstance&gt; timeSeriesInstances, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsInstances.ReplaceAsync(System.Collections.Generic.IEnumerable{Azure.IoT.TimeSeriesInsights.TimeSeriesInstance},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReplaceAsync (timeSeriesInstances As IEnumerable(Of TimeSeriesInstance), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of InstancesOperationResult()))" />
      <MemberSignature Language="F#" Value="abstract member ReplaceAsync : seq&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesInstance&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.InstancesOperationResult[]&gt;&gt;&#xA;override this.ReplaceAsync : seq&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesInstance&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.InstancesOperationResult[]&gt;&gt;" Usage="timeSeriesInsightsInstances.ReplaceAsync (timeSeriesInstances, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.TimeSeriesInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.InstancesOperationResult[]&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSeriesInstances" Type="System.Collections.Generic.IEnumerable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesInstance&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeSeriesInstances">The Time Series instances to replaced.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
             Replaces Time Series instances asynchronously.
             </summary>
        <returns>
             List of objects corresponding by position to the <paramref name="timeSeriesInstances" /> array in the request. Instance object
             is set when operation is successful and error object is set when operation is unsuccessful.
             </returns>
        <remarks>
             For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/main/sdk/timeseriesinsights/Azure.IoT.TimeSeriesInsights/samples">our repo samples</see>.
             </remarks>
        <example>
          <code snippet="Snippet:TimeSeriesInsightsReplaceInstance" language="csharp">
             // Get Time Series Insights instances by Id
             // tsId is created above using `TimeSeriesIdHelper.CreateTimeSeriesId`.
             var instanceIdsToGet = new List&lt;TimeSeriesId&gt;
             {
                 tsId,
             };
            
             Response&lt;InstancesOperationResult[]&gt; getInstancesByIdResult = await instancesClient.GetByIdAsync(instanceIdsToGet);
            
             TimeSeriesInstance instanceResult = getInstancesByIdResult.Value[0].Instance;
             Console.WriteLine($"Retrieved Time Series Insights instance with Id '{instanceResult.TimeSeriesId}' and name '{instanceResult.Name}'.");
            
             // Now let's replace the instance with an updated name
             instanceResult.Name = "newInstanceName";
            
             var instancesToReplace = new List&lt;TimeSeriesInstance&gt;
             {
                 instanceResult,
             };
            
             Response&lt;InstancesOperationResult[]&gt; replaceInstancesResult = await instancesClient.ReplaceAsync(instancesToReplace);
            
             // The response of calling the API contains a list of error objects corresponding by position to the input parameter.
             // array in the request. If the error object is set to null, this means the operation was a success.
             for (int i = 0; i &lt; replaceInstancesResult.Value.Length; i++)
             {
                 TimeSeriesId tsiId = instancesToReplace[i].TimeSeriesId;
            
                 TimeSeriesOperationError currentError = replaceInstancesResult.Value[i].Error;
            
                 if (currentError != null)
                 {
                     Console.WriteLine($"Failed to replace Time Series Insights instance with Id '{tsiId}'," +
                         $" Error Message: '{currentError.Message}', Error code: '{currentError.Code}'.");
                 }
                 else
                 {
                     Console.WriteLine($"Replaced Time Series Insights instance with Id '{tsiId}'.");
                 }
             }
             </code>
        </example>
        <exception cref="T:System.ArgumentNullException">
             The exception is thrown when <paramref name="timeSeriesInstances" /> is <c>null</c>.
             </exception>
        <exception cref="T:System.ArgumentException">
             The exception is thrown when <paramref name="timeSeriesInstances" /> is empty.
             </exception>
      </Docs>
    </Member>
  </Members>
</Type>
