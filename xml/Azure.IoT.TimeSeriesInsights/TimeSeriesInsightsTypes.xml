<Type Name="TimeSeriesInsightsTypes" FullName="Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsTypes">
  <TypeSignature Language="C#" Value="public class TimeSeriesInsightsTypes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TimeSeriesInsightsTypes extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsTypes" />
  <TypeSignature Language="VB.NET" Value="Public Class TimeSeriesInsightsTypes" />
  <TypeSignature Language="F#" Value="type TimeSeriesInsightsTypes = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.IoT.TimeSeriesInsights</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Types client that can be used to perform operations such as creating, listing, replacing and deleting Time Series types.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TimeSeriesInsightsTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsTypes.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.TimeSeriesInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of TimeSeriesInsightsTypes. This constructor should only be used for mocking purposes.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrReplace">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesTypeOperationResult[]&gt; CreateOrReplace (System.Collections.Generic.IEnumerable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesType&gt; timeSeriesTypes, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.TimeSeriesInsights.TimeSeriesTypeOperationResult[]&gt; CreateOrReplace(class System.Collections.Generic.IEnumerable`1&lt;class Azure.IoT.TimeSeriesInsights.TimeSeriesType&gt; timeSeriesTypes, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsTypes.CreateOrReplace(System.Collections.Generic.IEnumerable{Azure.IoT.TimeSeriesInsights.TimeSeriesType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrReplace (timeSeriesTypes As IEnumerable(Of TimeSeriesType), Optional cancellationToken As CancellationToken = Nothing) As Response(Of TimeSeriesTypeOperationResult())" />
      <MemberSignature Language="F#" Value="abstract member CreateOrReplace : seq&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesType&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesTypeOperationResult[]&gt;&#xA;override this.CreateOrReplace : seq&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesType&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesTypeOperationResult[]&gt;" Usage="timeSeriesInsightsTypes.CreateOrReplace (timeSeriesTypes, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.TimeSeriesInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesTypeOperationResult[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSeriesTypes" Type="System.Collections.Generic.IEnumerable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeSeriesTypes">The Time Series Insights types to be created or replaced.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Creates Time Series Insights types synchronously. If a provided type is already in use, then this will attempt to replace the existing type with the provided Time Series type.
            </summary>
        <returns>
            List of types or error objects corresponding by position to the <paramref name="timeSeriesTypes" /> array in the request.
            Type object is set when operation is successful and error object is set when operation is unsuccessful.
            </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsTypes.CreateOrReplaceAsync(System.Collections.Generic.IEnumerable{Azure.IoT.TimeSeriesInsights.TimeSeriesType},System.Threading.CancellationToken)" />
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="timeSeriesTypes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
            The exception is thrown when <paramref name="timeSeriesTypes" /> is empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrReplaceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesTypeOperationResult[]&gt;&gt; CreateOrReplaceAsync (System.Collections.Generic.IEnumerable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesType&gt; timeSeriesTypes, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.TimeSeriesInsights.TimeSeriesTypeOperationResult[]&gt;&gt; CreateOrReplaceAsync(class System.Collections.Generic.IEnumerable`1&lt;class Azure.IoT.TimeSeriesInsights.TimeSeriesType&gt; timeSeriesTypes, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsTypes.CreateOrReplaceAsync(System.Collections.Generic.IEnumerable{Azure.IoT.TimeSeriesInsights.TimeSeriesType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrReplaceAsync (timeSeriesTypes As IEnumerable(Of TimeSeriesType), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TimeSeriesTypeOperationResult()))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrReplaceAsync : seq&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesType&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesTypeOperationResult[]&gt;&gt;&#xA;override this.CreateOrReplaceAsync : seq&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesType&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesTypeOperationResult[]&gt;&gt;" Usage="timeSeriesInsightsTypes.CreateOrReplaceAsync (timeSeriesTypes, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.TimeSeriesInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesTypeOperationResult[]&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSeriesTypes" Type="System.Collections.Generic.IEnumerable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeSeriesTypes">The Time Series Insights types to be created or replaced.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
             Creates Time Series Insights types asynchronously. If a provided type is already in use, then this will attempt to replace the existing type with the provided Time Series type.
             </summary>
        <returns>
             List of error objects corresponding by position to the <paramref name="timeSeriesTypes" /> array in the request.
             An error object will be set when operation is unsuccessful.
             </returns>
        <remarks>
             For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/main/sdk/timeseriesinsights/Azure.IoT.TimeSeriesInsights/samples">our repo samples</see>.
             </remarks>
        <exception cref="T:System.ArgumentNullException">
             The exception is thrown when <paramref name="timeSeriesTypes" /> is <c>null</c>.
             </exception>
        <exception cref="T:System.ArgumentException">
             The exception is thrown when <paramref name="timeSeriesTypes" /> is empty.
             </exception>
        <example>
          <code snippet="Snippet:TimeSeriesInsightsSampleCreateType" language="csharp">
             TimeSeriesInsightsTypes typesClient = client.GetTypesClient();
            
             // Create a type with an aggregate variable
             var timeSeriesTypes = new List&lt;TimeSeriesType&gt;();
            
             var countExpression = new TimeSeriesExpression("count()");
             var aggregateVariable = new AggregateVariable(countExpression);
             var variables = new Dictionary&lt;string, TimeSeriesVariable&gt;();
             variables.Add("aggregateVariable", aggregateVariable);
            
             timeSeriesTypes.Add(new TimeSeriesType("Type1", variables) { Id = "Type1Id" });
             timeSeriesTypes.Add(new TimeSeriesType("Type2", variables) { Id = "Type2Id" });
            
             Response&lt;TimeSeriesTypeOperationResult[]&gt; createTypesResult = await typesClient
                 .CreateOrReplaceAsync(timeSeriesTypes);
            
             // The response of calling the API contains a list of error objects corresponding by position to the input parameter array in the request.
             // If the error object is set to null, this means the operation was a success.
             for (int i = 0; i &lt; createTypesResult.Value.Length; i++)
             {
                 if (createTypesResult.Value[i].Error == null)
                 {
                     Console.WriteLine($"Created Time Series type successfully.");
                 }
                 else
                 {
                     Console.WriteLine($"Failed to create a Time Series Insights type: {createTypesResult.Value[i].Error.Message}.");
                 }
             }
             </code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="DeleteById">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt; DeleteById (System.Collections.Generic.IEnumerable&lt;string&gt; timeSeriesTypeIds, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt; DeleteById(class System.Collections.Generic.IEnumerable`1&lt;string&gt; timeSeriesTypeIds, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsTypes.DeleteById(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteById (timeSeriesTypeIds As IEnumerable(Of String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of TimeSeriesOperationError())" />
      <MemberSignature Language="F#" Value="abstract member DeleteById : seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;&#xA;override this.DeleteById : seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;" Usage="timeSeriesInsightsTypes.DeleteById (timeSeriesTypeIds, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.TimeSeriesInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSeriesTypeIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeSeriesTypeIds">List of Ids of the Time Series instances to delete.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Deletes Time Series instances from the environment by Time Series Ids synchronously.
            </summary>
        <returns>
            List of error objects corresponding by position to the input array in the request. null when the operation is successful.
            </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsTypes.DeleteByIdAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="timeSeriesTypeIds" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
            The exception is thrown when <paramref name="timeSeriesTypeIds" /> is empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteByIdAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;&gt; DeleteByIdAsync (System.Collections.Generic.IEnumerable&lt;string&gt; timeSeriesTypeIds, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;&gt; DeleteByIdAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; timeSeriesTypeIds, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsTypes.DeleteByIdAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteByIdAsync (timeSeriesTypeIds As IEnumerable(Of String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TimeSeriesOperationError()))" />
      <MemberSignature Language="F#" Value="abstract member DeleteByIdAsync : seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;&gt;&#xA;override this.DeleteByIdAsync : seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;&gt;" Usage="timeSeriesInsightsTypes.DeleteByIdAsync (timeSeriesTypeIds, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.TimeSeriesInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSeriesTypeIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeSeriesTypeIds">List of Time Series type Ids of the Time Series types to delete.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
             Deletes Time Series Insights types by type Ids asynchronously.
             </summary>
        <returns>
             List of error objects corresponding by position to the input array in the request. null when the operation is successful.
             </returns>
        <remarks>
             For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/main/sdk/timeseriesinsights/Azure.IoT.TimeSeriesInsights/samples">our repo samples</see>.
             </remarks>
        <exception cref="T:System.ArgumentNullException">
             The exception is thrown when <paramref name="timeSeriesTypeIds" /> is <c>null</c>.
             </exception>
        <exception cref="T:System.ArgumentException">
             The exception is thrown when <paramref name="timeSeriesTypeIds" /> is empty.
             </exception>
        <example>
          <code snippet="Snippet:TimeSeriesInsightsSampleDeleteTypeById" language="csharp">
             // Delete Time Series types with Ids
            
             var typesIdsToDelete = new List&lt;string&gt; { "Type1Id", " Type2Id" };
             Response&lt;TimeSeriesOperationError[]&gt; deleteTypesResponse = await typesClient
                 .DeleteByIdAsync(typesIdsToDelete);
            
             // The response of calling the API contains a list of error objects corresponding by position to the input parameter
             // array in the request. If the error object is set to null, this means the operation was a success.
             foreach (var result in deleteTypesResponse.Value)
             {
                 if (result != null)
                 {
                     Console.WriteLine($"Failed to delete a Time Series Insights type: {result.Message}.");
                 }
                 else
                 {
                     Console.WriteLine($"Deleted a Time Series Insights type successfully.");
                 }
             }
             </code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="DeleteByName">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt; DeleteByName (System.Collections.Generic.IEnumerable&lt;string&gt; timeSeriesTypeNames, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt; DeleteByName(class System.Collections.Generic.IEnumerable`1&lt;string&gt; timeSeriesTypeNames, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsTypes.DeleteByName(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteByName (timeSeriesTypeNames As IEnumerable(Of String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of TimeSeriesOperationError())" />
      <MemberSignature Language="F#" Value="abstract member DeleteByName : seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;&#xA;override this.DeleteByName : seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;" Usage="timeSeriesInsightsTypes.DeleteByName (timeSeriesTypeNames, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.TimeSeriesInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSeriesTypeNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeSeriesTypeNames">List of names of the Time Series types to delete.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Deletes Time Series Insights types by type names synchronously.
            </summary>
        <returns>
            List of error objects corresponding by position to the input array in the request. null when the operation is successful.
            </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsTypes.DeleteByNameAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="timeSeriesTypeNames" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
            The exception is thrown when <paramref name="timeSeriesTypeNames" /> is empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteByNameAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;&gt; DeleteByNameAsync (System.Collections.Generic.IEnumerable&lt;string&gt; timeSeriesTypeNames, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;&gt; DeleteByNameAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; timeSeriesTypeNames, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsTypes.DeleteByNameAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteByNameAsync (timeSeriesTypeNames As IEnumerable(Of String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TimeSeriesOperationError()))" />
      <MemberSignature Language="F#" Value="abstract member DeleteByNameAsync : seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;&gt;&#xA;override this.DeleteByNameAsync : seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;&gt;" Usage="timeSeriesInsightsTypes.DeleteByNameAsync (timeSeriesTypeNames, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.TimeSeriesInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesOperationError[]&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSeriesTypeNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeSeriesTypeNames">List of names of the Time Series types to delete.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Deletes Time Series Insights types by type names asynchronously.
            </summary>
        <returns>
            List of error objects corresponding by position to the input array in the request. null when the operation is successful.
            </returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/main/sdk/timeseriesinsights/Azure.IoT.TimeSeriesInsights/samples">our repo samples</see>.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="timeSeriesTypeNames" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
            The exception is thrown when <paramref name="timeSeriesTypeNames" /> is empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetById">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesTypeOperationResult[]&gt; GetById (System.Collections.Generic.IEnumerable&lt;string&gt; timeSeriesTypeIds, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.TimeSeriesInsights.TimeSeriesTypeOperationResult[]&gt; GetById(class System.Collections.Generic.IEnumerable`1&lt;string&gt; timeSeriesTypeIds, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsTypes.GetById(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetById (timeSeriesTypeIds As IEnumerable(Of String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of TimeSeriesTypeOperationResult())" />
      <MemberSignature Language="F#" Value="abstract member GetById : seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesTypeOperationResult[]&gt;&#xA;override this.GetById : seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesTypeOperationResult[]&gt;" Usage="timeSeriesInsightsTypes.GetById (timeSeriesTypeIds, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.TimeSeriesInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesTypeOperationResult[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSeriesTypeIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeSeriesTypeIds">List of Time Series type Ids of the Time Series types to return.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets Time Series Insights types by type Ids synchronously.
            </summary>
        <returns>
            List of type or error objects corresponding by position to the array in the request.
            Type object is set when operation is successful and error object is set when operation is unsuccessful.
            </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsTypes.GetByIdAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="timeSeriesTypeIds" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
            The exception is thrown when <paramref name="timeSeriesTypeIds" /> is empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetByIdAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesTypeOperationResult[]&gt;&gt; GetByIdAsync (System.Collections.Generic.IEnumerable&lt;string&gt; timeSeriesTypeIds, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.TimeSeriesInsights.TimeSeriesTypeOperationResult[]&gt;&gt; GetByIdAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; timeSeriesTypeIds, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsTypes.GetByIdAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByIdAsync (timeSeriesTypeIds As IEnumerable(Of String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TimeSeriesTypeOperationResult()))" />
      <MemberSignature Language="F#" Value="abstract member GetByIdAsync : seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesTypeOperationResult[]&gt;&gt;&#xA;override this.GetByIdAsync : seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesTypeOperationResult[]&gt;&gt;" Usage="timeSeriesInsightsTypes.GetByIdAsync (timeSeriesTypeIds, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.TimeSeriesInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesTypeOperationResult[]&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSeriesTypeIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeSeriesTypeIds">List of Time Series type Ids of the Time Series types to return.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
             Gets Time Series Insights types by type Ids asynchronously.
             </summary>
        <returns>
             List of type or error objects corresponding by position to the array in the request.
             Type object is set when operation is successful and error object is set when operation is unsuccessful.
             </returns>
        <remarks>
             For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/main/sdk/timeseriesinsights/Azure.IoT.TimeSeriesInsights/samples">our repo samples</see>.
             </remarks>
        <exception cref="T:System.ArgumentNullException">
             The exception is thrown when <paramref name="timeSeriesTypeIds" /> is <c>null</c>.
             </exception>
        <exception cref="T:System.ArgumentException">
             The exception is thrown when <paramref name="timeSeriesTypeIds" /> is empty.
             </exception>
        <example>
          <code snippet="Snippet:TimeSeriesInsightsSampleGetTypeById" language="csharp">
             // Code snippet below shows getting a default Type using Id
             // The default type Id can be obtained programmatically by using the ModelSettings client.
            
             TimeSeriesInsightsModelSettings modelSettingsClient = client.GetModelSettingsClient();
             TimeSeriesModelSettings modelSettings = await modelSettingsClient.GetAsync();
             Response&lt;TimeSeriesTypeOperationResult[]&gt; getTypeByIdResults = await typesClient
                 .GetByIdAsync(new string[] { modelSettings.DefaultTypeId });
            
             // The response of calling the API contains a list of type or error objects corresponding by position to the input parameter array in the request.
             // If the error object is set to null, this means the operation was a success.
             for (int i = 0; i &lt; getTypeByIdResults.Value.Length; i++)
             {
                 if (getTypeByIdResults.Value[i].Error == null)
                 {
                     Console.WriteLine($"Retrieved Time Series type with Id: '{getTypeByIdResults.Value[i].TimeSeriesType.Id}'.");
                 }
                 else
                 {
                     Console.WriteLine($"Failed to retrieve a Time Series type due to '{getTypeByIdResults.Value[i].Error.Message}'.");
                 }
             }
             </code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="GetByName">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesTypeOperationResult[]&gt; GetByName (System.Collections.Generic.IEnumerable&lt;string&gt; timeSeriesTypeNames, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.IoT.TimeSeriesInsights.TimeSeriesTypeOperationResult[]&gt; GetByName(class System.Collections.Generic.IEnumerable`1&lt;string&gt; timeSeriesTypeNames, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsTypes.GetByName(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByName (timeSeriesTypeNames As IEnumerable(Of String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of TimeSeriesTypeOperationResult())" />
      <MemberSignature Language="F#" Value="abstract member GetByName : seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesTypeOperationResult[]&gt;&#xA;override this.GetByName : seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesTypeOperationResult[]&gt;" Usage="timeSeriesInsightsTypes.GetByName (timeSeriesTypeNames, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.TimeSeriesInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesTypeOperationResult[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSeriesTypeNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeSeriesTypeNames">List of names of the Time Series types to return.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets Time Series Insights types by type names synchronously.
            </summary>
        <returns>
            List of type or error objects corresponding by position to the array in the request.
            Type object is set when operation is successful and error object is set when operation is unsuccessful.
            </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsTypes.GetByNameAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="timeSeriesTypeNames" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
            The exception is thrown when <paramref name="timeSeriesTypeNames" /> is empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetByNameAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesTypeOperationResult[]&gt;&gt; GetByNameAsync (System.Collections.Generic.IEnumerable&lt;string&gt; timeSeriesTypeNames, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.IoT.TimeSeriesInsights.TimeSeriesTypeOperationResult[]&gt;&gt; GetByNameAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; timeSeriesTypeNames, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsTypes.GetByNameAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByNameAsync (timeSeriesTypeNames As IEnumerable(Of String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TimeSeriesTypeOperationResult()))" />
      <MemberSignature Language="F#" Value="abstract member GetByNameAsync : seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesTypeOperationResult[]&gt;&gt;&#xA;override this.GetByNameAsync : seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesTypeOperationResult[]&gt;&gt;" Usage="timeSeriesInsightsTypes.GetByNameAsync (timeSeriesTypeNames, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.TimeSeriesInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesTypeOperationResult[]&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSeriesTypeNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeSeriesTypeNames">List of names of the Time Series types to return.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets Time Series Insights types by type names asynchronously.
            </summary>
        <returns>
            List of type or error objects corresponding by position to the array in the request.
            Type object is set when operation is successful and error object is set when operation is unsuccessful.
            </returns>
        <remarks>
            For more samples, see <see href="https://github.com/Azure/azure-sdk-for-net/tree/main/sdk/timeseriesinsights/Azure.IoT.TimeSeriesInsights/samples">our repo samples</see>.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
            The exception is thrown when <paramref name="timeSeriesTypeNames" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
            The exception is thrown when <paramref name="timeSeriesTypeNames" /> is empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypes">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesType&gt; GetTypes (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.IoT.TimeSeriesInsights.TimeSeriesType&gt; GetTypes(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsTypes.GetTypes(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypes (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of TimeSeriesType)" />
      <MemberSignature Language="F#" Value="abstract member GetTypes : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesType&gt;&#xA;override this.GetTypes : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesType&gt;" Usage="timeSeriesInsightsTypes.GetTypes cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.TimeSeriesInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets Time Series Insights types in pages synchronously.
            </summary>
        <returns>The pageable list <see cref="T:Azure.Pageable`1" /> of Time Series types with the http response.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsTypes.GetTypesAsync(System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesType&gt; GetTypesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.IoT.TimeSeriesInsights.TimeSeriesType&gt; GetTypesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.IoT.TimeSeriesInsights.TimeSeriesInsightsTypes.GetTypesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of TimeSeriesType)" />
      <MemberSignature Language="F#" Value="abstract member GetTypesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesType&gt;&#xA;override this.GetTypesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesType&gt;" Usage="timeSeriesInsightsTypes.GetTypesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.IoT.TimeSeriesInsights</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.IoT.TimeSeriesInsights.TimeSeriesType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
             Gets Time Series Insights types in pages asynchronously.
             </summary>
        <returns>The pageable list <see cref="T:Azure.AsyncPageable`1" /> of Time Series types with the http response.</returns>
        <remarks>To be added.</remarks>
        <example>
          <code snippet="Snippet:TimeSeriesInsightsSampleGetAllTypes" language="csharp">
             // Get all Time Series types in the environment
             AsyncPageable&lt;TimeSeriesType&gt; getAllTypesResponse = typesClient.GetTypesAsync();
            
             await foreach (TimeSeriesType tsiType in getAllTypesResponse)
             {
                 Console.WriteLine($"Retrieved Time Series Insights type with Id: '{tsiType?.Id}' and Name: '{tsiType?.Name}'");
             }
             </code>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>
