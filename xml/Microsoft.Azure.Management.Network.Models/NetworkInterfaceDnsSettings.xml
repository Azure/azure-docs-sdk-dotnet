<Type Name="NetworkInterfaceDnsSettings" FullName="Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings">
  <TypeSignature Language="C#" Value="public class NetworkInterfaceDnsSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NetworkInterfaceDnsSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings" />
  <TypeSignature Language="VB.NET" Value="Public Class NetworkInterfaceDnsSettings" />
  <TypeSignature Language="F#" Value="type NetworkInterfaceDnsSettings = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Network</AssemblyName>
    <AssemblyVersion>20.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            DNS settings of a network interface.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkInterfaceDnsSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network</AssemblyName>
        <AssemblyVersion>20.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the NetworkInterfaceDnsSettings
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkInterfaceDnsSettings (System.Collections.Generic.IList&lt;string&gt; dnsServers = default, System.Collections.Generic.IList&lt;string&gt; appliedDnsServers = default, string internalDnsNameLabel = default, string internalFqdn = default, string internalDomainNameSuffix = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;string&gt; dnsServers, class System.Collections.Generic.IList`1&lt;string&gt; appliedDnsServers, string internalDnsNameLabel, string internalFqdn, string internalDomainNameSuffix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional dnsServers As IList(Of String) = Nothing, Optional appliedDnsServers As IList(Of String) = Nothing, Optional internalDnsNameLabel As String = Nothing, Optional internalFqdn As String = Nothing, Optional internalDomainNameSuffix As String = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings : System.Collections.Generic.IList&lt;string&gt; * System.Collections.Generic.IList&lt;string&gt; * string * string * string -&gt; Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings" Usage="new Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings (dnsServers, appliedDnsServers, internalDnsNameLabel, internalFqdn, internalDomainNameSuffix)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network</AssemblyName>
        <AssemblyVersion>20.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dnsServers" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="appliedDnsServers" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="internalDnsNameLabel" Type="System.String" />
        <Parameter Name="internalFqdn" Type="System.String" />
        <Parameter Name="internalDomainNameSuffix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dnsServers">List of DNS servers IP addresses. Use
            'AzureProvidedDNS' to switch to azure provided DNS resolution.
            'AzureProvidedDNS' value cannot be combined with other IPs, it must
            be the only value in dnsServers collection.</param>
        <param name="appliedDnsServers">If the VM that uses this NIC is
            part of an Availability Set, then this list will have the union of
            all DNS servers from all NICs that are part of the Availability
            Set. This property is what is configured on each of those
            VMs.</param>
        <param name="internalDnsNameLabel">Relative DNS name for this NIC
            used for internal communications between VMs in the same virtual
            network.</param>
        <param name="internalFqdn">Fully qualified DNS name supporting
            internal communications between VMs in the same virtual
            network.</param>
        <param name="internalDomainNameSuffix">Even if internalDnsNameLabel
            is not specified, a DNS entry is created for the primary NIC of the
            VM. This DNS name can be constructed by concatenating the VM name
            with the value of internalDomainNameSuffix.</param>
        <summary>
            Initializes a new instance of the NetworkInterfaceDnsSettings
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppliedDnsServers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; AppliedDnsServers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; AppliedDnsServers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.AppliedDnsServers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppliedDnsServers As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.AppliedDnsServers : System.Collections.Generic.IList&lt;string&gt;" Usage="Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.AppliedDnsServers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network</AssemblyName>
        <AssemblyVersion>20.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="appliedDnsServers")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="appliedDnsServers")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets if the VM that uses this NIC is part of an Availability Set,
            then this list will have the union of all DNS servers from all NICs
            that are part of the Availability Set. This property is what is
            configured on each of those VMs.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DnsServers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; DnsServers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; DnsServers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.DnsServers" />
      <MemberSignature Language="VB.NET" Value="Public Property DnsServers As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.DnsServers : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.DnsServers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network</AssemblyName>
        <AssemblyVersion>20.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="dnsServers")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="dnsServers")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets list of DNS servers IP addresses. Use
            'AzureProvidedDNS' to switch to azure provided DNS resolution.
            'AzureProvidedDNS' value cannot be combined with other IPs, it must
            be the only value in dnsServers collection.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalDnsNameLabel">
      <MemberSignature Language="C#" Value="public string InternalDnsNameLabel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InternalDnsNameLabel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalDnsNameLabel" />
      <MemberSignature Language="VB.NET" Value="Public Property InternalDnsNameLabel As String" />
      <MemberSignature Language="F#" Value="member this.InternalDnsNameLabel : string with get, set" Usage="Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalDnsNameLabel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network</AssemblyName>
        <AssemblyVersion>20.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="internalDnsNameLabel")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="internalDnsNameLabel")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets relative DNS name for this NIC used for internal
            communications between VMs in the same virtual network.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalDomainNameSuffix">
      <MemberSignature Language="C#" Value="public string InternalDomainNameSuffix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InternalDomainNameSuffix" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalDomainNameSuffix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InternalDomainNameSuffix As String" />
      <MemberSignature Language="F#" Value="member this.InternalDomainNameSuffix : string" Usage="Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalDomainNameSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network</AssemblyName>
        <AssemblyVersion>20.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="internalDomainNameSuffix")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="internalDomainNameSuffix")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets even if internalDnsNameLabel is not specified, a DNS entry is
            created for the primary NIC of the VM. This DNS name can be
            constructed by concatenating the VM name with the value of
            internalDomainNameSuffix.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalFqdn">
      <MemberSignature Language="C#" Value="public string InternalFqdn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InternalFqdn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalFqdn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InternalFqdn As String" />
      <MemberSignature Language="F#" Value="member this.InternalFqdn : string" Usage="Microsoft.Azure.Management.Network.Models.NetworkInterfaceDnsSettings.InternalFqdn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network</AssemblyName>
        <AssemblyVersion>20.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="internalFqdn")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="internalFqdn")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets fully qualified DNS name supporting internal communications
            between VMs in the same virtual network.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
