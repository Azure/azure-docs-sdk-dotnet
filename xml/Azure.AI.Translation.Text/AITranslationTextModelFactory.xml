<Type Name="AITranslationTextModelFactory" FullName="Azure.AI.Translation.Text.AITranslationTextModelFactory">
  <TypeSignature Language="C#" Value="public static class AITranslationTextModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AITranslationTextModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.Translation.Text.AITranslationTextModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class AITranslationTextModelFactory" />
  <TypeSignature Language="F#" Value="type AITranslationTextModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.Translation.Text</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BackTranslation">
      <MemberSignature Language="C#" Value="public static Azure.AI.Translation.Text.BackTranslation BackTranslation (string normalizedText = default, string displayText = default, int examplesCount = 0, int frequencyCount = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Translation.Text.BackTranslation BackTranslation(string normalizedText, string displayText, int32 examplesCount, int32 frequencyCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.BackTranslation(System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BackTranslation (Optional normalizedText As String = Nothing, Optional displayText As String = Nothing, Optional examplesCount As Integer = 0, Optional frequencyCount As Integer = 0) As BackTranslation" />
      <MemberSignature Language="F#" Value="static member BackTranslation : string * string * int * int -&gt; Azure.AI.Translation.Text.BackTranslation" Usage="Azure.AI.Translation.Text.AITranslationTextModelFactory.BackTranslation (normalizedText, displayText, examplesCount, frequencyCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Translation.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Translation.Text.BackTranslation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizedText" Type="System.String" />
        <Parameter Name="displayText" Type="System.String" />
        <Parameter Name="examplesCount" Type="System.Int32" />
        <Parameter Name="frequencyCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="normalizedText">
            A string giving the normalized form of the source term that is a back-translation of the target.
            This value should be used as input to lookup examples.
            </param>
        <param name="displayText">
            A string giving the source term that is a back-translation of the target in a form best
            suited for end-user display.
            </param>
        <param name="examplesCount">
            An integer representing the number of examples that are available for this translation pair.
            Actual examples must be retrieved with a separate call to lookup examples. The number is mostly
            intended to facilitate display in a UX. For example, a user interface may add a hyperlink
            to the back-translation if the number of examples is greater than zero and show the back-translation
            as plain text if there are no examples. Note that the actual number of examples returned
            by a call to lookup examples may be less than numExamples, because additional filtering may be
            applied on the fly to remove "bad" examples.
            </param>
        <param name="frequencyCount">
            An integer representing the frequency of this translation pair in the data. The main purpose of this
            field is to provide a user interface with a means to sort back-translations so the most frequent terms are first.
            </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.BackTranslation" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Translation.Text.BackTranslation" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakSentenceItem">
      <MemberSignature Language="C#" Value="public static Azure.AI.Translation.Text.BreakSentenceItem BreakSentenceItem (Azure.AI.Translation.Text.DetectedLanguage detectedLanguage = default, System.Collections.Generic.IEnumerable&lt;int&gt; sentencesLengths = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Translation.Text.BreakSentenceItem BreakSentenceItem(class Azure.AI.Translation.Text.DetectedLanguage detectedLanguage, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; sentencesLengths) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.BreakSentenceItem(Azure.AI.Translation.Text.DetectedLanguage,System.Collections.Generic.IEnumerable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BreakSentenceItem (Optional detectedLanguage As DetectedLanguage = Nothing, Optional sentencesLengths As IEnumerable(Of Integer) = Nothing) As BreakSentenceItem" />
      <MemberSignature Language="F#" Value="static member BreakSentenceItem : Azure.AI.Translation.Text.DetectedLanguage * seq&lt;int&gt; -&gt; Azure.AI.Translation.Text.BreakSentenceItem" Usage="Azure.AI.Translation.Text.AITranslationTextModelFactory.BreakSentenceItem (detectedLanguage, sentencesLengths)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Translation.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Translation.Text.BreakSentenceItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="detectedLanguage" Type="Azure.AI.Translation.Text.DetectedLanguage" />
        <Parameter Name="sentencesLengths" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="detectedLanguage"> The detectedLanguage property is only present in the result object when language auto-detection is requested. </param>
        <param name="sentencesLengths">
            An integer array representing the lengths of the sentences in the input text.
            The length of the array is the number of sentences, and the values are the length of each sentence.
            </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.BreakSentenceItem" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Translation.Text.BreakSentenceItem" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectedLanguage">
      <MemberSignature Language="C#" Value="public static Azure.AI.Translation.Text.DetectedLanguage DetectedLanguage (string language = default, float confidence = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Translation.Text.DetectedLanguage DetectedLanguage(string language, float32 confidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.DetectedLanguage(System.String,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DetectedLanguage (Optional language As String = Nothing, Optional confidence As Single = 0) As DetectedLanguage" />
      <MemberSignature Language="F#" Value="static member DetectedLanguage : string * single -&gt; Azure.AI.Translation.Text.DetectedLanguage" Usage="Azure.AI.Translation.Text.AITranslationTextModelFactory.DetectedLanguage (language, confidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Translation.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Translation.Text.DetectedLanguage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="confidence" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="language"> A string representing the code of the detected language. </param>
        <param name="confidence">
            A float value indicating the confidence in the result.
            The score is between zero and one and a low score indicates a low confidence.
            </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.DetectedLanguage" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Translation.Text.DetectedLanguage" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DictionaryExample">
      <MemberSignature Language="C#" Value="public static Azure.AI.Translation.Text.DictionaryExample DictionaryExample (string sourcePrefix = default, string sourceTerm = default, string sourceSuffix = default, string targetPrefix = default, string targetTerm = default, string targetSuffix = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Translation.Text.DictionaryExample DictionaryExample(string sourcePrefix, string sourceTerm, string sourceSuffix, string targetPrefix, string targetTerm, string targetSuffix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.DictionaryExample(System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DictionaryExample (Optional sourcePrefix As String = Nothing, Optional sourceTerm As String = Nothing, Optional sourceSuffix As String = Nothing, Optional targetPrefix As String = Nothing, Optional targetTerm As String = Nothing, Optional targetSuffix As String = Nothing) As DictionaryExample" />
      <MemberSignature Language="F#" Value="static member DictionaryExample : string * string * string * string * string * string -&gt; Azure.AI.Translation.Text.DictionaryExample" Usage="Azure.AI.Translation.Text.AITranslationTextModelFactory.DictionaryExample (sourcePrefix, sourceTerm, sourceSuffix, targetPrefix, targetTerm, targetSuffix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Translation.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Translation.Text.DictionaryExample</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourcePrefix" Type="System.String" />
        <Parameter Name="sourceTerm" Type="System.String" />
        <Parameter Name="sourceSuffix" Type="System.String" />
        <Parameter Name="targetPrefix" Type="System.String" />
        <Parameter Name="targetTerm" Type="System.String" />
        <Parameter Name="targetSuffix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourcePrefix">
            The string to concatenate before the value of sourceTerm to form a complete example.
            Do not add a space character, since it is already there when it should be.
            This value may be an empty string.
            </param>
        <param name="sourceTerm">
            A string equal to the actual term looked up. The string is added with sourcePrefix
            and sourceSuffix to form the complete example. Its value is separated so it can be
            marked in a user interface, e.g., by bolding it.
            </param>
        <param name="sourceSuffix">
            The string to concatenate after the value of sourceTerm to form a complete example.
            Do not add a space character, since it is already there when it should be.
            This value may be an empty string.
            </param>
        <param name="targetPrefix"> A string similar to sourcePrefix but for the target. </param>
        <param name="targetTerm"> A string similar to sourceTerm but for the target. </param>
        <param name="targetSuffix"> A string similar to sourceSuffix but for the target. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.DictionaryExample" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Translation.Text.DictionaryExample" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DictionaryExampleItem">
      <MemberSignature Language="C#" Value="public static Azure.AI.Translation.Text.DictionaryExampleItem DictionaryExampleItem (string normalizedSource = default, string normalizedTarget = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Translation.Text.DictionaryExample&gt; examples = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Translation.Text.DictionaryExampleItem DictionaryExampleItem(string normalizedSource, string normalizedTarget, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Translation.Text.DictionaryExample&gt; examples) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.DictionaryExampleItem(System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.DictionaryExample})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DictionaryExampleItem (Optional normalizedSource As String = Nothing, Optional normalizedTarget As String = Nothing, Optional examples As IEnumerable(Of DictionaryExample) = Nothing) As DictionaryExampleItem" />
      <MemberSignature Language="F#" Value="static member DictionaryExampleItem : string * string * seq&lt;Azure.AI.Translation.Text.DictionaryExample&gt; -&gt; Azure.AI.Translation.Text.DictionaryExampleItem" Usage="Azure.AI.Translation.Text.AITranslationTextModelFactory.DictionaryExampleItem (normalizedSource, normalizedTarget, examples)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Translation.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Translation.Text.DictionaryExampleItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizedSource" Type="System.String" />
        <Parameter Name="normalizedTarget" Type="System.String" />
        <Parameter Name="examples" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Translation.Text.DictionaryExample&gt;" />
      </Parameters>
      <Docs>
        <param name="normalizedSource">
            A string giving the normalized form of the source term. Generally, this should be identical
            to the value of the Text field at the matching list index in the body of the request.
            </param>
        <param name="normalizedTarget">
            A string giving the normalized form of the target term. Generally, this should be identical
            to the value of the Translation field at the matching list index in the body of the request.
            </param>
        <param name="examples"> A list of examples for the (source term, target term) pair. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.DictionaryExampleItem" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Translation.Text.DictionaryExampleItem" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DictionaryLookupItem">
      <MemberSignature Language="C#" Value="public static Azure.AI.Translation.Text.DictionaryLookupItem DictionaryLookupItem (string normalizedSource = default, string displaySource = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Translation.Text.DictionaryTranslation&gt; translations = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Translation.Text.DictionaryLookupItem DictionaryLookupItem(string normalizedSource, string displaySource, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Translation.Text.DictionaryTranslation&gt; translations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.DictionaryLookupItem(System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.DictionaryTranslation})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DictionaryLookupItem (Optional normalizedSource As String = Nothing, Optional displaySource As String = Nothing, Optional translations As IEnumerable(Of DictionaryTranslation) = Nothing) As DictionaryLookupItem" />
      <MemberSignature Language="F#" Value="static member DictionaryLookupItem : string * string * seq&lt;Azure.AI.Translation.Text.DictionaryTranslation&gt; -&gt; Azure.AI.Translation.Text.DictionaryLookupItem" Usage="Azure.AI.Translation.Text.AITranslationTextModelFactory.DictionaryLookupItem (normalizedSource, displaySource, translations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Translation.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Translation.Text.DictionaryLookupItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizedSource" Type="System.String" />
        <Parameter Name="displaySource" Type="System.String" />
        <Parameter Name="translations" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Translation.Text.DictionaryTranslation&gt;" />
      </Parameters>
      <Docs>
        <param name="normalizedSource">
            A string giving the normalized form of the source term.
            For example, if the request is "JOHN", the normalized form will be "john".
            The content of this field becomes the input to lookup examples.
            </param>
        <param name="displaySource">
            A string giving the source term in a form best suited for end-user display.
            For example, if the input is "JOHN", the display form will reflect the usual
            spelling of the name: "John".
            </param>
        <param name="translations"> A list of translations for the source term. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.DictionaryLookupItem" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Translation.Text.DictionaryLookupItem" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DictionaryTranslation">
      <MemberSignature Language="C#" Value="public static Azure.AI.Translation.Text.DictionaryTranslation DictionaryTranslation (string normalizedTarget = default, string displayTarget = default, string posTag = default, float confidence = 0, string prefixWord = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Translation.Text.BackTranslation&gt; backTranslations = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Translation.Text.DictionaryTranslation DictionaryTranslation(string normalizedTarget, string displayTarget, string posTag, float32 confidence, string prefixWord, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Translation.Text.BackTranslation&gt; backTranslations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.DictionaryTranslation(System.String,System.String,System.String,System.Single,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.BackTranslation})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DictionaryTranslation (Optional normalizedTarget As String = Nothing, Optional displayTarget As String = Nothing, Optional posTag As String = Nothing, Optional confidence As Single = 0, Optional prefixWord As String = Nothing, Optional backTranslations As IEnumerable(Of BackTranslation) = Nothing) As DictionaryTranslation" />
      <MemberSignature Language="F#" Value="static member DictionaryTranslation : string * string * string * single * string * seq&lt;Azure.AI.Translation.Text.BackTranslation&gt; -&gt; Azure.AI.Translation.Text.DictionaryTranslation" Usage="Azure.AI.Translation.Text.AITranslationTextModelFactory.DictionaryTranslation (normalizedTarget, displayTarget, posTag, confidence, prefixWord, backTranslations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Translation.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Translation.Text.DictionaryTranslation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizedTarget" Type="System.String" />
        <Parameter Name="displayTarget" Type="System.String" />
        <Parameter Name="posTag" Type="System.String" />
        <Parameter Name="confidence" Type="System.Single" />
        <Parameter Name="prefixWord" Type="System.String" />
        <Parameter Name="backTranslations" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Translation.Text.BackTranslation&gt;" />
      </Parameters>
      <Docs>
        <param name="normalizedTarget">
            A string giving the normalized form of this term in the target language.
            This value should be used as input to lookup examples.
            </param>
        <param name="displayTarget">
            A string giving the term in the target language and in a form best suited
            for end-user display. Generally, this will only differ from the normalizedTarget
            in terms of capitalization. For example, a proper noun like "Juan" will have
            normalizedTarget = "juan" and displayTarget = "Juan".
            </param>
        <param name="posTag"> A string associating this term with a part-of-speech tag. </param>
        <param name="confidence">
            A value between 0.0 and 1.0 which represents the "confidence"
            (or perhaps more accurately, "probability in the training data") of that translation pair.
            The sum of confidence scores for one source word may or may not sum to 1.0.
            </param>
        <param name="prefixWord">
            A string giving the word to display as a prefix of the translation. Currently,
            this is the gendered determiner of nouns, in languages that have gendered determiners.
            For example, the prefix of the Spanish word "mosca" is "la", since "mosca" is a feminine noun in Spanish.
            This is only dependent on the translation, and not on the source.
            If there is no prefix, it will be the empty string.
            </param>
        <param name="backTranslations">
            A list of "back translations" of the target. For example, source words that the target can translate to.
            The list is guaranteed to contain the source word that was requested (e.g., if the source word being
            looked up is "fly", then it is guaranteed that "fly" will be in the backTranslations list).
            However, it is not guaranteed to be in the first position, and often will not be.
            </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.DictionaryTranslation" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Translation.Text.DictionaryTranslation" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedLanguagesResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Translation.Text.GetSupportedLanguagesResult GetSupportedLanguagesResult (System.Collections.Generic.IReadOnlyDictionary&lt;string,Azure.AI.Translation.Text.TranslationLanguage&gt; translation = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,Azure.AI.Translation.Text.TransliterationLanguage&gt; transliteration = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,Azure.AI.Translation.Text.SourceDictionaryLanguage&gt; dictionary = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Translation.Text.GetSupportedLanguagesResult GetSupportedLanguagesResult(class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class Azure.AI.Translation.Text.TranslationLanguage&gt; translation, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class Azure.AI.Translation.Text.TransliterationLanguage&gt; transliteration, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class Azure.AI.Translation.Text.SourceDictionaryLanguage&gt; dictionary) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.GetSupportedLanguagesResult(System.Collections.Generic.IReadOnlyDictionary{System.String,Azure.AI.Translation.Text.TranslationLanguage},System.Collections.Generic.IReadOnlyDictionary{System.String,Azure.AI.Translation.Text.TransliterationLanguage},System.Collections.Generic.IReadOnlyDictionary{System.String,Azure.AI.Translation.Text.SourceDictionaryLanguage})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSupportedLanguagesResult (Optional translation As IReadOnlyDictionary(Of String, TranslationLanguage) = Nothing, Optional transliteration As IReadOnlyDictionary(Of String, TransliterationLanguage) = Nothing, Optional dictionary As IReadOnlyDictionary(Of String, SourceDictionaryLanguage) = Nothing) As GetSupportedLanguagesResult" />
      <MemberSignature Language="F#" Value="static member GetSupportedLanguagesResult : System.Collections.Generic.IReadOnlyDictionary&lt;string, Azure.AI.Translation.Text.TranslationLanguage&gt; * System.Collections.Generic.IReadOnlyDictionary&lt;string, Azure.AI.Translation.Text.TransliterationLanguage&gt; * System.Collections.Generic.IReadOnlyDictionary&lt;string, Azure.AI.Translation.Text.SourceDictionaryLanguage&gt; -&gt; Azure.AI.Translation.Text.GetSupportedLanguagesResult" Usage="Azure.AI.Translation.Text.AITranslationTextModelFactory.GetSupportedLanguagesResult (translation, transliteration, dictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Translation.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Translation.Text.GetSupportedLanguagesResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="translation" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,Azure.AI.Translation.Text.TranslationLanguage&gt;" />
        <Parameter Name="transliteration" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,Azure.AI.Translation.Text.TransliterationLanguage&gt;" />
        <Parameter Name="dictionary" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,Azure.AI.Translation.Text.SourceDictionaryLanguage&gt;" />
      </Parameters>
      <Docs>
        <param name="translation"> Languages that support translate API. </param>
        <param name="transliteration"> Languages that support transliteration API. </param>
        <param name="dictionary"> Languages that support dictionary API. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.GetSupportedLanguagesResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Translation.Text.GetSupportedLanguagesResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageScript">
      <MemberSignature Language="C#" Value="public static Azure.AI.Translation.Text.LanguageScript LanguageScript (string code = default, string name = default, string nativeName = default, Azure.AI.Translation.Text.LanguageDirectionality directionality = Azure.AI.Translation.Text.LanguageDirectionality.LeftToRight);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Translation.Text.LanguageScript LanguageScript(string code, string name, string nativeName, valuetype Azure.AI.Translation.Text.LanguageDirectionality directionality) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.LanguageScript(System.String,System.String,System.String,Azure.AI.Translation.Text.LanguageDirectionality)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LanguageScript (Optional code As String = Nothing, Optional name As String = Nothing, Optional nativeName As String = Nothing, Optional directionality As LanguageDirectionality = Azure.AI.Translation.Text.LanguageDirectionality.LeftToRight) As LanguageScript" />
      <MemberSignature Language="F#" Value="static member LanguageScript : string * string * string * Azure.AI.Translation.Text.LanguageDirectionality -&gt; Azure.AI.Translation.Text.LanguageScript" Usage="Azure.AI.Translation.Text.AITranslationTextModelFactory.LanguageScript (code, name, nativeName, directionality)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Translation.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Translation.Text.LanguageScript</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="nativeName" Type="System.String" />
        <Parameter Name="directionality" Type="Azure.AI.Translation.Text.LanguageDirectionality" />
      </Parameters>
      <Docs>
        <param name="code"> Code identifying the script. </param>
        <param name="name"> Display name of the script in the locale requested via Accept-Language header. </param>
        <param name="nativeName"> Display name of the language in the locale native for the language. </param>
        <param name="directionality"> Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.LanguageScript" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Translation.Text.LanguageScript" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SentenceBoundaries">
      <MemberSignature Language="C#" Value="public static Azure.AI.Translation.Text.SentenceBoundaries SentenceBoundaries (System.Collections.Generic.IEnumerable&lt;int&gt; sourceSentencesLengths = default, System.Collections.Generic.IEnumerable&lt;int&gt; translatedSentencesLengths = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Translation.Text.SentenceBoundaries SentenceBoundaries(class System.Collections.Generic.IEnumerable`1&lt;int32&gt; sourceSentencesLengths, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; translatedSentencesLengths) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.SentenceBoundaries(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SentenceBoundaries (Optional sourceSentencesLengths As IEnumerable(Of Integer) = Nothing, Optional translatedSentencesLengths As IEnumerable(Of Integer) = Nothing) As SentenceBoundaries" />
      <MemberSignature Language="F#" Value="static member SentenceBoundaries : seq&lt;int&gt; * seq&lt;int&gt; -&gt; Azure.AI.Translation.Text.SentenceBoundaries" Usage="Azure.AI.Translation.Text.AITranslationTextModelFactory.SentenceBoundaries (sourceSentencesLengths, translatedSentencesLengths)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Translation.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Translation.Text.SentenceBoundaries</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceSentencesLengths" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
        <Parameter Name="translatedSentencesLengths" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="sourceSentencesLengths">
            An integer array representing the lengths of the sentences in the input text.
            The length of the array is the number of sentences, and the values are the length of each sentence.
            </param>
        <param name="translatedSentencesLengths">
            An integer array representing the lengths of the sentences in the translated text.
            The length of the array is the number of sentences, and the values are the length of each sentence.
            </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.SentenceBoundaries" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Translation.Text.SentenceBoundaries" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceDictionaryLanguage">
      <MemberSignature Language="C#" Value="public static Azure.AI.Translation.Text.SourceDictionaryLanguage SourceDictionaryLanguage (string name = default, string nativeName = default, Azure.AI.Translation.Text.LanguageDirectionality directionality = Azure.AI.Translation.Text.LanguageDirectionality.LeftToRight, System.Collections.Generic.IEnumerable&lt;Azure.AI.Translation.Text.TargetDictionaryLanguage&gt; translations = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Translation.Text.SourceDictionaryLanguage SourceDictionaryLanguage(string name, string nativeName, valuetype Azure.AI.Translation.Text.LanguageDirectionality directionality, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Translation.Text.TargetDictionaryLanguage&gt; translations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.SourceDictionaryLanguage(System.String,System.String,Azure.AI.Translation.Text.LanguageDirectionality,System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.TargetDictionaryLanguage})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SourceDictionaryLanguage (Optional name As String = Nothing, Optional nativeName As String = Nothing, Optional directionality As LanguageDirectionality = Azure.AI.Translation.Text.LanguageDirectionality.LeftToRight, Optional translations As IEnumerable(Of TargetDictionaryLanguage) = Nothing) As SourceDictionaryLanguage" />
      <MemberSignature Language="F#" Value="static member SourceDictionaryLanguage : string * string * Azure.AI.Translation.Text.LanguageDirectionality * seq&lt;Azure.AI.Translation.Text.TargetDictionaryLanguage&gt; -&gt; Azure.AI.Translation.Text.SourceDictionaryLanguage" Usage="Azure.AI.Translation.Text.AITranslationTextModelFactory.SourceDictionaryLanguage (name, nativeName, directionality, translations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Translation.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Translation.Text.SourceDictionaryLanguage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="nativeName" Type="System.String" />
        <Parameter Name="directionality" Type="Azure.AI.Translation.Text.LanguageDirectionality" />
        <Parameter Name="translations" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Translation.Text.TargetDictionaryLanguage&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> Display name of the language in the locale requested via Accept-Language header. </param>
        <param name="nativeName"> Display name of the language in the locale native for this language. </param>
        <param name="directionality"> Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages. </param>
        <param name="translations"> List of languages with alterative translations and examples for the query expressed in the source language. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.SourceDictionaryLanguage" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Translation.Text.SourceDictionaryLanguage" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceText">
      <MemberSignature Language="C#" Value="public static Azure.AI.Translation.Text.SourceText SourceText (string text = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Translation.Text.SourceText SourceText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.SourceText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SourceText (Optional text As String = Nothing) As SourceText" />
      <MemberSignature Language="F#" Value="static member SourceText : string -&gt; Azure.AI.Translation.Text.SourceText" Usage="Azure.AI.Translation.Text.AITranslationTextModelFactory.SourceText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Translation.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Translation.Text.SourceText</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"> Input text in the default script of the source language. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.SourceText" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Translation.Text.SourceText" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetDictionaryLanguage">
      <MemberSignature Language="C#" Value="public static Azure.AI.Translation.Text.TargetDictionaryLanguage TargetDictionaryLanguage (string name = default, string nativeName = default, Azure.AI.Translation.Text.LanguageDirectionality directionality = Azure.AI.Translation.Text.LanguageDirectionality.LeftToRight, string code = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Translation.Text.TargetDictionaryLanguage TargetDictionaryLanguage(string name, string nativeName, valuetype Azure.AI.Translation.Text.LanguageDirectionality directionality, string code) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.TargetDictionaryLanguage(System.String,System.String,Azure.AI.Translation.Text.LanguageDirectionality,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TargetDictionaryLanguage (Optional name As String = Nothing, Optional nativeName As String = Nothing, Optional directionality As LanguageDirectionality = Azure.AI.Translation.Text.LanguageDirectionality.LeftToRight, Optional code As String = Nothing) As TargetDictionaryLanguage" />
      <MemberSignature Language="F#" Value="static member TargetDictionaryLanguage : string * string * Azure.AI.Translation.Text.LanguageDirectionality * string -&gt; Azure.AI.Translation.Text.TargetDictionaryLanguage" Usage="Azure.AI.Translation.Text.AITranslationTextModelFactory.TargetDictionaryLanguage (name, nativeName, directionality, code)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Translation.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Translation.Text.TargetDictionaryLanguage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="nativeName" Type="System.String" />
        <Parameter Name="directionality" Type="Azure.AI.Translation.Text.LanguageDirectionality" />
        <Parameter Name="code" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"> Display name of the language in the locale requested via Accept-Language header. </param>
        <param name="nativeName"> Display name of the language in the locale native for this language. </param>
        <param name="directionality"> Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages. </param>
        <param name="code"> Language code identifying the target language. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TargetDictionaryLanguage" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Translation.Text.TargetDictionaryLanguage" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslatedTextAlignment">
      <MemberSignature Language="C#" Value="public static Azure.AI.Translation.Text.TranslatedTextAlignment TranslatedTextAlignment (string projections = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Translation.Text.TranslatedTextAlignment TranslatedTextAlignment(string projections) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.TranslatedTextAlignment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TranslatedTextAlignment (Optional projections As String = Nothing) As TranslatedTextAlignment" />
      <MemberSignature Language="F#" Value="static member TranslatedTextAlignment : string -&gt; Azure.AI.Translation.Text.TranslatedTextAlignment" Usage="Azure.AI.Translation.Text.AITranslationTextModelFactory.TranslatedTextAlignment projections" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Translation.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Translation.Text.TranslatedTextAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projections" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projections">
            Maps input text to translated text. The alignment information is only provided when the request
            parameter includeAlignment is true. Alignment is returned as a string value of the following
            format: [[SourceTextStartIndex]:[SourceTextEndIndex]–[TgtTextStartIndex]:[TgtTextEndIndex]].
            The colon separates start and end index, the dash separates the languages, and space separates the words.
            One word may align with zero, one, or multiple words in the other language, and the aligned words may
            be non-contiguous. When no alignment information is available, the alignment element will be empty.
            </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TranslatedTextAlignment" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Translation.Text.TranslatedTextAlignment" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslatedTextItem">
      <MemberSignature Language="C#" Value="public static Azure.AI.Translation.Text.TranslatedTextItem TranslatedTextItem (Azure.AI.Translation.Text.DetectedLanguage detectedLanguage = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Translation.Text.TranslationText&gt; translations = default, Azure.AI.Translation.Text.SourceText sourceText = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Translation.Text.TranslatedTextItem TranslatedTextItem(class Azure.AI.Translation.Text.DetectedLanguage detectedLanguage, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Translation.Text.TranslationText&gt; translations, class Azure.AI.Translation.Text.SourceText sourceText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.TranslatedTextItem(Azure.AI.Translation.Text.DetectedLanguage,System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.TranslationText},Azure.AI.Translation.Text.SourceText)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TranslatedTextItem (Optional detectedLanguage As DetectedLanguage = Nothing, Optional translations As IEnumerable(Of TranslationText) = Nothing, Optional sourceText As SourceText = Nothing) As TranslatedTextItem" />
      <MemberSignature Language="F#" Value="static member TranslatedTextItem : Azure.AI.Translation.Text.DetectedLanguage * seq&lt;Azure.AI.Translation.Text.TranslationText&gt; * Azure.AI.Translation.Text.SourceText -&gt; Azure.AI.Translation.Text.TranslatedTextItem" Usage="Azure.AI.Translation.Text.AITranslationTextModelFactory.TranslatedTextItem (detectedLanguage, translations, sourceText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Translation.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Translation.Text.TranslatedTextItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="detectedLanguage" Type="Azure.AI.Translation.Text.DetectedLanguage" />
        <Parameter Name="translations" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Translation.Text.TranslationText&gt;" />
        <Parameter Name="sourceText" Type="Azure.AI.Translation.Text.SourceText" />
      </Parameters>
      <Docs>
        <param name="detectedLanguage"> The detectedLanguage property is only present in the result object when language auto-detection is requested. </param>
        <param name="translations">
            An array of translation results. The size of the array matches the number of target
            languages specified through the to query parameter.
            </param>
        <param name="sourceText">
            Input text in the default script of the source language. sourceText property is present only when
            the input is expressed in a script that's not the usual script for the language. For example,
            if the input were Arabic written in Latin script, then sourceText.text would be the same Arabic text
            converted into Arab script.
            </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TranslatedTextItem" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Translation.Text.TranslatedTextItem" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslationLanguage">
      <MemberSignature Language="C#" Value="public static Azure.AI.Translation.Text.TranslationLanguage TranslationLanguage (string name = default, string nativeName = default, Azure.AI.Translation.Text.LanguageDirectionality directionality = Azure.AI.Translation.Text.LanguageDirectionality.LeftToRight);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Translation.Text.TranslationLanguage TranslationLanguage(string name, string nativeName, valuetype Azure.AI.Translation.Text.LanguageDirectionality directionality) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.TranslationLanguage(System.String,System.String,Azure.AI.Translation.Text.LanguageDirectionality)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TranslationLanguage (Optional name As String = Nothing, Optional nativeName As String = Nothing, Optional directionality As LanguageDirectionality = Azure.AI.Translation.Text.LanguageDirectionality.LeftToRight) As TranslationLanguage" />
      <MemberSignature Language="F#" Value="static member TranslationLanguage : string * string * Azure.AI.Translation.Text.LanguageDirectionality -&gt; Azure.AI.Translation.Text.TranslationLanguage" Usage="Azure.AI.Translation.Text.AITranslationTextModelFactory.TranslationLanguage (name, nativeName, directionality)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Translation.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Translation.Text.TranslationLanguage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="nativeName" Type="System.String" />
        <Parameter Name="directionality" Type="Azure.AI.Translation.Text.LanguageDirectionality" />
      </Parameters>
      <Docs>
        <param name="name"> Display name of the language in the locale requested via Accept-Language header. </param>
        <param name="nativeName"> Display name of the language in the locale native for this language. </param>
        <param name="directionality"> Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TranslationLanguage" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Translation.Text.TranslationLanguage" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslationText">
      <MemberSignature Language="C#" Value="public static Azure.AI.Translation.Text.TranslationText TranslationText (string targetLanguage = default, string text = default, Azure.AI.Translation.Text.TransliteratedText transliteration = default, Azure.AI.Translation.Text.TranslatedTextAlignment alignment = default, Azure.AI.Translation.Text.SentenceBoundaries sentenceBoundaries = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Translation.Text.TranslationText TranslationText(string targetLanguage, string text, class Azure.AI.Translation.Text.TransliteratedText transliteration, class Azure.AI.Translation.Text.TranslatedTextAlignment alignment, class Azure.AI.Translation.Text.SentenceBoundaries sentenceBoundaries) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.TranslationText(System.String,System.String,Azure.AI.Translation.Text.TransliteratedText,Azure.AI.Translation.Text.TranslatedTextAlignment,Azure.AI.Translation.Text.SentenceBoundaries)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TranslationText (Optional targetLanguage As String = Nothing, Optional text As String = Nothing, Optional transliteration As TransliteratedText = Nothing, Optional alignment As TranslatedTextAlignment = Nothing, Optional sentenceBoundaries As SentenceBoundaries = Nothing) As TranslationText" />
      <MemberSignature Language="F#" Value="static member TranslationText : string * string * Azure.AI.Translation.Text.TransliteratedText * Azure.AI.Translation.Text.TranslatedTextAlignment * Azure.AI.Translation.Text.SentenceBoundaries -&gt; Azure.AI.Translation.Text.TranslationText" Usage="Azure.AI.Translation.Text.AITranslationTextModelFactory.TranslationText (targetLanguage, text, transliteration, alignment, sentenceBoundaries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Translation.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Translation.Text.TranslationText</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetLanguage" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="transliteration" Type="Azure.AI.Translation.Text.TransliteratedText" />
        <Parameter Name="alignment" Type="Azure.AI.Translation.Text.TranslatedTextAlignment" />
        <Parameter Name="sentenceBoundaries" Type="Azure.AI.Translation.Text.SentenceBoundaries" />
      </Parameters>
      <Docs>
        <param name="targetLanguage"> A string representing the language code of the target language. </param>
        <param name="text"> A string giving the translated text. </param>
        <param name="transliteration"> An object giving the translated text in the script specified by the toScript parameter. </param>
        <param name="alignment"> Alignment information. </param>
        <param name="sentenceBoundaries"> Sentence boundaries in the input and output texts. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TranslationText" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Translation.Text.TranslationText" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransliterableScript">
      <MemberSignature Language="C#" Value="public static Azure.AI.Translation.Text.TransliterableScript TransliterableScript (string code = default, string name = default, string nativeName = default, Azure.AI.Translation.Text.LanguageDirectionality directionality = Azure.AI.Translation.Text.LanguageDirectionality.LeftToRight, System.Collections.Generic.IEnumerable&lt;Azure.AI.Translation.Text.LanguageScript&gt; targetLanguageScripts = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Translation.Text.TransliterableScript TransliterableScript(string code, string name, string nativeName, valuetype Azure.AI.Translation.Text.LanguageDirectionality directionality, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Translation.Text.LanguageScript&gt; targetLanguageScripts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.TransliterableScript(System.String,System.String,System.String,Azure.AI.Translation.Text.LanguageDirectionality,System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.LanguageScript})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TransliterableScript (Optional code As String = Nothing, Optional name As String = Nothing, Optional nativeName As String = Nothing, Optional directionality As LanguageDirectionality = Azure.AI.Translation.Text.LanguageDirectionality.LeftToRight, Optional targetLanguageScripts As IEnumerable(Of LanguageScript) = Nothing) As TransliterableScript" />
      <MemberSignature Language="F#" Value="static member TransliterableScript : string * string * string * Azure.AI.Translation.Text.LanguageDirectionality * seq&lt;Azure.AI.Translation.Text.LanguageScript&gt; -&gt; Azure.AI.Translation.Text.TransliterableScript" Usage="Azure.AI.Translation.Text.AITranslationTextModelFactory.TransliterableScript (code, name, nativeName, directionality, targetLanguageScripts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Translation.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Translation.Text.TransliterableScript</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="nativeName" Type="System.String" />
        <Parameter Name="directionality" Type="Azure.AI.Translation.Text.LanguageDirectionality" />
        <Parameter Name="targetLanguageScripts" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Translation.Text.LanguageScript&gt;" />
      </Parameters>
      <Docs>
        <param name="code"> Code identifying the script. </param>
        <param name="name"> Display name of the script in the locale requested via Accept-Language header. </param>
        <param name="nativeName"> Display name of the language in the locale native for the language. </param>
        <param name="directionality"> Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages. </param>
        <param name="targetLanguageScripts"> List of scripts available to convert text to. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TransliterableScript" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Translation.Text.TransliterableScript" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransliteratedText">
      <MemberSignature Language="C#" Value="public static Azure.AI.Translation.Text.TransliteratedText TransliteratedText (string text = default, string script = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Translation.Text.TransliteratedText TransliteratedText(string text, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.TransliteratedText(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TransliteratedText (Optional text As String = Nothing, Optional script As String = Nothing) As TransliteratedText" />
      <MemberSignature Language="F#" Value="static member TransliteratedText : string * string -&gt; Azure.AI.Translation.Text.TransliteratedText" Usage="Azure.AI.Translation.Text.AITranslationTextModelFactory.TransliteratedText (text, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Translation.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Translation.Text.TransliteratedText</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"> A string which is the result of converting the input string to the output script. </param>
        <param name="script"> A string specifying the script used in the output. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TransliteratedText" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Translation.Text.TransliteratedText" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransliterationLanguage">
      <MemberSignature Language="C#" Value="public static Azure.AI.Translation.Text.TransliterationLanguage TransliterationLanguage (string name = default, string nativeName = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Translation.Text.TransliterableScript&gt; scripts = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Translation.Text.TransliterationLanguage TransliterationLanguage(string name, string nativeName, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Translation.Text.TransliterableScript&gt; scripts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Translation.Text.AITranslationTextModelFactory.TransliterationLanguage(System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Translation.Text.TransliterableScript})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TransliterationLanguage (Optional name As String = Nothing, Optional nativeName As String = Nothing, Optional scripts As IEnumerable(Of TransliterableScript) = Nothing) As TransliterationLanguage" />
      <MemberSignature Language="F#" Value="static member TransliterationLanguage : string * string * seq&lt;Azure.AI.Translation.Text.TransliterableScript&gt; -&gt; Azure.AI.Translation.Text.TransliterationLanguage" Usage="Azure.AI.Translation.Text.AITranslationTextModelFactory.TransliterationLanguage (name, nativeName, scripts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Translation.Text</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Translation.Text.TransliterationLanguage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="nativeName" Type="System.String" />
        <Parameter Name="scripts" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Translation.Text.TransliterableScript&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> Display name of the language in the locale requested via Accept-Language header. </param>
        <param name="nativeName"> Display name of the language in the locale native for this language. </param>
        <param name="scripts"> List of scripts to convert from. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Translation.Text.TransliterationLanguage" />. </summary>
        <returns> A new <see cref="T:Azure.AI.Translation.Text.TransliterationLanguage" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
