<Type Name="ThreadRunSteps" FullName="Azure.AI.Agents.Persistent.ThreadRunSteps">
  <TypeSignature Language="C#" Value="public class ThreadRunSteps" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ThreadRunSteps extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.Agents.Persistent.ThreadRunSteps" />
  <TypeSignature Language="VB.NET" Value="Public Class ThreadRunSteps" />
  <TypeSignature Language="F#" Value="type ThreadRunSteps = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.Agents.Persistent</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A collection of run‚Äêstep operations under
            `/threads/{threadId}/runs/{runId}/steps`.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ThreadRunSteps ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Agents.Persistent.ThreadRunSteps.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Agents.Persistent</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of ThreadRunSteps for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRunStep">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetRunStep (string threadId, string runId, string stepId, System.Collections.Generic.IEnumerable&lt;Azure.AI.Agents.Persistent.RunAdditionalFieldList&gt; include, Azure.RequestContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetRunStep(string threadId, string runId, string stepId, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.AI.Agents.Persistent.RunAdditionalFieldList&gt; include, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Agents.Persistent.ThreadRunSteps.GetRunStep(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Agents.Persistent.RunAdditionalFieldList},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRunStep (threadId As String, runId As String, stepId As String, include As IEnumerable(Of RunAdditionalFieldList), context As RequestContext) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetRunStep : string * string * string * seq&lt;Azure.AI.Agents.Persistent.RunAdditionalFieldList&gt; * Azure.RequestContext -&gt; Azure.Response&#xA;override this.GetRunStep : string * string * string * seq&lt;Azure.AI.Agents.Persistent.RunAdditionalFieldList&gt; * Azure.RequestContext -&gt; Azure.Response" Usage="threadRunSteps.GetRunStep (threadId, runId, stepId, include, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Agents.Persistent</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="stepId" Type="System.String" />
        <Parameter Name="include" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Agents.Persistent.RunAdditionalFieldList&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="threadId"> Identifier of the thread. </param>
        <param name="runId"> Identifier of the run. </param>
        <param name="stepId"> Identifier of the run step. </param>
        <param name="include">
            A list of additional fields to include in the response.
            Currently the only supported value is `step_details.tool_calls[*].file_search.results[*].content` to fetch the file search result content.
            </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Retrieves a single run step from a thread run.
            <list type="bullet"><item><description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description></item><item><description>
            Please try the simpler <see cref="M:Azure.AI.Agents.Persistent.ThreadRunSteps.GetRunStep(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Agents.Persistent.RunAdditionalFieldList},System.Threading.CancellationToken)" /> convenience overload with strongly typed models first.
            </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" />, <paramref name="runId" /> or <paramref name="stepId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" />, <paramref name="runId" /> or <paramref name="stepId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRunStep">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.Agents.Persistent.RunStep&gt; GetRunStep (string threadId, string runId, string stepId, System.Collections.Generic.IEnumerable&lt;Azure.AI.Agents.Persistent.RunAdditionalFieldList&gt; include = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.Agents.Persistent.RunStep&gt; GetRunStep(string threadId, string runId, string stepId, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.AI.Agents.Persistent.RunAdditionalFieldList&gt; include, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Agents.Persistent.ThreadRunSteps.GetRunStep(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Agents.Persistent.RunAdditionalFieldList},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRunStep (threadId As String, runId As String, stepId As String, Optional include As IEnumerable(Of RunAdditionalFieldList) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RunStep)" />
      <MemberSignature Language="F#" Value="abstract member GetRunStep : string * string * string * seq&lt;Azure.AI.Agents.Persistent.RunAdditionalFieldList&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.Agents.Persistent.RunStep&gt;&#xA;override this.GetRunStep : string * string * string * seq&lt;Azure.AI.Agents.Persistent.RunAdditionalFieldList&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.Agents.Persistent.RunStep&gt;" Usage="threadRunSteps.GetRunStep (threadId, runId, stepId, include, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Agents.Persistent</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.Agents.Persistent.RunStep&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="stepId" Type="System.String" />
        <Parameter Name="include" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Agents.Persistent.RunAdditionalFieldList&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> Identifier of the thread. </param>
        <param name="runId"> Identifier of the run. </param>
        <param name="stepId"> Identifier of the run step. </param>
        <param name="include">
            A list of additional fields to include in the response.
            Currently the only supported value is `step_details.tool_calls[*].file_search.results[*].content` to fetch the file search result content.
            </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Retrieves a single run step from a thread run. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" />, <paramref name="runId" /> or <paramref name="stepId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" />, <paramref name="runId" /> or <paramref name="stepId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRunStepAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetRunStepAsync (string threadId, string runId, string stepId, System.Collections.Generic.IEnumerable&lt;Azure.AI.Agents.Persistent.RunAdditionalFieldList&gt; include, Azure.RequestContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetRunStepAsync(string threadId, string runId, string stepId, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.AI.Agents.Persistent.RunAdditionalFieldList&gt; include, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Agents.Persistent.ThreadRunSteps.GetRunStepAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Agents.Persistent.RunAdditionalFieldList},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRunStepAsync (threadId As String, runId As String, stepId As String, include As IEnumerable(Of RunAdditionalFieldList), context As RequestContext) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetRunStepAsync : string * string * string * seq&lt;Azure.AI.Agents.Persistent.RunAdditionalFieldList&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetRunStepAsync : string * string * string * seq&lt;Azure.AI.Agents.Persistent.RunAdditionalFieldList&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="threadRunSteps.GetRunStepAsync (threadId, runId, stepId, include, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Agents.Persistent</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="stepId" Type="System.String" />
        <Parameter Name="include" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Agents.Persistent.RunAdditionalFieldList&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="threadId"> Identifier of the thread. </param>
        <param name="runId"> Identifier of the run. </param>
        <param name="stepId"> Identifier of the run step. </param>
        <param name="include">
            A list of additional fields to include in the response.
            Currently the only supported value is `step_details.tool_calls[*].file_search.results[*].content` to fetch the file search result content.
            </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Retrieves a single run step from a thread run.
            <list type="bullet"><item><description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description></item><item><description>
            Please try the simpler <see cref="M:Azure.AI.Agents.Persistent.ThreadRunSteps.GetRunStepAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Agents.Persistent.RunAdditionalFieldList},System.Threading.CancellationToken)" /> convenience overload with strongly typed models first.
            </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" />, <paramref name="runId" /> or <paramref name="stepId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" />, <paramref name="runId" /> or <paramref name="stepId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRunStepAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.Agents.Persistent.RunStep&gt;&gt; GetRunStepAsync (string threadId, string runId, string stepId, System.Collections.Generic.IEnumerable&lt;Azure.AI.Agents.Persistent.RunAdditionalFieldList&gt; include = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.Agents.Persistent.RunStep&gt;&gt; GetRunStepAsync(string threadId, string runId, string stepId, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.AI.Agents.Persistent.RunAdditionalFieldList&gt; include, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Agents.Persistent.ThreadRunSteps.GetRunStepAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Agents.Persistent.RunAdditionalFieldList},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRunStepAsync (threadId As String, runId As String, stepId As String, Optional include As IEnumerable(Of RunAdditionalFieldList) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RunStep))" />
      <MemberSignature Language="F#" Value="abstract member GetRunStepAsync : string * string * string * seq&lt;Azure.AI.Agents.Persistent.RunAdditionalFieldList&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.Agents.Persistent.RunStep&gt;&gt;&#xA;override this.GetRunStepAsync : string * string * string * seq&lt;Azure.AI.Agents.Persistent.RunAdditionalFieldList&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.Agents.Persistent.RunStep&gt;&gt;" Usage="threadRunSteps.GetRunStepAsync (threadId, runId, stepId, include, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Agents.Persistent</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.Agents.Persistent.RunStep&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="stepId" Type="System.String" />
        <Parameter Name="include" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Agents.Persistent.RunAdditionalFieldList&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> Identifier of the thread. </param>
        <param name="runId"> Identifier of the run. </param>
        <param name="stepId"> Identifier of the run step. </param>
        <param name="include">
            A list of additional fields to include in the response.
            Currently the only supported value is `step_details.tool_calls[*].file_search.results[*].content` to fetch the file search result content.
            </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Retrieves a single run step from a thread run. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" />, <paramref name="runId" /> or <paramref name="stepId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" />, <paramref name="runId" /> or <paramref name="stepId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRunSteps">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.AI.Agents.Persistent.RunStep&gt; GetRunSteps (Azure.AI.Agents.Persistent.ThreadRun run, int? limit = default, Azure.AI.Agents.Persistent.ListSortOrder? order = default, string after = default, string before = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.AI.Agents.Persistent.RunStep&gt; GetRunSteps(class Azure.AI.Agents.Persistent.ThreadRun run, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;valuetype Azure.AI.Agents.Persistent.ListSortOrder&gt; order, string after, string before, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Agents.Persistent.ThreadRunSteps.GetRunSteps(Azure.AI.Agents.Persistent.ThreadRun,System.Nullable{System.Int32},System.Nullable{Azure.AI.Agents.Persistent.ListSortOrder},System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRunSteps (run As ThreadRun, Optional limit As Nullable(Of Integer) = Nothing, Optional order As Nullable(Of ListSortOrder) = Nothing, Optional after As String = Nothing, Optional before As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of RunStep)" />
      <MemberSignature Language="F#" Value="abstract member GetRunSteps : Azure.AI.Agents.Persistent.ThreadRun * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.Agents.Persistent.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.AI.Agents.Persistent.RunStep&gt;&#xA;override this.GetRunSteps : Azure.AI.Agents.Persistent.ThreadRun * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.Agents.Persistent.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.AI.Agents.Persistent.RunStep&gt;" Usage="threadRunSteps.GetRunSteps (run, limit, order, after, before, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Agents.Persistent</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.AI.Agents.Persistent.RunStep&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="run" Type="Azure.AI.Agents.Persistent.ThreadRun" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="order" Type="System.Nullable&lt;Azure.AI.Agents.Persistent.ListSortOrder&gt;" />
        <Parameter Name="after" Type="System.String" />
        <Parameter Name="before" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="run"> The <see cref="T:Azure.AI.Agents.Persistent.ThreadRun" /> instance from which run steps should be listed. </param>
        <param name="limit"> A limit on the number of objects to be returned.Limit can range between 1 and 100, and the default is 20. </param>
        <param name="order"> Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order. </param>
        <param name="after"> A cursor for use in pagination.after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after = obj_foo in order to fetch the next page of the list. </param>
        <param name="before"> A cursor for use in pagination.before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before = obj_foo in order to fetch the previous page of the list. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Returns a list of run steps associated an agent thread run. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="run" />  is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRunSteps">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.AI.Agents.Persistent.RunStep&gt; GetRunSteps (string threadId, string runId, System.Collections.Generic.IEnumerable&lt;Azure.AI.Agents.Persistent.RunAdditionalFieldList&gt; include = default, int? limit = default, Azure.AI.Agents.Persistent.ListSortOrder? order = default, string after = default, string before = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.AI.Agents.Persistent.RunStep&gt; GetRunSteps(string threadId, string runId, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.AI.Agents.Persistent.RunAdditionalFieldList&gt; include, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;valuetype Azure.AI.Agents.Persistent.ListSortOrder&gt; order, string after, string before, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Agents.Persistent.ThreadRunSteps.GetRunSteps(System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Agents.Persistent.RunAdditionalFieldList},System.Nullable{System.Int32},System.Nullable{Azure.AI.Agents.Persistent.ListSortOrder},System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRunSteps (threadId As String, runId As String, Optional include As IEnumerable(Of RunAdditionalFieldList) = Nothing, Optional limit As Nullable(Of Integer) = Nothing, Optional order As Nullable(Of ListSortOrder) = Nothing, Optional after As String = Nothing, Optional before As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of RunStep)" />
      <MemberSignature Language="F#" Value="abstract member GetRunSteps : string * string * seq&lt;Azure.AI.Agents.Persistent.RunAdditionalFieldList&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.Agents.Persistent.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.AI.Agents.Persistent.RunStep&gt;&#xA;override this.GetRunSteps : string * string * seq&lt;Azure.AI.Agents.Persistent.RunAdditionalFieldList&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.Agents.Persistent.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.AI.Agents.Persistent.RunStep&gt;" Usage="threadRunSteps.GetRunSteps (threadId, runId, include, limit, order, after, before, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Agents.Persistent</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.AI.Agents.Persistent.RunStep&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="include" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Agents.Persistent.RunAdditionalFieldList&gt;" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="order" Type="System.Nullable&lt;Azure.AI.Agents.Persistent.ListSortOrder&gt;" />
        <Parameter Name="after" Type="System.String" />
        <Parameter Name="before" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> Identifier of the thread. </param>
        <param name="runId"> Identifier of the run. </param>
        <param name="include">
            A list of additional fields to include in the response.
            Currently the only supported value is `step_details.tool_calls[*].file_search.results[*].content` to fetch the file search result content.
            </param>
        <param name="limit"> A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. </param>
        <param name="order"> Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order. </param>
        <param name="after"> A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. </param>
        <param name="before"> A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of run steps from a thread run. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" /> or <paramref name="runId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> or <paramref name="runId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRunStepsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.AI.Agents.Persistent.RunStep&gt; GetRunStepsAsync (Azure.AI.Agents.Persistent.ThreadRun run, int? limit = default, Azure.AI.Agents.Persistent.ListSortOrder? order = default, string after = default, string before = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.AI.Agents.Persistent.RunStep&gt; GetRunStepsAsync(class Azure.AI.Agents.Persistent.ThreadRun run, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;valuetype Azure.AI.Agents.Persistent.ListSortOrder&gt; order, string after, string before, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Agents.Persistent.ThreadRunSteps.GetRunStepsAsync(Azure.AI.Agents.Persistent.ThreadRun,System.Nullable{System.Int32},System.Nullable{Azure.AI.Agents.Persistent.ListSortOrder},System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRunStepsAsync (run As ThreadRun, Optional limit As Nullable(Of Integer) = Nothing, Optional order As Nullable(Of ListSortOrder) = Nothing, Optional after As String = Nothing, Optional before As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of RunStep)" />
      <MemberSignature Language="F#" Value="abstract member GetRunStepsAsync : Azure.AI.Agents.Persistent.ThreadRun * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.Agents.Persistent.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.AI.Agents.Persistent.RunStep&gt;&#xA;override this.GetRunStepsAsync : Azure.AI.Agents.Persistent.ThreadRun * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.Agents.Persistent.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.AI.Agents.Persistent.RunStep&gt;" Usage="threadRunSteps.GetRunStepsAsync (run, limit, order, after, before, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Agents.Persistent</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.AI.Agents.Persistent.RunStep&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="run" Type="Azure.AI.Agents.Persistent.ThreadRun" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="order" Type="System.Nullable&lt;Azure.AI.Agents.Persistent.ListSortOrder&gt;" />
        <Parameter Name="after" Type="System.String" />
        <Parameter Name="before" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="run"> The <see cref="T:Azure.AI.Agents.Persistent.ThreadRun" /> instance from which run steps should be listed. </param>
        <param name="limit"> A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. </param>
        <param name="order"> Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order. </param>
        <param name="after"> A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. </param>
        <param name="before"> A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Returns a list of run steps associated an agent thread run. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="run" />  is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRunStepsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.AI.Agents.Persistent.RunStep&gt; GetRunStepsAsync (string threadId, string runId, System.Collections.Generic.IEnumerable&lt;Azure.AI.Agents.Persistent.RunAdditionalFieldList&gt; include = default, int? limit = default, Azure.AI.Agents.Persistent.ListSortOrder? order = default, string after = default, string before = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.AI.Agents.Persistent.RunStep&gt; GetRunStepsAsync(string threadId, string runId, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.AI.Agents.Persistent.RunAdditionalFieldList&gt; include, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;valuetype Azure.AI.Agents.Persistent.ListSortOrder&gt; order, string after, string before, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Agents.Persistent.ThreadRunSteps.GetRunStepsAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Agents.Persistent.RunAdditionalFieldList},System.Nullable{System.Int32},System.Nullable{Azure.AI.Agents.Persistent.ListSortOrder},System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRunStepsAsync (threadId As String, runId As String, Optional include As IEnumerable(Of RunAdditionalFieldList) = Nothing, Optional limit As Nullable(Of Integer) = Nothing, Optional order As Nullable(Of ListSortOrder) = Nothing, Optional after As String = Nothing, Optional before As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of RunStep)" />
      <MemberSignature Language="F#" Value="abstract member GetRunStepsAsync : string * string * seq&lt;Azure.AI.Agents.Persistent.RunAdditionalFieldList&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.Agents.Persistent.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.AI.Agents.Persistent.RunStep&gt;&#xA;override this.GetRunStepsAsync : string * string * seq&lt;Azure.AI.Agents.Persistent.RunAdditionalFieldList&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.AI.Agents.Persistent.ListSortOrder&gt; * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.AI.Agents.Persistent.RunStep&gt;" Usage="threadRunSteps.GetRunStepsAsync (threadId, runId, include, limit, order, after, before, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Agents.Persistent</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.AI.Agents.Persistent.RunStep&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="include" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Agents.Persistent.RunAdditionalFieldList&gt;" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="order" Type="System.Nullable&lt;Azure.AI.Agents.Persistent.ListSortOrder&gt;" />
        <Parameter Name="after" Type="System.String" />
        <Parameter Name="before" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> Identifier of the thread. </param>
        <param name="runId"> Identifier of the run. </param>
        <param name="include">
            A list of additional fields to include in the response.
            Currently the only supported value is `step_details.tool_calls[*].file_search.results[*].content` to fetch the file search result content.
            </param>
        <param name="limit"> A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. </param>
        <param name="order"> Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order. </param>
        <param name="after"> A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. </param>
        <param name="before"> A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of run steps from a thread run. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="threadId" /> or <paramref name="runId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="threadId" /> or <paramref name="runId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Pipeline.HttpPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Agents.Persistent.ThreadRunSteps.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Pipeline As HttpPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : Azure.Core.Pipeline.HttpPipeline" Usage="Azure.AI.Agents.Persistent.ThreadRunSteps.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Agents.Persistent</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Pipeline.HttpPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
