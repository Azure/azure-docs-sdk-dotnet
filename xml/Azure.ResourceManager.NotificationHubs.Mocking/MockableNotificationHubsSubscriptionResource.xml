<Type Name="MockableNotificationHubsSubscriptionResource" FullName="Azure.ResourceManager.NotificationHubs.Mocking.MockableNotificationHubsSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableNotificationHubsSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableNotificationHubsSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.NotificationHubs.Mocking.MockableNotificationHubsSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableNotificationHubsSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableNotificationHubsSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.NotificationHubs</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableNotificationHubsSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NotificationHubs.Mocking.MockableNotificationHubsSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NotificationHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.NotificationHubs.Mocking.MockableNotificationHubsSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckNotificationHubNamespaceAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityResult&gt; CheckNotificationHubNamespaceAvailability (Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityResult&gt; CheckNotificationHubNamespaceAvailability(class Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NotificationHubs.Mocking.MockableNotificationHubsSubscriptionResource.CheckNotificationHubNamespaceAvailability(Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckNotificationHubNamespaceAvailability (content As NotificationHubAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NotificationHubAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckNotificationHubNamespaceAvailability : Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityResult&gt;&#xA;override this.CheckNotificationHubNamespaceAvailability : Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityResult&gt;" Usage="mockableNotificationHubsSubscriptionResource.CheckNotificationHubNamespaceAvailability (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NotificationHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Request content. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks the availability of the given service namespace across all Azure subscriptions. This is useful because the domain name is created based on the service namespace name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NotificationHubs/checkNamespaceAvailability</description></item><item><term>Operation Id</term><description>Namespaces_CheckAvailability</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckNotificationHubNamespaceAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityResult&gt;&gt; CheckNotificationHubNamespaceAvailabilityAsync (Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityResult&gt;&gt; CheckNotificationHubNamespaceAvailabilityAsync(class Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NotificationHubs.Mocking.MockableNotificationHubsSubscriptionResource.CheckNotificationHubNamespaceAvailabilityAsync(Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckNotificationHubNamespaceAvailabilityAsync (content As NotificationHubAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NotificationHubAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckNotificationHubNamespaceAvailabilityAsync : Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityResult&gt;&gt;&#xA;override this.CheckNotificationHubNamespaceAvailabilityAsync : Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityResult&gt;&gt;" Usage="mockableNotificationHubsSubscriptionResource.CheckNotificationHubNamespaceAvailabilityAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NotificationHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.NotificationHubs.Models.NotificationHubAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Request content. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks the availability of the given service namespace across all Azure subscriptions. This is useful because the domain name is created based on the service namespace name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NotificationHubs/checkNamespaceAvailability</description></item><item><term>Operation Id</term><description>Namespaces_CheckAvailability</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationHubNamespaces">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt; GetNotificationHubNamespaces (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt; GetNotificationHubNamespaces(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NotificationHubs.Mocking.MockableNotificationHubsSubscriptionResource.GetNotificationHubNamespaces(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNotificationHubNamespaces (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of NotificationHubNamespaceResource)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GetNotificationHubNamespaces : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt;&#xA;override this.GetNotificationHubNamespaces : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt;" Usage="mockableNotificationHubsSubscriptionResource.GetNotificationHubNamespaces cancellationToken" />
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt; GetNotificationHubNamespaces (System.Threading.CancellationToken cancellationToken);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNotificationHubNamespaces (cancellationToken As CancellationToken) As Pageable(Of NotificationHubNamespaceResource)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NotificationHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the available namespaces within the subscription irrespective of the resourceGroups.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NotificationHubs/namespaces</description></item><item><term>Operation Id</term><description>Namespaces_ListAll</description></item><item><term>Default Api Version</term><description>2017-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationHubNamespaces">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt; GetNotificationHubNamespaces (string skipToken = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt; GetNotificationHubNamespaces(string skipToken, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NotificationHubs.Mocking.MockableNotificationHubsSubscriptionResource.GetNotificationHubNamespaces(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNotificationHubNamespaces (Optional skipToken As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of NotificationHubNamespaceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNotificationHubNamespaces : string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt;&#xA;override this.GetNotificationHubNamespaces : string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt;" Usage="mockableNotificationHubsSubscriptionResource.GetNotificationHubNamespaces (skipToken, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NotificationHubs</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipToken" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="skipToken"> Skip token for subsequent requests. </param>
        <param name="top"> Maximum number of results to return. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the available namespaces within the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NotificationHubs/namespaces</description></item><item><term>Operation Id</term><description>Namespaces_ListAll</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationHubNamespacesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt; GetNotificationHubNamespacesAsync (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt; GetNotificationHubNamespacesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NotificationHubs.Mocking.MockableNotificationHubsSubscriptionResource.GetNotificationHubNamespacesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNotificationHubNamespacesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of NotificationHubNamespaceResource)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GetNotificationHubNamespacesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt;&#xA;override this.GetNotificationHubNamespacesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt;" Usage="mockableNotificationHubsSubscriptionResource.GetNotificationHubNamespacesAsync cancellationToken" />
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt; GetNotificationHubNamespacesAsync (System.Threading.CancellationToken cancellationToken);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNotificationHubNamespacesAsync (cancellationToken As CancellationToken) As AsyncPageable(Of NotificationHubNamespaceResource)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NotificationHubs</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the available namespaces within the subscription irrespective of the resourceGroups.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NotificationHubs/namespaces</description></item><item><term>Operation Id</term><description>Namespaces_ListAll</description></item><item><term>Default Api Version</term><description>2017-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationHubNamespacesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt; GetNotificationHubNamespacesAsync (string skipToken = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt; GetNotificationHubNamespacesAsync(string skipToken, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NotificationHubs.Mocking.MockableNotificationHubsSubscriptionResource.GetNotificationHubNamespacesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNotificationHubNamespacesAsync (Optional skipToken As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of NotificationHubNamespaceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNotificationHubNamespacesAsync : string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt;&#xA;override this.GetNotificationHubNamespacesAsync : string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt;" Usage="mockableNotificationHubsSubscriptionResource.GetNotificationHubNamespacesAsync (skipToken, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NotificationHubs</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipToken" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="skipToken"> Skip token for subsequent requests. </param>
        <param name="top"> Maximum number of results to return. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the available namespaces within the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.NotificationHubs/namespaces</description></item><item><term>Operation Id</term><description>Namespaces_ListAll</description></item><item><term>Default Api Version</term><description>2023-10-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.NotificationHubs.NotificationHubNamespaceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
