<Type Name="ArmConfluentModelFactory" FullName="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory">
  <TypeSignature Language="C#" Value="public static class ArmConfluentModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ArmConfluentModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ArmConfluentModelFactory" />
  <TypeSignature Language="F#" Value="type ArmConfluentModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AccessClusterListResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.AccessClusterListResult AccessClusterListResult (string kind = default, Azure.ResourceManager.Confluent.Models.ConfluentListMetadata metadata = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Confluent.Models.AccessClusterRecord&gt; data = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.AccessClusterListResult AccessClusterListResult(string kind, class Azure.ResourceManager.Confluent.Models.ConfluentListMetadata metadata, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Confluent.Models.AccessClusterRecord&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.AccessClusterListResult(System.String,Azure.ResourceManager.Confluent.Models.ConfluentListMetadata,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Confluent.Models.AccessClusterRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AccessClusterListResult (Optional kind As String = Nothing, Optional metadata As ConfluentListMetadata = Nothing, Optional data As IEnumerable(Of AccessClusterRecord) = Nothing) As AccessClusterListResult" />
      <MemberSignature Language="F#" Value="static member AccessClusterListResult : string * Azure.ResourceManager.Confluent.Models.ConfluentListMetadata * seq&lt;Azure.ResourceManager.Confluent.Models.AccessClusterRecord&gt; -&gt; Azure.ResourceManager.Confluent.Models.AccessClusterListResult" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.AccessClusterListResult (kind, metadata, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.AccessClusterListResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="metadata" Type="Azure.ResourceManager.Confluent.Models.ConfluentListMetadata" />
        <Parameter Name="data" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Confluent.Models.AccessClusterRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="kind"> Type of response. </param>
        <param name="metadata"> Metadata of the list. </param>
        <param name="data"> List of clusters. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.AccessClusterListResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.AccessClusterListResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessClusterRecord">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.AccessClusterRecord AccessClusterRecord (string kind = default, string id = default, Azure.ResourceManager.Confluent.Models.MetadataEntity metadata = default, string displayName = default, Azure.ResourceManager.Confluent.Models.ClusterSpecEntity spec = default, Azure.ResourceManager.Confluent.Models.ClusterStatusEntity status = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.AccessClusterRecord AccessClusterRecord(string kind, string id, class Azure.ResourceManager.Confluent.Models.MetadataEntity metadata, string displayName, class Azure.ResourceManager.Confluent.Models.ClusterSpecEntity spec, class Azure.ResourceManager.Confluent.Models.ClusterStatusEntity status) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.AccessClusterRecord(System.String,System.String,Azure.ResourceManager.Confluent.Models.MetadataEntity,System.String,Azure.ResourceManager.Confluent.Models.ClusterSpecEntity,Azure.ResourceManager.Confluent.Models.ClusterStatusEntity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AccessClusterRecord (Optional kind As String = Nothing, Optional id As String = Nothing, Optional metadata As MetadataEntity = Nothing, Optional displayName As String = Nothing, Optional spec As ClusterSpecEntity = Nothing, Optional status As ClusterStatusEntity = Nothing) As AccessClusterRecord" />
      <MemberSignature Language="F#" Value="static member AccessClusterRecord : string * string * Azure.ResourceManager.Confluent.Models.MetadataEntity * string * Azure.ResourceManager.Confluent.Models.ClusterSpecEntity * Azure.ResourceManager.Confluent.Models.ClusterStatusEntity -&gt; Azure.ResourceManager.Confluent.Models.AccessClusterRecord" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.AccessClusterRecord (kind, id, metadata, displayName, spec, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.AccessClusterRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="metadata" Type="Azure.ResourceManager.Confluent.Models.MetadataEntity" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="spec" Type="Azure.ResourceManager.Confluent.Models.ClusterSpecEntity" />
        <Parameter Name="status" Type="Azure.ResourceManager.Confluent.Models.ClusterStatusEntity" />
      </Parameters>
      <Docs>
        <param name="kind"> Type of cluster. </param>
        <param name="id"> Id of the cluster. </param>
        <param name="metadata"> Metadata of the record. </param>
        <param name="displayName"> Display name of the cluster. </param>
        <param name="spec"> Specification of the cluster. </param>
        <param name="status"> Specification of the cluster. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.AccessClusterRecord" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.AccessClusterRecord" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessEnvironmentListResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.AccessEnvironmentListResult AccessEnvironmentListResult (string kind = default, Azure.ResourceManager.Confluent.Models.ConfluentListMetadata metadata = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Confluent.Models.AccessEnvironmentRecord&gt; data = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.AccessEnvironmentListResult AccessEnvironmentListResult(string kind, class Azure.ResourceManager.Confluent.Models.ConfluentListMetadata metadata, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Confluent.Models.AccessEnvironmentRecord&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.AccessEnvironmentListResult(System.String,Azure.ResourceManager.Confluent.Models.ConfluentListMetadata,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Confluent.Models.AccessEnvironmentRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AccessEnvironmentListResult (Optional kind As String = Nothing, Optional metadata As ConfluentListMetadata = Nothing, Optional data As IEnumerable(Of AccessEnvironmentRecord) = Nothing) As AccessEnvironmentListResult" />
      <MemberSignature Language="F#" Value="static member AccessEnvironmentListResult : string * Azure.ResourceManager.Confluent.Models.ConfluentListMetadata * seq&lt;Azure.ResourceManager.Confluent.Models.AccessEnvironmentRecord&gt; -&gt; Azure.ResourceManager.Confluent.Models.AccessEnvironmentListResult" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.AccessEnvironmentListResult (kind, metadata, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.AccessEnvironmentListResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="metadata" Type="Azure.ResourceManager.Confluent.Models.ConfluentListMetadata" />
        <Parameter Name="data" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Confluent.Models.AccessEnvironmentRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="kind"> Type of response. </param>
        <param name="metadata"> Metadata of the  environment list. </param>
        <param name="data"> Environment list data. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.AccessEnvironmentListResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.AccessEnvironmentListResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessEnvironmentRecord">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.AccessEnvironmentRecord AccessEnvironmentRecord (string kind = default, string id = default, Azure.ResourceManager.Confluent.Models.MetadataEntity metadata = default, string displayName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.AccessEnvironmentRecord AccessEnvironmentRecord(string kind, string id, class Azure.ResourceManager.Confluent.Models.MetadataEntity metadata, string displayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.AccessEnvironmentRecord(System.String,System.String,Azure.ResourceManager.Confluent.Models.MetadataEntity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AccessEnvironmentRecord (Optional kind As String = Nothing, Optional id As String = Nothing, Optional metadata As MetadataEntity = Nothing, Optional displayName As String = Nothing) As AccessEnvironmentRecord" />
      <MemberSignature Language="F#" Value="static member AccessEnvironmentRecord : string * string * Azure.ResourceManager.Confluent.Models.MetadataEntity * string -&gt; Azure.ResourceManager.Confluent.Models.AccessEnvironmentRecord" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.AccessEnvironmentRecord (kind, id, metadata, displayName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.AccessEnvironmentRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="metadata" Type="Azure.ResourceManager.Confluent.Models.MetadataEntity" />
        <Parameter Name="displayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="kind"> Type of environment. </param>
        <param name="id"> Id of the environment. </param>
        <param name="metadata"> Metadata of the record. </param>
        <param name="displayName"> Display name of the user. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.AccessEnvironmentRecord" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.AccessEnvironmentRecord" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessInvitationListResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.AccessInvitationListResult AccessInvitationListResult (string kind = default, Azure.ResourceManager.Confluent.Models.ConfluentListMetadata metadata = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Confluent.Models.AccessInvitationRecord&gt; data = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.AccessInvitationListResult AccessInvitationListResult(string kind, class Azure.ResourceManager.Confluent.Models.ConfluentListMetadata metadata, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Confluent.Models.AccessInvitationRecord&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.AccessInvitationListResult(System.String,Azure.ResourceManager.Confluent.Models.ConfluentListMetadata,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Confluent.Models.AccessInvitationRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AccessInvitationListResult (Optional kind As String = Nothing, Optional metadata As ConfluentListMetadata = Nothing, Optional data As IEnumerable(Of AccessInvitationRecord) = Nothing) As AccessInvitationListResult" />
      <MemberSignature Language="F#" Value="static member AccessInvitationListResult : string * Azure.ResourceManager.Confluent.Models.ConfluentListMetadata * seq&lt;Azure.ResourceManager.Confluent.Models.AccessInvitationRecord&gt; -&gt; Azure.ResourceManager.Confluent.Models.AccessInvitationListResult" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.AccessInvitationListResult (kind, metadata, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.AccessInvitationListResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="metadata" Type="Azure.ResourceManager.Confluent.Models.ConfluentListMetadata" />
        <Parameter Name="data" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Confluent.Models.AccessInvitationRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="kind"> Type of response. </param>
        <param name="metadata"> Metadata of the list. </param>
        <param name="data"> Data of the invitations list. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.AccessInvitationListResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.AccessInvitationListResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessInvitationRecord">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.AccessInvitationRecord AccessInvitationRecord (string kind = default, string id = default, Azure.ResourceManager.Confluent.Models.MetadataEntity metadata = default, string email = default, string authType = default, string status = default, DateTimeOffset? acceptedOn = default, DateTimeOffset? expireOn = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.AccessInvitationRecord AccessInvitationRecord(string kind, string id, class Azure.ResourceManager.Confluent.Models.MetadataEntity metadata, string email, string authType, string status, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; acceptedOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; expireOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.AccessInvitationRecord(System.String,System.String,Azure.ResourceManager.Confluent.Models.MetadataEntity,System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AccessInvitationRecord (Optional kind As String = Nothing, Optional id As String = Nothing, Optional metadata As MetadataEntity = Nothing, Optional email As String = Nothing, Optional authType As String = Nothing, Optional status As String = Nothing, Optional acceptedOn As Nullable(Of DateTimeOffset) = Nothing, Optional expireOn As Nullable(Of DateTimeOffset) = Nothing) As AccessInvitationRecord" />
      <MemberSignature Language="F#" Value="static member AccessInvitationRecord : string * string * Azure.ResourceManager.Confluent.Models.MetadataEntity * string * string * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.Confluent.Models.AccessInvitationRecord" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.AccessInvitationRecord (kind, id, metadata, email, authType, status, acceptedOn, expireOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.AccessInvitationRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="metadata" Type="Azure.ResourceManager.Confluent.Models.MetadataEntity" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="authType" Type="System.String" />
        <Parameter Name="status" Type="System.String" />
        <Parameter Name="acceptedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="expireOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="kind"> Type of account. </param>
        <param name="id"> Id of the invitation. </param>
        <param name="metadata"> Metadata of the record. </param>
        <param name="email"> Email of the user. </param>
        <param name="authType"> Auth type of the user. </param>
        <param name="status"> Status of the invitation. </param>
        <param name="acceptedOn"> Accepted date time of the invitation. </param>
        <param name="expireOn"> Expiration date time of the invitation. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.AccessInvitationRecord" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.AccessInvitationRecord" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRoleBindingListResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.AccessRoleBindingListResult AccessRoleBindingListResult (string kind = default, Azure.ResourceManager.Confluent.Models.ConfluentListMetadata metadata = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Confluent.Models.AccessRoleBindingRecord&gt; data = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.AccessRoleBindingListResult AccessRoleBindingListResult(string kind, class Azure.ResourceManager.Confluent.Models.ConfluentListMetadata metadata, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Confluent.Models.AccessRoleBindingRecord&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.AccessRoleBindingListResult(System.String,Azure.ResourceManager.Confluent.Models.ConfluentListMetadata,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Confluent.Models.AccessRoleBindingRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AccessRoleBindingListResult (Optional kind As String = Nothing, Optional metadata As ConfluentListMetadata = Nothing, Optional data As IEnumerable(Of AccessRoleBindingRecord) = Nothing) As AccessRoleBindingListResult" />
      <MemberSignature Language="F#" Value="static member AccessRoleBindingListResult : string * Azure.ResourceManager.Confluent.Models.ConfluentListMetadata * seq&lt;Azure.ResourceManager.Confluent.Models.AccessRoleBindingRecord&gt; -&gt; Azure.ResourceManager.Confluent.Models.AccessRoleBindingListResult" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.AccessRoleBindingListResult (kind, metadata, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.AccessRoleBindingListResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="metadata" Type="Azure.ResourceManager.Confluent.Models.ConfluentListMetadata" />
        <Parameter Name="data" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Confluent.Models.AccessRoleBindingRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="kind"> Type of response. </param>
        <param name="metadata"> Metadata of the list. </param>
        <param name="data"> List of role binding. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.AccessRoleBindingListResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.AccessRoleBindingListResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRoleBindingNameListResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.AccessRoleBindingNameListResult AccessRoleBindingNameListResult (string kind = default, Azure.ResourceManager.Confluent.Models.ConfluentListMetadata metadata = default, System.Collections.Generic.IEnumerable&lt;string&gt; data = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.AccessRoleBindingNameListResult AccessRoleBindingNameListResult(string kind, class Azure.ResourceManager.Confluent.Models.ConfluentListMetadata metadata, class System.Collections.Generic.IEnumerable`1&lt;string&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.AccessRoleBindingNameListResult(System.String,Azure.ResourceManager.Confluent.Models.ConfluentListMetadata,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AccessRoleBindingNameListResult (Optional kind As String = Nothing, Optional metadata As ConfluentListMetadata = Nothing, Optional data As IEnumerable(Of String) = Nothing) As AccessRoleBindingNameListResult" />
      <MemberSignature Language="F#" Value="static member AccessRoleBindingNameListResult : string * Azure.ResourceManager.Confluent.Models.ConfluentListMetadata * seq&lt;string&gt; -&gt; Azure.ResourceManager.Confluent.Models.AccessRoleBindingNameListResult" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.AccessRoleBindingNameListResult (kind, metadata, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.AccessRoleBindingNameListResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="metadata" Type="Azure.ResourceManager.Confluent.Models.ConfluentListMetadata" />
        <Parameter Name="data" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="kind"> Type of response. </param>
        <param name="metadata"> Metadata of the list. </param>
        <param name="data"> List of role binding names. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.AccessRoleBindingNameListResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.AccessRoleBindingNameListResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRoleBindingRecord">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.AccessRoleBindingRecord AccessRoleBindingRecord (string kind = default, string id = default, Azure.ResourceManager.Confluent.Models.MetadataEntity metadata = default, string principal = default, string roleName = default, string crnPattern = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.AccessRoleBindingRecord AccessRoleBindingRecord(string kind, string id, class Azure.ResourceManager.Confluent.Models.MetadataEntity metadata, string principal, string roleName, string crnPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.AccessRoleBindingRecord(System.String,System.String,Azure.ResourceManager.Confluent.Models.MetadataEntity,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AccessRoleBindingRecord (Optional kind As String = Nothing, Optional id As String = Nothing, Optional metadata As MetadataEntity = Nothing, Optional principal As String = Nothing, Optional roleName As String = Nothing, Optional crnPattern As String = Nothing) As AccessRoleBindingRecord" />
      <MemberSignature Language="F#" Value="static member AccessRoleBindingRecord : string * string * Azure.ResourceManager.Confluent.Models.MetadataEntity * string * string * string -&gt; Azure.ResourceManager.Confluent.Models.AccessRoleBindingRecord" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.AccessRoleBindingRecord (kind, id, metadata, principal, roleName, crnPattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.AccessRoleBindingRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="metadata" Type="Azure.ResourceManager.Confluent.Models.MetadataEntity" />
        <Parameter Name="principal" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="crnPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="kind"> The type of the resource. </param>
        <param name="id"> Id of the role binding. </param>
        <param name="metadata"> Metadata of the record. </param>
        <param name="principal"> The principal User or Group to bind the role to. </param>
        <param name="roleName"> The name of the role to bind to the principal. </param>
        <param name="crnPattern"> A CRN that specifies the scope and resource patterns necessary for the role to bind. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.AccessRoleBindingRecord" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.AccessRoleBindingRecord" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessServiceAccountListResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.AccessServiceAccountListResult AccessServiceAccountListResult (string kind = default, Azure.ResourceManager.Confluent.Models.ConfluentListMetadata metadata = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Confluent.Models.AccessServiceAccountRecord&gt; data = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.AccessServiceAccountListResult AccessServiceAccountListResult(string kind, class Azure.ResourceManager.Confluent.Models.ConfluentListMetadata metadata, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Confluent.Models.AccessServiceAccountRecord&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.AccessServiceAccountListResult(System.String,Azure.ResourceManager.Confluent.Models.ConfluentListMetadata,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Confluent.Models.AccessServiceAccountRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AccessServiceAccountListResult (Optional kind As String = Nothing, Optional metadata As ConfluentListMetadata = Nothing, Optional data As IEnumerable(Of AccessServiceAccountRecord) = Nothing) As AccessServiceAccountListResult" />
      <MemberSignature Language="F#" Value="static member AccessServiceAccountListResult : string * Azure.ResourceManager.Confluent.Models.ConfluentListMetadata * seq&lt;Azure.ResourceManager.Confluent.Models.AccessServiceAccountRecord&gt; -&gt; Azure.ResourceManager.Confluent.Models.AccessServiceAccountListResult" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.AccessServiceAccountListResult (kind, metadata, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.AccessServiceAccountListResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="metadata" Type="Azure.ResourceManager.Confluent.Models.ConfluentListMetadata" />
        <Parameter Name="data" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Confluent.Models.AccessServiceAccountRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="kind"> Type of response. </param>
        <param name="metadata"> Metadata of the list. </param>
        <param name="data"> Data of the service accounts list. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.AccessServiceAccountListResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.AccessServiceAccountListResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessServiceAccountRecord">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.AccessServiceAccountRecord AccessServiceAccountRecord (string kind = default, string id = default, Azure.ResourceManager.Confluent.Models.MetadataEntity metadata = default, string displayName = default, string description = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.AccessServiceAccountRecord AccessServiceAccountRecord(string kind, string id, class Azure.ResourceManager.Confluent.Models.MetadataEntity metadata, string displayName, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.AccessServiceAccountRecord(System.String,System.String,Azure.ResourceManager.Confluent.Models.MetadataEntity,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AccessServiceAccountRecord (Optional kind As String = Nothing, Optional id As String = Nothing, Optional metadata As MetadataEntity = Nothing, Optional displayName As String = Nothing, Optional description As String = Nothing) As AccessServiceAccountRecord" />
      <MemberSignature Language="F#" Value="static member AccessServiceAccountRecord : string * string * Azure.ResourceManager.Confluent.Models.MetadataEntity * string * string -&gt; Azure.ResourceManager.Confluent.Models.AccessServiceAccountRecord" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.AccessServiceAccountRecord (kind, id, metadata, displayName, description)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.AccessServiceAccountRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="metadata" Type="Azure.ResourceManager.Confluent.Models.MetadataEntity" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="kind"> Type of account. </param>
        <param name="id"> Id of the service account. </param>
        <param name="metadata"> Metadata of the record. </param>
        <param name="displayName"> Name of the service account. </param>
        <param name="description"> Description of the service account. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.AccessServiceAccountRecord" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.AccessServiceAccountRecord" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessUserListResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.AccessUserListResult AccessUserListResult (string kind = default, Azure.ResourceManager.Confluent.Models.ConfluentListMetadata metadata = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Confluent.Models.AccessUserRecord&gt; data = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.AccessUserListResult AccessUserListResult(string kind, class Azure.ResourceManager.Confluent.Models.ConfluentListMetadata metadata, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Confluent.Models.AccessUserRecord&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.AccessUserListResult(System.String,Azure.ResourceManager.Confluent.Models.ConfluentListMetadata,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Confluent.Models.AccessUserRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AccessUserListResult (Optional kind As String = Nothing, Optional metadata As ConfluentListMetadata = Nothing, Optional data As IEnumerable(Of AccessUserRecord) = Nothing) As AccessUserListResult" />
      <MemberSignature Language="F#" Value="static member AccessUserListResult : string * Azure.ResourceManager.Confluent.Models.ConfluentListMetadata * seq&lt;Azure.ResourceManager.Confluent.Models.AccessUserRecord&gt; -&gt; Azure.ResourceManager.Confluent.Models.AccessUserListResult" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.AccessUserListResult (kind, metadata, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.AccessUserListResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="metadata" Type="Azure.ResourceManager.Confluent.Models.ConfluentListMetadata" />
        <Parameter Name="data" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Confluent.Models.AccessUserRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="kind"> Type of response. </param>
        <param name="metadata"> Metadata of the list. </param>
        <param name="data"> Data of the users list. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.AccessUserListResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.AccessUserListResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessUserRecord">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.AccessUserRecord AccessUserRecord (string kind = default, string id = default, Azure.ResourceManager.Confluent.Models.MetadataEntity metadata = default, string email = default, string fullName = default, string authType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.AccessUserRecord AccessUserRecord(string kind, string id, class Azure.ResourceManager.Confluent.Models.MetadataEntity metadata, string email, string fullName, string authType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.AccessUserRecord(System.String,System.String,Azure.ResourceManager.Confluent.Models.MetadataEntity,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AccessUserRecord (Optional kind As String = Nothing, Optional id As String = Nothing, Optional metadata As MetadataEntity = Nothing, Optional email As String = Nothing, Optional fullName As String = Nothing, Optional authType As String = Nothing) As AccessUserRecord" />
      <MemberSignature Language="F#" Value="static member AccessUserRecord : string * string * Azure.ResourceManager.Confluent.Models.MetadataEntity * string * string * string -&gt; Azure.ResourceManager.Confluent.Models.AccessUserRecord" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.AccessUserRecord (kind, id, metadata, email, fullName, authType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.AccessUserRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="metadata" Type="Azure.ResourceManager.Confluent.Models.MetadataEntity" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="fullName" Type="System.String" />
        <Parameter Name="authType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="kind"> Type of account. </param>
        <param name="id"> Id of the user. </param>
        <param name="metadata"> Metadata of the record. </param>
        <param name="email"> Email of the user. </param>
        <param name="fullName"> Name of the user. </param>
        <param name="authType"> Auth type of the user. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.AccessUserRecord" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.AccessUserRecord" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApiKeyOwnerEntity">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.ApiKeyOwnerEntity ApiKeyOwnerEntity (string id = default, string related = default, string resourceName = default, string kind = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.ApiKeyOwnerEntity ApiKeyOwnerEntity(string id, string related, string resourceName, string kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ApiKeyOwnerEntity(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ApiKeyOwnerEntity (Optional id As String = Nothing, Optional related As String = Nothing, Optional resourceName As String = Nothing, Optional kind As String = Nothing) As ApiKeyOwnerEntity" />
      <MemberSignature Language="F#" Value="static member ApiKeyOwnerEntity : string * string * string * string -&gt; Azure.ResourceManager.Confluent.Models.ApiKeyOwnerEntity" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ApiKeyOwnerEntity (id, related, resourceName, kind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.ApiKeyOwnerEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="related" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="kind" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> API Key owner id. </param>
        <param name="related"> API URL for accessing or modifying the referred object. </param>
        <param name="resourceName"> CRN reference to the referred resource. </param>
        <param name="kind"> Type of the owner service or user account. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.ApiKeyOwnerEntity" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.ApiKeyOwnerEntity" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApiKeyResourceEntity">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.ApiKeyResourceEntity ApiKeyResourceEntity (string id = default, string environment = default, string related = default, string resourceName = default, string kind = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.ApiKeyResourceEntity ApiKeyResourceEntity(string id, string environment, string related, string resourceName, string kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ApiKeyResourceEntity(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ApiKeyResourceEntity (Optional id As String = Nothing, Optional environment As String = Nothing, Optional related As String = Nothing, Optional resourceName As String = Nothing, Optional kind As String = Nothing) As ApiKeyResourceEntity" />
      <MemberSignature Language="F#" Value="static member ApiKeyResourceEntity : string * string * string * string * string -&gt; Azure.ResourceManager.Confluent.Models.ApiKeyResourceEntity" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ApiKeyResourceEntity (id, environment, related, resourceName, kind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.ApiKeyResourceEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="environment" Type="System.String" />
        <Parameter Name="related" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="kind" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> Id of the resource. </param>
        <param name="environment"> The environment of the api key. </param>
        <param name="related"> API URL for accessing or modifying the api key resource object. </param>
        <param name="resourceName"> CRN reference to the referred resource. </param>
        <param name="kind"> Type of the owner which can be service or user account. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.ApiKeyResourceEntity" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.ApiKeyResourceEntity" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApiKeySpecEntity">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.ApiKeySpecEntity ApiKeySpecEntity (string description = default, string name = default, string secret = default, Azure.ResourceManager.Confluent.Models.ApiKeyResourceEntity resource = default, Azure.ResourceManager.Confluent.Models.ApiKeyOwnerEntity owner = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.ApiKeySpecEntity ApiKeySpecEntity(string description, string name, string secret, class Azure.ResourceManager.Confluent.Models.ApiKeyResourceEntity resource, class Azure.ResourceManager.Confluent.Models.ApiKeyOwnerEntity owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ApiKeySpecEntity(System.String,System.String,System.String,Azure.ResourceManager.Confluent.Models.ApiKeyResourceEntity,Azure.ResourceManager.Confluent.Models.ApiKeyOwnerEntity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ApiKeySpecEntity (Optional description As String = Nothing, Optional name As String = Nothing, Optional secret As String = Nothing, Optional resource As ApiKeyResourceEntity = Nothing, Optional owner As ApiKeyOwnerEntity = Nothing) As ApiKeySpecEntity" />
      <MemberSignature Language="F#" Value="static member ApiKeySpecEntity : string * string * string * Azure.ResourceManager.Confluent.Models.ApiKeyResourceEntity * Azure.ResourceManager.Confluent.Models.ApiKeyOwnerEntity -&gt; Azure.ResourceManager.Confluent.Models.ApiKeySpecEntity" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ApiKeySpecEntity (description, name, secret, resource, owner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.ApiKeySpecEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="secret" Type="System.String" />
        <Parameter Name="resource" Type="Azure.ResourceManager.Confluent.Models.ApiKeyResourceEntity" />
        <Parameter Name="owner" Type="Azure.ResourceManager.Confluent.Models.ApiKeyOwnerEntity" />
      </Parameters>
      <Docs>
        <param name="description"> The description of the API Key. </param>
        <param name="name"> The name of the API Key. </param>
        <param name="secret"> API Key Secret. </param>
        <param name="resource"> Specification of the cluster. </param>
        <param name="owner"> Specification of the cluster. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.ApiKeySpecEntity" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.ApiKeySpecEntity" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClusterByokEntity">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.ClusterByokEntity ClusterByokEntity (string id = default, string related = default, string resourceName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.ClusterByokEntity ClusterByokEntity(string id, string related, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ClusterByokEntity(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClusterByokEntity (Optional id As String = Nothing, Optional related As String = Nothing, Optional resourceName As String = Nothing) As ClusterByokEntity" />
      <MemberSignature Language="F#" Value="static member ClusterByokEntity : string * string * string -&gt; Azure.ResourceManager.Confluent.Models.ClusterByokEntity" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ClusterByokEntity (id, related, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.ClusterByokEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="related" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> ID of the referred resource. </param>
        <param name="related"> API URL for accessing or modifying the referred object. </param>
        <param name="resourceName"> CRN reference to the referred resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.ClusterByokEntity" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.ClusterByokEntity" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClusterEnvironmentEntity">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.ClusterEnvironmentEntity ClusterEnvironmentEntity (string id = default, string environment = default, string related = default, string resourceName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.ClusterEnvironmentEntity ClusterEnvironmentEntity(string id, string environment, string related, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ClusterEnvironmentEntity(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClusterEnvironmentEntity (Optional id As String = Nothing, Optional environment As String = Nothing, Optional related As String = Nothing, Optional resourceName As String = Nothing) As ClusterEnvironmentEntity" />
      <MemberSignature Language="F#" Value="static member ClusterEnvironmentEntity : string * string * string * string -&gt; Azure.ResourceManager.Confluent.Models.ClusterEnvironmentEntity" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ClusterEnvironmentEntity (id, environment, related, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.ClusterEnvironmentEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="environment" Type="System.String" />
        <Parameter Name="related" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> ID of the referred resource. </param>
        <param name="environment"> Environment of the referred resource. </param>
        <param name="related"> API URL for accessing or modifying the referred object. </param>
        <param name="resourceName"> CRN reference to the referred resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.ClusterEnvironmentEntity" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.ClusterEnvironmentEntity" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClusterNetworkEntity">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.ClusterNetworkEntity ClusterNetworkEntity (string id = default, string environment = default, string related = default, string resourceName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.ClusterNetworkEntity ClusterNetworkEntity(string id, string environment, string related, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ClusterNetworkEntity(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClusterNetworkEntity (Optional id As String = Nothing, Optional environment As String = Nothing, Optional related As String = Nothing, Optional resourceName As String = Nothing) As ClusterNetworkEntity" />
      <MemberSignature Language="F#" Value="static member ClusterNetworkEntity : string * string * string * string -&gt; Azure.ResourceManager.Confluent.Models.ClusterNetworkEntity" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ClusterNetworkEntity (id, environment, related, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.ClusterNetworkEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="environment" Type="System.String" />
        <Parameter Name="related" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> ID of the referred resource. </param>
        <param name="environment"> Environment of the referred resource. </param>
        <param name="related"> API URL for accessing or modifying the referred object. </param>
        <param name="resourceName"> CRN reference to the referred resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.ClusterNetworkEntity" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.ClusterNetworkEntity" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClusterSpecEntity">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.ClusterSpecEntity ClusterSpecEntity (string displayName = default, string availability = default, string cloud = default, string zone = default, string region = default, string kafkaBootstrapEndpoint = default, string httpEndpoint = default, string apiEndpoint = default, string configKind = default, Azure.ResourceManager.Confluent.Models.ClusterEnvironmentEntity environment = default, Azure.ResourceManager.Confluent.Models.ClusterNetworkEntity network = default, Azure.ResourceManager.Confluent.Models.ClusterByokEntity byok = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.ClusterSpecEntity ClusterSpecEntity(string displayName, string availability, string cloud, string zone, string region, string kafkaBootstrapEndpoint, string httpEndpoint, string apiEndpoint, string configKind, class Azure.ResourceManager.Confluent.Models.ClusterEnvironmentEntity environment, class Azure.ResourceManager.Confluent.Models.ClusterNetworkEntity network, class Azure.ResourceManager.Confluent.Models.ClusterByokEntity byok) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ClusterSpecEntity(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.Confluent.Models.ClusterEnvironmentEntity,Azure.ResourceManager.Confluent.Models.ClusterNetworkEntity,Azure.ResourceManager.Confluent.Models.ClusterByokEntity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClusterSpecEntity (Optional displayName As String = Nothing, Optional availability As String = Nothing, Optional cloud As String = Nothing, Optional zone As String = Nothing, Optional region As String = Nothing, Optional kafkaBootstrapEndpoint As String = Nothing, Optional httpEndpoint As String = Nothing, Optional apiEndpoint As String = Nothing, Optional configKind As String = Nothing, Optional environment As ClusterEnvironmentEntity = Nothing, Optional network As ClusterNetworkEntity = Nothing, Optional byok As ClusterByokEntity = Nothing) As ClusterSpecEntity" />
      <MemberSignature Language="F#" Value="static member ClusterSpecEntity : string * string * string * string * string * string * string * string * string * Azure.ResourceManager.Confluent.Models.ClusterEnvironmentEntity * Azure.ResourceManager.Confluent.Models.ClusterNetworkEntity * Azure.ResourceManager.Confluent.Models.ClusterByokEntity -&gt; Azure.ResourceManager.Confluent.Models.ClusterSpecEntity" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ClusterSpecEntity (displayName, availability, cloud, zone, region, kafkaBootstrapEndpoint, httpEndpoint, apiEndpoint, configKind, environment, network, byok)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.ClusterSpecEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="availability" Type="System.String" />
        <Parameter Name="cloud" Type="System.String" />
        <Parameter Name="zone" Type="System.String" />
        <Parameter Name="region" Type="System.String" />
        <Parameter Name="kafkaBootstrapEndpoint" Type="System.String" />
        <Parameter Name="httpEndpoint" Type="System.String" />
        <Parameter Name="apiEndpoint" Type="System.String" />
        <Parameter Name="configKind" Type="System.String" />
        <Parameter Name="environment" Type="Azure.ResourceManager.Confluent.Models.ClusterEnvironmentEntity" />
        <Parameter Name="network" Type="Azure.ResourceManager.Confluent.Models.ClusterNetworkEntity" />
        <Parameter Name="byok" Type="Azure.ResourceManager.Confluent.Models.ClusterByokEntity" />
      </Parameters>
      <Docs>
        <param name="displayName"> The name of the cluster. </param>
        <param name="availability"> The availability zone configuration of the cluster. </param>
        <param name="cloud"> The cloud service provider. </param>
        <param name="zone"> type of zone availability. </param>
        <param name="region"> The cloud service provider region. </param>
        <param name="kafkaBootstrapEndpoint"> The bootstrap endpoint used by Kafka clients to connect to the cluster. </param>
        <param name="httpEndpoint"> The cluster HTTP request URL. </param>
        <param name="apiEndpoint"> The Kafka API cluster endpoint. </param>
        <param name="configKind"> Specification of the cluster. </param>
        <param name="environment"> Specification of the cluster. </param>
        <param name="network"> Specification of the cluster. </param>
        <param name="byok"> Specification of the cluster. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.ClusterSpecEntity" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.ClusterSpecEntity" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClusterStatusEntity">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.ClusterStatusEntity ClusterStatusEntity (string phase = default, int? cku = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.ClusterStatusEntity ClusterStatusEntity(string phase, valuetype System.Nullable`1&lt;int32&gt; cku) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ClusterStatusEntity(System.String,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClusterStatusEntity (Optional phase As String = Nothing, Optional cku As Nullable(Of Integer) = Nothing) As ClusterStatusEntity" />
      <MemberSignature Language="F#" Value="static member ClusterStatusEntity : string * Nullable&lt;int&gt; -&gt; Azure.ResourceManager.Confluent.Models.ClusterStatusEntity" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ClusterStatusEntity (phase, cku)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.ClusterStatusEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phase" Type="System.String" />
        <Parameter Name="cku" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="phase"> The lifecycle phase of the cluster. </param>
        <param name="cku"> The number of Confluent Kafka Units. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.ClusterStatusEntity" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.ClusterStatusEntity" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfluentAgreement">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.ConfluentAgreement ConfluentAgreement (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string publisher = default, string product = default, string plan = default, string licenseTextLink = default, string privacyPolicyLink = default, DateTimeOffset? retrieveOn = default, string signature = default, bool? isAccepted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.ConfluentAgreement ConfluentAgreement(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string publisher, string product, string plan, string licenseTextLink, string privacyPolicyLink, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; retrieveOn, string signature, valuetype System.Nullable`1&lt;bool&gt; isAccepted) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ConfluentAgreement(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConfluentAgreement (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional publisher As String = Nothing, Optional product As String = Nothing, Optional plan As String = Nothing, Optional licenseTextLink As String = Nothing, Optional privacyPolicyLink As String = Nothing, Optional retrieveOn As Nullable(Of DateTimeOffset) = Nothing, Optional signature As String = Nothing, Optional isAccepted As Nullable(Of Boolean) = Nothing) As ConfluentAgreement" />
      <MemberSignature Language="F#" Value="static member ConfluentAgreement : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * string * string * string * string * Nullable&lt;DateTimeOffset&gt; * string * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.Confluent.Models.ConfluentAgreement" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ConfluentAgreement (id, name, resourceType, systemData, publisher, product, plan, licenseTextLink, privacyPolicyLink, retrieveOn, signature, isAccepted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.ConfluentAgreement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="publisher" Type="System.String" />
        <Parameter Name="product" Type="System.String" />
        <Parameter Name="plan" Type="System.String" />
        <Parameter Name="licenseTextLink" Type="System.String" />
        <Parameter Name="privacyPolicyLink" Type="System.String" />
        <Parameter Name="retrieveOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="signature" Type="System.String" />
        <Parameter Name="isAccepted" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="publisher"> Publisher identifier string. </param>
        <param name="product"> Product identifier string. </param>
        <param name="plan"> Plan identifier string. </param>
        <param name="licenseTextLink"> Link to HTML with Microsoft and Publisher terms. </param>
        <param name="privacyPolicyLink"> Link to the privacy policy of the publisher. </param>
        <param name="retrieveOn"> Date and time in UTC of when the terms were accepted. This is empty if Accepted is false. </param>
        <param name="signature"> Terms signature. </param>
        <param name="isAccepted"> If any version of the terms have been accepted, otherwise false. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.ConfluentAgreement" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.ConfluentAgreement" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfluentApiKeyRecord">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.ConfluentApiKeyRecord ConfluentApiKeyRecord (string kind = default, string id = default, Azure.ResourceManager.Confluent.Models.SCMetadataEntity metadata = default, Azure.ResourceManager.Confluent.Models.ApiKeySpecEntity spec = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.ConfluentApiKeyRecord ConfluentApiKeyRecord(string kind, string id, class Azure.ResourceManager.Confluent.Models.SCMetadataEntity metadata, class Azure.ResourceManager.Confluent.Models.ApiKeySpecEntity spec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ConfluentApiKeyRecord(System.String,System.String,Azure.ResourceManager.Confluent.Models.SCMetadataEntity,Azure.ResourceManager.Confluent.Models.ApiKeySpecEntity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConfluentApiKeyRecord (Optional kind As String = Nothing, Optional id As String = Nothing, Optional metadata As SCMetadataEntity = Nothing, Optional spec As ApiKeySpecEntity = Nothing) As ConfluentApiKeyRecord" />
      <MemberSignature Language="F#" Value="static member ConfluentApiKeyRecord : string * string * Azure.ResourceManager.Confluent.Models.SCMetadataEntity * Azure.ResourceManager.Confluent.Models.ApiKeySpecEntity -&gt; Azure.ResourceManager.Confluent.Models.ConfluentApiKeyRecord" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ConfluentApiKeyRecord (kind, id, metadata, spec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.ConfluentApiKeyRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="metadata" Type="Azure.ResourceManager.Confluent.Models.SCMetadataEntity" />
        <Parameter Name="spec" Type="Azure.ResourceManager.Confluent.Models.ApiKeySpecEntity" />
      </Parameters>
      <Docs>
        <param name="kind"> Type of api key. </param>
        <param name="id"> Id of the api key. </param>
        <param name="metadata"> Metadata of the record. </param>
        <param name="spec"> Specification of the API Key. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.ConfluentApiKeyRecord" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.ConfluentApiKeyRecord" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfluentListMetadata">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.ConfluentListMetadata ConfluentListMetadata (string first = default, string last = default, string prev = default, string next = default, int? totalSize = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.ConfluentListMetadata ConfluentListMetadata(string first, string last, string prev, string next, valuetype System.Nullable`1&lt;int32&gt; totalSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ConfluentListMetadata(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConfluentListMetadata (Optional first As String = Nothing, Optional last As String = Nothing, Optional prev As String = Nothing, Optional next As String = Nothing, Optional totalSize As Nullable(Of Integer) = Nothing) As ConfluentListMetadata" />
      <MemberSignature Language="F#" Value="static member ConfluentListMetadata : string * string * string * string * Nullable&lt;int&gt; -&gt; Azure.ResourceManager.Confluent.Models.ConfluentListMetadata" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ConfluentListMetadata (first, last, prev, next, totalSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.ConfluentListMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.String" />
        <Parameter Name="last" Type="System.String" />
        <Parameter Name="prev" Type="System.String" />
        <Parameter Name="next" Type="System.String" />
        <Parameter Name="totalSize" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="first"> First page of the list. </param>
        <param name="last"> Last page of the list. </param>
        <param name="prev"> Previous page of the list. </param>
        <param name="next"> Next page of the list. </param>
        <param name="totalSize"> Total size of the list. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.ConfluentListMetadata" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.ConfluentListMetadata" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfluentOfferDetail">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.ConfluentOfferDetail ConfluentOfferDetail (string publisherId, string id, string planId, string planName, string termUnit, Azure.ResourceManager.Confluent.Models.ConfluentSaaSOfferStatus? status);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.ConfluentOfferDetail ConfluentOfferDetail(string publisherId, string id, string planId, string planName, string termUnit, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Confluent.Models.ConfluentSaaSOfferStatus&gt; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ConfluentOfferDetail(System.String,System.String,System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.Confluent.Models.ConfluentSaaSOfferStatus})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConfluentOfferDetail (publisherId As String, id As String, planId As String, planName As String, termUnit As String, status As Nullable(Of ConfluentSaaSOfferStatus)) As ConfluentOfferDetail" />
      <MemberSignature Language="F#" Value="static member ConfluentOfferDetail : string * string * string * string * string * Nullable&lt;Azure.ResourceManager.Confluent.Models.ConfluentSaaSOfferStatus&gt; -&gt; Azure.ResourceManager.Confluent.Models.ConfluentOfferDetail" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ConfluentOfferDetail (publisherId, id, planId, planName, termUnit, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.ConfluentOfferDetail</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publisherId" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="planId" Type="System.String" />
        <Parameter Name="planName" Type="System.String" />
        <Parameter Name="termUnit" Type="System.String" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.Confluent.Models.ConfluentSaaSOfferStatus&gt;" />
      </Parameters>
      <Docs>
        <param name="publisherId"> Publisher Id. </param>
        <param name="id"> Offer Id. </param>
        <param name="planId"> Offer Plan Id. </param>
        <param name="planName"> Offer Plan Name. </param>
        <param name="termUnit"> Offer Plan Term unit. </param>
        <param name="status"> SaaS Offer Status. </param>
        <summary> Initializes a new instance of <see cref="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ConfluentOfferDetail(System.String,System.String,System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.Confluent.Models.ConfluentSaaSOfferStatus})" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.ConfluentOfferDetail" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfluentOrganizationData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.ConfluentOrganizationData ConfluentOrganizationData (Azure.Core.ResourceIdentifier id, string name, Azure.Core.ResourceType resourceType, Azure.ResourceManager.Models.SystemData systemData, System.Collections.Generic.IDictionary&lt;string,string&gt; tags, Azure.Core.AzureLocation location, DateTimeOffset? createdOn, Azure.ResourceManager.Confluent.Models.ConfluentProvisionState? provisioningState, Guid? organizationId, Uri ssoUri, Azure.ResourceManager.Confluent.Models.ConfluentOfferDetail offerDetail, Azure.ResourceManager.Confluent.Models.ConfluentUserDetail userDetail);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.ConfluentOrganizationData ConfluentOrganizationData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Confluent.Models.ConfluentProvisionState&gt; provisioningState, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; organizationId, class System.Uri ssoUri, class Azure.ResourceManager.Confluent.Models.ConfluentOfferDetail offerDetail, class Azure.ResourceManager.Confluent.Models.ConfluentUserDetail userDetail) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ConfluentOrganizationData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.Confluent.Models.ConfluentProvisionState},System.Nullable{System.Guid},System.Uri,Azure.ResourceManager.Confluent.Models.ConfluentOfferDetail,Azure.ResourceManager.Confluent.Models.ConfluentUserDetail)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConfluentOrganizationData (id As ResourceIdentifier, name As String, resourceType As ResourceType, systemData As SystemData, tags As IDictionary(Of String, String), location As AzureLocation, createdOn As Nullable(Of DateTimeOffset), provisioningState As Nullable(Of ConfluentProvisionState), organizationId As Nullable(Of Guid), ssoUri As Uri, offerDetail As ConfluentOfferDetail, userDetail As ConfluentUserDetail) As ConfluentOrganizationData" />
      <MemberSignature Language="F#" Value="static member ConfluentOrganizationData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.Confluent.Models.ConfluentProvisionState&gt; * Nullable&lt;Guid&gt; * Uri * Azure.ResourceManager.Confluent.Models.ConfluentOfferDetail * Azure.ResourceManager.Confluent.Models.ConfluentUserDetail -&gt; Azure.ResourceManager.Confluent.ConfluentOrganizationData" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ConfluentOrganizationData (id, name, resourceType, systemData, tags, location, createdOn, provisioningState, organizationId, ssoUri, offerDetail, userDetail)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.ConfluentOrganizationData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Confluent.Models.ConfluentProvisionState&gt;" />
        <Parameter Name="organizationId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="ssoUri" Type="System.Uri" />
        <Parameter Name="offerDetail" Type="Azure.ResourceManager.Confluent.Models.ConfluentOfferDetail" />
        <Parameter Name="userDetail" Type="Azure.ResourceManager.Confluent.Models.ConfluentUserDetail" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="createdOn"> The creation time of the resource. </param>
        <param name="provisioningState"> Provision states for confluent RP. </param>
        <param name="organizationId"> Id of the Confluent organization. </param>
        <param name="ssoUri"> SSO url for the Confluent organization. </param>
        <param name="offerDetail"> Confluent offer detail. </param>
        <param name="userDetail"> Subscriber detail. </param>
        <summary> Initializes a new instance of ConfluentOrganizationData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.ConfluentOrganizationData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfluentOrganizationData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.ConfluentOrganizationData ConfluentOrganizationData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, DateTimeOffset? createdOn = default, Azure.ResourceManager.Confluent.Models.ConfluentProvisionState? provisioningState = default, Guid? organizationId = default, Uri ssoUri = default, Azure.ResourceManager.Confluent.Models.ConfluentOfferDetail offerDetail = default, Azure.ResourceManager.Confluent.Models.ConfluentUserDetail userDetail = default, string linkOrganizationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.ConfluentOrganizationData ConfluentOrganizationData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Confluent.Models.ConfluentProvisionState&gt; provisioningState, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; organizationId, class System.Uri ssoUri, class Azure.ResourceManager.Confluent.Models.ConfluentOfferDetail offerDetail, class Azure.ResourceManager.Confluent.Models.ConfluentUserDetail userDetail, string linkOrganizationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ConfluentOrganizationData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.Confluent.Models.ConfluentProvisionState},System.Nullable{System.Guid},System.Uri,Azure.ResourceManager.Confluent.Models.ConfluentOfferDetail,Azure.ResourceManager.Confluent.Models.ConfluentUserDetail,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConfluentOrganizationData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional provisioningState As Nullable(Of ConfluentProvisionState) = Nothing, Optional organizationId As Nullable(Of Guid) = Nothing, Optional ssoUri As Uri = Nothing, Optional offerDetail As ConfluentOfferDetail = Nothing, Optional userDetail As ConfluentUserDetail = Nothing, Optional linkOrganizationToken As String = Nothing) As ConfluentOrganizationData" />
      <MemberSignature Language="F#" Value="static member ConfluentOrganizationData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.Confluent.Models.ConfluentProvisionState&gt; * Nullable&lt;Guid&gt; * Uri * Azure.ResourceManager.Confluent.Models.ConfluentOfferDetail * Azure.ResourceManager.Confluent.Models.ConfluentUserDetail * string -&gt; Azure.ResourceManager.Confluent.ConfluentOrganizationData" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ConfluentOrganizationData (id, name, resourceType, systemData, tags, location, createdOn, provisioningState, organizationId, ssoUri, offerDetail, userDetail, linkOrganizationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.ConfluentOrganizationData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Confluent.Models.ConfluentProvisionState&gt;" />
        <Parameter Name="organizationId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="ssoUri" Type="System.Uri" />
        <Parameter Name="offerDetail" Type="Azure.ResourceManager.Confluent.Models.ConfluentOfferDetail" />
        <Parameter Name="userDetail" Type="Azure.ResourceManager.Confluent.Models.ConfluentUserDetail" />
        <Parameter Name="linkOrganizationToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="createdOn"> The creation time of the resource. </param>
        <param name="provisioningState"> Provision states for confluent RP. </param>
        <param name="organizationId"> Id of the Confluent organization. </param>
        <param name="ssoUri"> SSO url for the Confluent organization. </param>
        <param name="offerDetail"> Confluent offer detail. </param>
        <param name="userDetail"> Subscriber detail. </param>
        <param name="linkOrganizationToken"> Link an existing Confluent organization. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.ConfluentOrganizationData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.ConfluentOrganizationData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfluentOrganizationValidationResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.ConfluentOrganizationValidationResult ConfluentOrganizationValidationResult (System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; info = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.ConfluentOrganizationValidationResult ConfluentOrganizationValidationResult(class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt; info) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ConfluentOrganizationValidationResult(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConfluentOrganizationValidationResult (Optional info As IReadOnlyDictionary(Of String, String) = Nothing) As ConfluentOrganizationValidationResult" />
      <MemberSignature Language="F#" Value="static member ConfluentOrganizationValidationResult : System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt; -&gt; Azure.ResourceManager.Confluent.Models.ConfluentOrganizationValidationResult" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ConfluentOrganizationValidationResult info" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.ConfluentOrganizationValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="info"> Info from the response. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.ConfluentOrganizationValidationResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.ConfluentOrganizationValidationResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfluentRegionListResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.ConfluentRegionListResult ConfluentRegionListResult (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Confluent.Models.ConfluentRegionRecord&gt; data = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.ConfluentRegionListResult ConfluentRegionListResult(class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Confluent.Models.ConfluentRegionRecord&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ConfluentRegionListResult(System.Collections.Generic.IEnumerable{Azure.ResourceManager.Confluent.Models.ConfluentRegionRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConfluentRegionListResult (Optional data As IEnumerable(Of ConfluentRegionRecord) = Nothing) As ConfluentRegionListResult" />
      <MemberSignature Language="F#" Value="static member ConfluentRegionListResult : seq&lt;Azure.ResourceManager.Confluent.Models.ConfluentRegionRecord&gt; -&gt; Azure.ResourceManager.Confluent.Models.ConfluentRegionListResult" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ConfluentRegionListResult data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.ConfluentRegionListResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Confluent.Models.ConfluentRegionRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="data"> List of regions supported by confluent. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.ConfluentRegionListResult" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.ConfluentRegionListResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfluentRegionRecord">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.ConfluentRegionRecord ConfluentRegionRecord (string kind = default, string id = default, Azure.ResourceManager.Confluent.Models.SCMetadataEntity metadata = default, Azure.ResourceManager.Confluent.Models.RegionSpecEntity spec = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.ConfluentRegionRecord ConfluentRegionRecord(string kind, string id, class Azure.ResourceManager.Confluent.Models.SCMetadataEntity metadata, class Azure.ResourceManager.Confluent.Models.RegionSpecEntity spec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ConfluentRegionRecord(System.String,System.String,Azure.ResourceManager.Confluent.Models.SCMetadataEntity,Azure.ResourceManager.Confluent.Models.RegionSpecEntity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConfluentRegionRecord (Optional kind As String = Nothing, Optional id As String = Nothing, Optional metadata As SCMetadataEntity = Nothing, Optional spec As RegionSpecEntity = Nothing) As ConfluentRegionRecord" />
      <MemberSignature Language="F#" Value="static member ConfluentRegionRecord : string * string * Azure.ResourceManager.Confluent.Models.SCMetadataEntity * Azure.ResourceManager.Confluent.Models.RegionSpecEntity -&gt; Azure.ResourceManager.Confluent.Models.ConfluentRegionRecord" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.ConfluentRegionRecord (kind, id, metadata, spec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.ConfluentRegionRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="metadata" Type="Azure.ResourceManager.Confluent.Models.SCMetadataEntity" />
        <Parameter Name="spec" Type="Azure.ResourceManager.Confluent.Models.RegionSpecEntity" />
      </Parameters>
      <Docs>
        <param name="kind"> Kind of the cluster. </param>
        <param name="id"> Id of the cluster. </param>
        <param name="metadata"> Metadata of the record. </param>
        <param name="spec"> Specification of the region. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.ConfluentRegionRecord" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.ConfluentRegionRecord" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataEntity">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.MetadataEntity MetadataEntity (string self = default, string resourceName = default, DateTimeOffset? createdOn = default, DateTimeOffset? updatedOn = default, DateTimeOffset? deletedOn = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.MetadataEntity MetadataEntity(string self, string resourceName, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; updatedOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; deletedOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.MetadataEntity(System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MetadataEntity (Optional self As String = Nothing, Optional resourceName As String = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional updatedOn As Nullable(Of DateTimeOffset) = Nothing, Optional deletedOn As Nullable(Of DateTimeOffset) = Nothing) As MetadataEntity" />
      <MemberSignature Language="F#" Value="static member MetadataEntity : string * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.Confluent.Models.MetadataEntity" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.MetadataEntity (self, resourceName, createdOn, updatedOn, deletedOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.MetadataEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="self" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="updatedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="deletedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="self"> Self lookup url. </param>
        <param name="resourceName"> Resource name of the record. </param>
        <param name="createdOn"> Created Date Time. </param>
        <param name="updatedOn"> Updated Date time. </param>
        <param name="deletedOn"> Deleted Date time. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.MetadataEntity" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.MetadataEntity" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegionSpecEntity">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.RegionSpecEntity RegionSpecEntity (string name = default, string cloud = default, string regionName = default, System.Collections.Generic.IEnumerable&lt;string&gt; packages = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.RegionSpecEntity RegionSpecEntity(string name, string cloud, string regionName, class System.Collections.Generic.IEnumerable`1&lt;string&gt; packages) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.RegionSpecEntity(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RegionSpecEntity (Optional name As String = Nothing, Optional cloud As String = Nothing, Optional regionName As String = Nothing, Optional packages As IEnumerable(Of String) = Nothing) As RegionSpecEntity" />
      <MemberSignature Language="F#" Value="static member RegionSpecEntity : string * string * string * seq&lt;string&gt; -&gt; Azure.ResourceManager.Confluent.Models.RegionSpecEntity" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.RegionSpecEntity (name, cloud, regionName, packages)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.RegionSpecEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cloud" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
        <Parameter Name="packages" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> Display Name of the region. </param>
        <param name="cloud"> Cloud provider name. </param>
        <param name="regionName"> Region name. </param>
        <param name="packages" />
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.RegionSpecEntity" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.RegionSpecEntity" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SCClusterByokEntity">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.SCClusterByokEntity SCClusterByokEntity (string id = default, string related = default, string resourceName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.SCClusterByokEntity SCClusterByokEntity(string id, string related, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.SCClusterByokEntity(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SCClusterByokEntity (Optional id As String = Nothing, Optional related As String = Nothing, Optional resourceName As String = Nothing) As SCClusterByokEntity" />
      <MemberSignature Language="F#" Value="static member SCClusterByokEntity : string * string * string -&gt; Azure.ResourceManager.Confluent.Models.SCClusterByokEntity" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.SCClusterByokEntity (id, related, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.SCClusterByokEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="related" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> ID of the referred resource. </param>
        <param name="related"> API URL for accessing or modifying the referred object. </param>
        <param name="resourceName"> CRN reference to the referred resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.SCClusterByokEntity" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.SCClusterByokEntity" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SCClusterNetworkEnvironmentEntity">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.SCClusterNetworkEnvironmentEntity SCClusterNetworkEnvironmentEntity (string id = default, string environment = default, string related = default, string resourceName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.SCClusterNetworkEnvironmentEntity SCClusterNetworkEnvironmentEntity(string id, string environment, string related, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.SCClusterNetworkEnvironmentEntity(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SCClusterNetworkEnvironmentEntity (Optional id As String = Nothing, Optional environment As String = Nothing, Optional related As String = Nothing, Optional resourceName As String = Nothing) As SCClusterNetworkEnvironmentEntity" />
      <MemberSignature Language="F#" Value="static member SCClusterNetworkEnvironmentEntity : string * string * string * string -&gt; Azure.ResourceManager.Confluent.Models.SCClusterNetworkEnvironmentEntity" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.SCClusterNetworkEnvironmentEntity (id, environment, related, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.SCClusterNetworkEnvironmentEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="environment" Type="System.String" />
        <Parameter Name="related" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> ID of the referred resource. </param>
        <param name="environment"> Environment of the referred resource. </param>
        <param name="related"> API URL for accessing or modifying the referred object. </param>
        <param name="resourceName"> CRN reference to the referred resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.SCClusterNetworkEnvironmentEntity" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.SCClusterNetworkEnvironmentEntity" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SCClusterRecord">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.SCClusterRecord SCClusterRecord (string kind = default, string id = default, string name = default, Azure.ResourceManager.Confluent.Models.SCMetadataEntity metadata = default, Azure.ResourceManager.Confluent.Models.SCClusterSpecEntity spec = default, Azure.ResourceManager.Confluent.Models.ClusterStatusEntity status = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.SCClusterRecord SCClusterRecord(string kind, string id, string name, class Azure.ResourceManager.Confluent.Models.SCMetadataEntity metadata, class Azure.ResourceManager.Confluent.Models.SCClusterSpecEntity spec, class Azure.ResourceManager.Confluent.Models.ClusterStatusEntity status) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.SCClusterRecord(System.String,System.String,System.String,Azure.ResourceManager.Confluent.Models.SCMetadataEntity,Azure.ResourceManager.Confluent.Models.SCClusterSpecEntity,Azure.ResourceManager.Confluent.Models.ClusterStatusEntity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SCClusterRecord (Optional kind As String = Nothing, Optional id As String = Nothing, Optional name As String = Nothing, Optional metadata As SCMetadataEntity = Nothing, Optional spec As SCClusterSpecEntity = Nothing, Optional status As ClusterStatusEntity = Nothing) As SCClusterRecord" />
      <MemberSignature Language="F#" Value="static member SCClusterRecord : string * string * string * Azure.ResourceManager.Confluent.Models.SCMetadataEntity * Azure.ResourceManager.Confluent.Models.SCClusterSpecEntity * Azure.ResourceManager.Confluent.Models.ClusterStatusEntity -&gt; Azure.ResourceManager.Confluent.Models.SCClusterRecord" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.SCClusterRecord (kind, id, name, metadata, spec, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.SCClusterRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="metadata" Type="Azure.ResourceManager.Confluent.Models.SCMetadataEntity" />
        <Parameter Name="spec" Type="Azure.ResourceManager.Confluent.Models.SCClusterSpecEntity" />
        <Parameter Name="status" Type="Azure.ResourceManager.Confluent.Models.ClusterStatusEntity" />
      </Parameters>
      <Docs>
        <param name="kind"> Type of cluster. </param>
        <param name="id"> Id of the cluster. </param>
        <param name="name"> Display name of the cluster. </param>
        <param name="metadata"> Metadata of the record. </param>
        <param name="spec"> Specification of the cluster. </param>
        <param name="status"> Specification of the cluster status. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.SCClusterRecord" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.SCClusterRecord" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SCClusterSpecEntity">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.SCClusterSpecEntity SCClusterSpecEntity (string name = default, string availability = default, string cloud = default, string zone = default, string region = default, string kafkaBootstrapEndpoint = default, string httpEndpoint = default, string apiEndpoint = default, string configKind = default, Azure.ResourceManager.Confluent.Models.SCClusterNetworkEnvironmentEntity environment = default, Azure.ResourceManager.Confluent.Models.SCClusterNetworkEnvironmentEntity network = default, Azure.ResourceManager.Confluent.Models.SCClusterByokEntity byok = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.SCClusterSpecEntity SCClusterSpecEntity(string name, string availability, string cloud, string zone, string region, string kafkaBootstrapEndpoint, string httpEndpoint, string apiEndpoint, string configKind, class Azure.ResourceManager.Confluent.Models.SCClusterNetworkEnvironmentEntity environment, class Azure.ResourceManager.Confluent.Models.SCClusterNetworkEnvironmentEntity network, class Azure.ResourceManager.Confluent.Models.SCClusterByokEntity byok) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.SCClusterSpecEntity(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.Confluent.Models.SCClusterNetworkEnvironmentEntity,Azure.ResourceManager.Confluent.Models.SCClusterNetworkEnvironmentEntity,Azure.ResourceManager.Confluent.Models.SCClusterByokEntity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SCClusterSpecEntity (Optional name As String = Nothing, Optional availability As String = Nothing, Optional cloud As String = Nothing, Optional zone As String = Nothing, Optional region As String = Nothing, Optional kafkaBootstrapEndpoint As String = Nothing, Optional httpEndpoint As String = Nothing, Optional apiEndpoint As String = Nothing, Optional configKind As String = Nothing, Optional environment As SCClusterNetworkEnvironmentEntity = Nothing, Optional network As SCClusterNetworkEnvironmentEntity = Nothing, Optional byok As SCClusterByokEntity = Nothing) As SCClusterSpecEntity" />
      <MemberSignature Language="F#" Value="static member SCClusterSpecEntity : string * string * string * string * string * string * string * string * string * Azure.ResourceManager.Confluent.Models.SCClusterNetworkEnvironmentEntity * Azure.ResourceManager.Confluent.Models.SCClusterNetworkEnvironmentEntity * Azure.ResourceManager.Confluent.Models.SCClusterByokEntity -&gt; Azure.ResourceManager.Confluent.Models.SCClusterSpecEntity" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.SCClusterSpecEntity (name, availability, cloud, zone, region, kafkaBootstrapEndpoint, httpEndpoint, apiEndpoint, configKind, environment, network, byok)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.SCClusterSpecEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="availability" Type="System.String" />
        <Parameter Name="cloud" Type="System.String" />
        <Parameter Name="zone" Type="System.String" />
        <Parameter Name="region" Type="System.String" />
        <Parameter Name="kafkaBootstrapEndpoint" Type="System.String" />
        <Parameter Name="httpEndpoint" Type="System.String" />
        <Parameter Name="apiEndpoint" Type="System.String" />
        <Parameter Name="configKind" Type="System.String" />
        <Parameter Name="environment" Type="Azure.ResourceManager.Confluent.Models.SCClusterNetworkEnvironmentEntity" />
        <Parameter Name="network" Type="Azure.ResourceManager.Confluent.Models.SCClusterNetworkEnvironmentEntity" />
        <Parameter Name="byok" Type="Azure.ResourceManager.Confluent.Models.SCClusterByokEntity" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the cluster. </param>
        <param name="availability"> The availability zone configuration of the cluster. </param>
        <param name="cloud"> The cloud service provider. </param>
        <param name="zone"> type of zone availability. </param>
        <param name="region"> The cloud service provider region. </param>
        <param name="kafkaBootstrapEndpoint"> The bootstrap endpoint used by Kafka clients to connect to the cluster. </param>
        <param name="httpEndpoint"> The cluster HTTP request URL. </param>
        <param name="apiEndpoint"> The Kafka API cluster endpoint. </param>
        <param name="configKind"> Specification of the cluster configuration. </param>
        <param name="environment"> Specification of the cluster environment. </param>
        <param name="network"> Specification of the cluster network. </param>
        <param name="byok"> Specification of the cluster byok. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.SCClusterSpecEntity" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.SCClusterSpecEntity" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SCEnvironmentRecord">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.SCEnvironmentRecord SCEnvironmentRecord (string kind = default, string id = default, string name = default, Azure.ResourceManager.Confluent.Models.SCMetadataEntity metadata = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.SCEnvironmentRecord SCEnvironmentRecord(string kind, string id, string name, class Azure.ResourceManager.Confluent.Models.SCMetadataEntity metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.SCEnvironmentRecord(System.String,System.String,System.String,Azure.ResourceManager.Confluent.Models.SCMetadataEntity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SCEnvironmentRecord (Optional kind As String = Nothing, Optional id As String = Nothing, Optional name As String = Nothing, Optional metadata As SCMetadataEntity = Nothing) As SCEnvironmentRecord" />
      <MemberSignature Language="F#" Value="static member SCEnvironmentRecord : string * string * string * Azure.ResourceManager.Confluent.Models.SCMetadataEntity -&gt; Azure.ResourceManager.Confluent.Models.SCEnvironmentRecord" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.SCEnvironmentRecord (kind, id, name, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.SCEnvironmentRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="metadata" Type="Azure.ResourceManager.Confluent.Models.SCMetadataEntity" />
      </Parameters>
      <Docs>
        <param name="kind"> Type of environment. </param>
        <param name="id"> Id of the environment. </param>
        <param name="name"> Display name of the environment. </param>
        <param name="metadata"> Metadata of the record. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.SCEnvironmentRecord" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.SCEnvironmentRecord" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaRegistryClusterEnvironmentRegionEntity">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterEnvironmentRegionEntity SchemaRegistryClusterEnvironmentRegionEntity (string id = default, string related = default, string resourceName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterEnvironmentRegionEntity SchemaRegistryClusterEnvironmentRegionEntity(string id, string related, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.SchemaRegistryClusterEnvironmentRegionEntity(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SchemaRegistryClusterEnvironmentRegionEntity (Optional id As String = Nothing, Optional related As String = Nothing, Optional resourceName As String = Nothing) As SchemaRegistryClusterEnvironmentRegionEntity" />
      <MemberSignature Language="F#" Value="static member SchemaRegistryClusterEnvironmentRegionEntity : string * string * string -&gt; Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterEnvironmentRegionEntity" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.SchemaRegistryClusterEnvironmentRegionEntity (id, related, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterEnvironmentRegionEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="related" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> ID of the referred resource. </param>
        <param name="related"> API URL for accessing or modifying the referred object. </param>
        <param name="resourceName"> CRN reference to the referred resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterEnvironmentRegionEntity" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterEnvironmentRegionEntity" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaRegistryClusterRecord">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterRecord SchemaRegistryClusterRecord (string kind = default, string id = default, Azure.ResourceManager.Confluent.Models.SCMetadataEntity metadata = default, Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterSpecEntity spec = default, string statusPhase = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterRecord SchemaRegistryClusterRecord(string kind, string id, class Azure.ResourceManager.Confluent.Models.SCMetadataEntity metadata, class Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterSpecEntity spec, string statusPhase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.SchemaRegistryClusterRecord(System.String,System.String,Azure.ResourceManager.Confluent.Models.SCMetadataEntity,Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterSpecEntity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SchemaRegistryClusterRecord (Optional kind As String = Nothing, Optional id As String = Nothing, Optional metadata As SCMetadataEntity = Nothing, Optional spec As SchemaRegistryClusterSpecEntity = Nothing, Optional statusPhase As String = Nothing) As SchemaRegistryClusterRecord" />
      <MemberSignature Language="F#" Value="static member SchemaRegistryClusterRecord : string * string * Azure.ResourceManager.Confluent.Models.SCMetadataEntity * Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterSpecEntity * string -&gt; Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterRecord" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.SchemaRegistryClusterRecord (kind, id, metadata, spec, statusPhase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="metadata" Type="Azure.ResourceManager.Confluent.Models.SCMetadataEntity" />
        <Parameter Name="spec" Type="Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterSpecEntity" />
        <Parameter Name="statusPhase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="kind"> Kind of the cluster. </param>
        <param name="id"> Id of the cluster. </param>
        <param name="metadata"> Metadata of the record. </param>
        <param name="spec"> Specification of the schema registry cluster. </param>
        <param name="statusPhase"> Specification of the cluster status. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterRecord" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterRecord" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaRegistryClusterSpecEntity">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterSpecEntity SchemaRegistryClusterSpecEntity (string name = default, string httpEndpoint = default, string package = default, Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterEnvironmentRegionEntity region = default, Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterEnvironmentRegionEntity environment = default, string cloud = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterSpecEntity SchemaRegistryClusterSpecEntity(string name, string httpEndpoint, string package, class Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterEnvironmentRegionEntity region, class Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterEnvironmentRegionEntity environment, string cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.SchemaRegistryClusterSpecEntity(System.String,System.String,System.String,Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterEnvironmentRegionEntity,Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterEnvironmentRegionEntity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SchemaRegistryClusterSpecEntity (Optional name As String = Nothing, Optional httpEndpoint As String = Nothing, Optional package As String = Nothing, Optional region As SchemaRegistryClusterEnvironmentRegionEntity = Nothing, Optional environment As SchemaRegistryClusterEnvironmentRegionEntity = Nothing, Optional cloud As String = Nothing) As SchemaRegistryClusterSpecEntity" />
      <MemberSignature Language="F#" Value="static member SchemaRegistryClusterSpecEntity : string * string * string * Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterEnvironmentRegionEntity * Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterEnvironmentRegionEntity * string -&gt; Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterSpecEntity" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.SchemaRegistryClusterSpecEntity (name, httpEndpoint, package, region, environment, cloud)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterSpecEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="httpEndpoint" Type="System.String" />
        <Parameter Name="package" Type="System.String" />
        <Parameter Name="region" Type="Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterEnvironmentRegionEntity" />
        <Parameter Name="environment" Type="Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterEnvironmentRegionEntity" />
        <Parameter Name="cloud" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the schema registry cluster. </param>
        <param name="httpEndpoint"> Http endpoint of the cluster. </param>
        <param name="package"> Type of the cluster package Advanced, essentials. </param>
        <param name="region"> Region details of the schema registry cluster. </param>
        <param name="environment"> Environment details of the schema registry cluster. </param>
        <param name="cloud"> The cloud service provider. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterSpecEntity" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.SchemaRegistryClusterSpecEntity" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SCMetadataEntity">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Confluent.Models.SCMetadataEntity SCMetadataEntity (string self = default, string resourceName = default, DateTimeOffset? createdOn = default, DateTimeOffset? updatedOn = default, DateTimeOffset? deletedOn = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Confluent.Models.SCMetadataEntity SCMetadataEntity(string self, string resourceName, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; updatedOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; deletedOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.SCMetadataEntity(System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SCMetadataEntity (Optional self As String = Nothing, Optional resourceName As String = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional updatedOn As Nullable(Of DateTimeOffset) = Nothing, Optional deletedOn As Nullable(Of DateTimeOffset) = Nothing) As SCMetadataEntity" />
      <MemberSignature Language="F#" Value="static member SCMetadataEntity : string * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.Confluent.Models.SCMetadataEntity" Usage="Azure.ResourceManager.Confluent.Models.ArmConfluentModelFactory.SCMetadataEntity (self, resourceName, createdOn, updatedOn, deletedOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.Models.SCMetadataEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="self" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="updatedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="deletedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="self"> Self lookup url. </param>
        <param name="resourceName"> Resource name of the record. </param>
        <param name="createdOn"> Created Date Time. </param>
        <param name="updatedOn"> Updated Date time. </param>
        <param name="deletedOn"> Deleted Date time. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Confluent.Models.SCMetadataEntity" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Confluent.Models.SCMetadataEntity" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
