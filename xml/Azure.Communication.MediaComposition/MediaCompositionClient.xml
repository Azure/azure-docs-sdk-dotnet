<Type Name="MediaCompositionClient" FullName="Azure.Communication.MediaComposition.MediaCompositionClient">
  <TypeSignature Language="C#" Value="public class MediaCompositionClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MediaCompositionClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Communication.MediaComposition.MediaCompositionClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MediaCompositionClient" />
  <TypeSignature Language="F#" Value="type MediaCompositionClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Communication.MediaComposition</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The Azure Communication Services Media Composition client.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MediaCompositionClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.MediaComposition.MediaCompositionClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.MediaComposition</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of <see cref="T:Azure.Communication.MediaComposition.MediaCompositionClient" /> for mocking.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaCompositionClient (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.MediaComposition.MediaCompositionClient.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="F#" Value="new Azure.Communication.MediaComposition.MediaCompositionClient : string -&gt; Azure.Communication.MediaComposition.MediaCompositionClient" Usage="new Azure.Communication.MediaComposition.MediaCompositionClient connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.MediaComposition</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Connection string acquired from the Azure Communication Services resource.</param>
        <summary> Initializes a new instance of <see cref="T:Azure.Communication.MediaComposition.MediaCompositionClient" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaCompositionClient (string connectionString, Azure.Communication.MediaComposition.MediaCompositionClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, class Azure.Communication.MediaComposition.MediaCompositionClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.MediaComposition.MediaCompositionClient.#ctor(System.String,Azure.Communication.MediaComposition.MediaCompositionClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, options As MediaCompositionClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Communication.MediaComposition.MediaCompositionClient : string * Azure.Communication.MediaComposition.MediaCompositionClientOptions -&gt; Azure.Communication.MediaComposition.MediaCompositionClient" Usage="new Azure.Communication.MediaComposition.MediaCompositionClient (connectionString, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.MediaComposition</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="options" Type="Azure.Communication.MediaComposition.MediaCompositionClientOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString">Connection string acquired from the Azure Communication Services resource.</param>
        <param name="options">Client option exposing <see cref="P:Azure.Core.ClientOptions.Diagnostics" />, <see cref="P:Azure.Core.ClientOptions.Retry" />, <see cref="P:Azure.Core.ClientOptions.Transport" />, etc.</param>
        <summary> Initializes a new instance of <see cref="T:Azure.Communication.MediaComposition.MediaCompositionClient" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaCompositionClient (Uri endpoint, Azure.AzureKeyCredential keyCredential, Azure.Communication.MediaComposition.MediaCompositionClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential keyCredential, class Azure.Communication.MediaComposition.MediaCompositionClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.MediaComposition.MediaCompositionClient.#ctor(System.Uri,Azure.AzureKeyCredential,Azure.Communication.MediaComposition.MediaCompositionClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, keyCredential As AzureKeyCredential, Optional options As MediaCompositionClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Communication.MediaComposition.MediaCompositionClient : Uri * Azure.AzureKeyCredential * Azure.Communication.MediaComposition.MediaCompositionClientOptions -&gt; Azure.Communication.MediaComposition.MediaCompositionClient" Usage="new Azure.Communication.MediaComposition.MediaCompositionClient (endpoint, keyCredential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.MediaComposition</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="keyCredential" Type="Azure.AzureKeyCredential" />
        <Parameter Name="options" Type="Azure.Communication.MediaComposition.MediaCompositionClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">The URI of the Azure Communication Services resource.</param>
        <param name="keyCredential">The <see cref="T:Azure.AzureKeyCredential" /> used to authenticate requests.</param>
        <param name="options">Client option exposing <see cref="P:Azure.Core.ClientOptions.Diagnostics" />, <see cref="P:Azure.Core.ClientOptions.Retry" />, <see cref="P:Azure.Core.ClientOptions.Transport" />, etc.</param>
        <summary> Initializes a new instance of <see cref="T:Azure.Communication.MediaComposition.MediaCompositionClient" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaCompositionClient (Uri endpoint, Azure.Core.TokenCredential tokenCredential, Azure.Communication.MediaComposition.MediaCompositionClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential tokenCredential, class Azure.Communication.MediaComposition.MediaCompositionClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.MediaComposition.MediaCompositionClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Communication.MediaComposition.MediaCompositionClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, tokenCredential As TokenCredential, Optional options As MediaCompositionClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Communication.MediaComposition.MediaCompositionClient : Uri * Azure.Core.TokenCredential * Azure.Communication.MediaComposition.MediaCompositionClientOptions -&gt; Azure.Communication.MediaComposition.MediaCompositionClient" Usage="new Azure.Communication.MediaComposition.MediaCompositionClient (endpoint, tokenCredential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.MediaComposition</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="tokenCredential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Communication.MediaComposition.MediaCompositionClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">The URI of the Azure Communication Services resource.</param>
        <param name="tokenCredential">The TokenCredential used to authenticate requests, such as DefaultAzureCredential.</param>
        <param name="options">Client option exposing <see cref="P:Azure.Core.ClientOptions.Diagnostics" />, <see cref="P:Azure.Core.ClientOptions.Retry" />, <see cref="P:Azure.Core.ClientOptions.Transport" />, etc.</param>
        <summary> Initializes a new instance of <see cref="T:Azure.Communication.MediaComposition.MediaCompositionClient" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt; Create (string mediaCompositionId, Azure.Communication.MediaComposition.Models.MediaCompositionLayout layout, System.Collections.Generic.IDictionary&lt;string,Azure.Communication.MediaComposition.Models.MediaInput&gt; inputs, System.Collections.Generic.IDictionary&lt;string,Azure.Communication.MediaComposition.Models.MediaOutput&gt; outputs, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.MediaComposition.MediaComposition&gt; Create(string mediaCompositionId, class Azure.Communication.MediaComposition.Models.MediaCompositionLayout layout, class System.Collections.Generic.IDictionary`2&lt;string, class Azure.Communication.MediaComposition.Models.MediaInput&gt; inputs, class System.Collections.Generic.IDictionary`2&lt;string, class Azure.Communication.MediaComposition.Models.MediaOutput&gt; outputs, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.MediaComposition.MediaCompositionClient.Create(System.String,Azure.Communication.MediaComposition.Models.MediaCompositionLayout,System.Collections.Generic.IDictionary{System.String,Azure.Communication.MediaComposition.Models.MediaInput},System.Collections.Generic.IDictionary{System.String,Azure.Communication.MediaComposition.Models.MediaOutput},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (mediaCompositionId As String, layout As MediaCompositionLayout, inputs As IDictionary(Of String, MediaInput), outputs As IDictionary(Of String, MediaOutput), Optional cancellationToken As CancellationToken = Nothing) As Response(Of MediaComposition)" />
      <MemberSignature Language="F#" Value="abstract member Create : string * Azure.Communication.MediaComposition.Models.MediaCompositionLayout * System.Collections.Generic.IDictionary&lt;string, Azure.Communication.MediaComposition.Models.MediaInput&gt; * System.Collections.Generic.IDictionary&lt;string, Azure.Communication.MediaComposition.Models.MediaOutput&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&#xA;override this.Create : string * Azure.Communication.MediaComposition.Models.MediaCompositionLayout * System.Collections.Generic.IDictionary&lt;string, Azure.Communication.MediaComposition.Models.MediaInput&gt; * System.Collections.Generic.IDictionary&lt;string, Azure.Communication.MediaComposition.Models.MediaOutput&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;" Usage="mediaCompositionClient.Create (mediaCompositionId, layout, inputs, outputs, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.MediaComposition</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaCompositionId" Type="System.String" />
        <Parameter Name="layout" Type="Azure.Communication.MediaComposition.Models.MediaCompositionLayout" />
        <Parameter Name="inputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Azure.Communication.MediaComposition.Models.MediaInput&gt;" />
        <Parameter Name="outputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Azure.Communication.MediaComposition.Models.MediaOutput&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mediaCompositionId"> The media composition id. </param>
        <param name="layout"> The layout to compose the media. </param>
        <param name="inputs"> The media inputs. </param>
        <param name="outputs"> The media outputs. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&gt; CreateAsync (string mediaCompositionId, Azure.Communication.MediaComposition.Models.MediaCompositionLayout layout, System.Collections.Generic.IDictionary&lt;string,Azure.Communication.MediaComposition.Models.MediaInput&gt; inputs, System.Collections.Generic.IDictionary&lt;string,Azure.Communication.MediaComposition.Models.MediaOutput&gt; outputs, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.MediaComposition.MediaComposition&gt;&gt; CreateAsync(string mediaCompositionId, class Azure.Communication.MediaComposition.Models.MediaCompositionLayout layout, class System.Collections.Generic.IDictionary`2&lt;string, class Azure.Communication.MediaComposition.Models.MediaInput&gt; inputs, class System.Collections.Generic.IDictionary`2&lt;string, class Azure.Communication.MediaComposition.Models.MediaOutput&gt; outputs, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.MediaComposition.MediaCompositionClient.CreateAsync(System.String,Azure.Communication.MediaComposition.Models.MediaCompositionLayout,System.Collections.Generic.IDictionary{System.String,Azure.Communication.MediaComposition.Models.MediaInput},System.Collections.Generic.IDictionary{System.String,Azure.Communication.MediaComposition.Models.MediaOutput},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAsync (mediaCompositionId As String, layout As MediaCompositionLayout, inputs As IDictionary(Of String, MediaInput), outputs As IDictionary(Of String, MediaOutput), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MediaComposition))" />
      <MemberSignature Language="F#" Value="abstract member CreateAsync : string * Azure.Communication.MediaComposition.Models.MediaCompositionLayout * System.Collections.Generic.IDictionary&lt;string, Azure.Communication.MediaComposition.Models.MediaInput&gt; * System.Collections.Generic.IDictionary&lt;string, Azure.Communication.MediaComposition.Models.MediaOutput&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&gt;&#xA;override this.CreateAsync : string * Azure.Communication.MediaComposition.Models.MediaCompositionLayout * System.Collections.Generic.IDictionary&lt;string, Azure.Communication.MediaComposition.Models.MediaInput&gt; * System.Collections.Generic.IDictionary&lt;string, Azure.Communication.MediaComposition.Models.MediaOutput&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&gt;" Usage="mediaCompositionClient.CreateAsync (mediaCompositionId, layout, inputs, outputs, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.MediaComposition</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaCompositionId" Type="System.String" />
        <Parameter Name="layout" Type="Azure.Communication.MediaComposition.Models.MediaCompositionLayout" />
        <Parameter Name="inputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Azure.Communication.MediaComposition.Models.MediaInput&gt;" />
        <Parameter Name="outputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Azure.Communication.MediaComposition.Models.MediaOutput&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mediaCompositionId"> The media composition id. </param>
        <param name="layout"> The layout to compose the media. </param>
        <param name="inputs"> The media inputs. </param>
        <param name="outputs"> The media outputs. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Delete (string mediaCompositionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Delete(string mediaCompositionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.MediaComposition.MediaCompositionClient.Delete(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (mediaCompositionId As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Delete : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.Delete : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="mediaCompositionClient.Delete (mediaCompositionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.MediaComposition</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaCompositionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mediaCompositionId"> The media composition id of the composition to delete. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteAsync (string mediaCompositionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteAsync(string mediaCompositionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.MediaComposition.MediaCompositionClient.DeleteAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (mediaCompositionId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="mediaCompositionClient.DeleteAsync (mediaCompositionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.MediaComposition</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaCompositionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mediaCompositionId"> The media composition id of the composition to delete. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt; Get (string mediaCompositionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.MediaComposition.MediaComposition&gt; Get(string mediaCompositionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.MediaComposition.MediaCompositionClient.Get(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (mediaCompositionId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MediaComposition)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&#xA;override this.Get : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;" Usage="mediaCompositionClient.Get (mediaCompositionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.MediaComposition</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaCompositionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mediaCompositionId"> The media composition id to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&gt; GetAsync (string mediaCompositionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.MediaComposition.MediaComposition&gt;&gt; GetAsync(string mediaCompositionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.MediaComposition.MediaCompositionClient.GetAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (mediaCompositionId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MediaComposition))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&gt;&#xA;override this.GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&gt;" Usage="mediaCompositionClient.GetAsync (mediaCompositionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.MediaComposition</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaCompositionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mediaCompositionId"> The media composition id to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveInputs">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt; RemoveInputs (string mediaCompositionId, System.Collections.Generic.IEnumerable&lt;string&gt; inputIds, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.MediaComposition.MediaComposition&gt; RemoveInputs(string mediaCompositionId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; inputIds, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.MediaComposition.MediaCompositionClient.RemoveInputs(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveInputs (mediaCompositionId As String, inputIds As IEnumerable(Of String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of MediaComposition)" />
      <MemberSignature Language="F#" Value="abstract member RemoveInputs : string * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&#xA;override this.RemoveInputs : string * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;" Usage="mediaCompositionClient.RemoveInputs (mediaCompositionId, inputIds, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.MediaComposition</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaCompositionId" Type="System.String" />
        <Parameter Name="inputIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mediaCompositionId"> The media composition id of the composition to update. </param>
        <param name="inputIds"> The removed inputIds. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveInputsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&gt; RemoveInputsAsync (string mediaCompositionId, System.Collections.Generic.IEnumerable&lt;string&gt; inputIds, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.MediaComposition.MediaComposition&gt;&gt; RemoveInputsAsync(string mediaCompositionId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; inputIds, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.MediaComposition.MediaCompositionClient.RemoveInputsAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveInputsAsync (mediaCompositionId As String, inputIds As IEnumerable(Of String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MediaComposition))" />
      <MemberSignature Language="F#" Value="abstract member RemoveInputsAsync : string * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&gt;&#xA;override this.RemoveInputsAsync : string * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&gt;" Usage="mediaCompositionClient.RemoveInputsAsync (mediaCompositionId, inputIds, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.MediaComposition</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaCompositionId" Type="System.String" />
        <Parameter Name="inputIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mediaCompositionId"> The media composition id of the composition to update. </param>
        <param name="inputIds"> The removed inputIds. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveOutputs">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt; RemoveOutputs (string mediaCompositionId, System.Collections.Generic.IEnumerable&lt;string&gt; outputIds, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.MediaComposition.MediaComposition&gt; RemoveOutputs(string mediaCompositionId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; outputIds, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.MediaComposition.MediaCompositionClient.RemoveOutputs(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveOutputs (mediaCompositionId As String, outputIds As IEnumerable(Of String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of MediaComposition)" />
      <MemberSignature Language="F#" Value="abstract member RemoveOutputs : string * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&#xA;override this.RemoveOutputs : string * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;" Usage="mediaCompositionClient.RemoveOutputs (mediaCompositionId, outputIds, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.MediaComposition</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaCompositionId" Type="System.String" />
        <Parameter Name="outputIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mediaCompositionId"> The media composition id of the composition to update. </param>
        <param name="outputIds"> The removed outputIds. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveOutputsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&gt; RemoveOutputsAsync (string mediaCompositionId, System.Collections.Generic.IEnumerable&lt;string&gt; outputIds, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.MediaComposition.MediaComposition&gt;&gt; RemoveOutputsAsync(string mediaCompositionId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; outputIds, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.MediaComposition.MediaCompositionClient.RemoveOutputsAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveOutputsAsync (mediaCompositionId As String, outputIds As IEnumerable(Of String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MediaComposition))" />
      <MemberSignature Language="F#" Value="abstract member RemoveOutputsAsync : string * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&gt;&#xA;override this.RemoveOutputsAsync : string * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&gt;" Usage="mediaCompositionClient.RemoveOutputsAsync (mediaCompositionId, outputIds, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.MediaComposition</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaCompositionId" Type="System.String" />
        <Parameter Name="outputIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mediaCompositionId"> The media composition id of the composition to update. </param>
        <param name="outputIds"> The removed outputIds. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.MediaComposition.CompositionStreamState&gt; Start (string mediaCompositionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.MediaComposition.CompositionStreamState&gt; Start(string mediaCompositionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.MediaComposition.MediaCompositionClient.Start(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Start (mediaCompositionId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CompositionStreamState)" />
      <MemberSignature Language="F#" Value="abstract member Start : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.MediaComposition.CompositionStreamState&gt;&#xA;override this.Start : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.MediaComposition.CompositionStreamState&gt;" Usage="mediaCompositionClient.Start (mediaCompositionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.MediaComposition</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.MediaComposition.CompositionStreamState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaCompositionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mediaCompositionId"> The media composition id of the composition to start. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.CompositionStreamState&gt;&gt; StartAsync (string mediaCompositionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.MediaComposition.CompositionStreamState&gt;&gt; StartAsync(string mediaCompositionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.MediaComposition.MediaCompositionClient.StartAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartAsync (mediaCompositionId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CompositionStreamState))" />
      <MemberSignature Language="F#" Value="abstract member StartAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.CompositionStreamState&gt;&gt;&#xA;override this.StartAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.CompositionStreamState&gt;&gt;" Usage="mediaCompositionClient.StartAsync (mediaCompositionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.MediaComposition</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.CompositionStreamState&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaCompositionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mediaCompositionId"> The media composition id of the composition to start. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.MediaComposition.CompositionStreamState&gt; Stop (string mediaCompositionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.MediaComposition.CompositionStreamState&gt; Stop(string mediaCompositionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.MediaComposition.MediaCompositionClient.Stop(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Stop (mediaCompositionId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CompositionStreamState)" />
      <MemberSignature Language="F#" Value="abstract member Stop : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.MediaComposition.CompositionStreamState&gt;&#xA;override this.Stop : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.MediaComposition.CompositionStreamState&gt;" Usage="mediaCompositionClient.Stop (mediaCompositionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.MediaComposition</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.MediaComposition.CompositionStreamState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaCompositionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mediaCompositionId"> The media composition id of the composition to stop. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.CompositionStreamState&gt;&gt; StopAsync (string mediaCompositionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.MediaComposition.CompositionStreamState&gt;&gt; StopAsync(string mediaCompositionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.MediaComposition.MediaCompositionClient.StopAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StopAsync (mediaCompositionId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CompositionStreamState))" />
      <MemberSignature Language="F#" Value="abstract member StopAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.CompositionStreamState&gt;&gt;&#xA;override this.StopAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.CompositionStreamState&gt;&gt;" Usage="mediaCompositionClient.StopAsync (mediaCompositionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.MediaComposition</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.CompositionStreamState&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaCompositionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mediaCompositionId"> The media composition id of the composition to stop. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLayout">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt; UpdateLayout (string mediaCompositionId, Azure.Communication.MediaComposition.Models.MediaCompositionLayout layout, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.MediaComposition.MediaComposition&gt; UpdateLayout(string mediaCompositionId, class Azure.Communication.MediaComposition.Models.MediaCompositionLayout layout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.MediaComposition.MediaCompositionClient.UpdateLayout(System.String,Azure.Communication.MediaComposition.Models.MediaCompositionLayout,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateLayout (mediaCompositionId As String, layout As MediaCompositionLayout, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MediaComposition)" />
      <MemberSignature Language="F#" Value="abstract member UpdateLayout : string * Azure.Communication.MediaComposition.Models.MediaCompositionLayout * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&#xA;override this.UpdateLayout : string * Azure.Communication.MediaComposition.Models.MediaCompositionLayout * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;" Usage="mediaCompositionClient.UpdateLayout (mediaCompositionId, layout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.MediaComposition</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaCompositionId" Type="System.String" />
        <Parameter Name="layout" Type="Azure.Communication.MediaComposition.Models.MediaCompositionLayout" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mediaCompositionId"> The media composition id of the composition to update. </param>
        <param name="layout"> The updated layout to compose media. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLayoutAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&gt; UpdateLayoutAsync (string mediaCompositionId, Azure.Communication.MediaComposition.Models.MediaCompositionLayout layout, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.MediaComposition.MediaComposition&gt;&gt; UpdateLayoutAsync(string mediaCompositionId, class Azure.Communication.MediaComposition.Models.MediaCompositionLayout layout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.MediaComposition.MediaCompositionClient.UpdateLayoutAsync(System.String,Azure.Communication.MediaComposition.Models.MediaCompositionLayout,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateLayoutAsync (mediaCompositionId As String, layout As MediaCompositionLayout, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MediaComposition))" />
      <MemberSignature Language="F#" Value="abstract member UpdateLayoutAsync : string * Azure.Communication.MediaComposition.Models.MediaCompositionLayout * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&gt;&#xA;override this.UpdateLayoutAsync : string * Azure.Communication.MediaComposition.Models.MediaCompositionLayout * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&gt;" Usage="mediaCompositionClient.UpdateLayoutAsync (mediaCompositionId, layout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.MediaComposition</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaCompositionId" Type="System.String" />
        <Parameter Name="layout" Type="Azure.Communication.MediaComposition.Models.MediaCompositionLayout" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mediaCompositionId"> The media composition id of the composition to update. </param>
        <param name="layout"> The updated layout to compose media. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpsertInputs">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt; UpsertInputs (string mediaCompositionId, System.Collections.Generic.IDictionary&lt;string,Azure.Communication.MediaComposition.Models.MediaInput&gt; inputs, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.MediaComposition.MediaComposition&gt; UpsertInputs(string mediaCompositionId, class System.Collections.Generic.IDictionary`2&lt;string, class Azure.Communication.MediaComposition.Models.MediaInput&gt; inputs, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.MediaComposition.MediaCompositionClient.UpsertInputs(System.String,System.Collections.Generic.IDictionary{System.String,Azure.Communication.MediaComposition.Models.MediaInput},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpsertInputs (mediaCompositionId As String, inputs As IDictionary(Of String, MediaInput), Optional cancellationToken As CancellationToken = Nothing) As Response(Of MediaComposition)" />
      <MemberSignature Language="F#" Value="abstract member UpsertInputs : string * System.Collections.Generic.IDictionary&lt;string, Azure.Communication.MediaComposition.Models.MediaInput&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&#xA;override this.UpsertInputs : string * System.Collections.Generic.IDictionary&lt;string, Azure.Communication.MediaComposition.Models.MediaInput&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;" Usage="mediaCompositionClient.UpsertInputs (mediaCompositionId, inputs, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.MediaComposition</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaCompositionId" Type="System.String" />
        <Parameter Name="inputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Azure.Communication.MediaComposition.Models.MediaInput&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mediaCompositionId"> The media composition id of the composition to update. </param>
        <param name="inputs"> The upserted inputs. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpsertInputsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&gt; UpsertInputsAsync (string mediaCompositionId, System.Collections.Generic.IDictionary&lt;string,Azure.Communication.MediaComposition.Models.MediaInput&gt; inputs, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.MediaComposition.MediaComposition&gt;&gt; UpsertInputsAsync(string mediaCompositionId, class System.Collections.Generic.IDictionary`2&lt;string, class Azure.Communication.MediaComposition.Models.MediaInput&gt; inputs, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.MediaComposition.MediaCompositionClient.UpsertInputsAsync(System.String,System.Collections.Generic.IDictionary{System.String,Azure.Communication.MediaComposition.Models.MediaInput},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpsertInputsAsync (mediaCompositionId As String, inputs As IDictionary(Of String, MediaInput), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MediaComposition))" />
      <MemberSignature Language="F#" Value="abstract member UpsertInputsAsync : string * System.Collections.Generic.IDictionary&lt;string, Azure.Communication.MediaComposition.Models.MediaInput&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&gt;&#xA;override this.UpsertInputsAsync : string * System.Collections.Generic.IDictionary&lt;string, Azure.Communication.MediaComposition.Models.MediaInput&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&gt;" Usage="mediaCompositionClient.UpsertInputsAsync (mediaCompositionId, inputs, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.MediaComposition</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaCompositionId" Type="System.String" />
        <Parameter Name="inputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Azure.Communication.MediaComposition.Models.MediaInput&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mediaCompositionId"> The media composition id of the composition to update. </param>
        <param name="inputs"> The upserted inputs. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpsertOutputs">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt; UpsertOutputs (string mediaCompositionId, System.Collections.Generic.IDictionary&lt;string,Azure.Communication.MediaComposition.Models.MediaOutput&gt; outputs, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.MediaComposition.MediaComposition&gt; UpsertOutputs(string mediaCompositionId, class System.Collections.Generic.IDictionary`2&lt;string, class Azure.Communication.MediaComposition.Models.MediaOutput&gt; outputs, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.MediaComposition.MediaCompositionClient.UpsertOutputs(System.String,System.Collections.Generic.IDictionary{System.String,Azure.Communication.MediaComposition.Models.MediaOutput},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpsertOutputs (mediaCompositionId As String, outputs As IDictionary(Of String, MediaOutput), Optional cancellationToken As CancellationToken = Nothing) As Response(Of MediaComposition)" />
      <MemberSignature Language="F#" Value="abstract member UpsertOutputs : string * System.Collections.Generic.IDictionary&lt;string, Azure.Communication.MediaComposition.Models.MediaOutput&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&#xA;override this.UpsertOutputs : string * System.Collections.Generic.IDictionary&lt;string, Azure.Communication.MediaComposition.Models.MediaOutput&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;" Usage="mediaCompositionClient.UpsertOutputs (mediaCompositionId, outputs, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.MediaComposition</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaCompositionId" Type="System.String" />
        <Parameter Name="outputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Azure.Communication.MediaComposition.Models.MediaOutput&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mediaCompositionId"> The media composition id of the composition to update. </param>
        <param name="outputs"> The upserted outputs. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpsertOutputsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&gt; UpsertOutputsAsync (string mediaCompositionId, System.Collections.Generic.IDictionary&lt;string,Azure.Communication.MediaComposition.Models.MediaOutput&gt; outputs, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.MediaComposition.MediaComposition&gt;&gt; UpsertOutputsAsync(string mediaCompositionId, class System.Collections.Generic.IDictionary`2&lt;string, class Azure.Communication.MediaComposition.Models.MediaOutput&gt; outputs, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.MediaComposition.MediaCompositionClient.UpsertOutputsAsync(System.String,System.Collections.Generic.IDictionary{System.String,Azure.Communication.MediaComposition.Models.MediaOutput},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpsertOutputsAsync (mediaCompositionId As String, outputs As IDictionary(Of String, MediaOutput), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MediaComposition))" />
      <MemberSignature Language="F#" Value="abstract member UpsertOutputsAsync : string * System.Collections.Generic.IDictionary&lt;string, Azure.Communication.MediaComposition.Models.MediaOutput&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&gt;&#xA;override this.UpsertOutputsAsync : string * System.Collections.Generic.IDictionary&lt;string, Azure.Communication.MediaComposition.Models.MediaOutput&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&gt;" Usage="mediaCompositionClient.UpsertOutputsAsync (mediaCompositionId, outputs, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.MediaComposition</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.MediaComposition.MediaComposition&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaCompositionId" Type="System.String" />
        <Parameter Name="outputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Azure.Communication.MediaComposition.Models.MediaOutput&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mediaCompositionId"> The media composition id of the composition to update. </param>
        <param name="outputs"> The upserted outputs. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
