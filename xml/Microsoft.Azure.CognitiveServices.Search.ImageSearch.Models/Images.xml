<Type Name="Images" FullName="Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Images">
  <TypeSignature Language="C#" Value="public class Images : Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.SearchResultsAnswer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Images extends Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.SearchResultsAnswer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Images" />
  <TypeSignature Language="VB.NET" Value="Public Class Images&#xA;Inherits SearchResultsAnswer" />
  <TypeSignature Language="F#" Value="type Images = class&#xA;    inherit SearchResultsAnswer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.CognitiveServices.Search.ImageSearch</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.SearchResultsAnswer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Defines an image answer
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Images ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Images.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Search.ImageSearch</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the Images class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Images (System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.ImageObject&gt; value, string id = default, string readLink = default, string webSearchUrl = default, long? totalEstimatedMatches = default, int? nextOffset = default, System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Query&gt; queryExpansions = default, System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.PivotSuggestions&gt; pivotSuggestions = default, System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Query&gt; similarTerms = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.ImageObject&gt; value, string id, string readLink, string webSearchUrl, valuetype System.Nullable`1&lt;int64&gt; totalEstimatedMatches, valuetype System.Nullable`1&lt;int32&gt; nextOffset, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Query&gt; queryExpansions, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.PivotSuggestions&gt; pivotSuggestions, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Query&gt; similarTerms) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Images.#ctor(System.Collections.Generic.IList{Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.ImageObject},System.String,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int32},System.Collections.Generic.IList{Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Query},System.Collections.Generic.IList{Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.PivotSuggestions},System.Collections.Generic.IList{Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Query})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As IList(Of ImageObject), Optional id As String = Nothing, Optional readLink As String = Nothing, Optional webSearchUrl As String = Nothing, Optional totalEstimatedMatches As Nullable(Of Long) = Nothing, Optional nextOffset As Nullable(Of Integer) = Nothing, Optional queryExpansions As IList(Of Query) = Nothing, Optional pivotSuggestions As IList(Of PivotSuggestions) = Nothing, Optional similarTerms As IList(Of Query) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Images : System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.ImageObject&gt; * string * string * string * Nullable&lt;int64&gt; * Nullable&lt;int&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Query&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.PivotSuggestions&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Query&gt; -&gt; Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Images" Usage="new Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Images (value, id, readLink, webSearchUrl, totalEstimatedMatches, nextOffset, queryExpansions, pivotSuggestions, similarTerms)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Search.ImageSearch</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.ImageObject&gt;" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="readLink" Type="System.String" />
        <Parameter Name="webSearchUrl" Type="System.String" />
        <Parameter Name="totalEstimatedMatches" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="nextOffset" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="queryExpansions" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Query&gt;" />
        <Parameter Name="pivotSuggestions" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.PivotSuggestions&gt;" />
        <Parameter Name="similarTerms" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Query&gt;" />
      </Parameters>
      <Docs>
        <param name="value">A list of image objects that are relevant to
            the query. If there are no results, the List is empty.</param>
        <param name="id">A String identifier.</param>
        <param name="readLink">The URL that returns this resource.</param>
        <param name="webSearchUrl">The URL To Bing's search result for this
            item.</param>
        <param name="totalEstimatedMatches">The estimated number of
            webpages that are relevant to the query. Use this number along with
            the count and offset query parameters to page the results.</param>
        <param name="nextOffset">Used as part of deduping. Tells client the
            next offset that client should use in the next pagination
            request</param>
        <param name="queryExpansions">A list of expanded queries that
            narrows the original query. For example, if the query was Microsoft
            Surface, the expanded queries might be: Microsoft Surface Pro 3,
            Microsoft Surface RT, Microsoft Surface Phone, and Microsoft
            Surface Hub.</param>
        <param name="pivotSuggestions">A list of segments in the original
            query. For example, if the query was Red Flowers, Bing might
            segment the query into Red and Flowers. The Flowers pivot may
            contain query suggestions such as Red Peonies and Red Daisies, and
            the Red pivot may contain query suggestions such as Green Flowers
            and Yellow Flowers.</param>
        <param name="similarTerms">A list of terms that are similar in
            meaning to the user's query term.</param>
        <summary>
            Initializes a new instance of the Images class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextOffset">
      <MemberSignature Language="C#" Value="public int? NextOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; NextOffset" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Images.NextOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextOffset As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.NextOffset : Nullable&lt;int&gt;" Usage="Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Images.NextOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Search.ImageSearch</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="nextOffset")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="nextOffset")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets used as part of deduping. Tells client the next offset that
            client should use in the next pagination request
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotSuggestions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.PivotSuggestions&gt; PivotSuggestions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.PivotSuggestions&gt; PivotSuggestions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Images.PivotSuggestions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotSuggestions As IList(Of PivotSuggestions)" />
      <MemberSignature Language="F#" Value="member this.PivotSuggestions : System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.PivotSuggestions&gt;" Usage="Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Images.PivotSuggestions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Search.ImageSearch</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="pivotSuggestions")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="pivotSuggestions")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.PivotSuggestions&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a list of segments in the original query. For example, if the
            query was Red Flowers, Bing might segment the query into Red and
            Flowers. The Flowers pivot may contain query suggestions such as
            Red Peonies and Red Daisies, and the Red pivot may contain query
            suggestions such as Green Flowers and Yellow Flowers.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryExpansions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Query&gt; QueryExpansions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Query&gt; QueryExpansions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Images.QueryExpansions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryExpansions As IList(Of Query)" />
      <MemberSignature Language="F#" Value="member this.QueryExpansions : System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Query&gt;" Usage="Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Images.QueryExpansions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Search.ImageSearch</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="queryExpansions")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="queryExpansions")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Query&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a list of expanded queries that narrows the original query.
            For example, if the query was Microsoft Surface, the expanded
            queries might be: Microsoft Surface Pro 3, Microsoft Surface RT,
            Microsoft Surface Phone, and Microsoft Surface Hub.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SimilarTerms">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Query&gt; SimilarTerms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Query&gt; SimilarTerms" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Images.SimilarTerms" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SimilarTerms As IList(Of Query)" />
      <MemberSignature Language="F#" Value="member this.SimilarTerms : System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Query&gt;" Usage="Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Images.SimilarTerms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Search.ImageSearch</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="similarTerms")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="similarTerms")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Query&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a list of terms that are similar in meaning to the user's
            query term.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Images.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="images.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Search.ImageSearch</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.ImageObject&gt; Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.ImageObject&gt; Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Images.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As IList(Of ImageObject)" />
      <MemberSignature Language="F#" Value="member this.Value : System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.ImageObject&gt; with get, set" Usage="Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.Images.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Search.ImageSearch</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="value")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="value")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models.ImageObject&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a list of image objects that are relevant to the
            query. If there are no results, the List is empty.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
