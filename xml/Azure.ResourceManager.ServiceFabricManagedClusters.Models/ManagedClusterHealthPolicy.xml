<Type Name="ManagedClusterHealthPolicy" FullName="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy">
  <TypeSignature Language="C#" Value="public class ManagedClusterHealthPolicy : System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagedClusterHealthPolicy extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagedClusterHealthPolicy&#xA;Implements IJsonModel(Of ManagedClusterHealthPolicy), IPersistableModel(Of ManagedClusterHealthPolicy)" />
  <TypeSignature Language="F#" Value="type ManagedClusterHealthPolicy = class&#xA;    interface IJsonModel&lt;ManagedClusterHealthPolicy&gt;&#xA;    interface IPersistableModel&lt;ManagedClusterHealthPolicy&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
             Defines a health policy used to evaluate the health of the cluster or of a cluster node.
            
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagedClusterHealthPolicy (int maxPercentUnhealthyNodes, int maxPercentUnhealthyApplications);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 maxPercentUnhealthyNodes, int32 maxPercentUnhealthyApplications) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (maxPercentUnhealthyNodes As Integer, maxPercentUnhealthyApplications As Integer)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy : int * int -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy" Usage="new Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy (maxPercentUnhealthyNodes, maxPercentUnhealthyApplications)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="maxPercentUnhealthyNodes" Type="System.Int32" />
        <Parameter Name="maxPercentUnhealthyApplications" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxPercentUnhealthyNodes">
             The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.
            
             The percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.
             If the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.
             The percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.
             The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.
            
             In large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.
            
             </param>
        <param name="maxPercentUnhealthyApplications">
             The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.
            
             The percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.
             If the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.
             This is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.
             The computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.
            
             </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy" />. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPercentUnhealthyApplications">
      <MemberSignature Language="C#" Value="public int MaxPercentUnhealthyApplications { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPercentUnhealthyApplications" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy.MaxPercentUnhealthyApplications" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPercentUnhealthyApplications As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxPercentUnhealthyApplications : int with get, set" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy.MaxPercentUnhealthyApplications" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.
            
             The percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.
             If the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.
             This is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.
             The computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.
            
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPercentUnhealthyNodes">
      <MemberSignature Language="C#" Value="public int MaxPercentUnhealthyNodes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPercentUnhealthyNodes" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy.MaxPercentUnhealthyNodes" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPercentUnhealthyNodes As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxPercentUnhealthyNodes : int with get, set" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy.MaxPercentUnhealthyNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.
            
             The percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.
             If the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.
             The percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.
             The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.
            
             In large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.
            
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy IJsonModel&lt;ManagedClusterHealthPolicy&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#ServiceFabricManagedClusters#Models#ManagedClusterHealthPolicy&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As ManagedClusterHealthPolicy Implements IJsonModel(Of ManagedClusterHealthPolicy).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy" Usage="managedClusterHealthPolicy.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;ManagedClusterHealthPolicy&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#ServiceFabricManagedClusters#Models#ManagedClusterHealthPolicy&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of ManagedClusterHealthPolicy).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="managedClusterHealthPolicy.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy IPersistableModel&lt;ManagedClusterHealthPolicy&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#ServiceFabricManagedClusters#Models#ManagedClusterHealthPolicy&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As ManagedClusterHealthPolicy Implements IPersistableModel(Of ManagedClusterHealthPolicy).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy" Usage="managedClusterHealthPolicy.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;ManagedClusterHealthPolicy&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#ServiceFabricManagedClusters#Models#ManagedClusterHealthPolicy&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of ManagedClusterHealthPolicy).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="managedClusterHealthPolicy.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;ManagedClusterHealthPolicy&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#ServiceFabricManagedClusters#Models#ManagedClusterHealthPolicy&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of ManagedClusterHealthPolicy).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="managedClusterHealthPolicy.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterHealthPolicy&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
