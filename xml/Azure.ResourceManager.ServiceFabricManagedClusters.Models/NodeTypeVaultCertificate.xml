<Type Name="NodeTypeVaultCertificate" FullName="Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVaultCertificate">
  <TypeSignature Language="C#" Value="public class NodeTypeVaultCertificate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NodeTypeVaultCertificate extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVaultCertificate" />
  <TypeSignature Language="VB.NET" Value="Public Class NodeTypeVaultCertificate" />
  <TypeSignature Language="F#" Value="type NodeTypeVaultCertificate = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeTypeVaultCertificate (Uri certificateUri, string certificateStore);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri certificateUri, string certificateStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVaultCertificate.#ctor(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificateUri As Uri, certificateStore As String)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVaultCertificate : Uri * string -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVaultCertificate" Usage="new Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVaultCertificate (certificateUri, certificateStore)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificateUri" Type="System.Uri" />
        <Parameter Name="certificateStore" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="certificateUri"> This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: &lt;br&gt;&lt;br&gt; {&lt;br&gt;  "data":"&lt;Base64-encoded-certificate&gt;",&lt;br&gt;  "dataType":"pfx",&lt;br&gt;  "password":"&lt;pfx-file-password&gt;"&lt;br&gt;}. </param>
        <param name="certificateStore"> For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. &lt;br&gt;&lt;br&gt;For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem formatted. </param>
        <summary> Initializes a new instance of NodeTypeVaultCertificate. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateUri" /> or <paramref name="certificateStore" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CertificateStore">
      <MemberSignature Language="C#" Value="public string CertificateStore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CertificateStore" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVaultCertificate.CertificateStore" />
      <MemberSignature Language="VB.NET" Value="Public Property CertificateStore As String" />
      <MemberSignature Language="F#" Value="member this.CertificateStore : string with get, set" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVaultCertificate.CertificateStore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. &lt;br&gt;&lt;br&gt;For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem formatted. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CertificateUri">
      <MemberSignature Language="C#" Value="public Uri CertificateUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri CertificateUri" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVaultCertificate.CertificateUri" />
      <MemberSignature Language="VB.NET" Value="Public Property CertificateUri As Uri" />
      <MemberSignature Language="F#" Value="member this.CertificateUri : Uri with get, set" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVaultCertificate.CertificateUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: &lt;br&gt;&lt;br&gt; {&lt;br&gt;  "data":"&lt;Base64-encoded-certificate&gt;",&lt;br&gt;  "dataType":"pfx",&lt;br&gt;  "password":"&lt;pfx-file-password&gt;"&lt;br&gt;}. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
