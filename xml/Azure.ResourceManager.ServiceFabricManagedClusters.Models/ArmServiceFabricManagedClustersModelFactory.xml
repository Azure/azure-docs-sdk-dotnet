<Type Name="ArmServiceFabricManagedClustersModelFactory" FullName="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory">
  <TypeSignature Language="C#" Value="public static class ArmServiceFabricManagedClustersModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ArmServiceFabricManagedClustersModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ArmServiceFabricManagedClustersModelFactory" />
  <TypeSignature Language="F#" Value="type ArmServiceFabricManagedClustersModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ManagedAzResiliencyStatus">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedAzResiliencyStatus ManagedAzResiliencyStatus (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ResourceAzStatus&gt; baseResourceStatus = default, bool? isClusterZoneResilient = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedAzResiliencyStatus ManagedAzResiliencyStatus(class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ResourceAzStatus&gt; baseResourceStatus, valuetype System.Nullable`1&lt;bool&gt; isClusterZoneResilient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.ManagedAzResiliencyStatus(System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ResourceAzStatus},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ManagedAzResiliencyStatus (Optional baseResourceStatus As IEnumerable(Of ResourceAzStatus) = Nothing, Optional isClusterZoneResilient As Nullable(Of Boolean) = Nothing) As ManagedAzResiliencyStatus" />
      <MemberSignature Language="F#" Value="static member ManagedAzResiliencyStatus : seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ResourceAzStatus&gt; * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedAzResiliencyStatus" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.ManagedAzResiliencyStatus (baseResourceStatus, isClusterZoneResilient)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedAzResiliencyStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseResourceStatus" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ResourceAzStatus&gt;" />
        <Parameter Name="isClusterZoneResilient" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="baseResourceStatus"> List of Managed VM Sizes for Service Fabric Managed Clusters. </param>
        <param name="isClusterZoneResilient"> URL to get the next set of Managed VM Sizes if there are any. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedAzResiliencyStatus" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedAzResiliencyStatus" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManagedMaintenanceWindowStatus">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedMaintenanceWindowStatus ManagedMaintenanceWindowStatus (bool? isWindowEnabled = default, bool? isRegionReady = default, bool? isWindowActive = default, bool? canApplyUpdates = default, DateTimeOffset? lastWindowStatusUpdatedOn = default, DateTimeOffset? lastWindowStartOn = default, DateTimeOffset? lastWindowEndOn = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedMaintenanceWindowStatus ManagedMaintenanceWindowStatus(valuetype System.Nullable`1&lt;bool&gt; isWindowEnabled, valuetype System.Nullable`1&lt;bool&gt; isRegionReady, valuetype System.Nullable`1&lt;bool&gt; isWindowActive, valuetype System.Nullable`1&lt;bool&gt; canApplyUpdates, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastWindowStatusUpdatedOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastWindowStartOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastWindowEndOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.ManagedMaintenanceWindowStatus(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ManagedMaintenanceWindowStatus (Optional isWindowEnabled As Nullable(Of Boolean) = Nothing, Optional isRegionReady As Nullable(Of Boolean) = Nothing, Optional isWindowActive As Nullable(Of Boolean) = Nothing, Optional canApplyUpdates As Nullable(Of Boolean) = Nothing, Optional lastWindowStatusUpdatedOn As Nullable(Of DateTimeOffset) = Nothing, Optional lastWindowStartOn As Nullable(Of DateTimeOffset) = Nothing, Optional lastWindowEndOn As Nullable(Of DateTimeOffset) = Nothing) As ManagedMaintenanceWindowStatus" />
      <MemberSignature Language="F#" Value="static member ManagedMaintenanceWindowStatus : Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedMaintenanceWindowStatus" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.ManagedMaintenanceWindowStatus (isWindowEnabled, isRegionReady, isWindowActive, canApplyUpdates, lastWindowStatusUpdatedOn, lastWindowStartOn, lastWindowEndOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedMaintenanceWindowStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isWindowEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isRegionReady" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isWindowActive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="canApplyUpdates" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="lastWindowStatusUpdatedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="lastWindowStartOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="lastWindowEndOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="isWindowEnabled"> If maintenance window is enabled on this cluster. </param>
        <param name="isRegionReady"> Indicates if the region is ready to configure maintenance windows. </param>
        <param name="isWindowActive"> If maintenance window is active. </param>
        <param name="canApplyUpdates"> If updates can be applied. </param>
        <param name="lastWindowStatusUpdatedOn"> Last window update time in UTC. </param>
        <param name="lastWindowStartOn"> Last window start time in UTC. </param>
        <param name="lastWindowEndOn"> Last window end time in UTC. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedMaintenanceWindowStatus" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedMaintenanceWindowStatus" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManagedServiceProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceProperties ManagedServiceProperties (string placementConstraints = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceCorrelation&gt; correlationScheme = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceLoadMetric&gt; serviceLoadMetrics = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePlacementPolicy&gt; servicePlacementPolicies = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedServiceMoveCost? defaultMoveCost = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceScalingPolicy&gt; scalingPolicies = default, string provisioningState = default, string serviceKind = default, string serviceTypeName = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePartitionScheme partitionDescription = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePackageActivationMode? servicePackageActivationMode = default, string serviceDnsName = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceProperties ManagedServiceProperties(string placementConstraints, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceCorrelation&gt; correlationScheme, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceLoadMetric&gt; serviceLoadMetrics, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePlacementPolicy&gt; servicePlacementPolicies, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedServiceMoveCost&gt; defaultMoveCost, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceScalingPolicy&gt; scalingPolicies, string provisioningState, string serviceKind, string serviceTypeName, class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePartitionScheme partitionDescription, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePackageActivationMode&gt; servicePackageActivationMode, string serviceDnsName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.ManagedServiceProperties(System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceCorrelation},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceLoadMetric},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePlacementPolicy},System.Nullable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedServiceMoveCost},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceScalingPolicy},System.String,System.String,System.String,Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePartitionScheme,System.Nullable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePackageActivationMode},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ManagedServiceProperties (Optional placementConstraints As String = Nothing, Optional correlationScheme As IEnumerable(Of ManagedServiceCorrelation) = Nothing, Optional serviceLoadMetrics As IEnumerable(Of ManagedServiceLoadMetric) = Nothing, Optional servicePlacementPolicies As IEnumerable(Of ManagedServicePlacementPolicy) = Nothing, Optional defaultMoveCost As Nullable(Of ServiceFabricManagedServiceMoveCost) = Nothing, Optional scalingPolicies As IEnumerable(Of ManagedServiceScalingPolicy) = Nothing, Optional provisioningState As String = Nothing, Optional serviceKind As String = Nothing, Optional serviceTypeName As String = Nothing, Optional partitionDescription As ManagedServicePartitionScheme = Nothing, Optional servicePackageActivationMode As Nullable(Of ManagedServicePackageActivationMode) = Nothing, Optional serviceDnsName As String = Nothing) As ManagedServiceProperties" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="static member ManagedServiceProperties : string * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceCorrelation&gt; * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceLoadMetric&gt; * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePlacementPolicy&gt; * Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedServiceMoveCost&gt; * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceScalingPolicy&gt; * string * string * string * Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePartitionScheme * Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePackageActivationMode&gt; * string -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceProperties" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.ManagedServiceProperties (placementConstraints, correlationScheme, serviceLoadMetrics, servicePlacementPolicies, defaultMoveCost, scalingPolicies, provisioningState, serviceKind, serviceTypeName, partitionDescription, servicePackageActivationMode, serviceDnsName)" />
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceProperties ManagedServiceProperties (string placementConstraints = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceCorrelation&gt; correlationScheme = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceLoadMetric&gt; serviceLoadMetrics = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePlacementPolicy&gt; servicePlacementPolicies = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedServiceMoveCost? defaultMoveCost = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceScalingPolicy&gt; scalingPolicies = default, string provisioningState = default, string serviceKind = &quot;Unknown&quot;, string serviceTypeName = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePartitionScheme partitionDescription = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePackageActivationMode? servicePackageActivationMode = default, string serviceDnsName = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ManagedServiceProperties (Optional placementConstraints As String = Nothing, Optional correlationScheme As IEnumerable(Of ManagedServiceCorrelation) = Nothing, Optional serviceLoadMetrics As IEnumerable(Of ManagedServiceLoadMetric) = Nothing, Optional servicePlacementPolicies As IEnumerable(Of ManagedServicePlacementPolicy) = Nothing, Optional defaultMoveCost As Nullable(Of ServiceFabricManagedServiceMoveCost) = Nothing, Optional scalingPolicies As IEnumerable(Of ManagedServiceScalingPolicy) = Nothing, Optional provisioningState As String = Nothing, Optional serviceKind As String = &quot;Unknown&quot;, Optional serviceTypeName As String = Nothing, Optional partitionDescription As ManagedServicePartitionScheme = Nothing, Optional servicePackageActivationMode As Nullable(Of ManagedServicePackageActivationMode) = Nothing, Optional serviceDnsName As String = Nothing) As ManagedServiceProperties" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="placementConstraints" Type="System.String" />
        <Parameter Name="correlationScheme" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceCorrelation&gt;" />
        <Parameter Name="serviceLoadMetrics" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceLoadMetric&gt;" />
        <Parameter Name="servicePlacementPolicies" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePlacementPolicy&gt;" />
        <Parameter Name="defaultMoveCost" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedServiceMoveCost&gt;" />
        <Parameter Name="scalingPolicies" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceScalingPolicy&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="serviceKind" Type="System.String" />
        <Parameter Name="serviceTypeName" Type="System.String" />
        <Parameter Name="partitionDescription" Type="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePartitionScheme" />
        <Parameter Name="servicePackageActivationMode" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePackageActivationMode&gt;" />
        <Parameter Name="serviceDnsName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="placementConstraints"> The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: "NodeColor == blue)". </param>
        <param name="correlationScheme"> A list that describes the correlation of the service with other services. </param>
        <param name="serviceLoadMetrics"> The service load metrics is given as an array of ServiceLoadMetric objects. </param>
        <param name="servicePlacementPolicies">
             A list that describes the correlation of the service with other services.
             Please note <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePlacementPolicy" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
             The available derived classes include <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServicePlacementInvalidDomainPolicy" />, <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServicePlacementNonPartiallyPlaceServicePolicy" />, <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServicePlacementPreferPrimaryDomainPolicy" />, <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServicePlacementRequiredDomainPolicy" /> and <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServicePlacementRequireDomainDistributionPolicy" />.
             </param>
        <param name="defaultMoveCost"> Specifies the move cost for the service. </param>
        <param name="scalingPolicies"> Scaling policies for this service. </param>
        <param name="provisioningState"> The current deployment or provisioning state, which only appears in the response. </param>
        <param name="serviceKind"> The kind of service (Stateless or Stateful). </param>
        <param name="serviceTypeName"> The name of the service type. </param>
        <param name="partitionDescription">
             Describes how the service is partitioned.
             Please note <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePartitionScheme" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
             The available derived classes include <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.NamedPartitionScheme" />, <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.SingletonPartitionScheme" /> and <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.UniformInt64RangePartitionScheme" />.
             </param>
        <param name="servicePackageActivationMode"> The activation Mode of the service package. </param>
        <param name="serviceDnsName">
             Dns name used for the service. If this is specified, then the DNS name can be used to return the IP addresses of service endpoints for application layer protocols (e.g., HTTP).
             When updating serviceDnsName, old name may be temporarily resolvable. However, rely on new name.
             When removing serviceDnsName, removed name may temporarily be resolvable. Do not rely on the name being unresolvable.
            
             </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeTypeAvailableSku">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeAvailableSku NodeTypeAvailableSku (Azure.Core.ResourceType? resourceType = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSupportedSku sku = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSkuCapacity capacity = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeAvailableSku NodeTypeAvailableSku(valuetype System.Nullable`1&lt;valuetype Azure.Core.ResourceType&gt; resourceType, class Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSupportedSku sku, class Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSkuCapacity capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.NodeTypeAvailableSku(System.Nullable{Azure.Core.ResourceType},Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSupportedSku,Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSkuCapacity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NodeTypeAvailableSku (Optional resourceType As Nullable(Of ResourceType) = Nothing, Optional sku As NodeTypeSupportedSku = Nothing, Optional capacity As NodeTypeSkuCapacity = Nothing) As NodeTypeAvailableSku" />
      <MemberSignature Language="F#" Value="static member NodeTypeAvailableSku : Nullable&lt;Azure.Core.ResourceType&gt; * Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSupportedSku * Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSkuCapacity -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeAvailableSku" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.NodeTypeAvailableSku (resourceType, sku, capacity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeAvailableSku</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceType" Type="System.Nullable&lt;Azure.Core.ResourceType&gt;" />
        <Parameter Name="sku" Type="Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSupportedSku" />
        <Parameter Name="capacity" Type="Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSkuCapacity" />
      </Parameters>
      <Docs>
        <param name="resourceType"> The type of resource the sku applies to.  &lt;br /&gt;&lt;br /&gt;Value: Microsoft.ServiceFabric/managedClusters/nodeTypes. </param>
        <param name="sku"> The supported SKU for a for node type. </param>
        <param name="capacity"> Provides information about how the node count can be scaled. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeAvailableSku" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeAvailableSku" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeTypeSkuCapacity">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSkuCapacity NodeTypeSkuCapacity (int? minimum = default, int? maximum = default, int? default = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSkuScaleType? scaleType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSkuCapacity NodeTypeSkuCapacity(valuetype System.Nullable`1&lt;int32&gt; minimum, valuetype System.Nullable`1&lt;int32&gt; maximum, valuetype System.Nullable`1&lt;int32&gt; default, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSkuScaleType&gt; scaleType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.NodeTypeSkuCapacity(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSkuScaleType})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NodeTypeSkuCapacity (Optional minimum As Nullable(Of Integer) = Nothing, Optional maximum As Nullable(Of Integer) = Nothing, Optional default As Nullable(Of Integer) = Nothing, Optional scaleType As Nullable(Of NodeTypeSkuScaleType) = Nothing) As NodeTypeSkuCapacity" />
      <MemberSignature Language="F#" Value="static member NodeTypeSkuCapacity : Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSkuScaleType&gt; -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSkuCapacity" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.NodeTypeSkuCapacity (minimum, maximum, default, scaleType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSkuCapacity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minimum" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="maximum" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="default" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="scaleType" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSkuScaleType&gt;" />
      </Parameters>
      <Docs>
        <param name="minimum"> Lowest permitted node count in a node type. </param>
        <param name="maximum"> Highest permitted node count in a node type. </param>
        <param name="default"> Default node count in a node type. </param>
        <param name="scaleType"> Node type capacity scale type. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSkuCapacity" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSkuCapacity" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeTypeSupportedSku">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSupportedSku NodeTypeSupportedSku (string name = default, string tier = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSupportedSku NodeTypeSupportedSku(string name, string tier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.NodeTypeSupportedSku(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NodeTypeSupportedSku (Optional name As String = Nothing, Optional tier As String = Nothing) As NodeTypeSupportedSku" />
      <MemberSignature Language="F#" Value="static member NodeTypeSupportedSku : string * string -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSupportedSku" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.NodeTypeSupportedSku (name, tier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSupportedSku</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="tier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"> The sku name. </param>
        <param name="tier"> Specifies the tier of the node type. &lt;br /&gt;&lt;br /&gt; Possible Values:&lt;br /&gt; **Standard**. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSupportedSku" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSupportedSku" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeTypeVmssExtension">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVmssExtension NodeTypeVmssExtension (string name = default, string publisher = default, string vmssExtensionPropertiesType = default, string typeHandlerVersion = default, bool? autoUpgradeMinorVersion = default, BinaryData settings = default, BinaryData protectedSettings = default, string forceUpdateTag = default, System.Collections.Generic.IEnumerable&lt;string&gt; provisionAfterExtensions = default, string provisioningState = default, bool? isAutomaticUpgradeEnabled = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.VmssExtensionSetupOrder&gt; setupOrder = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVmssExtension NodeTypeVmssExtension(string name, string publisher, string vmssExtensionPropertiesType, string typeHandlerVersion, valuetype System.Nullable`1&lt;bool&gt; autoUpgradeMinorVersion, class System.BinaryData settings, class System.BinaryData protectedSettings, string forceUpdateTag, class System.Collections.Generic.IEnumerable`1&lt;string&gt; provisionAfterExtensions, string provisioningState, valuetype System.Nullable`1&lt;bool&gt; isAutomaticUpgradeEnabled, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.VmssExtensionSetupOrder&gt; setupOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.NodeTypeVmssExtension(System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.BinaryData,System.BinaryData,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.VmssExtensionSetupOrder})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NodeTypeVmssExtension (Optional name As String = Nothing, Optional publisher As String = Nothing, Optional vmssExtensionPropertiesType As String = Nothing, Optional typeHandlerVersion As String = Nothing, Optional autoUpgradeMinorVersion As Nullable(Of Boolean) = Nothing, Optional settings As BinaryData = Nothing, Optional protectedSettings As BinaryData = Nothing, Optional forceUpdateTag As String = Nothing, Optional provisionAfterExtensions As IEnumerable(Of String) = Nothing, Optional provisioningState As String = Nothing, Optional isAutomaticUpgradeEnabled As Nullable(Of Boolean) = Nothing, Optional setupOrder As IEnumerable(Of VmssExtensionSetupOrder) = Nothing) As NodeTypeVmssExtension" />
      <MemberSignature Language="F#" Value="static member NodeTypeVmssExtension : string * string * string * string * Nullable&lt;bool&gt; * BinaryData * BinaryData * string * seq&lt;string&gt; * string * Nullable&lt;bool&gt; * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.VmssExtensionSetupOrder&gt; -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVmssExtension" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.NodeTypeVmssExtension (name, publisher, vmssExtensionPropertiesType, typeHandlerVersion, autoUpgradeMinorVersion, settings, protectedSettings, forceUpdateTag, provisionAfterExtensions, provisioningState, isAutomaticUpgradeEnabled, setupOrder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVmssExtension</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="publisher" Type="System.String" />
        <Parameter Name="vmssExtensionPropertiesType" Type="System.String" />
        <Parameter Name="typeHandlerVersion" Type="System.String" />
        <Parameter Name="autoUpgradeMinorVersion" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="settings" Type="System.BinaryData" />
        <Parameter Name="protectedSettings" Type="System.BinaryData" />
        <Parameter Name="forceUpdateTag" Type="System.String" />
        <Parameter Name="provisionAfterExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="isAutomaticUpgradeEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="setupOrder" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.VmssExtensionSetupOrder&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the extension. </param>
        <param name="publisher"> The name of the extension handler publisher. </param>
        <param name="vmssExtensionPropertiesType"> Specifies the type of the extension; an example is "CustomScriptExtension". </param>
        <param name="typeHandlerVersion"> Specifies the version of the script handler. </param>
        <param name="autoUpgradeMinorVersion"> Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true. </param>
        <param name="settings"> Json formatted public settings for the extension. </param>
        <param name="protectedSettings"> The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all. </param>
        <param name="forceUpdateTag"> If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed. </param>
        <param name="provisionAfterExtensions"> Collection of extension names after which this extension needs to be provisioned. </param>
        <param name="provisioningState"> The provisioning state, which only appears in the response. </param>
        <param name="isAutomaticUpgradeEnabled"> Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available. </param>
        <param name="setupOrder"> Indicates the setup order for the extension. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVmssExtension" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVmssExtension" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceAzStatus">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabricManagedClusters.Models.ResourceAzStatus ResourceAzStatus (string resourceName = default, Azure.Core.ResourceType? resourceType = default, bool? isZoneResilient = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ResourceAzStatus ResourceAzStatus(string resourceName, valuetype System.Nullable`1&lt;valuetype Azure.Core.ResourceType&gt; resourceType, valuetype System.Nullable`1&lt;bool&gt; isZoneResilient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.ResourceAzStatus(System.String,System.Nullable{Azure.Core.ResourceType},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResourceAzStatus (Optional resourceName As String = Nothing, Optional resourceType As Nullable(Of ResourceType) = Nothing, Optional isZoneResilient As Nullable(Of Boolean) = Nothing) As ResourceAzStatus" />
      <MemberSignature Language="F#" Value="static member ResourceAzStatus : string * Nullable&lt;Azure.Core.ResourceType&gt; * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.Models.ResourceAzStatus" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.ResourceAzStatus (resourceName, resourceType, isZoneResilient)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.Models.ResourceAzStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="resourceType" Type="System.Nullable&lt;Azure.Core.ResourceType&gt;" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="isZoneResilient" Type="System.Nullable&lt;System.Boolean&gt;" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="resourceName"> VM Size properties. </param>
        <param name="resourceType"> VM Size id. </param>
        <param name="isZoneResilient"> VM Size name. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ResourceAzStatus" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ResourceAzStatus" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceAzStatus">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabricManagedClusters.Models.ResourceAzStatus ResourceAzStatus (string resourceName = default, Azure.Core.ResourceType? resourceType = default, bool? isZoneResilient = default, string details = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ResourceAzStatus ResourceAzStatus(string resourceName, valuetype System.Nullable`1&lt;valuetype Azure.Core.ResourceType&gt; resourceType, valuetype System.Nullable`1&lt;bool&gt; isZoneResilient, string details) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.ResourceAzStatus(System.String,System.Nullable{Azure.Core.ResourceType},System.Nullable{System.Boolean},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResourceAzStatus (Optional resourceName As String = Nothing, Optional resourceType As Nullable(Of ResourceType) = Nothing, Optional isZoneResilient As Nullable(Of Boolean) = Nothing, Optional details As String = Nothing) As ResourceAzStatus" />
      <MemberSignature Language="F#" Value="static member ResourceAzStatus : string * Nullable&lt;Azure.Core.ResourceType&gt; * Nullable&lt;bool&gt; * string -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.Models.ResourceAzStatus" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.ResourceAzStatus (resourceName, resourceType, isZoneResilient, details)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.Models.ResourceAzStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="resourceType" Type="System.Nullable&lt;Azure.Core.ResourceType&gt;" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isZoneResilient" Type="System.Nullable&lt;System.Boolean&gt;" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="details" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="resourceName"> VM Size properties. </param>
        <param name="resourceType"> VM Size id. </param>
        <param name="isZoneResilient"> VM Size name. </param>
        <param name="details"> Zone resiliency status details for the resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ResourceAzStatus" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ResourceAzStatus" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceFabricManagedApplicationData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationData ServiceFabricManagedApplicationData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, string provisioningState = default, string version = default, System.Collections.Generic.IDictionary&lt;string,string&gt; parameters = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ApplicationUpgradePolicy upgradePolicy = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ApplicationUserAssignedIdentityInfo&gt; managedIdentities = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationData ServiceFabricManagedApplicationData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, string provisioningState, string version, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; parameters, class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ApplicationUpgradePolicy upgradePolicy, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ApplicationUserAssignedIdentityInfo&gt; managedIdentities) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.ServiceFabricManagedApplicationData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.Models.ManagedServiceIdentity,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Azure.ResourceManager.ServiceFabricManagedClusters.Models.ApplicationUpgradePolicy,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ApplicationUserAssignedIdentityInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ServiceFabricManagedApplicationData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional provisioningState As String = Nothing, Optional version As String = Nothing, Optional parameters As IDictionary(Of String, String) = Nothing, Optional upgradePolicy As ApplicationUpgradePolicy = Nothing, Optional managedIdentities As IEnumerable(Of ApplicationUserAssignedIdentityInfo) = Nothing) As ServiceFabricManagedApplicationData" />
      <MemberSignature Language="F#" Value="static member ServiceFabricManagedApplicationData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.Models.ManagedServiceIdentity * string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.ResourceManager.ServiceFabricManagedClusters.Models.ApplicationUpgradePolicy * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ApplicationUserAssignedIdentityInfo&gt; -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationData" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.ServiceFabricManagedApplicationData (id, name, resourceType, systemData, tags, location, identity, provisioningState, version, parameters, upgradePolicy, managedIdentities)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="upgradePolicy" Type="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ApplicationUpgradePolicy" />
        <Parameter Name="managedIdentities" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ApplicationUserAssignedIdentityInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="identity"> Describes the managed identities for an Azure resource. </param>
        <param name="provisioningState"> The current deployment or provisioning state, which only appears in the response. </param>
        <param name="version">
             The version of the application type as defined in the application manifest.
             This name must be the full Arm Resource ID for the referenced application type version.
            
             </param>
        <param name="parameters"> List of application parameters with overridden values from their default values specified in the application manifest. </param>
        <param name="upgradePolicy"> Describes the policy for a monitored application upgrade. </param>
        <param name="managedIdentities"> List of user assigned identities for the application, each mapped to a friendly name. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceFabricManagedApplicationTypeData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationTypeData ServiceFabricManagedApplicationTypeData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, string provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationTypeData ServiceFabricManagedApplicationTypeData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, string provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.ServiceFabricManagedApplicationTypeData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ServiceFabricManagedApplicationTypeData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional provisioningState As String = Nothing) As ServiceFabricManagedApplicationTypeData" />
      <MemberSignature Language="F#" Value="static member ServiceFabricManagedApplicationTypeData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * string -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationTypeData" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.ServiceFabricManagedApplicationTypeData (id, name, resourceType, systemData, tags, location, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationTypeData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="provisioningState" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="provisioningState"> The current deployment or provisioning state, which only appears in the response. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationTypeData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationTypeData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceFabricManagedApplicationTypeVersionData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationTypeVersionData ServiceFabricManagedApplicationTypeVersionData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, string provisioningState = default, Uri appPackageUri = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationTypeVersionData ServiceFabricManagedApplicationTypeVersionData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, string provisioningState, class System.Uri appPackageUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.ServiceFabricManagedApplicationTypeVersionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.String,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ServiceFabricManagedApplicationTypeVersionData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional provisioningState As String = Nothing, Optional appPackageUri As Uri = Nothing) As ServiceFabricManagedApplicationTypeVersionData" />
      <MemberSignature Language="F#" Value="static member ServiceFabricManagedApplicationTypeVersionData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * string * Uri -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationTypeVersionData" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.ServiceFabricManagedApplicationTypeVersionData (id, name, resourceType, systemData, tags, location, provisioningState, appPackageUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationTypeVersionData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="appPackageUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="provisioningState"> The current deployment or provisioning state, which only appears in the response. </param>
        <param name="appPackageUri"> The URL to the application package. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationTypeVersionData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedApplicationTypeVersionData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceFabricManagedClusterData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterData ServiceFabricManagedClusterData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClustersSkuName? skuName = default, string dnsName = default, string fqdn = default, System.Net.IPAddress ipv4Address = default, Guid? clusterId = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterState? clusterState = default, System.Collections.Generic.IEnumerable&lt;BinaryData&gt; clusterCertificateThumbprints = default, int? clientConnectionPort = default, int? httpGatewayConnectionPort = default, string adminUserName = default, string adminPassword = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterLoadBalancingRule&gt; loadBalancingRules = default, bool? isRdpAccessAllowed = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedNetworkSecurityRule&gt; networkSecurityRules = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterClientCertificate&gt; clients = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterAzureActiveDirectory azureActiveDirectory = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ClusterFabricSettingsSection&gt; fabricSettings = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedResourceProvisioningState? provisioningState = default, string clusterCodeVersion = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterUpgradeMode? clusterUpgradeMode = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterUpgradeCadence? clusterUpgradeCadence = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterAddOnFeature&gt; addOnFeatures = default, bool? isAutoOSUpgradeEnabled = default, bool? hasZoneResiliency = default, int? maxUnusedVersionsToKeep = default, bool? isIPv6Enabled = default, string subnetId = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterIPTag&gt; ipTags = default, System.Net.IPAddress ipv6Address = default, bool? isServicePublicIPEnabled = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterSubnet&gt; auxiliarySubnets = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterServiceEndpoint&gt; serviceEndpoints = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ZonalUpdateMode? zonalUpdateMode = default, bool? useCustomVnet = default, Azure.Core.ResourceIdentifier publicIPPrefixId = default, Azure.Core.ResourceIdentifier publicIPv6PrefixId = default, Azure.Core.ResourceIdentifier ddosProtectionPlanId = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterUpgradePolicy upgradeDescription = default, int? httpGatewayTokenAuthConnectionPort = default, bool? isHttpGatewayExclusiveAuthModeEnabled = default, Azure.ETag? etag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterData ServiceFabricManagedClusterData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClustersSkuName&gt; skuName, string dnsName, string fqdn, class System.Net.IPAddress ipv4Address, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; clusterId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterState&gt; clusterState, class System.Collections.Generic.IEnumerable`1&lt;class System.BinaryData&gt; clusterCertificateThumbprints, valuetype System.Nullable`1&lt;int32&gt; clientConnectionPort, valuetype System.Nullable`1&lt;int32&gt; httpGatewayConnectionPort, string adminUserName, string adminPassword, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterLoadBalancingRule&gt; loadBalancingRules, valuetype System.Nullable`1&lt;bool&gt; isRdpAccessAllowed, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedNetworkSecurityRule&gt; networkSecurityRules, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterClientCertificate&gt; clients, class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterAzureActiveDirectory azureActiveDirectory, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ClusterFabricSettingsSection&gt; fabricSettings, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedResourceProvisioningState&gt; provisioningState, string clusterCodeVersion, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterUpgradeMode&gt; clusterUpgradeMode, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterUpgradeCadence&gt; clusterUpgradeCadence, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterAddOnFeature&gt; addOnFeatures, valuetype System.Nullable`1&lt;bool&gt; isAutoOSUpgradeEnabled, valuetype System.Nullable`1&lt;bool&gt; hasZoneResiliency, valuetype System.Nullable`1&lt;int32&gt; maxUnusedVersionsToKeep, valuetype System.Nullable`1&lt;bool&gt; isIPv6Enabled, string subnetId, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterIPTag&gt; ipTags, class System.Net.IPAddress ipv6Address, valuetype System.Nullable`1&lt;bool&gt; isServicePublicIPEnabled, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterSubnet&gt; auxiliarySubnets, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterServiceEndpoint&gt; serviceEndpoints, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.ZonalUpdateMode&gt; zonalUpdateMode, valuetype System.Nullable`1&lt;bool&gt; useCustomVnet, class Azure.Core.ResourceIdentifier publicIPPrefixId, class Azure.Core.ResourceIdentifier publicIPv6PrefixId, class Azure.Core.ResourceIdentifier ddosProtectionPlanId, class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterUpgradePolicy upgradeDescription, valuetype System.Nullable`1&lt;int32&gt; httpGatewayTokenAuthConnectionPort, valuetype System.Nullable`1&lt;bool&gt; isHttpGatewayExclusiveAuthModeEnabled, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.ServiceFabricManagedClusterData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.Nullable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClustersSkuName},System.String,System.String,System.Net.IPAddress,System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterState},System.Collections.Generic.IEnumerable{System.BinaryData},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterLoadBalancingRule},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedNetworkSecurityRule},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterClientCertificate},Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterAzureActiveDirectory,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ClusterFabricSettingsSection},System.Nullable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedResourceProvisioningState},System.String,System.Nullable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterUpgradeMode},System.Nullable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterUpgradeCadence},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterAddOnFeature},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterIPTag},System.Net.IPAddress,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterSubnet},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterServiceEndpoint},System.Nullable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ZonalUpdateMode},System.Nullable{System.Boolean},Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterUpgradePolicy,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{Azure.ETag})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ServiceFabricManagedClusterData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional skuName As Nullable(Of ServiceFabricManagedClustersSkuName) = Nothing, Optional dnsName As String = Nothing, Optional fqdn As String = Nothing, Optional ipv4Address As IPAddress = Nothing, Optional clusterId As Nullable(Of Guid) = Nothing, Optional clusterState As Nullable(Of ServiceFabricManagedClusterState) = Nothing, Optional clusterCertificateThumbprints As IEnumerable(Of BinaryData) = Nothing, Optional clientConnectionPort As Nullable(Of Integer) = Nothing, Optional httpGatewayConnectionPort As Nullable(Of Integer) = Nothing, Optional adminUserName As String = Nothing, Optional adminPassword As String = Nothing, Optional loadBalancingRules As IEnumerable(Of ManagedClusterLoadBalancingRule) = Nothing, Optional isRdpAccessAllowed As Nullable(Of Boolean) = Nothing, Optional networkSecurityRules As IEnumerable(Of ServiceFabricManagedNetworkSecurityRule) = Nothing, Optional clients As IEnumerable(Of ManagedClusterClientCertificate) = Nothing, Optional azureActiveDirectory As ManagedClusterAzureActiveDirectory = Nothing, Optional fabricSettings As IEnumerable(Of ClusterFabricSettingsSection) = Nothing, Optional provisioningState As Nullable(Of ServiceFabricManagedResourceProvisioningState) = Nothing, Optional clusterCodeVersion As String = Nothing, Optional clusterUpgradeMode As Nullable(Of ManagedClusterUpgradeMode) = Nothing, Optional clusterUpgradeCadence As Nullable(Of ManagedClusterUpgradeCadence) = Nothing, Optional addOnFeatures As IEnumerable(Of ManagedClusterAddOnFeature) = Nothing, Optional isAutoOSUpgradeEnabled As Nullable(Of Boolean) = Nothing, Optional hasZoneResiliency As Nullable(Of Boolean) = Nothing, Optional maxUnusedVersionsToKeep As Nullable(Of Integer) = Nothing, Optional isIPv6Enabled As Nullable(Of Boolean) = Nothing, Optional subnetId As String = Nothing, Optional ipTags As IEnumerable(Of ManagedClusterIPTag) = Nothing, Optional ipv6Address As IPAddress = Nothing, Optional isServicePublicIPEnabled As Nullable(Of Boolean) = Nothing, Optional auxiliarySubnets As IEnumerable(Of ManagedClusterSubnet) = Nothing, Optional serviceEndpoints As IEnumerable(Of ManagedClusterServiceEndpoint) = Nothing, Optional zonalUpdateMode As Nullable(Of ZonalUpdateMode) = Nothing, Optional useCustomVnet As Nullable(Of Boolean) = Nothing, Optional publicIPPrefixId As ResourceIdentifier = Nothing, Optional publicIPv6PrefixId As ResourceIdentifier = Nothing, Optional ddosProtectionPlanId As ResourceIdentifier = Nothing, Optional upgradeDescription As ManagedClusterUpgradePolicy = Nothing, Optional httpGatewayTokenAuthConnectionPort As Nullable(Of Integer) = Nothing, Optional isHttpGatewayExclusiveAuthModeEnabled As Nullable(Of Boolean) = Nothing, Optional etag As Nullable(Of ETag) = Nothing) As ServiceFabricManagedClusterData" />
      <MemberSignature Language="F#" Value="static member ServiceFabricManagedClusterData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClustersSkuName&gt; * string * string * System.Net.IPAddress * Nullable&lt;Guid&gt; * Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterState&gt; * seq&lt;BinaryData&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * string * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterLoadBalancingRule&gt; * Nullable&lt;bool&gt; * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedNetworkSecurityRule&gt; * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterClientCertificate&gt; * Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterAzureActiveDirectory * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ClusterFabricSettingsSection&gt; * Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedResourceProvisioningState&gt; * string * Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterUpgradeMode&gt; * Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterUpgradeCadence&gt; * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterAddOnFeature&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * string * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterIPTag&gt; * System.Net.IPAddress * Nullable&lt;bool&gt; * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterSubnet&gt; * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterServiceEndpoint&gt; * Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ZonalUpdateMode&gt; * Nullable&lt;bool&gt; * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterUpgradePolicy * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;Azure.ETag&gt; -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterData" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.ServiceFabricManagedClusterData (id, name, resourceType, systemData, tags, location, skuName, dnsName, fqdn, ipv4Address, clusterId, clusterState, clusterCertificateThumbprints, clientConnectionPort, httpGatewayConnectionPort, adminUserName, adminPassword, loadBalancingRules, isRdpAccessAllowed, networkSecurityRules, clients, azureActiveDirectory, fabricSettings, provisioningState, clusterCodeVersion, clusterUpgradeMode, clusterUpgradeCadence, addOnFeatures, isAutoOSUpgradeEnabled, hasZoneResiliency, maxUnusedVersionsToKeep, isIPv6Enabled, subnetId, ipTags, ipv6Address, isServicePublicIPEnabled, auxiliarySubnets, serviceEndpoints, zonalUpdateMode, useCustomVnet, publicIPPrefixId, publicIPv6PrefixId, ddosProtectionPlanId, upgradeDescription, httpGatewayTokenAuthConnectionPort, isHttpGatewayExclusiveAuthModeEnabled, etag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="skuName" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClustersSkuName&gt;" />
        <Parameter Name="dnsName" Type="System.String" />
        <Parameter Name="fqdn" Type="System.String" />
        <Parameter Name="ipv4Address" Type="System.Net.IPAddress" />
        <Parameter Name="clusterId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="clusterState" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterState&gt;" />
        <Parameter Name="clusterCertificateThumbprints" Type="System.Collections.Generic.IEnumerable&lt;System.BinaryData&gt;" />
        <Parameter Name="clientConnectionPort" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="httpGatewayConnectionPort" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="adminUserName" Type="System.String" />
        <Parameter Name="adminPassword" Type="System.String" />
        <Parameter Name="loadBalancingRules" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterLoadBalancingRule&gt;" />
        <Parameter Name="isRdpAccessAllowed" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="networkSecurityRules" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedNetworkSecurityRule&gt;" />
        <Parameter Name="clients" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterClientCertificate&gt;" />
        <Parameter Name="azureActiveDirectory" Type="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterAzureActiveDirectory" />
        <Parameter Name="fabricSettings" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ClusterFabricSettingsSection&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedResourceProvisioningState&gt;" />
        <Parameter Name="clusterCodeVersion" Type="System.String" />
        <Parameter Name="clusterUpgradeMode" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterUpgradeMode&gt;" />
        <Parameter Name="clusterUpgradeCadence" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterUpgradeCadence&gt;" />
        <Parameter Name="addOnFeatures" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterAddOnFeature&gt;" />
        <Parameter Name="isAutoOSUpgradeEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="hasZoneResiliency" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="maxUnusedVersionsToKeep" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="isIPv6Enabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="subnetId" Type="System.String" />
        <Parameter Name="ipTags" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterIPTag&gt;" />
        <Parameter Name="ipv6Address" Type="System.Net.IPAddress" />
        <Parameter Name="isServicePublicIPEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="auxiliarySubnets" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterSubnet&gt;" />
        <Parameter Name="serviceEndpoints" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterServiceEndpoint&gt;" />
        <Parameter Name="zonalUpdateMode" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ZonalUpdateMode&gt;" />
        <Parameter Name="useCustomVnet" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="publicIPPrefixId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="publicIPv6PrefixId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="ddosProtectionPlanId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="upgradeDescription" Type="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedClusterUpgradePolicy" />
        <Parameter Name="httpGatewayTokenAuthConnectionPort" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="isHttpGatewayExclusiveAuthModeEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="skuName"> The sku of the managed cluster. </param>
        <param name="dnsName"> The cluster dns name. </param>
        <param name="fqdn"> The fully qualified domain name associated with the public load balancer of the cluster. </param>
        <param name="ipv4Address"> The IPv4 address associated with the public load balancer of the cluster. </param>
        <param name="clusterId"> A service generated unique identifier for the cluster resource. </param>
        <param name="clusterState"> The current state of the cluster. </param>
        <param name="clusterCertificateThumbprints"> List of thumbprints of the cluster certificates. </param>
        <param name="clientConnectionPort"> The port used for client connections to the cluster. </param>
        <param name="httpGatewayConnectionPort"> The port used for HTTP connections to the cluster. </param>
        <param name="adminUserName"> VM admin user name. </param>
        <param name="adminPassword"> VM admin user password. </param>
        <param name="loadBalancingRules"> Load balancing rules that are applied to the public load balancer of the cluster. </param>
        <param name="isRdpAccessAllowed"> Setting this to true enables RDP access to the VM. The default NSG rule opens RDP port to Internet which can be overridden with custom Network Security Rules. The default value for this setting is false. </param>
        <param name="networkSecurityRules"> Custom Network Security Rules that are applied to the Virtual Network of the cluster. </param>
        <param name="clients"> Client certificates that are allowed to manage the cluster. </param>
        <param name="azureActiveDirectory"> The AAD authentication settings of the cluster. </param>
        <param name="fabricSettings"> The list of custom fabric settings to configure the cluster. </param>
        <param name="provisioningState"> The provisioning state of the managed cluster resource. </param>
        <param name="clusterCodeVersion"> The Service Fabric runtime version of the cluster. This property is required when **clusterUpgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**. </param>
        <param name="clusterUpgradeMode">
             The upgrade mode of the cluster when new Service Fabric runtime version is available.
            
             </param>
        <param name="clusterUpgradeCadence"> Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **clusterUpgradeMode** is set to 'Automatic'. </param>
        <param name="addOnFeatures"> List of add-on features to enable on the cluster. </param>
        <param name="isAutoOSUpgradeEnabled"> Setting this to true enables automatic OS upgrade for the node types that are created using any platform OS image with version 'latest'. The default value for this setting is false. </param>
        <param name="hasZoneResiliency"> Indicates if the cluster has zone resiliency. </param>
        <param name="maxUnusedVersionsToKeep"> The policy used to clean up unused versions. </param>
        <param name="isIPv6Enabled"> Setting this to true creates IPv6 address space for the default VNet used by the cluster. This setting cannot be changed once the cluster is created. The default value for this setting is false. </param>
        <param name="subnetId"> If specified, the node types for the cluster are created in this subnet instead of the default VNet. The **networkSecurityRules** specified for the cluster are also applied to this subnet. This setting cannot be changed once the cluster is created. </param>
        <param name="ipTags"> The list of IP tags associated with the default public IP address of the cluster. </param>
        <param name="ipv6Address"> IPv6 address for the cluster if IPv6 is enabled. </param>
        <param name="isServicePublicIPEnabled"> Setting this to true will link the IPv4 address as the ServicePublicIP of the IPv6 address. It can only be set to True if IPv6 is enabled on the cluster. </param>
        <param name="auxiliarySubnets"> Auxiliary subnets for the cluster. </param>
        <param name="serviceEndpoints"> Service endpoints for subnets in the cluster. </param>
        <param name="zonalUpdateMode"> Indicates the update mode for Cross Az clusters. </param>
        <param name="useCustomVnet"> For new clusters, this parameter indicates that it uses Bring your own VNet, but the subnet is specified at node type level; and for such clusters, the subnetId property is required for node types. </param>
        <param name="publicIPPrefixId"> Specify the resource id of a public IPv4 prefix that the load balancer will allocate a public IPv4 address from. This setting cannot be changed once the cluster is created. </param>
        <param name="publicIPv6PrefixId"> Specify the resource id of a public IPv6 prefix that the load balancer will allocate a public IPv6 address from. This setting cannot be changed once the cluster is created. </param>
        <param name="ddosProtectionPlanId"> Specify the resource id of a DDoS network protection plan that will be associated with the virtual network of the cluster. </param>
        <param name="upgradeDescription"> The policy to use when upgrading the cluster. </param>
        <param name="httpGatewayTokenAuthConnectionPort"> The port used for token-auth based HTTPS connections to the cluster. Cannot be set to the same port as HttpGatewayEndpoint. </param>
        <param name="isHttpGatewayExclusiveAuthModeEnabled"> If true, token-based authentication is not allowed on the HttpGatewayEndpoint. This is required to support TLS versions 1.3 and above. If token-based authentication is used, HttpGatewayTokenAuthConnectionPort must be defined. </param>
        <param name="etag"> Azure resource etag. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedClusterData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceFabricManagedClusterVersion">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion ServiceFabricManagedClusterVersion (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string clusterCodeVersion = default, DateTimeOffset? versionSupportExpireOn = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterOSType? osType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion ServiceFabricManagedClusterVersion(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string clusterCodeVersion, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; versionSupportExpireOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterOSType&gt; osType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.ServiceFabricManagedClusterVersion(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterOSType})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ServiceFabricManagedClusterVersion (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional clusterCodeVersion As String = Nothing, Optional versionSupportExpireOn As Nullable(Of DateTimeOffset) = Nothing, Optional osType As Nullable(Of ServiceFabricManagedClusterOSType) = Nothing) As ServiceFabricManagedClusterVersion" />
      <MemberSignature Language="F#" Value="static member ServiceFabricManagedClusterVersion : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterOSType&gt; -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.ServiceFabricManagedClusterVersion (id, name, resourceType, systemData, clusterCodeVersion, versionSupportExpireOn, osType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="clusterCodeVersion" Type="System.String" />
        <Parameter Name="versionSupportExpireOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="osType" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterOSType&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="clusterCodeVersion"> The Service Fabric runtime version of the cluster. </param>
        <param name="versionSupportExpireOn"> The date of expiry of support of the version. </param>
        <param name="osType"> Cluster operating system, the default will be Windows. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterVersion" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceFabricManagedNodeTypeData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedNodeTypeData ServiceFabricManagedNodeTypeData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSku sku = default, bool? isPrimary = default, int? vmInstanceCount = default, int? dataDiskSizeInGB = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedDataDiskType? dataDiskType = default, string dataDiskLetter = default, System.Collections.Generic.IDictionary&lt;string,string&gt; placementProperties = default, System.Collections.Generic.IDictionary&lt;string,string&gt; capacities = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.EndpointRangeDescription applicationPorts = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.EndpointRangeDescription ephemeralPorts = default, string vmSize = default, string vmImagePublisher = default, string vmImageOffer = default, string vmImageSku = default, string vmImageVersion = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVaultSecretGroup&gt; vmSecrets = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVmssExtension&gt; vmExtensions = default, System.Collections.Generic.IEnumerable&lt;Azure.Core.ResourceIdentifier&gt; userAssignedIdentities = default, bool? isStateless = default, bool? hasMultiplePlacementGroups = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeFrontendConfiguration&gt; frontendConfigurations = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedNetworkSecurityRule&gt; networkSecurityRules = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVmssDataDisk&gt; additionalDataDisks = default, bool? isEncryptionAtHostEnabled = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedResourceProvisioningState? provisioningState = default, bool? isAcceleratedNetworkingEnabled = default, bool? useDefaultPublicLoadBalancer = default, bool? useTempDataDisk = default, bool? isOverProvisioningEnabled = default, System.Collections.Generic.IEnumerable&lt;string&gt; zones = default, bool? isSpotVm = default, string hostGroupId = default, bool? useEphemeralOSDisk = default, string spotRestoreTimeout = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.SpotNodeVmEvictionPolicyType? evictionPolicy = default, Azure.Core.ResourceIdentifier vmImageResourceId = default, Azure.Core.ResourceIdentifier subnetId = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.VmSetupAction&gt; vmSetupActions = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterSecurityType? securityType = default, bool? isSecureBootEnabled = default, bool? isNodePublicIPEnabled = default, bool? isNodePublicIPv6Enabled = default, Azure.Core.ResourceIdentifier vmSharedGalleryImageId = default, Azure.Core.ResourceIdentifier natGatewayId = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.VmImagePlan vmImagePlan = default, Azure.Core.ResourceIdentifier serviceArtifactReferenceId = default, Azure.Core.ResourceIdentifier dscpConfigurationId = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.AdditionalNetworkInterfaceConfiguration&gt; additionalNetworkInterfaceConfigurations = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedNodeTypeData ServiceFabricManagedNodeTypeData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSku sku, valuetype System.Nullable`1&lt;bool&gt; isPrimary, valuetype System.Nullable`1&lt;int32&gt; vmInstanceCount, valuetype System.Nullable`1&lt;int32&gt; dataDiskSizeInGB, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedDataDiskType&gt; dataDiskType, string dataDiskLetter, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; placementProperties, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; capacities, class Azure.ResourceManager.ServiceFabricManagedClusters.Models.EndpointRangeDescription applicationPorts, class Azure.ResourceManager.ServiceFabricManagedClusters.Models.EndpointRangeDescription ephemeralPorts, string vmSize, string vmImagePublisher, string vmImageOffer, string vmImageSku, string vmImageVersion, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVaultSecretGroup&gt; vmSecrets, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVmssExtension&gt; vmExtensions, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Core.ResourceIdentifier&gt; userAssignedIdentities, valuetype System.Nullable`1&lt;bool&gt; isStateless, valuetype System.Nullable`1&lt;bool&gt; hasMultiplePlacementGroups, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeFrontendConfiguration&gt; frontendConfigurations, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedNetworkSecurityRule&gt; networkSecurityRules, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVmssDataDisk&gt; additionalDataDisks, valuetype System.Nullable`1&lt;bool&gt; isEncryptionAtHostEnabled, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedResourceProvisioningState&gt; provisioningState, valuetype System.Nullable`1&lt;bool&gt; isAcceleratedNetworkingEnabled, valuetype System.Nullable`1&lt;bool&gt; useDefaultPublicLoadBalancer, valuetype System.Nullable`1&lt;bool&gt; useTempDataDisk, valuetype System.Nullable`1&lt;bool&gt; isOverProvisioningEnabled, class System.Collections.Generic.IEnumerable`1&lt;string&gt; zones, valuetype System.Nullable`1&lt;bool&gt; isSpotVm, string hostGroupId, valuetype System.Nullable`1&lt;bool&gt; useEphemeralOSDisk, string spotRestoreTimeout, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.SpotNodeVmEvictionPolicyType&gt; evictionPolicy, class Azure.Core.ResourceIdentifier vmImageResourceId, class Azure.Core.ResourceIdentifier subnetId, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.VmSetupAction&gt; vmSetupActions, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterSecurityType&gt; securityType, valuetype System.Nullable`1&lt;bool&gt; isSecureBootEnabled, valuetype System.Nullable`1&lt;bool&gt; isNodePublicIPEnabled, valuetype System.Nullable`1&lt;bool&gt; isNodePublicIPv6Enabled, class Azure.Core.ResourceIdentifier vmSharedGalleryImageId, class Azure.Core.ResourceIdentifier natGatewayId, class Azure.ResourceManager.ServiceFabricManagedClusters.Models.VmImagePlan vmImagePlan, class Azure.Core.ResourceIdentifier serviceArtifactReferenceId, class Azure.Core.ResourceIdentifier dscpConfigurationId, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.AdditionalNetworkInterfaceConfiguration&gt; additionalNetworkInterfaceConfigurations, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.ServiceFabricManagedNodeTypeData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSku,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedDataDiskType},System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},Azure.ResourceManager.ServiceFabricManagedClusters.Models.EndpointRangeDescription,Azure.ResourceManager.ServiceFabricManagedClusters.Models.EndpointRangeDescription,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVaultSecretGroup},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVmssExtension},System.Collections.Generic.IEnumerable{Azure.Core.ResourceIdentifier},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeFrontendConfiguration},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedNetworkSecurityRule},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVmssDataDisk},System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedResourceProvisioningState},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.SpotNodeVmEvictionPolicyType},Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.VmSetupAction},System.Nullable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterSecurityType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,Azure.ResourceManager.ServiceFabricManagedClusters.Models.VmImagePlan,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.AdditionalNetworkInterfaceConfiguration},System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ServiceFabricManagedNodeTypeData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional sku As NodeTypeSku = Nothing, Optional isPrimary As Nullable(Of Boolean) = Nothing, Optional vmInstanceCount As Nullable(Of Integer) = Nothing, Optional dataDiskSizeInGB As Nullable(Of Integer) = Nothing, Optional dataDiskType As Nullable(Of ServiceFabricManagedDataDiskType) = Nothing, Optional dataDiskLetter As String = Nothing, Optional placementProperties As IDictionary(Of String, String) = Nothing, Optional capacities As IDictionary(Of String, String) = Nothing, Optional applicationPorts As EndpointRangeDescription = Nothing, Optional ephemeralPorts As EndpointRangeDescription = Nothing, Optional vmSize As String = Nothing, Optional vmImagePublisher As String = Nothing, Optional vmImageOffer As String = Nothing, Optional vmImageSku As String = Nothing, Optional vmImageVersion As String = Nothing, Optional vmSecrets As IEnumerable(Of NodeTypeVaultSecretGroup) = Nothing, Optional vmExtensions As IEnumerable(Of NodeTypeVmssExtension) = Nothing, Optional userAssignedIdentities As IEnumerable(Of ResourceIdentifier) = Nothing, Optional isStateless As Nullable(Of Boolean) = Nothing, Optional hasMultiplePlacementGroups As Nullable(Of Boolean) = Nothing, Optional frontendConfigurations As IEnumerable(Of NodeTypeFrontendConfiguration) = Nothing, Optional networkSecurityRules As IEnumerable(Of ServiceFabricManagedNetworkSecurityRule) = Nothing, Optional additionalDataDisks As IEnumerable(Of NodeTypeVmssDataDisk) = Nothing, Optional isEncryptionAtHostEnabled As Nullable(Of Boolean) = Nothing, Optional provisioningState As Nullable(Of ServiceFabricManagedResourceProvisioningState) = Nothing, Optional isAcceleratedNetworkingEnabled As Nullable(Of Boolean) = Nothing, Optional useDefaultPublicLoadBalancer As Nullable(Of Boolean) = Nothing, Optional useTempDataDisk As Nullable(Of Boolean) = Nothing, Optional isOverProvisioningEnabled As Nullable(Of Boolean) = Nothing, Optional zones As IEnumerable(Of String) = Nothing, Optional isSpotVm As Nullable(Of Boolean) = Nothing, Optional hostGroupId As String = Nothing, Optional useEphemeralOSDisk As Nullable(Of Boolean) = Nothing, Optional spotRestoreTimeout As String = Nothing, Optional evictionPolicy As Nullable(Of SpotNodeVmEvictionPolicyType) = Nothing, Optional vmImageResourceId As ResourceIdentifier = Nothing, Optional subnetId As ResourceIdentifier = Nothing, Optional vmSetupActions As IEnumerable(Of VmSetupAction) = Nothing, Optional securityType As Nullable(Of ServiceFabricManagedClusterSecurityType) = Nothing, Optional isSecureBootEnabled As Nullable(Of Boolean) = Nothing, Optional isNodePublicIPEnabled As Nullable(Of Boolean) = Nothing, Optional isNodePublicIPv6Enabled As Nullable(Of Boolean) = Nothing, Optional vmSharedGalleryImageId As ResourceIdentifier = Nothing, Optional natGatewayId As ResourceIdentifier = Nothing, Optional vmImagePlan As VmImagePlan = Nothing, Optional serviceArtifactReferenceId As ResourceIdentifier = Nothing, Optional dscpConfigurationId As ResourceIdentifier = Nothing, Optional additionalNetworkInterfaceConfigurations As IEnumerable(Of AdditionalNetworkInterfaceConfiguration) = Nothing, Optional tags As IDictionary(Of String, String) = Nothing) As ServiceFabricManagedNodeTypeData" />
      <MemberSignature Language="F#" Value="static member ServiceFabricManagedNodeTypeData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSku * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedDataDiskType&gt; * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.ResourceManager.ServiceFabricManagedClusters.Models.EndpointRangeDescription * Azure.ResourceManager.ServiceFabricManagedClusters.Models.EndpointRangeDescription * string * string * string * string * string * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVaultSecretGroup&gt; * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVmssExtension&gt; * seq&lt;Azure.Core.ResourceIdentifier&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeFrontendConfiguration&gt; * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedNetworkSecurityRule&gt; * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVmssDataDisk&gt; * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedResourceProvisioningState&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * seq&lt;string&gt; * Nullable&lt;bool&gt; * string * Nullable&lt;bool&gt; * string * Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.SpotNodeVmEvictionPolicyType&gt; * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.VmSetupAction&gt; * Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterSecurityType&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * Azure.ResourceManager.ServiceFabricManagedClusters.Models.VmImagePlan * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.AdditionalNetworkInterfaceConfiguration&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedNodeTypeData" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.ServiceFabricManagedNodeTypeData (id, name, resourceType, systemData, sku, isPrimary, vmInstanceCount, dataDiskSizeInGB, dataDiskType, dataDiskLetter, placementProperties, capacities, applicationPorts, ephemeralPorts, vmSize, vmImagePublisher, vmImageOffer, vmImageSku, vmImageVersion, vmSecrets, vmExtensions, userAssignedIdentities, isStateless, hasMultiplePlacementGroups, frontendConfigurations, networkSecurityRules, additionalDataDisks, isEncryptionAtHostEnabled, provisioningState, isAcceleratedNetworkingEnabled, useDefaultPublicLoadBalancer, useTempDataDisk, isOverProvisioningEnabled, zones, isSpotVm, hostGroupId, useEphemeralOSDisk, spotRestoreTimeout, evictionPolicy, vmImageResourceId, subnetId, vmSetupActions, securityType, isSecureBootEnabled, isNodePublicIPEnabled, isNodePublicIPv6Enabled, vmSharedGalleryImageId, natGatewayId, vmImagePlan, serviceArtifactReferenceId, dscpConfigurationId, additionalNetworkInterfaceConfigurations, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedNodeTypeData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="sku" Type="Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSku" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="isPrimary" Type="System.Nullable&lt;System.Boolean&gt;" Index="5" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="vmInstanceCount" Type="System.Nullable&lt;System.Int32&gt;" Index="6" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="dataDiskSizeInGB" Type="System.Nullable&lt;System.Int32&gt;" Index="7" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="dataDiskType" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedDataDiskType&gt;" Index="8" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="dataDiskLetter" Type="System.String" Index="9" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="placementProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="10" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="capacities" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="11" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="applicationPorts" Type="Azure.ResourceManager.ServiceFabricManagedClusters.Models.EndpointRangeDescription" Index="12" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="ephemeralPorts" Type="Azure.ResourceManager.ServiceFabricManagedClusters.Models.EndpointRangeDescription" Index="13" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="vmSize" Type="System.String" Index="14" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="vmImagePublisher" Type="System.String" Index="15" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="vmImageOffer" Type="System.String" Index="16" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="vmImageSku" Type="System.String" Index="17" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="vmImageVersion" Type="System.String" Index="18" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="vmSecrets" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVaultSecretGroup&gt;" Index="19" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="vmExtensions" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVmssExtension&gt;" Index="20" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="userAssignedIdentities" Type="System.Collections.Generic.IEnumerable&lt;Azure.Core.ResourceIdentifier&gt;" Index="21" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="isStateless" Type="System.Nullable&lt;System.Boolean&gt;" Index="22" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="hasMultiplePlacementGroups" Type="System.Nullable&lt;System.Boolean&gt;" Index="23" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="frontendConfigurations" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeFrontendConfiguration&gt;" Index="24" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="networkSecurityRules" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedNetworkSecurityRule&gt;" Index="25" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="additionalDataDisks" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVmssDataDisk&gt;" Index="26" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="isEncryptionAtHostEnabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="27" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedResourceProvisioningState&gt;" Index="28" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="isAcceleratedNetworkingEnabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="29" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="useDefaultPublicLoadBalancer" Type="System.Nullable&lt;System.Boolean&gt;" Index="30" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="useTempDataDisk" Type="System.Nullable&lt;System.Boolean&gt;" Index="31" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="isOverProvisioningEnabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="32" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="zones" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="33" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="isSpotVm" Type="System.Nullable&lt;System.Boolean&gt;" Index="34" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="hostGroupId" Type="System.String" Index="35" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="useEphemeralOSDisk" Type="System.Nullable&lt;System.Boolean&gt;" Index="36" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="spotRestoreTimeout" Type="System.String" Index="37" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="evictionPolicy" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.SpotNodeVmEvictionPolicyType&gt;" Index="38" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="vmImageResourceId" Type="Azure.Core.ResourceIdentifier" Index="39" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="subnetId" Type="Azure.Core.ResourceIdentifier" Index="40" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="vmSetupActions" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.VmSetupAction&gt;" Index="41" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="securityType" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterSecurityType&gt;" Index="42" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="isSecureBootEnabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="43" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="isNodePublicIPEnabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="44" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="isNodePublicIPv6Enabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="45" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="vmSharedGalleryImageId" Type="Azure.Core.ResourceIdentifier" Index="46" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="natGatewayId" Type="Azure.Core.ResourceIdentifier" Index="47" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="vmImagePlan" Type="Azure.ResourceManager.ServiceFabricManagedClusters.Models.VmImagePlan" Index="48" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="serviceArtifactReferenceId" Type="Azure.Core.ResourceIdentifier" Index="49" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="dscpConfigurationId" Type="Azure.Core.ResourceIdentifier" Index="50" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="additionalNetworkInterfaceConfigurations" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.AdditionalNetworkInterfaceConfiguration&gt;" Index="51" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="52" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="sku"> The node type sku. </param>
        <param name="isPrimary"> Indicates the Service Fabric system services for the cluster will run on this node type. This setting cannot be changed once the node type is created. </param>
        <param name="vmInstanceCount"> The number of nodes in the node type. &lt;br /&gt;&lt;br /&gt;**Values:** &lt;br /&gt;-1 - Use when auto scale rules are configured or sku.capacity is defined &lt;br /&gt; 0 - Not supported &lt;br /&gt; &gt;0 - Use for manual scale. </param>
        <param name="dataDiskSizeInGB"> Disk size for the managed disk attached to the vms on the node type in GBs. </param>
        <param name="dataDiskType"> Managed data disk type. Specifies the storage account type for the managed disk. </param>
        <param name="dataDiskLetter"> Managed data disk letter. It can not use the reserved letter C or D and it can not change after created. </param>
        <param name="placementProperties"> The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run. </param>
        <param name="capacities"> The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has. </param>
        <param name="applicationPorts"> The range of ports from which cluster assigned port to Service Fabric applications. </param>
        <param name="ephemeralPorts"> The range of ephemeral ports that nodes in this node type should be configured with. </param>
        <param name="vmSize"> The size of virtual machines in the pool. All virtual machines in a pool are the same size. For example, Standard_D3. </param>
        <param name="vmImagePublisher"> The publisher of the Azure Virtual Machines Marketplace image. For example, Canonical or MicrosoftWindowsServer. </param>
        <param name="vmImageOffer"> The offer type of the Azure Virtual Machines Marketplace image. For example, UbuntuServer or WindowsServer. </param>
        <param name="vmImageSku"> The SKU of the Azure Virtual Machines Marketplace image. For example, 14.04.0-LTS or 2012-R2-Datacenter. </param>
        <param name="vmImageVersion"> The version of the Azure Virtual Machines Marketplace image. A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'. </param>
        <param name="vmSecrets"> The secrets to install in the virtual machines. </param>
        <param name="vmExtensions"> Set of extensions that should be installed onto the virtual machines. </param>
        <param name="userAssignedIdentities"> Identities to assign to the virtual machine scale set under the node type. </param>
        <param name="isStateless"> Indicates if the node type can only host Stateless workloads. </param>
        <param name="hasMultiplePlacementGroups"> Indicates if scale set associated with the node type can be composed of multiple placement groups. </param>
        <param name="frontendConfigurations"> Indicates the node type uses its own frontend configurations instead of the default one for the cluster. This setting can only be specified for non-primary node types and can not be added or removed after the node type is created. </param>
        <param name="networkSecurityRules"> The Network Security Rules for this node type. This setting can only be specified for node types that are configured with frontend configurations. </param>
        <param name="additionalDataDisks"> Additional managed data disks. </param>
        <param name="isEncryptionAtHostEnabled"> Enable or disable the Host Encryption for the virtual machines on the node type. This will enable the encryption for all the disks including Resource/Temp disk at host itself. Default: The Encryption at host will be disabled unless this property is set to true for the resource. </param>
        <param name="provisioningState"> The provisioning state of the node type resource. </param>
        <param name="isAcceleratedNetworkingEnabled"> Specifies whether the network interface is accelerated networking-enabled. </param>
        <param name="useDefaultPublicLoadBalancer"> Specifies whether the use public load balancer. If not specified and the node type doesn't have its own frontend configuration, it will be attached to the default load balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is true, then the frontend has to be an Internal Load Balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is false or not set, then the custom load balancer must include a public load balancer to provide outbound connectivity. </param>
        <param name="useTempDataDisk"> Specifies whether to use the temporary disk for the service fabric data root, in which case no managed data disk will be attached and the temporary disk will be used. It is only allowed for stateless node types. </param>
        <param name="isOverProvisioningEnabled"> Specifies whether the node type should be overprovisioned. It is only allowed for stateless node types. </param>
        <param name="zones"> Specifies the availability zones where the node type would span across. If the cluster is not spanning across availability zones, initiates az migration for the cluster. </param>
        <param name="isSpotVm"> Indicates whether the node type will be Spot Virtual Machines. Azure will allocate the VMs if there is capacity available and the VMs can be evicted at any time. </param>
        <param name="hostGroupId"> Specifies the full host group resource Id. This property is used for deploying on azure dedicated hosts. </param>
        <param name="useEphemeralOSDisk"> Indicates whether to use ephemeral os disk. The sku selected on the vmSize property needs to support this feature. </param>
        <param name="spotRestoreTimeout"> Indicates the time duration after which the platform will not try to restore the VMSS SPOT instances specified as ISO 8601. </param>
        <param name="evictionPolicy"> Specifies the eviction policy for virtual machines in a SPOT node type. Default is Delete. </param>
        <param name="vmImageResourceId"> Indicates the resource id of the vm image. This parameter is used for custom vm image. </param>
        <param name="subnetId"> Indicates the resource id of the subnet for the node type. </param>
        <param name="vmSetupActions"> Specifies the actions to be performed on the vms before bootstrapping the service fabric runtime. </param>
        <param name="securityType"> Specifies the security type of the nodeType. Only TrustedLaunch is currently supported. </param>
        <param name="isSecureBootEnabled"> Specifies whether secure boot should be enabled on the nodeType. Can only be used with TrustedLaunch SecurityType. </param>
        <param name="isNodePublicIPEnabled"> Specifies whether each node is allocated its own public IPv4 address. This is only supported on secondary node types with custom Load Balancers. </param>
        <param name="isNodePublicIPv6Enabled"> Specifies whether each node is allocated its own public IPv6 address. This is only supported on secondary node types with custom Load Balancers. </param>
        <param name="vmSharedGalleryImageId"> Indicates the resource id of the vm shared galleries image. This parameter is used for custom vm image. </param>
        <param name="natGatewayId"> Specifies the resource id of a NAT Gateway to attach to the subnet of this node type. Node type must use custom load balancer. </param>
        <param name="vmImagePlan"> Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started -&gt;. Enter any required information and then click Save. </param>
        <param name="serviceArtifactReferenceId"> Specifies the service artifact reference id used to set same image version for all virtual machines in the scale set when using 'latest' image version. </param>
        <param name="dscpConfigurationId"> Specifies the resource id of the DSCP configuration to apply to the node type network interface. </param>
        <param name="additionalNetworkInterfaceConfigurations"> Specifies the settings for any additional secondary network interfaces to attach to the node type. </param>
        <param name="tags"> Azure resource tags. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedNodeTypeData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedNodeTypeData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceFabricManagedNodeTypeData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedNodeTypeData ServiceFabricManagedNodeTypeData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSku sku = default, bool? isPrimary = default, int? vmInstanceCount = default, int? dataDiskSizeInGB = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedDataDiskType? dataDiskType = default, string dataDiskLetter = default, System.Collections.Generic.IDictionary&lt;string,string&gt; placementProperties = default, System.Collections.Generic.IDictionary&lt;string,string&gt; capacities = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.EndpointRangeDescription applicationPorts = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.EndpointRangeDescription ephemeralPorts = default, string vmSize = default, string vmImagePublisher = default, string vmImageOffer = default, string vmImageSku = default, string vmImageVersion = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVaultSecretGroup&gt; vmSecrets = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVmssExtension&gt; vmExtensions = default, System.Collections.Generic.IEnumerable&lt;Azure.Core.ResourceIdentifier&gt; userAssignedIdentities = default, bool? isStateless = default, bool? hasMultiplePlacementGroups = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeFrontendConfiguration&gt; frontendConfigurations = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedNetworkSecurityRule&gt; networkSecurityRules = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVmssDataDisk&gt; additionalDataDisks = default, bool? isEncryptionAtHostEnabled = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedResourceProvisioningState? provisioningState = default, bool? isAcceleratedNetworkingEnabled = default, bool? useDefaultPublicLoadBalancer = default, bool? useTempDataDisk = default, bool? isOverProvisioningEnabled = default, System.Collections.Generic.IEnumerable&lt;string&gt; zones = default, bool? isSpotVm = default, string hostGroupId = default, bool? useEphemeralOSDisk = default, string spotRestoreTimeout = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.SpotNodeVmEvictionPolicyType? evictionPolicy = default, Azure.Core.ResourceIdentifier vmImageResourceId = default, Azure.Core.ResourceIdentifier subnetId = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.VmSetupAction&gt; vmSetupActions = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterSecurityType? securityType = default, bool? isSecureBootEnabled = default, bool? isNodePublicIPEnabled = default, bool? isNodePublicIPv6Enabled = default, Azure.Core.ResourceIdentifier vmSharedGalleryImageId = default, Azure.Core.ResourceIdentifier natGatewayId = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeNatConfig&gt; natConfigurations = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.VmImagePlan vmImagePlan = default, Azure.Core.ResourceIdentifier serviceArtifactReferenceId = default, Azure.Core.ResourceIdentifier dscpConfigurationId = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.AdditionalNetworkInterfaceConfiguration&gt; additionalNetworkInterfaceConfigurations = default, string computerNamePrefix = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedNodeTypeData ServiceFabricManagedNodeTypeData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSku sku, valuetype System.Nullable`1&lt;bool&gt; isPrimary, valuetype System.Nullable`1&lt;int32&gt; vmInstanceCount, valuetype System.Nullable`1&lt;int32&gt; dataDiskSizeInGB, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedDataDiskType&gt; dataDiskType, string dataDiskLetter, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; placementProperties, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; capacities, class Azure.ResourceManager.ServiceFabricManagedClusters.Models.EndpointRangeDescription applicationPorts, class Azure.ResourceManager.ServiceFabricManagedClusters.Models.EndpointRangeDescription ephemeralPorts, string vmSize, string vmImagePublisher, string vmImageOffer, string vmImageSku, string vmImageVersion, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVaultSecretGroup&gt; vmSecrets, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVmssExtension&gt; vmExtensions, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Core.ResourceIdentifier&gt; userAssignedIdentities, valuetype System.Nullable`1&lt;bool&gt; isStateless, valuetype System.Nullable`1&lt;bool&gt; hasMultiplePlacementGroups, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeFrontendConfiguration&gt; frontendConfigurations, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedNetworkSecurityRule&gt; networkSecurityRules, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVmssDataDisk&gt; additionalDataDisks, valuetype System.Nullable`1&lt;bool&gt; isEncryptionAtHostEnabled, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedResourceProvisioningState&gt; provisioningState, valuetype System.Nullable`1&lt;bool&gt; isAcceleratedNetworkingEnabled, valuetype System.Nullable`1&lt;bool&gt; useDefaultPublicLoadBalancer, valuetype System.Nullable`1&lt;bool&gt; useTempDataDisk, valuetype System.Nullable`1&lt;bool&gt; isOverProvisioningEnabled, class System.Collections.Generic.IEnumerable`1&lt;string&gt; zones, valuetype System.Nullable`1&lt;bool&gt; isSpotVm, string hostGroupId, valuetype System.Nullable`1&lt;bool&gt; useEphemeralOSDisk, string spotRestoreTimeout, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.SpotNodeVmEvictionPolicyType&gt; evictionPolicy, class Azure.Core.ResourceIdentifier vmImageResourceId, class Azure.Core.ResourceIdentifier subnetId, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.VmSetupAction&gt; vmSetupActions, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterSecurityType&gt; securityType, valuetype System.Nullable`1&lt;bool&gt; isSecureBootEnabled, valuetype System.Nullable`1&lt;bool&gt; isNodePublicIPEnabled, valuetype System.Nullable`1&lt;bool&gt; isNodePublicIPv6Enabled, class Azure.Core.ResourceIdentifier vmSharedGalleryImageId, class Azure.Core.ResourceIdentifier natGatewayId, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeNatConfig&gt; natConfigurations, class Azure.ResourceManager.ServiceFabricManagedClusters.Models.VmImagePlan vmImagePlan, class Azure.Core.ResourceIdentifier serviceArtifactReferenceId, class Azure.Core.ResourceIdentifier dscpConfigurationId, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.AdditionalNetworkInterfaceConfiguration&gt; additionalNetworkInterfaceConfigurations, string computerNamePrefix, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.ServiceFabricManagedNodeTypeData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSku,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedDataDiskType},System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},Azure.ResourceManager.ServiceFabricManagedClusters.Models.EndpointRangeDescription,Azure.ResourceManager.ServiceFabricManagedClusters.Models.EndpointRangeDescription,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVaultSecretGroup},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVmssExtension},System.Collections.Generic.IEnumerable{Azure.Core.ResourceIdentifier},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeFrontendConfiguration},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedNetworkSecurityRule},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVmssDataDisk},System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedResourceProvisioningState},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.SpotNodeVmEvictionPolicyType},Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.VmSetupAction},System.Nullable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterSecurityType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeNatConfig},Azure.ResourceManager.ServiceFabricManagedClusters.Models.VmImagePlan,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.AdditionalNetworkInterfaceConfiguration},System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ServiceFabricManagedNodeTypeData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional sku As NodeTypeSku = Nothing, Optional isPrimary As Nullable(Of Boolean) = Nothing, Optional vmInstanceCount As Nullable(Of Integer) = Nothing, Optional dataDiskSizeInGB As Nullable(Of Integer) = Nothing, Optional dataDiskType As Nullable(Of ServiceFabricManagedDataDiskType) = Nothing, Optional dataDiskLetter As String = Nothing, Optional placementProperties As IDictionary(Of String, String) = Nothing, Optional capacities As IDictionary(Of String, String) = Nothing, Optional applicationPorts As EndpointRangeDescription = Nothing, Optional ephemeralPorts As EndpointRangeDescription = Nothing, Optional vmSize As String = Nothing, Optional vmImagePublisher As String = Nothing, Optional vmImageOffer As String = Nothing, Optional vmImageSku As String = Nothing, Optional vmImageVersion As String = Nothing, Optional vmSecrets As IEnumerable(Of NodeTypeVaultSecretGroup) = Nothing, Optional vmExtensions As IEnumerable(Of NodeTypeVmssExtension) = Nothing, Optional userAssignedIdentities As IEnumerable(Of ResourceIdentifier) = Nothing, Optional isStateless As Nullable(Of Boolean) = Nothing, Optional hasMultiplePlacementGroups As Nullable(Of Boolean) = Nothing, Optional frontendConfigurations As IEnumerable(Of NodeTypeFrontendConfiguration) = Nothing, Optional networkSecurityRules As IEnumerable(Of ServiceFabricManagedNetworkSecurityRule) = Nothing, Optional additionalDataDisks As IEnumerable(Of NodeTypeVmssDataDisk) = Nothing, Optional isEncryptionAtHostEnabled As Nullable(Of Boolean) = Nothing, Optional provisioningState As Nullable(Of ServiceFabricManagedResourceProvisioningState) = Nothing, Optional isAcceleratedNetworkingEnabled As Nullable(Of Boolean) = Nothing, Optional useDefaultPublicLoadBalancer As Nullable(Of Boolean) = Nothing, Optional useTempDataDisk As Nullable(Of Boolean) = Nothing, Optional isOverProvisioningEnabled As Nullable(Of Boolean) = Nothing, Optional zones As IEnumerable(Of String) = Nothing, Optional isSpotVm As Nullable(Of Boolean) = Nothing, Optional hostGroupId As String = Nothing, Optional useEphemeralOSDisk As Nullable(Of Boolean) = Nothing, Optional spotRestoreTimeout As String = Nothing, Optional evictionPolicy As Nullable(Of SpotNodeVmEvictionPolicyType) = Nothing, Optional vmImageResourceId As ResourceIdentifier = Nothing, Optional subnetId As ResourceIdentifier = Nothing, Optional vmSetupActions As IEnumerable(Of VmSetupAction) = Nothing, Optional securityType As Nullable(Of ServiceFabricManagedClusterSecurityType) = Nothing, Optional isSecureBootEnabled As Nullable(Of Boolean) = Nothing, Optional isNodePublicIPEnabled As Nullable(Of Boolean) = Nothing, Optional isNodePublicIPv6Enabled As Nullable(Of Boolean) = Nothing, Optional vmSharedGalleryImageId As ResourceIdentifier = Nothing, Optional natGatewayId As ResourceIdentifier = Nothing, Optional natConfigurations As IEnumerable(Of NodeTypeNatConfig) = Nothing, Optional vmImagePlan As VmImagePlan = Nothing, Optional serviceArtifactReferenceId As ResourceIdentifier = Nothing, Optional dscpConfigurationId As ResourceIdentifier = Nothing, Optional additionalNetworkInterfaceConfigurations As IEnumerable(Of AdditionalNetworkInterfaceConfiguration) = Nothing, Optional computerNamePrefix As String = Nothing, Optional tags As IDictionary(Of String, String) = Nothing) As ServiceFabricManagedNodeTypeData" />
      <MemberSignature Language="F#" Value="static member ServiceFabricManagedNodeTypeData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSku * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedDataDiskType&gt; * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.ResourceManager.ServiceFabricManagedClusters.Models.EndpointRangeDescription * Azure.ResourceManager.ServiceFabricManagedClusters.Models.EndpointRangeDescription * string * string * string * string * string * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVaultSecretGroup&gt; * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVmssExtension&gt; * seq&lt;Azure.Core.ResourceIdentifier&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeFrontendConfiguration&gt; * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedNetworkSecurityRule&gt; * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVmssDataDisk&gt; * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedResourceProvisioningState&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * seq&lt;string&gt; * Nullable&lt;bool&gt; * string * Nullable&lt;bool&gt; * string * Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.SpotNodeVmEvictionPolicyType&gt; * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.VmSetupAction&gt; * Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterSecurityType&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeNatConfig&gt; * Azure.ResourceManager.ServiceFabricManagedClusters.Models.VmImagePlan * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.AdditionalNetworkInterfaceConfiguration&gt; * string * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedNodeTypeData" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.ServiceFabricManagedNodeTypeData (id, name, resourceType, systemData, sku, isPrimary, vmInstanceCount, dataDiskSizeInGB, dataDiskType, dataDiskLetter, placementProperties, capacities, applicationPorts, ephemeralPorts, vmSize, vmImagePublisher, vmImageOffer, vmImageSku, vmImageVersion, vmSecrets, vmExtensions, userAssignedIdentities, isStateless, hasMultiplePlacementGroups, frontendConfigurations, networkSecurityRules, additionalDataDisks, isEncryptionAtHostEnabled, provisioningState, isAcceleratedNetworkingEnabled, useDefaultPublicLoadBalancer, useTempDataDisk, isOverProvisioningEnabled, zones, isSpotVm, hostGroupId, useEphemeralOSDisk, spotRestoreTimeout, evictionPolicy, vmImageResourceId, subnetId, vmSetupActions, securityType, isSecureBootEnabled, isNodePublicIPEnabled, isNodePublicIPv6Enabled, vmSharedGalleryImageId, natGatewayId, natConfigurations, vmImagePlan, serviceArtifactReferenceId, dscpConfigurationId, additionalNetworkInterfaceConfigurations, computerNamePrefix, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedNodeTypeData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="sku" Type="Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeSku" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isPrimary" Type="System.Nullable&lt;System.Boolean&gt;" Index="5" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="vmInstanceCount" Type="System.Nullable&lt;System.Int32&gt;" Index="6" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="dataDiskSizeInGB" Type="System.Nullable&lt;System.Int32&gt;" Index="7" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="dataDiskType" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedDataDiskType&gt;" Index="8" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="dataDiskLetter" Type="System.String" Index="9" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="placementProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="10" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="capacities" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="11" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="applicationPorts" Type="Azure.ResourceManager.ServiceFabricManagedClusters.Models.EndpointRangeDescription" Index="12" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="ephemeralPorts" Type="Azure.ResourceManager.ServiceFabricManagedClusters.Models.EndpointRangeDescription" Index="13" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="vmSize" Type="System.String" Index="14" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="vmImagePublisher" Type="System.String" Index="15" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="vmImageOffer" Type="System.String" Index="16" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="vmImageSku" Type="System.String" Index="17" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="vmImageVersion" Type="System.String" Index="18" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="vmSecrets" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVaultSecretGroup&gt;" Index="19" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="vmExtensions" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVmssExtension&gt;" Index="20" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="userAssignedIdentities" Type="System.Collections.Generic.IEnumerable&lt;Azure.Core.ResourceIdentifier&gt;" Index="21" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isStateless" Type="System.Nullable&lt;System.Boolean&gt;" Index="22" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="hasMultiplePlacementGroups" Type="System.Nullable&lt;System.Boolean&gt;" Index="23" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="frontendConfigurations" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeFrontendConfiguration&gt;" Index="24" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="networkSecurityRules" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedNetworkSecurityRule&gt;" Index="25" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="additionalDataDisks" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeVmssDataDisk&gt;" Index="26" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isEncryptionAtHostEnabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="27" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedResourceProvisioningState&gt;" Index="28" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isAcceleratedNetworkingEnabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="29" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="useDefaultPublicLoadBalancer" Type="System.Nullable&lt;System.Boolean&gt;" Index="30" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="useTempDataDisk" Type="System.Nullable&lt;System.Boolean&gt;" Index="31" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isOverProvisioningEnabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="32" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="zones" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="33" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isSpotVm" Type="System.Nullable&lt;System.Boolean&gt;" Index="34" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="hostGroupId" Type="System.String" Index="35" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="useEphemeralOSDisk" Type="System.Nullable&lt;System.Boolean&gt;" Index="36" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="spotRestoreTimeout" Type="System.String" Index="37" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="evictionPolicy" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.SpotNodeVmEvictionPolicyType&gt;" Index="38" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="vmImageResourceId" Type="Azure.Core.ResourceIdentifier" Index="39" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="subnetId" Type="Azure.Core.ResourceIdentifier" Index="40" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="vmSetupActions" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.VmSetupAction&gt;" Index="41" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="securityType" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedClusterSecurityType&gt;" Index="42" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isSecureBootEnabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="43" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isNodePublicIPEnabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="44" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isNodePublicIPv6Enabled" Type="System.Nullable&lt;System.Boolean&gt;" Index="45" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="vmSharedGalleryImageId" Type="Azure.Core.ResourceIdentifier" Index="46" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="natGatewayId" Type="Azure.Core.ResourceIdentifier" Index="47" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="natConfigurations" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.NodeTypeNatConfig&gt;" Index="48" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="vmImagePlan" Type="Azure.ResourceManager.ServiceFabricManagedClusters.Models.VmImagePlan" Index="49" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="serviceArtifactReferenceId" Type="Azure.Core.ResourceIdentifier" Index="50" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="dscpConfigurationId" Type="Azure.Core.ResourceIdentifier" Index="51" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="additionalNetworkInterfaceConfigurations" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.AdditionalNetworkInterfaceConfiguration&gt;" Index="52" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="computerNamePrefix" Type="System.String" Index="53" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="54" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="sku"> The node type sku. </param>
        <param name="isPrimary"> Indicates the Service Fabric system services for the cluster will run on this node type. This setting cannot be changed once the node type is created. </param>
        <param name="vmInstanceCount"> The number of nodes in the node type. &lt;br /&gt;&lt;br /&gt;**Values:** &lt;br /&gt;-1 - Use when auto scale rules are configured or sku.capacity is defined &lt;br /&gt; 0 - Not supported &lt;br /&gt; &gt;0 - Use for manual scale. </param>
        <param name="dataDiskSizeInGB"> Disk size for the managed disk attached to the vms on the node type in GBs. </param>
        <param name="dataDiskType"> Managed data disk type. Specifies the storage account type for the managed disk. </param>
        <param name="dataDiskLetter"> Managed data disk letter. It can not use the reserved letter C or D and it can not change after created. </param>
        <param name="placementProperties"> The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run. </param>
        <param name="capacities"> The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has. </param>
        <param name="applicationPorts"> The range of ports from which cluster assigned port to Service Fabric applications. </param>
        <param name="ephemeralPorts"> The range of ephemeral ports that nodes in this node type should be configured with. </param>
        <param name="vmSize"> The size of virtual machines in the pool. All virtual machines in a pool are the same size. For example, Standard_D3. </param>
        <param name="vmImagePublisher"> The publisher of the Azure Virtual Machines Marketplace image. For example, Canonical or MicrosoftWindowsServer. </param>
        <param name="vmImageOffer"> The offer type of the Azure Virtual Machines Marketplace image. For example, UbuntuServer or WindowsServer. </param>
        <param name="vmImageSku"> The SKU of the Azure Virtual Machines Marketplace image. For example, 14.04.0-LTS or 2012-R2-Datacenter. </param>
        <param name="vmImageVersion"> The version of the Azure Virtual Machines Marketplace image. A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'. </param>
        <param name="vmSecrets"> The secrets to install in the virtual machines. </param>
        <param name="vmExtensions"> Set of extensions that should be installed onto the virtual machines. </param>
        <param name="userAssignedIdentities"> Identities to assign to the virtual machine scale set under the node type. </param>
        <param name="isStateless"> Indicates if the node type can only host Stateless workloads. </param>
        <param name="hasMultiplePlacementGroups"> Indicates if scale set associated with the node type can be composed of multiple placement groups. </param>
        <param name="frontendConfigurations"> Indicates the node type uses its own frontend configurations instead of the default one for the cluster. This setting can only be specified for non-primary node types and can not be added or removed after the node type is created. </param>
        <param name="networkSecurityRules"> The Network Security Rules for this node type. This setting can only be specified for node types that are configured with frontend configurations. </param>
        <param name="additionalDataDisks"> Additional managed data disks. </param>
        <param name="isEncryptionAtHostEnabled"> Enable or disable the Host Encryption for the virtual machines on the node type. This will enable the encryption for all the disks including Resource/Temp disk at host itself. Default: The Encryption at host will be disabled unless this property is set to true for the resource. </param>
        <param name="provisioningState"> The provisioning state of the node type resource. </param>
        <param name="isAcceleratedNetworkingEnabled"> Specifies whether the network interface is accelerated networking-enabled. </param>
        <param name="useDefaultPublicLoadBalancer"> Specifies whether the use public load balancer. If not specified and the node type doesn't have its own frontend configuration, it will be attached to the default load balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is true, then the frontend has to be an Internal Load Balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is false or not set, then the custom load balancer must include a public load balancer to provide outbound connectivity. </param>
        <param name="useTempDataDisk"> Specifies whether to use the temporary disk for the service fabric data root, in which case no managed data disk will be attached and the temporary disk will be used. It is only allowed for stateless node types. </param>
        <param name="isOverProvisioningEnabled"> Specifies whether the node type should be overprovisioned. It is only allowed for stateless node types. </param>
        <param name="zones"> Specifies the availability zones where the node type would span across. If the cluster is not spanning across availability zones, initiates az migration for the cluster. </param>
        <param name="isSpotVm"> Indicates whether the node type will be Spot Virtual Machines. Azure will allocate the VMs if there is capacity available and the VMs can be evicted at any time. </param>
        <param name="hostGroupId"> Specifies the full host group resource Id. This property is used for deploying on azure dedicated hosts. </param>
        <param name="useEphemeralOSDisk"> Indicates whether to use ephemeral os disk. The sku selected on the vmSize property needs to support this feature. </param>
        <param name="spotRestoreTimeout"> Indicates the time duration after which the platform will not try to restore the VMSS SPOT instances specified as ISO 8601. </param>
        <param name="evictionPolicy"> Specifies the eviction policy for virtual machines in a SPOT node type. Default is Delete. </param>
        <param name="vmImageResourceId"> Indicates the resource id of the vm image. This parameter is used for custom vm image. </param>
        <param name="subnetId"> Indicates the resource id of the subnet for the node type. </param>
        <param name="vmSetupActions"> Specifies the actions to be performed on the vms before bootstrapping the service fabric runtime. </param>
        <param name="securityType"> Specifies the security type of the nodeType. Only Standard and TrustedLaunch are currently supported. </param>
        <param name="isSecureBootEnabled"> Specifies whether secure boot should be enabled on the nodeType. Can only be used with TrustedLaunch SecurityType. </param>
        <param name="isNodePublicIPEnabled"> Specifies whether each node is allocated its own public IPv4 address. This is only supported on secondary node types with custom Load Balancers. </param>
        <param name="isNodePublicIPv6Enabled"> Specifies whether each node is allocated its own public IPv6 address. This is only supported on secondary node types with custom Load Balancers. </param>
        <param name="vmSharedGalleryImageId"> Indicates the resource id of the vm shared galleries image. This parameter is used for custom vm image. </param>
        <param name="natGatewayId"> Specifies the resource id of a NAT Gateway to attach to the subnet of this node type. Node type must use custom load balancer. </param>
        <param name="natConfigurations"> Specifies the NAT configuration on default public Load Balancer for the node type. This is only supported for node types use the default public Load Balancer. </param>
        <param name="vmImagePlan"> Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started -&gt;. Enter any required information and then click Save. </param>
        <param name="serviceArtifactReferenceId"> Specifies the service artifact reference id used to set same image version for all virtual machines in the scale set when using 'latest' image version. </param>
        <param name="dscpConfigurationId"> Specifies the resource id of the DSCP configuration to apply to the node type network interface. </param>
        <param name="additionalNetworkInterfaceConfigurations"> Specifies the settings for any additional secondary network interfaces to attach to the node type. </param>
        <param name="computerNamePrefix"> Specifies the computer name prefix. Limited to 9 characters. If specified, allows for a longer name to be specified for the node type name. </param>
        <param name="tags"> Azure resource tags. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedNodeTypeData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedNodeTypeData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceFabricManagedServiceData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedServiceData ServiceFabricManagedServiceData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedServiceData ServiceFabricManagedServiceData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.ServiceFabricManagedServiceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ServiceFabricManagedServiceData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional properties As ManagedServiceProperties = Nothing) As ServiceFabricManagedServiceData" />
      <MemberSignature Language="F#" Value="static member ServiceFabricManagedServiceData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceProperties -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedServiceData" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.ServiceFabricManagedServiceData (id, name, resourceType, systemData, tags, location, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedServiceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="properties" Type="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceProperties" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="properties">
            The service resource properties.
            Please note <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceProperties" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.StatefulServiceProperties" /> and <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.StatelessServiceProperties" />.
            </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedServiceData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.ServiceFabricManagedServiceData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceFabricManagedUnsupportedVmSize">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize ServiceFabricManagedUnsupportedVmSize (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string vmSize = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize ServiceFabricManagedUnsupportedVmSize(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string vmSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.ServiceFabricManagedUnsupportedVmSize(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ServiceFabricManagedUnsupportedVmSize (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional vmSize As String = Nothing) As ServiceFabricManagedUnsupportedVmSize" />
      <MemberSignature Language="F#" Value="static member ServiceFabricManagedUnsupportedVmSize : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.ServiceFabricManagedUnsupportedVmSize (id, name, resourceType, systemData, vmSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="vmSize" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="vmSize"> VM Size properties. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedUnsupportedVmSize" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatefulServiceProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabricManagedClusters.Models.StatefulServiceProperties StatefulServiceProperties (string placementConstraints = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceCorrelation&gt; correlationScheme = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceLoadMetric&gt; serviceLoadMetrics = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePlacementPolicy&gt; servicePlacementPolicies = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedServiceMoveCost? defaultMoveCost = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceScalingPolicy&gt; scalingPolicies = default, string provisioningState = default, string serviceTypeName = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePartitionScheme partitionDescription = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePackageActivationMode? servicePackageActivationMode = default, string serviceDnsName = default, bool? hasPersistedState = default, int? targetReplicaSetSize = default, int? minReplicaSetSize = default, TimeSpan? replicaRestartWaitDuration = default, TimeSpan? quorumLossWaitDuration = default, TimeSpan? standByReplicaKeepDuration = default, TimeSpan? servicePlacementTimeLimit = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabricManagedClusters.Models.StatefulServiceProperties StatefulServiceProperties(string placementConstraints, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceCorrelation&gt; correlationScheme, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceLoadMetric&gt; serviceLoadMetrics, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePlacementPolicy&gt; servicePlacementPolicies, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedServiceMoveCost&gt; defaultMoveCost, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceScalingPolicy&gt; scalingPolicies, string provisioningState, string serviceTypeName, class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePartitionScheme partitionDescription, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePackageActivationMode&gt; servicePackageActivationMode, string serviceDnsName, valuetype System.Nullable`1&lt;bool&gt; hasPersistedState, valuetype System.Nullable`1&lt;int32&gt; targetReplicaSetSize, valuetype System.Nullable`1&lt;int32&gt; minReplicaSetSize, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; replicaRestartWaitDuration, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; quorumLossWaitDuration, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; standByReplicaKeepDuration, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; servicePlacementTimeLimit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.StatefulServiceProperties(System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceCorrelation},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceLoadMetric},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePlacementPolicy},System.Nullable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedServiceMoveCost},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceScalingPolicy},System.String,System.String,Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePartitionScheme,System.Nullable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePackageActivationMode},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StatefulServiceProperties (Optional placementConstraints As String = Nothing, Optional correlationScheme As IEnumerable(Of ManagedServiceCorrelation) = Nothing, Optional serviceLoadMetrics As IEnumerable(Of ManagedServiceLoadMetric) = Nothing, Optional servicePlacementPolicies As IEnumerable(Of ManagedServicePlacementPolicy) = Nothing, Optional defaultMoveCost As Nullable(Of ServiceFabricManagedServiceMoveCost) = Nothing, Optional scalingPolicies As IEnumerable(Of ManagedServiceScalingPolicy) = Nothing, Optional provisioningState As String = Nothing, Optional serviceTypeName As String = Nothing, Optional partitionDescription As ManagedServicePartitionScheme = Nothing, Optional servicePackageActivationMode As Nullable(Of ManagedServicePackageActivationMode) = Nothing, Optional serviceDnsName As String = Nothing, Optional hasPersistedState As Nullable(Of Boolean) = Nothing, Optional targetReplicaSetSize As Nullable(Of Integer) = Nothing, Optional minReplicaSetSize As Nullable(Of Integer) = Nothing, Optional replicaRestartWaitDuration As Nullable(Of TimeSpan) = Nothing, Optional quorumLossWaitDuration As Nullable(Of TimeSpan) = Nothing, Optional standByReplicaKeepDuration As Nullable(Of TimeSpan) = Nothing, Optional servicePlacementTimeLimit As Nullable(Of TimeSpan) = Nothing) As StatefulServiceProperties" />
      <MemberSignature Language="F#" Value="static member StatefulServiceProperties : string * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceCorrelation&gt; * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceLoadMetric&gt; * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePlacementPolicy&gt; * Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedServiceMoveCost&gt; * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceScalingPolicy&gt; * string * string * Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePartitionScheme * Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePackageActivationMode&gt; * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.Models.StatefulServiceProperties" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.StatefulServiceProperties (placementConstraints, correlationScheme, serviceLoadMetrics, servicePlacementPolicies, defaultMoveCost, scalingPolicies, provisioningState, serviceTypeName, partitionDescription, servicePackageActivationMode, serviceDnsName, hasPersistedState, targetReplicaSetSize, minReplicaSetSize, replicaRestartWaitDuration, quorumLossWaitDuration, standByReplicaKeepDuration, servicePlacementTimeLimit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.Models.StatefulServiceProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="placementConstraints" Type="System.String" />
        <Parameter Name="correlationScheme" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceCorrelation&gt;" />
        <Parameter Name="serviceLoadMetrics" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceLoadMetric&gt;" />
        <Parameter Name="servicePlacementPolicies" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePlacementPolicy&gt;" />
        <Parameter Name="defaultMoveCost" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedServiceMoveCost&gt;" />
        <Parameter Name="scalingPolicies" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceScalingPolicy&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="serviceTypeName" Type="System.String" />
        <Parameter Name="partitionDescription" Type="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePartitionScheme" />
        <Parameter Name="servicePackageActivationMode" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePackageActivationMode&gt;" />
        <Parameter Name="serviceDnsName" Type="System.String" />
        <Parameter Name="hasPersistedState" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="targetReplicaSetSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="minReplicaSetSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="replicaRestartWaitDuration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="quorumLossWaitDuration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="standByReplicaKeepDuration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="servicePlacementTimeLimit" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="placementConstraints"> The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: "NodeColor == blue)". </param>
        <param name="correlationScheme"> A list that describes the correlation of the service with other services. </param>
        <param name="serviceLoadMetrics"> The service load metrics is given as an array of ServiceLoadMetric objects. </param>
        <param name="servicePlacementPolicies">
             A list that describes the correlation of the service with other services.
             Please note <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePlacementPolicy" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
             The available derived classes include <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServicePlacementInvalidDomainPolicy" />, <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServicePlacementNonPartiallyPlaceServicePolicy" />, <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServicePlacementPreferPrimaryDomainPolicy" />, <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServicePlacementRequiredDomainPolicy" /> and <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServicePlacementRequireDomainDistributionPolicy" />.
             </param>
        <param name="defaultMoveCost"> Specifies the move cost for the service. </param>
        <param name="scalingPolicies"> Scaling policies for this service. </param>
        <param name="provisioningState"> The current deployment or provisioning state, which only appears in the response. </param>
        <param name="serviceTypeName"> The name of the service type. </param>
        <param name="partitionDescription">
             Describes how the service is partitioned.
             Please note <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePartitionScheme" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
             The available derived classes include <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.NamedPartitionScheme" />, <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.SingletonPartitionScheme" /> and <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.UniformInt64RangePartitionScheme" />.
             </param>
        <param name="servicePackageActivationMode"> The activation Mode of the service package. </param>
        <param name="serviceDnsName">
             Dns name used for the service. If this is specified, then the DNS name can be used to return the IP addresses of service endpoints for application layer protocols (e.g., HTTP).
             When updating serviceDnsName, old name may be temporarily resolvable. However, rely on new name.
             When removing serviceDnsName, removed name may temporarily be resolvable. Do not rely on the name being unresolvable.
            
             </param>
        <param name="hasPersistedState"> A flag indicating whether this is a persistent service which stores states on the local disk. If it is then the value of this property is true, if not it is false. </param>
        <param name="targetReplicaSetSize"> The target replica set size as a number. </param>
        <param name="minReplicaSetSize"> The minimum replica set size as a number. </param>
        <param name="replicaRestartWaitDuration"> The duration between when a replica goes down and when a new replica is created, represented in ISO 8601 format "hh:mm:ss". </param>
        <param name="quorumLossWaitDuration"> The maximum duration for which a partition is allowed to be in a state of quorum loss, represented in ISO 8601 format "hh:mm:ss". </param>
        <param name="standByReplicaKeepDuration"> The definition on how long StandBy replicas should be maintained before being removed, represented in ISO 8601 format "hh:mm:ss". </param>
        <param name="servicePlacementTimeLimit"> The duration for which replicas can stay InBuild before reporting that build is stuck, represented in ISO 8601 format "hh:mm:ss". </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.StatefulServiceProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.StatefulServiceProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatelessServiceProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ServiceFabricManagedClusters.Models.StatelessServiceProperties StatelessServiceProperties (string placementConstraints = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceCorrelation&gt; correlationScheme = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceLoadMetric&gt; serviceLoadMetrics = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePlacementPolicy&gt; servicePlacementPolicies = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedServiceMoveCost? defaultMoveCost = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceScalingPolicy&gt; scalingPolicies = default, string provisioningState = default, string serviceTypeName = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePartitionScheme partitionDescription = default, Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePackageActivationMode? servicePackageActivationMode = default, string serviceDnsName = default, int instanceCount = 0, int? minInstanceCount = default, int? minInstancePercentage = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ServiceFabricManagedClusters.Models.StatelessServiceProperties StatelessServiceProperties(string placementConstraints, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceCorrelation&gt; correlationScheme, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceLoadMetric&gt; serviceLoadMetrics, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePlacementPolicy&gt; servicePlacementPolicies, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedServiceMoveCost&gt; defaultMoveCost, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceScalingPolicy&gt; scalingPolicies, string provisioningState, string serviceTypeName, class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePartitionScheme partitionDescription, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePackageActivationMode&gt; servicePackageActivationMode, string serviceDnsName, int32 instanceCount, valuetype System.Nullable`1&lt;int32&gt; minInstanceCount, valuetype System.Nullable`1&lt;int32&gt; minInstancePercentage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.StatelessServiceProperties(System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceCorrelation},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceLoadMetric},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePlacementPolicy},System.Nullable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedServiceMoveCost},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceScalingPolicy},System.String,System.String,Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePartitionScheme,System.Nullable{Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePackageActivationMode},System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StatelessServiceProperties (Optional placementConstraints As String = Nothing, Optional correlationScheme As IEnumerable(Of ManagedServiceCorrelation) = Nothing, Optional serviceLoadMetrics As IEnumerable(Of ManagedServiceLoadMetric) = Nothing, Optional servicePlacementPolicies As IEnumerable(Of ManagedServicePlacementPolicy) = Nothing, Optional defaultMoveCost As Nullable(Of ServiceFabricManagedServiceMoveCost) = Nothing, Optional scalingPolicies As IEnumerable(Of ManagedServiceScalingPolicy) = Nothing, Optional provisioningState As String = Nothing, Optional serviceTypeName As String = Nothing, Optional partitionDescription As ManagedServicePartitionScheme = Nothing, Optional servicePackageActivationMode As Nullable(Of ManagedServicePackageActivationMode) = Nothing, Optional serviceDnsName As String = Nothing, Optional instanceCount As Integer = 0, Optional minInstanceCount As Nullable(Of Integer) = Nothing, Optional minInstancePercentage As Nullable(Of Integer) = Nothing) As StatelessServiceProperties" />
      <MemberSignature Language="F#" Value="static member StatelessServiceProperties : string * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceCorrelation&gt; * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceLoadMetric&gt; * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePlacementPolicy&gt; * Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedServiceMoveCost&gt; * seq&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceScalingPolicy&gt; * string * string * Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePartitionScheme * Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePackageActivationMode&gt; * string * int * Nullable&lt;int&gt; * Nullable&lt;int&gt; -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.Models.StatelessServiceProperties" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ArmServiceFabricManagedClustersModelFactory.StatelessServiceProperties (placementConstraints, correlationScheme, serviceLoadMetrics, servicePlacementPolicies, defaultMoveCost, scalingPolicies, provisioningState, serviceTypeName, partitionDescription, servicePackageActivationMode, serviceDnsName, instanceCount, minInstanceCount, minInstancePercentage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.Models.StatelessServiceProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="placementConstraints" Type="System.String" />
        <Parameter Name="correlationScheme" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceCorrelation&gt;" />
        <Parameter Name="serviceLoadMetrics" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceLoadMetric&gt;" />
        <Parameter Name="servicePlacementPolicies" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePlacementPolicy&gt;" />
        <Parameter Name="defaultMoveCost" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceFabricManagedServiceMoveCost&gt;" />
        <Parameter Name="scalingPolicies" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServiceScalingPolicy&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="serviceTypeName" Type="System.String" />
        <Parameter Name="partitionDescription" Type="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePartitionScheme" />
        <Parameter Name="servicePackageActivationMode" Type="System.Nullable&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePackageActivationMode&gt;" />
        <Parameter Name="serviceDnsName" Type="System.String" />
        <Parameter Name="instanceCount" Type="System.Int32" />
        <Parameter Name="minInstanceCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="minInstancePercentage" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="placementConstraints"> The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: "NodeColor == blue)". </param>
        <param name="correlationScheme"> A list that describes the correlation of the service with other services. </param>
        <param name="serviceLoadMetrics"> The service load metrics is given as an array of ServiceLoadMetric objects. </param>
        <param name="servicePlacementPolicies">
             A list that describes the correlation of the service with other services.
             Please note <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePlacementPolicy" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
             The available derived classes include <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServicePlacementInvalidDomainPolicy" />, <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServicePlacementNonPartiallyPlaceServicePolicy" />, <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServicePlacementPreferPrimaryDomainPolicy" />, <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServicePlacementRequiredDomainPolicy" /> and <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServicePlacementRequireDomainDistributionPolicy" />.
             </param>
        <param name="defaultMoveCost"> Specifies the move cost for the service. </param>
        <param name="scalingPolicies"> Scaling policies for this service. </param>
        <param name="provisioningState"> The current deployment or provisioning state, which only appears in the response. </param>
        <param name="serviceTypeName"> The name of the service type. </param>
        <param name="partitionDescription">
             Describes how the service is partitioned.
             Please note <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ManagedServicePartitionScheme" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
             The available derived classes include <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.NamedPartitionScheme" />, <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.SingletonPartitionScheme" /> and <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.UniformInt64RangePartitionScheme" />.
             </param>
        <param name="servicePackageActivationMode"> The activation Mode of the service package. </param>
        <param name="serviceDnsName">
             Dns name used for the service. If this is specified, then the DNS name can be used to return the IP addresses of service endpoints for application layer protocols (e.g., HTTP).
             When updating serviceDnsName, old name may be temporarily resolvable. However, rely on new name.
             When removing serviceDnsName, removed name may temporarily be resolvable. Do not rely on the name being unresolvable.
            
             </param>
        <param name="instanceCount"> The instance count. </param>
        <param name="minInstanceCount"> MinInstanceCount is the minimum number of instances that must be up to meet the EnsureAvailability safety check during operations like upgrade or deactivate node. The actual number that is used is max( MinInstanceCount, ceil( MinInstancePercentage/100.0 * InstanceCount) ). Note, if InstanceCount is set to -1, during MinInstanceCount computation -1 is first converted into the number of nodes on which the instances are allowed to be placed according to the placement constraints on the service. </param>
        <param name="minInstancePercentage"> MinInstancePercentage is the minimum percentage of InstanceCount that must be up to meet the EnsureAvailability safety check during operations like upgrade or deactivate node. The actual number that is used is max( MinInstanceCount, ceil( MinInstancePercentage/100.0 * InstanceCount) ). Note, if InstanceCount is set to -1, during MinInstancePercentage computation, -1 is first converted into the number of nodes on which the instances are allowed to be placed according to the placement constraints on the service. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.StatelessServiceProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.StatelessServiceProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
