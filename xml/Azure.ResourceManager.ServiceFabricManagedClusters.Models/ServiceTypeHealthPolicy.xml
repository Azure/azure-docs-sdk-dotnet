<Type Name="ServiceTypeHealthPolicy" FullName="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy">
  <TypeSignature Language="C#" Value="public class ServiceTypeHealthPolicy : System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceTypeHealthPolicy extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceTypeHealthPolicy&#xA;Implements IJsonModel(Of ServiceTypeHealthPolicy), IPersistableModel(Of ServiceTypeHealthPolicy)" />
  <TypeSignature Language="F#" Value="type ServiceTypeHealthPolicy = class&#xA;    interface IJsonModel&lt;ServiceTypeHealthPolicy&gt;&#xA;    interface IPersistableModel&lt;ServiceTypeHealthPolicy&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
             Represents the health policy used to evaluate the health of services belonging to a service type.
            
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceTypeHealthPolicy (int maxPercentUnhealthyServices, int maxPercentUnhealthyPartitionsPerService, int maxPercentUnhealthyReplicasPerPartition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 maxPercentUnhealthyServices, int32 maxPercentUnhealthyPartitionsPerService, int32 maxPercentUnhealthyReplicasPerPartition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy.#ctor(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (maxPercentUnhealthyServices As Integer, maxPercentUnhealthyPartitionsPerService As Integer, maxPercentUnhealthyReplicasPerPartition As Integer)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy : int * int * int -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy" Usage="new Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy (maxPercentUnhealthyServices, maxPercentUnhealthyPartitionsPerService, maxPercentUnhealthyReplicasPerPartition)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="maxPercentUnhealthyServices" Type="System.Int32" />
        <Parameter Name="maxPercentUnhealthyPartitionsPerService" Type="System.Int32" />
        <Parameter Name="maxPercentUnhealthyReplicasPerPartition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxPercentUnhealthyServices">
             The maximum allowed percentage of unhealthy services.
            
             The percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.
             If the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.
             This is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.
             The computation rounds up to tolerate one failure on small numbers of services.
            
             </param>
        <param name="maxPercentUnhealthyPartitionsPerService">
             The maximum allowed percentage of unhealthy partitions per service.
            
             The percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.
             If the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.
             The percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.
             The computation rounds up to tolerate one failure on small numbers of partitions.
            
             </param>
        <param name="maxPercentUnhealthyReplicasPerPartition">
             The maximum allowed percentage of unhealthy replicas per partition.
            
             The percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.
             If the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.
             The percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.
             The computation rounds up to tolerate one failure on small numbers of replicas.
            
             </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy" />. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPercentUnhealthyPartitionsPerService">
      <MemberSignature Language="C#" Value="public int MaxPercentUnhealthyPartitionsPerService { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPercentUnhealthyPartitionsPerService" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy.MaxPercentUnhealthyPartitionsPerService" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPercentUnhealthyPartitionsPerService As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxPercentUnhealthyPartitionsPerService : int with get, set" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy.MaxPercentUnhealthyPartitionsPerService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             The maximum allowed percentage of unhealthy partitions per service.
            
             The percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.
             If the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.
             The percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.
             The computation rounds up to tolerate one failure on small numbers of partitions.
            
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPercentUnhealthyReplicasPerPartition">
      <MemberSignature Language="C#" Value="public int MaxPercentUnhealthyReplicasPerPartition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPercentUnhealthyReplicasPerPartition" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy.MaxPercentUnhealthyReplicasPerPartition" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPercentUnhealthyReplicasPerPartition As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxPercentUnhealthyReplicasPerPartition : int with get, set" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy.MaxPercentUnhealthyReplicasPerPartition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             The maximum allowed percentage of unhealthy replicas per partition.
            
             The percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.
             If the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.
             The percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.
             The computation rounds up to tolerate one failure on small numbers of replicas.
            
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPercentUnhealthyServices">
      <MemberSignature Language="C#" Value="public int MaxPercentUnhealthyServices { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPercentUnhealthyServices" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy.MaxPercentUnhealthyServices" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPercentUnhealthyServices As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxPercentUnhealthyServices : int with get, set" Usage="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy.MaxPercentUnhealthyServices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             The maximum allowed percentage of unhealthy services.
            
             The percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.
             If the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.
             This is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.
             The computation rounds up to tolerate one failure on small numbers of services.
            
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy IJsonModel&lt;ServiceTypeHealthPolicy&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#ServiceFabricManagedClusters#Models#ServiceTypeHealthPolicy&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As ServiceTypeHealthPolicy Implements IJsonModel(Of ServiceTypeHealthPolicy).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy" Usage="serviceTypeHealthPolicy.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;ServiceTypeHealthPolicy&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#ServiceFabricManagedClusters#Models#ServiceTypeHealthPolicy&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of ServiceTypeHealthPolicy).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="serviceTypeHealthPolicy.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy IPersistableModel&lt;ServiceTypeHealthPolicy&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#ServiceFabricManagedClusters#Models#ServiceTypeHealthPolicy&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As ServiceTypeHealthPolicy Implements IPersistableModel(Of ServiceTypeHealthPolicy).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy" Usage="serviceTypeHealthPolicy.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;ServiceTypeHealthPolicy&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#ServiceFabricManagedClusters#Models#ServiceTypeHealthPolicy&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of ServiceTypeHealthPolicy).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="serviceTypeHealthPolicy.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;ServiceTypeHealthPolicy&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#ServiceFabricManagedClusters#Models#ServiceTypeHealthPolicy&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of ServiceTypeHealthPolicy).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="serviceTypeHealthPolicy.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.ServiceFabricManagedClusters.Models.ServiceTypeHealthPolicy&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
