<Type Name="MockableAppContainersSubscriptionResource" FullName="Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableAppContainersSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableAppContainersSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableAppContainersSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableAppContainersSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
    <AssemblyVersion>1.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableAppContainersSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableWorkloadProfiles">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.AppContainers.Models.ContainerAppAvailableWorkloadProfile&gt; GetAvailableWorkloadProfiles (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.AppContainers.Models.ContainerAppAvailableWorkloadProfile&gt; GetAvailableWorkloadProfiles(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersSubscriptionResource.GetAvailableWorkloadProfiles(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailableWorkloadProfiles (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ContainerAppAvailableWorkloadProfile)" />
      <MemberSignature Language="F#" Value="abstract member GetAvailableWorkloadProfiles : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AppContainers.Models.ContainerAppAvailableWorkloadProfile&gt;&#xA;override this.GetAvailableWorkloadProfiles : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AppContainers.Models.ContainerAppAvailableWorkloadProfile&gt;" Usage="mockableAppContainersSubscriptionResource.GetAvailableWorkloadProfiles (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.AppContainers.Models.ContainerAppAvailableWorkloadProfile&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of Azure region. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get all available workload profiles for a location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.App/locations/{location}/availableManagedEnvironmentsWorkloadProfileTypes</description></item><item><term>Operation Id</term><description>AvailableWorkloadProfiles_Get</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.AppContainers.Models.ContainerAppAvailableWorkloadProfile" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableWorkloadProfilesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.AppContainers.Models.ContainerAppAvailableWorkloadProfile&gt; GetAvailableWorkloadProfilesAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.AppContainers.Models.ContainerAppAvailableWorkloadProfile&gt; GetAvailableWorkloadProfilesAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersSubscriptionResource.GetAvailableWorkloadProfilesAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailableWorkloadProfilesAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ContainerAppAvailableWorkloadProfile)" />
      <MemberSignature Language="F#" Value="abstract member GetAvailableWorkloadProfilesAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AppContainers.Models.ContainerAppAvailableWorkloadProfile&gt;&#xA;override this.GetAvailableWorkloadProfilesAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AppContainers.Models.ContainerAppAvailableWorkloadProfile&gt;" Usage="mockableAppContainersSubscriptionResource.GetAvailableWorkloadProfilesAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.AppContainers.Models.ContainerAppAvailableWorkloadProfile&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of Azure region. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get all available workload profiles for a location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.App/locations/{location}/availableManagedEnvironmentsWorkloadProfileTypes</description></item><item><term>Operation Id</term><description>AvailableWorkloadProfiles_Get</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.AppContainers.Models.ContainerAppAvailableWorkloadProfile" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBillingMeters">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.AppContainers.Models.ContainerAppBillingMeter&gt; GetBillingMeters (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.AppContainers.Models.ContainerAppBillingMeter&gt; GetBillingMeters(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersSubscriptionResource.GetBillingMeters(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBillingMeters (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ContainerAppBillingMeter)" />
      <MemberSignature Language="F#" Value="abstract member GetBillingMeters : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AppContainers.Models.ContainerAppBillingMeter&gt;&#xA;override this.GetBillingMeters : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AppContainers.Models.ContainerAppBillingMeter&gt;" Usage="mockableAppContainersSubscriptionResource.GetBillingMeters (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.AppContainers.Models.ContainerAppBillingMeter&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of Azure region. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get all billingMeters for a location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.App/locations/{location}/billingMeters</description></item><item><term>Operation Id</term><description>BillingMeters_Get</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.AppContainers.Models.ContainerAppBillingMeter" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBillingMetersAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.AppContainers.Models.ContainerAppBillingMeter&gt; GetBillingMetersAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.AppContainers.Models.ContainerAppBillingMeter&gt; GetBillingMetersAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersSubscriptionResource.GetBillingMetersAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBillingMetersAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ContainerAppBillingMeter)" />
      <MemberSignature Language="F#" Value="abstract member GetBillingMetersAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AppContainers.Models.ContainerAppBillingMeter&gt;&#xA;override this.GetBillingMetersAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AppContainers.Models.ContainerAppBillingMeter&gt;" Usage="mockableAppContainersSubscriptionResource.GetBillingMetersAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.AppContainers.Models.ContainerAppBillingMeter&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of Azure region. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get all billingMeters for a location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.App/locations/{location}/billingMeters</description></item><item><term>Operation Id</term><description>BillingMeters_Get</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.AppContainers.Models.ContainerAppBillingMeter" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerAppConnectedEnvironments">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentResource&gt; GetContainerAppConnectedEnvironments (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentResource&gt; GetContainerAppConnectedEnvironments(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersSubscriptionResource.GetContainerAppConnectedEnvironments(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerAppConnectedEnvironments (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ContainerAppConnectedEnvironmentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetContainerAppConnectedEnvironments : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentResource&gt;&#xA;override this.GetContainerAppConnectedEnvironments : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentResource&gt;" Usage="mockableAppContainersSubscriptionResource.GetContainerAppConnectedEnvironments cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get all connectedEnvironments for a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.App/connectedEnvironments</description></item><item><term>Operation Id</term><description>ConnectedEnvironments_ListBySubscription</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerAppConnectedEnvironmentsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentResource&gt; GetContainerAppConnectedEnvironmentsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentResource&gt; GetContainerAppConnectedEnvironmentsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersSubscriptionResource.GetContainerAppConnectedEnvironmentsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerAppConnectedEnvironmentsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ContainerAppConnectedEnvironmentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetContainerAppConnectedEnvironmentsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentResource&gt;&#xA;override this.GetContainerAppConnectedEnvironmentsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentResource&gt;" Usage="mockableAppContainersSubscriptionResource.GetContainerAppConnectedEnvironmentsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get all connectedEnvironments for a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.App/connectedEnvironments</description></item><item><term>Operation Id</term><description>ConnectedEnvironments_ListBySubscription</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerAppJobs">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.AppContainers.ContainerAppJobResource&gt; GetContainerAppJobs (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.AppContainers.ContainerAppJobResource&gt; GetContainerAppJobs(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersSubscriptionResource.GetContainerAppJobs(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerAppJobs (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ContainerAppJobResource)" />
      <MemberSignature Language="F#" Value="abstract member GetContainerAppJobs : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AppContainers.ContainerAppJobResource&gt;&#xA;override this.GetContainerAppJobs : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AppContainers.ContainerAppJobResource&gt;" Usage="mockableAppContainersSubscriptionResource.GetContainerAppJobs cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.AppContainers.ContainerAppJobResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the Container Apps Jobs in a given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.App/jobs</description></item><item><term>Operation Id</term><description>Jobs_ListBySubscription</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppJobResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerAppJobsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.AppContainers.ContainerAppJobResource&gt; GetContainerAppJobsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.AppContainers.ContainerAppJobResource&gt; GetContainerAppJobsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersSubscriptionResource.GetContainerAppJobsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerAppJobsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ContainerAppJobResource)" />
      <MemberSignature Language="F#" Value="abstract member GetContainerAppJobsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AppContainers.ContainerAppJobResource&gt;&#xA;override this.GetContainerAppJobsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AppContainers.ContainerAppJobResource&gt;" Usage="mockableAppContainersSubscriptionResource.GetContainerAppJobsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.AppContainers.ContainerAppJobResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the Container Apps Jobs in a given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.App/jobs</description></item><item><term>Operation Id</term><description>Jobs_ListBySubscription</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppJobResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerAppManagedEnvironments">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentResource&gt; GetContainerAppManagedEnvironments (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentResource&gt; GetContainerAppManagedEnvironments(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersSubscriptionResource.GetContainerAppManagedEnvironments(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerAppManagedEnvironments (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ContainerAppManagedEnvironmentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetContainerAppManagedEnvironments : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentResource&gt;&#xA;override this.GetContainerAppManagedEnvironments : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentResource&gt;" Usage="mockableAppContainersSubscriptionResource.GetContainerAppManagedEnvironments cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get all Managed Environments for a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.App/managedEnvironments</description></item><item><term>Operation Id</term><description>ManagedEnvironments_ListBySubscription</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerAppManagedEnvironmentsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentResource&gt; GetContainerAppManagedEnvironmentsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentResource&gt; GetContainerAppManagedEnvironmentsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersSubscriptionResource.GetContainerAppManagedEnvironmentsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerAppManagedEnvironmentsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ContainerAppManagedEnvironmentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetContainerAppManagedEnvironmentsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentResource&gt;&#xA;override this.GetContainerAppManagedEnvironmentsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentResource&gt;" Usage="mockableAppContainersSubscriptionResource.GetContainerAppManagedEnvironmentsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get all Managed Environments for a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.App/managedEnvironments</description></item><item><term>Operation Id</term><description>ManagedEnvironments_ListBySubscription</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerApps">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.AppContainers.ContainerAppResource&gt; GetContainerApps (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.AppContainers.ContainerAppResource&gt; GetContainerApps(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersSubscriptionResource.GetContainerApps(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerApps (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ContainerAppResource)" />
      <MemberSignature Language="F#" Value="abstract member GetContainerApps : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AppContainers.ContainerAppResource&gt;&#xA;override this.GetContainerApps : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AppContainers.ContainerAppResource&gt;" Usage="mockableAppContainersSubscriptionResource.GetContainerApps cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.AppContainers.ContainerAppResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the Container Apps in a given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.App/containerApps</description></item><item><term>Operation Id</term><description>ContainerApps_ListBySubscription</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerAppsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.AppContainers.ContainerAppResource&gt; GetContainerAppsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.AppContainers.ContainerAppResource&gt; GetContainerAppsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersSubscriptionResource.GetContainerAppsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerAppsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ContainerAppResource)" />
      <MemberSignature Language="F#" Value="abstract member GetContainerAppsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AppContainers.ContainerAppResource&gt;&#xA;override this.GetContainerAppsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AppContainers.ContainerAppResource&gt;" Usage="mockableAppContainersSubscriptionResource.GetContainerAppsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.AppContainers.ContainerAppResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the Container Apps in a given subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.App/containerApps</description></item><item><term>Operation Id</term><description>ContainerApps_ListBySubscription</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
