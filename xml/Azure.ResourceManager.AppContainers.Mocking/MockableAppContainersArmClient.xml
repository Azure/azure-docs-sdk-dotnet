<Type Name="MockableAppContainersArmClient" FullName="Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersArmClient">
  <TypeSignature Language="C#" Value="public class MockableAppContainersArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableAppContainersArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableAppContainersArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableAppContainersArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
    <AssemblyVersion>1.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableAppContainersArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerAppAuthConfigResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppContainers.ContainerAppAuthConfigResource GetContainerAppAuthConfigResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppContainers.ContainerAppAuthConfigResource GetContainerAppAuthConfigResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersArmClient.GetContainerAppAuthConfigResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerAppAuthConfigResource (id As ResourceIdentifier) As ContainerAppAuthConfigResource" />
      <MemberSignature Language="F#" Value="abstract member GetContainerAppAuthConfigResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppAuthConfigResource&#xA;override this.GetContainerAppAuthConfigResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppAuthConfigResource" Usage="mockableAppContainersArmClient.GetContainerAppAuthConfigResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppContainers.ContainerAppAuthConfigResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppAuthConfigResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AppContainers.ContainerAppAuthConfigResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppAuthConfigResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppAuthConfigResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerAppConnectedEnvironmentCertificateResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentCertificateResource GetContainerAppConnectedEnvironmentCertificateResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentCertificateResource GetContainerAppConnectedEnvironmentCertificateResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersArmClient.GetContainerAppConnectedEnvironmentCertificateResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerAppConnectedEnvironmentCertificateResource (id As ResourceIdentifier) As ContainerAppConnectedEnvironmentCertificateResource" />
      <MemberSignature Language="F#" Value="abstract member GetContainerAppConnectedEnvironmentCertificateResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentCertificateResource&#xA;override this.GetContainerAppConnectedEnvironmentCertificateResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentCertificateResource" Usage="mockableAppContainersArmClient.GetContainerAppConnectedEnvironmentCertificateResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentCertificateResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentCertificateResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentCertificateResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentCertificateResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentCertificateResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerAppConnectedEnvironmentDaprComponentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentDaprComponentResource GetContainerAppConnectedEnvironmentDaprComponentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentDaprComponentResource GetContainerAppConnectedEnvironmentDaprComponentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersArmClient.GetContainerAppConnectedEnvironmentDaprComponentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerAppConnectedEnvironmentDaprComponentResource (id As ResourceIdentifier) As ContainerAppConnectedEnvironmentDaprComponentResource" />
      <MemberSignature Language="F#" Value="abstract member GetContainerAppConnectedEnvironmentDaprComponentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentDaprComponentResource&#xA;override this.GetContainerAppConnectedEnvironmentDaprComponentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentDaprComponentResource" Usage="mockableAppContainersArmClient.GetContainerAppConnectedEnvironmentDaprComponentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentDaprComponentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentDaprComponentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentDaprComponentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentDaprComponentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentDaprComponentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerAppConnectedEnvironmentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentResource GetContainerAppConnectedEnvironmentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentResource GetContainerAppConnectedEnvironmentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersArmClient.GetContainerAppConnectedEnvironmentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerAppConnectedEnvironmentResource (id As ResourceIdentifier) As ContainerAppConnectedEnvironmentResource" />
      <MemberSignature Language="F#" Value="abstract member GetContainerAppConnectedEnvironmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentResource&#xA;override this.GetContainerAppConnectedEnvironmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentResource" Usage="mockableAppContainersArmClient.GetContainerAppConnectedEnvironmentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerAppConnectedEnvironmentStorageResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentStorageResource GetContainerAppConnectedEnvironmentStorageResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentStorageResource GetContainerAppConnectedEnvironmentStorageResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersArmClient.GetContainerAppConnectedEnvironmentStorageResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerAppConnectedEnvironmentStorageResource (id As ResourceIdentifier) As ContainerAppConnectedEnvironmentStorageResource" />
      <MemberSignature Language="F#" Value="abstract member GetContainerAppConnectedEnvironmentStorageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentStorageResource&#xA;override this.GetContainerAppConnectedEnvironmentStorageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentStorageResource" Usage="mockableAppContainersArmClient.GetContainerAppConnectedEnvironmentStorageResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentStorageResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentStorageResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentStorageResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentStorageResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppConnectedEnvironmentStorageResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerAppDetectorPropertyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppContainers.ContainerAppDetectorPropertyResource GetContainerAppDetectorPropertyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppContainers.ContainerAppDetectorPropertyResource GetContainerAppDetectorPropertyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersArmClient.GetContainerAppDetectorPropertyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerAppDetectorPropertyResource (id As ResourceIdentifier) As ContainerAppDetectorPropertyResource" />
      <MemberSignature Language="F#" Value="abstract member GetContainerAppDetectorPropertyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppDetectorPropertyResource&#xA;override this.GetContainerAppDetectorPropertyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppDetectorPropertyResource" Usage="mockableAppContainersArmClient.GetContainerAppDetectorPropertyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppContainers.ContainerAppDetectorPropertyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppDetectorPropertyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AppContainers.ContainerAppDetectorPropertyResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppDetectorPropertyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppDetectorPropertyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerAppDetectorPropertyRevisionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppContainers.ContainerAppDetectorPropertyRevisionResource GetContainerAppDetectorPropertyRevisionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppContainers.ContainerAppDetectorPropertyRevisionResource GetContainerAppDetectorPropertyRevisionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersArmClient.GetContainerAppDetectorPropertyRevisionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerAppDetectorPropertyRevisionResource (id As ResourceIdentifier) As ContainerAppDetectorPropertyRevisionResource" />
      <MemberSignature Language="F#" Value="abstract member GetContainerAppDetectorPropertyRevisionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppDetectorPropertyRevisionResource&#xA;override this.GetContainerAppDetectorPropertyRevisionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppDetectorPropertyRevisionResource" Usage="mockableAppContainersArmClient.GetContainerAppDetectorPropertyRevisionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppContainers.ContainerAppDetectorPropertyRevisionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppDetectorPropertyRevisionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AppContainers.ContainerAppDetectorPropertyRevisionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppDetectorPropertyRevisionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppDetectorPropertyRevisionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerAppDetectorResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppContainers.ContainerAppDetectorResource GetContainerAppDetectorResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppContainers.ContainerAppDetectorResource GetContainerAppDetectorResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersArmClient.GetContainerAppDetectorResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerAppDetectorResource (id As ResourceIdentifier) As ContainerAppDetectorResource" />
      <MemberSignature Language="F#" Value="abstract member GetContainerAppDetectorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppDetectorResource&#xA;override this.GetContainerAppDetectorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppDetectorResource" Usage="mockableAppContainersArmClient.GetContainerAppDetectorResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppContainers.ContainerAppDetectorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppDetectorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AppContainers.ContainerAppDetectorResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppDetectorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppDetectorResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerAppJobExecutionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppContainers.ContainerAppJobExecutionResource GetContainerAppJobExecutionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppContainers.ContainerAppJobExecutionResource GetContainerAppJobExecutionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersArmClient.GetContainerAppJobExecutionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerAppJobExecutionResource (id As ResourceIdentifier) As ContainerAppJobExecutionResource" />
      <MemberSignature Language="F#" Value="abstract member GetContainerAppJobExecutionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppJobExecutionResource&#xA;override this.GetContainerAppJobExecutionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppJobExecutionResource" Usage="mockableAppContainersArmClient.GetContainerAppJobExecutionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppContainers.ContainerAppJobExecutionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppJobExecutionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AppContainers.ContainerAppJobExecutionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppJobExecutionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppJobExecutionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerAppJobResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppContainers.ContainerAppJobResource GetContainerAppJobResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppContainers.ContainerAppJobResource GetContainerAppJobResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersArmClient.GetContainerAppJobResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerAppJobResource (id As ResourceIdentifier) As ContainerAppJobResource" />
      <MemberSignature Language="F#" Value="abstract member GetContainerAppJobResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppJobResource&#xA;override this.GetContainerAppJobResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppJobResource" Usage="mockableAppContainersArmClient.GetContainerAppJobResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppContainers.ContainerAppJobResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppJobResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AppContainers.ContainerAppJobResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppJobResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppJobResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerAppManagedCertificateResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppContainers.ContainerAppManagedCertificateResource GetContainerAppManagedCertificateResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppContainers.ContainerAppManagedCertificateResource GetContainerAppManagedCertificateResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersArmClient.GetContainerAppManagedCertificateResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerAppManagedCertificateResource (id As ResourceIdentifier) As ContainerAppManagedCertificateResource" />
      <MemberSignature Language="F#" Value="abstract member GetContainerAppManagedCertificateResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppManagedCertificateResource&#xA;override this.GetContainerAppManagedCertificateResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppManagedCertificateResource" Usage="mockableAppContainersArmClient.GetContainerAppManagedCertificateResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppContainers.ContainerAppManagedCertificateResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppManagedCertificateResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AppContainers.ContainerAppManagedCertificateResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppManagedCertificateResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppManagedCertificateResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerAppManagedEnvironmentCertificateResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentCertificateResource GetContainerAppManagedEnvironmentCertificateResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentCertificateResource GetContainerAppManagedEnvironmentCertificateResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersArmClient.GetContainerAppManagedEnvironmentCertificateResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerAppManagedEnvironmentCertificateResource (id As ResourceIdentifier) As ContainerAppManagedEnvironmentCertificateResource" />
      <MemberSignature Language="F#" Value="abstract member GetContainerAppManagedEnvironmentCertificateResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentCertificateResource&#xA;override this.GetContainerAppManagedEnvironmentCertificateResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentCertificateResource" Usage="mockableAppContainersArmClient.GetContainerAppManagedEnvironmentCertificateResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentCertificateResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentCertificateResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentCertificateResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentCertificateResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentCertificateResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerAppManagedEnvironmentDaprComponentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentDaprComponentResource GetContainerAppManagedEnvironmentDaprComponentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentDaprComponentResource GetContainerAppManagedEnvironmentDaprComponentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersArmClient.GetContainerAppManagedEnvironmentDaprComponentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerAppManagedEnvironmentDaprComponentResource (id As ResourceIdentifier) As ContainerAppManagedEnvironmentDaprComponentResource" />
      <MemberSignature Language="F#" Value="abstract member GetContainerAppManagedEnvironmentDaprComponentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentDaprComponentResource&#xA;override this.GetContainerAppManagedEnvironmentDaprComponentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentDaprComponentResource" Usage="mockableAppContainersArmClient.GetContainerAppManagedEnvironmentDaprComponentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentDaprComponentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentDaprComponentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentDaprComponentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentDaprComponentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentDaprComponentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerAppManagedEnvironmentDetectorResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentDetectorResource GetContainerAppManagedEnvironmentDetectorResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentDetectorResource GetContainerAppManagedEnvironmentDetectorResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersArmClient.GetContainerAppManagedEnvironmentDetectorResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerAppManagedEnvironmentDetectorResource (id As ResourceIdentifier) As ContainerAppManagedEnvironmentDetectorResource" />
      <MemberSignature Language="F#" Value="abstract member GetContainerAppManagedEnvironmentDetectorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentDetectorResource&#xA;override this.GetContainerAppManagedEnvironmentDetectorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentDetectorResource" Usage="mockableAppContainersArmClient.GetContainerAppManagedEnvironmentDetectorResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentDetectorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentDetectorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentDetectorResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentDetectorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentDetectorResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerAppManagedEnvironmentDetectorResourcePropertyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentDetectorResourcePropertyResource GetContainerAppManagedEnvironmentDetectorResourcePropertyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentDetectorResourcePropertyResource GetContainerAppManagedEnvironmentDetectorResourcePropertyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersArmClient.GetContainerAppManagedEnvironmentDetectorResourcePropertyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerAppManagedEnvironmentDetectorResourcePropertyResource (id As ResourceIdentifier) As ContainerAppManagedEnvironmentDetectorResourcePropertyResource" />
      <MemberSignature Language="F#" Value="abstract member GetContainerAppManagedEnvironmentDetectorResourcePropertyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentDetectorResourcePropertyResource&#xA;override this.GetContainerAppManagedEnvironmentDetectorResourcePropertyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentDetectorResourcePropertyResource" Usage="mockableAppContainersArmClient.GetContainerAppManagedEnvironmentDetectorResourcePropertyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentDetectorResourcePropertyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentDetectorResourcePropertyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentDetectorResourcePropertyResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentDetectorResourcePropertyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentDetectorResourcePropertyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerAppManagedEnvironmentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentResource GetContainerAppManagedEnvironmentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentResource GetContainerAppManagedEnvironmentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersArmClient.GetContainerAppManagedEnvironmentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerAppManagedEnvironmentResource (id As ResourceIdentifier) As ContainerAppManagedEnvironmentResource" />
      <MemberSignature Language="F#" Value="abstract member GetContainerAppManagedEnvironmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentResource&#xA;override this.GetContainerAppManagedEnvironmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentResource" Usage="mockableAppContainersArmClient.GetContainerAppManagedEnvironmentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerAppManagedEnvironmentStorageResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentStorageResource GetContainerAppManagedEnvironmentStorageResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentStorageResource GetContainerAppManagedEnvironmentStorageResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersArmClient.GetContainerAppManagedEnvironmentStorageResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerAppManagedEnvironmentStorageResource (id As ResourceIdentifier) As ContainerAppManagedEnvironmentStorageResource" />
      <MemberSignature Language="F#" Value="abstract member GetContainerAppManagedEnvironmentStorageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentStorageResource&#xA;override this.GetContainerAppManagedEnvironmentStorageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentStorageResource" Usage="mockableAppContainersArmClient.GetContainerAppManagedEnvironmentStorageResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentStorageResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentStorageResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentStorageResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentStorageResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppManagedEnvironmentStorageResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerAppReplicaResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppContainers.ContainerAppReplicaResource GetContainerAppReplicaResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppContainers.ContainerAppReplicaResource GetContainerAppReplicaResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersArmClient.GetContainerAppReplicaResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerAppReplicaResource (id As ResourceIdentifier) As ContainerAppReplicaResource" />
      <MemberSignature Language="F#" Value="abstract member GetContainerAppReplicaResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppReplicaResource&#xA;override this.GetContainerAppReplicaResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppReplicaResource" Usage="mockableAppContainersArmClient.GetContainerAppReplicaResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppContainers.ContainerAppReplicaResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppReplicaResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AppContainers.ContainerAppReplicaResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppReplicaResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppReplicaResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerAppResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppContainers.ContainerAppResource GetContainerAppResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppContainers.ContainerAppResource GetContainerAppResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersArmClient.GetContainerAppResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerAppResource (id As ResourceIdentifier) As ContainerAppResource" />
      <MemberSignature Language="F#" Value="abstract member GetContainerAppResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppResource&#xA;override this.GetContainerAppResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppResource" Usage="mockableAppContainersArmClient.GetContainerAppResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppContainers.ContainerAppResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AppContainers.ContainerAppResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerAppRevisionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppContainers.ContainerAppRevisionResource GetContainerAppRevisionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppContainers.ContainerAppRevisionResource GetContainerAppRevisionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersArmClient.GetContainerAppRevisionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerAppRevisionResource (id As ResourceIdentifier) As ContainerAppRevisionResource" />
      <MemberSignature Language="F#" Value="abstract member GetContainerAppRevisionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppRevisionResource&#xA;override this.GetContainerAppRevisionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppRevisionResource" Usage="mockableAppContainersArmClient.GetContainerAppRevisionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppContainers.ContainerAppRevisionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppRevisionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AppContainers.ContainerAppRevisionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppRevisionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppRevisionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerAppSourceControlResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppContainers.ContainerAppSourceControlResource GetContainerAppSourceControlResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppContainers.ContainerAppSourceControlResource GetContainerAppSourceControlResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppContainers.Mocking.MockableAppContainersArmClient.GetContainerAppSourceControlResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerAppSourceControlResource (id As ResourceIdentifier) As ContainerAppSourceControlResource" />
      <MemberSignature Language="F#" Value="abstract member GetContainerAppSourceControlResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppSourceControlResource&#xA;override this.GetContainerAppSourceControlResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AppContainers.ContainerAppSourceControlResource" Usage="mockableAppContainersArmClient.GetContainerAppSourceControlResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppContainers</AssemblyName>
        <AssemblyVersion>1.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppContainers.ContainerAppSourceControlResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppSourceControlResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AppContainers.ContainerAppSourceControlResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppSourceControlResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AppContainers.ContainerAppSourceControlResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
