<Type Name="IndexActionType" FullName="Azure.Search.Documents.Models.IndexActionType">
  <TypeSignature Language="C#" Value="public enum IndexActionType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed IndexActionType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Azure.Search.Documents.Models.IndexActionType" />
  <TypeSignature Language="VB.NET" Value="Public Enum IndexActionType" />
  <TypeSignature Language="F#" Value="type IndexActionType = " />
  <AssemblyInfo>
    <AssemblyName>Azure.Search.Documents</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>11.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary> The operation to perform on a document in an indexing batch. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="Delete" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Search.Documents.Models.IndexActionType Delete = int32(3)" />
      <MemberSignature Language="DocId" Value="F:Azure.Search.Documents.Models.IndexActionType.Delete" />
      <MemberSignature Language="VB.NET" Value="Delete" />
      <MemberSignature Language="F#" Value="Delete = 3" Usage="Azure.Search.Documents.Models.IndexActionType.Delete" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Models.IndexActionType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary> Removes the specified document from the index. Any field you specify in a delete operation other than the key field will be ignored. If you want to remove an individual field from a document, use merge instead and set the field explicitly to null. </summary>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="Merge" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Search.Documents.Models.IndexActionType Merge = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Azure.Search.Documents.Models.IndexActionType.Merge" />
      <MemberSignature Language="VB.NET" Value="Merge" />
      <MemberSignature Language="F#" Value="Merge = 1" Usage="Azure.Search.Documents.Models.IndexActionType.Merge" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Models.IndexActionType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary> Merges the specified field values with an existing document. If the document does not exist, the merge will fail. Any field you specify in a merge will replace the existing field in the document. This also applies to collections of primitive and complex types. </summary>
      </Docs>
    </Member>
    <Member MemberName="MergeOrUpload">
      <MemberSignature Language="C#" Value="MergeOrUpload" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Search.Documents.Models.IndexActionType MergeOrUpload = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Azure.Search.Documents.Models.IndexActionType.MergeOrUpload" />
      <MemberSignature Language="VB.NET" Value="MergeOrUpload" />
      <MemberSignature Language="F#" Value="MergeOrUpload = 2" Usage="Azure.Search.Documents.Models.IndexActionType.MergeOrUpload" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Models.IndexActionType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary> Behaves like merge if a document with the given key already exists in the index. If the document does not exist, it behaves like upload with a new document. </summary>
      </Docs>
    </Member>
    <Member MemberName="Upload">
      <MemberSignature Language="C#" Value="Upload" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Search.Documents.Models.IndexActionType Upload = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Azure.Search.Documents.Models.IndexActionType.Upload" />
      <MemberSignature Language="VB.NET" Value="Upload" />
      <MemberSignature Language="F#" Value="Upload = 0" Usage="Azure.Search.Documents.Models.IndexActionType.Upload" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Models.IndexActionType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary> Inserts the document into the index if it is new and updates it if it exists. All fields are replaced in the update case. </summary>
      </Docs>
    </Member>
  </Members>
</Type>
