<Type Name="MockableStorageCacheResourceGroupResource" FullName="Azure.ResourceManager.StorageCache.Mocking.MockableStorageCacheResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableStorageCacheResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableStorageCacheResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.StorageCache.Mocking.MockableStorageCacheResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableStorageCacheResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableStorageCacheResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.StorageCache</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableStorageCacheResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StorageCache.Mocking.MockableStorageCacheResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StorageCache</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.StorageCache.Mocking.MockableStorageCacheResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAmlFileSystem">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.StorageCache.AmlFileSystemResource&gt; GetAmlFileSystem (string amlFileSystemName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.StorageCache.AmlFileSystemResource&gt; GetAmlFileSystem(string amlFileSystemName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StorageCache.Mocking.MockableStorageCacheResourceGroupResource.GetAmlFileSystem(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAmlFileSystem (amlFileSystemName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AmlFileSystemResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAmlFileSystem : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.StorageCache.AmlFileSystemResource&gt;&#xA;override this.GetAmlFileSystem : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.StorageCache.AmlFileSystemResource&gt;" Usage="mockableStorageCacheResourceGroupResource.GetAmlFileSystem (amlFileSystemName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StorageCache</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.StorageCache.AmlFileSystemResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="amlFileSystemName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="amlFileSystemName"> Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns an AML file system.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/amlFilesystems/{amlFilesystemName}</description></item><item><term>Operation Id</term><description>amlFilesystems_Get</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.StorageCache.AmlFileSystemResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="amlFileSystemName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="amlFileSystemName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAmlFileSystemAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.StorageCache.AmlFileSystemResource&gt;&gt; GetAmlFileSystemAsync (string amlFileSystemName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.StorageCache.AmlFileSystemResource&gt;&gt; GetAmlFileSystemAsync(string amlFileSystemName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StorageCache.Mocking.MockableStorageCacheResourceGroupResource.GetAmlFileSystemAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAmlFileSystemAsync (amlFileSystemName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AmlFileSystemResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAmlFileSystemAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.StorageCache.AmlFileSystemResource&gt;&gt;&#xA;override this.GetAmlFileSystemAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.StorageCache.AmlFileSystemResource&gt;&gt;" Usage="mockableStorageCacheResourceGroupResource.GetAmlFileSystemAsync (amlFileSystemName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StorageCache</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.StorageCache.AmlFileSystemResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="amlFileSystemName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="amlFileSystemName"> Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns an AML file system.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/amlFilesystems/{amlFilesystemName}</description></item><item><term>Operation Id</term><description>amlFilesystems_Get</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.StorageCache.AmlFileSystemResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="amlFileSystemName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="amlFileSystemName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAmlFileSystems">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.StorageCache.AmlFileSystemCollection GetAmlFileSystems ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.StorageCache.AmlFileSystemCollection GetAmlFileSystems() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StorageCache.Mocking.MockableStorageCacheResourceGroupResource.GetAmlFileSystems" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAmlFileSystems () As AmlFileSystemCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAmlFileSystems : unit -&gt; Azure.ResourceManager.StorageCache.AmlFileSystemCollection&#xA;override this.GetAmlFileSystems : unit -&gt; Azure.ResourceManager.StorageCache.AmlFileSystemCollection" Usage="mockableStorageCacheResourceGroupResource.GetAmlFileSystems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StorageCache</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.StorageCache.AmlFileSystemCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AmlFileSystemResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of AmlFileSystemResources and their operations over a AmlFileSystemResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStorageCache">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.StorageCache.StorageCacheResource&gt; GetStorageCache (string cacheName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.StorageCache.StorageCacheResource&gt; GetStorageCache(string cacheName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StorageCache.Mocking.MockableStorageCacheResourceGroupResource.GetStorageCache(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageCache (cacheName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of StorageCacheResource)" />
      <MemberSignature Language="F#" Value="abstract member GetStorageCache : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.StorageCache.StorageCacheResource&gt;&#xA;override this.GetStorageCache : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.StorageCache.StorageCacheResource&gt;" Usage="mockableStorageCacheResourceGroupResource.GetStorageCache (cacheName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StorageCache</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.StorageCache.StorageCacheResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cacheName"> Name of cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a cache.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}</description></item><item><term>Operation Id</term><description>Caches_Get</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.StorageCache.StorageCacheResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cacheName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="cacheName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStorageCacheAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.StorageCache.StorageCacheResource&gt;&gt; GetStorageCacheAsync (string cacheName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.StorageCache.StorageCacheResource&gt;&gt; GetStorageCacheAsync(string cacheName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StorageCache.Mocking.MockableStorageCacheResourceGroupResource.GetStorageCacheAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageCacheAsync (cacheName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of StorageCacheResource))" />
      <MemberSignature Language="F#" Value="abstract member GetStorageCacheAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.StorageCache.StorageCacheResource&gt;&gt;&#xA;override this.GetStorageCacheAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.StorageCache.StorageCacheResource&gt;&gt;" Usage="mockableStorageCacheResourceGroupResource.GetStorageCacheAsync (cacheName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StorageCache</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.StorageCache.StorageCacheResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cacheName"> Name of cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a cache.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}</description></item><item><term>Operation Id</term><description>Caches_Get</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.StorageCache.StorageCacheResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cacheName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="cacheName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStorageCaches">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.StorageCache.StorageCacheCollection GetStorageCaches ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.StorageCache.StorageCacheCollection GetStorageCaches() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StorageCache.Mocking.MockableStorageCacheResourceGroupResource.GetStorageCaches" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageCaches () As StorageCacheCollection" />
      <MemberSignature Language="F#" Value="abstract member GetStorageCaches : unit -&gt; Azure.ResourceManager.StorageCache.StorageCacheCollection&#xA;override this.GetStorageCaches : unit -&gt; Azure.ResourceManager.StorageCache.StorageCacheCollection" Usage="mockableStorageCacheResourceGroupResource.GetStorageCaches " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StorageCache</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.StorageCache.StorageCacheCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of StorageCacheResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of StorageCacheResources and their operations over a StorageCacheResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
