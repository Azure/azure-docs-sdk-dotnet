<Type Name="MockableStorageCacheArmClient" FullName="Azure.ResourceManager.StorageCache.Mocking.MockableStorageCacheArmClient">
  <TypeSignature Language="C#" Value="public class MockableStorageCacheArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableStorageCacheArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.StorageCache.Mocking.MockableStorageCacheArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableStorageCacheArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableStorageCacheArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.StorageCache</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableStorageCacheArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StorageCache.Mocking.MockableStorageCacheArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StorageCache</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.StorageCache.Mocking.MockableStorageCacheArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAmlFileSystemResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.StorageCache.AmlFileSystemResource GetAmlFileSystemResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.StorageCache.AmlFileSystemResource GetAmlFileSystemResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StorageCache.Mocking.MockableStorageCacheArmClient.GetAmlFileSystemResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAmlFileSystemResource (id As ResourceIdentifier) As AmlFileSystemResource" />
      <MemberSignature Language="F#" Value="abstract member GetAmlFileSystemResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.StorageCache.AmlFileSystemResource&#xA;override this.GetAmlFileSystemResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.StorageCache.AmlFileSystemResource" Usage="mockableStorageCacheArmClient.GetAmlFileSystemResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StorageCache</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.StorageCache.AmlFileSystemResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.StorageCache.AmlFileSystemResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.StorageCache.AmlFileSystemResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.StorageCache.AmlFileSystemResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.StorageCache.AmlFileSystemResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStorageCacheImportJobResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.StorageCache.StorageCacheImportJobResource GetStorageCacheImportJobResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.StorageCache.StorageCacheImportJobResource GetStorageCacheImportJobResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StorageCache.Mocking.MockableStorageCacheArmClient.GetStorageCacheImportJobResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageCacheImportJobResource (id As ResourceIdentifier) As StorageCacheImportJobResource" />
      <MemberSignature Language="F#" Value="abstract member GetStorageCacheImportJobResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.StorageCache.StorageCacheImportJobResource&#xA;override this.GetStorageCacheImportJobResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.StorageCache.StorageCacheImportJobResource" Usage="mockableStorageCacheArmClient.GetStorageCacheImportJobResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StorageCache</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.StorageCache.StorageCacheImportJobResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.StorageCache.StorageCacheImportJobResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.StorageCache.StorageCacheImportJobResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.StorageCache.StorageCacheImportJobResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.StorageCache.StorageCacheImportJobResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStorageCacheResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.StorageCache.StorageCacheResource GetStorageCacheResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.StorageCache.StorageCacheResource GetStorageCacheResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StorageCache.Mocking.MockableStorageCacheArmClient.GetStorageCacheResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageCacheResource (id As ResourceIdentifier) As StorageCacheResource" />
      <MemberSignature Language="F#" Value="abstract member GetStorageCacheResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.StorageCache.StorageCacheResource&#xA;override this.GetStorageCacheResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.StorageCache.StorageCacheResource" Usage="mockableStorageCacheArmClient.GetStorageCacheResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StorageCache</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.StorageCache.StorageCacheResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.StorageCache.StorageCacheResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.StorageCache.StorageCacheResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.StorageCache.StorageCacheResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.StorageCache.StorageCacheResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStorageTargetResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.StorageCache.StorageTargetResource GetStorageTargetResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.StorageCache.StorageTargetResource GetStorageTargetResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.StorageCache.Mocking.MockableStorageCacheArmClient.GetStorageTargetResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageTargetResource (id As ResourceIdentifier) As StorageTargetResource" />
      <MemberSignature Language="F#" Value="abstract member GetStorageTargetResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.StorageCache.StorageTargetResource&#xA;override this.GetStorageTargetResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.StorageCache.StorageTargetResource" Usage="mockableStorageCacheArmClient.GetStorageTargetResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.StorageCache</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.StorageCache.StorageTargetResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.StorageCache.StorageTargetResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.StorageCache.StorageTargetResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.StorageCache.StorageTargetResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.StorageCache.StorageTargetResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
