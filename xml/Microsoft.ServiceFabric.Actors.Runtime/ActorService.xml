<Type Name="ActorService" FullName="Microsoft.ServiceFabric.Actors.Runtime.ActorService">
  <TypeSignature Language="C#" Value="public class ActorService : Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase, Microsoft.ServiceFabric.Actors.IActorService, Microsoft.ServiceFabric.Services.Remoting.IService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActorService extends Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase implements class Microsoft.ServiceFabric.Actors.IActorService, class Microsoft.ServiceFabric.Services.Remoting.IService" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ServiceFabric.Actors.Runtime.ActorService" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>255.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.ServiceFabric.Actors.IActorService</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.ServiceFabric.Services.Remoting.IService</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Represents the base class for Microsoft Service Fabric based reliable actors service.
            </summary>
    <remarks>
            Derive from this class to implement your own custom actor service if you want to override
            any service level behavior for your actors.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActorService (System.Fabric.StatefulServiceContext context, Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation actorTypeInfo, Func&lt;Microsoft.ServiceFabric.Actors.Runtime.ActorService,Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.ActorBase&gt; actorFactory = null, Func&lt;Microsoft.ServiceFabric.Actors.Runtime.ActorBase,Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider,Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager&gt; stateManagerFactory = null, Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider stateProvider = null, Microsoft.ServiceFabric.Actors.Runtime.ActorServiceSettings settings = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Fabric.StatefulServiceContext context, class Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation actorTypeInfo, class System.Func`3&lt;class Microsoft.ServiceFabric.Actors.Runtime.ActorService, class Microsoft.ServiceFabric.Actors.ActorId, class Microsoft.ServiceFabric.Actors.Runtime.ActorBase&gt; actorFactory, class System.Func`3&lt;class Microsoft.ServiceFabric.Actors.Runtime.ActorBase, class Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider, class Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager&gt; stateManagerFactory, class Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider stateProvider, class Microsoft.ServiceFabric.Actors.Runtime.ActorServiceSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Runtime.ActorService.#ctor(System.Fabric.StatefulServiceContext,Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation,System.Func{Microsoft.ServiceFabric.Actors.Runtime.ActorService,Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.ActorBase},System.Func{Microsoft.ServiceFabric.Actors.Runtime.ActorBase,Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider,Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager},Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider,Microsoft.ServiceFabric.Actors.Runtime.ActorServiceSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Fabric.StatefulServiceContext" />
        <Parameter Name="actorTypeInfo" Type="Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation" />
        <Parameter Name="actorFactory" Type="System.Func&lt;Microsoft.ServiceFabric.Actors.Runtime.ActorService,Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.ActorBase&gt;" />
        <Parameter Name="stateManagerFactory" Type="System.Func&lt;Microsoft.ServiceFabric.Actors.Runtime.ActorBase,Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider,Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager&gt;" />
        <Parameter Name="stateProvider" Type="Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider" />
        <Parameter Name="settings" Type="Microsoft.ServiceFabric.Actors.Runtime.ActorServiceSettings" />
      </Parameters>
      <Docs>
        <param name="context">Service context the actor service is operating under.</param>
        <param name="actorTypeInfo">The type information of the Actor.</param>
        <param name="actorFactory">The factory method to create Actor objects.</param>
        <param name="stateManagerFactory">The factory method to create <see cref="T:Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager" /></param>
        <param name="stateProvider">The state provider to store and access the state of the Actor objects.</param>
        <param name="settings">The settings used to configure the behavior of the Actor service.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ServiceFabric.Actors.Runtime.ActorService" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActorTypeInformation">
      <MemberSignature Language="C#" Value="public Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation ActorTypeInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation ActorTypeInformation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ServiceFabric.Actors.Runtime.ActorService.ActorTypeInformation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets ActorTypeInformation for actor service.
            </summary>
        <value>
          <see cref="T:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation" />
            for the actor hosted by the service replica.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateServiceReplicaListeners">
      <MemberSignature Language="C#" Value="protected override System.Collections.Generic.IEnumerable&lt;Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener&gt; CreateServiceReplicaListeners ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener&gt; CreateServiceReplicaListeners() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Runtime.ActorService.CreateServiceReplicaListeners" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Overrides <see cref="M:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.CreateServiceReplicaListeners" />.
            </summary>
        <returns>Endpoint string pairs like 
            {"Endpoints":{"Listener1":"Endpoint1","Listener2":"Endpoint2" ...}}</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.ServiceFabric.Actors.IActorService.DeleteActorAsync">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Task IActorService.DeleteActorAsync (Microsoft.ServiceFabric.Actors.ActorId actorId, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Threading.Tasks.Task Microsoft.ServiceFabric.Actors.IActorService.DeleteActorAsync(class Microsoft.ServiceFabric.Actors.ActorId actorId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Runtime.ActorService.Microsoft#ServiceFabric#Actors#IActorService#DeleteActorAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.ServiceFabric.Actors.Runtime.ActorService/&lt;Microsoft-ServiceFabric-Actors-IActorService-DeleteActorAsync&gt;d__26))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actorId" Type="Microsoft.ServiceFabric.Actors.ActorId" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="actorId">
          <see cref="T:Microsoft.ServiceFabric.Actors.ActorId" /> of the actor to be deleted.</param>
        <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
        <summary>
            Deletes an Actor from the Actor service.
            </summary>
        <returns>A task that represents the asynchronous operation of call to server.</returns>
        <remarks>
          <para>An active actor, will be deactivated and its state will also be deleted from state provider.</para>
          <para>An in-active actor's state will be deleted from state provider.</para>
          <para>If this method is called for a non-existent actor id in the system, it will be a no-op.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.ServiceFabric.Actors.IActorService.GetActorsAsync">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Task&lt;Microsoft.ServiceFabric.Actors.Query.PagedResult&lt;Microsoft.ServiceFabric.Actors.Query.ActorInformation&gt;&gt; IActorService.GetActorsAsync (Microsoft.ServiceFabric.Actors.Query.ContinuationToken continuationToken, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.ServiceFabric.Actors.Query.PagedResult`1&lt;class Microsoft.ServiceFabric.Actors.Query.ActorInformation&gt;&gt; Microsoft.ServiceFabric.Actors.IActorService.GetActorsAsync(class Microsoft.ServiceFabric.Actors.Query.ContinuationToken continuationToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Runtime.ActorService.Microsoft#ServiceFabric#Actors#IActorService#GetActorsAsync(Microsoft.ServiceFabric.Actors.Query.ContinuationToken,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.ServiceFabric.Actors.Query.PagedResult&lt;Microsoft.ServiceFabric.Actors.Query.ActorInformation&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationToken" Type="Microsoft.ServiceFabric.Actors.Query.ContinuationToken" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="continuationToken">A continuation token to start querying the results from.
            A null value of continuation token means start returning values form the beginning.</param>
        <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
        <summary>
            Gets the list of Actors by querying the actor service.
            </summary>
        <returns>A task that represents the asynchronous operation of call to server.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAbort">
      <MemberSignature Language="C#" Value="protected override void OnAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAbort() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Runtime.ActorService.OnAbort" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Overrides <see cref="M:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnAbort" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChangeRoleAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task OnChangeRoleAsync (System.Fabric.ReplicaRole newRole, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task OnChangeRoleAsync(valuetype System.Fabric.ReplicaRole newRole, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Runtime.ActorService.OnChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.ServiceFabric.Actors.Runtime.ActorService/&lt;OnChangeRoleAsync&gt;d__30))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newRole" Type="System.Fabric.ReplicaRole" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="newRole">New role for the replica.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        <summary>
            Overrides <see cref="M:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)" />.
            </summary>
        <returns>A task that represents the asynchronous operation performed when the replica becomes primary.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCloseAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task OnCloseAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task OnCloseAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Runtime.ActorService.OnCloseAsync(System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.ServiceFabric.Actors.Runtime.ActorService/&lt;OnCloseAsync&gt;d__31))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        <summary>
            Overrides <see cref="M:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnCloseAsync(System.Threading.CancellationToken)" />.
            </summary>
        <returns>A task that represents the asynchronous operation performed when the replica is closed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task RunAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task RunAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Runtime.ActorService.RunAsync(System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        <summary>
            Overrides <see cref="M:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.RunAsync(System.Threading.CancellationToken)" />.
            </summary>
        <returns>
            A task that represents the asynchronous operation of loading reminders when the replica becomes primary.
            </returns>
        <remarks>
            If you need to override this method, please make sure to call this method from your overridden method.
            Also make sure your implementation of overridden method conforms to the guideline specified for
            <see cref="M:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.RunAsync(System.Threading.CancellationToken)" />. 
            <para>
            Failing to do so can cause failover, reconfiguration or upgrade of your actor service to get stuck and 
            can impact availibility of your service.
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public Microsoft.ServiceFabric.Actors.Runtime.ActorServiceSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ServiceFabric.Actors.Runtime.ActorServiceSettings Settings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ServiceFabric.Actors.Runtime.ActorService.Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ServiceFabric.Actors.Runtime.ActorServiceSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets settings for the actor service. 
            </summary>
        <value>
            Settings for the actor service.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateProvider">
      <MemberSignature Language="C#" Value="public Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider StateProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider StateProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ServiceFabric.Actors.Runtime.ActorService.StateProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a <see cref="T:Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider" /> that represents the state provider for the actor service.
            </summary>
        <value>
          <see cref="T:Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider" />
            representing the state provider for the actor service.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>