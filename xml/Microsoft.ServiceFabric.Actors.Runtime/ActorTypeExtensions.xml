<Type Name="ActorTypeExtensions" FullName="Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions">
  <TypeSignature Language="C#" Value="public static class ActorTypeExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ActorTypeExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>255.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Contains extension method for Actor types.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetActorEventInterfaces">
      <MemberSignature Language="C#" Value="public static Type[] GetActorEventInterfaces (this Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type[] GetActorEventInterfaces(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.GetActorEventInterfaces(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
      </Parameters>
      <Docs>
        <param name="type">Type of class implementing actor.</param>
        <summary>
            Gets actor event interfaces implemented by the actor class.
            </summary>
        <returns>An array containing actor event interface which the type implements.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActorInterfaces">
      <MemberSignature Language="C#" Value="public static Type[] GetActorInterfaces (this Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type[] GetActorInterfaces(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.GetActorInterfaces(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
      </Parameters>
      <Docs>
        <param name="type">Type of class implementing actor.</param>
        <summary>
            Gets actor interfaces implemented by the actor class.
            </summary>
        <returns>An array containing actor interface which the type implements.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsActor">
      <MemberSignature Language="C#" Value="public static bool IsActor (this Type actorType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsActor(class System.Type actorType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.IsActor(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actorType" Type="System.Type" RefType="this" />
      </Parameters>
      <Docs>
        <param name="actorType">Type implementing actor.</param>
        <summary>
            Checks if an actorType is an actor.
            </summary>
        <returns>true, if <see cref="P:System.Type.BaseType" /> of actorType is <see cref="T:Microsoft.ServiceFabric.Actors.Runtime.Actor" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsActorInterface">
      <MemberSignature Language="C#" Value="public static bool IsActorInterface (this Type actorInterfaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsActorInterface(class System.Type actorInterfaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.IsActorInterface(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actorInterfaceType" Type="System.Type" RefType="this" />
      </Parameters>
      <Docs>
        <param name="actorInterfaceType">Interface type of the actor.</param>
        <summary>
            Checks if an interface type is an actor interface.
            </summary>
        <returns>true, if actorInterfaceType is an interface only implements <see cref="T:Microsoft.ServiceFabric.Actors.IActor" />
            or (<see cref="T:Microsoft.ServiceFabric.Actors.IActor" /> and <see cref="T:Microsoft.ServiceFabric.Actors.IActorEventPublisher" />).</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRemindableActor">
      <MemberSignature Language="C#" Value="public static bool IsRemindableActor (this Type actorType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsRemindableActor(class System.Type actorType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.IsRemindableActor(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actorType" Type="System.Type" RefType="this" />
      </Parameters>
      <Docs>
        <param name="actorType">Type implementing actor.</param>
        <summary>
            Checks if an actor type implements <see cref="T:Microsoft.ServiceFabric.Actors.Runtime.IRemindable" /> interface.
            </summary>
        <returns>true, if <paramref name="actorType" /> implements <see cref="T:Microsoft.ServiceFabric.Actors.Runtime.IRemindable" /> interface.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>