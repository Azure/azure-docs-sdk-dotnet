<Type Name="IActorStateManager" FullName="Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager">
  <TypeSignature Language="C#" Value="public interface IActorStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IActorStateManager" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>255.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Represents an interface that exposes methods to manage state of an <see cref="T:Microsoft.ServiceFabric.Actors.Runtime.Actor" />.
            This interface is implemented by<see cref="P:Microsoft.ServiceFabric.Actors.Runtime.Actor.StateManager" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddOrUpdateStateAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;T&gt; AddOrUpdateStateAsync&lt;T&gt; (string stateName, T addValue, Func&lt;string,T,T&gt; updateValueFactory, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!!T&gt; AddOrUpdateStateAsync&lt;T&gt;(string stateName, !!T addValue, class System.Func`3&lt;string, !!T, !!T&gt; updateValueFactory, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager.AddOrUpdateStateAsync``1(System.String,``0,System.Func{System.String,``0,``0},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="stateName" Type="System.String" />
        <Parameter Name="addValue" Type="T" />
        <Parameter Name="updateValueFactory" Type="System.Func&lt;System.String,T,T&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">Type of value associated with given state name.</typeparam>
        <param name="stateName">Name of the actor state to add or update.</param>
        <param name="addValue">Value of the actor state to add if it does not exist.</param>
        <param name="updateValueFactory">Factory function to generate value of actor state to update if it exists.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        <summary>
            Adds an actor state with given state name, if it does not already exist or updates
            the state with specified state name, if it exists. 
            </summary>
        <returns>
            A task that represents the asynchronous add/update operation. The value of TResult
            parameter contains value of actor state that was added/updated.
            </returns>
        <remarks>
            The type of state value <typeparamref name="T" /> must be 
            <see href="https://msdn.microsoft.com/library/ms731923.aspx">Data Contract</see> serializable.
            </remarks>
        <exception cref="T:System.ArgumentNullException"> The specified state name is null.</exception>
        <exception cref="T:System.OperationCanceledException">The operation was canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddStateAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AddStateAsync&lt;T&gt; (string stateName, T value, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AddStateAsync&lt;T&gt;(string stateName, !!T value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager.AddStateAsync``1(System.String,``0,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="stateName" Type="System.String" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">Type of value associated with given state name.</typeparam>
        <param name="stateName">Name of the actor state to add.</param>
        <param name="value">Value of the actor state to add.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        <summary>
            Adds an actor state with given state name.
            </summary>
        <returns>
            A task that represents the asynchronous add operation.
            </returns>
        <remarks>
            The type of state value <typeparamref name="T" /> must be 
            <see href="https://msdn.microsoft.com/library/ms731923.aspx">Data Contract</see> serializable.
            </remarks>
        <exception cref="T:System.InvalidOperationException">
            An actor state with given state name already exists.
            </exception>
        <exception cref="T:System.ArgumentNullException">The specified state name is null.</exception>
        <exception cref="T:System.OperationCanceledException">The operation was canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="ClearCacheAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ClearCacheAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ClearCacheAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager.ClearCacheAsync(System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        <summary>
            Clears all the cached actor states and any operation(s) performed on <see cref="T:Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager" />
            since last state save operation.
            </summary>
        <returns>
            A task that represents the asynchronous clear cache operation.
            </returns>
        <remarks>
            All the operation(s) performed on <see cref="T:Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager" />  since last save operation are cleared on
            clearing the cache and will not be included in next save operation.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsStateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; ContainsStateAsync (string stateName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; ContainsStateAsync(string stateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager.ContainsStateAsync(System.String,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="stateName">Name of the actor state.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        <summary>
            Checks if an actor state with specified name exists.
            </summary>
        <returns>
            A task that represents the asynchronous check operation. The value of TResult
            parameter is <c>true</c> if state with specified name exists otherwise <c>false</c>.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"> The specified state name is null.</exception>
        <exception cref="T:System.OperationCanceledException">The operation was canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddStateAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;T&gt; GetOrAddStateAsync&lt;T&gt; (string stateName, T value, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!!T&gt; GetOrAddStateAsync&lt;T&gt;(string stateName, !!T value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager.GetOrAddStateAsync``1(System.String,``0,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="stateName" Type="System.String" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">Type of value associated with given state name.</typeparam>
        <param name="stateName">Name of the actor state to get or add.</param>
        <param name="value">Value of the actor state to add if it does not exist.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        <summary>
            Gets an actor state with the given state name if it exists. If it does not 
            exist, creates and new state with the specified name and value.
            </summary>
        <returns>
            A task that represents the asynchronous get or add operation. The value of TResult
            parameter contains value of actor state with given state name.
            </returns>
        <remarks>
            The type of state value <typeparamref name="T" /> must be 
            <see href="https://msdn.microsoft.com/library/ms731923.aspx">Data Contract</see> serializable.
            </remarks>
        <exception cref="T:System.ArgumentNullException"> The specified state name is null.
            Provide a valid state name string.</exception>
        <exception cref="T:System.OperationCanceledException">The request was canceled using the specified
            <paramref name="cancellationToken" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetStateAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;T&gt; GetStateAsync&lt;T&gt; (string stateName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!!T&gt; GetStateAsync&lt;T&gt;(string stateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager.GetStateAsync``1(System.String,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="stateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">Type of value associated with given state name.</typeparam>
        <param name="stateName">Name of the actor state to get.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        <summary>
            Gets an actor state with specified state name.
            </summary>
        <returns>
            A task that represents the asynchronous get operation. The value of TResult
            parameter contains value of actor state with given state name.
            </returns>
        <remarks>
            The type of state value <typeparamref name="T" /> must be 
            <see href="https://msdn.microsoft.com/library/ms731923.aspx">Data Contract</see> serializable.
            </remarks>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            An actor state with given state name does not exist.
            </exception>
        <exception cref="T:System.ArgumentNullException">The specified state name is null.</exception>
        <exception cref="T:System.OperationCanceledException">The operation was canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetStateNamesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;string&gt;&gt; GetStateNamesAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;string&gt;&gt; GetStateNamesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager.GetStateNamesAsync(System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        <summary>
            Creates an enumerable of all actor state names for current actor.
            </summary>
        <returns>
            A task that represents the asynchronous enumeration operation. The value of TResult
            parameter is an enumerable of all actor state names.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">The operation was canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveStateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RemoveStateAsync (string stateName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RemoveStateAsync(string stateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager.RemoveStateAsync(System.String,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="stateName">Name of the actor state to remove.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        <summary>
            Removes an actor state with specified state name.
            </summary>
        <returns>A task that represents the asynchronous remove operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            An actor state with given state name does not exist.
            </exception>
        <exception cref="T:System.ArgumentNullException"> The specified state name is null. </exception>
        <exception cref="T:System.OperationCanceledException">The operation was canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="SaveStateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SaveStateAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SaveStateAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager.SaveStateAsync(System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        <summary>
            Saves all the cached state changes (add/update/remove) that were made since last call to
            <see cref="M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager.SaveStateAsync(System.Threading.CancellationToken)" /> by actor runtime or by user explicitly.
            </summary>
        <returns>
            A task that represents the asynchronous save operation.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStateAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetStateAsync&lt;T&gt; (string stateName, T value, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetStateAsync&lt;T&gt;(string stateName, !!T value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager.SetStateAsync``1(System.String,``0,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="stateName" Type="System.String" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">Type of value associated with given state name.</typeparam>
        <param name="stateName">Name of the actor state to set.</param>
        <param name="value">Value of the actor state.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        <summary>
            Sets an actor state with given state name to specified value.
            If an actor state with specified name does not exist, it is added.
            </summary>
        <returns>
            A task that represents the asynchronous set operation.
            </returns>
        <remarks>
            The type of state value <typeparamref name="T" /> must be 
            <see href="https://msdn.microsoft.com/library/ms731923.aspx">Data Contract</see> serializable.
            </remarks>
        <exception cref="T:System.ArgumentNullException">The specified state name is null.</exception>
        <exception cref="T:System.OperationCanceledException">The operation was canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryAddStateAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; TryAddStateAsync&lt;T&gt; (string stateName, T value, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; TryAddStateAsync&lt;T&gt;(string stateName, !!T value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager.TryAddStateAsync``1(System.String,``0,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="stateName" Type="System.String" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">Type of value associated with given state name.</typeparam>
        <param name="stateName">Name of the actor state to add.</param>
        <param name="value">Value of the actor state to add.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests.
            This is optional and defaults to <see cref="P:System.Threading.CancellationToken.None" /></param>
        <summary>
            Attempts to add an actor state with given state name and value. Returns false if an actor state with 
            the same name already exists. 
            </summary>
        <returns>
            A boolean task that represents the asynchronous add operation. Returns true if the 
            value was successfully added and false if an actor state with the same name already exists.
            </returns>
        <remarks>
            The type of state value <typeparamref name="T" /> must be 
            <see href="https://msdn.microsoft.com/library/ms731923.aspx">Data Contract</see> serializable.
            </remarks>
        <exception cref="T:System.ArgumentNullException">The specified state name is null.
            Provide a valid state name string.</exception>
        <exception cref="T:System.OperationCanceledException">The request was canceled using the specified
            <paramref name="cancellationToken" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetStateAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.ServiceFabric.Data.ConditionalValue&lt;T&gt;&gt; TryGetStateAsync&lt;T&gt; (string stateName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Microsoft.ServiceFabric.Data.ConditionalValue`1&lt;!!T&gt;&gt; TryGetStateAsync&lt;T&gt;(string stateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager.TryGetStateAsync``1(System.String,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.ServiceFabric.Data.ConditionalValue&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="stateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">Type of value associated with given state name.</typeparam>
        <param name="stateName">Name of the actor state to get.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        <summary>
            Attempts to get an actor state with specified state name.
            </summary>
        <returns>
            A task that represents the asynchronous get operation. The value of TResult
            parameter contains <see cref="T:Microsoft.ServiceFabric.Data.ConditionalValue`1" />
            indicating whether the actor state is present and the value of actor state if it is present.
            </returns>
        <remarks>
            The type of state value <typeparamref name="T" /> must be 
            <see href="https://msdn.microsoft.com/library/ms731923.aspx">Data Contract</see> serializable.
            </remarks>
        <exception cref="T:System.ArgumentNullException">The specified state name is null.</exception>
        <exception cref="T:System.OperationCanceledException">The operation was canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryRemoveStateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; TryRemoveStateAsync (string stateName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; TryRemoveStateAsync(string stateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager.TryRemoveStateAsync(System.String,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="stateName">Name of the actor state to remove.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        <summary>
            Attempts to remove an actor state with specified state name.
            </summary>
        <returns>
            A task that represents the asynchronous remove operation. The value of TResult
            parameter indicates if the state was successfully removed.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"> The specified state name is null.</exception>
        <exception cref="T:System.OperationCanceledException">The operation was canceled.</exception>
      </Docs>
    </Member>
  </Members>
</Type>