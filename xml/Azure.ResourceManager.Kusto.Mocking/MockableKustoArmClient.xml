<Type Name="MockableKustoArmClient" FullName="Azure.ResourceManager.Kusto.Mocking.MockableKustoArmClient">
  <TypeSignature Language="C#" Value="public class MockableKustoArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableKustoArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Kusto.Mocking.MockableKustoArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableKustoArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableKustoArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
    <AssemblyVersion>1.5.1.0</AssemblyVersion>
    <AssemblyVersion>1.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableKustoArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.Mocking.MockableKustoArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.5.1.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Kusto.Mocking.MockableKustoArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKustoAttachedDatabaseConfigurationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Kusto.KustoAttachedDatabaseConfigurationResource GetKustoAttachedDatabaseConfigurationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Kusto.KustoAttachedDatabaseConfigurationResource GetKustoAttachedDatabaseConfigurationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.Mocking.MockableKustoArmClient.GetKustoAttachedDatabaseConfigurationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKustoAttachedDatabaseConfigurationResource (id As ResourceIdentifier) As KustoAttachedDatabaseConfigurationResource" />
      <MemberSignature Language="F#" Value="abstract member GetKustoAttachedDatabaseConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Kusto.KustoAttachedDatabaseConfigurationResource&#xA;override this.GetKustoAttachedDatabaseConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Kusto.KustoAttachedDatabaseConfigurationResource" Usage="mockableKustoArmClient.GetKustoAttachedDatabaseConfigurationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.5.1.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Kusto.KustoAttachedDatabaseConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Kusto.KustoAttachedDatabaseConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Kusto.KustoAttachedDatabaseConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Kusto.KustoAttachedDatabaseConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Kusto.KustoAttachedDatabaseConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKustoClusterPrincipalAssignmentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Kusto.KustoClusterPrincipalAssignmentResource GetKustoClusterPrincipalAssignmentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Kusto.KustoClusterPrincipalAssignmentResource GetKustoClusterPrincipalAssignmentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.Mocking.MockableKustoArmClient.GetKustoClusterPrincipalAssignmentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKustoClusterPrincipalAssignmentResource (id As ResourceIdentifier) As KustoClusterPrincipalAssignmentResource" />
      <MemberSignature Language="F#" Value="abstract member GetKustoClusterPrincipalAssignmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Kusto.KustoClusterPrincipalAssignmentResource&#xA;override this.GetKustoClusterPrincipalAssignmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Kusto.KustoClusterPrincipalAssignmentResource" Usage="mockableKustoArmClient.GetKustoClusterPrincipalAssignmentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.5.1.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Kusto.KustoClusterPrincipalAssignmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Kusto.KustoClusterPrincipalAssignmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Kusto.KustoClusterPrincipalAssignmentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Kusto.KustoClusterPrincipalAssignmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Kusto.KustoClusterPrincipalAssignmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKustoClusterResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Kusto.KustoClusterResource GetKustoClusterResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Kusto.KustoClusterResource GetKustoClusterResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.Mocking.MockableKustoArmClient.GetKustoClusterResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKustoClusterResource (id As ResourceIdentifier) As KustoClusterResource" />
      <MemberSignature Language="F#" Value="abstract member GetKustoClusterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Kusto.KustoClusterResource&#xA;override this.GetKustoClusterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Kusto.KustoClusterResource" Usage="mockableKustoArmClient.GetKustoClusterResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.5.1.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Kusto.KustoClusterResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Kusto.KustoClusterResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Kusto.KustoClusterResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Kusto.KustoClusterResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Kusto.KustoClusterResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKustoDatabasePrincipalAssignmentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Kusto.KustoDatabasePrincipalAssignmentResource GetKustoDatabasePrincipalAssignmentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Kusto.KustoDatabasePrincipalAssignmentResource GetKustoDatabasePrincipalAssignmentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.Mocking.MockableKustoArmClient.GetKustoDatabasePrincipalAssignmentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKustoDatabasePrincipalAssignmentResource (id As ResourceIdentifier) As KustoDatabasePrincipalAssignmentResource" />
      <MemberSignature Language="F#" Value="abstract member GetKustoDatabasePrincipalAssignmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Kusto.KustoDatabasePrincipalAssignmentResource&#xA;override this.GetKustoDatabasePrincipalAssignmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Kusto.KustoDatabasePrincipalAssignmentResource" Usage="mockableKustoArmClient.GetKustoDatabasePrincipalAssignmentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.5.1.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Kusto.KustoDatabasePrincipalAssignmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Kusto.KustoDatabasePrincipalAssignmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Kusto.KustoDatabasePrincipalAssignmentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Kusto.KustoDatabasePrincipalAssignmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Kusto.KustoDatabasePrincipalAssignmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKustoDatabaseResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Kusto.KustoDatabaseResource GetKustoDatabaseResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Kusto.KustoDatabaseResource GetKustoDatabaseResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.Mocking.MockableKustoArmClient.GetKustoDatabaseResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKustoDatabaseResource (id As ResourceIdentifier) As KustoDatabaseResource" />
      <MemberSignature Language="F#" Value="abstract member GetKustoDatabaseResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Kusto.KustoDatabaseResource&#xA;override this.GetKustoDatabaseResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Kusto.KustoDatabaseResource" Usage="mockableKustoArmClient.GetKustoDatabaseResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.5.1.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Kusto.KustoDatabaseResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Kusto.KustoDatabaseResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Kusto.KustoDatabaseResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Kusto.KustoDatabaseResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKustoDataConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Kusto.KustoDataConnectionResource GetKustoDataConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Kusto.KustoDataConnectionResource GetKustoDataConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.Mocking.MockableKustoArmClient.GetKustoDataConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKustoDataConnectionResource (id As ResourceIdentifier) As KustoDataConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetKustoDataConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Kusto.KustoDataConnectionResource&#xA;override this.GetKustoDataConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Kusto.KustoDataConnectionResource" Usage="mockableKustoArmClient.GetKustoDataConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.5.1.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Kusto.KustoDataConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Kusto.KustoDataConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Kusto.KustoDataConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Kusto.KustoDataConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Kusto.KustoDataConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKustoManagedPrivateEndpointResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Kusto.KustoManagedPrivateEndpointResource GetKustoManagedPrivateEndpointResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Kusto.KustoManagedPrivateEndpointResource GetKustoManagedPrivateEndpointResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.Mocking.MockableKustoArmClient.GetKustoManagedPrivateEndpointResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKustoManagedPrivateEndpointResource (id As ResourceIdentifier) As KustoManagedPrivateEndpointResource" />
      <MemberSignature Language="F#" Value="abstract member GetKustoManagedPrivateEndpointResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Kusto.KustoManagedPrivateEndpointResource&#xA;override this.GetKustoManagedPrivateEndpointResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Kusto.KustoManagedPrivateEndpointResource" Usage="mockableKustoArmClient.GetKustoManagedPrivateEndpointResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.5.1.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Kusto.KustoManagedPrivateEndpointResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Kusto.KustoManagedPrivateEndpointResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Kusto.KustoManagedPrivateEndpointResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Kusto.KustoManagedPrivateEndpointResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Kusto.KustoManagedPrivateEndpointResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKustoPrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Kusto.KustoPrivateEndpointConnectionResource GetKustoPrivateEndpointConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Kusto.KustoPrivateEndpointConnectionResource GetKustoPrivateEndpointConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.Mocking.MockableKustoArmClient.GetKustoPrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKustoPrivateEndpointConnectionResource (id As ResourceIdentifier) As KustoPrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetKustoPrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Kusto.KustoPrivateEndpointConnectionResource&#xA;override this.GetKustoPrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Kusto.KustoPrivateEndpointConnectionResource" Usage="mockableKustoArmClient.GetKustoPrivateEndpointConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.5.1.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Kusto.KustoPrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Kusto.KustoPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Kusto.KustoPrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Kusto.KustoPrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Kusto.KustoPrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKustoPrivateLinkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Kusto.KustoPrivateLinkResource GetKustoPrivateLinkResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Kusto.KustoPrivateLinkResource GetKustoPrivateLinkResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.Mocking.MockableKustoArmClient.GetKustoPrivateLinkResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKustoPrivateLinkResource (id As ResourceIdentifier) As KustoPrivateLinkResource" />
      <MemberSignature Language="F#" Value="abstract member GetKustoPrivateLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Kusto.KustoPrivateLinkResource&#xA;override this.GetKustoPrivateLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Kusto.KustoPrivateLinkResource" Usage="mockableKustoArmClient.GetKustoPrivateLinkResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.5.1.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Kusto.KustoPrivateLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Kusto.KustoPrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Kusto.KustoPrivateLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Kusto.KustoPrivateLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Kusto.KustoPrivateLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKustoScriptResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Kusto.KustoScriptResource GetKustoScriptResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Kusto.KustoScriptResource GetKustoScriptResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.Mocking.MockableKustoArmClient.GetKustoScriptResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKustoScriptResource (id As ResourceIdentifier) As KustoScriptResource" />
      <MemberSignature Language="F#" Value="abstract member GetKustoScriptResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Kusto.KustoScriptResource&#xA;override this.GetKustoScriptResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Kusto.KustoScriptResource" Usage="mockableKustoArmClient.GetKustoScriptResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.5.1.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Kusto.KustoScriptResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Kusto.KustoScriptResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Kusto.KustoScriptResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Kusto.KustoScriptResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Kusto.KustoScriptResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSandboxCustomImageResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Kusto.SandboxCustomImageResource GetSandboxCustomImageResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Kusto.SandboxCustomImageResource GetSandboxCustomImageResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.Mocking.MockableKustoArmClient.GetSandboxCustomImageResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSandboxCustomImageResource (id As ResourceIdentifier) As SandboxCustomImageResource" />
      <MemberSignature Language="F#" Value="abstract member GetSandboxCustomImageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Kusto.SandboxCustomImageResource&#xA;override this.GetSandboxCustomImageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Kusto.SandboxCustomImageResource" Usage="mockableKustoArmClient.GetSandboxCustomImageResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.5.1.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Kusto.SandboxCustomImageResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Kusto.SandboxCustomImageResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Kusto.SandboxCustomImageResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Kusto.SandboxCustomImageResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Kusto.SandboxCustomImageResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
