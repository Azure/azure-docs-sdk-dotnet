<Type Name="MockableKustoResourceGroupResource" FullName="Azure.ResourceManager.Kusto.Mocking.MockableKustoResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableKustoResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableKustoResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Kusto.Mocking.MockableKustoResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableKustoResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableKustoResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
    <AssemblyVersion>1.5.1.0</AssemblyVersion>
    <AssemblyVersion>1.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableKustoResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.Mocking.MockableKustoResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.5.1.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Kusto.Mocking.MockableKustoResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKustoCluster">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Kusto.KustoClusterResource&gt; GetKustoCluster (string clusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Kusto.KustoClusterResource&gt; GetKustoCluster(string clusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.Mocking.MockableKustoResourceGroupResource.GetKustoCluster(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKustoCluster (clusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of KustoClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetKustoCluster : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Kusto.KustoClusterResource&gt;&#xA;override this.GetKustoCluster : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Kusto.KustoClusterResource&gt;" Usage="mockableKustoResourceGroupResource.GetKustoCluster (clusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.5.1.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Kusto.KustoClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="clusterName"> The name of the Kusto cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a Kusto cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}</description></item><item><term>Operation Id</term><description>Clusters_Get</description></item><item><term>Default Api Version</term><description>2023-08-15</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Kusto.KustoClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clusterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKustoClusterAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.KustoClusterResource&gt;&gt; GetKustoClusterAsync (string clusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Kusto.KustoClusterResource&gt;&gt; GetKustoClusterAsync(string clusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.Mocking.MockableKustoResourceGroupResource.GetKustoClusterAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKustoClusterAsync (clusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of KustoClusterResource))" />
      <MemberSignature Language="F#" Value="abstract member GetKustoClusterAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.KustoClusterResource&gt;&gt;&#xA;override this.GetKustoClusterAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.KustoClusterResource&gt;&gt;" Usage="mockableKustoResourceGroupResource.GetKustoClusterAsync (clusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.5.1.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.KustoClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="clusterName"> The name of the Kusto cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a Kusto cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}</description></item><item><term>Operation Id</term><description>Clusters_Get</description></item><item><term>Default Api Version</term><description>2023-08-15</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Kusto.KustoClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clusterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKustoClusters">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Kusto.KustoClusterCollection GetKustoClusters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Kusto.KustoClusterCollection GetKustoClusters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.Mocking.MockableKustoResourceGroupResource.GetKustoClusters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKustoClusters () As KustoClusterCollection" />
      <MemberSignature Language="F#" Value="abstract member GetKustoClusters : unit -&gt; Azure.ResourceManager.Kusto.KustoClusterCollection&#xA;override this.GetKustoClusters : unit -&gt; Azure.ResourceManager.Kusto.KustoClusterCollection" Usage="mockableKustoResourceGroupResource.GetKustoClusters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.5.1.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Kusto.KustoClusterCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of KustoClusterResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of KustoClusterResources and their operations over a KustoClusterResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
