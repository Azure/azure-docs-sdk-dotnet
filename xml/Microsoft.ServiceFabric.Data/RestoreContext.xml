<Type Name="RestoreContext" FullName="Microsoft.ServiceFabric.Data.RestoreContext">
  <TypeSignature Language="C#" Value="public struct RestoreContext" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit RestoreContext extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ServiceFabric.Data.RestoreContext" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ServiceFabric.Data.Interfaces</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <cref name="RestoreContext" /> contains the <cref name="RestoreContext.RestoreAsync(RestoreDescription)" /> that can be used to restore the state of the replica from a backup. 
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RestoreContext (Microsoft.ServiceFabric.Data.IStateProviderReplica stateProviderReplica);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.ServiceFabric.Data.IStateProviderReplica stateProviderReplica) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Data.RestoreContext.#ctor(Microsoft.ServiceFabric.Data.IStateProviderReplica)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stateProviderReplica" Type="Microsoft.ServiceFabric.Data.IStateProviderReplica" />
      </Parameters>
      <Docs>
        <param name="stateProviderReplica">
            An <see cref="T:Microsoft.ServiceFabric.Data.IStateProviderReplica" /> representing a reliable state provider replica.
            </param>
        <summary>
            Initializes a new instance of the <cref name="RestoreContext" /> structure.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RestoreAsync (Microsoft.ServiceFabric.Data.RestoreDescription restoreDescription);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task RestoreAsync(valuetype Microsoft.ServiceFabric.Data.RestoreDescription restoreDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Data.RestoreContext.RestoreAsync(Microsoft.ServiceFabric.Data.RestoreDescription)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="restoreDescription" Type="Microsoft.ServiceFabric.Data.RestoreDescription" />
      </Parameters>
      <Docs>
        <param name="restoreDescription">Description for the restore request.</param>
        <summary>
            Restores a backup described by <see cref="T:Microsoft.ServiceFabric.Data.RestoreDescription" />.
            </summary>
        <returns>
            Task that represents the asynchronous restore operation.
            </returns>
        <remarks>
            This API must be called from OnDataLossAsync method.
            Only one RestoreAsync API can be inflight per replica at any given point of time.
            </remarks>
        <exception cref="T:System.Fabric.FabricMissingFullBackupException">
            Indicates that the input backup folder does not contain a full backup.
            For a backup folder to be restorable, it must contain exactly one full backup and any number of incremental backups.
            </exception>
        <exception cref="T:System.ArgumentException">
            Indicates that one of the arguments is not valid.
            An example case is when RestorePolicy is set to Safe, but the input backup folder contains a version of the state that is older than the 
            state maintained in the current replica.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RestoreAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RestoreAsync (Microsoft.ServiceFabric.Data.RestoreDescription restoreDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task RestoreAsync(valuetype Microsoft.ServiceFabric.Data.RestoreDescription restoreDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Data.RestoreContext.RestoreAsync(Microsoft.ServiceFabric.Data.RestoreDescription,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="restoreDescription" Type="Microsoft.ServiceFabric.Data.RestoreDescription" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="restoreDescription">Description for the restore request.</param>
        <param name="cancellationToken">The token to monitor for cancellation requests.</param>
        <summary>
            Restore a backup described by <see cref="T:Microsoft.ServiceFabric.Data.RestoreDescription" />.
            </summary>
        <returns>Task that represents the asynchronous restore operation.</returns>
        <remarks>
            This API must be called from OnDataLossAsync method.
            Only one RestoreAsync API can be inflight per replica at any given point of time.
            </remarks>
        <exception cref="T:System.Fabric.FabricMissingFullBackupException">
            Indicates that the input backup folder does not contain a full backup.
            For a backup folder to be restorable, it must contain exactly one full backup and any number of incremental backups.
            </exception>
        <exception cref="T:System.ArgumentException">
            Indicates that one of the arguments is not valid.
            An example case is when RestorePolicy is set to Safe, but the input backup folder contains a version of the state that is older than the 
            state maintained in the current replica.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
