<Type Name="EnvelopedSignatureReader" FullName="Microsoft.IdentityModel.Xml.EnvelopedSignatureReader">
  <TypeSignature Language="C#" Value="public class EnvelopedSignatureReader : Microsoft.IdentityModel.Xml.DelegatingXmlDictionaryReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EnvelopedSignatureReader extends Microsoft.IdentityModel.Xml.DelegatingXmlDictionaryReader" />
  <TypeSignature Language="DocId" Value="T:Microsoft.IdentityModel.Xml.EnvelopedSignatureReader" />
  <TypeSignature Language="VB.NET" Value="Public Class EnvelopedSignatureReader&#xA;Inherits DelegatingXmlDictionaryReader" />
  <TypeSignature Language="F#" Value="type EnvelopedSignatureReader = class&#xA;    inherit DelegatingXmlDictionaryReader" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.IdentityModel.Xml</AssemblyName>
    <AssemblyVersion>6.10.2.0</AssemblyVersion>
    <AssemblyVersion>6.11.0.0</AssemblyVersion>
    <AssemblyVersion>6.11.1.0</AssemblyVersion>
    <AssemblyVersion>6.12.0.0</AssemblyVersion>
    <AssemblyVersion>6.12.1.0</AssemblyVersion>
    <AssemblyVersion>6.12.2.0</AssemblyVersion>
    <AssemblyVersion>6.13.1.0</AssemblyVersion>
    <AssemblyVersion>6.14.0.0</AssemblyVersion>
    <AssemblyVersion>6.14.1.0</AssemblyVersion>
    <AssemblyVersion>6.15.0.0</AssemblyVersion>
    <AssemblyVersion>6.15.1.0</AssemblyVersion>
    <AssemblyVersion>6.16.0.0</AssemblyVersion>
    <AssemblyVersion>6.17.0.0</AssemblyVersion>
    <AssemblyVersion>6.18.0.0</AssemblyVersion>
    <AssemblyVersion>6.19.0.0</AssemblyVersion>
    <AssemblyVersion>6.20.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.IdentityModel.Xml.DelegatingXmlDictionaryReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Wraps a <see cref="T:System.Xml.XmlReader" /> pointing to a root element of XML that may contain a signature.
            If a Signature element is found, a <see cref="P:Microsoft.IdentityModel.Xml.EnvelopedSignatureReader.Signature" /> will be populated and <see cref="P:Microsoft.IdentityModel.Xml.SignedInfo.References" /> will
            have <see cref="P:Microsoft.IdentityModel.Xml.EnvelopedSignatureReader.XmlTokenStream" /> set for future validation.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnvelopedSignatureReader (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Xml.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As XmlReader)" />
      <MemberSignature Language="F#" Value="new Microsoft.IdentityModel.Xml.EnvelopedSignatureReader : System.Xml.XmlReader -&gt; Microsoft.IdentityModel.Xml.EnvelopedSignatureReader" Usage="new Microsoft.IdentityModel.Xml.EnvelopedSignatureReader reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Xml</AssemblyName>
        <AssemblyVersion>6.10.2.0</AssemblyVersion>
        <AssemblyVersion>6.11.0.0</AssemblyVersion>
        <AssemblyVersion>6.11.1.0</AssemblyVersion>
        <AssemblyVersion>6.12.0.0</AssemblyVersion>
        <AssemblyVersion>6.12.1.0</AssemblyVersion>
        <AssemblyVersion>6.12.2.0</AssemblyVersion>
        <AssemblyVersion>6.13.1.0</AssemblyVersion>
        <AssemblyVersion>6.14.0.0</AssemblyVersion>
        <AssemblyVersion>6.14.1.0</AssemblyVersion>
        <AssemblyVersion>6.15.0.0</AssemblyVersion>
        <AssemblyVersion>6.15.1.0</AssemblyVersion>
        <AssemblyVersion>6.16.0.0</AssemblyVersion>
        <AssemblyVersion>6.17.0.0</AssemblyVersion>
        <AssemblyVersion>6.18.0.0</AssemblyVersion>
        <AssemblyVersion>6.19.0.0</AssemblyVersion>
        <AssemblyVersion>6.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">a <see cref="T:System.Xml.XmlReader" /> pointing to XML that may contain an enveloped signature.</param>
        <summary>
            Initializes an instance of <see cref="T:Microsoft.IdentityModel.Xml.EnvelopedSignatureReader" /></summary>
        <remarks>If a &lt;Signature&gt; element is found, the <see cref="P:Microsoft.IdentityModel.Xml.EnvelopedSignatureReader.Signature" /> will be set.</remarks>
        <exception cref="T:System.ArgumentNullException">if <paramref name="reader" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnvelopedSignatureReader (System.Xml.XmlReader reader, Microsoft.IdentityModel.Xml.IXmlElementReader xmlElementReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader reader, class Microsoft.IdentityModel.Xml.IXmlElementReader xmlElementReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Xml.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,Microsoft.IdentityModel.Xml.IXmlElementReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As XmlReader, xmlElementReader As IXmlElementReader)" />
      <MemberSignature Language="F#" Value="new Microsoft.IdentityModel.Xml.EnvelopedSignatureReader : System.Xml.XmlReader * Microsoft.IdentityModel.Xml.IXmlElementReader -&gt; Microsoft.IdentityModel.Xml.EnvelopedSignatureReader" Usage="new Microsoft.IdentityModel.Xml.EnvelopedSignatureReader (reader, xmlElementReader)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Xml</AssemblyName>
        <AssemblyVersion>6.10.2.0</AssemblyVersion>
        <AssemblyVersion>6.11.0.0</AssemblyVersion>
        <AssemblyVersion>6.11.1.0</AssemblyVersion>
        <AssemblyVersion>6.12.0.0</AssemblyVersion>
        <AssemblyVersion>6.12.1.0</AssemblyVersion>
        <AssemblyVersion>6.12.2.0</AssemblyVersion>
        <AssemblyVersion>6.13.1.0</AssemblyVersion>
        <AssemblyVersion>6.14.0.0</AssemblyVersion>
        <AssemblyVersion>6.14.1.0</AssemblyVersion>
        <AssemblyVersion>6.15.0.0</AssemblyVersion>
        <AssemblyVersion>6.15.1.0</AssemblyVersion>
        <AssemblyVersion>6.16.0.0</AssemblyVersion>
        <AssemblyVersion>6.17.0.0</AssemblyVersion>
        <AssemblyVersion>6.18.0.0</AssemblyVersion>
        <AssemblyVersion>6.19.0.0</AssemblyVersion>
        <AssemblyVersion>6.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="xmlElementReader" Type="Microsoft.IdentityModel.Xml.IXmlElementReader" />
      </Parameters>
      <Docs>
        <param name="reader">a <see cref="T:System.Xml.XmlReader" /> pointing to XML that may contain an enveloped signature.</param>
        <param name="xmlElementReader"> specified to read inner objects.</param>
        <summary>
            Initializes an instance of <see cref="T:Microsoft.IdentityModel.Xml.EnvelopedSignatureReader" /></summary>
        <remarks>If a &lt;Signature&gt; element is found, the <see cref="P:Microsoft.IdentityModel.Xml.EnvelopedSignatureReader.Signature" /> will be set.</remarks>
        <exception cref="T:System.ArgumentNullException">if <paramref name="xmlElementReader" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnEndOfRootElement">
      <MemberSignature Language="C#" Value="protected virtual void OnEndOfRootElement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndOfRootElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Xml.EnvelopedSignatureReader.OnEndOfRootElement" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndOfRootElement ()" />
      <MemberSignature Language="F#" Value="abstract member OnEndOfRootElement : unit -&gt; unit&#xA;override this.OnEndOfRootElement : unit -&gt; unit" Usage="envelopedSignatureReader.OnEndOfRootElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Xml</AssemblyName>
        <AssemblyVersion>6.10.2.0</AssemblyVersion>
        <AssemblyVersion>6.11.0.0</AssemblyVersion>
        <AssemblyVersion>6.11.1.0</AssemblyVersion>
        <AssemblyVersion>6.12.0.0</AssemblyVersion>
        <AssemblyVersion>6.12.1.0</AssemblyVersion>
        <AssemblyVersion>6.12.2.0</AssemblyVersion>
        <AssemblyVersion>6.13.1.0</AssemblyVersion>
        <AssemblyVersion>6.14.0.0</AssemblyVersion>
        <AssemblyVersion>6.14.1.0</AssemblyVersion>
        <AssemblyVersion>6.15.0.0</AssemblyVersion>
        <AssemblyVersion>6.15.1.0</AssemblyVersion>
        <AssemblyVersion>6.16.0.0</AssemblyVersion>
        <AssemblyVersion>6.17.0.0</AssemblyVersion>
        <AssemblyVersion>6.18.0.0</AssemblyVersion>
        <AssemblyVersion>6.19.0.0</AssemblyVersion>
        <AssemblyVersion>6.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Called after the root element has been completely read.
            Attaches a <see cref="P:Microsoft.IdentityModel.Xml.EnvelopedSignatureReader.XmlTokenStream" /> to the first Reference for future processing if
            a signature was found.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.IdentityModel.Xml.EnvelopedSignatureReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="envelopedSignatureReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Xml</AssemblyName>
        <AssemblyVersion>6.10.2.0</AssemblyVersion>
        <AssemblyVersion>6.11.0.0</AssemblyVersion>
        <AssemblyVersion>6.11.1.0</AssemblyVersion>
        <AssemblyVersion>6.12.0.0</AssemblyVersion>
        <AssemblyVersion>6.12.1.0</AssemblyVersion>
        <AssemblyVersion>6.12.2.0</AssemblyVersion>
        <AssemblyVersion>6.13.1.0</AssemblyVersion>
        <AssemblyVersion>6.14.0.0</AssemblyVersion>
        <AssemblyVersion>6.14.1.0</AssemblyVersion>
        <AssemblyVersion>6.15.0.0</AssemblyVersion>
        <AssemblyVersion>6.15.1.0</AssemblyVersion>
        <AssemblyVersion>6.16.0.0</AssemblyVersion>
        <AssemblyVersion>6.17.0.0</AssemblyVersion>
        <AssemblyVersion>6.18.0.0</AssemblyVersion>
        <AssemblyVersion>6.19.0.0</AssemblyVersion>
        <AssemblyVersion>6.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Keeps track of the XML Element count. If a signature is detected it is read.
            </summary>
        <returns>'true' if the next node was read successfully; 'false' if there are no more nodes.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.IdentityModel.Xml.XmlReadException">if a &lt;Reference&gt; element was not found in the &lt;SignedInfo&gt;.</exception>
      </Docs>
    </Member>
    <Member MemberName="Serializer">
      <MemberSignature Language="C#" Value="public Microsoft.IdentityModel.Xml.DSigSerializer Serializer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.IdentityModel.Xml.DSigSerializer Serializer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Xml.EnvelopedSignatureReader.Serializer" />
      <MemberSignature Language="VB.NET" Value="Public Property Serializer As DSigSerializer" />
      <MemberSignature Language="F#" Value="member this.Serializer : Microsoft.IdentityModel.Xml.DSigSerializer with get, set" Usage="Microsoft.IdentityModel.Xml.EnvelopedSignatureReader.Serializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Xml</AssemblyName>
        <AssemblyVersion>6.10.2.0</AssemblyVersion>
        <AssemblyVersion>6.11.0.0</AssemblyVersion>
        <AssemblyVersion>6.11.1.0</AssemblyVersion>
        <AssemblyVersion>6.12.0.0</AssemblyVersion>
        <AssemblyVersion>6.12.1.0</AssemblyVersion>
        <AssemblyVersion>6.12.2.0</AssemblyVersion>
        <AssemblyVersion>6.13.1.0</AssemblyVersion>
        <AssemblyVersion>6.14.0.0</AssemblyVersion>
        <AssemblyVersion>6.14.1.0</AssemblyVersion>
        <AssemblyVersion>6.15.0.0</AssemblyVersion>
        <AssemblyVersion>6.15.1.0</AssemblyVersion>
        <AssemblyVersion>6.16.0.0</AssemblyVersion>
        <AssemblyVersion>6.17.0.0</AssemblyVersion>
        <AssemblyVersion>6.18.0.0</AssemblyVersion>
        <AssemblyVersion>6.19.0.0</AssemblyVersion>
        <AssemblyVersion>6.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IdentityModel.Xml.DSigSerializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="T:Microsoft.IdentityModel.Xml.DSigSerializer" /> to use when reading XmlDSig elements.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">if 'value' is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="Signature">
      <MemberSignature Language="C#" Value="public Microsoft.IdentityModel.Xml.Signature Signature { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.IdentityModel.Xml.Signature Signature" />
      <MemberSignature Language="DocId" Value="P:Microsoft.IdentityModel.Xml.EnvelopedSignatureReader.Signature" />
      <MemberSignature Language="VB.NET" Value="Public Property Signature As Signature" />
      <MemberSignature Language="F#" Value="member this.Signature : Microsoft.IdentityModel.Xml.Signature with get, set" Usage="Microsoft.IdentityModel.Xml.EnvelopedSignatureReader.Signature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.IdentityModel.Xml</AssemblyName>
        <AssemblyVersion>6.10.2.0</AssemblyVersion>
        <AssemblyVersion>6.11.0.0</AssemblyVersion>
        <AssemblyVersion>6.11.1.0</AssemblyVersion>
        <AssemblyVersion>6.12.0.0</AssemblyVersion>
        <AssemblyVersion>6.12.1.0</AssemblyVersion>
        <AssemblyVersion>6.12.2.0</AssemblyVersion>
        <AssemblyVersion>6.13.1.0</AssemblyVersion>
        <AssemblyVersion>6.14.0.0</AssemblyVersion>
        <AssemblyVersion>6.14.1.0</AssemblyVersion>
        <AssemblyVersion>6.15.0.0</AssemblyVersion>
        <AssemblyVersion>6.15.1.0</AssemblyVersion>
        <AssemblyVersion>6.16.0.0</AssemblyVersion>
        <AssemblyVersion>6.17.0.0</AssemblyVersion>
        <AssemblyVersion>6.18.0.0</AssemblyVersion>
        <AssemblyVersion>6.19.0.0</AssemblyVersion>
        <AssemblyVersion>6.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IdentityModel.Xml.Signature</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Microsoft.IdentityModel.Xml.Signature" /> that was found inside the XML.
            </summary>
        <value>To be added.</value>
        <remarks>
          <see cref="T:Microsoft.IdentityModel.Xml.Signature" /> may be null.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
