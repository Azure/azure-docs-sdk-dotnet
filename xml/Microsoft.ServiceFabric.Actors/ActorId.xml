<Type Name="ActorId" FullName="Microsoft.ServiceFabric.Actors.ActorId">
  <TypeSignature Language="C#" Value="public sealed class ActorId : IComparable&lt;Microsoft.ServiceFabric.Actors.ActorId&gt;, IEquatable&lt;Microsoft.ServiceFabric.Actors.ActorId&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ActorId extends System.Object implements class System.IComparable`1&lt;class Microsoft.ServiceFabric.Actors.ActorId&gt;, class System.IEquatable`1&lt;class Microsoft.ServiceFabric.Actors.ActorId&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ServiceFabric.Actors.ActorId" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>255.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable&lt;Microsoft.ServiceFabric.Actors.ActorId&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.ServiceFabric.Actors.ActorId&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract(Name="ActorId")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            The ActorId represents the identity of an actor within an actor service. This is used to identify the partition of the actor service inside which the actor will run, see <see cref="M:Microsoft.ServiceFabric.Actors.ActorId.GetPartitionKey" /></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActorId (Guid id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.ActorId.#ctor(System.Guid)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="id">Value for actor id.</param>
        <summary>
            Initializes a new instance of ActorId class with Id value of type <see cref="T:System.Guid" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActorId (long id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.ActorId.#ctor(System.Int64)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="id">Value for actor id.</param>
        <summary>
            Initializes a new instance of ActorId class with Id value of type <see cref="T:System.Int64" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActorId (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.ActorId.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Value for actor id.</param>
        <summary>
            Initializes a new instance of ActorId class with Id value of type <see cref="T:System.String" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (Microsoft.ServiceFabric.Actors.ActorId other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(class Microsoft.ServiceFabric.Actors.ActorId other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.ActorId.CompareTo(Microsoft.ServiceFabric.Actors.ActorId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.ServiceFabric.Actors.ActorId" />
      </Parameters>
      <Docs>
        <param name="other">The actorId to compare with this instance. </param>
        <summary>
            Compares this instance with a specified <see cref="T:Microsoft.ServiceFabric.Actors.ActorId" /> object and indicates whether this
            instance precedes, follows, or appears in the same position in the sort order as the specified actorId. 
            </summary>
        <returns>A 32-bit signed integer that indicates whether this instance precedes, follows, or appears
             in the same position in the sort order as the other parameter.</returns>
        <remarks>The comparison is done based on the id if both the instances have same <see cref="T:Microsoft.ServiceFabric.Actors.ActorIdKind" />.
            If <see cref="T:Microsoft.ServiceFabric.Actors.ActorIdKind" /> is different, then comparison is done based on string representation of the actor id.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRandom">
      <MemberSignature Language="C#" Value="public static Microsoft.ServiceFabric.Actors.ActorId CreateRandom ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ServiceFabric.Actors.ActorId CreateRandom() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.ActorId.CreateRandom" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ServiceFabric.Actors.ActorId</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Create a new instance of the <see cref="T:Microsoft.ServiceFabric.Actors.ActorId" /> of kind <see cref="F:Microsoft.ServiceFabric.Actors.ActorIdKind.Long" /> 
            with a random <see cref="T:System.Int64" /> id value. 
            </summary>
        <returns>A new ActorId object.</returns>
        <remarks>This method is thread-safe and generates a new random <see cref="T:Microsoft.ServiceFabric.Actors.ActorId" /> every time it is called.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.ServiceFabric.Actors.ActorId other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class Microsoft.ServiceFabric.Actors.ActorId other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.ActorId.Equals(Microsoft.ServiceFabric.Actors.ActorId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.ServiceFabric.Actors.ActorId" />
      </Parameters>
      <Docs>
        <param name="other">The actorId to compare to this instance. </param>
        <summary>
            Determines whether this instance and another specified <see cref="T:Microsoft.ServiceFabric.Actors.ActorId" /> object have the same value.
            </summary>
        <returns>true if the <see cref="T:Microsoft.ServiceFabric.Actors.ActorIdKind" /> and id of the other parameter is the same as the
            <see cref="T:Microsoft.ServiceFabric.Actors.ActorIdKind" /> and id of this instance; otherwise, false. 
            If other is null, the method returns false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.ActorId.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The actorId to compare to this instance. </param>
        <summary>
            Determines whether this instance and a specified object, which must also be a <see cref="T:Microsoft.ServiceFabric.Actors.ActorId" /> object, 
            have the same value. Overrides <see cref="M:System.Object.Equals(System.Object)" />.
            </summary>
        <returns>true if obj is a <see cref="T:Microsoft.ServiceFabric.Actors.ActorId" /> and its value is the same as this instance; 
            otherwise, false. If obj is null, the method returns false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGuidId">
      <MemberSignature Language="C#" Value="public Guid GetGuidId ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Guid GetGuidId() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.ActorId.GetGuidId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets id for ActorId whose <see cref="T:Microsoft.ServiceFabric.Actors.ActorIdKind" /> is <see cref="F:Microsoft.ServiceFabric.Actors.ActorIdKind.Guid" />.
            </summary>
        <returns>
          <see cref="T:System.Guid" />The id value for ActorId.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:Microsoft.ServiceFabric.Actors.ActorId.Kind" /> is not <see cref="F:Microsoft.ServiceFabric.Actors.ActorIdKind.Guid" /></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.ActorId.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Overrides <see cref="M:System.Object.GetHashCode" />.
            </summary>
        <returns>Hash code for the current object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLongId">
      <MemberSignature Language="C#" Value="public long GetLongId ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 GetLongId() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.ActorId.GetLongId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets id for ActorId whose <see cref="T:Microsoft.ServiceFabric.Actors.ActorIdKind" /> is <see cref="F:Microsoft.ServiceFabric.Actors.ActorIdKind.Long" />.
            </summary>
        <returns>
          <see cref="T:System.Int64" />The id value for ActorId.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:Microsoft.ServiceFabric.Actors.ActorId.Kind" /> is not <see cref="F:Microsoft.ServiceFabric.Actors.ActorIdKind.Long" /></exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartitionKey">
      <MemberSignature Language="C#" Value="public long GetPartitionKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 GetPartitionKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.ActorId.GetPartitionKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the partition key for this ActorId.
            </summary>
        <returns>The key for locating the partition of the actor service that is responsible for this ActorId.</returns>
        <remarks>
          <list type="bullet">
            <item>The actor service is always partitioned using <see cref="F:System.Fabric.Description.PartitionScheme.UniformInt64Range" /> scheme. Therefore the partition key is of <see cref="T:System.Int64" /> type.</item>
            <item>The partition key is generated based on the <see cref="T:Microsoft.ServiceFabric.Actors.ActorIdKind" /> and the id value as follows:
                        <list type="bullet"><item><see cref="F:Microsoft.ServiceFabric.Actors.ActorIdKind.String" />: CRC64 hash of the UTF8 bytes of the string id.</item><item><see cref="F:Microsoft.ServiceFabric.Actors.ActorIdKind.Guid" />: CRC64 hash of the bytes of the guid id.</item><item><see cref="F:Microsoft.ServiceFabric.Actors.ActorIdKind.Long" />: Actual value of the long id.</item></list></item>
          </list>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStringId">
      <MemberSignature Language="C#" Value="public string GetStringId ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetStringId() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.ActorId.GetStringId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets id for ActorId whose <see cref="T:Microsoft.ServiceFabric.Actors.ActorIdKind" /> is <see cref="F:Microsoft.ServiceFabric.Actors.ActorIdKind.String" />.
            </summary>
        <returns>
          <see cref="T:System.String" />The id value for ActorId.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:Microsoft.ServiceFabric.Actors.ActorId.Kind" /> is not <see cref="F:Microsoft.ServiceFabric.Actors.ActorIdKind.Guid" /></exception>
      </Docs>
    </Member>
    <Member MemberName="Kind">
      <MemberSignature Language="C#" Value="public Microsoft.ServiceFabric.Actors.ActorIdKind Kind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ServiceFabric.Actors.ActorIdKind Kind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ServiceFabric.Actors.ActorId.Kind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ServiceFabric.Actors.ActorIdKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Microsoft.ServiceFabric.Actors.ActorIdKind" /> for the ActorId.
            </summary>
        <value>
          <see cref="T:Microsoft.ServiceFabric.Actors.ActorIdKind" /> for the ActorId.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool op_Equality (Microsoft.ServiceFabric.Actors.ActorId x, Microsoft.ServiceFabric.Actors.ActorId y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class Microsoft.ServiceFabric.Actors.ActorId x, class Microsoft.ServiceFabric.Actors.ActorId y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.ActorId.op_Equality(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.ActorId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="Microsoft.ServiceFabric.Actors.ActorId" />
        <Parameter Name="y" Type="Microsoft.ServiceFabric.Actors.ActorId" />
      </Parameters>
      <Docs>
        <param name="x">The first actorId to compare, or null. </param>
        <param name="y">The second actorId to compare, or null. </param>
        <summary>
            Determines whether two specified actorIds have the same id and <see cref="T:Microsoft.ServiceFabric.Actors.ActorIdKind" />.
            </summary>
        <returns>true if the id and <see cref="T:Microsoft.ServiceFabric.Actors.ActorIdKind" /> is same for both objects; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool op_Inequality (Microsoft.ServiceFabric.Actors.ActorId x, Microsoft.ServiceFabric.Actors.ActorId y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class Microsoft.ServiceFabric.Actors.ActorId x, class Microsoft.ServiceFabric.Actors.ActorId y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.ActorId.op_Inequality(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.ActorId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="Microsoft.ServiceFabric.Actors.ActorId" />
        <Parameter Name="y" Type="Microsoft.ServiceFabric.Actors.ActorId" />
      </Parameters>
      <Docs>
        <param name="x">The first actorId to compare, or null. </param>
        <param name="y">The second actorId to compare, or null. </param>
        <summary>
            Determines whether two specified actorIds have different values for id and <see cref="T:Microsoft.ServiceFabric.Actors.ActorIdKind" />.
            </summary>
        <returns>true if the id or <see cref="T:Microsoft.ServiceFabric.Actors.ActorIdKind" /> is different for both objects; otherwise, true.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.ActorId.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>255.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Overrides <see cref="M:System.Object.ToString" />.
            </summary>
        <returns>Returns a string that represents the current object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>