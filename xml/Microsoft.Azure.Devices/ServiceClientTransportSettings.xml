<Type Name="ServiceClientTransportSettings" FullName="Microsoft.Azure.Devices.ServiceClientTransportSettings">
  <TypeSignature Language="C#" Value="public sealed class ServiceClientTransportSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ServiceClientTransportSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Devices.ServiceClientTransportSettings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ServiceClientTransportSettings" />
  <TypeSignature Language="F#" Value="type ServiceClientTransportSettings = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
    <AssemblyVersion>1.31.0.0</AssemblyVersion>
    <AssemblyVersion>1.32.0.0</AssemblyVersion>
    <AssemblyVersion>1.33.0.0</AssemblyVersion>
    <AssemblyVersion>1.34.0.0</AssemblyVersion>
    <AssemblyVersion>1.35.0.0</AssemblyVersion>
    <AssemblyVersion>1.36.0.0</AssemblyVersion>
    <AssemblyVersion>1.37.0.0</AssemblyVersion>
    <AssemblyVersion>1.37.1.0</AssemblyVersion>
    <AssemblyVersion>1.38.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The transport settings configurable on a service client instance.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceClientTransportSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.ServiceClientTransportSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>1.31.0.0</AssemblyVersion>
        <AssemblyVersion>1.32.0.0</AssemblyVersion>
        <AssemblyVersion>1.33.0.0</AssemblyVersion>
        <AssemblyVersion>1.34.0.0</AssemblyVersion>
        <AssemblyVersion>1.35.0.0</AssemblyVersion>
        <AssemblyVersion>1.36.0.0</AssemblyVersion>
        <AssemblyVersion>1.37.0.0</AssemblyVersion>
        <AssemblyVersion>1.37.1.0</AssemblyVersion>
        <AssemblyVersion>1.38.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates an instance of <see cref="T:Microsoft.Azure.Devices.ServiceClientTransportSettings" /> with the default proxy settings.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AmqpProxy">
      <MemberSignature Language="C#" Value="public System.Net.IWebProxy AmqpProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy AmqpProxy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Devices.ServiceClientTransportSettings.AmqpProxy" />
      <MemberSignature Language="VB.NET" Value="Public Property AmqpProxy As IWebProxy" />
      <MemberSignature Language="F#" Value="member this.AmqpProxy : System.Net.IWebProxy with get, set" Usage="Microsoft.Azure.Devices.ServiceClientTransportSettings.AmqpProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>1.31.0.0</AssemblyVersion>
        <AssemblyVersion>1.32.0.0</AssemblyVersion>
        <AssemblyVersion>1.33.0.0</AssemblyVersion>
        <AssemblyVersion>1.34.0.0</AssemblyVersion>
        <AssemblyVersion>1.35.0.0</AssemblyVersion>
        <AssemblyVersion>1.36.0.0</AssemblyVersion>
        <AssemblyVersion>1.37.0.0</AssemblyVersion>
        <AssemblyVersion>1.37.1.0</AssemblyVersion>
        <AssemblyVersion>1.38.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The web proxy that will be used to connect to IoT hub when using the AMQP over web sockets.
            </summary>
        <value>
            An instance of a class that implements <see cref="T:System.Net.IWebProxy" />.
            </value>
        <remarks>
            This setting will be used when the client attempts to connect over web sockets. For example, if the client attempts to connect to IoT hub using <see cref="F:Microsoft.Azure.Devices.TransportType.Amqp" /> the client will first try over TCP. If that fails, the client will fall back to using web sockets and will use the proxy setting. This setting is to be used in conjunction with the <see cref="P:Microsoft.Azure.Devices.ServiceClientTransportSettings.HttpProxy" /> property.
            </remarks>
        <example>
            To set a proxy you must instantiate an instance of the <see cref="T:System.Net.WebProxy" /> class--or any class that derives from <see cref="T:System.Net.IWebProxy" />. The snippet below shows a method that returns a device using a proxy that connects to localhost on port 8888.
            <code>
            static ServiceClient GetServiceClient()
            {
                try
                {
                    var proxyHost = "localhost";
                    var proxyPort = 8888;
                    var proxy = new WebProxy(proxyHost, proxyPort);
                    var transportSettings = new ServiceClientTransportSettings
                    {
                        AmqpProxy = proxy,
                        HttpProxy = proxy
                    };
                    var serviceClient = ServiceClient.CreateFromConnectionString("a connection string", Microsoft.Azure.Devices.TransportType.Amqp_WebSocket_Only, transportSettings );
                    return serviceClient;
                }
                catch (Exception)
                {
                    Console.WriteLine("Error creating client.");
                    throw;
                }
            }
            </code></example>
      </Docs>
    </Member>
    <Member MemberName="ConnectionLeaseTimeoutMilliseconds">
      <MemberSignature Language="C#" Value="public int ConnectionLeaseTimeoutMilliseconds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionLeaseTimeoutMilliseconds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Devices.ServiceClientTransportSettings.ConnectionLeaseTimeoutMilliseconds" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionLeaseTimeoutMilliseconds As Integer" />
      <MemberSignature Language="F#" Value="member this.ConnectionLeaseTimeoutMilliseconds : int with get, set" Usage="Microsoft.Azure.Devices.ServiceClientTransportSettings.ConnectionLeaseTimeoutMilliseconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>1.32.0.0</AssemblyVersion>
        <AssemblyVersion>1.33.0.0</AssemblyVersion>
        <AssemblyVersion>1.34.0.0</AssemblyVersion>
        <AssemblyVersion>1.35.0.0</AssemblyVersion>
        <AssemblyVersion>1.36.0.0</AssemblyVersion>
        <AssemblyVersion>1.37.0.0</AssemblyVersion>
        <AssemblyVersion>1.37.1.0</AssemblyVersion>
        <AssemblyVersion>1.38.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            How long, in milliseconds, a given cached TCP connection created by this client's HTTP layer will live before being closed. 
            If this value is set to any negative value, the connection lease will be infinite. If this value is set to 0, then the TCP connection will close after
            each HTTP request and a new TCP connection will be opened upon the next request.
            </summary>
        <value>To be added.</value>
        <remarks>
            By closing cached TCP connections and opening a new one upon the next request, the underlying HTTP client has a chance to do a DNS lookup 
            to validate that it will send the requests to the correct IP address. While it is atypical for a given IoT Hub to change its IP address, it does
            happen when a given IoT Hub fails over into a different region. Because of that, users who expect to failover their IoT Hub at any point
            are advised to set this value to a value of 0 or greater. Larger values will make better use of caching to save network resources over time,
            but smaller values will make the client respond more quickly to failed over IoT Hubs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpProxy">
      <MemberSignature Language="C#" Value="public System.Net.IWebProxy HttpProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy HttpProxy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Devices.ServiceClientTransportSettings.HttpProxy" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpProxy As IWebProxy" />
      <MemberSignature Language="F#" Value="member this.HttpProxy : System.Net.IWebProxy with get, set" Usage="Microsoft.Azure.Devices.ServiceClientTransportSettings.HttpProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>1.31.0.0</AssemblyVersion>
        <AssemblyVersion>1.32.0.0</AssemblyVersion>
        <AssemblyVersion>1.33.0.0</AssemblyVersion>
        <AssemblyVersion>1.34.0.0</AssemblyVersion>
        <AssemblyVersion>1.35.0.0</AssemblyVersion>
        <AssemblyVersion>1.36.0.0</AssemblyVersion>
        <AssemblyVersion>1.37.0.0</AssemblyVersion>
        <AssemblyVersion>1.37.1.0</AssemblyVersion>
        <AssemblyVersion>1.38.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The web proxy that will be used to connect to IoT hub when operations must execute over HTTP.
            </summary>
        <value>
            An instance of a class that implements <see cref="T:System.Net.IWebProxy" />.
            </value>
        <remarks>
            Methods such as <see cref="M:Microsoft.Azure.Devices.ServiceClient.GetServiceStatisticsAsync(System.Threading.CancellationToken)" /> are executed over HTTP and not AMQP. This setting will ensure those methods are executed over the specified proxy. This setting is to be used in conjunction with the <see cref="P:Microsoft.Azure.Devices.ServiceClientTransportSettings.AmqpProxy" /> property.
            </remarks>
        <example>
            To set a proxy you must instantiate an instance of the <see cref="T:System.Net.WebProxy" /> class--or any class that derives from <see cref="T:System.Net.IWebProxy" />. The snippet below shows a method that returns a device using a proxy that connects to localhost on port 8888.
            <code>
            static ServiceClient GetServiceClient()
            {
                try
                {
                    var proxyHost = "localhost";
                    var proxyPort = 8888;
                    var proxy = new WebProxy(proxyHost, proxyPort);
                    var transportSettings = new ServiceClientTransportSettings
                    {
                        AmqpProxy = proxy,
                        HttpProxy = proxy
                    };
                    // Specify the WebProxy to be used for the web socket connection
                    var serviceClient = ServiceClient.CreateFromConnectionString("a connection string", Microsoft.Azure.Devices.TransportType.Amqp_WebSocket_Only, transportSettings );
                    return serviceClient;
                }
                catch (Exception)
                {
                    Console.WriteLine("Error creating client.");
                    throw;
                }
            }
            </code></example>
      </Docs>
    </Member>
  </Members>
</Type>
