<Type Name="BlobRequestOptions" FullName="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions">
  <TypeSignature Language="C#" Value="public sealed class BlobRequestOptions : Microsoft.WindowsAzure.Storage.IRequestOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BlobRequestOptions extends System.Object implements class Microsoft.WindowsAzure.Storage.IRequestOptions" />
  <TypeSignature Language="DocId" Value="T:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BlobRequestOptions&#xA;Implements IRequestOptions" />
  <TypeSignature Language="F#" Value="type BlobRequestOptions = class&#xA;    interface IRequestOptions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.WindowsAzure.Storage</AssemblyName>
    <AssemblyVersion>9.3.0.0</AssemblyVersion>
    <AssemblyVersion>9.3.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.WindowsAzure.Storage.IRequestOptions</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Represents a set of timeout and retry policy options that may be specified for a request against the Blob service.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlobRequestOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Storage</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
        <AssemblyVersion>9.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbsorbConditionalErrorsOnRetry">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; AbsorbConditionalErrorsOnRetry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; AbsorbConditionalErrorsOnRetry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry" />
      <MemberSignature Language="VB.NET" Value="Public Property AbsorbConditionalErrorsOnRetry As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.AbsorbConditionalErrorsOnRetry : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.AbsorbConditionalErrorsOnRetry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Storage</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
        <AssemblyVersion>9.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets a value that indicates whether a conditional failure should be absorbed on a retry attempt
             for the request. 
             </summary>
        <value>To be added.</value>
        <remarks>
             This option is used only by the <see cref="T:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob" /> object in the <b>UploadFrom*</b> methods, 
             the <b>AppendFrom*</b> methods, and the <b>BlobWriteStream</b> class. By default, it is set to <c>false</c>. 
             Set this option to <c>true</c> only for single-writer scenarios. 
             Setting this option to <c>true</c> in a multi-writer scenario may lead to corrupted blob data.
             
             When calling "UploadFrom*" on an append blob, the Storage Client breaks the input data
             up into a number of data blocks, and uploads each data block with an "append block" operation.
             Normally, an "IfAppendPositionEqual" access condition is added to the append block operation, so that the
             upload operation will fail if some other process somewhere has appended data in the middle of this data stream.
             However, this can result in a false failure in a very specific case. If an append operation fails with a timeout,
             there is a chance that the operation succeeded on the service, but the "success" response did not make it back to the client.
             In this case, the client will retry, and then get an "append position not met" failure.
             
             Setting this value to <c>true</c> results in the upload operation continuing when it sees an "append position not met"
             failure on retry - accounting for the above possibility. However, this loses protection in the multi-writer
             scenario - if multiple threads are uploading to the blob at once, and this value is set to <c>true</c>, some data
             may be lost, because the client thinks the data was uploaded, when in fact it was the other process' data.
             
            ## Examples
            [!code-csharp[Absorb_Conditional_Errors_On_Retry_Sample](~/azure-storage-net/Test/ClassLibraryCommon/Blob/CloudAppendBlobTest.cs#sample_BlobRequestOptions_AbsorbConditionalErrorsOnRetry "Absorb Conditional Errors On Retry Sample")]  
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableContentMD5Validation">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; DisableContentMD5Validation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; DisableContentMD5Validation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.DisableContentMD5Validation" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableContentMD5Validation As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.DisableContentMD5Validation : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.DisableContentMD5Validation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Storage</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
        <AssemblyVersion>9.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets a value to indicate that MD5 validation will be disabled when downloading blobs.
             </summary>
        <value>Use <c>true</c> to disable MD5 validation; <c>false</c> to enable MD5 validation. Default is <c>false</c>.</value>
        <remarks>
             When downloading a blob, if the value already exists on the blob, the Storage service 
             will include the MD5 hash of the entire blob as a header. This option controls 
             whether or not the Storage Client will validate that MD5 hash on download.
             See <see cref="P:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.StoreBlobContentMD5" /> for more details.
             
            ## Examples
            [!code-csharp[Disable_Content_MD5_Validation_Sample](~/azure-storage-net/Test/ClassLibraryCommon/Blob/MD5FlagsTest.cs#sample_BlobRequestOptions_DisableContentMD5Validation "Disable Content MD5 Validation Sample")]        
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionPolicy">
      <MemberSignature Language="C#" Value="public Microsoft.WindowsAzure.Storage.Blob.BlobEncryptionPolicy EncryptionPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.WindowsAzure.Storage.Blob.BlobEncryptionPolicy EncryptionPolicy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.EncryptionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionPolicy As BlobEncryptionPolicy" />
      <MemberSignature Language="F#" Value="member this.EncryptionPolicy : Microsoft.WindowsAzure.Storage.Blob.BlobEncryptionPolicy with get, set" Usage="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.EncryptionPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Storage</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
        <AssemblyVersion>9.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.WindowsAzure.Storage.Blob.BlobEncryptionPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the encryption policy for the request.
            </summary>
        <value>An object of type <see cref="P:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.EncryptionPolicy" />.</value>
        <remarks>
            ## Examples
            [!code-csharp[Encryption_Policy_Sample](~/azure-storage-net/Test/ClassLibraryCommon/Blob/BlobClientEncryptionTests.cs#sample_RequestOptions_EncryptionPolicy "Encryption Policy Sample")]        
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationMode">
      <MemberSignature Language="C#" Value="public Nullable&lt;Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode&gt; LocationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode&gt; LocationMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.LocationMode" />
      <MemberSignature Language="VB.NET" Value="Public Property LocationMode As Nullable(Of LocationMode)" />
      <MemberSignature Language="F#" Value="member this.LocationMode : Nullable&lt;Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode&gt; with get, set" Usage="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.LocationMode" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.WindowsAzure.Storage.IRequestOptions.LocationMode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Storage</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
        <AssemblyVersion>9.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the location mode of the request.
             </summary>
        <value>A <see cref="T:Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode" /> enumeration value indicating the location mode of the request.</value>
        <remarks>The LocationMode specifies in which locations the Storage Client 
             will attempt to make the request. This is only valid for RA-GRS accounts - accounts 
             where data can be read from either the primary or the secondary endpoint.
              ## Examples
              [!code-csharp[LocationMode_Sample](~/azure-storage-net/Test/ClassLibraryCommon/Blob/BlobUploadDownloadTest.cs#sample_RequestOptions_LocationMode "LocationMode Sample")]        
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumExecutionTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; MaximumExecutionTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; MaximumExecutionTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.MaximumExecutionTime" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumExecutionTime As Nullable(Of TimeSpan)" />
      <MemberSignature Language="F#" Value="member this.MaximumExecutionTime : Nullable&lt;TimeSpan&gt; with get, set" Usage="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.MaximumExecutionTime" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.WindowsAzure.Storage.IRequestOptions.MaximumExecutionTime</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Storage</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
        <AssemblyVersion>9.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the maximum execution time across all potential retries for the request. 
            </summary>
        <value>A <see cref="T:System.TimeSpan" /> representing the maximum execution time for retries for the request.</value>
        <remarks>
            The maximum execution time is the time allotted for a single API call.
            If the total amount of time spent in the API - across all REST requests, 
            retries, etc - exceeds this value, the client will timeout. This value 
            is only tracked on the client, it is not sent to the service.
             ## Examples
             [!code-csharp[Maximum_Execution_Time_Sample](~/azure-storage-net/Test/ClassLibraryCommon/Blob/BlobUploadDownloadTest.cs#sample_RequestOptions_ServerTimeout_MaximumExecutionTime "Maximum Execution Time Sample")]        
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelOperationThreadCount">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; ParallelOperationThreadCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ParallelOperationThreadCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.ParallelOperationThreadCount" />
      <MemberSignature Language="VB.NET" Value="Public Property ParallelOperationThreadCount As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.ParallelOperationThreadCount : Nullable&lt;int&gt; with get, set" Usage="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.ParallelOperationThreadCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Storage</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
        <AssemblyVersion>9.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the number of blocks that may be simultaneously uploaded.
             </summary>
        <value>An integer value indicating the number of parallel blob upload operations that may proceed.</value>
        <remarks>
             When using the UploadFrom* methods on a blob, the blob will be broken up into blocks. Setting this 
             value limits the number of outstanding I/O "put block" requests that the library will have in-flight 
             at a given time. Default is 1 (no parallelism). Setting this value higher may result in 
             faster blob uploads, depending on the network between the client and the Azure Storage service.
             If blobs are small (less than 256 MB), keeping this value equal to 1 is advised.
              ## Examples
              [!code-csharp[Parallel_Operation_ThreadCount_Sample](~/azure-storage-net/Test/ClassLibraryCommon/Blob/BlobUploadDownloadTest.cs#sample_BlobRequestOptions_ParallelOperationThreadCount "Parallel Operation ThreadCount Sample")]        
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireEncryption">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; RequireEncryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; RequireEncryption" />
      <MemberSignature Language="DocId" Value="P:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.RequireEncryption" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireEncryption As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.RequireEncryption : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.RequireEncryption" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.WindowsAzure.Storage.IRequestOptions.RequireEncryption</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Storage</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
        <AssemblyVersion>9.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value to indicate whether data written and read by the client library should be encrypted.
            </summary>
        <value>Use <c>true</c> to specify that data should be encrypted/decrypted for all transactions; otherwise, <c>false</c>.</value>
        <remarks>
            RequireEncryption here refers to Client-Side Encryption.
            If this value is set to <c>true</c>, all calls will fail if the data
            is not encrypted/decrypted with an encryption policy. If this value 
            is false (the default), any data being downloaded that is not encrypted
            will be returned as-is.
            
             ## Examples
             [!code-csharp[Require_Encryption_Sample](~/azure-storage-net/Test/ClassLibraryCommon/Blob/BlobUploadDownloadTest.cs#sample_RequestOptions_RequireEncryption "Require Encryption Sample")]        
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetryPolicy">
      <MemberSignature Language="C#" Value="public Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy RetryPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy RetryPolicy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.RetryPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryPolicy As IRetryPolicy" />
      <MemberSignature Language="F#" Value="member this.RetryPolicy : Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy with get, set" Usage="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.RetryPolicy" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.WindowsAzure.Storage.IRequestOptions.RetryPolicy</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Storage</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
        <AssemblyVersion>9.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets the retry policy for the request.
             </summary>
        <value>An object of type <see cref="T:Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy" />.</value>
        <remarks> Retry policies instruct the Storage Client to retry failed requests.
             By default, only some failures are retried. For example, connection failures and 
             throttling failures can be retried. Resource not found (404) or authentication 
             failures are not retried, because these are not likely to succeed on retry.
             If not set, the Storage Client uses an exponential backoff retry policy, where the wait time gets
             exponentially longer between requests, up to a total of around 30 seconds.
             The default retry policy is recommended for most scenarios.
             
            ## Examples
              [!code-csharp[Retry_Policy_Sample](~/azure-storage-net/Test/ClassLibraryCommon/Blob/BlobUploadDownloadTest.cs#sample_RequestOptions_RetryPolicy "Retry Policy Sample")]         
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerTimeout">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; ServerTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; ServerTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.ServerTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerTimeout As Nullable(Of TimeSpan)" />
      <MemberSignature Language="F#" Value="member this.ServerTimeout : Nullable&lt;TimeSpan&gt; with get, set" Usage="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.ServerTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.WindowsAzure.Storage.IRequestOptions.ServerTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Storage</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
        <AssemblyVersion>9.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the server timeout interval for a single HTTP request.
            </summary>
        <value>A <see cref="T:System.TimeSpan" /> containing the server timeout interval for each HTTP request.</value>
        <remarks>
            The server timeout is the timeout sent to the Azure Storage service 
            for each REST request made. If the API called makes multiple REST calls 
            (UploadFromStream, for example, or if the request retries), this timeout 
            will be applied separately to each request. This value is not 
            tracked or validated on the client, it is only passed to the Storage service.
            
             ## Examples
             [!code-csharp[Server_Timeout_Sample](~/azure-storage-net/Test/ClassLibraryCommon/Blob/BlobUploadDownloadTest.cs#sample_RequestOptions_ServerTimeout_MaximumExecutionTime "Server Timeout Sample")]         
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleBlobUploadThresholdInBytes">
      <MemberSignature Language="C#" Value="public Nullable&lt;long&gt; SingleBlobUploadThresholdInBytes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; SingleBlobUploadThresholdInBytes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.SingleBlobUploadThresholdInBytes" />
      <MemberSignature Language="VB.NET" Value="Public Property SingleBlobUploadThresholdInBytes As Nullable(Of Long)" />
      <MemberSignature Language="F#" Value="member this.SingleBlobUploadThresholdInBytes : Nullable&lt;int64&gt; with get, set" Usage="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.SingleBlobUploadThresholdInBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Storage</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
        <AssemblyVersion>9.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the maximum size of a blob in bytes that may be uploaded as a single blob. 
            </summary>
        <value>A long indicating the maximum size of a blob, in bytes, that may be uploaded as a single blob,
            ranging from between 1 and 256 MB inclusive.</value>
        <remarks>This value will be ignored if the ParallelOperationThreadCount is set to a value greater than 1</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreBlobContentMD5">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; StoreBlobContentMD5 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; StoreBlobContentMD5" />
      <MemberSignature Language="DocId" Value="P:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.StoreBlobContentMD5" />
      <MemberSignature Language="VB.NET" Value="Public Property StoreBlobContentMD5 As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.StoreBlobContentMD5 : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.StoreBlobContentMD5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Storage</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
        <AssemblyVersion>9.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value to indicate that an MD5 hash will be calculated and stored when uploading a blob.
            </summary>
        <value>Use <c>true</c> to calculate and store an MD5 hash when uploading a blob; otherwise, <c>false</c>. Defaults to <c>false</c>.</value>
        <remarks>This property is not supported for the <see cref="T:Microsoft.WindowsAzure.Storage.Blob.CloudAppendBlob" /> Append* APIs.
            The StoreBlobContentMD5 request option instructs the Storage Client to calculate the MD5 hash 
            of the blob content during an upload operation. This value is then stored on the 
            blob object as the Content-MD5 header. This option applies only to upload operations. 
            This is useful for validating the integrity of the blob upon later download, and 
            compatible with the Content-MD5 header as defined in the HTTP spec. If using 
            the Storage Client for later download, if the Content-MD5 header is present, 
            the MD5 hash of the content will be validated, unless "DisableContentMD5Validation" is set.
            Note that this value is not validated on the Azure Storage service on either upload or download of data; 
            it is merely stored and returned.
             ## Examples
             [!code-csharp[Store_Blob_Content_MD5_Sample](~/azure-storage-net/Test/ClassLibraryCommon/Blob/MD5FlagsTest.cs#sample_BlobRequestOptions_StoreBlobContentMD5 "Store Blob Content MD5 Sample")] 
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseTransactionalMD5">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; UseTransactionalMD5 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; UseTransactionalMD5" />
      <MemberSignature Language="DocId" Value="P:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.UseTransactionalMD5" />
      <MemberSignature Language="VB.NET" Value="Public Property UseTransactionalMD5 As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.UseTransactionalMD5 : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions.UseTransactionalMD5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Storage</AssemblyName>
        <AssemblyVersion>9.3.0.0</AssemblyVersion>
        <AssemblyVersion>9.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value to calculate and send/validate content MD5 for transactions.
            </summary>
        <value>Use <c>true</c> to calculate and send/validate content MD5 for transactions; otherwise, <c>false</c>. Default is <c>false</c>.</value>
        <remarks>
            The UseTransactionalMD5 option instructs the Storage Client to calculate and validate 
            the MD5 hash of individual Storage REST operations. For a given REST operation, 
            if this value is set, both the Storage Client and the Storage service will calculate
            the MD5 hash of the transferred data, and will fail if the values do not match.
            This value is not persisted on the service or the client.
            This option applies to both upload and download operations.
            Note that HTTPS does a similar check during transit. If you are using HTTPS, 
            we recommend this feature be off.
             ## Examples
             [!code-csharp[Use_Transactional_MD5_Sample](~/azure-storage-net/Test/ClassLibraryCommon/Blob/MD5FlagsTest.cs#sample_BlobRequestOptions_UseTransactionalMD5 "Use Transactional MD5 Sample")] 
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>