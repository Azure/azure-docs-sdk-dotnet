<Type Name="IDnsRecordSets&lt;RecordSetT&gt;" FullName="Microsoft.Azure.Management.Dns.Fluent.IDnsRecordSets&lt;RecordSetT&gt;">
  <TypeSignature Language="C#" Value="public interface IDnsRecordSets&lt;RecordSetT&gt; : Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByName&lt;RecordSetT&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListing&lt;RecordSetT&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasParent&lt;Microsoft.Azure.Management.Dns.Fluent.IDnsZone&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDnsRecordSets`1&lt;RecordSetT&gt; implements class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByName`1&lt;!RecordSetT&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListing`1&lt;!RecordSetT&gt;, class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasParent`1&lt;class Microsoft.Azure.Management.Dns.Fluent.IDnsZone&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Dns.Fluent.IDnsRecordSets`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDnsRecordSets(Of RecordSetT)&#xA;Implements IHasParent(Of IDnsZone), ISupportsGettingByName(Of RecordSetT), ISupportsListing(Of RecordSetT)" />
  <TypeSignature Language="F#" Value="type IDnsRecordSets&lt;'RecordSetT&gt; = interface&#xA;    interface ISupportsListing&lt;'RecordSetT&gt;&#xA;    interface ISupportsGettingByName&lt;'RecordSetT&gt;&#xA;    interface IHasParent&lt;IDnsZone&gt;" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename RecordSetT&gt;&#xA;public interface class IDnsRecordSets : Microsoft::Azure::Management::ResourceManager::Fluent::Core::CollectionActions::ISupportsGettingByName&lt;RecordSetT&gt;, Microsoft::Azure::Management::ResourceManager::Fluent::Core::CollectionActions::ISupportsListing&lt;RecordSetT&gt;, Microsoft::Azure::Management::ResourceManager::Fluent::Core::IHasParent&lt;Microsoft::Azure::Management::Dns::Fluent::IDnsZone ^&gt;" />
  <TypeSignature Language="C++ CX" Value="public interface class IDnsRecordSets : Microsoft::Azure::Management::ResourceManager::Fluent::Core::CollectionActions::ISupportsGettingByName&lt;RecordSetT&gt;, Microsoft::Azure::Management::ResourceManager::Fluent::Core::CollectionActions::ISupportsListing&lt;RecordSetT&gt;, Microsoft::Azure::Management::ResourceManager::Fluent::Core::IHasParent&lt;Microsoft::Azure::Management::Dns::Fluent::IDnsZone ^&gt;" />
  <TypeSignature Language="C++ WINRT" Value="template &lt;typename RecordSetT&gt;&#xA;__interface IDnsRecordSets : Microsoft::Azure::Management::ResourceManager::Fluent::Core::CollectionActions::ISupportsGettingByName&lt;RecordSetT&gt;, Microsoft::Azure::Management::ResourceManager::Fluent::Core::CollectionActions::ISupportsListing&lt;RecordSetT&gt;, Microsoft::Azure::Management::ResourceManager::Fluent::Core::IHasParent&lt;Microsoft::Azure::Management::Dns::Fluent::IDnsZone&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Dns.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="RecordSetT" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsGettingByName&lt;RecordSetT&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.CollectionActions.ISupportsListing&lt;RecordSetT&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasParent&lt;Microsoft.Azure.Management.Dns.Fluent.IDnsZone&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="RecordSetT">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;RecordSetT&gt; List (int pageSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;!RecordSetT&gt; List(int32 pageSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Dns.Fluent.IDnsRecordSets`1.List(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function List (pageSize As Integer) As IEnumerable(Of RecordSetT)" />
      <MemberSignature Language="F#" Value="abstract member List : int -&gt; seq&lt;'RecordSetT&gt;" Usage="iDnsRecordSets.List pageSize" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;RecordSetT&gt; ^ List(int pageSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Dns.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;RecordSetT&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pageSize">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;RecordSetT&gt; List (string recordSetNameSuffix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;!RecordSetT&gt; List(string recordSetNameSuffix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Dns.Fluent.IDnsRecordSets`1.List(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function List (recordSetNameSuffix As String) As IEnumerable(Of RecordSetT)" />
      <MemberSignature Language="F#" Value="abstract member List : string -&gt; seq&lt;'RecordSetT&gt;" Usage="iDnsRecordSets.List recordSetNameSuffix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;RecordSetT&gt; ^ List(System::String ^ recordSetNameSuffix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Dns.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;RecordSetT&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordSetNameSuffix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="recordSetNameSuffix">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;RecordSetT&gt; List (string recordSetNameSuffix, int pageSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;!RecordSetT&gt; List(string recordSetNameSuffix, int32 pageSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Dns.Fluent.IDnsRecordSets`1.List(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function List (recordSetNameSuffix As String, pageSize As Integer) As IEnumerable(Of RecordSetT)" />
      <MemberSignature Language="F#" Value="abstract member List : string * int -&gt; seq&lt;'RecordSetT&gt;" Usage="iDnsRecordSets.List (recordSetNameSuffix, pageSize)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;RecordSetT&gt; ^ List(System::String ^ recordSetNameSuffix, int pageSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Dns.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;RecordSetT&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordSetNameSuffix" Type="System.String" />
        <Parameter Name="pageSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="recordSetNameSuffix">To be added.</param>
        <param name="pageSize">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;RecordSetT&gt;&gt; ListAsync (int pageSize, bool loadAllPages = true, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection`1&lt;!RecordSetT&gt;&gt; ListAsync(int32 pageSize, bool loadAllPages, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Dns.Fluent.IDnsRecordSets`1.ListAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ListAsync : int * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;'RecordSetT&gt;&gt;" Usage="iDnsRecordSets.ListAsync (pageSize, loadAllPages, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Dns.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;RecordSetT&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="loadAllPages" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pageSize">To be added.</param>
        <param name="loadAllPages">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;RecordSetT&gt;&gt; ListAsync (string recordSetNameSuffix, bool loadAllPages = true, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection`1&lt;!RecordSetT&gt;&gt; ListAsync(string recordSetNameSuffix, bool loadAllPages, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Dns.Fluent.IDnsRecordSets`1.ListAsync(System.String,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ListAsync : string * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;'RecordSetT&gt;&gt;" Usage="iDnsRecordSets.ListAsync (recordSetNameSuffix, loadAllPages, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Dns.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;RecordSetT&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordSetNameSuffix" Type="System.String" />
        <Parameter Name="loadAllPages" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recordSetNameSuffix">To be added.</param>
        <param name="loadAllPages">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;RecordSetT&gt;&gt; ListAsync (string recordSetNameSuffix, int pageSize, bool loadAllPages = true, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection`1&lt;!RecordSetT&gt;&gt; ListAsync(string recordSetNameSuffix, int32 pageSize, bool loadAllPages, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Dns.Fluent.IDnsRecordSets`1.ListAsync(System.String,System.Int32,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ListAsync : string * int * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;'RecordSetT&gt;&gt;" Usage="iDnsRecordSets.ListAsync (recordSetNameSuffix, pageSize, loadAllPages, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Dns.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;RecordSetT&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordSetNameSuffix" Type="System.String" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="loadAllPages" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recordSetNameSuffix">To be added.</param>
        <param name="pageSize">To be added.</param>
        <param name="loadAllPages">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>