<Type Name="IWithFrontend&lt;ReturnT&gt;" FullName="Microsoft.Azure.Management.Network.Fluent.HasFrontend.Definition.IWithFrontend&lt;ReturnT&gt;">
  <TypeSignature Language="C#" Value="public interface IWithFrontend&lt;ReturnT&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWithFrontend`1&lt;ReturnT&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Network.Fluent.HasFrontend.Definition.IWithFrontend`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWithFrontend(Of ReturnT)" />
  <TypeSignature Language="F#" Value="type IWithFrontend&lt;'ReturnT&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="ReturnT" />
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="ReturnT">The next stage of the definition.</typeparam>
    <summary>
            The stage of a definition allowing to specify a load balancer frontend.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="FromExistingPublicIPAddress">
      <MemberSignature Language="C#" Value="public ReturnT FromExistingPublicIPAddress (Microsoft.Azure.Management.Network.Fluent.IPublicIPAddress publicIPAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !ReturnT FromExistingPublicIPAddress(class Microsoft.Azure.Management.Network.Fluent.IPublicIPAddress publicIPAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.Fluent.HasFrontend.Definition.IWithFrontend`1.FromExistingPublicIPAddress(Microsoft.Azure.Management.Network.Fluent.IPublicIPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromExistingPublicIPAddress (publicIPAddress As IPublicIPAddress) As ReturnT" />
      <MemberSignature Language="F#" Value="abstract member FromExistingPublicIPAddress : Microsoft.Azure.Management.Network.Fluent.IPublicIPAddress -&gt; 'ReturnT" Usage="iWithFrontend.FromExistingPublicIPAddress publicIPAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ReturnT</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicIPAddress" Type="Microsoft.Azure.Management.Network.Fluent.IPublicIPAddress" />
      </Parameters>
      <Docs>
        <param name="publicIPAddress">An existing public IP address.</param>
        <summary>
            Specifies an existing public IP address to receive network traffic from.
            If this load balancer already has a frontend referencing this public IP address, that is the frontend that will be used.
            Else, an automatically named new public frontend will be created implicitly on the load balancer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the definition.</return>
      </Docs>
    </Member>
    <Member MemberName="FromExistingPublicIPAddress">
      <MemberSignature Language="C#" Value="public ReturnT FromExistingPublicIPAddress (string resourceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !ReturnT FromExistingPublicIPAddress(string resourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.Fluent.HasFrontend.Definition.IWithFrontend`1.FromExistingPublicIPAddress(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromExistingPublicIPAddress (resourceId As String) As ReturnT" />
      <MemberSignature Language="F#" Value="abstract member FromExistingPublicIPAddress : string -&gt; 'ReturnT" Usage="iWithFrontend.FromExistingPublicIPAddress resourceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ReturnT</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceId">The resource ID of an existing public IP address.</param>
        <summary>
            Specifies an existing public IP address to receive network traffic from.
            If this load balancer already has a frontend referencing this public IP address, that is the frontend that will be used.
            Else, an automatically named new public frontend will be created implicitly on the load balancer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the definition.</return>
      </Docs>
    </Member>
    <Member MemberName="FromExistingSubnet">
      <MemberSignature Language="C#" Value="public ReturnT FromExistingSubnet (Microsoft.Azure.Management.Network.Fluent.ISubnet subnet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !ReturnT FromExistingSubnet(class Microsoft.Azure.Management.Network.Fluent.ISubnet subnet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.Fluent.HasFrontend.Definition.IWithFrontend`1.FromExistingSubnet(Microsoft.Azure.Management.Network.Fluent.ISubnet)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromExistingSubnet (subnet As ISubnet) As ReturnT" />
      <MemberSignature Language="F#" Value="abstract member FromExistingSubnet : Microsoft.Azure.Management.Network.Fluent.ISubnet -&gt; 'ReturnT" Usage="iWithFrontend.FromExistingSubnet subnet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ReturnT</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subnet" Type="Microsoft.Azure.Management.Network.Fluent.ISubnet" />
      </Parameters>
      <Docs>
        <param name="subnet">An existing subnet.</param>
        <summary>
            Specifies an existing private subnet to receive network traffic from.
            If this load balancer already has a frontend referencing this subnet, that is the frontend that will be used.
            Else, an automatically named new private frontend will be created implicitly on the load balancer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the definition.</return>
      </Docs>
    </Member>
    <Member MemberName="FromExistingSubnet">
      <MemberSignature Language="C#" Value="public ReturnT FromExistingSubnet (Microsoft.Azure.Management.Network.Fluent.INetwork network, string subnetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !ReturnT FromExistingSubnet(class Microsoft.Azure.Management.Network.Fluent.INetwork network, string subnetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.Fluent.HasFrontend.Definition.IWithFrontend`1.FromExistingSubnet(Microsoft.Azure.Management.Network.Fluent.INetwork,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromExistingSubnet (network As INetwork, subnetName As String) As ReturnT" />
      <MemberSignature Language="F#" Value="abstract member FromExistingSubnet : Microsoft.Azure.Management.Network.Fluent.INetwork * string -&gt; 'ReturnT" Usage="iWithFrontend.FromExistingSubnet (network, subnetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ReturnT</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="network" Type="Microsoft.Azure.Management.Network.Fluent.INetwork" />
        <Parameter Name="subnetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="network">An existing network.</param>
        <param name="subnetName">The name of an existing subnet within the specified network.</param>
        <summary>
            Specifies an existing private subnet to receive network traffic from.
            If this load balancer already has a frontend referencing this subnet, that is the frontend that will be used.
            Else, an automatically named new private frontend will be created implicitly on the load balancer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the definition.</return>
      </Docs>
    </Member>
    <Member MemberName="FromExistingSubnet">
      <MemberSignature Language="C#" Value="public ReturnT FromExistingSubnet (string networkResourceId, string subnetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !ReturnT FromExistingSubnet(string networkResourceId, string subnetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.Fluent.HasFrontend.Definition.IWithFrontend`1.FromExistingSubnet(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromExistingSubnet (networkResourceId As String, subnetName As String) As ReturnT" />
      <MemberSignature Language="F#" Value="abstract member FromExistingSubnet : string * string -&gt; 'ReturnT" Usage="iWithFrontend.FromExistingSubnet (networkResourceId, subnetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ReturnT</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="networkResourceId" Type="System.String" />
        <Parameter Name="subnetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="networkResourceId">The resource ID of an existing network.</param>
        <param name="subnetName">The name of an existing subnet within the specified network.</param>
        <summary>
            Specifies an existing private subnet to receive network traffic from.
            If this load balancer already has a frontend referencing this subnet, that is the frontend that will be used.
            Else, an automatically named new private frontend will be created implicitly on the load balancer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the definition.</return>
      </Docs>
    </Member>
    <Member MemberName="FromFrontend">
      <MemberSignature Language="C#" Value="public ReturnT FromFrontend (string frontendName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !ReturnT FromFrontend(string frontendName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.Fluent.HasFrontend.Definition.IWithFrontend`1.FromFrontend(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromFrontend (frontendName As String) As ReturnT" />
      <MemberSignature Language="F#" Value="abstract member FromFrontend : string -&gt; 'ReturnT" Usage="iWithFrontend.FromFrontend frontendName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ReturnT</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frontendName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="frontendName">An existing frontend name on this load balancer.</param>
        <summary>
            Specifies the frontend to receive network traffic from.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the definition.</return>
      </Docs>
    </Member>
    <Member MemberName="FromNewPublicIPAddress">
      <MemberSignature Language="C#" Value="public ReturnT FromNewPublicIPAddress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !ReturnT FromNewPublicIPAddress() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.Fluent.HasFrontend.Definition.IWithFrontend`1.FromNewPublicIPAddress" />
      <MemberSignature Language="VB.NET" Value="Public Function FromNewPublicIPAddress () As ReturnT" />
      <MemberSignature Language="F#" Value="abstract member FromNewPublicIPAddress : unit -&gt; 'ReturnT" Usage="iWithFrontend.FromNewPublicIPAddress " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ReturnT</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Specifies that network traffic should be received on a new public IP address that is to be automatically created woth default settings
            along with the load balancer.
            A new automatically-named public frontend will be implicitly created on this load balancer for each such new public IP address.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the definition.</return>
      </Docs>
    </Member>
    <Member MemberName="FromNewPublicIPAddress">
      <MemberSignature Language="C#" Value="public ReturnT FromNewPublicIPAddress (Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable&lt;Microsoft.Azure.Management.Network.Fluent.IPublicIPAddress&gt; pipDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !ReturnT FromNewPublicIPAddress(class Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable`1&lt;class Microsoft.Azure.Management.Network.Fluent.IPublicIPAddress&gt; pipDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.Fluent.HasFrontend.Definition.IWithFrontend`1.FromNewPublicIPAddress(Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable{Microsoft.Azure.Management.Network.Fluent.IPublicIPAddress})" />
      <MemberSignature Language="VB.NET" Value="Public Function FromNewPublicIPAddress (pipDefinition As ICreatable(Of IPublicIPAddress)) As ReturnT" />
      <MemberSignature Language="F#" Value="abstract member FromNewPublicIPAddress : Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable&lt;Microsoft.Azure.Management.Network.Fluent.IPublicIPAddress&gt; -&gt; 'ReturnT" Usage="iWithFrontend.FromNewPublicIPAddress pipDefinition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ReturnT</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pipDefinition" Type="Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable&lt;Microsoft.Azure.Management.Network.Fluent.IPublicIPAddress&gt;" />
      </Parameters>
      <Docs>
        <param name="pipDefinition">A definition for the new public IP.</param>
        <summary>
            Specifies that network traffic should be received on a new public IP address that is to be created along with the load balancer
            based on the provided definition.
            A new automatically-named public frontend will be implicitly created on this load balancer for each such new public IP address.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the definition.</return>
      </Docs>
    </Member>
    <Member MemberName="FromNewPublicIPAddress">
      <MemberSignature Language="C#" Value="public ReturnT FromNewPublicIPAddress (string leafDnsLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !ReturnT FromNewPublicIPAddress(string leafDnsLabel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.Fluent.HasFrontend.Definition.IWithFrontend`1.FromNewPublicIPAddress(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromNewPublicIPAddress (leafDnsLabel As String) As ReturnT" />
      <MemberSignature Language="F#" Value="abstract member FromNewPublicIPAddress : string -&gt; 'ReturnT" Usage="iWithFrontend.FromNewPublicIPAddress leafDnsLabel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ReturnT</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leafDnsLabel" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="leafDnsLabel">A unique leaf DNS label to create the public IP address under.</param>
        <summary>
            Specifies that network traffic should be received on a new public IP address that is to be created along with the load balancer
            in the same region and resource group but under the provided leaf DNS label, assuming it is available.
            A new automatically-named public frontend will be implicitly created on this load balancer for each such new public IP address, so make
            sure to use a unique DNS label.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the definition.</return>
      </Docs>
    </Member>
  </Members>
</Type>