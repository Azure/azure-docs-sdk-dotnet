<Type Name="SchemaRegistryAvroSerializer" FullName="Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer">
  <TypeSignature Language="C#" Value="public class SchemaRegistryAvroSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SchemaRegistryAvroSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class SchemaRegistryAvroSerializer" />
  <TypeSignature Language="F#" Value="type SchemaRegistryAvroSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Data.SchemaRegistry.ApacheAvro</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A <see cref="T:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer" /> uses the <see cref="T:Azure.Data.SchemaRegistry.SchemaRegistryClient" /> to
            serialize and deserialize Avro payloads.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SchemaRegistryAvroSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Data.SchemaRegistry.ApacheAvro</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
             Initializes a new instance of the <see cref="T:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer" /> class for mocking use in testing.
             </summary>
        <remarks>
             This constructor exists only to support mocking. When used, class state is not fully initialized, and
             will not function correctly; virtual members are meant to be mocked.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SchemaRegistryAvroSerializer (Azure.Data.SchemaRegistry.SchemaRegistryClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.Data.SchemaRegistry.SchemaRegistryClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer.#ctor(Azure.Data.SchemaRegistry.SchemaRegistryClient)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (client As SchemaRegistryClient)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer : Azure.Data.SchemaRegistry.SchemaRegistryClient -&gt; Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer" Usage="new Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer client" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Data.SchemaRegistry.ApacheAvro</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="client" Type="Azure.Data.SchemaRegistry.SchemaRegistryClient" />
      </Parameters>
      <Docs>
        <param name="client">The <see cref="T:Azure.Data.SchemaRegistry.SchemaRegistryClient" /> instance to use for looking up schemas.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer" />. This constructor can only be used to create an
            instance which will be used for deserialization. In order to serialize (or both serialize and deserialize) you will need to use
            one of the constructors that have a <code>groupName</code> parameter.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SchemaRegistryAvroSerializer (Azure.Data.SchemaRegistry.SchemaRegistryClient client, string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.Data.SchemaRegistry.SchemaRegistryClient client, string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer.#ctor(Azure.Data.SchemaRegistry.SchemaRegistryClient,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (client As SchemaRegistryClient, groupName As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer : Azure.Data.SchemaRegistry.SchemaRegistryClient * string -&gt; Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer" Usage="new Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer (client, groupName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Data.SchemaRegistry.ApacheAvro</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="client" Type="Azure.Data.SchemaRegistry.SchemaRegistryClient" />
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="client">The <see cref="T:Azure.Data.SchemaRegistry.SchemaRegistryClient" /> instance to use for looking up schemas.</param>
        <param name="groupName">The Schema Registry group name that contains the schemas that will be used to serialize.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer" />. This constructor can be used to create an instance
            that will work for both serialization and deserialization.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SchemaRegistryAvroSerializer (Azure.Data.SchemaRegistry.SchemaRegistryClient client, string groupName, Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializerOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.Data.SchemaRegistry.SchemaRegistryClient client, string groupName, class Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer.#ctor(Azure.Data.SchemaRegistry.SchemaRegistryClient,System.String,Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (client As SchemaRegistryClient, groupName As String, options As SchemaRegistryAvroSerializerOptions)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer : Azure.Data.SchemaRegistry.SchemaRegistryClient * string * Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializerOptions -&gt; Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer" Usage="new Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer (client, groupName, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Data.SchemaRegistry.ApacheAvro</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="client" Type="Azure.Data.SchemaRegistry.SchemaRegistryClient" />
        <Parameter Name="groupName" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializerOptions" />
      </Parameters>
      <Docs>
        <param name="client">The <see cref="T:Azure.Data.SchemaRegistry.SchemaRegistryClient" /> instance to use for looking up schemas.</param>
        <param name="groupName">The Schema Registry group name that contains the schemas that will be used to serialize.</param>
        <param name="options">The set of options to customize the <see cref="T:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer" />.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer" />. This constructor can be used to create an instance
            that will work for both serialization and deserialization.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException" />
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (Azure.Messaging.MessageContent content, Type dataType, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class Azure.Messaging.MessageContent content, class System.Type dataType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer.Deserialize(Azure.Messaging.MessageContent,System.Type,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (content As MessageContent, dataType As Type, Optional cancellationToken As CancellationToken = Nothing) As Object" />
      <MemberSignature Language="F#" Value="member this.Deserialize : Azure.Messaging.MessageContent * Type * System.Threading.CancellationToken -&gt; obj" Usage="schemaRegistryAvroSerializer.Deserialize (content, dataType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Data.SchemaRegistry.ApacheAvro</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Messaging.MessageContent" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">The message containing the data to deserialize.</param>
        <param name="dataType">The type to deserialize the message data into.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
            Deserializes the message data into the specified type using the schema information populated in <see cref="P:Azure.Messaging.MessageContent.ContentType" />.
            </summary>
        <returns>The deserialized data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Thrown if an attempt is made to deserialize non-Avro data.</exception>
        <exception cref="T:System.FormatException">
              The ContentType is not in the expected format. The ContentType is expected to be 'avro/binary+schema-id', where 'schema-id' is
              the Schema Registry schema ID.
            </exception>
        <exception cref="T:System.ArgumentException">
              The <paramref name="dataType" /> is not convertible to ISpecificRecord or GenericRecord.
            </exception>
        <exception cref="T:Azure.RequestFailedException">
              An error occurred while attempting to communicate with the Schema Registry service.
            </exception>
        <exception cref="T:System.Exception">
              The schema from <paramref name="dataType" /> was not compatible with the schema used to serialize the data, or the schema itself was invalid.
              The <see cref="P:System.Exception.InnerException" /> will contain the underlying exception from the Apache Avro library.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize&lt;TData&gt;">
      <MemberSignature Language="C#" Value="public TData Deserialize&lt;TData&gt; (Azure.Messaging.MessageContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TData Deserialize&lt;TData&gt;(class Azure.Messaging.MessageContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer.Deserialize``1(Azure.Messaging.MessageContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize(Of TData) (content As MessageContent, Optional cancellationToken As CancellationToken = Nothing) As TData" />
      <MemberSignature Language="F#" Value="member this.Deserialize : Azure.Messaging.MessageContent * System.Threading.CancellationToken -&gt; 'Data" Usage="schemaRegistryAvroSerializer.Deserialize (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Data.SchemaRegistry.ApacheAvro</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TData</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TData" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="content" Type="Azure.Messaging.MessageContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TData">The type to deserialize the message data into.</typeparam>
        <param name="content">The message containing the data to deserialize.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
            Deserializes the message data into the specified type using the schema information populated in <see cref="P:Azure.Messaging.MessageContent.ContentType" />.
            </summary>
        <returns>The deserialized data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Thrown if an attempt is made to deserialize non-Avro data.</exception>
        <exception cref="T:System.FormatException">
              The ContentType is not in the expected format. The ContentType is expected to be 'avro/binary+schema-id', where 'schema-id' is
              the Schema Registry schema ID.
            </exception>
        <exception cref="T:System.ArgumentException">
              The <typeparamref name="TData" /> type is not convertible to ISpecificRecord or GenericRecord.
            </exception>
        <exception cref="T:Azure.RequestFailedException">
              An error occurred while attempting to communicate with the Schema Registry service.
            </exception>
        <exception cref="T:System.Exception">
              The schema from <typeparamref name="TData" /> was not compatible with the schema used to serialize the data, or the schema itself was invalid.
              The <see cref="P:System.Exception.InnerException" /> will contain the underlying exception from the Apache Avro library.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="DeserializeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;object&gt; DeserializeAsync (Azure.Messaging.MessageContent content, Type dataType, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.Tasks.ValueTask`1&lt;object&gt; DeserializeAsync(class Azure.Messaging.MessageContent content, class System.Type dataType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer.DeserializeAsync(Azure.Messaging.MessageContent,System.Type,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeserializeAsync (content As MessageContent, dataType As Type, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of Object)" />
      <MemberSignature Language="F#" Value="member this.DeserializeAsync : Azure.Messaging.MessageContent * Type * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;obj&gt;" Usage="schemaRegistryAvroSerializer.DeserializeAsync (content, dataType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Data.SchemaRegistry.ApacheAvro</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Messaging.MessageContent" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">The message containing the data to deserialize.</param>
        <param name="dataType">The type to deserialize the message data into.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
            Deserializes the message data into the specified type using the schema information populated in <see cref="P:Azure.Messaging.MessageContent.ContentType" />.
            </summary>
        <returns>The deserialized data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Thrown if an attempt is made to deserialize non-Avro data.</exception>
        <exception cref="T:System.FormatException">
              The ContentType is not in the expected format. The ContentType is expected to be 'avro/binary+schema-id', where 'schema-id' is
              the Schema Registry schema ID.
            </exception>
        <exception cref="T:System.ArgumentException">
              The <paramref name="dataType" /> is not convertible to ISpecificRecord or GenericRecord.
            </exception>
        <exception cref="T:Azure.RequestFailedException">
              An error occurred while attempting to communicate with the Schema Registry service.
            </exception>
        <exception cref="T:System.Exception">
              The schema from <paramref name="dataType" /> was not compatible with the schema used to serialize the data, or the schema itself was invalid.
              The <see cref="P:System.Exception.InnerException" /> will contain the underlying exception from the Apache Avro library.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="DeserializeAsync&lt;TData&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;TData&gt; DeserializeAsync&lt;TData&gt; (Azure.Messaging.MessageContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.Tasks.ValueTask`1&lt;!!TData&gt; DeserializeAsync&lt;TData&gt;(class Azure.Messaging.MessageContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer.DeserializeAsync``1(Azure.Messaging.MessageContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeserializeAsync(Of TData) (content As MessageContent, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of TData)" />
      <MemberSignature Language="F#" Value="member this.DeserializeAsync : Azure.Messaging.MessageContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;'Data&gt;" Usage="schemaRegistryAvroSerializer.DeserializeAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Data.SchemaRegistry.ApacheAvro</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;TData&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TData" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="content" Type="Azure.Messaging.MessageContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TData">The type to deserialize the message data into.</typeparam>
        <param name="content">The content to deserialize.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
            deserializes the message data into the specified type using the schema information populated in <see cref="P:Azure.Messaging.MessageContent.ContentType" />.
            </summary>
        <returns>The deserialized data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Thrown if an attempt is made to deserialize non-Avro data.</exception>
        <exception cref="T:System.FormatException">
              The ContentType is not in the expected format. The ContentType is expected to be 'avro/binary+schema-id', where 'schema-id' is
              the Schema Registry schema ID.
            </exception>
        <exception cref="T:System.ArgumentException">
              The <typeparamref name="TData" /> type is not convertible to ISpecificRecord or GenericRecord.
            </exception>
        <exception cref="T:Azure.RequestFailedException">
              An error occurred while attempting to communicate with the Schema Registry service.
            </exception>
        <exception cref="T:System.Exception">
              The schema from <typeparamref name="TData" /> was not compatible with the schema used to serialize the data, or the schema itself was invalid.
              The <see cref="P:System.Exception.InnerException" /> will contain the underlying exception from the Apache Avro library.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public Azure.Messaging.MessageContent Serialize (object data, Type dataType = default, Type messageType = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.Messaging.MessageContent Serialize(object data, class System.Type dataType, class System.Type messageType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer.Serialize(System.Object,System.Type,System.Type,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function Serialize (data As Object, Optional dataType As Type = Nothing, Optional messageType As Type = Nothing, Optional cancellationToken As CancellationToken = Nothing) As MessageContent" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj * Type * Type * System.Threading.CancellationToken -&gt; Azure.Messaging.MessageContent" Usage="schemaRegistryAvroSerializer.Serialize (data, dataType, messageType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Data.SchemaRegistry.ApacheAvro</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Messaging.MessageContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="messageType" Type="System.Type" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="data">The data to serialize to Avro and serialize into the message.</param>
        <param name="dataType">The type of the data to serialize. If left blank, the type will be determined at runtime by
            calling <see cref="M:System.Object.GetType" />.</param>
        <param name="messageType">The type of message to serialize the data into. Must extend from <see cref="T:Azure.Messaging.MessageContent" />, and
            have a parameterless constructor.
            If left blank, the data will be serialized into a <see cref="T:Azure.Messaging.MessageContent" /> instance.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
            serializes the message data as Avro and stores it in <see cref="P:Azure.Messaging.MessageContent.Data" />. The <see cref="P:Azure.Messaging.MessageContent.ContentType" />
            will be set to "avro/binary+schemaId" where schemaId is the ID of the schema used to serialize the data.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
              This can occur if the <code>groupName</code> was not specified when constructing the <see cref="T:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer" />.
              It can also occur if the <paramref name="messageType" /> does not have a public parameterless constructor.
            </exception>
        <exception cref="T:System.ArgumentException">
              The <paramref name="dataType" /> is not convertible to ISpecificRecord or GenericRecord.
            </exception>
        <exception cref="T:Azure.RequestFailedException">
              An error occurred while attempting to communicate with the Schema Registry service.
            </exception>
        <exception cref="T:System.Exception">
              The data did not adhere to the Avro schema, or the schema itself was invalid.
              The <see cref="P:System.Exception.InnerException" /> will contain the underlying exception from the Apache Avro library.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize&lt;TMessage,TData&gt;">
      <MemberSignature Language="C#" Value="public TMessage Serialize&lt;TMessage,TData&gt; (TData data, System.Threading.CancellationToken cancellationToken = default) where TMessage : Azure.Messaging.MessageContent, new();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TMessage Serialize&lt;.ctor (class Azure.Messaging.MessageContent) TMessage, TData&gt;(!!TData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer.Serialize``2(``1,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function Serialize(Of TMessage As {MessageContentNew}, TData As {MessageContentNew}) (data As TData, Optional cancellationToken As CancellationToken = Nothing) As TMessage" />
      <MemberSignature Language="F#" Value="member this.Serialize : 'Data * System.Threading.CancellationToken -&gt; 'Message (requires 'Message :&gt; Azure.Messaging.MessageContent and 'Message : (new : unit -&gt; 'Message))" Usage="schemaRegistryAvroSerializer.Serialize (data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Data.SchemaRegistry.ApacheAvro</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TMessage</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TMessage">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <BaseTypeName>Azure.Messaging.MessageContent</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TData" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="data" Type="TData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TMessage">The <see cref="T:Azure.Messaging.MessageContent" /> type to serialize the data into.</typeparam>
        <typeparam name="TData">The type of the data to serialize.</typeparam>
        <param name="data">The data to serialize to Avro and serialize into the message.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
            Serializes the message data as Avro and stores it in <see cref="P:Azure.Messaging.MessageContent.Data" />. The <see cref="P:Azure.Messaging.MessageContent.ContentType" />
            will be set to "avro/binary+schemaId" where schemaId is the ID of the schema used to serialize the data.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
              This can occur if the <code>groupName</code> was not specified when constructing the <see cref="T:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer" />.
              It can also occur if the <typeparamref name="TMessage" /> type does not have a public parameterless constructor.
            </exception>
        <exception cref="T:System.ArgumentException">
              The <typeparamref name="TData" /> is not convertible to ISpecificRecord or GenericRecord.
            </exception>
        <exception cref="T:Azure.RequestFailedException">
              An error occurred while attempting to communicate with the Schema Registry service.
            </exception>
        <exception cref="T:System.Exception">
              The data did not adhere to the Avro schema, or the schema itself was invalid.
              The <see cref="P:System.Exception.InnerException" /> will contain the underlying exception from the Apache Avro library.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SerializeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;Azure.Messaging.MessageContent&gt; SerializeAsync (object data, Type dataType = default, Type messageType = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.Tasks.ValueTask`1&lt;class Azure.Messaging.MessageContent&gt; SerializeAsync(object data, class System.Type dataType, class System.Type messageType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer.SerializeAsync(System.Object,System.Type,System.Type,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function SerializeAsync (data As Object, Optional dataType As Type = Nothing, Optional messageType As Type = Nothing, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of MessageContent)" />
      <MemberSignature Language="F#" Value="member this.SerializeAsync : obj * Type * Type * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Azure.Messaging.MessageContent&gt;" Usage="schemaRegistryAvroSerializer.SerializeAsync (data, dataType, messageType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Data.SchemaRegistry.ApacheAvro</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Azure.Messaging.MessageContent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="messageType" Type="System.Type" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="data">The data to serialize to Avro and serialize into the message.</param>
        <param name="dataType">The type of the data to serialize. If left blank, the type will be determined at runtime by
            calling <see cref="M:System.Object.GetType" />.</param>
        <param name="messageType">The type of message to serialize the data into. Must extend from <see cref="T:Azure.Messaging.MessageContent" />, and
            have a parameterless constructor.
            If left blank, the data will be serialized into a <see cref="T:Azure.Messaging.MessageContent" /> instance.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
            serializes the message data as Avro and stores it in <see cref="P:Azure.Messaging.MessageContent.Data" />. The <see cref="P:Azure.Messaging.MessageContent.ContentType" />
            will be set to "avro/binary+schemaId" where schemaId is the ID of the schema used to serialize the data.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
              This can occur if the <code>groupName</code> was not specified when constructing the <see cref="T:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer" />.
              It can also occur if the <paramref name="messageType" /> does not have a public parameterless constructor.
            </exception>
        <exception cref="T:System.ArgumentException">
              The <paramref name="dataType" /> is not convertible to ISpecificRecord or GenericRecord.
            </exception>
        <exception cref="T:Azure.RequestFailedException">
              An error occurred while attempting to communicate with the Schema Registry service.
            </exception>
        <exception cref="T:System.Exception">
              The data did not adhere to the Avro schema, or the schema itself was invalid.
              The <see cref="P:System.Exception.InnerException" /> will contain the underlying exception from the Apache Avro library.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SerializeAsync&lt;TMessage,TData&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;TMessage&gt; SerializeAsync&lt;TMessage,TData&gt; (TData data, System.Threading.CancellationToken cancellationToken = default) where TMessage : Azure.Messaging.MessageContent, new();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.Tasks.ValueTask`1&lt;!!TMessage&gt; SerializeAsync&lt;.ctor (class Azure.Messaging.MessageContent) TMessage, TData&gt;(!!TData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer.SerializeAsync``2(``1,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function SerializeAsync(Of TMessage As {MessageContentNew}, TData As {MessageContentNew}) (data As TData, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of TMessage)" />
      <MemberSignature Language="F#" Value="member this.SerializeAsync : 'Data * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;'Message (requires 'Message :&gt; Azure.Messaging.MessageContent and 'Message : (new : unit -&gt; 'Message))&gt; (requires 'Message :&gt; Azure.Messaging.MessageContent and 'Message : (new : unit -&gt; 'Message))" Usage="schemaRegistryAvroSerializer.SerializeAsync (data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Data.SchemaRegistry.ApacheAvro</AssemblyName>
        <AssemblyVersion>1.0.1.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;TMessage&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TMessage">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <BaseTypeName>Azure.Messaging.MessageContent</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TData" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="data" Type="TData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TMessage">The <see cref="T:Azure.Messaging.MessageContent" /> type to serialize the data into.</typeparam>
        <typeparam name="TData">The type of the data to serialize.</typeparam>
        <param name="data">The data to serialize to Avro and serialize into the message.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
            serializes the message data as Avro and stores it in <see cref="P:Azure.Messaging.MessageContent.Data" />. The <see cref="P:Azure.Messaging.MessageContent.ContentType" />
            will be set to "avro/binary+schemaId" where schemaId is the ID of the schema used to serialize the data.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
              This can occur if the <code>groupName</code> was not specified when constructing the <see cref="T:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroSerializer" />.
              It can also occur if the <typeparamref name="TMessage" /> type does not have a public parameterless constructor.
            </exception>
        <exception cref="T:System.ArgumentException">
              The <typeparamref name="TData" /> is not convertible to ISpecificRecord or GenericRecord.
            </exception>
        <exception cref="T:Azure.RequestFailedException">
              An error occurred while attempting to communicate with the Schema Registry service.
            </exception>
        <exception cref="T:System.Exception">
              The data did not adhere to the Avro schema, or the schema itself was invalid.
              The <see cref="P:System.Exception.InnerException" /> will contain the underlying exception from the Apache Avro library.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
