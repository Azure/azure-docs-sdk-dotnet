<Type Name="IKeyResolver" FullName="Microsoft.Azure.KeyVault.Core.IKeyResolver">
  <TypeSignature Language="C#" Value="public interface IKeyResolver" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IKeyResolver" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.KeyVault.Core.IKeyResolver" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.KeyVault.Core</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Interface for key resolvers.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ResolveKeyAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Core.IKey&gt; ResolveKeyAsync (string kid, System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.KeyVault.Core.IKey&gt; ResolveKeyAsync(string kid, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.KeyVault.Core.IKeyResolver.ResolveKeyAsync(System.String,System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Azure.KeyVault.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.KeyVault.Core.IKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kid" Type="System.String" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="kid">The key identifier to resolve</param>
        <param name="token">Cancellation token</param>
        <summary>
            Provides an IKey implementation for the specified key identifier.
            </summary>
        <returns>The resolved IKey implementation or null</returns>
        <remarks>Implementations should check the format of the kid to ensure that it is recognized. Null, rather than 
            an exception, should be returned for unrecognized key identifiers to enable chaining of key resolvers.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>