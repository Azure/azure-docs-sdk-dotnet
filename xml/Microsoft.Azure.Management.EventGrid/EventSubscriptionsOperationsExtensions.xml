<Type Name="EventSubscriptionsOperationsExtensions" FullName="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions">
  <TypeSignature Language="C#" Value="public static class EventSubscriptionsOperationsExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EventSubscriptionsOperationsExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module EventSubscriptionsOperationsExtensions" />
  <TypeSignature Language="F#" Value="type EventSubscriptionsOperationsExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for EventSubscriptionsOperations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginCreateOrUpdate">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Management.EventGrid.Models.EventSubscription BeginCreateOrUpdate (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName, Microsoft.Azure.Management.EventGrid.Models.EventSubscription eventSubscriptionInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Management.EventGrid.Models.EventSubscription BeginCreateOrUpdate(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName, class Microsoft.Azure.Management.EventGrid.Models.EventSubscription eventSubscriptionInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.BeginCreateOrUpdate(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String,System.String,Microsoft.Azure.Management.EventGrid.Models.EventSubscription)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BeginCreateOrUpdate (operations As IEventSubscriptionsOperations, scope As String, eventSubscriptionName As String, eventSubscriptionInfo As EventSubscription) As EventSubscription" />
      <MemberSignature Language="F#" Value="static member BeginCreateOrUpdate : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string * string * Microsoft.Azure.Management.EventGrid.Models.EventSubscription -&gt; Microsoft.Azure.Management.EventGrid.Models.EventSubscription" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.BeginCreateOrUpdate (operations, scope, eventSubscriptionName, eventSubscriptionInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.EventGrid.Models.EventSubscription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="eventSubscriptionName" Type="System.String" />
        <Parameter Name="eventSubscriptionInfo" Type="Microsoft.Azure.Management.EventGrid.Models.EventSubscription" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="scope">
            The identifier of the resource to which the event subscription needs to be
            created or updated. The scope can be a subscription, or a resource group,
            or a top level resource belonging to a resource provider namespace, or an
            EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a
            subscription,
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a
            resource group, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
            for a resource, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'
            for an EventGrid topic.
            </param>
        <param name="eventSubscriptionName">
            Name of the event subscription. Event subscription names must be between 3
            and 64 characters in length and should use alphanumeric letters only.
            </param>
        <param name="eventSubscriptionInfo">
            Event subscription properties containing the destination and filter
            information
            </param>
        <summary>
            Create or update an event subscription
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Asynchronously creates a new event subscription or updates an existing
            event subscription based on the specified scope.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt; BeginCreateOrUpdateAsync (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName, Microsoft.Azure.Management.EventGrid.Models.EventSubscription eventSubscriptionInfo, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt; BeginCreateOrUpdateAsync(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName, class Microsoft.Azure.Management.EventGrid.Models.EventSubscription eventSubscriptionInfo, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.BeginCreateOrUpdateAsync(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String,System.String,Microsoft.Azure.Management.EventGrid.Models.EventSubscription,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member BeginCreateOrUpdateAsync : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string * string * Microsoft.Azure.Management.EventGrid.Models.EventSubscription * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.BeginCreateOrUpdateAsync (operations, scope, eventSubscriptionName, eventSubscriptionInfo, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="eventSubscriptionName" Type="System.String" />
        <Parameter Name="eventSubscriptionInfo" Type="Microsoft.Azure.Management.EventGrid.Models.EventSubscription" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="scope">
            The identifier of the resource to which the event subscription needs to be
            created or updated. The scope can be a subscription, or a resource group,
            or a top level resource belonging to a resource provider namespace, or an
            EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a
            subscription,
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a
            resource group, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
            for a resource, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'
            for an EventGrid topic.
            </param>
        <param name="eventSubscriptionName">
            Name of the event subscription. Event subscription names must be between 3
            and 64 characters in length and should use alphanumeric letters only.
            </param>
        <param name="eventSubscriptionInfo">
            Event subscription properties containing the destination and filter
            information
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Create or update an event subscription
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Asynchronously creates a new event subscription or updates an existing
            event subscription based on the specified scope.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDelete">
      <MemberSignature Language="C#" Value="public static void BeginDelete (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BeginDelete(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.BeginDelete(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub BeginDelete (operations As IEventSubscriptionsOperations, scope As String, eventSubscriptionName As String)" />
      <MemberSignature Language="F#" Value="static member BeginDelete : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string * string -&gt; unit" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.BeginDelete (operations, scope, eventSubscriptionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="eventSubscriptionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="scope">
            The scope of the event subscription. The scope can be a subscription, or a
            resource group, or a top level resource belonging to a resource provider
            namespace, or an EventGrid topic. For example, use
            '/subscriptions/{subscriptionId}/' for a subscription,
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a
            resource group, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
            for a resource, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'
            for an EventGrid topic.
            </param>
        <param name="eventSubscriptionName">
            Name of the event subscription
            </param>
        <summary>
            Delete an event subscription
            </summary>
        <remarks>
            Delete an existing event subscription
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDeleteAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task BeginDeleteAsync (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task BeginDeleteAsync(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.BeginDeleteAsync(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member BeginDeleteAsync : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.BeginDeleteAsync (operations, scope, eventSubscriptionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="eventSubscriptionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="scope">
            The scope of the event subscription. The scope can be a subscription, or a
            resource group, or a top level resource belonging to a resource provider
            namespace, or an EventGrid topic. For example, use
            '/subscriptions/{subscriptionId}/' for a subscription,
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a
            resource group, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
            for a resource, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'
            for an EventGrid topic.
            </param>
        <param name="eventSubscriptionName">
            Name of the event subscription
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Delete an event subscription
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Delete an existing event subscription
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Management.EventGrid.Models.EventSubscription BeginUpdate (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName, Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionUpdateParameters eventSubscriptionUpdateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Management.EventGrid.Models.EventSubscription BeginUpdate(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName, class Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionUpdateParameters eventSubscriptionUpdateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.BeginUpdate(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String,System.String,Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionUpdateParameters)" />
      <MemberSignature Language="F#" Value="static member BeginUpdate : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string * string * Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionUpdateParameters -&gt; Microsoft.Azure.Management.EventGrid.Models.EventSubscription" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.BeginUpdate (operations, scope, eventSubscriptionName, eventSubscriptionUpdateParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.EventGrid.Models.EventSubscription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="eventSubscriptionName" Type="System.String" />
        <Parameter Name="eventSubscriptionUpdateParameters" Type="Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionUpdateParameters" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="scope">
            The scope of existing event subscription. The scope can be a subscription,
            or a resource group, or a top level resource belonging to a resource
            provider namespace, or an EventGrid topic. For example, use
            '/subscriptions/{subscriptionId}/' for a subscription,
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a
            resource group, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
            for a resource, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'
            for an EventGrid topic.
            </param>
        <param name="eventSubscriptionName">
            Name of the event subscription to be created
            </param>
        <param name="eventSubscriptionUpdateParameters">
            Updated event subscription information
            </param>
        <summary>
            Update an event subscription
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Asynchronously updates an existing event subscription.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUpdateAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt; BeginUpdateAsync (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName, Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionUpdateParameters eventSubscriptionUpdateParameters, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt; BeginUpdateAsync(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName, class Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionUpdateParameters eventSubscriptionUpdateParameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.BeginUpdateAsync(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String,System.String,Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionUpdateParameters,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member BeginUpdateAsync : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string * string * Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionUpdateParameters * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.BeginUpdateAsync (operations, scope, eventSubscriptionName, eventSubscriptionUpdateParameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="eventSubscriptionName" Type="System.String" />
        <Parameter Name="eventSubscriptionUpdateParameters" Type="Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionUpdateParameters" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="scope">
            The scope of existing event subscription. The scope can be a subscription,
            or a resource group, or a top level resource belonging to a resource
            provider namespace, or an EventGrid topic. For example, use
            '/subscriptions/{subscriptionId}/' for a subscription,
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a
            resource group, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
            for a resource, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'
            for an EventGrid topic.
            </param>
        <param name="eventSubscriptionName">
            Name of the event subscription to be created
            </param>
        <param name="eventSubscriptionUpdateParameters">
            Updated event subscription information
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Update an event subscription
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Asynchronously updates an existing event subscription.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdate">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Management.EventGrid.Models.EventSubscription CreateOrUpdate (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName, Microsoft.Azure.Management.EventGrid.Models.EventSubscription eventSubscriptionInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Management.EventGrid.Models.EventSubscription CreateOrUpdate(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName, class Microsoft.Azure.Management.EventGrid.Models.EventSubscription eventSubscriptionInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String,System.String,Microsoft.Azure.Management.EventGrid.Models.EventSubscription)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateOrUpdate (operations As IEventSubscriptionsOperations, scope As String, eventSubscriptionName As String, eventSubscriptionInfo As EventSubscription) As EventSubscription" />
      <MemberSignature Language="F#" Value="static member CreateOrUpdate : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string * string * Microsoft.Azure.Management.EventGrid.Models.EventSubscription -&gt; Microsoft.Azure.Management.EventGrid.Models.EventSubscription" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.CreateOrUpdate (operations, scope, eventSubscriptionName, eventSubscriptionInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.EventGrid.Models.EventSubscription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="eventSubscriptionName" Type="System.String" />
        <Parameter Name="eventSubscriptionInfo" Type="Microsoft.Azure.Management.EventGrid.Models.EventSubscription" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="scope">
            The identifier of the resource to which the event subscription needs to be
            created or updated. The scope can be a subscription, or a resource group,
            or a top level resource belonging to a resource provider namespace, or an
            EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a
            subscription,
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a
            resource group, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
            for a resource, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'
            for an EventGrid topic.
            </param>
        <param name="eventSubscriptionName">
            Name of the event subscription. Event subscription names must be between 3
            and 64 characters in length and should use alphanumeric letters only.
            </param>
        <param name="eventSubscriptionInfo">
            Event subscription properties containing the destination and filter
            information
            </param>
        <summary>
            Create or update an event subscription
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Asynchronously creates a new event subscription or updates an existing
            event subscription based on the specified scope.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt; CreateOrUpdateAsync (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName, Microsoft.Azure.Management.EventGrid.Models.EventSubscription eventSubscriptionInfo, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt; CreateOrUpdateAsync(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName, class Microsoft.Azure.Management.EventGrid.Models.EventSubscription eventSubscriptionInfo, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String,System.String,Microsoft.Azure.Management.EventGrid.Models.EventSubscription,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member CreateOrUpdateAsync : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string * string * Microsoft.Azure.Management.EventGrid.Models.EventSubscription * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.CreateOrUpdateAsync (operations, scope, eventSubscriptionName, eventSubscriptionInfo, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="eventSubscriptionName" Type="System.String" />
        <Parameter Name="eventSubscriptionInfo" Type="Microsoft.Azure.Management.EventGrid.Models.EventSubscription" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="scope">
            The identifier of the resource to which the event subscription needs to be
            created or updated. The scope can be a subscription, or a resource group,
            or a top level resource belonging to a resource provider namespace, or an
            EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a
            subscription,
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a
            resource group, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
            for a resource, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'
            for an EventGrid topic.
            </param>
        <param name="eventSubscriptionName">
            Name of the event subscription. Event subscription names must be between 3
            and 64 characters in length and should use alphanumeric letters only.
            </param>
        <param name="eventSubscriptionInfo">
            Event subscription properties containing the destination and filter
            information
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Create or update an event subscription
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Asynchronously creates a new event subscription or updates an existing
            event subscription based on the specified scope.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static void Delete (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Delete(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.Delete(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Delete (operations As IEventSubscriptionsOperations, scope As String, eventSubscriptionName As String)" />
      <MemberSignature Language="F#" Value="static member Delete : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string * string -&gt; unit" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.Delete (operations, scope, eventSubscriptionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="eventSubscriptionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="scope">
            The scope of the event subscription. The scope can be a subscription, or a
            resource group, or a top level resource belonging to a resource provider
            namespace, or an EventGrid topic. For example, use
            '/subscriptions/{subscriptionId}/' for a subscription,
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a
            resource group, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
            for a resource, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'
            for an EventGrid topic.
            </param>
        <param name="eventSubscriptionName">
            Name of the event subscription
            </param>
        <summary>
            Delete an event subscription
            </summary>
        <remarks>
            Delete an existing event subscription
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task DeleteAsync (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task DeleteAsync(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member DeleteAsync : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.DeleteAsync (operations, scope, eventSubscriptionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="eventSubscriptionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="scope">
            The scope of the event subscription. The scope can be a subscription, or a
            resource group, or a top level resource belonging to a resource provider
            namespace, or an EventGrid topic. For example, use
            '/subscriptions/{subscriptionId}/' for a subscription,
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a
            resource group, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
            for a resource, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'
            for an EventGrid topic.
            </param>
        <param name="eventSubscriptionName">
            Name of the event subscription
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Delete an event subscription
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Delete an existing event subscription
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Management.EventGrid.Models.EventSubscription Get (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Management.EventGrid.Models.EventSubscription Get(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.Get(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Get (operations As IEventSubscriptionsOperations, scope As String, eventSubscriptionName As String) As EventSubscription" />
      <MemberSignature Language="F#" Value="static member Get : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string * string -&gt; Microsoft.Azure.Management.EventGrid.Models.EventSubscription" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.Get (operations, scope, eventSubscriptionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.EventGrid.Models.EventSubscription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="eventSubscriptionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="scope">
            The scope of the event subscription. The scope can be a subscription, or a
            resource group, or a top level resource belonging to a resource provider
            namespace, or an EventGrid topic. For example, use
            '/subscriptions/{subscriptionId}/' for a subscription,
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a
            resource group, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
            for a resource, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'
            for an EventGrid topic.
            </param>
        <param name="eventSubscriptionName">
            Name of the event subscription
            </param>
        <summary>
            Get an event subscription
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Get properties of an event subscription
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt; GetAsync (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt; GetAsync(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.GetAsync(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member GetAsync : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.GetAsync (operations, scope, eventSubscriptionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="eventSubscriptionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="scope">
            The scope of the event subscription. The scope can be a subscription, or a
            resource group, or a top level resource belonging to a resource provider
            namespace, or an EventGrid topic. For example, use
            '/subscriptions/{subscriptionId}/' for a subscription,
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a
            resource group, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
            for a resource, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'
            for an EventGrid topic.
            </param>
        <param name="eventSubscriptionName">
            Name of the event subscription
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Get an event subscription
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Get properties of an event subscription
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFullUrl">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionFullUrl GetFullUrl (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionFullUrl GetFullUrl(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.GetFullUrl(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFullUrl (operations As IEventSubscriptionsOperations, scope As String, eventSubscriptionName As String) As EventSubscriptionFullUrl" />
      <MemberSignature Language="F#" Value="static member GetFullUrl : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string * string -&gt; Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionFullUrl" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.GetFullUrl (operations, scope, eventSubscriptionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionFullUrl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="eventSubscriptionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="scope">
            The scope of the event subscription. The scope can be a subscription, or a
            resource group, or a top level resource belonging to a resource provider
            namespace, or an EventGrid topic. For example, use
            '/subscriptions/{subscriptionId}/' for a subscription,
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a
            resource group, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
            for a resource, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'
            for an EventGrid topic.
            </param>
        <param name="eventSubscriptionName">
            Name of the event subscription
            </param>
        <summary>
            Get full URL of an event subscription
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Get the full endpoint URL for an event subscription
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFullUrlAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionFullUrl&gt; GetFullUrlAsync (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionFullUrl&gt; GetFullUrlAsync(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.GetFullUrlAsync(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member GetFullUrlAsync : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionFullUrl&gt;" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.GetFullUrlAsync (operations, scope, eventSubscriptionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionFullUrl&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="eventSubscriptionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="scope">
            The scope of the event subscription. The scope can be a subscription, or a
            resource group, or a top level resource belonging to a resource provider
            namespace, or an EventGrid topic. For example, use
            '/subscriptions/{subscriptionId}/' for a subscription,
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a
            resource group, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
            for a resource, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'
            for an EventGrid topic.
            </param>
        <param name="eventSubscriptionName">
            Name of the event subscription
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Get full URL of an event subscription
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Get the full endpoint URL for an event subscription
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListByResource">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt; ListByResource (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string resourceGroupName, string providerNamespace, string resourceTypeName, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt; ListByResource(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string resourceGroupName, string providerNamespace, string resourceTypeName, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListByResource(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ListByResource (operations As IEventSubscriptionsOperations, resourceGroupName As String, providerNamespace As String, resourceTypeName As String, resourceName As String) As IEnumerable(Of EventSubscription)" />
      <MemberSignature Language="F#" Value="static member ListByResource : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string * string * string * string -&gt; seq&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListByResource (operations, resourceGroupName, providerNamespace, resourceTypeName, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="providerNamespace" Type="System.String" />
        <Parameter Name="resourceTypeName" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            The name of the resource group within the user's subscription.
            </param>
        <param name="providerNamespace">
            Namespace of the provider of the topic
            </param>
        <param name="resourceTypeName">
            Name of the resource type
            </param>
        <param name="resourceName">
            Name of the resource
            </param>
        <summary>
            List all event subscriptions for a specific topic
            </summary>
        <returns>To be added.</returns>
        <remarks>
            List all event subscriptions that have been created for a specific topic
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListByResourceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt; ListByResourceAsync (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string resourceGroupName, string providerNamespace, string resourceTypeName, string resourceName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt; ListByResourceAsync(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string resourceGroupName, string providerNamespace, string resourceTypeName, string resourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListByResourceAsync(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ListByResourceAsync : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt;" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListByResourceAsync (operations, resourceGroupName, providerNamespace, resourceTypeName, resourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="providerNamespace" Type="System.String" />
        <Parameter Name="resourceTypeName" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            The name of the resource group within the user's subscription.
            </param>
        <param name="providerNamespace">
            Namespace of the provider of the topic
            </param>
        <param name="resourceTypeName">
            Name of the resource type
            </param>
        <param name="resourceName">
            Name of the resource
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            List all event subscriptions for a specific topic
            </summary>
        <returns>To be added.</returns>
        <remarks>
            List all event subscriptions that have been created for a specific topic
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListGlobalByResourceGroup">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt; ListGlobalByResourceGroup (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string resourceGroupName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt; ListGlobalByResourceGroup(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string resourceGroupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListGlobalByResourceGroup(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ListGlobalByResourceGroup (operations As IEventSubscriptionsOperations, resourceGroupName As String) As IEnumerable(Of EventSubscription)" />
      <MemberSignature Language="F#" Value="static member ListGlobalByResourceGroup : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string -&gt; seq&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListGlobalByResourceGroup (operations, resourceGroupName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            The name of the resource group within the user's subscription.
            </param>
        <summary>
            List all global event subscriptions under an Azure subscription and
            resource group
            </summary>
        <returns>To be added.</returns>
        <remarks>
            List all global event subscriptions under a specific Azure subscription and
            resource group
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListGlobalByResourceGroupAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt; ListGlobalByResourceGroupAsync (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string resourceGroupName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt; ListGlobalByResourceGroupAsync(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string resourceGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListGlobalByResourceGroupAsync(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ListGlobalByResourceGroupAsync : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt;" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListGlobalByResourceGroupAsync (operations, resourceGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            The name of the resource group within the user's subscription.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            List all global event subscriptions under an Azure subscription and
            resource group
            </summary>
        <returns>To be added.</returns>
        <remarks>
            List all global event subscriptions under a specific Azure subscription and
            resource group
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListGlobalByResourceGroupForTopicType">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt; ListGlobalByResourceGroupForTopicType (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string resourceGroupName, string topicTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt; ListGlobalByResourceGroupForTopicType(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string resourceGroupName, string topicTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListGlobalByResourceGroupForTopicType(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ListGlobalByResourceGroupForTopicType (operations As IEventSubscriptionsOperations, resourceGroupName As String, topicTypeName As String) As IEnumerable(Of EventSubscription)" />
      <MemberSignature Language="F#" Value="static member ListGlobalByResourceGroupForTopicType : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string * string -&gt; seq&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListGlobalByResourceGroupForTopicType (operations, resourceGroupName, topicTypeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="topicTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            The name of the resource group within the user's subscription.
            </param>
        <param name="topicTypeName">
            Name of the topic type
            </param>
        <summary>
            List all global event subscriptions under a resource group for a topic type
            </summary>
        <returns>To be added.</returns>
        <remarks>
            List all global event subscriptions under a resource group for a specific
            topic type.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListGlobalByResourceGroupForTopicTypeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt; ListGlobalByResourceGroupForTopicTypeAsync (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string resourceGroupName, string topicTypeName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt; ListGlobalByResourceGroupForTopicTypeAsync(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string resourceGroupName, string topicTypeName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListGlobalByResourceGroupForTopicTypeAsync(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ListGlobalByResourceGroupForTopicTypeAsync : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt;" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListGlobalByResourceGroupForTopicTypeAsync (operations, resourceGroupName, topicTypeName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="topicTypeName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            The name of the resource group within the user's subscription.
            </param>
        <param name="topicTypeName">
            Name of the topic type
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            List all global event subscriptions under a resource group for a topic type
            </summary>
        <returns>To be added.</returns>
        <remarks>
            List all global event subscriptions under a resource group for a specific
            topic type.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListGlobalBySubscription">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt; ListGlobalBySubscription (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt; ListGlobalBySubscription(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListGlobalBySubscription(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ListGlobalBySubscription (operations As IEventSubscriptionsOperations) As IEnumerable(Of EventSubscription)" />
      <MemberSignature Language="F#" Value="static member ListGlobalBySubscription : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations -&gt; seq&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListGlobalBySubscription operations" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <summary>
            Get an aggregated list of all global event subscriptions under an Azure
            subscription
            </summary>
        <returns>To be added.</returns>
        <remarks>
            List all aggregated global event subscriptions under a specific Azure
            subscription
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListGlobalBySubscriptionAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt; ListGlobalBySubscriptionAsync (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt; ListGlobalBySubscriptionAsync(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListGlobalBySubscriptionAsync(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ListGlobalBySubscriptionAsync : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt;" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListGlobalBySubscriptionAsync (operations, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Get an aggregated list of all global event subscriptions under an Azure
            subscription
            </summary>
        <returns>To be added.</returns>
        <remarks>
            List all aggregated global event subscriptions under a specific Azure
            subscription
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListGlobalBySubscriptionForTopicType">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt; ListGlobalBySubscriptionForTopicType (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string topicTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt; ListGlobalBySubscriptionForTopicType(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string topicTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListGlobalBySubscriptionForTopicType(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ListGlobalBySubscriptionForTopicType (operations As IEventSubscriptionsOperations, topicTypeName As String) As IEnumerable(Of EventSubscription)" />
      <MemberSignature Language="F#" Value="static member ListGlobalBySubscriptionForTopicType : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string -&gt; seq&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListGlobalBySubscriptionForTopicType (operations, topicTypeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="topicTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="topicTypeName">
            Name of the topic type
            </param>
        <summary>
            List all global event subscriptions for a topic type
            </summary>
        <returns>To be added.</returns>
        <remarks>
            List all global event subscriptions under an Azure subscription for a topic
            type.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListGlobalBySubscriptionForTopicTypeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt; ListGlobalBySubscriptionForTopicTypeAsync (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string topicTypeName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt; ListGlobalBySubscriptionForTopicTypeAsync(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string topicTypeName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListGlobalBySubscriptionForTopicTypeAsync(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ListGlobalBySubscriptionForTopicTypeAsync : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt;" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListGlobalBySubscriptionForTopicTypeAsync (operations, topicTypeName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="topicTypeName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="topicTypeName">
            Name of the topic type
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            List all global event subscriptions for a topic type
            </summary>
        <returns>To be added.</returns>
        <remarks>
            List all global event subscriptions under an Azure subscription for a topic
            type.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListRegionalByResourceGroup">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt; ListRegionalByResourceGroup (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string resourceGroupName, string location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt; ListRegionalByResourceGroup(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string resourceGroupName, string location) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListRegionalByResourceGroup(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ListRegionalByResourceGroup (operations As IEventSubscriptionsOperations, resourceGroupName As String, location As String) As IEnumerable(Of EventSubscription)" />
      <MemberSignature Language="F#" Value="static member ListRegionalByResourceGroup : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string * string -&gt; seq&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListRegionalByResourceGroup (operations, resourceGroupName, location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="location" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            The name of the resource group within the user's subscription.
            </param>
        <param name="location">
            Name of the location
            </param>
        <summary>
            List all regional event subscriptions under an Azure subscription and
            resource group
            </summary>
        <returns>To be added.</returns>
        <remarks>
            List all event subscriptions from the given location under a specific Azure
            subscription and resource group
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListRegionalByResourceGroupAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt; ListRegionalByResourceGroupAsync (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string resourceGroupName, string location, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt; ListRegionalByResourceGroupAsync(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string resourceGroupName, string location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListRegionalByResourceGroupAsync(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ListRegionalByResourceGroupAsync : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt;" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListRegionalByResourceGroupAsync (operations, resourceGroupName, location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="location" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            The name of the resource group within the user's subscription.
            </param>
        <param name="location">
            Name of the location
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            List all regional event subscriptions under an Azure subscription and
            resource group
            </summary>
        <returns>To be added.</returns>
        <remarks>
            List all event subscriptions from the given location under a specific Azure
            subscription and resource group
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListRegionalByResourceGroupForTopicType">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt; ListRegionalByResourceGroupForTopicType (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string resourceGroupName, string location, string topicTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt; ListRegionalByResourceGroupForTopicType(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string resourceGroupName, string location, string topicTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListRegionalByResourceGroupForTopicType(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ListRegionalByResourceGroupForTopicType (operations As IEventSubscriptionsOperations, resourceGroupName As String, location As String, topicTypeName As String) As IEnumerable(Of EventSubscription)" />
      <MemberSignature Language="F#" Value="static member ListRegionalByResourceGroupForTopicType : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string * string * string -&gt; seq&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListRegionalByResourceGroupForTopicType (operations, resourceGroupName, location, topicTypeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="location" Type="System.String" />
        <Parameter Name="topicTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            The name of the resource group within the user's subscription.
            </param>
        <param name="location">
            Name of the location
            </param>
        <param name="topicTypeName">
            Name of the topic type
            </param>
        <summary>
            List all regional event subscriptions under an Azure subscription and
            resource group for a topic type
            </summary>
        <returns>To be added.</returns>
        <remarks>
            List all event subscriptions from the given location under a specific Azure
            subscription and resource group and topic type
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListRegionalByResourceGroupForTopicTypeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt; ListRegionalByResourceGroupForTopicTypeAsync (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string resourceGroupName, string location, string topicTypeName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt; ListRegionalByResourceGroupForTopicTypeAsync(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string resourceGroupName, string location, string topicTypeName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListRegionalByResourceGroupForTopicTypeAsync(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ListRegionalByResourceGroupForTopicTypeAsync : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt;" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListRegionalByResourceGroupForTopicTypeAsync (operations, resourceGroupName, location, topicTypeName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="location" Type="System.String" />
        <Parameter Name="topicTypeName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            The name of the resource group within the user's subscription.
            </param>
        <param name="location">
            Name of the location
            </param>
        <param name="topicTypeName">
            Name of the topic type
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            List all regional event subscriptions under an Azure subscription and
            resource group for a topic type
            </summary>
        <returns>To be added.</returns>
        <remarks>
            List all event subscriptions from the given location under a specific Azure
            subscription and resource group and topic type
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListRegionalBySubscription">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt; ListRegionalBySubscription (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt; ListRegionalBySubscription(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string location) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListRegionalBySubscription(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ListRegionalBySubscription (operations As IEventSubscriptionsOperations, location As String) As IEnumerable(Of EventSubscription)" />
      <MemberSignature Language="F#" Value="static member ListRegionalBySubscription : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string -&gt; seq&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListRegionalBySubscription (operations, location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="location" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="location">
            Name of the location
            </param>
        <summary>
            List all regional event subscriptions under an Azure subscription
            </summary>
        <returns>To be added.</returns>
        <remarks>
            List all event subscriptions from the given location under a specific Azure
            subscription
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListRegionalBySubscriptionAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt; ListRegionalBySubscriptionAsync (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string location, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt; ListRegionalBySubscriptionAsync(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListRegionalBySubscriptionAsync(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ListRegionalBySubscriptionAsync : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt;" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListRegionalBySubscriptionAsync (operations, location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="location" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="location">
            Name of the location
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            List all regional event subscriptions under an Azure subscription
            </summary>
        <returns>To be added.</returns>
        <remarks>
            List all event subscriptions from the given location under a specific Azure
            subscription
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListRegionalBySubscriptionForTopicType">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt; ListRegionalBySubscriptionForTopicType (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string location, string topicTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt; ListRegionalBySubscriptionForTopicType(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string location, string topicTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListRegionalBySubscriptionForTopicType(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ListRegionalBySubscriptionForTopicType (operations As IEventSubscriptionsOperations, location As String, topicTypeName As String) As IEnumerable(Of EventSubscription)" />
      <MemberSignature Language="F#" Value="static member ListRegionalBySubscriptionForTopicType : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string * string -&gt; seq&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListRegionalBySubscriptionForTopicType (operations, location, topicTypeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="location" Type="System.String" />
        <Parameter Name="topicTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="location">
            Name of the location
            </param>
        <param name="topicTypeName">
            Name of the topic type
            </param>
        <summary>
            List all regional event subscriptions under an Azure subscription for a
            topic type
            </summary>
        <returns>To be added.</returns>
        <remarks>
            List all event subscriptions from the given location under a specific Azure
            subscription and topic type.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListRegionalBySubscriptionForTopicTypeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt; ListRegionalBySubscriptionForTopicTypeAsync (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string location, string topicTypeName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt; ListRegionalBySubscriptionForTopicTypeAsync(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string location, string topicTypeName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListRegionalBySubscriptionForTopicTypeAsync(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ListRegionalBySubscriptionForTopicTypeAsync : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt;" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.ListRegionalBySubscriptionForTopicTypeAsync (operations, location, topicTypeName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="location" Type="System.String" />
        <Parameter Name="topicTypeName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="location">
            Name of the location
            </param>
        <param name="topicTypeName">
            Name of the topic type
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            List all regional event subscriptions under an Azure subscription for a
            topic type
            </summary>
        <returns>To be added.</returns>
        <remarks>
            List all event subscriptions from the given location under a specific Azure
            subscription and topic type.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Management.EventGrid.Models.EventSubscription Update (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName, Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionUpdateParameters eventSubscriptionUpdateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Management.EventGrid.Models.EventSubscription Update(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName, class Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionUpdateParameters eventSubscriptionUpdateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.Update(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String,System.String,Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionUpdateParameters)" />
      <MemberSignature Language="F#" Value="static member Update : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string * string * Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionUpdateParameters -&gt; Microsoft.Azure.Management.EventGrid.Models.EventSubscription" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.Update (operations, scope, eventSubscriptionName, eventSubscriptionUpdateParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.EventGrid.Models.EventSubscription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="eventSubscriptionName" Type="System.String" />
        <Parameter Name="eventSubscriptionUpdateParameters" Type="Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionUpdateParameters" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="scope">
            The scope of existing event subscription. The scope can be a subscription,
            or a resource group, or a top level resource belonging to a resource
            provider namespace, or an EventGrid topic. For example, use
            '/subscriptions/{subscriptionId}/' for a subscription,
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a
            resource group, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
            for a resource, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'
            for an EventGrid topic.
            </param>
        <param name="eventSubscriptionName">
            Name of the event subscription to be created
            </param>
        <param name="eventSubscriptionUpdateParameters">
            Updated event subscription information
            </param>
        <summary>
            Update an event subscription
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Asynchronously updates an existing event subscription.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt; UpdateAsync (this Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName, Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionUpdateParameters eventSubscriptionUpdateParameters, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt; UpdateAsync(class Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations operations, string scope, string eventSubscriptionName, class Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionUpdateParameters eventSubscriptionUpdateParameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations,System.String,System.String,Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionUpdateParameters,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member UpdateAsync : Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations * string * string * Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionUpdateParameters * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;" Usage="Microsoft.Azure.Management.EventGrid.EventSubscriptionsOperationsExtensions.UpdateAsync (operations, scope, eventSubscriptionName, eventSubscriptionUpdateParameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.EventGrid.Models.EventSubscription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.EventGrid.IEventSubscriptionsOperations" RefType="this" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="eventSubscriptionName" Type="System.String" />
        <Parameter Name="eventSubscriptionUpdateParameters" Type="Microsoft.Azure.Management.EventGrid.Models.EventSubscriptionUpdateParameters" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="scope">
            The scope of existing event subscription. The scope can be a subscription,
            or a resource group, or a top level resource belonging to a resource
            provider namespace, or an EventGrid topic. For example, use
            '/subscriptions/{subscriptionId}/' for a subscription,
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a
            resource group, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
            for a resource, and
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'
            for an EventGrid topic.
            </param>
        <param name="eventSubscriptionName">
            Name of the event subscription to be created
            </param>
        <param name="eventSubscriptionUpdateParameters">
            Updated event subscription information
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Update an event subscription
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Asynchronously updates an existing event subscription.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>