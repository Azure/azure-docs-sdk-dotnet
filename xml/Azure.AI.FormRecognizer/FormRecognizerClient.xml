<Type Name="FormRecognizerClient" FullName="Azure.AI.FormRecognizer.FormRecognizerClient">
  <TypeSignature Language="C#" Value="public class FormRecognizerClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormRecognizerClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.FormRecognizer.FormRecognizerClient" />
  <TypeSignature Language="VB.NET" Value="Public Class FormRecognizerClient" />
  <TypeSignature Language="F#" Value="type FormRecognizerClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The client to use to connect to the Form Recognizer Azure Cognitive Service to recognize
            information from forms and images and extract it into structured data. It provides the ability to analyze receipts,
            to recognize form content, and to extract fields from custom forms with models trained on custom form types.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FormRecognizerClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.FormRecognizerClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.FormRecognizer.FormRecognizerClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormRecognizerClient (Uri endpoint, Azure.AzureKeyCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.FormRecognizerClient.#ctor(System.Uri,Azure.AzureKeyCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As AzureKeyCredential)" />
      <MemberSignature Language="F#" Value="new Azure.AI.FormRecognizer.FormRecognizerClient : Uri * Azure.AzureKeyCredential -&gt; Azure.AI.FormRecognizer.FormRecognizerClient" Usage="new Azure.AI.FormRecognizer.FormRecognizerClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">The endpoint to use for connecting to the Form Recognizer Azure Cognitive Service.</param>
        <param name="credential">A credential used to authenticate to an Azure Service.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.FormRecognizer.FormRecognizerClient" /> class.
            </summary>
        <remarks>
            Both the <paramref name="endpoint" /> URI string and the <paramref name="credential" /><c>string</c> key
            can be found in the Azure Portal.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormRecognizerClient (Uri endpoint, Azure.Core.TokenCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.FormRecognizerClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.AI.FormRecognizer.FormRecognizerClient : Uri * Azure.Core.TokenCredential -&gt; Azure.AI.FormRecognizer.FormRecognizerClient" Usage="new Azure.AI.FormRecognizer.FormRecognizerClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">The endpoint to use for connecting to the Form Recognizer Azure Cognitive Service.</param>
        <param name="credential">A credential used to authenticate to an Azure Service.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.FormRecognizer.FormRecognizerClient" /> class.
            </summary>
        <remarks>
            The <paramref name="endpoint" /> URI string can be found in the Azure Portal.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormRecognizerClient (Uri endpoint, Azure.AzureKeyCredential credential, Azure.AI.FormRecognizer.FormRecognizerClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential credential, class Azure.AI.FormRecognizer.FormRecognizerClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.FormRecognizerClient.#ctor(System.Uri,Azure.AzureKeyCredential,Azure.AI.FormRecognizer.FormRecognizerClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As AzureKeyCredential, options As FormRecognizerClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.AI.FormRecognizer.FormRecognizerClient : Uri * Azure.AzureKeyCredential * Azure.AI.FormRecognizer.FormRecognizerClientOptions -&gt; Azure.AI.FormRecognizer.FormRecognizerClient" Usage="new Azure.AI.FormRecognizer.FormRecognizerClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
        <Parameter Name="options" Type="Azure.AI.FormRecognizer.FormRecognizerClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">The endpoint to use for connecting to the Form Recognizer Azure Cognitive Service.</param>
        <param name="credential">A credential used to authenticate to an Azure Service.</param>
        <param name="options">A set of options to apply when configuring the client.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.FormRecognizer.FormRecognizerClient" /> class.
            </summary>
        <remarks>
            Both the <paramref name="endpoint" /> URI string and the <paramref name="credential" /><c>string</c> key
            can be found in the Azure Portal.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormRecognizerClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.AI.FormRecognizer.FormRecognizerClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.AI.FormRecognizer.FormRecognizerClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.FormRecognizerClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.AI.FormRecognizer.FormRecognizerClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, options As FormRecognizerClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.AI.FormRecognizer.FormRecognizerClient : Uri * Azure.Core.TokenCredential * Azure.AI.FormRecognizer.FormRecognizerClientOptions -&gt; Azure.AI.FormRecognizer.FormRecognizerClient" Usage="new Azure.AI.FormRecognizer.FormRecognizerClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.AI.FormRecognizer.FormRecognizerClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">The endpoint to use for connecting to the Form Recognizer Azure Cognitive Service.</param>
        <param name="credential">A credential used to authenticate to an Azure Service.</param>
        <param name="options">A set of options to apply when configuring the client.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.FormRecognizer.FormRecognizerClient" /> class.
            </summary>
        <remarks>
            The <paramref name="endpoint" /> URI string can be found in the Azure Portal.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRecognizeContent">
      <MemberSignature Language="C#" Value="public virtual Azure.AI.FormRecognizer.Models.RecognizeContentOperation StartRecognizeContent (System.IO.Stream form, Azure.AI.FormRecognizer.Models.RecognizeOptions recognizeOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AI.FormRecognizer.Models.RecognizeContentOperation StartRecognizeContent(class System.IO.Stream form, class Azure.AI.FormRecognizer.Models.RecognizeOptions recognizeOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.FormRecognizerClient.StartRecognizeContent(System.IO.Stream,Azure.AI.FormRecognizer.Models.RecognizeOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRecognizeContent (form As Stream, Optional recognizeOptions As RecognizeOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As RecognizeContentOperation" />
      <MemberSignature Language="F#" Value="abstract member StartRecognizeContent : System.IO.Stream * Azure.AI.FormRecognizer.Models.RecognizeOptions * System.Threading.CancellationToken -&gt; Azure.AI.FormRecognizer.Models.RecognizeContentOperation&#xA;override this.StartRecognizeContent : System.IO.Stream * Azure.AI.FormRecognizer.Models.RecognizeOptions * System.Threading.CancellationToken -&gt; Azure.AI.FormRecognizer.Models.RecognizeContentOperation" Usage="formRecognizerClient.StartRecognizeContent (form, recognizeOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.FormRecognizer.Models.RecognizeContentOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="form" Type="System.IO.Stream" />
        <Parameter Name="recognizeOptions" Type="Azure.AI.FormRecognizer.Models.RecognizeOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="form">The stream containing one or more forms to recognize elements from.</param>
        <param name="recognizeOptions">A set of options available for configuring the recognize request.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Recognizes layout elements from one or more passed-in forms.
            </summary>
        <returns>A <see cref="T:Azure.AI.FormRecognizer.Models.RecognizeContentOperation" /> to wait on this long-running operation.  Its <see cref="P:Azure.AI.FormRecognizer.Models.RecognizeContentOperation.Value" /> upon successful
            completion will contain layout elements extracted from the form.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRecognizeContentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Models.RecognizeContentOperation&gt; StartRecognizeContentAsync (System.IO.Stream form, Azure.AI.FormRecognizer.Models.RecognizeOptions recognizeOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.AI.FormRecognizer.Models.RecognizeContentOperation&gt; StartRecognizeContentAsync(class System.IO.Stream form, class Azure.AI.FormRecognizer.Models.RecognizeOptions recognizeOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.FormRecognizerClient.StartRecognizeContentAsync(System.IO.Stream,Azure.AI.FormRecognizer.Models.RecognizeOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRecognizeContentAsync (form As Stream, Optional recognizeOptions As RecognizeOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of RecognizeContentOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartRecognizeContentAsync : System.IO.Stream * Azure.AI.FormRecognizer.Models.RecognizeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Models.RecognizeContentOperation&gt;&#xA;override this.StartRecognizeContentAsync : System.IO.Stream * Azure.AI.FormRecognizer.Models.RecognizeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Models.RecognizeContentOperation&gt;" Usage="formRecognizerClient.StartRecognizeContentAsync (form, recognizeOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Models.RecognizeContentOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="form" Type="System.IO.Stream" />
        <Parameter Name="recognizeOptions" Type="Azure.AI.FormRecognizer.Models.RecognizeOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="form">The stream containing one or more forms to recognize elements from.</param>
        <param name="recognizeOptions">A set of options available for configuring the recognize request.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Recognizes layout elements from one or more passed-in forms.
            </summary>
        <returns>A <see cref="T:Azure.AI.FormRecognizer.Models.RecognizeContentOperation" /> to wait on this long-running operation.  Its <see cref="P:Azure.AI.FormRecognizer.Models.RecognizeContentOperation.Value" /> upon successful
            completion will contain layout elements extracted from the form.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRecognizeContentFromUri">
      <MemberSignature Language="C#" Value="public virtual Azure.AI.FormRecognizer.Models.RecognizeContentOperation StartRecognizeContentFromUri (Uri formUri, Azure.AI.FormRecognizer.Models.RecognizeOptions recognizeOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AI.FormRecognizer.Models.RecognizeContentOperation StartRecognizeContentFromUri(class System.Uri formUri, class Azure.AI.FormRecognizer.Models.RecognizeOptions recognizeOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.FormRecognizerClient.StartRecognizeContentFromUri(System.Uri,Azure.AI.FormRecognizer.Models.RecognizeOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRecognizeContentFromUri (formUri As Uri, Optional recognizeOptions As RecognizeOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As RecognizeContentOperation" />
      <MemberSignature Language="F#" Value="abstract member StartRecognizeContentFromUri : Uri * Azure.AI.FormRecognizer.Models.RecognizeOptions * System.Threading.CancellationToken -&gt; Azure.AI.FormRecognizer.Models.RecognizeContentOperation&#xA;override this.StartRecognizeContentFromUri : Uri * Azure.AI.FormRecognizer.Models.RecognizeOptions * System.Threading.CancellationToken -&gt; Azure.AI.FormRecognizer.Models.RecognizeContentOperation" Usage="formRecognizerClient.StartRecognizeContentFromUri (formUri, recognizeOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.FormRecognizer.Models.RecognizeContentOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formUri" Type="System.Uri" />
        <Parameter Name="recognizeOptions" Type="Azure.AI.FormRecognizer.Models.RecognizeOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="formUri">The absolute URI of the remote file to recognize elements from.</param>
        <param name="recognizeOptions">A set of options available for configuring the recognize request.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Recognizes layout elements from one or more passed-in forms.
            </summary>
        <returns>A <see cref="T:Azure.AI.FormRecognizer.Models.RecognizeContentOperation" /> to wait on this long-running operation.  Its <see cref="P:Azure.AI.FormRecognizer.Models.RecognizeContentOperation.Value" /> upon successful
            completion will contain layout elements extracted from the form.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRecognizeContentFromUriAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Models.RecognizeContentOperation&gt; StartRecognizeContentFromUriAsync (Uri formUri, Azure.AI.FormRecognizer.Models.RecognizeOptions recognizeOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.AI.FormRecognizer.Models.RecognizeContentOperation&gt; StartRecognizeContentFromUriAsync(class System.Uri formUri, class Azure.AI.FormRecognizer.Models.RecognizeOptions recognizeOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.FormRecognizerClient.StartRecognizeContentFromUriAsync(System.Uri,Azure.AI.FormRecognizer.Models.RecognizeOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRecognizeContentFromUriAsync (formUri As Uri, Optional recognizeOptions As RecognizeOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of RecognizeContentOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartRecognizeContentFromUriAsync : Uri * Azure.AI.FormRecognizer.Models.RecognizeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Models.RecognizeContentOperation&gt;&#xA;override this.StartRecognizeContentFromUriAsync : Uri * Azure.AI.FormRecognizer.Models.RecognizeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Models.RecognizeContentOperation&gt;" Usage="formRecognizerClient.StartRecognizeContentFromUriAsync (formUri, recognizeOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Models.RecognizeContentOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formUri" Type="System.Uri" />
        <Parameter Name="recognizeOptions" Type="Azure.AI.FormRecognizer.Models.RecognizeOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="formUri">The absolute URI of the remote file to recognize elements from.</param>
        <param name="recognizeOptions">A set of options available for configuring the recognize request.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Recognizes layout elements from one or more passed-in forms.
            </summary>
        <returns>A <see cref="T:Azure.AI.FormRecognizer.Models.RecognizeContentOperation" /> to wait on this long-running operation.  Its <see cref="P:Azure.AI.FormRecognizer.Models.RecognizeContentOperation.Value" /> upon successful
            completion will contain layout elements extracted from the form.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRecognizeCustomForms">
      <MemberSignature Language="C#" Value="public virtual Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation StartRecognizeCustomForms (string modelId, System.IO.Stream formFileStream, Azure.AI.FormRecognizer.Models.RecognizeOptions recognizeOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation StartRecognizeCustomForms(string modelId, class System.IO.Stream formFileStream, class Azure.AI.FormRecognizer.Models.RecognizeOptions recognizeOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.FormRecognizerClient.StartRecognizeCustomForms(System.String,System.IO.Stream,Azure.AI.FormRecognizer.Models.RecognizeOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRecognizeCustomForms (modelId As String, formFileStream As Stream, Optional recognizeOptions As RecognizeOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As RecognizeCustomFormsOperation" />
      <MemberSignature Language="F#" Value="abstract member StartRecognizeCustomForms : string * System.IO.Stream * Azure.AI.FormRecognizer.Models.RecognizeOptions * System.Threading.CancellationToken -&gt; Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation&#xA;override this.StartRecognizeCustomForms : string * System.IO.Stream * Azure.AI.FormRecognizer.Models.RecognizeOptions * System.Threading.CancellationToken -&gt; Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation" Usage="formRecognizerClient.StartRecognizeCustomForms (modelId, formFileStream, recognizeOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.String" />
        <Parameter Name="formFileStream" Type="System.IO.Stream" />
        <Parameter Name="recognizeOptions" Type="Azure.AI.FormRecognizer.Models.RecognizeOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId">The ID of the model to use for recognizing form values.</param>
        <param name="formFileStream">The stream containing one or more forms to recognize elements from.</param>
        <param name="recognizeOptions">A set of options available for configuring the recognize request.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Recognizes pages from one or more forms, using a model trained with custom forms.
            </summary>
        <returns>A <see cref="T:Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation" /> to wait on this long-running operation.  Its <see cref="P:Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation.Value" /> upon successful
            completion will contain recognized pages from the input document.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRecognizeCustomFormsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation&gt; StartRecognizeCustomFormsAsync (string modelId, System.IO.Stream formFileStream, Azure.AI.FormRecognizer.Models.RecognizeOptions recognizeOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation&gt; StartRecognizeCustomFormsAsync(string modelId, class System.IO.Stream formFileStream, class Azure.AI.FormRecognizer.Models.RecognizeOptions recognizeOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.FormRecognizerClient.StartRecognizeCustomFormsAsync(System.String,System.IO.Stream,Azure.AI.FormRecognizer.Models.RecognizeOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRecognizeCustomFormsAsync (modelId As String, formFileStream As Stream, Optional recognizeOptions As RecognizeOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of RecognizeCustomFormsOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartRecognizeCustomFormsAsync : string * System.IO.Stream * Azure.AI.FormRecognizer.Models.RecognizeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation&gt;&#xA;override this.StartRecognizeCustomFormsAsync : string * System.IO.Stream * Azure.AI.FormRecognizer.Models.RecognizeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation&gt;" Usage="formRecognizerClient.StartRecognizeCustomFormsAsync (modelId, formFileStream, recognizeOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.String" />
        <Parameter Name="formFileStream" Type="System.IO.Stream" />
        <Parameter Name="recognizeOptions" Type="Azure.AI.FormRecognizer.Models.RecognizeOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId">The ID of the model to use for recognizing form values.</param>
        <param name="formFileStream">The stream containing one or more forms to recognize elements from.</param>
        <param name="recognizeOptions">A set of options available for configuring the recognize request.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Recognizes pages from one or more forms, using a model trained with custom forms.
            </summary>
        <returns>A <see cref="T:Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation" /> to wait on this long-running operation.  Its <see cref="P:Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation.Value" /> upon successful
            completion will contain recognized pages from the input document.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRecognizeCustomFormsFromUri">
      <MemberSignature Language="C#" Value="public virtual Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation StartRecognizeCustomFormsFromUri (string modelId, Uri formFileUri, Azure.AI.FormRecognizer.Models.RecognizeOptions recognizeOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation StartRecognizeCustomFormsFromUri(string modelId, class System.Uri formFileUri, class Azure.AI.FormRecognizer.Models.RecognizeOptions recognizeOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.FormRecognizerClient.StartRecognizeCustomFormsFromUri(System.String,System.Uri,Azure.AI.FormRecognizer.Models.RecognizeOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRecognizeCustomFormsFromUri (modelId As String, formFileUri As Uri, Optional recognizeOptions As RecognizeOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As RecognizeCustomFormsOperation" />
      <MemberSignature Language="F#" Value="abstract member StartRecognizeCustomFormsFromUri : string * Uri * Azure.AI.FormRecognizer.Models.RecognizeOptions * System.Threading.CancellationToken -&gt; Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation&#xA;override this.StartRecognizeCustomFormsFromUri : string * Uri * Azure.AI.FormRecognizer.Models.RecognizeOptions * System.Threading.CancellationToken -&gt; Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation" Usage="formRecognizerClient.StartRecognizeCustomFormsFromUri (modelId, formFileUri, recognizeOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.String" />
        <Parameter Name="formFileUri" Type="System.Uri" />
        <Parameter Name="recognizeOptions" Type="Azure.AI.FormRecognizer.Models.RecognizeOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId">The ID of the model to use for recognizing form values.</param>
        <param name="formFileUri">The absolute URI of the remote file to recognize elements from.</param>
        <param name="recognizeOptions">A set of options available for configuring the recognize request.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Recognizes pages from one or more forms, using a model trained with custom forms.
            </summary>
        <returns>A <see cref="T:Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation" /> to wait on this long-running operation.  Its <see cref="P:Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation.Value" /> upon successful
            completion will contain recognized pages from the input document.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRecognizeCustomFormsFromUriAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation&gt; StartRecognizeCustomFormsFromUriAsync (string modelId, Uri formFileUri, Azure.AI.FormRecognizer.Models.RecognizeOptions recognizeOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation&gt; StartRecognizeCustomFormsFromUriAsync(string modelId, class System.Uri formFileUri, class Azure.AI.FormRecognizer.Models.RecognizeOptions recognizeOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.FormRecognizerClient.StartRecognizeCustomFormsFromUriAsync(System.String,System.Uri,Azure.AI.FormRecognizer.Models.RecognizeOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRecognizeCustomFormsFromUriAsync (modelId As String, formFileUri As Uri, Optional recognizeOptions As RecognizeOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of RecognizeCustomFormsOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartRecognizeCustomFormsFromUriAsync : string * Uri * Azure.AI.FormRecognizer.Models.RecognizeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation&gt;&#xA;override this.StartRecognizeCustomFormsFromUriAsync : string * Uri * Azure.AI.FormRecognizer.Models.RecognizeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation&gt;" Usage="formRecognizerClient.StartRecognizeCustomFormsFromUriAsync (modelId, formFileUri, recognizeOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.String" />
        <Parameter Name="formFileUri" Type="System.Uri" />
        <Parameter Name="recognizeOptions" Type="Azure.AI.FormRecognizer.Models.RecognizeOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId">The ID of the model to use for recognizing form values.</param>
        <param name="formFileUri">The absolute URI of the remote file to recognize elements from.</param>
        <param name="recognizeOptions">A set of options available for configuring the recognize request.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Recognizes pages from one or more forms, using a model trained with custom forms.
            </summary>
        <returns>A <see cref="T:Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation" /> to wait on this long-running operation.  Its <see cref="P:Azure.AI.FormRecognizer.Models.RecognizeCustomFormsOperation.Value" /> upon successful
            completion will contain recognized pages from the input document.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRecognizeReceipts">
      <MemberSignature Language="C#" Value="public virtual Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation StartRecognizeReceipts (System.IO.Stream receipt, Azure.AI.FormRecognizer.Models.RecognizeOptions recognizeOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation StartRecognizeReceipts(class System.IO.Stream receipt, class Azure.AI.FormRecognizer.Models.RecognizeOptions recognizeOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.FormRecognizerClient.StartRecognizeReceipts(System.IO.Stream,Azure.AI.FormRecognizer.Models.RecognizeOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRecognizeReceipts (receipt As Stream, Optional recognizeOptions As RecognizeOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As RecognizeReceiptsOperation" />
      <MemberSignature Language="F#" Value="abstract member StartRecognizeReceipts : System.IO.Stream * Azure.AI.FormRecognizer.Models.RecognizeOptions * System.Threading.CancellationToken -&gt; Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation&#xA;override this.StartRecognizeReceipts : System.IO.Stream * Azure.AI.FormRecognizer.Models.RecognizeOptions * System.Threading.CancellationToken -&gt; Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation" Usage="formRecognizerClient.StartRecognizeReceipts (receipt, recognizeOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receipt" Type="System.IO.Stream" />
        <Parameter Name="recognizeOptions" Type="Azure.AI.FormRecognizer.Models.RecognizeOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="receipt">The stream containing the one or more receipts to recognize values from.</param>
        <param name="recognizeOptions">A set of options available for configuring the recognize request.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Recognizes values from one or more receipts.
            </summary>
        <returns>A <see cref="T:Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation" /> to wait on this long-running operation.  Its <see cref="P:Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation.Value" /> upon successful
            completion will contain the extracted receipt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRecognizeReceiptsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation&gt; StartRecognizeReceiptsAsync (System.IO.Stream receipt, Azure.AI.FormRecognizer.Models.RecognizeOptions recognizeOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation&gt; StartRecognizeReceiptsAsync(class System.IO.Stream receipt, class Azure.AI.FormRecognizer.Models.RecognizeOptions recognizeOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.FormRecognizerClient.StartRecognizeReceiptsAsync(System.IO.Stream,Azure.AI.FormRecognizer.Models.RecognizeOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRecognizeReceiptsAsync (receipt As Stream, Optional recognizeOptions As RecognizeOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of RecognizeReceiptsOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartRecognizeReceiptsAsync : System.IO.Stream * Azure.AI.FormRecognizer.Models.RecognizeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation&gt;&#xA;override this.StartRecognizeReceiptsAsync : System.IO.Stream * Azure.AI.FormRecognizer.Models.RecognizeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation&gt;" Usage="formRecognizerClient.StartRecognizeReceiptsAsync (receipt, recognizeOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receipt" Type="System.IO.Stream" />
        <Parameter Name="recognizeOptions" Type="Azure.AI.FormRecognizer.Models.RecognizeOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="receipt">The stream containing the one or more receipts to recognize values from.</param>
        <param name="recognizeOptions">A set of options available for configuring the recognize request.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Recognizes values from one or more receipts.
            </summary>
        <returns>A <see cref="T:Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation" /> to wait on this long-running operation.  Its <see cref="P:Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation.Value" /> upon successful
            completion will contain the extracted receipt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRecognizeReceiptsFromUri">
      <MemberSignature Language="C#" Value="public virtual Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation StartRecognizeReceiptsFromUri (Uri receiptUri, Azure.AI.FormRecognizer.Models.RecognizeOptions recognizeOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation StartRecognizeReceiptsFromUri(class System.Uri receiptUri, class Azure.AI.FormRecognizer.Models.RecognizeOptions recognizeOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.FormRecognizerClient.StartRecognizeReceiptsFromUri(System.Uri,Azure.AI.FormRecognizer.Models.RecognizeOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRecognizeReceiptsFromUri (receiptUri As Uri, Optional recognizeOptions As RecognizeOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As RecognizeReceiptsOperation" />
      <MemberSignature Language="F#" Value="abstract member StartRecognizeReceiptsFromUri : Uri * Azure.AI.FormRecognizer.Models.RecognizeOptions * System.Threading.CancellationToken -&gt; Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation&#xA;override this.StartRecognizeReceiptsFromUri : Uri * Azure.AI.FormRecognizer.Models.RecognizeOptions * System.Threading.CancellationToken -&gt; Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation" Usage="formRecognizerClient.StartRecognizeReceiptsFromUri (receiptUri, recognizeOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receiptUri" Type="System.Uri" />
        <Parameter Name="recognizeOptions" Type="Azure.AI.FormRecognizer.Models.RecognizeOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="receiptUri">The absolute URI of the remote file to recognize values from.</param>
        <param name="recognizeOptions">A set of options available for configuring the recognize request.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Recognizes values from one or more receipts.
            </summary>
        <returns>A <see cref="T:Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation" /> to wait on this long-running operation.  Its <see cref="P:Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation.Value" /> upon successful
            completion will contain the extracted receipt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRecognizeReceiptsFromUriAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation&gt; StartRecognizeReceiptsFromUriAsync (Uri receiptUri, Azure.AI.FormRecognizer.Models.RecognizeOptions recognizeOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation&gt; StartRecognizeReceiptsFromUriAsync(class System.Uri receiptUri, class Azure.AI.FormRecognizer.Models.RecognizeOptions recognizeOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.FormRecognizerClient.StartRecognizeReceiptsFromUriAsync(System.Uri,Azure.AI.FormRecognizer.Models.RecognizeOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRecognizeReceiptsFromUriAsync (receiptUri As Uri, Optional recognizeOptions As RecognizeOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of RecognizeReceiptsOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartRecognizeReceiptsFromUriAsync : Uri * Azure.AI.FormRecognizer.Models.RecognizeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation&gt;&#xA;override this.StartRecognizeReceiptsFromUriAsync : Uri * Azure.AI.FormRecognizer.Models.RecognizeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation&gt;" Usage="formRecognizerClient.StartRecognizeReceiptsFromUriAsync (receiptUri, recognizeOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receiptUri" Type="System.Uri" />
        <Parameter Name="recognizeOptions" Type="Azure.AI.FormRecognizer.Models.RecognizeOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="receiptUri">The absolute URI of the remote file to recognize values from.</param>
        <param name="recognizeOptions">A set of options available for configuring the recognize request.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Recognizes values from one or more receipts.
            </summary>
        <returns>A <see cref="T:Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation" /> to wait on this long-running operation.  Its <see cref="P:Azure.AI.FormRecognizer.Models.RecognizeReceiptsOperation.Value" /> upon successful
            completion will contain the extracted receipt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
