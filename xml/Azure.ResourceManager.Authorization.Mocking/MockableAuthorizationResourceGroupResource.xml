<Type Name="MockableAuthorizationResourceGroupResource" FullName="Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableAuthorizationResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableAuthorizationResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableAuthorizationResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableAuthorizationResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableAuthorizationResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAzurePermissionsForResourceGroups">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission&gt; GetAzurePermissionsForResourceGroups (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission&gt; GetAzurePermissionsForResourceGroups(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationResourceGroupResource.GetAzurePermissionsForResourceGroups(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAzurePermissionsForResourceGroups (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of RoleDefinitionPermission)" />
      <MemberSignature Language="F#" Value="abstract member GetAzurePermissionsForResourceGroups : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission&gt;&#xA;override this.GetAzurePermissionsForResourceGroups : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission&gt;" Usage="mockableAuthorizationResourceGroupResource.GetAzurePermissionsForResourceGroups cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all permissions the caller has for a resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions</description></item><item><term>Operation Id</term><description>AzurePermissionsForResourceGroup_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAzurePermissionsForResourceGroupsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission&gt; GetAzurePermissionsForResourceGroupsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission&gt; GetAzurePermissionsForResourceGroupsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationResourceGroupResource.GetAzurePermissionsForResourceGroupsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAzurePermissionsForResourceGroupsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of RoleDefinitionPermission)" />
      <MemberSignature Language="F#" Value="abstract member GetAzurePermissionsForResourceGroupsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission&gt;&#xA;override this.GetAzurePermissionsForResourceGroupsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission&gt;" Usage="mockableAuthorizationResourceGroupResource.GetAzurePermissionsForResourceGroupsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all permissions the caller has for a resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions</description></item><item><term>Operation Id</term><description>AzurePermissionsForResourceGroup_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAzurePermissionsForResources">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission&gt; GetAzurePermissionsForResources (string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission&gt; GetAzurePermissionsForResources(string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationResourceGroupResource.GetAzurePermissionsForResources(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAzurePermissionsForResources (resourceProviderNamespace As String, parentResourcePath As String, resourceType As String, resourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of RoleDefinitionPermission)" />
      <MemberSignature Language="F#" Value="abstract member GetAzurePermissionsForResources : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission&gt;&#xA;override this.GetAzurePermissionsForResources : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission&gt;" Usage="mockableAuthorizationResourceGroupResource.GetAzurePermissionsForResources (resourceProviderNamespace, parentResourcePath, resourceType, resourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceProviderNamespace" Type="System.String" />
        <Parameter Name="parentResourcePath" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
        <param name="parentResourcePath"> The parent resource identity. </param>
        <param name="resourceType"> The resource type of the resource. </param>
        <param name="resourceName"> The name of the resource to get the permissions for. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all permissions the caller has for a resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions</description></item><item><term>Operation Id</term><description>AzurePermissionsForResource_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceProviderNamespace" />, <paramref name="parentResourcePath" />, <paramref name="resourceType" /> or <paramref name="resourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAzurePermissionsForResourcesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission&gt; GetAzurePermissionsForResourcesAsync (string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission&gt; GetAzurePermissionsForResourcesAsync(string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationResourceGroupResource.GetAzurePermissionsForResourcesAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAzurePermissionsForResourcesAsync (resourceProviderNamespace As String, parentResourcePath As String, resourceType As String, resourceName As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of RoleDefinitionPermission)" />
      <MemberSignature Language="F#" Value="abstract member GetAzurePermissionsForResourcesAsync : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission&gt;&#xA;override this.GetAzurePermissionsForResourcesAsync : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission&gt;" Usage="mockableAuthorizationResourceGroupResource.GetAzurePermissionsForResourcesAsync (resourceProviderNamespace, parentResourcePath, resourceType, resourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceProviderNamespace" Type="System.String" />
        <Parameter Name="parentResourcePath" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
        <param name="parentResourcePath"> The parent resource identity. </param>
        <param name="resourceType"> The resource type of the resource. </param>
        <param name="resourceName"> The name of the resource to get the permissions for. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all permissions the caller has for a resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions</description></item><item><term>Operation Id</term><description>AzurePermissionsForResource_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceProviderNamespace" />, <paramref name="parentResourcePath" />, <paramref name="resourceType" /> or <paramref name="resourceName" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
