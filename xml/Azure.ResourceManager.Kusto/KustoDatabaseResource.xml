<Type Name="KustoDatabaseResource" FullName="Azure.ResourceManager.Kusto.KustoDatabaseResource">
  <TypeSignature Language="C#" Value="public class KustoDatabaseResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KustoDatabaseResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Kusto.KustoDatabaseResource" />
  <TypeSignature Language="VB.NET" Value="Public Class KustoDatabaseResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type KustoDatabaseResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing a KustoDatabase along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Kusto.KustoDatabaseResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetKustoDatabaseResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Kusto.KustoClusterResource" /> using the GetKustoDatabase method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KustoDatabaseResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Kusto.KustoDatabaseResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPrincipals">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal&gt; AddPrincipals (Azure.ResourceManager.Kusto.Models.DatabasePrincipalList databasePrincipalsToAdd, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal&gt; AddPrincipals(class Azure.ResourceManager.Kusto.Models.DatabasePrincipalList databasePrincipalsToAdd, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.AddPrincipals(Azure.ResourceManager.Kusto.Models.DatabasePrincipalList,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddPrincipals (databasePrincipalsToAdd As DatabasePrincipalList, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of KustoDatabasePrincipal)" />
      <MemberSignature Language="F#" Value="abstract member AddPrincipals : Azure.ResourceManager.Kusto.Models.DatabasePrincipalList * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal&gt;&#xA;override this.AddPrincipals : Azure.ResourceManager.Kusto.Models.DatabasePrincipalList * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal&gt;" Usage="kustoDatabaseResource.AddPrincipals (databasePrincipalsToAdd, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databasePrincipalsToAdd" Type="Azure.ResourceManager.Kusto.Models.DatabasePrincipalList" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="databasePrincipalsToAdd"> List of database principals to add. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add Database principals permissions.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/addPrincipals
            Operation Id: Databases_AddPrincipals
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="databasePrincipalsToAdd" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AddPrincipalsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal&gt; AddPrincipalsAsync (Azure.ResourceManager.Kusto.Models.DatabasePrincipalList databasePrincipalsToAdd, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal&gt; AddPrincipalsAsync(class Azure.ResourceManager.Kusto.Models.DatabasePrincipalList databasePrincipalsToAdd, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.AddPrincipalsAsync(Azure.ResourceManager.Kusto.Models.DatabasePrincipalList,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddPrincipalsAsync (databasePrincipalsToAdd As DatabasePrincipalList, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of KustoDatabasePrincipal)" />
      <MemberSignature Language="F#" Value="abstract member AddPrincipalsAsync : Azure.ResourceManager.Kusto.Models.DatabasePrincipalList * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal&gt;&#xA;override this.AddPrincipalsAsync : Azure.ResourceManager.Kusto.Models.DatabasePrincipalList * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal&gt;" Usage="kustoDatabaseResource.AddPrincipalsAsync (databasePrincipalsToAdd, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databasePrincipalsToAdd" Type="Azure.ResourceManager.Kusto.Models.DatabasePrincipalList" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="databasePrincipalsToAdd"> List of database principals to add. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add Database principals permissions.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/addPrincipals
            Operation Id: Databases_AddPrincipals
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="databasePrincipalsToAdd" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckKustoDatabasePrincipalAssignmentNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Kusto.Models.KustoNameAvailabilityResult&gt; CheckKustoDatabasePrincipalAssignmentNameAvailability (Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipalAssignmentNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Kusto.Models.KustoNameAvailabilityResult&gt; CheckKustoDatabasePrincipalAssignmentNameAvailability(class Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipalAssignmentNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.CheckKustoDatabasePrincipalAssignmentNameAvailability(Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipalAssignmentNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckKustoDatabasePrincipalAssignmentNameAvailability (content As KustoDatabasePrincipalAssignmentNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of KustoNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckKustoDatabasePrincipalAssignmentNameAvailability : Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipalAssignmentNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Kusto.Models.KustoNameAvailabilityResult&gt;&#xA;override this.CheckKustoDatabasePrincipalAssignmentNameAvailability : Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipalAssignmentNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Kusto.Models.KustoNameAvailabilityResult&gt;" Usage="kustoDatabaseResource.CheckKustoDatabasePrincipalAssignmentNameAvailability (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Kusto.Models.KustoNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipalAssignmentNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The name of the resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks that the database principal assignment is valid and is not already in use.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/checkPrincipalAssignmentNameAvailability
            Operation Id: DatabasePrincipalAssignments_CheckNameAvailability
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckKustoDatabasePrincipalAssignmentNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.Models.KustoNameAvailabilityResult&gt;&gt; CheckKustoDatabasePrincipalAssignmentNameAvailabilityAsync (Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipalAssignmentNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Kusto.Models.KustoNameAvailabilityResult&gt;&gt; CheckKustoDatabasePrincipalAssignmentNameAvailabilityAsync(class Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipalAssignmentNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.CheckKustoDatabasePrincipalAssignmentNameAvailabilityAsync(Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipalAssignmentNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckKustoDatabasePrincipalAssignmentNameAvailabilityAsync (content As KustoDatabasePrincipalAssignmentNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of KustoNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckKustoDatabasePrincipalAssignmentNameAvailabilityAsync : Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipalAssignmentNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.Models.KustoNameAvailabilityResult&gt;&gt;&#xA;override this.CheckKustoDatabasePrincipalAssignmentNameAvailabilityAsync : Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipalAssignmentNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.Models.KustoNameAvailabilityResult&gt;&gt;" Usage="kustoDatabaseResource.CheckKustoDatabasePrincipalAssignmentNameAvailabilityAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.Models.KustoNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipalAssignmentNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The name of the resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks that the database principal assignment is valid and is not already in use.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/checkPrincipalAssignmentNameAvailability
            Operation Id: DatabasePrincipalAssignments_CheckNameAvailability
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckKustoDataConnectionNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Kusto.Models.KustoNameAvailabilityResult&gt; CheckKustoDataConnectionNameAvailability (Azure.ResourceManager.Kusto.Models.KustoDataConnectionNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Kusto.Models.KustoNameAvailabilityResult&gt; CheckKustoDataConnectionNameAvailability(class Azure.ResourceManager.Kusto.Models.KustoDataConnectionNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.CheckKustoDataConnectionNameAvailability(Azure.ResourceManager.Kusto.Models.KustoDataConnectionNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckKustoDataConnectionNameAvailability (content As KustoDataConnectionNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of KustoNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckKustoDataConnectionNameAvailability : Azure.ResourceManager.Kusto.Models.KustoDataConnectionNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Kusto.Models.KustoNameAvailabilityResult&gt;&#xA;override this.CheckKustoDataConnectionNameAvailability : Azure.ResourceManager.Kusto.Models.KustoDataConnectionNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Kusto.Models.KustoNameAvailabilityResult&gt;" Usage="kustoDatabaseResource.CheckKustoDataConnectionNameAvailability (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Kusto.Models.KustoNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Kusto.Models.KustoDataConnectionNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The name of the data connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks that the data connection name is valid and is not already in use.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/checkNameAvailability
            Operation Id: DataConnections_CheckNameAvailability
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckKustoDataConnectionNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.Models.KustoNameAvailabilityResult&gt;&gt; CheckKustoDataConnectionNameAvailabilityAsync (Azure.ResourceManager.Kusto.Models.KustoDataConnectionNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Kusto.Models.KustoNameAvailabilityResult&gt;&gt; CheckKustoDataConnectionNameAvailabilityAsync(class Azure.ResourceManager.Kusto.Models.KustoDataConnectionNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.CheckKustoDataConnectionNameAvailabilityAsync(Azure.ResourceManager.Kusto.Models.KustoDataConnectionNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckKustoDataConnectionNameAvailabilityAsync (content As KustoDataConnectionNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of KustoNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckKustoDataConnectionNameAvailabilityAsync : Azure.ResourceManager.Kusto.Models.KustoDataConnectionNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.Models.KustoNameAvailabilityResult&gt;&gt;&#xA;override this.CheckKustoDataConnectionNameAvailabilityAsync : Azure.ResourceManager.Kusto.Models.KustoDataConnectionNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.Models.KustoNameAvailabilityResult&gt;&gt;" Usage="kustoDatabaseResource.CheckKustoDataConnectionNameAvailabilityAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.Models.KustoNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Kusto.Models.KustoDataConnectionNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The name of the data connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks that the data connection name is valid and is not already in use.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/checkNameAvailability
            Operation Id: DataConnections_CheckNameAvailability
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckKustoScriptNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Kusto.Models.KustoNameAvailabilityResult&gt; CheckKustoScriptNameAvailability (Azure.ResourceManager.Kusto.Models.KustoScriptNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Kusto.Models.KustoNameAvailabilityResult&gt; CheckKustoScriptNameAvailability(class Azure.ResourceManager.Kusto.Models.KustoScriptNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.CheckKustoScriptNameAvailability(Azure.ResourceManager.Kusto.Models.KustoScriptNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckKustoScriptNameAvailability (content As KustoScriptNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of KustoNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckKustoScriptNameAvailability : Azure.ResourceManager.Kusto.Models.KustoScriptNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Kusto.Models.KustoNameAvailabilityResult&gt;&#xA;override this.CheckKustoScriptNameAvailability : Azure.ResourceManager.Kusto.Models.KustoScriptNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Kusto.Models.KustoNameAvailabilityResult&gt;" Usage="kustoDatabaseResource.CheckKustoScriptNameAvailability (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Kusto.Models.KustoNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Kusto.Models.KustoScriptNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The name of the script. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks that the script name is valid and is not already in use.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/scriptsCheckNameAvailability
            Operation Id: Scripts_CheckNameAvailability
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckKustoScriptNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.Models.KustoNameAvailabilityResult&gt;&gt; CheckKustoScriptNameAvailabilityAsync (Azure.ResourceManager.Kusto.Models.KustoScriptNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Kusto.Models.KustoNameAvailabilityResult&gt;&gt; CheckKustoScriptNameAvailabilityAsync(class Azure.ResourceManager.Kusto.Models.KustoScriptNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.CheckKustoScriptNameAvailabilityAsync(Azure.ResourceManager.Kusto.Models.KustoScriptNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckKustoScriptNameAvailabilityAsync (content As KustoScriptNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of KustoNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckKustoScriptNameAvailabilityAsync : Azure.ResourceManager.Kusto.Models.KustoScriptNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.Models.KustoNameAvailabilityResult&gt;&gt;&#xA;override this.CheckKustoScriptNameAvailabilityAsync : Azure.ResourceManager.Kusto.Models.KustoScriptNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.Models.KustoNameAvailabilityResult&gt;&gt;" Usage="kustoDatabaseResource.CheckKustoScriptNameAvailabilityAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.Models.KustoNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Kusto.Models.KustoScriptNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> The name of the script. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks that the script name is valid and is not already in use.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/scriptsCheckNameAvailability
            Operation Id: Scripts_CheckNameAvailability
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string clusterName, string databaseName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string clusterName, string databaseName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, clusterName As String, databaseName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.Kusto.KustoDatabaseResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, clusterName, databaseName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">To be added.</param>
        <param name="resourceGroupName">To be added.</param>
        <param name="clusterName">To be added.</param>
        <param name="databaseName">To be added.</param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Kusto.KustoDatabaseResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Kusto.KustoDatabaseData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Kusto.KustoDatabaseData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Kusto.KustoDatabaseResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As KustoDatabaseData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.Kusto.KustoDatabaseData" Usage="Azure.ResourceManager.Kusto.KustoDatabaseResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Kusto.KustoDatabaseData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="kustoDatabaseResource.Delete (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes the database with the given name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}
            Operation Id: Databases_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="kustoDatabaseResource.DeleteAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes the database with the given name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}
            Operation Id: Databases_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Kusto.KustoDatabaseResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Kusto.KustoDatabaseResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of KustoDatabaseResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Kusto.KustoDatabaseResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Kusto.KustoDatabaseResource&gt;" Usage="kustoDatabaseResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Kusto.KustoDatabaseResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a database.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}
            Operation Id: Databases_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.KustoDatabaseResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Kusto.KustoDatabaseResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of KustoDatabaseResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.KustoDatabaseResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.KustoDatabaseResource&gt;&gt;" Usage="kustoDatabaseResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.KustoDatabaseResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a database.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}
            Operation Id: Databases_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKustoDatabasePrincipalAssignment">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Kusto.KustoDatabasePrincipalAssignmentResource&gt; GetKustoDatabasePrincipalAssignment (string principalAssignmentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Kusto.KustoDatabasePrincipalAssignmentResource&gt; GetKustoDatabasePrincipalAssignment(string principalAssignmentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.GetKustoDatabasePrincipalAssignment(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKustoDatabasePrincipalAssignment (principalAssignmentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of KustoDatabasePrincipalAssignmentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetKustoDatabasePrincipalAssignment : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Kusto.KustoDatabasePrincipalAssignmentResource&gt;&#xA;override this.GetKustoDatabasePrincipalAssignment : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Kusto.KustoDatabasePrincipalAssignmentResource&gt;" Usage="kustoDatabaseResource.GetKustoDatabasePrincipalAssignment (principalAssignmentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Kusto.KustoDatabasePrincipalAssignmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalAssignmentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="principalAssignmentName"> The name of the Kusto principalAssignment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a Kusto cluster database principalAssignment.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/principalAssignments/{principalAssignmentName}
            Operation Id: DatabasePrincipalAssignments_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="principalAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="principalAssignmentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKustoDatabasePrincipalAssignmentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.KustoDatabasePrincipalAssignmentResource&gt;&gt; GetKustoDatabasePrincipalAssignmentAsync (string principalAssignmentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Kusto.KustoDatabasePrincipalAssignmentResource&gt;&gt; GetKustoDatabasePrincipalAssignmentAsync(string principalAssignmentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.GetKustoDatabasePrincipalAssignmentAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKustoDatabasePrincipalAssignmentAsync (principalAssignmentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of KustoDatabasePrincipalAssignmentResource))" />
      <MemberSignature Language="F#" Value="abstract member GetKustoDatabasePrincipalAssignmentAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.KustoDatabasePrincipalAssignmentResource&gt;&gt;&#xA;override this.GetKustoDatabasePrincipalAssignmentAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.KustoDatabasePrincipalAssignmentResource&gt;&gt;" Usage="kustoDatabaseResource.GetKustoDatabasePrincipalAssignmentAsync (principalAssignmentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.KustoDatabasePrincipalAssignmentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalAssignmentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="principalAssignmentName"> The name of the Kusto principalAssignment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a Kusto cluster database principalAssignment.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/principalAssignments/{principalAssignmentName}
            Operation Id: DatabasePrincipalAssignments_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="principalAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="principalAssignmentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKustoDatabasePrincipalAssignments">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Kusto.KustoDatabasePrincipalAssignmentCollection GetKustoDatabasePrincipalAssignments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Kusto.KustoDatabasePrincipalAssignmentCollection GetKustoDatabasePrincipalAssignments() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.GetKustoDatabasePrincipalAssignments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKustoDatabasePrincipalAssignments () As KustoDatabasePrincipalAssignmentCollection" />
      <MemberSignature Language="F#" Value="abstract member GetKustoDatabasePrincipalAssignments : unit -&gt; Azure.ResourceManager.Kusto.KustoDatabasePrincipalAssignmentCollection&#xA;override this.GetKustoDatabasePrincipalAssignments : unit -&gt; Azure.ResourceManager.Kusto.KustoDatabasePrincipalAssignmentCollection" Usage="kustoDatabaseResource.GetKustoDatabasePrincipalAssignments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Kusto.KustoDatabasePrincipalAssignmentCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of KustoDatabasePrincipalAssignmentResources in the KustoDatabase. </summary>
        <returns> An object representing collection of KustoDatabasePrincipalAssignmentResources and their operations over a KustoDatabasePrincipalAssignmentResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKustoDataConnection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Kusto.KustoDataConnectionResource&gt; GetKustoDataConnection (string dataConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Kusto.KustoDataConnectionResource&gt; GetKustoDataConnection(string dataConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.GetKustoDataConnection(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKustoDataConnection (dataConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of KustoDataConnectionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetKustoDataConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Kusto.KustoDataConnectionResource&gt;&#xA;override this.GetKustoDataConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Kusto.KustoDataConnectionResource&gt;" Usage="kustoDatabaseResource.GetKustoDataConnection (dataConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Kusto.KustoDataConnectionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataConnectionName"> The name of the data connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a data connection.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/dataConnections/{dataConnectionName}
            Operation Id: DataConnections_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKustoDataConnectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.KustoDataConnectionResource&gt;&gt; GetKustoDataConnectionAsync (string dataConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Kusto.KustoDataConnectionResource&gt;&gt; GetKustoDataConnectionAsync(string dataConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.GetKustoDataConnectionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKustoDataConnectionAsync (dataConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of KustoDataConnectionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetKustoDataConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.KustoDataConnectionResource&gt;&gt;&#xA;override this.GetKustoDataConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.KustoDataConnectionResource&gt;&gt;" Usage="kustoDatabaseResource.GetKustoDataConnectionAsync (dataConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.KustoDataConnectionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataConnectionName"> The name of the data connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a data connection.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/dataConnections/{dataConnectionName}
            Operation Id: DataConnections_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKustoDataConnections">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Kusto.KustoDataConnectionCollection GetKustoDataConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Kusto.KustoDataConnectionCollection GetKustoDataConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.GetKustoDataConnections" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKustoDataConnections () As KustoDataConnectionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetKustoDataConnections : unit -&gt; Azure.ResourceManager.Kusto.KustoDataConnectionCollection&#xA;override this.GetKustoDataConnections : unit -&gt; Azure.ResourceManager.Kusto.KustoDataConnectionCollection" Usage="kustoDatabaseResource.GetKustoDataConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Kusto.KustoDataConnectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of KustoDataConnectionResources in the KustoDatabase. </summary>
        <returns> An object representing collection of KustoDataConnectionResources and their operations over a KustoDataConnectionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKustoScript">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Kusto.KustoScriptResource&gt; GetKustoScript (string scriptName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Kusto.KustoScriptResource&gt; GetKustoScript(string scriptName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.GetKustoScript(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKustoScript (scriptName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of KustoScriptResource)" />
      <MemberSignature Language="F#" Value="abstract member GetKustoScript : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Kusto.KustoScriptResource&gt;&#xA;override this.GetKustoScript : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Kusto.KustoScriptResource&gt;" Usage="kustoDatabaseResource.GetKustoScript (scriptName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Kusto.KustoScriptResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scriptName"> The name of the Kusto database script. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a Kusto cluster database script.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/scripts/{scriptName}
            Operation Id: Scripts_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="scriptName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scriptName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKustoScriptAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.KustoScriptResource&gt;&gt; GetKustoScriptAsync (string scriptName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Kusto.KustoScriptResource&gt;&gt; GetKustoScriptAsync(string scriptName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.GetKustoScriptAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKustoScriptAsync (scriptName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of KustoScriptResource))" />
      <MemberSignature Language="F#" Value="abstract member GetKustoScriptAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.KustoScriptResource&gt;&gt;&#xA;override this.GetKustoScriptAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.KustoScriptResource&gt;&gt;" Usage="kustoDatabaseResource.GetKustoScriptAsync (scriptName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Kusto.KustoScriptResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scriptName"> The name of the Kusto database script. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a Kusto cluster database script.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/scripts/{scriptName}
            Operation Id: Scripts_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="scriptName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scriptName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKustoScripts">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Kusto.KustoScriptCollection GetKustoScripts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Kusto.KustoScriptCollection GetKustoScripts() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.GetKustoScripts" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKustoScripts () As KustoScriptCollection" />
      <MemberSignature Language="F#" Value="abstract member GetKustoScripts : unit -&gt; Azure.ResourceManager.Kusto.KustoScriptCollection&#xA;override this.GetKustoScripts : unit -&gt; Azure.ResourceManager.Kusto.KustoScriptCollection" Usage="kustoDatabaseResource.GetKustoScripts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Kusto.KustoScriptCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of KustoScriptResources in the KustoDatabase. </summary>
        <returns> An object representing collection of KustoScriptResources and their operations over a KustoScriptResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrincipals">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal&gt; GetPrincipals (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal&gt; GetPrincipals(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.GetPrincipals(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrincipals (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of KustoDatabasePrincipal)" />
      <MemberSignature Language="F#" Value="abstract member GetPrincipals : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal&gt;&#xA;override this.GetPrincipals : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal&gt;" Usage="kustoDatabaseResource.GetPrincipals cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a list of database principals of the given Kusto cluster and database.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/listPrincipals
            Operation Id: Databases_ListPrincipals
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrincipalsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal&gt; GetPrincipalsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal&gt; GetPrincipalsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.GetPrincipalsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrincipalsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of KustoDatabasePrincipal)" />
      <MemberSignature Language="F#" Value="abstract member GetPrincipalsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal&gt;&#xA;override this.GetPrincipalsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal&gt;" Usage="kustoDatabaseResource.GetPrincipalsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a list of database principals of the given Kusto cluster and database.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/listPrincipals
            Operation Id: Databases_ListPrincipals
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Kusto.KustoDatabaseResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.Kusto.KustoDatabaseResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePrincipals">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal&gt; RemovePrincipals (Azure.ResourceManager.Kusto.Models.DatabasePrincipalList databasePrincipalsToRemove, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal&gt; RemovePrincipals(class Azure.ResourceManager.Kusto.Models.DatabasePrincipalList databasePrincipalsToRemove, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.RemovePrincipals(Azure.ResourceManager.Kusto.Models.DatabasePrincipalList,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemovePrincipals (databasePrincipalsToRemove As DatabasePrincipalList, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of KustoDatabasePrincipal)" />
      <MemberSignature Language="F#" Value="abstract member RemovePrincipals : Azure.ResourceManager.Kusto.Models.DatabasePrincipalList * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal&gt;&#xA;override this.RemovePrincipals : Azure.ResourceManager.Kusto.Models.DatabasePrincipalList * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal&gt;" Usage="kustoDatabaseResource.RemovePrincipals (databasePrincipalsToRemove, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databasePrincipalsToRemove" Type="Azure.ResourceManager.Kusto.Models.DatabasePrincipalList" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="databasePrincipalsToRemove"> List of database principals to remove. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Remove Database principals permissions.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/removePrincipals
            Operation Id: Databases_RemovePrincipals
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="databasePrincipalsToRemove" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemovePrincipalsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal&gt; RemovePrincipalsAsync (Azure.ResourceManager.Kusto.Models.DatabasePrincipalList databasePrincipalsToRemove, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal&gt; RemovePrincipalsAsync(class Azure.ResourceManager.Kusto.Models.DatabasePrincipalList databasePrincipalsToRemove, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.RemovePrincipalsAsync(Azure.ResourceManager.Kusto.Models.DatabasePrincipalList,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemovePrincipalsAsync (databasePrincipalsToRemove As DatabasePrincipalList, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of KustoDatabasePrincipal)" />
      <MemberSignature Language="F#" Value="abstract member RemovePrincipalsAsync : Azure.ResourceManager.Kusto.Models.DatabasePrincipalList * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal&gt;&#xA;override this.RemovePrincipalsAsync : Azure.ResourceManager.Kusto.Models.DatabasePrincipalList * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal&gt;" Usage="kustoDatabaseResource.RemovePrincipalsAsync (databasePrincipalsToRemove, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databasePrincipalsToRemove" Type="Azure.ResourceManager.Kusto.Models.DatabasePrincipalList" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="databasePrincipalsToRemove"> List of database principals to remove. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Remove Database principals permissions.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/removePrincipals
            Operation Id: Databases_RemovePrincipals
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Kusto.Models.KustoDatabasePrincipal" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="databasePrincipalsToRemove" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.Kusto.KustoDatabaseResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.Kusto.KustoDatabaseResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Kusto.KustoDatabaseResource&gt; Update (Azure.WaitUntil waitUntil, Azure.ResourceManager.Kusto.KustoDatabaseData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Kusto.KustoDatabaseResource&gt; Update(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Kusto.KustoDatabaseData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.Update(Azure.WaitUntil,Azure.ResourceManager.Kusto.KustoDatabaseData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (waitUntil As WaitUntil, data As KustoDatabaseData, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of KustoDatabaseResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.WaitUntil * Azure.ResourceManager.Kusto.KustoDatabaseData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Kusto.KustoDatabaseResource&gt;&#xA;override this.Update : Azure.WaitUntil * Azure.ResourceManager.Kusto.KustoDatabaseData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Kusto.KustoDatabaseResource&gt;" Usage="kustoDatabaseResource.Update (waitUntil, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Kusto.KustoDatabaseResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="data" Type="Azure.ResourceManager.Kusto.KustoDatabaseData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="data"> The database parameters supplied to the Update operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates a database.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}
            Operation Id: Databases_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Kusto.KustoDatabaseResource&gt;&gt; UpdateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.Kusto.KustoDatabaseData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Kusto.KustoDatabaseResource&gt;&gt; UpdateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Kusto.KustoDatabaseData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.Kusto.KustoDatabaseData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (waitUntil As WaitUntil, data As KustoDatabaseData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of KustoDatabaseResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.Kusto.KustoDatabaseData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Kusto.KustoDatabaseResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.Kusto.KustoDatabaseData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Kusto.KustoDatabaseResource&gt;&gt;" Usage="kustoDatabaseResource.UpdateAsync (waitUntil, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Kusto.KustoDatabaseResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="data" Type="Azure.ResourceManager.Kusto.KustoDatabaseData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="data"> The database parameters supplied to the Update operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates a database.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}
            Operation Id: Databases_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateDataConnection">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Kusto.Models.DataConnectionValidationResults&gt; ValidateDataConnection (Azure.WaitUntil waitUntil, Azure.ResourceManager.Kusto.Models.DataConnectionValidationContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Kusto.Models.DataConnectionValidationResults&gt; ValidateDataConnection(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Kusto.Models.DataConnectionValidationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.ValidateDataConnection(Azure.WaitUntil,Azure.ResourceManager.Kusto.Models.DataConnectionValidationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateDataConnection (waitUntil As WaitUntil, content As DataConnectionValidationContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of DataConnectionValidationResults)" />
      <MemberSignature Language="F#" Value="abstract member ValidateDataConnection : Azure.WaitUntil * Azure.ResourceManager.Kusto.Models.DataConnectionValidationContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Kusto.Models.DataConnectionValidationResults&gt;&#xA;override this.ValidateDataConnection : Azure.WaitUntil * Azure.ResourceManager.Kusto.Models.DataConnectionValidationContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Kusto.Models.DataConnectionValidationResults&gt;" Usage="kustoDatabaseResource.ValidateDataConnection (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Kusto.Models.DataConnectionValidationResults&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Kusto.Models.DataConnectionValidationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The data connection parameters supplied to the CreateOrUpdate operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks that the data connection parameters are valid.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/dataConnectionValidation
            Operation Id: DataConnections_dataConnectionValidation
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateDataConnectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Kusto.Models.DataConnectionValidationResults&gt;&gt; ValidateDataConnectionAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.Kusto.Models.DataConnectionValidationContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Kusto.Models.DataConnectionValidationResults&gt;&gt; ValidateDataConnectionAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Kusto.Models.DataConnectionValidationContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Kusto.KustoDatabaseResource.ValidateDataConnectionAsync(Azure.WaitUntil,Azure.ResourceManager.Kusto.Models.DataConnectionValidationContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateDataConnectionAsync (waitUntil As WaitUntil, content As DataConnectionValidationContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of DataConnectionValidationResults))" />
      <MemberSignature Language="F#" Value="abstract member ValidateDataConnectionAsync : Azure.WaitUntil * Azure.ResourceManager.Kusto.Models.DataConnectionValidationContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Kusto.Models.DataConnectionValidationResults&gt;&gt;&#xA;override this.ValidateDataConnectionAsync : Azure.WaitUntil * Azure.ResourceManager.Kusto.Models.DataConnectionValidationContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Kusto.Models.DataConnectionValidationResults&gt;&gt;" Usage="kustoDatabaseResource.ValidateDataConnectionAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Kusto</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Kusto.Models.DataConnectionValidationResults&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Kusto.Models.DataConnectionValidationContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The data connection parameters supplied to the CreateOrUpdate operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks that the data connection parameters are valid.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/dataConnectionValidation
            Operation Id: DataConnections_dataConnectionValidation
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
