<Type Name="PagedCollection&lt;IFluentResourceT,InnerResourceT&gt;" FullName="Microsoft.Azure.Management.ResourceManager.Fluent.Core.PagedCollection&lt;IFluentResourceT,InnerResourceT&gt;">
  <TypeSignature Language="C#" Value="public class PagedCollection&lt;IFluentResourceT,InnerResourceT&gt; : Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;IFluentResourceT&gt;, System.Collections.Generic.IEnumerable&lt;IFluentResourceT&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PagedCollection`2&lt;IFluentResourceT, InnerResourceT&gt; extends System.Object implements class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection`1&lt;!IFluentResourceT&gt;, class System.Collections.Generic.IEnumerable`1&lt;!IFluentResourceT&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ResourceManager.Fluent.Core.PagedCollection`2" />
  <TypeSignature Language="VB.NET" Value="Public Class PagedCollection(Of IFluentResourceT, InnerResourceT)&#xA;Implements IEnumerable(Of IFluentResourceT), IPagedCollection(Of IFluentResourceT)" />
  <TypeSignature Language="F#" Value="type PagedCollection&lt;'IFluentResourceT, 'InnerResourceT&gt; = class&#xA;    interface IPagedCollection&lt;'IFluentResourceT&gt;&#xA;    interface seq&lt;'IFluentResourceT&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="IFluentResourceT" />
    <TypeParameter Name="InnerResourceT" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;IFluentResourceT&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;IFluentResourceT&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="IFluentResourceT">To be added.</typeparam>
    <typeparam name="InnerResourceT">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PagedCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.Core.PagedCollection`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromEnumerable">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;IFluentResourceT&gt; CreateFromEnumerable (System.Collections.Generic.IEnumerable&lt;IFluentResourceT&gt; fluentResourceList);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection`1&lt;!IFluentResourceT&gt; CreateFromEnumerable(class System.Collections.Generic.IEnumerable`1&lt;!IFluentResourceT&gt; fluentResourceList) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.Core.PagedCollection`2.CreateFromEnumerable(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromEnumerable (fluentResourceList As IEnumerable(Of IFluentResourceT)) As IPagedCollection(Of IFluentResourceT)" />
      <MemberSignature Language="F#" Value="static member CreateFromEnumerable : seq&lt;'IFluentResourceT&gt; -&gt; Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;'IFluentResourceT&gt;" Usage="Microsoft.Azure.Management.ResourceManager.Fluent.Core.PagedCollection&lt;'IFluentResourceT, 'InnerResourceT&gt;.CreateFromEnumerable fluentResourceList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;IFluentResourceT&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fluentResourceList" Type="System.Collections.Generic.IEnumerable&lt;IFluentResourceT&gt;" />
      </Parameters>
      <Docs>
        <param name="fluentResourceList">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;IFluentResourceT&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!IFluentResourceT&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.Core.PagedCollection`2.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of IFluentResourceT)" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'IFluentResourceT&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'IFluentResourceT&gt;" Usage="pagedCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;IFluentResourceT&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextPageAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;IFluentResourceT&gt;&gt; GetNextPageAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection`1&lt;!IFluentResourceT&gt;&gt; GetNextPageAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.Core.PagedCollection`2.GetNextPageAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetNextPageAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;'IFluentResourceT&gt;&gt;&#xA;override this.GetNextPageAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;'IFluentResourceT&gt;&gt;" Usage="pagedCollection.GetNextPageAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection`1.GetNextPageAsync(System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;IFluentResourceT&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadPage">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;IFluentResourceT&gt;&gt; LoadPage (Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;InnerResourceT&gt;&gt;&gt; listInnerAsync, Func&lt;InnerResourceT,IFluentResourceT&gt; wrapModel, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection`1&lt;!IFluentResourceT&gt;&gt; LoadPage(class System.Func`2&lt;valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;!InnerResourceT&gt;&gt;&gt; listInnerAsync, class System.Func`2&lt;!InnerResourceT, !IFluentResourceT&gt; wrapModel, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.Core.PagedCollection`2.LoadPage(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}},System.Func{`1,`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member LoadPage : Func&lt;System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;seq&lt;'InnerResourceT&gt;&gt;&gt; * Func&lt;'InnerResourceT, 'IFluentResourceT&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;'IFluentResourceT&gt;&gt;" Usage="Microsoft.Azure.Management.ResourceManager.Fluent.Core.PagedCollection&lt;'IFluentResourceT, 'InnerResourceT&gt;.LoadPage (listInnerAsync, wrapModel, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;IFluentResourceT&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listInnerAsync" Type="System.Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;InnerResourceT&gt;&gt;&gt;" />
        <Parameter Name="wrapModel" Type="System.Func&lt;InnerResourceT,IFluentResourceT&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="listInnerAsync">To be added.</param>
        <param name="wrapModel">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadPage">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;IFluentResourceT&gt;&gt; LoadPage (Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;InnerResourceT&gt;&gt;&gt; listInnerAsync, Func&lt;string,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;InnerResourceT&gt;&gt;&gt; listInnerNext, Func&lt;InnerResourceT,IFluentResourceT&gt; wrapModel, bool loadAllPages, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection`1&lt;!IFluentResourceT&gt;&gt; LoadPage(class System.Func`2&lt;valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;!InnerResourceT&gt;&gt;&gt; listInnerAsync, class System.Func`3&lt;string, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;!InnerResourceT&gt;&gt;&gt; listInnerNext, class System.Func`2&lt;!InnerResourceT, !IFluentResourceT&gt; wrapModel, bool loadAllPages, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.Core.PagedCollection`2.LoadPage(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{`1}}},System.Func{System.String,System.Threading.CancellationToken,System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{`1}}},System.Func{`1,`0},System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member LoadPage : Func&lt;System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;'InnerResourceT&gt;&gt;&gt; * Func&lt;string, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;'InnerResourceT&gt;&gt;&gt; * Func&lt;'InnerResourceT, 'IFluentResourceT&gt; * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;'IFluentResourceT&gt;&gt;" Usage="Microsoft.Azure.Management.ResourceManager.Fluent.Core.PagedCollection&lt;'IFluentResourceT, 'InnerResourceT&gt;.LoadPage (listInnerAsync, listInnerNext, wrapModel, loadAllPages, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;IFluentResourceT&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listInnerAsync" Type="System.Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;InnerResourceT&gt;&gt;&gt;" />
        <Parameter Name="listInnerNext" Type="System.Func&lt;System.String,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;InnerResourceT&gt;&gt;&gt;" />
        <Parameter Name="wrapModel" Type="System.Func&lt;InnerResourceT,IFluentResourceT&gt;" />
        <Parameter Name="loadAllPages" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="listInnerAsync">To be added.</param>
        <param name="listInnerNext">To be added.</param>
        <param name="wrapModel">To be added.</param>
        <param name="loadAllPages">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadPageWithWrapModelAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;IFluentResourceT&gt;&gt; LoadPageWithWrapModelAsync (Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;InnerResourceT&gt;&gt;&gt; listInnerAsync, Func&lt;string,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;InnerResourceT&gt;&gt;&gt; listInnerNext, Func&lt;InnerResourceT,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;IFluentResourceT&gt;&gt; wrapModelAsync, bool loadAllPages, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection`1&lt;!IFluentResourceT&gt;&gt; LoadPageWithWrapModelAsync(class System.Func`2&lt;valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;!InnerResourceT&gt;&gt;&gt; listInnerAsync, class System.Func`3&lt;string, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;!InnerResourceT&gt;&gt;&gt; listInnerNext, class System.Func`3&lt;!InnerResourceT, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;!IFluentResourceT&gt;&gt; wrapModelAsync, bool loadAllPages, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.Core.PagedCollection`2.LoadPageWithWrapModelAsync(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{`1}}},System.Func{System.String,System.Threading.CancellationToken,System.Threading.Tasks.Task{Microsoft.Rest.Azure.IPage{`1}}},System.Func{`1,System.Threading.CancellationToken,System.Threading.Tasks.Task{`0}},System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member LoadPageWithWrapModelAsync : Func&lt;System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;'InnerResourceT&gt;&gt;&gt; * Func&lt;string, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;'InnerResourceT&gt;&gt;&gt; * Func&lt;'InnerResourceT, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;'IFluentResourceT&gt;&gt; * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;'IFluentResourceT&gt;&gt;" Usage="Microsoft.Azure.Management.ResourceManager.Fluent.Core.PagedCollection&lt;'IFluentResourceT, 'InnerResourceT&gt;.LoadPageWithWrapModelAsync (listInnerAsync, listInnerNext, wrapModelAsync, loadAllPages, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;IFluentResourceT&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listInnerAsync" Type="System.Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;InnerResourceT&gt;&gt;&gt;" />
        <Parameter Name="listInnerNext" Type="System.Func&lt;System.String,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;InnerResourceT&gt;&gt;&gt;" />
        <Parameter Name="wrapModelAsync" Type="System.Func&lt;InnerResourceT,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;IFluentResourceT&gt;&gt;" />
        <Parameter Name="loadAllPages" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="listInnerAsync">To be added.</param>
        <param name="listInnerNext">To be added.</param>
        <param name="wrapModelAsync">To be added.</param>
        <param name="loadAllPages">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.Core.PagedCollection`2.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>