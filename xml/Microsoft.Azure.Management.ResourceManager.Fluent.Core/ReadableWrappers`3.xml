<Type Name="ReadableWrappers&lt;IFluentResourceT,FluentResourceT,InnerResourceT&gt;" FullName="Microsoft.Azure.Management.ResourceManager.Fluent.Core.ReadableWrappers&lt;IFluentResourceT,FluentResourceT,InnerResourceT&gt;">
  <TypeSignature Language="C#" Value="public abstract class ReadableWrappers&lt;IFluentResourceT,FluentResourceT,InnerResourceT&gt; where FluentResourceT : IFluentResourceT" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ReadableWrappers`3&lt;IFluentResourceT, (!IFluentResourceT) FluentResourceT, InnerResourceT&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ResourceManager.Fluent.Core.ReadableWrappers`3" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ReadableWrappers(Of IFluentResourceT, FluentResourceT, InnerResourceT)" />
  <TypeSignature Language="F#" Value="type ReadableWrappers&lt;'IFluentResourceT, #'IFluentResourceT, 'InnerResourceT&gt; = class" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename IFluentResourceT, typename FluentResourceT, typename InnerResourceT&gt;&#xA; where FluentResourceT : IFluentResourceTpublic ref class ReadableWrappers abstract" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="IFluentResourceT" />
    <TypeParameter Name="FluentResourceT">
      <Constraints>
        <BaseTypeName>IFluentResourceT</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="InnerResourceT" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="IFluentResourceT">To be added.</typeparam>
    <typeparam name="FluentResourceT">To be added.</typeparam>
    <typeparam name="InnerResourceT">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ReadableWrappers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.Core.ReadableWrappers`3.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ReadableWrappers();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; ReadableWrappers();" />
      <MemberSignature Language="C++ WINRT" Value=" ReadableWrappers();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapList">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IEnumerable&lt;IFluentResourceT&gt; WrapList (System.Collections.Generic.IEnumerable&lt;InnerResourceT&gt; innerList);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!IFluentResourceT&gt; WrapList(class System.Collections.Generic.IEnumerable`1&lt;!InnerResourceT&gt; innerList) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.Core.ReadableWrappers`3.WrapList(System.Collections.Generic.IEnumerable{`2})" />
      <MemberSignature Language="VB.NET" Value="Protected Function WrapList (innerList As IEnumerable(Of InnerResourceT)) As IEnumerable(Of IFluentResourceT)" />
      <MemberSignature Language="F#" Value="member this.WrapList : seq&lt;'InnerResourceT&gt; -&gt; seq&lt;'IFluentResourceT&gt;" Usage="readableWrappers.WrapList innerList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Collections::Generic::IEnumerable&lt;IFluentResourceT&gt; ^ WrapList(System::Collections::Generic::IEnumerable&lt;InnerResourceT&gt; ^ innerList);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;IFluentResourceT&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="innerList" Type="System.Collections.Generic.IEnumerable&lt;InnerResourceT&gt;" />
      </Parameters>
      <Docs>
        <param name="innerList">The paged list of inner resources</param>
        <summary>
            This method returns a paged list where each page contains the instances that wraps inner resources in the corresponding
            page of given inner paged list.
            </summary>
        <returns>The paged list of wrapped resources</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapModel">
      <MemberSignature Language="C#" Value="protected abstract IFluentResourceT WrapModel (InnerResourceT inner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !IFluentResourceT WrapModel(!InnerResourceT inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ResourceManager.Fluent.Core.ReadableWrappers`3.WrapModel(`2)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function WrapModel (inner As InnerResourceT) As IFluentResourceT" />
      <MemberSignature Language="F#" Value="abstract member WrapModel : 'InnerResourceT -&gt; 'IFluentResourceT" Usage="readableWrappers.WrapModel inner" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract IFluentResourceT WrapModel(InnerResourceT inner);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; abstract IFluentResourceT WrapModel(InnerResourceT inner);" />
      <MemberSignature Language="C++ WINRT" Value=" abstract IFluentResourceT WrapModel(InnerResourceT inner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ResourceManager.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>IFluentResourceT</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inner" Type="InnerResourceT" />
      </Parameters>
      <Docs>
        <param name="inner">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>