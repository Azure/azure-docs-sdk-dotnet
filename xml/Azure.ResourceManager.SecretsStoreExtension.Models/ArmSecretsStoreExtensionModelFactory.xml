<Type Name="ArmSecretsStoreExtensionModelFactory" FullName="Azure.ResourceManager.SecretsStoreExtension.Models.ArmSecretsStoreExtensionModelFactory">
  <TypeSignature Language="C#" Value="public static class ArmSecretsStoreExtensionModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ArmSecretsStoreExtensionModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.SecretsStoreExtension.Models.ArmSecretsStoreExtensionModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ArmSecretsStoreExtensionModelFactory" />
  <TypeSignature Language="F#" Value="type ArmSecretsStoreExtensionModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.SecretsStoreExtension</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="KeyVaultSecretProviderClassData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.SecretsStoreExtension.KeyVaultSecretProviderClassData KeyVaultSecretProviderClassData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.SecretsStoreExtension.Models.KeyVaultSecretProviderClassProperties properties = default, Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.SecretsStoreExtension.KeyVaultSecretProviderClassData KeyVaultSecretProviderClassData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.SecretsStoreExtension.Models.KeyVaultSecretProviderClassProperties properties, class Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecretsStoreExtension.Models.ArmSecretsStoreExtensionModelFactory.KeyVaultSecretProviderClassData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.SecretsStoreExtension.Models.KeyVaultSecretProviderClassProperties,Azure.ResourceManager.Resources.Models.ExtendedLocation)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeyVaultSecretProviderClassData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional properties As KeyVaultSecretProviderClassProperties = Nothing, Optional extendedLocation As ExtendedLocation = Nothing) As KeyVaultSecretProviderClassData" />
      <MemberSignature Language="F#" Value="static member KeyVaultSecretProviderClassData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.SecretsStoreExtension.Models.KeyVaultSecretProviderClassProperties * Azure.ResourceManager.Resources.Models.ExtendedLocation -&gt; Azure.ResourceManager.SecretsStoreExtension.KeyVaultSecretProviderClassData" Usage="Azure.ResourceManager.SecretsStoreExtension.Models.ArmSecretsStoreExtensionModelFactory.KeyVaultSecretProviderClassData (id, name, resourceType, systemData, tags, location, properties, extendedLocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecretsStoreExtension</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecretsStoreExtension.KeyVaultSecretProviderClassData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="properties" Type="Azure.ResourceManager.SecretsStoreExtension.Models.KeyVaultSecretProviderClassProperties" />
        <Parameter Name="extendedLocation" Type="Azure.ResourceManager.Resources.Models.ExtendedLocation" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="properties"> The resource-specific properties for this resource. </param>
        <param name="extendedLocation" />
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.SecretsStoreExtension.KeyVaultSecretProviderClassData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.SecretsStoreExtension.KeyVaultSecretProviderClassData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyVaultSecretProviderClassProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.SecretsStoreExtension.Models.KeyVaultSecretProviderClassProperties KeyVaultSecretProviderClassProperties (string keyvaultName = default, Guid clientId = default, Guid tenantId = default, string objects = default, Azure.ResourceManager.SecretsStoreExtension.Models.SecretsStoreExtensionProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.SecretsStoreExtension.Models.KeyVaultSecretProviderClassProperties KeyVaultSecretProviderClassProperties(string keyvaultName, valuetype System.Guid clientId, valuetype System.Guid tenantId, string objects, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.SecretsStoreExtension.Models.SecretsStoreExtensionProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecretsStoreExtension.Models.ArmSecretsStoreExtensionModelFactory.KeyVaultSecretProviderClassProperties(System.String,System.Guid,System.Guid,System.String,System.Nullable{Azure.ResourceManager.SecretsStoreExtension.Models.SecretsStoreExtensionProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeyVaultSecretProviderClassProperties (Optional keyvaultName As String = Nothing, Optional clientId As Guid = Nothing, Optional tenantId As Guid = Nothing, Optional objects As String = Nothing, Optional provisioningState As Nullable(Of SecretsStoreExtensionProvisioningState) = Nothing) As KeyVaultSecretProviderClassProperties" />
      <MemberSignature Language="F#" Value="static member KeyVaultSecretProviderClassProperties : string * Guid * Guid * string * Nullable&lt;Azure.ResourceManager.SecretsStoreExtension.Models.SecretsStoreExtensionProvisioningState&gt; -&gt; Azure.ResourceManager.SecretsStoreExtension.Models.KeyVaultSecretProviderClassProperties" Usage="Azure.ResourceManager.SecretsStoreExtension.Models.ArmSecretsStoreExtensionModelFactory.KeyVaultSecretProviderClassProperties (keyvaultName, clientId, tenantId, objects, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecretsStoreExtension</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecretsStoreExtension.Models.KeyVaultSecretProviderClassProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyvaultName" Type="System.String" />
        <Parameter Name="clientId" Type="System.Guid" />
        <Parameter Name="tenantId" Type="System.Guid" />
        <Parameter Name="objects" Type="System.String" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.SecretsStoreExtension.Models.SecretsStoreExtensionProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="keyvaultName"> The name of the Azure Key Vault to sync secrets from. </param>
        <param name="clientId"> The user assigned managed identity client ID that should be used to access the Azure Key Vault. </param>
        <param name="tenantId"> The Azure Active Directory tenant ID that should be used for authenticating requests to the Azure Key Vault. </param>
        <param name="objects"> Objects defines the desired state of synced K8s secret objects. </param>
        <param name="provisioningState"> Provisioning state of the AzureKeyVaultSecretProviderClass instance. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.SecretsStoreExtension.Models.KeyVaultSecretProviderClassProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.SecretsStoreExtension.Models.KeyVaultSecretProviderClassProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecretSyncCondition">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncCondition SecretSyncCondition (DateTimeOffset? lastTransitionOn = default, string message = default, long? observedGeneration = default, string reason = default, Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncConditionStatusType status = default, string type = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncCondition SecretSyncCondition(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastTransitionOn, string message, valuetype System.Nullable`1&lt;int64&gt; observedGeneration, string reason, valuetype Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncConditionStatusType status, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecretsStoreExtension.Models.ArmSecretsStoreExtensionModelFactory.SecretSyncCondition(System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Int64},System.String,Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncConditionStatusType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecretSyncCondition (Optional lastTransitionOn As Nullable(Of DateTimeOffset) = Nothing, Optional message As String = Nothing, Optional observedGeneration As Nullable(Of Long) = Nothing, Optional reason As String = Nothing, Optional status As SecretSyncConditionStatusType = Nothing, Optional type As String = Nothing) As SecretSyncCondition" />
      <MemberSignature Language="F#" Value="static member SecretSyncCondition : Nullable&lt;DateTimeOffset&gt; * string * Nullable&lt;int64&gt; * string * Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncConditionStatusType * string -&gt; Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncCondition" Usage="Azure.ResourceManager.SecretsStoreExtension.Models.ArmSecretsStoreExtensionModelFactory.SecretSyncCondition (lastTransitionOn, message, observedGeneration, reason, status, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecretsStoreExtension</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncCondition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastTransitionOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="observedGeneration" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="status" Type="Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncConditionStatusType" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="lastTransitionOn"> LastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable. </param>
        <param name="message"> Message is a human readable message indicating details about the transition. This may be an empty string. </param>
        <param name="observedGeneration"> ObservedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance. </param>
        <param name="reason"> Reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty. </param>
        <param name="status"> Status of the condition, one of True, False, Unknown. </param>
        <param name="type"> Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to de-conflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt). </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncCondition" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncCondition" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecretSyncData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.SecretsStoreExtension.SecretSyncData SecretSyncData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncProperties properties = default, Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.SecretsStoreExtension.SecretSyncData SecretSyncData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncProperties properties, class Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecretsStoreExtension.Models.ArmSecretsStoreExtensionModelFactory.SecretSyncData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncProperties,Azure.ResourceManager.Resources.Models.ExtendedLocation)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecretSyncData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional properties As SecretSyncProperties = Nothing, Optional extendedLocation As ExtendedLocation = Nothing) As SecretSyncData" />
      <MemberSignature Language="F#" Value="static member SecretSyncData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncProperties * Azure.ResourceManager.Resources.Models.ExtendedLocation -&gt; Azure.ResourceManager.SecretsStoreExtension.SecretSyncData" Usage="Azure.ResourceManager.SecretsStoreExtension.Models.ArmSecretsStoreExtensionModelFactory.SecretSyncData (id, name, resourceType, systemData, tags, location, properties, extendedLocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecretsStoreExtension</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecretsStoreExtension.SecretSyncData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="properties" Type="Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncProperties" />
        <Parameter Name="extendedLocation" Type="Azure.ResourceManager.Resources.Models.ExtendedLocation" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="properties"> The resource-specific properties for this resource. </param>
        <param name="extendedLocation" />
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.SecretsStoreExtension.SecretSyncData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.SecretsStoreExtension.SecretSyncData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecretSyncProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncProperties SecretSyncProperties (string secretProviderClassName = default, string serviceAccountName = default, Azure.ResourceManager.SecretsStoreExtension.Models.KubernetesSecretType kubernetesSecretType = default, string forceSynchronization = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.SecretsStoreExtension.Models.KubernetesSecretObjectMapping&gt; objectSecretMapping = default, Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncStatus status = default, Azure.ResourceManager.SecretsStoreExtension.Models.SecretsStoreExtensionProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncProperties SecretSyncProperties(string secretProviderClassName, string serviceAccountName, valuetype Azure.ResourceManager.SecretsStoreExtension.Models.KubernetesSecretType kubernetesSecretType, string forceSynchronization, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.SecretsStoreExtension.Models.KubernetesSecretObjectMapping&gt; objectSecretMapping, class Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncStatus status, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.SecretsStoreExtension.Models.SecretsStoreExtensionProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecretsStoreExtension.Models.ArmSecretsStoreExtensionModelFactory.SecretSyncProperties(System.String,System.String,Azure.ResourceManager.SecretsStoreExtension.Models.KubernetesSecretType,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.SecretsStoreExtension.Models.KubernetesSecretObjectMapping},Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncStatus,System.Nullable{Azure.ResourceManager.SecretsStoreExtension.Models.SecretsStoreExtensionProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecretSyncProperties (Optional secretProviderClassName As String = Nothing, Optional serviceAccountName As String = Nothing, Optional kubernetesSecretType As KubernetesSecretType = Nothing, Optional forceSynchronization As String = Nothing, Optional objectSecretMapping As IEnumerable(Of KubernetesSecretObjectMapping) = Nothing, Optional status As SecretSyncStatus = Nothing, Optional provisioningState As Nullable(Of SecretsStoreExtensionProvisioningState) = Nothing) As SecretSyncProperties" />
      <MemberSignature Language="F#" Value="static member SecretSyncProperties : string * string * Azure.ResourceManager.SecretsStoreExtension.Models.KubernetesSecretType * string * seq&lt;Azure.ResourceManager.SecretsStoreExtension.Models.KubernetesSecretObjectMapping&gt; * Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncStatus * Nullable&lt;Azure.ResourceManager.SecretsStoreExtension.Models.SecretsStoreExtensionProvisioningState&gt; -&gt; Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncProperties" Usage="Azure.ResourceManager.SecretsStoreExtension.Models.ArmSecretsStoreExtensionModelFactory.SecretSyncProperties (secretProviderClassName, serviceAccountName, kubernetesSecretType, forceSynchronization, objectSecretMapping, status, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecretsStoreExtension</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="secretProviderClassName" Type="System.String" />
        <Parameter Name="serviceAccountName" Type="System.String" />
        <Parameter Name="kubernetesSecretType" Type="Azure.ResourceManager.SecretsStoreExtension.Models.KubernetesSecretType" />
        <Parameter Name="forceSynchronization" Type="System.String" />
        <Parameter Name="objectSecretMapping" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.SecretsStoreExtension.Models.KubernetesSecretObjectMapping&gt;" />
        <Parameter Name="status" Type="Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncStatus" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.SecretsStoreExtension.Models.SecretsStoreExtensionProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="secretProviderClassName"> SecretProviderClassName specifies the name of the SecretProviderClass resource, which contains the information needed to access the cloud provider secret store. </param>
        <param name="serviceAccountName"> ServiceAccountName specifies the name of the service account used to access the cloud provider secret store. The audience field in the service account token must be passed as parameter in the controller configuration. The audience is used when requesting a token from the API server for the service account; the supported audiences are defined by each provider. </param>
        <param name="kubernetesSecretType"> Type specifies the type of the Kubernetes secret object, e.g. "Opaque" or"kubernetes.io/tls". The controller must have permission to create secrets of the specified type. </param>
        <param name="forceSynchronization"> ForceSynchronization can be used to force the secret synchronization. The secret synchronization is triggered by changing the value in this field. This field is not used to resolve synchronization conflicts. </param>
        <param name="objectSecretMapping"> An array of SecretObjectData that maps secret data from the external secret provider to the Kubernetes secret. Each entry specifies the source secret in the external provider and the corresponding key in the Kubernetes secret. </param>
        <param name="status"> SecretSyncStatus defines the observed state of the secret synchronization process. </param>
        <param name="provisioningState"> Provisioning state of the SecretSync instance. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncProperties" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecretSyncStatus">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncStatus SecretSyncStatus (DateTimeOffset? lastSuccessfulSyncOn = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncCondition&gt; conditions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncStatus SecretSyncStatus(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastSuccessfulSyncOn, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncCondition&gt; conditions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecretsStoreExtension.Models.ArmSecretsStoreExtensionModelFactory.SecretSyncStatus(System.Nullable{System.DateTimeOffset},System.Collections.Generic.IEnumerable{Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncCondition})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecretSyncStatus (Optional lastSuccessfulSyncOn As Nullable(Of DateTimeOffset) = Nothing, Optional conditions As IEnumerable(Of SecretSyncCondition) = Nothing) As SecretSyncStatus" />
      <MemberSignature Language="F#" Value="static member SecretSyncStatus : Nullable&lt;DateTimeOffset&gt; * seq&lt;Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncCondition&gt; -&gt; Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncStatus" Usage="Azure.ResourceManager.SecretsStoreExtension.Models.ArmSecretsStoreExtensionModelFactory.SecretSyncStatus (lastSuccessfulSyncOn, conditions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecretsStoreExtension</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastSuccessfulSyncOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="conditions" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncCondition&gt;" />
      </Parameters>
      <Docs>
        <param name="lastSuccessfulSyncOn"> LastSuccessfulSyncTime represents the last time the secret was retrieved from the Provider and updated. </param>
        <param name="conditions"> Conditions represent the status of the secret create and update processes. The status can be True, False, or Unknown with various reasons and messages explaining the state. Examples of reasons include CreateSucceeded, ProviderError, InvalidClusterSecretLabelError, InvalidClusterSecretAnnotationError, UnknownError, ValidatingAdmissionPolicyCheckFailed, UserInputValidationFailed, ControllerSpcError, ControllerInternalError, NoValueChange, and ValueChangeOrForceUpdateDetected. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncStatus" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.SecretsStoreExtension.Models.SecretSyncStatus" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
