<Type Name="MockableDevSpacesResourceGroupResource" FullName="Azure.ResourceManager.DevSpaces.Mocking.MockableDevSpacesResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableDevSpacesResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableDevSpacesResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DevSpaces.Mocking.MockableDevSpacesResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableDevSpacesResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableDevSpacesResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DevSpaces</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableDevSpacesResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevSpaces.Mocking.MockableDevSpacesResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevSpaces</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.DevSpaces.Mocking.MockableDevSpacesResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerHostMappingContainerHostMapping">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DevSpaces.Models.ContainerHostMapping&gt; GetContainerHostMappingContainerHostMapping (Azure.Core.AzureLocation location, Azure.ResourceManager.DevSpaces.Models.ContainerHostMapping containerHostMapping, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DevSpaces.Models.ContainerHostMapping&gt; GetContainerHostMappingContainerHostMapping(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.DevSpaces.Models.ContainerHostMapping containerHostMapping, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevSpaces.Mocking.MockableDevSpacesResourceGroupResource.GetContainerHostMappingContainerHostMapping(Azure.Core.AzureLocation,Azure.ResourceManager.DevSpaces.Models.ContainerHostMapping,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerHostMappingContainerHostMapping (location As AzureLocation, containerHostMapping As ContainerHostMapping, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ContainerHostMapping)" />
      <MemberSignature Language="F#" Value="abstract member GetContainerHostMappingContainerHostMapping : Azure.Core.AzureLocation * Azure.ResourceManager.DevSpaces.Models.ContainerHostMapping * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevSpaces.Models.ContainerHostMapping&gt;&#xA;override this.GetContainerHostMappingContainerHostMapping : Azure.Core.AzureLocation * Azure.ResourceManager.DevSpaces.Models.ContainerHostMapping * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevSpaces.Models.ContainerHostMapping&gt;" Usage="mockableDevSpacesResourceGroupResource.GetContainerHostMappingContainerHostMapping (location, containerHostMapping, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevSpaces</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DevSpaces.Models.ContainerHostMapping&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="containerHostMapping" Type="Azure.ResourceManager.DevSpaces.Models.ContainerHostMapping" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> Location of the container host. </param>
        <param name="containerHostMapping"> The <see cref="T:Azure.ResourceManager.DevSpaces.Models.ContainerHostMapping" /> to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns container host mapping object for a container host resource ID if an associated controller exists.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevSpaces/locations/{location}/checkContainerHostMapping</description></item><item><term>Operation Id</term><description>ContainerHostMappings_GetContainerHostMapping</description></item><item><term>Default Api Version</term><description>2019-04-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="containerHostMapping" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetContainerHostMappingContainerHostMappingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevSpaces.Models.ContainerHostMapping&gt;&gt; GetContainerHostMappingContainerHostMappingAsync (Azure.Core.AzureLocation location, Azure.ResourceManager.DevSpaces.Models.ContainerHostMapping containerHostMapping, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DevSpaces.Models.ContainerHostMapping&gt;&gt; GetContainerHostMappingContainerHostMappingAsync(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.DevSpaces.Models.ContainerHostMapping containerHostMapping, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevSpaces.Mocking.MockableDevSpacesResourceGroupResource.GetContainerHostMappingContainerHostMappingAsync(Azure.Core.AzureLocation,Azure.ResourceManager.DevSpaces.Models.ContainerHostMapping,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerHostMappingContainerHostMappingAsync (location As AzureLocation, containerHostMapping As ContainerHostMapping, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ContainerHostMapping))" />
      <MemberSignature Language="F#" Value="abstract member GetContainerHostMappingContainerHostMappingAsync : Azure.Core.AzureLocation * Azure.ResourceManager.DevSpaces.Models.ContainerHostMapping * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevSpaces.Models.ContainerHostMapping&gt;&gt;&#xA;override this.GetContainerHostMappingContainerHostMappingAsync : Azure.Core.AzureLocation * Azure.ResourceManager.DevSpaces.Models.ContainerHostMapping * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevSpaces.Models.ContainerHostMapping&gt;&gt;" Usage="mockableDevSpacesResourceGroupResource.GetContainerHostMappingContainerHostMappingAsync (location, containerHostMapping, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevSpaces</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevSpaces.Models.ContainerHostMapping&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="containerHostMapping" Type="Azure.ResourceManager.DevSpaces.Models.ContainerHostMapping" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> Location of the container host. </param>
        <param name="containerHostMapping"> The <see cref="T:Azure.ResourceManager.DevSpaces.Models.ContainerHostMapping" /> to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns container host mapping object for a container host resource ID if an associated controller exists.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevSpaces/locations/{location}/checkContainerHostMapping</description></item><item><term>Operation Id</term><description>ContainerHostMappings_GetContainerHostMapping</description></item><item><term>Default Api Version</term><description>2019-04-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="containerHostMapping" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetController">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DevSpaces.ControllerResource&gt; GetController (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DevSpaces.ControllerResource&gt; GetController(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevSpaces.Mocking.MockableDevSpacesResourceGroupResource.GetController(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetController (name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ControllerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetController : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevSpaces.ControllerResource&gt;&#xA;override this.GetController : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DevSpaces.ControllerResource&gt;" Usage="mockableDevSpacesResourceGroupResource.GetController (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevSpaces</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DevSpaces.ControllerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the properties for an Azure Dev Spaces Controller.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevSpaces/controllers/{name}</description></item><item><term>Operation Id</term><description>Controllers_Get</description></item><item><term>Default Api Version</term><description>2019-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DevSpaces.ControllerResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetControllerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevSpaces.ControllerResource&gt;&gt; GetControllerAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DevSpaces.ControllerResource&gt;&gt; GetControllerAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevSpaces.Mocking.MockableDevSpacesResourceGroupResource.GetControllerAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetControllerAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ControllerResource))" />
      <MemberSignature Language="F#" Value="abstract member GetControllerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevSpaces.ControllerResource&gt;&gt;&#xA;override this.GetControllerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevSpaces.ControllerResource&gt;&gt;" Usage="mockableDevSpacesResourceGroupResource.GetControllerAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevSpaces</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DevSpaces.ControllerResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the properties for an Azure Dev Spaces Controller.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevSpaces/controllers/{name}</description></item><item><term>Operation Id</term><description>Controllers_Get</description></item><item><term>Default Api Version</term><description>2019-04-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.DevSpaces.ControllerResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetControllers">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DevSpaces.ControllerCollection GetControllers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DevSpaces.ControllerCollection GetControllers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DevSpaces.Mocking.MockableDevSpacesResourceGroupResource.GetControllers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetControllers () As ControllerCollection" />
      <MemberSignature Language="F#" Value="abstract member GetControllers : unit -&gt; Azure.ResourceManager.DevSpaces.ControllerCollection&#xA;override this.GetControllers : unit -&gt; Azure.ResourceManager.DevSpaces.ControllerCollection" Usage="mockableDevSpacesResourceGroupResource.GetControllers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DevSpaces</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DevSpaces.ControllerCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ControllerResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of ControllerResources and their operations over a ControllerResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
