<Type Name="ODATADetailLevel" FullName="Microsoft.Azure.Batch.ODATADetailLevel">
  <TypeSignature Language="C#" Value="public class ODATADetailLevel : Microsoft.Azure.Batch.DetailLevel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ODATADetailLevel extends Microsoft.Azure.Batch.DetailLevel" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Batch.ODATADetailLevel" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
    <AssemblyVersion>6.1.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.1.0</AssemblyVersion>
    <AssemblyVersion>7.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.Batch.DetailLevel</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             Controls the amount of detail requested from the Azure Batch service when listing or
             retrieving resources, using OData query clauses.
             </summary>
    <remarks>
      <para>Azure Batch supports OData queries, which allow the client to gain finer control over query
             performance by controlling which resources are returned in List operations (<see cref="P:Microsoft.Azure.Batch.ODATADetailLevel.FilterClause" />),
             and which properties of each resource are returned in List, Get or Refresh operations
             (<see cref="P:Microsoft.Azure.Batch.ODATADetailLevel.SelectClause" /> and <see cref="P:Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause" />).</para>
      <para>By default, if you do not pass a <see cref="T:Microsoft.Azure.Batch.DetailLevel" /> to a List, Get or Refresh operation,
             the Batch client specifies no filter (all records are returned), no select clause (all simple properties are
             returned) and no expand clause (associated entities are not returned).  Consequently, by default, associated entity
             properties are null, rather than being populated like other properties.  Refer to individual class
             documentation to find out which properties are considered associated entities and need to be expanded
             to be populated.</para>
      <para>Because the OData queries are passed directly to the REST API, clause strings must use the JSON attribute
             names from the REST API, which are not always the same as .NET property names.  For example, the
             .NET <see cref="P:Microsoft.Azure.Batch.CloudPool.VirtualMachineSize">CloudPool.VirtualMachineSize</see> property corresponds to
             the vmSize attribute in the REST API; therefore, to filter a pool list operations by VM size, you would
             need to write vmSize rather than VirtualMachineSize in your filter string.  Refer to the REST API
             documentation to find out the JSON attribute name corresponding to a .NET property.</para>
      <para>For additional information about using OData to efficiently query the Azure Batch service, see
             <a href="https://azure.microsoft.com/en-us/documentation/articles/batch-efficient-list-queries/">Efficient List Queries</a> on MSDN.</para>
    </remarks>
    <example>
             This sample shows how to specify an ODataDetailLevel that lists only active <see cref="T:Microsoft.Azure.Batch.CloudPool">CloudPools</see>,
             and retrieves only the <see cref="P:Microsoft.Azure.Batch.CloudPool.Id" />, <see cref="P:Microsoft.Azure.Batch.CloudPool.DisplayName" /> and <see cref="P:Microsoft.Azure.Batch.CloudPool.Statistics" />
             for each pool (for example, for display in a reporting user interface).
             <code>
             var detailLevel = new ODATADetailLevel(
                 filterClause: "state eq 'active'",
                 selectClause: "id,displayName,stats",
                 expandClause: "stats"
             );
            
             var pools = batchClient.PoolOperations.ListPools(detailLevel);
             </code></example>
    <example>
             This sample shows how to specify an ODataDetailLevel that lists only active <see cref="T:Microsoft.Azure.Batch.CloudPool">CloudPools</see>,
             and retrieves only the <see cref="P:Microsoft.Azure.Batch.CloudPool.Id" />, <see cref="P:Microsoft.Azure.Batch.CloudPool.DisplayName" /> and <see cref="P:Microsoft.Azure.Batch.CloudPool.Statistics" />
             for each pool (for example, for display in a reporting user interface).
             <code>
             var detailLevel = new ODATADetailLevel(
                 filterClause: "state eq 'active'",
                 selectClause: "id,displayName,stats",
                 expandClause: "stats"
             );
            
             var pools = batchClient.PoolOperations.ListPools(detailLevel);
             </code></example>
    <example>
             This sample shows how to specify an ODataDetailLevel that lists only active <see cref="T:Microsoft.Azure.Batch.CloudPool">CloudPools</see>,
             and retrieves only the <see cref="P:Microsoft.Azure.Batch.CloudPool.Id" />, <see cref="P:Microsoft.Azure.Batch.CloudPool.DisplayName" /> and <see cref="P:Microsoft.Azure.Batch.CloudPool.Statistics" />
             for each pool (for example, for display in a reporting user interface).
             <code>
             var detailLevel = new ODATADetailLevel(
                 filterClause: "state eq 'active'",
                 selectClause: "id,displayName,stats",
                 expandClause: "stats"
             );
            
             var pools = batchClient.PoolOperations.ListPools(detailLevel);
             </code></example>
    <example>
             This sample shows how to specify an ODataDetailLevel that lists only active <see cref="T:Microsoft.Azure.Batch.CloudPool">CloudPools</see>,
             and retrieves only the <see cref="P:Microsoft.Azure.Batch.CloudPool.Id" />, <see cref="P:Microsoft.Azure.Batch.CloudPool.DisplayName" /> and <see cref="P:Microsoft.Azure.Batch.CloudPool.Statistics" />
             for each pool (for example, for display in a reporting user interface).
             <code>
             var detailLevel = new ODATADetailLevel(
                 filterClause: "state eq 'active'",
                 selectClause: "id,displayName,stats",
                 expandClause: "stats"
             );
            
             var pools = batchClient.PoolOperations.ListPools(detailLevel);
             </code></example>
    <example>
             This sample shows how to specify an ODataDetailLevel that lists only active <see cref="T:Microsoft.Azure.Batch.CloudPool">CloudPools</see>,
             and retrieves only the <see cref="P:Microsoft.Azure.Batch.CloudPool.Id" />, <see cref="P:Microsoft.Azure.Batch.CloudPool.DisplayName" /> and <see cref="P:Microsoft.Azure.Batch.CloudPool.Statistics" />
             for each pool (for example, for display in a reporting user interface).
             <code>
             var detailLevel = new ODATADetailLevel(
                 filterClause: "state eq 'active'",
                 selectClause: "id,displayName,stats",
                 expandClause: "stats"
             );
            
             var pools = batchClient.PoolOperations.ListPools(detailLevel);
             </code></example>
    <example>
             This sample shows how to specify an ODataDetailLevel that lists only active <see cref="T:Microsoft.Azure.Batch.CloudPool">CloudPools</see>,
             and retrieves only the <see cref="P:Microsoft.Azure.Batch.CloudPool.Id" />, <see cref="P:Microsoft.Azure.Batch.CloudPool.DisplayName" /> and <see cref="P:Microsoft.Azure.Batch.CloudPool.Statistics" />
             for each pool (for example, for display in a reporting user interface).
             <code>
             var detailLevel = new ODATADetailLevel(
                 filterClause: "state eq 'active'",
                 selectClause: "id,displayName,stats",
                 expandClause: "stats"
             );
            
             var pools = batchClient.PoolOperations.ListPools(detailLevel);
             </code></example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ODATADetailLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.ODATADetailLevel.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.1.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.ODATADetailLevel" /> class with empty clauses.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ODATADetailLevel (string filterClause = null, string selectClause = null, string expandClause = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filterClause, string selectClause, string expandClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.ODATADetailLevel.#ctor(System.String,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.1.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filterClause" Type="System.String" />
        <Parameter Name="selectClause" Type="System.String" />
        <Parameter Name="expandClause" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filterClause">The filter clause.</param>
        <param name="selectClause">The select clause.</param>
        <param name="expandClause">The expand clause.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.ODATADetailLevel" /> class with the specified clauses.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandClause">
      <MemberSignature Language="C#" Value="public string ExpandClause { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpandClause" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.1.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the OData expand clause. Used to retrieve associated entities of the main entity being retrieved.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>This is an optional OData $expand expression string
            <a href="http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part2-url-conventions/odata-v4.0-errata02-os-part2-url-conventions-complete.html#_Toc406398162">(see the OData specification)</a>.
            Properties containing associated entities will be null unless included in an ExpandClause.
            Specifically, if you perform a List, Get or Refresh and do not specify an ExpandClause, then all associated
            entity properties will be null.  For example, if you perform a <see cref="M:Microsoft.Azure.Batch.PoolOperations.ListPools(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})" />
            operation without an ExpandClause then the <see cref="P:Microsoft.Azure.Batch.CloudPool.Statistics" /> property will be null.  To populate
            the Statistics property you must supply an ExpandClause of <c>stats</c>.  Refer to individual class
            documentation to find out which properties are considered associated entities.</para>
          <para>If you specify both an ExpandClause and a <see cref="P:Microsoft.Azure.Batch.ODATADetailLevel.SelectClause" />, then properties listed in the
            ExpandClause must be repeated in the SelectClause (because only properties listed in the SelectClause are
            included in the service response).  (This requirement does not arise if you do not specify a SelectClause, because that
            means 'include all properties in the response.')</para>
          <para>Expansions must be specified using REST API attribute names, not .NET property names.</para>
          <para>The default is no expand expression, which means no associated objects are returned (and the
            corresponding properties are null).</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterClause">
      <MemberSignature Language="C#" Value="public string FilterClause { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterClause" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Batch.ODATADetailLevel.FilterClause" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.1.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the OData filter clause. Used to restrict a list operation to items that match specified criteria.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>This is an optional OData $filter expression string
            <a href="http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part2-url-conventions/odata-v4.0-errata02-os-part2-url-conventions-complete.html#_Toc406398094">(see the OData specification)</a>.
            For example, you can restrict a <see cref="M:Microsoft.Azure.Batch.PoolOperations.ListPools(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})" /> operation to return
            only active pools with the expression <c>state eq 'active'</c>.</para>
          <para>Filters must be specified using REST API attribute names, not .NET property names.</para>
          <para>The default is no filter expression, which means all resources are returned.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectClause">
      <MemberSignature Language="C#" Value="public string SelectClause { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectClause" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Batch.ODATADetailLevel.SelectClause" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.1.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the OData select clause. Used to retrieve only specific properties instead of all object properties.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>This is an optional OData $select expression string
            <a href="http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part2-url-conventions/odata-v4.0-errata02-os-part2-url-conventions-complete.html#_Toc406398163">(see the OData specification)</a>.
            If you provide a SelectClause, then <b>only</b> the properties listed in that clause are populated; other properties
            have their default values (typically null).  For example, if you perform a <see cref="M:Microsoft.Azure.Batch.PoolOperations.ListPools(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})" />
            operation with a SelectClause of <c>id,displayName</c>, then each <see cref="T:Microsoft.Azure.Batch.CloudPool" /> will have its
            <see cref="P:Microsoft.Azure.Batch.CloudPool.Id" /> and <see cref="P:Microsoft.Azure.Batch.CloudPool.DisplayName" /> properties
            populated, but other properties such as <see cref="P:Microsoft.Azure.Batch.CloudPool.State" /> will not be retrieved and therefore
            will have their default values (typically null).</para>
          <para>If, when an entity was retrieved (via a List, Get or Refresh), you specifed a SelectClause which did not include
            the property or properties that uniquely identify the object
            (usually the Id property, but for <see cref="T:Microsoft.Azure.Batch.Certificate" /> the Thumbprint and ThumbprintAlgorithm properties,
            then any methods that access the Batch service to retrieve data or perform operations will fail.
            This includes most methods on the object, including <see cref="M:Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})" /> and <see cref="M:Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)" />.
            You can still access properties (though only properties included in the SelectClause will be populated).</para>
          <para>Selections must be specified using REST API attribute names, not .NET property names.</para>
          <para>The default is no select expression, which means all properties are returned.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>