<Type Name="TaskStateMonitor" FullName="Microsoft.Azure.Batch.TaskStateMonitor">
  <TypeSignature Language="C#" Value="public class TaskStateMonitor : Microsoft.Azure.Batch.IInheritedBehaviors" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TaskStateMonitor extends System.Object implements class Microsoft.Azure.Batch.IInheritedBehaviors" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Batch.TaskStateMonitor" />
  <TypeSignature Language="VB.NET" Value="Public Class TaskStateMonitor&#xA;Implements IInheritedBehaviors" />
  <TypeSignature Language="F#" Value="type TaskStateMonitor = class&#xA;    interface IInheritedBehaviors" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
    <AssemblyVersion>14.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Batch.IInheritedBehaviors</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Provides utilities to help monitor CloudTask states.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CustomBehaviors">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.BatchClientBehavior&gt; CustomBehaviors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Batch.BatchClientBehavior&gt; CustomBehaviors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Batch.TaskStateMonitor.CustomBehaviors" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomBehaviors As IList(Of BatchClientBehavior)" />
      <MemberSignature Language="F#" Value="member this.CustomBehaviors : System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.BatchClientBehavior&gt; with get, set" Usage="Microsoft.Azure.Batch.TaskStateMonitor.CustomBehaviors" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Azure.Batch.IInheritedBehaviors.CustomBehaviors</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.BatchClientBehavior&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.TaskStateMonitor" />.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>These behaviors are inherited by child objects.</para>
          <para>Modifications are applied in the order of the collection. The last write wins.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public void WaitAll (System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Batch.CloudTask&gt; tasksToMonitor, Microsoft.Azure.Batch.Common.TaskState desiredState, TimeSpan timeout, Microsoft.Azure.Batch.ODATAMonitorControl controlParams = default, System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Batch.BatchClientBehavior&gt; additionalBehaviors = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WaitAll(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Batch.CloudTask&gt; tasksToMonitor, valuetype Microsoft.Azure.Batch.Common.TaskState desiredState, valuetype System.TimeSpan timeout, class Microsoft.Azure.Batch.ODATAMonitorControl controlParams, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Batch.BatchClientBehavior&gt; additionalBehaviors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.TaskStateMonitor.WaitAll(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.Common.TaskState,System.TimeSpan,Microsoft.Azure.Batch.ODATAMonitorControl,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WaitAll (tasksToMonitor As IEnumerable(Of CloudTask), desiredState As TaskState, timeout As TimeSpan, Optional controlParams As ODATAMonitorControl = Nothing, Optional additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WaitAll : seq&lt;Microsoft.Azure.Batch.CloudTask&gt; * Microsoft.Azure.Batch.Common.TaskState * TimeSpan * Microsoft.Azure.Batch.ODATAMonitorControl * seq&lt;Microsoft.Azure.Batch.BatchClientBehavior&gt; -&gt; unit" Usage="taskStateMonitor.WaitAll (tasksToMonitor, desiredState, timeout, controlParams, additionalBehaviors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasksToMonitor" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Batch.CloudTask&gt;" />
        <Parameter Name="desiredState" Type="Microsoft.Azure.Batch.Common.TaskState" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="controlParams" Type="Microsoft.Azure.Batch.ODATAMonitorControl" />
        <Parameter Name="additionalBehaviors" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Batch.BatchClientBehavior&gt;" />
      </Parameters>
      <Docs>
        <param name="tasksToMonitor">The collection of tasks to monitor.</param>
        <param name="desiredState">The target state of the tasks. The method will exit when all tasks have reached this state at least once.</param>
        <param name="timeout">The maximum amount of time this call will wait before timing out.</param>
        <param name="controlParams">Controls various settings of the monitor, such as delay between each poll.</param>
        <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior" /> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.TaskStateMonitor.CustomBehaviors" />.</param>
        <summary>
            Monitors a <see cref="T:Microsoft.Azure.Batch.CloudTask" /> collection until each of its members has reached a desired state at least once.
            </summary>
        <remarks>
          <para>
            The state of each <see cref="T:Microsoft.Azure.Batch.CloudTask" /> instance is assumed to be authoritative at the time of the call.
            Instances that are already at the <paramref name="desiredState" /> are ignored.
            The <see cref="T:Microsoft.Azure.Batch.CloudTask" /> instances in the collection are treated as read-only.
            This means that when the call completes (timeout or not) the <see cref="T:Microsoft.Azure.Batch.CloudTask" /> instances should be refreshed before using.
            </para>
          <para>
            This is a blocking operation. For a non-blocking equivalent, see
            <see cref="M:Microsoft.Azure.Batch.TaskStateMonitor.WhenAll(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.Common.TaskState,System.TimeSpan,Microsoft.Azure.Batch.ODATAMonitorControl,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})" />.
            </para>
        </remarks>
        <exception cref="T:System.TimeoutException">Thrown if the <paramref name="timeout" /> has elapsed.</exception>
      </Docs>
    </Member>
    <Member MemberName="WhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WhenAll (System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Batch.CloudTask&gt; tasksToMonitor, Microsoft.Azure.Batch.Common.TaskState desiredState, System.Threading.CancellationToken cancellationToken, Microsoft.Azure.Batch.ODATAMonitorControl controlParams = default, System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Batch.BatchClientBehavior&gt; additionalBehaviors = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WhenAll(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Batch.CloudTask&gt; tasksToMonitor, valuetype Microsoft.Azure.Batch.Common.TaskState desiredState, valuetype System.Threading.CancellationToken cancellationToken, class Microsoft.Azure.Batch.ODATAMonitorControl controlParams, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Batch.BatchClientBehavior&gt; additionalBehaviors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.TaskStateMonitor.WhenAll(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.Common.TaskState,System.Threading.CancellationToken,Microsoft.Azure.Batch.ODATAMonitorControl,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})" />
      <MemberSignature Language="VB.NET" Value="Public Function WhenAll (tasksToMonitor As IEnumerable(Of CloudTask), desiredState As TaskState, cancellationToken As CancellationToken, Optional controlParams As ODATAMonitorControl = Nothing, Optional additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing) As Task" />
      <MemberSignature Language="F#" Value="member this.WhenAll : seq&lt;Microsoft.Azure.Batch.CloudTask&gt; * Microsoft.Azure.Batch.Common.TaskState * System.Threading.CancellationToken * Microsoft.Azure.Batch.ODATAMonitorControl * seq&lt;Microsoft.Azure.Batch.BatchClientBehavior&gt; -&gt; System.Threading.Tasks.Task" Usage="taskStateMonitor.WhenAll (tasksToMonitor, desiredState, cancellationToken, controlParams, additionalBehaviors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasksToMonitor" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Batch.CloudTask&gt;" />
        <Parameter Name="desiredState" Type="Microsoft.Azure.Batch.Common.TaskState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="controlParams" Type="Microsoft.Azure.Batch.ODATAMonitorControl" />
        <Parameter Name="additionalBehaviors" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Batch.BatchClientBehavior&gt;" />
      </Parameters>
      <Docs>
        <param name="tasksToMonitor">The collection of tasks to monitor.</param>
        <param name="desiredState">The target state of the tasks. The method will exit when all tasks have reached this state at least once.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> for controlling the lifetime of the asynchronous operation.</param>
        <param name="controlParams">Controls various settings of the monitor, such as delay between each poll.</param>
        <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior" /> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.TaskStateMonitor.CustomBehaviors" />.</param>
        <summary>
            Monitors a <see cref="T:Microsoft.Azure.Batch.CloudTask" /> collection until each of its members has reached a desired state at least once.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</returns>
        <remarks>
          <para>
            The state of each <see cref="T:Microsoft.Azure.Batch.CloudTask" /> instance is assumed to be authoritative at the time of the call.
            Instances that are already at the <paramref name="desiredState" /> are ignored.
            The <see cref="T:Microsoft.Azure.Batch.CloudTask" /> instances in the collection are treated as read-only.
            This means that when the call completes (timeout or not) the <see cref="T:Microsoft.Azure.Batch.CloudTask" /> instances should be refreshed before using.
            </para>
          <para>
            This method runs asynchronously.
            </para>
        </remarks>
        <exception cref="T:System.OperationCanceledException">Thrown if the <paramref name="cancellationToken" /> was cancelled.</exception>
      </Docs>
    </Member>
    <Member MemberName="WhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WhenAll (System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Batch.CloudTask&gt; tasksToMonitor, Microsoft.Azure.Batch.Common.TaskState desiredState, TimeSpan timeout, Microsoft.Azure.Batch.ODATAMonitorControl controlParams = default, System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Batch.BatchClientBehavior&gt; additionalBehaviors = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WhenAll(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Batch.CloudTask&gt; tasksToMonitor, valuetype Microsoft.Azure.Batch.Common.TaskState desiredState, valuetype System.TimeSpan timeout, class Microsoft.Azure.Batch.ODATAMonitorControl controlParams, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Batch.BatchClientBehavior&gt; additionalBehaviors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.TaskStateMonitor.WhenAll(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.Common.TaskState,System.TimeSpan,Microsoft.Azure.Batch.ODATAMonitorControl,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})" />
      <MemberSignature Language="VB.NET" Value="Public Function WhenAll (tasksToMonitor As IEnumerable(Of CloudTask), desiredState As TaskState, timeout As TimeSpan, Optional controlParams As ODATAMonitorControl = Nothing, Optional additionalBehaviors As IEnumerable(Of BatchClientBehavior) = Nothing) As Task" />
      <MemberSignature Language="F#" Value="member this.WhenAll : seq&lt;Microsoft.Azure.Batch.CloudTask&gt; * Microsoft.Azure.Batch.Common.TaskState * TimeSpan * Microsoft.Azure.Batch.ODATAMonitorControl * seq&lt;Microsoft.Azure.Batch.BatchClientBehavior&gt; -&gt; System.Threading.Tasks.Task" Usage="taskStateMonitor.WhenAll (tasksToMonitor, desiredState, timeout, controlParams, additionalBehaviors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasksToMonitor" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Batch.CloudTask&gt;" />
        <Parameter Name="desiredState" Type="Microsoft.Azure.Batch.Common.TaskState" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="controlParams" Type="Microsoft.Azure.Batch.ODATAMonitorControl" />
        <Parameter Name="additionalBehaviors" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Batch.BatchClientBehavior&gt;" />
      </Parameters>
      <Docs>
        <param name="tasksToMonitor">The collection of tasks to monitor.</param>
        <param name="desiredState">The target state of the tasks. The method will exit when all tasks have reached this state at least once.</param>
        <param name="timeout">The maximum amount of time this call will wait before timing out.</param>
        <param name="controlParams">Controls various settings of the monitor, such as delay between each poll.</param>
        <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior" /> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.TaskStateMonitor.CustomBehaviors" />.</param>
        <summary>
            Monitors a <see cref="T:Microsoft.Azure.Batch.CloudTask" /> collection until each of its members has reached a desired state at least once.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</returns>
        <remarks>
          <para>
            The state of each <see cref="T:Microsoft.Azure.Batch.CloudTask" /> instance is assumed to be authoritative at the time of the call.
            Instances that are already at the <paramref name="desiredState" /> are ignored.
            The <see cref="T:Microsoft.Azure.Batch.CloudTask" /> instances in the collection are treated as read-only.
            This means that when the call completes (timeout or not) the <see cref="T:Microsoft.Azure.Batch.CloudTask" /> instances should be refreshed before using.
            </para>
          <para>
            This method runs asynchronously.
            </para>
        </remarks>
        <exception cref="T:System.TimeoutException">Thrown if the <paramref name="timeout" /> has elapsed.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
