<Type Name="NeonPostgresExtensions" FullName="Azure.ResourceManager.NeonPostgres.NeonPostgresExtensions">
  <TypeSignature Language="C#" Value="public static class NeonPostgresExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit NeonPostgresExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.NeonPostgres.NeonPostgresExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module NeonPostgresExtensions" />
  <TypeSignature Language="F#" Value="type NeonPostgresExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.NeonPostgres</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.NeonPostgres. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetNeonBranchResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.NeonPostgres.NeonBranchResource GetNeonBranchResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.NeonPostgres.NeonBranchResource GetNeonBranchResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NeonPostgres.NeonPostgresExtensions.GetNeonBranchResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNeonBranchResource (client As ArmClient, id As ResourceIdentifier) As NeonBranchResource" />
      <MemberSignature Language="F#" Value="static member GetNeonBranchResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NeonPostgres.NeonBranchResource" Usage="Azure.ResourceManager.NeonPostgres.NeonPostgresExtensions.GetNeonBranchResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NeonPostgres</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NeonPostgres.NeonBranchResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.NeonPostgres.NeonBranchResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.NeonPostgres.NeonBranchResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.NeonPostgres.NeonBranchResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NeonPostgres.Mocking.MockableNeonPostgresArmClient.GetNeonBranchResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.NeonPostgres.NeonBranchResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNeonOrganization">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.NeonPostgres.NeonOrganizationResource&gt; GetNeonOrganization (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string organizationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.NeonPostgres.NeonOrganizationResource&gt; GetNeonOrganization(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string organizationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NeonPostgres.NeonPostgresExtensions.GetNeonOrganization(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNeonOrganization (resourceGroupResource As ResourceGroupResource, organizationName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NeonOrganizationResource)" />
      <MemberSignature Language="F#" Value="static member GetNeonOrganization : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.NeonPostgres.NeonOrganizationResource&gt;" Usage="Azure.ResourceManager.NeonPostgres.NeonPostgresExtensions.GetNeonOrganization (resourceGroupResource, organizationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NeonPostgres</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.NeonPostgres.NeonOrganizationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="organizationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="organizationName"> Name of the Neon Organizations resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a OrganizationResource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Neon.Postgres/organizations/{organizationName}</description></item><item><term>Operation Id</term><description>OrganizationResource_Get</description></item><item><term>Default Api Version</term><description>2025-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NeonPostgres.NeonOrganizationResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NeonPostgres.Mocking.MockableNeonPostgresResourceGroupResource.GetNeonOrganization(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="organizationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="organizationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNeonOrganizationAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NeonPostgres.NeonOrganizationResource&gt;&gt; GetNeonOrganizationAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string organizationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.NeonPostgres.NeonOrganizationResource&gt;&gt; GetNeonOrganizationAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string organizationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NeonPostgres.NeonPostgresExtensions.GetNeonOrganizationAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNeonOrganizationAsync (resourceGroupResource As ResourceGroupResource, organizationName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NeonOrganizationResource))" />
      <MemberSignature Language="F#" Value="static member GetNeonOrganizationAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NeonPostgres.NeonOrganizationResource&gt;&gt;" Usage="Azure.ResourceManager.NeonPostgres.NeonPostgresExtensions.GetNeonOrganizationAsync (resourceGroupResource, organizationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NeonPostgres</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NeonPostgres.NeonOrganizationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="organizationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="organizationName"> Name of the Neon Organizations resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a OrganizationResource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Neon.Postgres/organizations/{organizationName}</description></item><item><term>Operation Id</term><description>OrganizationResource_Get</description></item><item><term>Default Api Version</term><description>2025-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NeonPostgres.NeonOrganizationResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NeonPostgres.Mocking.MockableNeonPostgresResourceGroupResource.GetNeonOrganizationAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="organizationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="organizationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNeonOrganizationResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.NeonPostgres.NeonOrganizationResource GetNeonOrganizationResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.NeonPostgres.NeonOrganizationResource GetNeonOrganizationResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NeonPostgres.NeonPostgresExtensions.GetNeonOrganizationResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNeonOrganizationResource (client As ArmClient, id As ResourceIdentifier) As NeonOrganizationResource" />
      <MemberSignature Language="F#" Value="static member GetNeonOrganizationResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NeonPostgres.NeonOrganizationResource" Usage="Azure.ResourceManager.NeonPostgres.NeonPostgresExtensions.GetNeonOrganizationResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NeonPostgres</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NeonPostgres.NeonOrganizationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.NeonPostgres.NeonOrganizationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.NeonPostgres.NeonOrganizationResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.NeonPostgres.NeonOrganizationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NeonPostgres.Mocking.MockableNeonPostgresArmClient.GetNeonOrganizationResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.NeonPostgres.NeonOrganizationResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNeonOrganizations">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.NeonPostgres.NeonOrganizationCollection GetNeonOrganizations (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.NeonPostgres.NeonOrganizationCollection GetNeonOrganizations(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NeonPostgres.NeonPostgresExtensions.GetNeonOrganizations(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNeonOrganizations (resourceGroupResource As ResourceGroupResource) As NeonOrganizationCollection" />
      <MemberSignature Language="F#" Value="static member GetNeonOrganizations : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.NeonPostgres.NeonOrganizationCollection" Usage="Azure.ResourceManager.NeonPostgres.NeonPostgresExtensions.GetNeonOrganizations resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NeonPostgres</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NeonPostgres.NeonOrganizationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of NeonOrganizationResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NeonPostgres.Mocking.MockableNeonPostgresResourceGroupResource.GetNeonOrganizations" /> instead.</description></item></summary>
        <returns> An object representing collection of NeonOrganizationResources and their operations over a NeonOrganizationResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNeonOrganizations">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.NeonPostgres.NeonOrganizationResource&gt; GetNeonOrganizations (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.NeonPostgres.NeonOrganizationResource&gt; GetNeonOrganizations(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NeonPostgres.NeonPostgresExtensions.GetNeonOrganizations(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNeonOrganizations (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of NeonOrganizationResource)" />
      <MemberSignature Language="F#" Value="static member GetNeonOrganizations : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.NeonPostgres.NeonOrganizationResource&gt;" Usage="Azure.ResourceManager.NeonPostgres.NeonPostgresExtensions.GetNeonOrganizations (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NeonPostgres</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.NeonPostgres.NeonOrganizationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List OrganizationResource resources by subscription ID
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Neon.Postgres/organizations</description></item><item><term>Operation Id</term><description>OrganizationResource_ListBySubscription</description></item><item><term>Default Api Version</term><description>2025-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NeonPostgres.NeonOrganizationResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NeonPostgres.Mocking.MockableNeonPostgresSubscriptionResource.GetNeonOrganizations(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.NeonPostgres.NeonOrganizationResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNeonOrganizationsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.NeonPostgres.NeonOrganizationResource&gt; GetNeonOrganizationsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.NeonPostgres.NeonOrganizationResource&gt; GetNeonOrganizationsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NeonPostgres.NeonPostgresExtensions.GetNeonOrganizationsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNeonOrganizationsAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of NeonOrganizationResource)" />
      <MemberSignature Language="F#" Value="static member GetNeonOrganizationsAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.NeonPostgres.NeonOrganizationResource&gt;" Usage="Azure.ResourceManager.NeonPostgres.NeonPostgresExtensions.GetNeonOrganizationsAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NeonPostgres</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.NeonPostgres.NeonOrganizationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List OrganizationResource resources by subscription ID
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Neon.Postgres/organizations</description></item><item><term>Operation Id</term><description>OrganizationResource_ListBySubscription</description></item><item><term>Default Api Version</term><description>2025-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NeonPostgres.NeonOrganizationResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NeonPostgres.Mocking.MockableNeonPostgresSubscriptionResource.GetNeonOrganizations(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.NeonPostgres.NeonOrganizationResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNeonProjectResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.NeonPostgres.NeonProjectResource GetNeonProjectResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.NeonPostgres.NeonProjectResource GetNeonProjectResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NeonPostgres.NeonPostgresExtensions.GetNeonProjectResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNeonProjectResource (client As ArmClient, id As ResourceIdentifier) As NeonProjectResource" />
      <MemberSignature Language="F#" Value="static member GetNeonProjectResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.NeonPostgres.NeonProjectResource" Usage="Azure.ResourceManager.NeonPostgres.NeonPostgresExtensions.GetNeonProjectResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NeonPostgres</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.NeonPostgres.NeonProjectResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.NeonPostgres.NeonProjectResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.NeonPostgres.NeonProjectResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.NeonPostgres.NeonProjectResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NeonPostgres.Mocking.MockableNeonPostgresArmClient.GetNeonProjectResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.NeonPostgres.NeonProjectResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPostgresVersionsOrganization">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.NeonPostgres.Models.PgVersionsResult&gt; GetPostgresVersionsOrganization (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.ResourceManager.NeonPostgres.Models.PgVersion pgVersion = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.NeonPostgres.Models.PgVersionsResult&gt; GetPostgresVersionsOrganization(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, class Azure.ResourceManager.NeonPostgres.Models.PgVersion pgVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NeonPostgres.NeonPostgresExtensions.GetPostgresVersionsOrganization(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.ResourceManager.NeonPostgres.Models.PgVersion,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPostgresVersionsOrganization (resourceGroupResource As ResourceGroupResource, Optional pgVersion As PgVersion = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PgVersionsResult)" />
      <MemberSignature Language="F#" Value="static member GetPostgresVersionsOrganization : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.ResourceManager.NeonPostgres.Models.PgVersion * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.NeonPostgres.Models.PgVersionsResult&gt;" Usage="Azure.ResourceManager.NeonPostgres.NeonPostgresExtensions.GetPostgresVersionsOrganization (resourceGroupResource, pgVersion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NeonPostgres</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.NeonPostgres.Models.PgVersionsResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="pgVersion" Type="Azure.ResourceManager.NeonPostgres.Models.PgVersion" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="pgVersion"> Post Action to retrieve the PostgreSQL versions. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Action to retrieve the PostgreSQL versions.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Neon.Postgres/getPostgresVersions</description></item><item><term>Operation Id</term><description>Organizations_GetPostgresVersions</description></item><item><term>Default Api Version</term><description>2025-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NeonPostgres.NeonOrganizationResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NeonPostgres.Mocking.MockableNeonPostgresResourceGroupResource.GetPostgresVersionsOrganization(Azure.ResourceManager.NeonPostgres.Models.PgVersion,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPostgresVersionsOrganizationAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NeonPostgres.Models.PgVersionsResult&gt;&gt; GetPostgresVersionsOrganizationAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.ResourceManager.NeonPostgres.Models.PgVersion pgVersion = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.NeonPostgres.Models.PgVersionsResult&gt;&gt; GetPostgresVersionsOrganizationAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, class Azure.ResourceManager.NeonPostgres.Models.PgVersion pgVersion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.NeonPostgres.NeonPostgresExtensions.GetPostgresVersionsOrganizationAsync(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.ResourceManager.NeonPostgres.Models.PgVersion,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPostgresVersionsOrganizationAsync (resourceGroupResource As ResourceGroupResource, Optional pgVersion As PgVersion = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PgVersionsResult))" />
      <MemberSignature Language="F#" Value="static member GetPostgresVersionsOrganizationAsync : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.ResourceManager.NeonPostgres.Models.PgVersion * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NeonPostgres.Models.PgVersionsResult&gt;&gt;" Usage="Azure.ResourceManager.NeonPostgres.NeonPostgresExtensions.GetPostgresVersionsOrganizationAsync (resourceGroupResource, pgVersion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.NeonPostgres</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.NeonPostgres.Models.PgVersionsResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="pgVersion" Type="Azure.ResourceManager.NeonPostgres.Models.PgVersion" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="pgVersion"> Post Action to retrieve the PostgreSQL versions. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Action to retrieve the PostgreSQL versions.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Neon.Postgres/getPostgresVersions</description></item><item><term>Operation Id</term><description>Organizations_GetPostgresVersions</description></item><item><term>Default Api Version</term><description>2025-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.NeonPostgres.NeonOrganizationResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.NeonPostgres.Mocking.MockableNeonPostgresResourceGroupResource.GetPostgresVersionsOrganization(Azure.ResourceManager.NeonPostgres.Models.PgVersion,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
