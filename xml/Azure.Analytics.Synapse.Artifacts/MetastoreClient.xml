<Type Name="MetastoreClient" FullName="Azure.Analytics.Synapse.Artifacts.MetastoreClient">
  <TypeSignature Language="C#" Value="public class MetastoreClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetastoreClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Synapse.Artifacts.MetastoreClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MetastoreClient" />
  <TypeSignature Language="F#" Value="type MetastoreClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The Metastore service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MetastoreClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.MetastoreClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of MetastoreClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetastoreClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.MetastoreClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, Optional options As ArtifactsClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Analytics.Synapse.Artifacts.MetastoreClient : Uri * Azure.Core.TokenCredential * Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions -&gt; Azure.Analytics.Synapse.Artifacts.MetastoreClient" Usage="new Azure.Analytics.Synapse.Artifacts.MetastoreClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint"> The workspace development endpoint, for example `https://myworkspace.dev.azuresynapse.net`. </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <param name="options"> The options for configuring the client. </param>
        <summary> Initializes a new instance of MetastoreClient. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Delete (string id, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Delete(string id, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.MetastoreClient.Delete(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (id As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Delete : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.Delete : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="metastoreClient.Delete (id, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="id"> The <see cref="T:System.String" /> to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Remove files in Syms. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteAsync (string id, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteAsync(string id, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.MetastoreClient.DeleteAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (id As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="metastoreClient.DeleteAsync (id, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="id"> The <see cref="T:System.String" /> to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Remove files in Syms. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabaseOperations">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.MetastoreRequestSuccessResponse&gt; GetDatabaseOperations (string id, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.MetastoreRequestSuccessResponse&gt; GetDatabaseOperations(string id, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.MetastoreClient.GetDatabaseOperations(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDatabaseOperations (id As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MetastoreRequestSuccessResponse)" />
      <MemberSignature Language="F#" Value="abstract member GetDatabaseOperations : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.MetastoreRequestSuccessResponse&gt;&#xA;override this.GetDatabaseOperations : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.MetastoreRequestSuccessResponse&gt;" Usage="metastoreClient.GetDatabaseOperations (id, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.MetastoreRequestSuccessResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="id"> The <see cref="T:System.String" /> to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets status of the database. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabaseOperationsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.MetastoreRequestSuccessResponse&gt;&gt; GetDatabaseOperationsAsync (string id, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.MetastoreRequestSuccessResponse&gt;&gt; GetDatabaseOperationsAsync(string id, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.MetastoreClient.GetDatabaseOperationsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDatabaseOperationsAsync (id As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MetastoreRequestSuccessResponse))" />
      <MemberSignature Language="F#" Value="abstract member GetDatabaseOperationsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.MetastoreRequestSuccessResponse&gt;&gt;&#xA;override this.GetDatabaseOperationsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.MetastoreRequestSuccessResponse&gt;&gt;" Usage="metastoreClient.GetDatabaseOperationsAsync (id, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.MetastoreRequestSuccessResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="id"> The <see cref="T:System.String" /> to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets status of the database. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.MetastoreRegistrationResponse&gt; Register (string id, Azure.Analytics.Synapse.Artifacts.Models.MetastoreRegisterObject registerBody, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.MetastoreRegistrationResponse&gt; Register(string id, class Azure.Analytics.Synapse.Artifacts.Models.MetastoreRegisterObject registerBody, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.MetastoreClient.Register(System.String,Azure.Analytics.Synapse.Artifacts.Models.MetastoreRegisterObject,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Register (id As String, registerBody As MetastoreRegisterObject, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MetastoreRegistrationResponse)" />
      <MemberSignature Language="F#" Value="abstract member Register : string * Azure.Analytics.Synapse.Artifacts.Models.MetastoreRegisterObject * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.MetastoreRegistrationResponse&gt;&#xA;override this.Register : string * Azure.Analytics.Synapse.Artifacts.Models.MetastoreRegisterObject * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.MetastoreRegistrationResponse&gt;" Usage="metastoreClient.Register (id, registerBody, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.MetastoreRegistrationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="registerBody" Type="Azure.Analytics.Synapse.Artifacts.Models.MetastoreRegisterObject" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="id"> The name of the database to be created. The name can contain only alphanumeric characters and should not exceed 24 characters. </param>
        <param name="registerBody"> The body for the register request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Register files in Syms. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.MetastoreRegistrationResponse&gt;&gt; RegisterAsync (string id, Azure.Analytics.Synapse.Artifacts.Models.MetastoreRegisterObject registerBody, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.MetastoreRegistrationResponse&gt;&gt; RegisterAsync(string id, class Azure.Analytics.Synapse.Artifacts.Models.MetastoreRegisterObject registerBody, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.MetastoreClient.RegisterAsync(System.String,Azure.Analytics.Synapse.Artifacts.Models.MetastoreRegisterObject,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RegisterAsync (id As String, registerBody As MetastoreRegisterObject, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MetastoreRegistrationResponse))" />
      <MemberSignature Language="F#" Value="abstract member RegisterAsync : string * Azure.Analytics.Synapse.Artifacts.Models.MetastoreRegisterObject * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.MetastoreRegistrationResponse&gt;&gt;&#xA;override this.RegisterAsync : string * Azure.Analytics.Synapse.Artifacts.Models.MetastoreRegisterObject * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.MetastoreRegistrationResponse&gt;&gt;" Usage="metastoreClient.RegisterAsync (id, registerBody, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.MetastoreRegistrationResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="registerBody" Type="Azure.Analytics.Synapse.Artifacts.Models.MetastoreRegisterObject" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="id"> The name of the database to be created. The name can contain only alphanumeric characters and should not exceed 24 characters. </param>
        <param name="registerBody"> The body for the register request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Register files in Syms. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.MetastoreUpdationResponse&gt; Update (string id, Azure.Analytics.Synapse.Artifacts.Models.MetastoreUpdateObject updateBody, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.MetastoreUpdationResponse&gt; Update(string id, class Azure.Analytics.Synapse.Artifacts.Models.MetastoreUpdateObject updateBody, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.MetastoreClient.Update(System.String,Azure.Analytics.Synapse.Artifacts.Models.MetastoreUpdateObject,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (id As String, updateBody As MetastoreUpdateObject, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MetastoreUpdationResponse)" />
      <MemberSignature Language="F#" Value="abstract member Update : string * Azure.Analytics.Synapse.Artifacts.Models.MetastoreUpdateObject * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.MetastoreUpdationResponse&gt;&#xA;override this.Update : string * Azure.Analytics.Synapse.Artifacts.Models.MetastoreUpdateObject * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.MetastoreUpdationResponse&gt;" Usage="metastoreClient.Update (id, updateBody, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.MetastoreUpdationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="updateBody" Type="Azure.Analytics.Synapse.Artifacts.Models.MetastoreUpdateObject" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="id"> The name of the database to be updated. </param>
        <param name="updateBody"> The body for the update request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Update files in Syms. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.MetastoreUpdationResponse&gt;&gt; UpdateAsync (string id, Azure.Analytics.Synapse.Artifacts.Models.MetastoreUpdateObject updateBody, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.MetastoreUpdationResponse&gt;&gt; UpdateAsync(string id, class Azure.Analytics.Synapse.Artifacts.Models.MetastoreUpdateObject updateBody, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.MetastoreClient.UpdateAsync(System.String,Azure.Analytics.Synapse.Artifacts.Models.MetastoreUpdateObject,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (id As String, updateBody As MetastoreUpdateObject, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MetastoreUpdationResponse))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : string * Azure.Analytics.Synapse.Artifacts.Models.MetastoreUpdateObject * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.MetastoreUpdationResponse&gt;&gt;&#xA;override this.UpdateAsync : string * Azure.Analytics.Synapse.Artifacts.Models.MetastoreUpdateObject * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.MetastoreUpdationResponse&gt;&gt;" Usage="metastoreClient.UpdateAsync (id, updateBody, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.MetastoreUpdationResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="updateBody" Type="Azure.Analytics.Synapse.Artifacts.Models.MetastoreUpdateObject" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="id"> The name of the database to be updated. </param>
        <param name="updateBody"> The body for the update request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Update files in Syms. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
