<Type Name="RunNotebookClient" FullName="Azure.Analytics.Synapse.Artifacts.RunNotebookClient">
  <TypeSignature Language="C#" Value="public class RunNotebookClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RunNotebookClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Synapse.Artifacts.RunNotebookClient" />
  <TypeSignature Language="VB.NET" Value="Public Class RunNotebookClient" />
  <TypeSignature Language="F#" Value="type RunNotebookClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The RunNotebook service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RunNotebookClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.RunNotebookClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of RunNotebookClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RunNotebookClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.RunNotebookClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, Optional options As ArtifactsClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Analytics.Synapse.Artifacts.RunNotebookClient : Uri * Azure.Core.TokenCredential * Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions -&gt; Azure.Analytics.Synapse.Artifacts.RunNotebookClient" Usage="new Azure.Analytics.Synapse.Artifacts.RunNotebookClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint"> The workspace development endpoint, for example `https://myworkspace.dev.azuresynapse.net`. </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <param name="options"> The options for configuring the client. </param>
        <summary> Initializes a new instance of RunNotebookClient. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelRun">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.RunNotebookResponse&gt; CancelRun (string runId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.RunNotebookResponse&gt; CancelRun(string runId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.RunNotebookClient.CancelRun(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelRun (runId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RunNotebookResponse)" />
      <MemberSignature Language="F#" Value="abstract member CancelRun : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.RunNotebookResponse&gt;&#xA;override this.CancelRun : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.RunNotebookResponse&gt;" Usage="runNotebookClient.CancelRun (runId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.RunNotebookResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="runId"> Notebook run id. For Create Run, you can generate a new GUID and use it here. For other actions, this is the same ID used in Create Run. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Cancel notebook run. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelRunAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.RunNotebookResponse&gt;&gt; CancelRunAsync (string runId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.RunNotebookResponse&gt;&gt; CancelRunAsync(string runId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.RunNotebookClient.CancelRunAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelRunAsync (runId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RunNotebookResponse))" />
      <MemberSignature Language="F#" Value="abstract member CancelRunAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.RunNotebookResponse&gt;&gt;&#xA;override this.CancelRunAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.RunNotebookResponse&gt;&gt;" Usage="runNotebookClient.CancelRunAsync (runId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.RunNotebookResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="runId"> Notebook run id. For Create Run, you can generate a new GUID and use it here. For other actions, this is the same ID used in Create Run. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Cancel notebook run. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSnapshot">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.RunNotebookSnapshotResponse&gt; GetSnapshot (string runId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.RunNotebookSnapshotResponse&gt; GetSnapshot(string runId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.RunNotebookClient.GetSnapshot(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSnapshot (runId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RunNotebookSnapshotResponse)" />
      <MemberSignature Language="F#" Value="abstract member GetSnapshot : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.RunNotebookSnapshotResponse&gt;&#xA;override this.GetSnapshot : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.RunNotebookSnapshotResponse&gt;" Usage="runNotebookClient.GetSnapshot (runId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.RunNotebookSnapshotResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="runId"> Notebook run id. For Create Run, you can generate a new GUID and use it here. For other actions, this is the same ID used in Create Run. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get RunNotebook Snapshot for run id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSnapshotAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.RunNotebookSnapshotResponse&gt;&gt; GetSnapshotAsync (string runId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.RunNotebookSnapshotResponse&gt;&gt; GetSnapshotAsync(string runId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.RunNotebookClient.GetSnapshotAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSnapshotAsync (runId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RunNotebookSnapshotResponse))" />
      <MemberSignature Language="F#" Value="abstract member GetSnapshotAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.RunNotebookSnapshotResponse&gt;&gt;&#xA;override this.GetSnapshotAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.RunNotebookSnapshotResponse&gt;&gt;" Usage="runNotebookClient.GetSnapshotAsync (runId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.RunNotebookSnapshotResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="runId"> Notebook run id. For Create Run, you can generate a new GUID and use it here. For other actions, this is the same ID used in Create Run. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get RunNotebook Snapshot for run id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStatus">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.RunNotebookResponse&gt; GetStatus (string runId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.RunNotebookResponse&gt; GetStatus(string runId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.RunNotebookClient.GetStatus(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStatus (runId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RunNotebookResponse)" />
      <MemberSignature Language="F#" Value="abstract member GetStatus : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.RunNotebookResponse&gt;&#xA;override this.GetStatus : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.RunNotebookResponse&gt;" Usage="runNotebookClient.GetStatus (runId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.RunNotebookResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="runId"> Notebook run id. For Create Run, you can generate a new GUID and use it here. For other actions, this is the same ID used in Create Run. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get RunNotebook Status for run id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStatusAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.RunNotebookResponse&gt;&gt; GetStatusAsync (string runId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.RunNotebookResponse&gt;&gt; GetStatusAsync(string runId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.RunNotebookClient.GetStatusAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStatusAsync (runId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RunNotebookResponse))" />
      <MemberSignature Language="F#" Value="abstract member GetStatusAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.RunNotebookResponse&gt;&gt;&#xA;override this.GetStatusAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.RunNotebookResponse&gt;&gt;" Usage="runNotebookClient.GetStatusAsync (runId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.RunNotebookResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="runId"> Notebook run id. For Create Run, you can generate a new GUID and use it here. For other actions, this is the same ID used in Create Run. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get RunNotebook Status for run id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCreateRun">
      <MemberSignature Language="C#" Value="public virtual Azure.Analytics.Synapse.Artifacts.RunNotebookCreateRunOperation StartCreateRun (string runId, Azure.Analytics.Synapse.Artifacts.Models.RunNotebookRequest runNotebookRequest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Analytics.Synapse.Artifacts.RunNotebookCreateRunOperation StartCreateRun(string runId, class Azure.Analytics.Synapse.Artifacts.Models.RunNotebookRequest runNotebookRequest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.RunNotebookClient.StartCreateRun(System.String,Azure.Analytics.Synapse.Artifacts.Models.RunNotebookRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateRun (runId As String, runNotebookRequest As RunNotebookRequest, Optional cancellationToken As CancellationToken = Nothing) As RunNotebookCreateRunOperation" />
      <MemberSignature Language="F#" Value="abstract member StartCreateRun : string * Azure.Analytics.Synapse.Artifacts.Models.RunNotebookRequest * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Artifacts.RunNotebookCreateRunOperation&#xA;override this.StartCreateRun : string * Azure.Analytics.Synapse.Artifacts.Models.RunNotebookRequest * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Artifacts.RunNotebookCreateRunOperation" Usage="runNotebookClient.StartCreateRun (runId, runNotebookRequest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Artifacts.RunNotebookCreateRunOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="runNotebookRequest" Type="Azure.Analytics.Synapse.Artifacts.Models.RunNotebookRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="runId"> Notebook run id. For Create Run, you can generate a new GUID and use it here. For other actions, this is the same ID used in Create Run. </param>
        <param name="runNotebookRequest"> Run notebook request payload. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Run notebook. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="runId" /> or <paramref name="runNotebookRequest" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartCreateRunAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.RunNotebookCreateRunOperation&gt; StartCreateRunAsync (string runId, Azure.Analytics.Synapse.Artifacts.Models.RunNotebookRequest runNotebookRequest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Analytics.Synapse.Artifacts.RunNotebookCreateRunOperation&gt; StartCreateRunAsync(string runId, class Azure.Analytics.Synapse.Artifacts.Models.RunNotebookRequest runNotebookRequest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.RunNotebookClient.StartCreateRunAsync(System.String,Azure.Analytics.Synapse.Artifacts.Models.RunNotebookRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateRunAsync (runId As String, runNotebookRequest As RunNotebookRequest, Optional cancellationToken As CancellationToken = Nothing) As Task(Of RunNotebookCreateRunOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartCreateRunAsync : string * Azure.Analytics.Synapse.Artifacts.Models.RunNotebookRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.RunNotebookCreateRunOperation&gt;&#xA;override this.StartCreateRunAsync : string * Azure.Analytics.Synapse.Artifacts.Models.RunNotebookRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.RunNotebookCreateRunOperation&gt;" Usage="runNotebookClient.StartCreateRunAsync (runId, runNotebookRequest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.RunNotebookCreateRunOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="runNotebookRequest" Type="Azure.Analytics.Synapse.Artifacts.Models.RunNotebookRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="runId"> Notebook run id. For Create Run, you can generate a new GUID and use it here. For other actions, this is the same ID used in Create Run. </param>
        <param name="runNotebookRequest"> Run notebook request payload. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Run notebook. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="runId" /> or <paramref name="runNotebookRequest" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
