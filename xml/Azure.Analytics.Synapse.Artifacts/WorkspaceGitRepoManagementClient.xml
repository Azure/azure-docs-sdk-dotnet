<Type Name="WorkspaceGitRepoManagementClient" FullName="Azure.Analytics.Synapse.Artifacts.WorkspaceGitRepoManagementClient">
  <TypeSignature Language="C#" Value="public class WorkspaceGitRepoManagementClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkspaceGitRepoManagementClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Synapse.Artifacts.WorkspaceGitRepoManagementClient" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkspaceGitRepoManagementClient" />
  <TypeSignature Language="F#" Value="type WorkspaceGitRepoManagementClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The WorkspaceGitRepoManagement service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkspaceGitRepoManagementClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.WorkspaceGitRepoManagementClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of WorkspaceGitRepoManagementClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkspaceGitRepoManagementClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.WorkspaceGitRepoManagementClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, Optional options As ArtifactsClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Analytics.Synapse.Artifacts.WorkspaceGitRepoManagementClient : Uri * Azure.Core.TokenCredential * Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions -&gt; Azure.Analytics.Synapse.Artifacts.WorkspaceGitRepoManagementClient" Usage="new Azure.Analytics.Synapse.Artifacts.WorkspaceGitRepoManagementClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint"> The workspace development endpoint, for example `https://myworkspace.dev.azuresynapse.net`. </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <param name="options"> The options for configuring the client. </param>
        <summary> Initializes a new instance of WorkspaceGitRepoManagementClient. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGitHubAccessToken">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.GitHubAccessTokenResponse&gt; GetGitHubAccessToken (Azure.Analytics.Synapse.Artifacts.Models.GitHubAccessTokenRequest gitHubAccessTokenRequest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.GitHubAccessTokenResponse&gt; GetGitHubAccessToken(class Azure.Analytics.Synapse.Artifacts.Models.GitHubAccessTokenRequest gitHubAccessTokenRequest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.WorkspaceGitRepoManagementClient.GetGitHubAccessToken(Azure.Analytics.Synapse.Artifacts.Models.GitHubAccessTokenRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGitHubAccessToken (gitHubAccessTokenRequest As GitHubAccessTokenRequest, Optional cancellationToken As CancellationToken = Nothing) As Response(Of GitHubAccessTokenResponse)" />
      <MemberSignature Language="F#" Value="abstract member GetGitHubAccessToken : Azure.Analytics.Synapse.Artifacts.Models.GitHubAccessTokenRequest * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.GitHubAccessTokenResponse&gt;&#xA;override this.GetGitHubAccessToken : Azure.Analytics.Synapse.Artifacts.Models.GitHubAccessTokenRequest * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.GitHubAccessTokenResponse&gt;" Usage="workspaceGitRepoManagementClient.GetGitHubAccessToken (gitHubAccessTokenRequest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.GitHubAccessTokenResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gitHubAccessTokenRequest" Type="Azure.Analytics.Synapse.Artifacts.Models.GitHubAccessTokenRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="gitHubAccessTokenRequest"> The <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.GitHubAccessTokenRequest" /> to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get the GitHub access token. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGitHubAccessTokenAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.GitHubAccessTokenResponse&gt;&gt; GetGitHubAccessTokenAsync (Azure.Analytics.Synapse.Artifacts.Models.GitHubAccessTokenRequest gitHubAccessTokenRequest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.GitHubAccessTokenResponse&gt;&gt; GetGitHubAccessTokenAsync(class Azure.Analytics.Synapse.Artifacts.Models.GitHubAccessTokenRequest gitHubAccessTokenRequest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.WorkspaceGitRepoManagementClient.GetGitHubAccessTokenAsync(Azure.Analytics.Synapse.Artifacts.Models.GitHubAccessTokenRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGitHubAccessTokenAsync (gitHubAccessTokenRequest As GitHubAccessTokenRequest, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of GitHubAccessTokenResponse))" />
      <MemberSignature Language="F#" Value="abstract member GetGitHubAccessTokenAsync : Azure.Analytics.Synapse.Artifacts.Models.GitHubAccessTokenRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.GitHubAccessTokenResponse&gt;&gt;&#xA;override this.GetGitHubAccessTokenAsync : Azure.Analytics.Synapse.Artifacts.Models.GitHubAccessTokenRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.GitHubAccessTokenResponse&gt;&gt;" Usage="workspaceGitRepoManagementClient.GetGitHubAccessTokenAsync (gitHubAccessTokenRequest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.GitHubAccessTokenResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gitHubAccessTokenRequest" Type="Azure.Analytics.Synapse.Artifacts.Models.GitHubAccessTokenRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="gitHubAccessTokenRequest"> The <see cref="T:Azure.Analytics.Synapse.Artifacts.Models.GitHubAccessTokenRequest" /> to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get the GitHub access token. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
