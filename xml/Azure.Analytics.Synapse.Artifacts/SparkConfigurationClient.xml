<Type Name="SparkConfigurationClient" FullName="Azure.Analytics.Synapse.Artifacts.SparkConfigurationClient">
  <TypeSignature Language="C#" Value="public class SparkConfigurationClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SparkConfigurationClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Synapse.Artifacts.SparkConfigurationClient" />
  <TypeSignature Language="VB.NET" Value="Public Class SparkConfigurationClient" />
  <TypeSignature Language="F#" Value="type SparkConfigurationClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The SparkConfiguration service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SparkConfigurationClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.SparkConfigurationClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of SparkConfigurationClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SparkConfigurationClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.SparkConfigurationClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, Optional options As ArtifactsClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Analytics.Synapse.Artifacts.SparkConfigurationClient : Uri * Azure.Core.TokenCredential * Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions -&gt; Azure.Analytics.Synapse.Artifacts.SparkConfigurationClient" Usage="new Azure.Analytics.Synapse.Artifacts.SparkConfigurationClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint"> The workspace development endpoint, for example https://myworkspace.dev.azuresynapse.net. </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <param name="options"> The options for configuring the client. </param>
        <summary> Initializes a new instance of SparkConfigurationClient. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSparkConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource&gt; GetSparkConfiguration (string sparkConfigurationName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource&gt; GetSparkConfiguration(string sparkConfigurationName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.SparkConfigurationClient.GetSparkConfiguration(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSparkConfiguration (sparkConfigurationName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SparkConfigurationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSparkConfiguration : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource&gt;&#xA;override this.GetSparkConfiguration : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource&gt;" Usage="sparkConfigurationClient.GetSparkConfiguration (sparkConfigurationName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sparkConfigurationName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sparkConfigurationName"> The spark Configuration name. </param>
        <param name="ifNoneMatch"> ETag of the sparkConfiguration entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a sparkConfiguration. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSparkConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource&gt;&gt; GetSparkConfigurationAsync (string sparkConfigurationName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource&gt;&gt; GetSparkConfigurationAsync(string sparkConfigurationName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.SparkConfigurationClient.GetSparkConfigurationAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSparkConfigurationAsync (sparkConfigurationName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SparkConfigurationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSparkConfigurationAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource&gt;&gt;&#xA;override this.GetSparkConfigurationAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource&gt;&gt;" Usage="sparkConfigurationClient.GetSparkConfigurationAsync (sparkConfigurationName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sparkConfigurationName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sparkConfigurationName"> The spark Configuration name. </param>
        <param name="ifNoneMatch"> ETag of the sparkConfiguration entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a sparkConfiguration. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSparkConfigurationsByWorkspace">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource&gt; GetSparkConfigurationsByWorkspace (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource&gt; GetSparkConfigurationsByWorkspace(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.SparkConfigurationClient.GetSparkConfigurationsByWorkspace(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSparkConfigurationsByWorkspace (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SparkConfigurationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSparkConfigurationsByWorkspace : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource&gt;&#xA;override this.GetSparkConfigurationsByWorkspace : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource&gt;" Usage="sparkConfigurationClient.GetSparkConfigurationsByWorkspace cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Lists sparkconfigurations. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSparkConfigurationsByWorkspaceAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource&gt; GetSparkConfigurationsByWorkspaceAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource&gt; GetSparkConfigurationsByWorkspaceAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.SparkConfigurationClient.GetSparkConfigurationsByWorkspaceAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSparkConfigurationsByWorkspaceAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SparkConfigurationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSparkConfigurationsByWorkspaceAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource&gt;&#xA;override this.GetSparkConfigurationsByWorkspaceAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource&gt;" Usage="sparkConfigurationClient.GetSparkConfigurationsByWorkspaceAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Lists sparkconfigurations. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCreateOrUpdateSparkConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.Analytics.Synapse.Artifacts.SparkConfigurationCreateOrUpdateSparkConfigurationOperation StartCreateOrUpdateSparkConfiguration (string sparkConfigurationName, Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource sparkConfiguration, string ifMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Analytics.Synapse.Artifacts.SparkConfigurationCreateOrUpdateSparkConfigurationOperation StartCreateOrUpdateSparkConfiguration(string sparkConfigurationName, class Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource sparkConfiguration, string ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.SparkConfigurationClient.StartCreateOrUpdateSparkConfiguration(System.String,Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateOrUpdateSparkConfiguration (sparkConfigurationName As String, sparkConfiguration As SparkConfigurationResource, Optional ifMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As SparkConfigurationCreateOrUpdateSparkConfigurationOperation" />
      <MemberSignature Language="F#" Value="abstract member StartCreateOrUpdateSparkConfiguration : string * Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource * string * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Artifacts.SparkConfigurationCreateOrUpdateSparkConfigurationOperation&#xA;override this.StartCreateOrUpdateSparkConfiguration : string * Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource * string * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Artifacts.SparkConfigurationCreateOrUpdateSparkConfigurationOperation" Usage="sparkConfigurationClient.StartCreateOrUpdateSparkConfiguration (sparkConfigurationName, sparkConfiguration, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Artifacts.SparkConfigurationCreateOrUpdateSparkConfigurationOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sparkConfigurationName" Type="System.String" />
        <Parameter Name="sparkConfiguration" Type="Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sparkConfigurationName"> The spark Configuration name. </param>
        <param name="sparkConfiguration"> SparkConfiguration resource definition. </param>
        <param name="ifMatch"> ETag of the sparkConfiguration entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates or updates a sparkconfiguration. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sparkConfigurationName" /> or <paramref name="sparkConfiguration" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartCreateOrUpdateSparkConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.SparkConfigurationCreateOrUpdateSparkConfigurationOperation&gt; StartCreateOrUpdateSparkConfigurationAsync (string sparkConfigurationName, Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource sparkConfiguration, string ifMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Analytics.Synapse.Artifacts.SparkConfigurationCreateOrUpdateSparkConfigurationOperation&gt; StartCreateOrUpdateSparkConfigurationAsync(string sparkConfigurationName, class Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource sparkConfiguration, string ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.SparkConfigurationClient.StartCreateOrUpdateSparkConfigurationAsync(System.String,Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateOrUpdateSparkConfigurationAsync (sparkConfigurationName As String, sparkConfiguration As SparkConfigurationResource, Optional ifMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of SparkConfigurationCreateOrUpdateSparkConfigurationOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartCreateOrUpdateSparkConfigurationAsync : string * Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.SparkConfigurationCreateOrUpdateSparkConfigurationOperation&gt;&#xA;override this.StartCreateOrUpdateSparkConfigurationAsync : string * Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.SparkConfigurationCreateOrUpdateSparkConfigurationOperation&gt;" Usage="sparkConfigurationClient.StartCreateOrUpdateSparkConfigurationAsync (sparkConfigurationName, sparkConfiguration, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.SparkConfigurationCreateOrUpdateSparkConfigurationOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sparkConfigurationName" Type="System.String" />
        <Parameter Name="sparkConfiguration" Type="Azure.Analytics.Synapse.Artifacts.Models.SparkConfigurationResource" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sparkConfigurationName"> The spark Configuration name. </param>
        <param name="sparkConfiguration"> SparkConfiguration resource definition. </param>
        <param name="ifMatch"> ETag of the sparkConfiguration entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates or updates a sparkconfiguration. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sparkConfigurationName" /> or <paramref name="sparkConfiguration" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartDeleteSparkConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.Analytics.Synapse.Artifacts.SparkConfigurationDeleteSparkConfigurationOperation StartDeleteSparkConfiguration (string sparkConfigurationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Analytics.Synapse.Artifacts.SparkConfigurationDeleteSparkConfigurationOperation StartDeleteSparkConfiguration(string sparkConfigurationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.SparkConfigurationClient.StartDeleteSparkConfiguration(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDeleteSparkConfiguration (sparkConfigurationName As String, Optional cancellationToken As CancellationToken = Nothing) As SparkConfigurationDeleteSparkConfigurationOperation" />
      <MemberSignature Language="F#" Value="abstract member StartDeleteSparkConfiguration : string * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Artifacts.SparkConfigurationDeleteSparkConfigurationOperation&#xA;override this.StartDeleteSparkConfiguration : string * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Artifacts.SparkConfigurationDeleteSparkConfigurationOperation" Usage="sparkConfigurationClient.StartDeleteSparkConfiguration (sparkConfigurationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Artifacts.SparkConfigurationDeleteSparkConfigurationOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sparkConfigurationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sparkConfigurationName"> The spark Configuration name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes a sparkConfiguration. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sparkConfigurationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartDeleteSparkConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.SparkConfigurationDeleteSparkConfigurationOperation&gt; StartDeleteSparkConfigurationAsync (string sparkConfigurationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Analytics.Synapse.Artifacts.SparkConfigurationDeleteSparkConfigurationOperation&gt; StartDeleteSparkConfigurationAsync(string sparkConfigurationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.SparkConfigurationClient.StartDeleteSparkConfigurationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDeleteSparkConfigurationAsync (sparkConfigurationName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of SparkConfigurationDeleteSparkConfigurationOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartDeleteSparkConfigurationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.SparkConfigurationDeleteSparkConfigurationOperation&gt;&#xA;override this.StartDeleteSparkConfigurationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.SparkConfigurationDeleteSparkConfigurationOperation&gt;" Usage="sparkConfigurationClient.StartDeleteSparkConfigurationAsync (sparkConfigurationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.SparkConfigurationDeleteSparkConfigurationOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sparkConfigurationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sparkConfigurationName"> The spark Configuration name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes a sparkConfiguration. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sparkConfigurationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartRenameSparkConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.Analytics.Synapse.Artifacts.SparkConfigurationRenameSparkConfigurationOperation StartRenameSparkConfiguration (string sparkConfigurationName, Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest request, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Analytics.Synapse.Artifacts.SparkConfigurationRenameSparkConfigurationOperation StartRenameSparkConfiguration(string sparkConfigurationName, class Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.SparkConfigurationClient.StartRenameSparkConfiguration(System.String,Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRenameSparkConfiguration (sparkConfigurationName As String, request As ArtifactRenameRequest, Optional cancellationToken As CancellationToken = Nothing) As SparkConfigurationRenameSparkConfigurationOperation" />
      <MemberSignature Language="F#" Value="abstract member StartRenameSparkConfiguration : string * Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Artifacts.SparkConfigurationRenameSparkConfigurationOperation&#xA;override this.StartRenameSparkConfiguration : string * Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Artifacts.SparkConfigurationRenameSparkConfigurationOperation" Usage="sparkConfigurationClient.StartRenameSparkConfiguration (sparkConfigurationName, request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Artifacts.SparkConfigurationRenameSparkConfigurationOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sparkConfigurationName" Type="System.String" />
        <Parameter Name="request" Type="Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sparkConfigurationName"> The spark Configuration name. </param>
        <param name="request"> proposed new name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Renames a sparkConfiguration. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sparkConfigurationName" /> or <paramref name="request" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartRenameSparkConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.SparkConfigurationRenameSparkConfigurationOperation&gt; StartRenameSparkConfigurationAsync (string sparkConfigurationName, Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest request, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Analytics.Synapse.Artifacts.SparkConfigurationRenameSparkConfigurationOperation&gt; StartRenameSparkConfigurationAsync(string sparkConfigurationName, class Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.SparkConfigurationClient.StartRenameSparkConfigurationAsync(System.String,Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRenameSparkConfigurationAsync (sparkConfigurationName As String, request As ArtifactRenameRequest, Optional cancellationToken As CancellationToken = Nothing) As Task(Of SparkConfigurationRenameSparkConfigurationOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartRenameSparkConfigurationAsync : string * Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.SparkConfigurationRenameSparkConfigurationOperation&gt;&#xA;override this.StartRenameSparkConfigurationAsync : string * Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.SparkConfigurationRenameSparkConfigurationOperation&gt;" Usage="sparkConfigurationClient.StartRenameSparkConfigurationAsync (sparkConfigurationName, request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.SparkConfigurationRenameSparkConfigurationOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sparkConfigurationName" Type="System.String" />
        <Parameter Name="request" Type="Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sparkConfigurationName"> The spark Configuration name. </param>
        <param name="request"> proposed new name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Renames a sparkConfiguration. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sparkConfigurationName" /> or <paramref name="request" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
