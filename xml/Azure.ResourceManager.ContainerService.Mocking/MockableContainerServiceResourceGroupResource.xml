<Type Name="MockableContainerServiceResourceGroupResource" FullName="Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableContainerServiceResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableContainerServiceResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableContainerServiceResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableContainerServiceResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableContainerServiceResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentPoolSnapshot">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource&gt; GetAgentPoolSnapshot (string resourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource&gt; GetAgentPoolSnapshot(string resourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceResourceGroupResource.GetAgentPoolSnapshot(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAgentPoolSnapshot (resourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AgentPoolSnapshotResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentPoolSnapshot : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource&gt;&#xA;override this.GetAgentPoolSnapshot : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource&gt;" Usage="mockableContainerServiceResourceGroupResource.GetAgentPoolSnapshot (resourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceName"> The name of the managed cluster resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a snapshot.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/snapshots/{resourceName}</description></item><item><term>Operation Id</term><description>Snapshots_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAgentPoolSnapshotAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource&gt;&gt; GetAgentPoolSnapshotAsync (string resourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource&gt;&gt; GetAgentPoolSnapshotAsync(string resourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceResourceGroupResource.GetAgentPoolSnapshotAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAgentPoolSnapshotAsync (resourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AgentPoolSnapshotResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAgentPoolSnapshotAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource&gt;&gt;&#xA;override this.GetAgentPoolSnapshotAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource&gt;&gt;" Usage="mockableContainerServiceResourceGroupResource.GetAgentPoolSnapshotAsync (resourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceName"> The name of the managed cluster resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a snapshot.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/snapshots/{resourceName}</description></item><item><term>Operation Id</term><description>Snapshots_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAgentPoolSnapshots">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ContainerService.AgentPoolSnapshotCollection GetAgentPoolSnapshots ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ContainerService.AgentPoolSnapshotCollection GetAgentPoolSnapshots() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceResourceGroupResource.GetAgentPoolSnapshots" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAgentPoolSnapshots () As AgentPoolSnapshotCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAgentPoolSnapshots : unit -&gt; Azure.ResourceManager.ContainerService.AgentPoolSnapshotCollection&#xA;override this.GetAgentPoolSnapshots : unit -&gt; Azure.ResourceManager.ContainerService.AgentPoolSnapshotCollection" Usage="mockableContainerServiceResourceGroupResource.GetAgentPoolSnapshots " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.AgentPoolSnapshotCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AgentPoolSnapshotResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of AgentPoolSnapshotResources and their operations over a AgentPoolSnapshotResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerServiceManagedCluster">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource&gt; GetContainerServiceManagedCluster (string resourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource&gt; GetContainerServiceManagedCluster(string resourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceResourceGroupResource.GetContainerServiceManagedCluster(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerServiceManagedCluster (resourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ContainerServiceManagedClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetContainerServiceManagedCluster : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource&gt;&#xA;override this.GetContainerServiceManagedCluster : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource&gt;" Usage="mockableContainerServiceResourceGroupResource.GetContainerServiceManagedCluster (resourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceName"> The name of the managed cluster resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a managed cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}</description></item><item><term>Operation Id</term><description>ManagedClusters_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetContainerServiceManagedClusterAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource&gt;&gt; GetContainerServiceManagedClusterAsync (string resourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource&gt;&gt; GetContainerServiceManagedClusterAsync(string resourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceResourceGroupResource.GetContainerServiceManagedClusterAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerServiceManagedClusterAsync (resourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ContainerServiceManagedClusterResource))" />
      <MemberSignature Language="F#" Value="abstract member GetContainerServiceManagedClusterAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource&gt;&gt;&#xA;override this.GetContainerServiceManagedClusterAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource&gt;&gt;" Usage="mockableContainerServiceResourceGroupResource.GetContainerServiceManagedClusterAsync (resourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceName"> The name of the managed cluster resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a managed cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}</description></item><item><term>Operation Id</term><description>ManagedClusters_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetContainerServiceManagedClusters">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterCollection GetContainerServiceManagedClusters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterCollection GetContainerServiceManagedClusters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceResourceGroupResource.GetContainerServiceManagedClusters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerServiceManagedClusters () As ContainerServiceManagedClusterCollection" />
      <MemberSignature Language="F#" Value="abstract member GetContainerServiceManagedClusters : unit -&gt; Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterCollection&#xA;override this.GetContainerServiceManagedClusters : unit -&gt; Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterCollection" Usage="mockableContainerServiceResourceGroupResource.GetContainerServiceManagedClusters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ContainerServiceManagedClusterResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of ContainerServiceManagedClusterResources and their operations over a ContainerServiceManagedClusterResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
