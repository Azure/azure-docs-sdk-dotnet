<Type Name="MockableContainerServiceSubscriptionResource" FullName="Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableContainerServiceSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableContainerServiceSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableContainerServiceSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableContainerServiceSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableContainerServiceSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentPoolSnapshots">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource&gt; GetAgentPoolSnapshots (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource&gt; GetAgentPoolSnapshots(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceSubscriptionResource.GetAgentPoolSnapshots(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAgentPoolSnapshots (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AgentPoolSnapshotResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentPoolSnapshots : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource&gt;&#xA;override this.GetAgentPoolSnapshots : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource&gt;" Usage="mockableContainerServiceSubscriptionResource.GetAgentPoolSnapshots cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of snapshots in the specified subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/snapshots</description></item><item><term>Operation Id</term><description>Snapshots_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentPoolSnapshotsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource&gt; GetAgentPoolSnapshotsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource&gt; GetAgentPoolSnapshotsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceSubscriptionResource.GetAgentPoolSnapshotsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAgentPoolSnapshotsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AgentPoolSnapshotResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentPoolSnapshotsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource&gt;&#xA;override this.GetAgentPoolSnapshotsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource&gt;" Usage="mockableContainerServiceSubscriptionResource.GetAgentPoolSnapshotsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of snapshots in the specified subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/snapshots</description></item><item><term>Operation Id</term><description>Snapshots_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerServiceFleets">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ContainerService.ContainerServiceFleetResource&gt; GetContainerServiceFleets (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ContainerService.ContainerServiceFleetResource&gt; GetContainerServiceFleets(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceSubscriptionResource.GetContainerServiceFleets(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerServiceFleets (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ContainerServiceFleetResource)" />
      <MemberSignature Language="F#" Value="abstract member GetContainerServiceFleets : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ContainerService.ContainerServiceFleetResource&gt;&#xA;override this.GetContainerServiceFleets : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ContainerService.ContainerServiceFleetResource&gt;" Usage="mockableContainerServiceSubscriptionResource.GetContainerServiceFleets cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ContainerService.ContainerServiceFleetResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists fleets in the specified subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/fleets</description></item><item><term>Operation Id</term><description>Fleets_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceFleetResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerServiceFleetsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerService.ContainerServiceFleetResource&gt; GetContainerServiceFleetsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ContainerService.ContainerServiceFleetResource&gt; GetContainerServiceFleetsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceSubscriptionResource.GetContainerServiceFleetsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerServiceFleetsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ContainerServiceFleetResource)" />
      <MemberSignature Language="F#" Value="abstract member GetContainerServiceFleetsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerService.ContainerServiceFleetResource&gt;&#xA;override this.GetContainerServiceFleetsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerService.ContainerServiceFleetResource&gt;" Usage="mockableContainerServiceSubscriptionResource.GetContainerServiceFleetsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerService.ContainerServiceFleetResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists fleets in the specified subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/fleets</description></item><item><term>Operation Id</term><description>Fleets_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceFleetResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerServiceManagedClusters">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource&gt; GetContainerServiceManagedClusters (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource&gt; GetContainerServiceManagedClusters(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceSubscriptionResource.GetContainerServiceManagedClusters(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerServiceManagedClusters (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ContainerServiceManagedClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetContainerServiceManagedClusters : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource&gt;&#xA;override this.GetContainerServiceManagedClusters : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource&gt;" Usage="mockableContainerServiceSubscriptionResource.GetContainerServiceManagedClusters cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of managed clusters in the specified subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/managedClusters</description></item><item><term>Operation Id</term><description>ManagedClusters_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerServiceManagedClustersAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource&gt; GetContainerServiceManagedClustersAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource&gt; GetContainerServiceManagedClustersAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceSubscriptionResource.GetContainerServiceManagedClustersAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerServiceManagedClustersAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ContainerServiceManagedClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetContainerServiceManagedClustersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource&gt;&#xA;override this.GetContainerServiceManagedClustersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource&gt;" Usage="mockableContainerServiceSubscriptionResource.GetContainerServiceManagedClustersAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of managed clusters in the specified subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/managedClusters</description></item><item><term>Operation Id</term><description>ManagedClusters_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedClusterSnapshots">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ContainerService.ManagedClusterSnapshotResource&gt; GetManagedClusterSnapshots (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ContainerService.ManagedClusterSnapshotResource&gt; GetManagedClusterSnapshots(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceSubscriptionResource.GetManagedClusterSnapshots(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedClusterSnapshots (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ManagedClusterSnapshotResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedClusterSnapshots : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ContainerService.ManagedClusterSnapshotResource&gt;&#xA;override this.GetManagedClusterSnapshots : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ContainerService.ManagedClusterSnapshotResource&gt;" Usage="mockableContainerServiceSubscriptionResource.GetManagedClusterSnapshots cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ContainerService.ManagedClusterSnapshotResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of managed cluster snapshots in the specified subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/managedclustersnapshots</description></item><item><term>Operation Id</term><description>ManagedClusterSnapshots_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ContainerService.ManagedClusterSnapshotResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedClusterSnapshotsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerService.ManagedClusterSnapshotResource&gt; GetManagedClusterSnapshotsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ContainerService.ManagedClusterSnapshotResource&gt; GetManagedClusterSnapshotsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceSubscriptionResource.GetManagedClusterSnapshotsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedClusterSnapshotsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ManagedClusterSnapshotResource)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedClusterSnapshotsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerService.ManagedClusterSnapshotResource&gt;&#xA;override this.GetManagedClusterSnapshotsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerService.ManagedClusterSnapshotResource&gt;" Usage="mockableContainerServiceSubscriptionResource.GetManagedClusterSnapshotsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerService.ManagedClusterSnapshotResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of managed cluster snapshots in the specified subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/managedclustersnapshots</description></item><item><term>Operation Id</term><description>ManagedClusterSnapshots_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ContainerService.ManagedClusterSnapshotResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOSOptionProfile">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ContainerService.OSOptionProfileResource GetOSOptionProfile (Azure.Core.AzureLocation location);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ContainerService.OSOptionProfileResource GetOSOptionProfile(valuetype Azure.Core.AzureLocation location) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceSubscriptionResource.GetOSOptionProfile(Azure.Core.AzureLocation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOSOptionProfile (location As AzureLocation) As OSOptionProfileResource" />
      <MemberSignature Language="F#" Value="abstract member GetOSOptionProfile : Azure.Core.AzureLocation -&gt; Azure.ResourceManager.ContainerService.OSOptionProfileResource&#xA;override this.GetOSOptionProfile : Azure.Core.AzureLocation -&gt; Azure.ResourceManager.ContainerService.OSOptionProfileResource" Usage="mockableContainerServiceSubscriptionResource.GetOSOptionProfile location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.OSOptionProfileResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
      </Parameters>
      <Docs>
        <param name="location"> The name of Azure region. </param>
        <summary> Gets an object representing a OSOptionProfileResource along with the instance operations that can be performed on it in the SubscriptionResource. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerService.OSOptionProfileResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrustedAccessRoles">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRole&gt; GetTrustedAccessRoles (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRole&gt; GetTrustedAccessRoles(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceSubscriptionResource.GetTrustedAccessRoles(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTrustedAccessRoles (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ContainerServiceTrustedAccessRole)" />
      <MemberSignature Language="F#" Value="abstract member GetTrustedAccessRoles : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRole&gt;&#xA;override this.GetTrustedAccessRoles : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRole&gt;" Usage="mockableContainerServiceSubscriptionResource.GetTrustedAccessRoles (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRole&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of Azure region. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List supported trusted access roles.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/locations/{location}/trustedAccessRoles</description></item><item><term>Operation Id</term><description>TrustedAccessRoles_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRole" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrustedAccessRolesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRole&gt; GetTrustedAccessRolesAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRole&gt; GetTrustedAccessRolesAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceSubscriptionResource.GetTrustedAccessRolesAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTrustedAccessRolesAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ContainerServiceTrustedAccessRole)" />
      <MemberSignature Language="F#" Value="abstract member GetTrustedAccessRolesAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRole&gt;&#xA;override this.GetTrustedAccessRolesAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRole&gt;" Usage="mockableContainerServiceSubscriptionResource.GetTrustedAccessRolesAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRole&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of Azure region. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List supported trusted access roles.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/locations/{location}/trustedAccessRoles</description></item><item><term>Operation Id</term><description>TrustedAccessRoles_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ContainerService.Models.ContainerServiceTrustedAccessRole" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
