<Type Name="MockableContainerServiceArmClient" FullName="Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceArmClient">
  <TypeSignature Language="C#" Value="public class MockableContainerServiceArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableContainerServiceArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableContainerServiceArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableContainerServiceArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableContainerServiceArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentPoolSnapshotResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource GetAgentPoolSnapshotResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource GetAgentPoolSnapshotResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceArmClient.GetAgentPoolSnapshotResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAgentPoolSnapshotResource (id As ResourceIdentifier) As AgentPoolSnapshotResource" />
      <MemberSignature Language="F#" Value="abstract member GetAgentPoolSnapshotResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource&#xA;override this.GetAgentPoolSnapshotResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource" Usage="mockableContainerServiceArmClient.GetAgentPoolSnapshotResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerService.AgentPoolSnapshotResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentPoolUpgradeProfileResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ContainerService.AgentPoolUpgradeProfileResource GetAgentPoolUpgradeProfileResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ContainerService.AgentPoolUpgradeProfileResource GetAgentPoolUpgradeProfileResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceArmClient.GetAgentPoolUpgradeProfileResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAgentPoolUpgradeProfileResource (id As ResourceIdentifier) As AgentPoolUpgradeProfileResource" />
      <MemberSignature Language="F#" Value="abstract member GetAgentPoolUpgradeProfileResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerService.AgentPoolUpgradeProfileResource&#xA;override this.GetAgentPoolUpgradeProfileResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerService.AgentPoolUpgradeProfileResource" Usage="mockableContainerServiceArmClient.GetAgentPoolUpgradeProfileResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.AgentPoolUpgradeProfileResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ContainerService.AgentPoolUpgradeProfileResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerService.AgentPoolUpgradeProfileResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ContainerService.AgentPoolUpgradeProfileResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerService.AgentPoolUpgradeProfileResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerServiceAgentPoolResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ContainerService.ContainerServiceAgentPoolResource GetContainerServiceAgentPoolResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ContainerService.ContainerServiceAgentPoolResource GetContainerServiceAgentPoolResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceArmClient.GetContainerServiceAgentPoolResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerServiceAgentPoolResource (id As ResourceIdentifier) As ContainerServiceAgentPoolResource" />
      <MemberSignature Language="F#" Value="abstract member GetContainerServiceAgentPoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerService.ContainerServiceAgentPoolResource&#xA;override this.GetContainerServiceAgentPoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerService.ContainerServiceAgentPoolResource" Usage="mockableContainerServiceArmClient.GetContainerServiceAgentPoolResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.ContainerServiceAgentPoolResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceAgentPoolResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerService.ContainerServiceAgentPoolResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceAgentPoolResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceAgentPoolResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerServiceFleetMemberResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ContainerService.ContainerServiceFleetMemberResource GetContainerServiceFleetMemberResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ContainerService.ContainerServiceFleetMemberResource GetContainerServiceFleetMemberResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceArmClient.GetContainerServiceFleetMemberResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerServiceFleetMemberResource (id As ResourceIdentifier) As ContainerServiceFleetMemberResource" />
      <MemberSignature Language="F#" Value="abstract member GetContainerServiceFleetMemberResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerService.ContainerServiceFleetMemberResource&#xA;override this.GetContainerServiceFleetMemberResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerService.ContainerServiceFleetMemberResource" Usage="mockableContainerServiceArmClient.GetContainerServiceFleetMemberResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.ContainerServiceFleetMemberResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceFleetMemberResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerService.ContainerServiceFleetMemberResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceFleetMemberResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceFleetMemberResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerServiceFleetResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ContainerService.ContainerServiceFleetResource GetContainerServiceFleetResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ContainerService.ContainerServiceFleetResource GetContainerServiceFleetResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceArmClient.GetContainerServiceFleetResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerServiceFleetResource (id As ResourceIdentifier) As ContainerServiceFleetResource" />
      <MemberSignature Language="F#" Value="abstract member GetContainerServiceFleetResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerService.ContainerServiceFleetResource&#xA;override this.GetContainerServiceFleetResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerService.ContainerServiceFleetResource" Usage="mockableContainerServiceArmClient.GetContainerServiceFleetResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.ContainerServiceFleetResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceFleetResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerService.ContainerServiceFleetResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceFleetResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceFleetResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerServiceMaintenanceConfigurationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ContainerService.ContainerServiceMaintenanceConfigurationResource GetContainerServiceMaintenanceConfigurationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ContainerService.ContainerServiceMaintenanceConfigurationResource GetContainerServiceMaintenanceConfigurationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceArmClient.GetContainerServiceMaintenanceConfigurationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerServiceMaintenanceConfigurationResource (id As ResourceIdentifier) As ContainerServiceMaintenanceConfigurationResource" />
      <MemberSignature Language="F#" Value="abstract member GetContainerServiceMaintenanceConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerService.ContainerServiceMaintenanceConfigurationResource&#xA;override this.GetContainerServiceMaintenanceConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerService.ContainerServiceMaintenanceConfigurationResource" Usage="mockableContainerServiceArmClient.GetContainerServiceMaintenanceConfigurationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.ContainerServiceMaintenanceConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceMaintenanceConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerService.ContainerServiceMaintenanceConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceMaintenanceConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceMaintenanceConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerServiceManagedClusterResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource GetContainerServiceManagedClusterResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource GetContainerServiceManagedClusterResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceArmClient.GetContainerServiceManagedClusterResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerServiceManagedClusterResource (id As ResourceIdentifier) As ContainerServiceManagedClusterResource" />
      <MemberSignature Language="F#" Value="abstract member GetContainerServiceManagedClusterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource&#xA;override this.GetContainerServiceManagedClusterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource" Usage="mockableContainerServiceArmClient.GetContainerServiceManagedClusterResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceManagedClusterResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerServicePrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ContainerService.ContainerServicePrivateEndpointConnectionResource GetContainerServicePrivateEndpointConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ContainerService.ContainerServicePrivateEndpointConnectionResource GetContainerServicePrivateEndpointConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceArmClient.GetContainerServicePrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerServicePrivateEndpointConnectionResource (id As ResourceIdentifier) As ContainerServicePrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetContainerServicePrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerService.ContainerServicePrivateEndpointConnectionResource&#xA;override this.GetContainerServicePrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerService.ContainerServicePrivateEndpointConnectionResource" Usage="mockableContainerServiceArmClient.GetContainerServicePrivateEndpointConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.ContainerServicePrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ContainerService.ContainerServicePrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerService.ContainerServicePrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ContainerService.ContainerServicePrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerService.ContainerServicePrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerServiceTrustedAccessRoleBindingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ContainerService.ContainerServiceTrustedAccessRoleBindingResource GetContainerServiceTrustedAccessRoleBindingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ContainerService.ContainerServiceTrustedAccessRoleBindingResource GetContainerServiceTrustedAccessRoleBindingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceArmClient.GetContainerServiceTrustedAccessRoleBindingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerServiceTrustedAccessRoleBindingResource (id As ResourceIdentifier) As ContainerServiceTrustedAccessRoleBindingResource" />
      <MemberSignature Language="F#" Value="abstract member GetContainerServiceTrustedAccessRoleBindingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerService.ContainerServiceTrustedAccessRoleBindingResource&#xA;override this.GetContainerServiceTrustedAccessRoleBindingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerService.ContainerServiceTrustedAccessRoleBindingResource" Usage="mockableContainerServiceArmClient.GetContainerServiceTrustedAccessRoleBindingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.ContainerServiceTrustedAccessRoleBindingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceTrustedAccessRoleBindingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerService.ContainerServiceTrustedAccessRoleBindingResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceTrustedAccessRoleBindingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerService.ContainerServiceTrustedAccessRoleBindingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedClusterSnapshotResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ContainerService.ManagedClusterSnapshotResource GetManagedClusterSnapshotResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ContainerService.ManagedClusterSnapshotResource GetManagedClusterSnapshotResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceArmClient.GetManagedClusterSnapshotResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedClusterSnapshotResource (id As ResourceIdentifier) As ManagedClusterSnapshotResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedClusterSnapshotResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerService.ManagedClusterSnapshotResource&#xA;override this.GetManagedClusterSnapshotResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerService.ManagedClusterSnapshotResource" Usage="mockableContainerServiceArmClient.GetManagedClusterSnapshotResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.ManagedClusterSnapshotResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ContainerService.ManagedClusterSnapshotResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerService.ManagedClusterSnapshotResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ContainerService.ManagedClusterSnapshotResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerService.ManagedClusterSnapshotResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedClusterUpgradeProfileResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ContainerService.ManagedClusterUpgradeProfileResource GetManagedClusterUpgradeProfileResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ContainerService.ManagedClusterUpgradeProfileResource GetManagedClusterUpgradeProfileResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceArmClient.GetManagedClusterUpgradeProfileResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedClusterUpgradeProfileResource (id As ResourceIdentifier) As ManagedClusterUpgradeProfileResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedClusterUpgradeProfileResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerService.ManagedClusterUpgradeProfileResource&#xA;override this.GetManagedClusterUpgradeProfileResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerService.ManagedClusterUpgradeProfileResource" Usage="mockableContainerServiceArmClient.GetManagedClusterUpgradeProfileResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.ManagedClusterUpgradeProfileResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ContainerService.ManagedClusterUpgradeProfileResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerService.ManagedClusterUpgradeProfileResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ContainerService.ManagedClusterUpgradeProfileResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerService.ManagedClusterUpgradeProfileResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOSOptionProfileResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ContainerService.OSOptionProfileResource GetOSOptionProfileResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ContainerService.OSOptionProfileResource GetOSOptionProfileResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.Mocking.MockableContainerServiceArmClient.GetOSOptionProfileResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOSOptionProfileResource (id As ResourceIdentifier) As OSOptionProfileResource" />
      <MemberSignature Language="F#" Value="abstract member GetOSOptionProfileResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerService.OSOptionProfileResource&#xA;override this.GetOSOptionProfileResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerService.OSOptionProfileResource" Usage="mockableContainerServiceArmClient.GetOSOptionProfileResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.OSOptionProfileResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ContainerService.OSOptionProfileResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerService.OSOptionProfileResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation)" /> to create an <see cref="T:Azure.ResourceManager.ContainerService.OSOptionProfileResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerService.OSOptionProfileResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
