<Type Name="EventGridClientExtensions" FullName="Microsoft.Azure.EventGrid.EventGridClientExtensions">
  <TypeSignature Language="C#" Value="public static class EventGridClientExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EventGridClientExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.EventGrid.EventGridClientExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module EventGridClientExtensions" />
  <TypeSignature Language="F#" Value="type EventGridClientExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.EventGrid</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for EventGridClient.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="PublishEventsAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task PublishEventsAsync (this Microsoft.Azure.EventGrid.IEventGridClient operations, string topicHostname, System.Collections.Generic.IList&lt;Microsoft.Azure.EventGrid.Models.EventGridEvent&gt; events, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task PublishEventsAsync(class Microsoft.Azure.EventGrid.IEventGridClient operations, string topicHostname, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.EventGrid.Models.EventGridEvent&gt; events, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.EventGrid.EventGridClientExtensions.PublishEventsAsync(Microsoft.Azure.EventGrid.IEventGridClient,System.String,System.Collections.Generic.IList{Microsoft.Azure.EventGrid.Models.EventGridEvent},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member PublishEventsAsync : Microsoft.Azure.EventGrid.IEventGridClient * string * System.Collections.Generic.IList&lt;Microsoft.Azure.EventGrid.Models.EventGridEvent&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.EventGrid.EventGridClientExtensions.PublishEventsAsync (operations, topicHostname, events, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.EventGrid.IEventGridClient" RefType="this" />
        <Parameter Name="topicHostname" Type="System.String" />
        <Parameter Name="events" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.EventGrid.Models.EventGridEvent&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="topicHostname">
            The host name of the topic, e.g. topic1.westus2-1.eventgrid.azure.net
            </param>
        <param name="events">
            An array of events to be published to Event Grid.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Publishes a batch of events to an Azure Event Grid topic.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>