<Type Name="QueueProcessor" FullName="Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor">
  <TypeSignature Language="C#" Value="public class QueueProcessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueueProcessor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor" />
  <TypeSignature Language="VB.NET" Value="Public Class QueueProcessor" />
  <TypeSignature Language="F#" Value="type QueueProcessor = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.WebJobs.Extensions.Storage.Queues</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.WebJobs.Extensions.Storage</AssemblyName>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This class defines a strategy used for processing queue messages.
            </summary>
    <remarks>
            Custom <see cref="T:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor" /> implementations can be registered by implementing
            a custom <see cref="T:Microsoft.Azure.WebJobs.Host.Queues.IQueueProcessorFactory" />.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal QueueProcessor (Microsoft.Azure.WebJobs.Host.Queues.QueueProcessorOptions queueProcessorOptions);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.Azure.WebJobs.Host.Queues.QueueProcessorOptions queueProcessorOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor.#ctor(Microsoft.Azure.WebJobs.Host.Queues.QueueProcessorOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (queueProcessorOptions As QueueProcessorOptions)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor : Microsoft.Azure.WebJobs.Host.Queues.QueueProcessorOptions -&gt; Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor" Usage="new Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor queueProcessorOptions" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.Storage.Queues</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="queueProcessorOptions" Type="Microsoft.Azure.WebJobs.Host.Queues.QueueProcessorOptions" />
      </Parameters>
      <Docs>
        <param name="queueProcessorOptions">The options.</param>
        <summary>
            Constructs a new instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginProcessingMessageAsync">
      <MemberSignature Language="C#" Value="protected internal virtual System.Threading.Tasks.Task&lt;bool&gt; BeginProcessingMessageAsync (Azure.Storage.Queues.Models.QueueMessage message, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; BeginProcessingMessageAsync(class Azure.Storage.Queues.Models.QueueMessage message, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor.BeginProcessingMessageAsync(Azure.Storage.Queues.Models.QueueMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function BeginProcessingMessageAsync (message As QueueMessage, cancellationToken As CancellationToken) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member BeginProcessingMessageAsync : Azure.Storage.Queues.Models.QueueMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.BeginProcessingMessageAsync : Azure.Storage.Queues.Models.QueueMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="queueProcessor.BeginProcessingMessageAsync (message, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.Storage.Queues</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Storage.Queues.Models.QueueMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The message to process.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to use</param>
        <summary>
            This method is called when there is a new message to process, before the job function is invoked.
            This allows any preprocessing to take place on the message before processing begins.
            </summary>
        <returns>True if the message processing should continue, false otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteProcessingMessageAsync">
      <MemberSignature Language="C#" Value="protected internal virtual System.Threading.Tasks.Task CompleteProcessingMessageAsync (Azure.Storage.Queues.Models.QueueMessage message, Microsoft.Azure.WebJobs.Host.Executors.FunctionResult result, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Threading.Tasks.Task CompleteProcessingMessageAsync(class Azure.Storage.Queues.Models.QueueMessage message, class Microsoft.Azure.WebJobs.Host.Executors.FunctionResult result, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor.CompleteProcessingMessageAsync(Azure.Storage.Queues.Models.QueueMessage,Microsoft.Azure.WebJobs.Host.Executors.FunctionResult,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CompleteProcessingMessageAsync (message As QueueMessage, result As FunctionResult, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member CompleteProcessingMessageAsync : Azure.Storage.Queues.Models.QueueMessage * Microsoft.Azure.WebJobs.Host.Executors.FunctionResult * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CompleteProcessingMessageAsync : Azure.Storage.Queues.Models.QueueMessage * Microsoft.Azure.WebJobs.Host.Executors.FunctionResult * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="queueProcessor.CompleteProcessingMessageAsync (message, result, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.Storage.Queues</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Storage.Queues.Models.QueueMessage" />
        <Parameter Name="result" Type="Microsoft.Azure.WebJobs.Host.Executors.FunctionResult" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The message to complete processing for.</param>
        <param name="result">The <see cref="T:Microsoft.Azure.WebJobs.Host.Executors.FunctionResult" /> from the job invocation.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to use.</param>
        <summary>
            This method completes processing of the specified message, after the job function has been invoked.
            </summary>
        <returns />
        <remarks>
            If the message was processed successfully, the message should be deleted. If message processing failed, the
            message should be release back to the queue, or if the maximum dequeue count has been exceeded, the message
            should be moved to the poison queue (if poison queue handling is configured for the queue).
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyMessageToPoisonQueueAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task CopyMessageToPoisonQueueAsync (Azure.Storage.Queues.Models.QueueMessage message, Azure.Storage.Queues.QueueClient poisonQueue, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task CopyMessageToPoisonQueueAsync(class Azure.Storage.Queues.Models.QueueMessage message, class Azure.Storage.Queues.QueueClient poisonQueue, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor.CopyMessageToPoisonQueueAsync(Azure.Storage.Queues.Models.QueueMessage,Azure.Storage.Queues.QueueClient,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CopyMessageToPoisonQueueAsync (message As QueueMessage, poisonQueue As QueueClient, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member CopyMessageToPoisonQueueAsync : Azure.Storage.Queues.Models.QueueMessage * Azure.Storage.Queues.QueueClient * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CopyMessageToPoisonQueueAsync : Azure.Storage.Queues.Models.QueueMessage * Azure.Storage.Queues.QueueClient * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="queueProcessor.CopyMessageToPoisonQueueAsync (message, poisonQueue, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.Storage.Queues</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Storage.Queues.Models.QueueMessage" />
        <Parameter Name="poisonQueue" Type="Azure.Storage.Queues.QueueClient" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The poison message.</param>
        <param name="poisonQueue">The poison queue to copy the message to.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to use.</param>
        <summary>
            Moves the specified message to the poison queue.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteMessageAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task DeleteMessageAsync (Azure.Storage.Queues.Models.QueueMessage message, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteMessageAsync(class Azure.Storage.Queues.Models.QueueMessage message, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor.DeleteMessageAsync(Azure.Storage.Queues.Models.QueueMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function DeleteMessageAsync (message As QueueMessage, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member DeleteMessageAsync : Azure.Storage.Queues.Models.QueueMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteMessageAsync : Azure.Storage.Queues.Models.QueueMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="queueProcessor.DeleteMessageAsync (message, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.Storage.Queues</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Storage.Queues.Models.QueueMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The message to delete.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to use.</param>
        <summary>
            Delete the specified message.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageAddedToPoisonQueueAsync">
      <MemberSignature Language="C#" Value="public event Func&lt;Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor,Microsoft.Azure.WebJobs.Host.Queues.PoisonMessageEventArgs,System.Threading.Tasks.Task&gt; MessageAddedToPoisonQueueAsync;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Func`3&lt;class Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor, class Microsoft.Azure.WebJobs.Host.Queues.PoisonMessageEventArgs, class System.Threading.Tasks.Task&gt; MessageAddedToPoisonQueueAsync" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor.MessageAddedToPoisonQueueAsync" />
      <MemberSignature Language="VB.NET" Value="Public Event MessageAddedToPoisonQueueAsync As Func(Of QueueProcessor, PoisonMessageEventArgs, Task) " />
      <MemberSignature Language="F#" Value="member this.MessageAddedToPoisonQueueAsync : Func&lt;Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor, Microsoft.Azure.WebJobs.Host.Queues.PoisonMessageEventArgs, System.Threading.Tasks.Task&gt; " Usage="member this.MessageAddedToPoisonQueueAsync : System.Func&lt;Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor, Microsoft.Azure.WebJobs.Host.Queues.PoisonMessageEventArgs, System.Threading.Tasks.Task&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.Storage.Queues</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor,Microsoft.Azure.WebJobs.Host.Queues.PoisonMessageEventArgs,System.Threading.Tasks.Task&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Event raised when a message is added to the poison queue.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessageAddedToPoisonQueueAsync">
      <MemberSignature Language="C#" Value="protected internal virtual System.Threading.Tasks.Task OnMessageAddedToPoisonQueueAsync (Microsoft.Azure.WebJobs.Host.Queues.PoisonMessageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnMessageAddedToPoisonQueueAsync(class Microsoft.Azure.WebJobs.Host.Queues.PoisonMessageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor.OnMessageAddedToPoisonQueueAsync(Microsoft.Azure.WebJobs.Host.Queues.PoisonMessageEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function OnMessageAddedToPoisonQueueAsync (e As PoisonMessageEventArgs) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnMessageAddedToPoisonQueueAsync : Microsoft.Azure.WebJobs.Host.Queues.PoisonMessageEventArgs -&gt; System.Threading.Tasks.Task&#xA;override this.OnMessageAddedToPoisonQueueAsync : Microsoft.Azure.WebJobs.Host.Queues.PoisonMessageEventArgs -&gt; System.Threading.Tasks.Task" Usage="queueProcessor.OnMessageAddedToPoisonQueueAsync e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.Storage.Queues</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Microsoft.Azure.WebJobs.Host.Queues.PoisonMessageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The event arguments.</param>
        <summary>
            Called to raise the MessageAddedToPoisonQueue event.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseMessageAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task ReleaseMessageAsync (Azure.Storage.Queues.Models.QueueMessage message, Microsoft.Azure.WebJobs.Host.Executors.FunctionResult result, TimeSpan visibilityTimeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task ReleaseMessageAsync(class Azure.Storage.Queues.Models.QueueMessage message, class Microsoft.Azure.WebJobs.Host.Executors.FunctionResult result, valuetype System.TimeSpan visibilityTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Host.Queues.QueueProcessor.ReleaseMessageAsync(Azure.Storage.Queues.Models.QueueMessage,Microsoft.Azure.WebJobs.Host.Executors.FunctionResult,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReleaseMessageAsync (message As QueueMessage, result As FunctionResult, visibilityTimeout As TimeSpan, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member ReleaseMessageAsync : Azure.Storage.Queues.Models.QueueMessage * Microsoft.Azure.WebJobs.Host.Executors.FunctionResult * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.ReleaseMessageAsync : Azure.Storage.Queues.Models.QueueMessage * Microsoft.Azure.WebJobs.Host.Executors.FunctionResult * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="queueProcessor.ReleaseMessageAsync (message, result, visibilityTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.Storage.Queues</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Storage.Queues.Models.QueueMessage" />
        <Parameter Name="result" Type="Microsoft.Azure.WebJobs.Host.Executors.FunctionResult" />
        <Parameter Name="visibilityTimeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The message to release</param>
        <param name="result">The <see cref="T:Microsoft.Azure.WebJobs.Host.Executors.FunctionResult" /> from the job invocation.</param>
        <param name="visibilityTimeout">The visibility timeout to set for the message.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to use.</param>
        <summary>
            Release the specified failed message back to the queue.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
