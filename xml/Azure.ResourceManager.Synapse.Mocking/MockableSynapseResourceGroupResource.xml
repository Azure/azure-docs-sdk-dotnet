<Type Name="MockableSynapseResourceGroupResource" FullName="Azure.ResourceManager.Synapse.Mocking.MockableSynapseResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableSynapseResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableSynapseResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Synapse.Mocking.MockableSynapseResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableSynapseResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableSynapseResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableSynapseResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Synapse.Mocking.MockableSynapseResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapsePrivateLinkHub">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource&gt; GetSynapsePrivateLinkHub (string privateLinkHubName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource&gt; GetSynapsePrivateLinkHub(string privateLinkHubName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseResourceGroupResource.GetSynapsePrivateLinkHub(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapsePrivateLinkHub (privateLinkHubName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SynapsePrivateLinkHubResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSynapsePrivateLinkHub : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource&gt;&#xA;override this.GetSynapsePrivateLinkHub : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource&gt;" Usage="mockableSynapseResourceGroupResource.GetSynapsePrivateLinkHub (privateLinkHubName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateLinkHubName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateLinkHubName"> Name of the privateLinkHub. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a privateLinkHub
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/privateLinkHubs/{privateLinkHubName}</description></item><item><term>Operation Id</term><description>PrivateLinkHubs_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateLinkHubName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateLinkHubName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapsePrivateLinkHubAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource&gt;&gt; GetSynapsePrivateLinkHubAsync (string privateLinkHubName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource&gt;&gt; GetSynapsePrivateLinkHubAsync(string privateLinkHubName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseResourceGroupResource.GetSynapsePrivateLinkHubAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapsePrivateLinkHubAsync (privateLinkHubName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SynapsePrivateLinkHubResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSynapsePrivateLinkHubAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource&gt;&gt;&#xA;override this.GetSynapsePrivateLinkHubAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource&gt;&gt;" Usage="mockableSynapseResourceGroupResource.GetSynapsePrivateLinkHubAsync (privateLinkHubName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateLinkHubName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateLinkHubName"> Name of the privateLinkHub. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a privateLinkHub
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/privateLinkHubs/{privateLinkHubName}</description></item><item><term>Operation Id</term><description>PrivateLinkHubs_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateLinkHubName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateLinkHubName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapsePrivateLinkHubs">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapsePrivateLinkHubCollection GetSynapsePrivateLinkHubs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapsePrivateLinkHubCollection GetSynapsePrivateLinkHubs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseResourceGroupResource.GetSynapsePrivateLinkHubs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapsePrivateLinkHubs () As SynapsePrivateLinkHubCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSynapsePrivateLinkHubs : unit -&gt; Azure.ResourceManager.Synapse.SynapsePrivateLinkHubCollection&#xA;override this.GetSynapsePrivateLinkHubs : unit -&gt; Azure.ResourceManager.Synapse.SynapsePrivateLinkHubCollection" Usage="mockableSynapseResourceGroupResource.GetSynapsePrivateLinkHubs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapsePrivateLinkHubCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SynapsePrivateLinkHubResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of SynapsePrivateLinkHubResources and their operations over a SynapsePrivateLinkHubResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseWorkspace">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt; GetSynapseWorkspace (string workspaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt; GetSynapseWorkspace(string workspaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseResourceGroupResource.GetSynapseWorkspace(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseWorkspace (workspaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SynapseWorkspaceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseWorkspace : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&#xA;override this.GetSynapseWorkspace : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;" Usage="mockableSynapseResourceGroupResource.GetSynapseWorkspace (workspaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workspaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="workspaceName"> The name of the workspace. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a workspace
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}</description></item><item><term>Operation Id</term><description>Workspaces_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="workspaceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="workspaceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseWorkspaceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt; GetSynapseWorkspaceAsync (string workspaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt; GetSynapseWorkspaceAsync(string workspaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseResourceGroupResource.GetSynapseWorkspaceAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseWorkspaceAsync (workspaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SynapseWorkspaceResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseWorkspaceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt;&#xA;override this.GetSynapseWorkspaceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt;" Usage="mockableSynapseResourceGroupResource.GetSynapseWorkspaceAsync (workspaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workspaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="workspaceName"> The name of the workspace. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a workspace
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}</description></item><item><term>Operation Id</term><description>Workspaces_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="workspaceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="workspaceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseWorkspaces">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseWorkspaceCollection GetSynapseWorkspaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseWorkspaceCollection GetSynapseWorkspaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseResourceGroupResource.GetSynapseWorkspaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseWorkspaces () As SynapseWorkspaceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseWorkspaces : unit -&gt; Azure.ResourceManager.Synapse.SynapseWorkspaceCollection&#xA;override this.GetSynapseWorkspaces : unit -&gt; Azure.ResourceManager.Synapse.SynapseWorkspaceCollection" Usage="mockableSynapseResourceGroupResource.GetSynapseWorkspaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseWorkspaceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SynapseWorkspaceResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of SynapseWorkspaceResources and their operations over a SynapseWorkspaceResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
