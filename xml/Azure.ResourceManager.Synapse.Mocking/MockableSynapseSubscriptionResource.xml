<Type Name="MockableSynapseSubscriptionResource" FullName="Azure.ResourceManager.Synapse.Mocking.MockableSynapseSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableSynapseSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableSynapseSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Synapse.Mocking.MockableSynapseSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableSynapseSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableSynapseSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableSynapseSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Synapse.Mocking.MockableSynapseSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckKustoPoolNameAvailability">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityResult&gt; CheckKustoPoolNameAvailability (Azure.Core.AzureLocation location, Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityResult&gt; CheckKustoPoolNameAvailability(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseSubscriptionResource.CheckKustoPoolNameAvailability(Azure.Core.AzureLocation,Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckKustoPoolNameAvailability (location As AzureLocation, content As KustoPoolNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of KustoPoolNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="abstract member CheckKustoPoolNameAvailability : Azure.Core.AzureLocation * Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityResult&gt;&#xA;override this.CheckKustoPoolNameAvailability : Azure.Core.AzureLocation * Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityResult&gt;" Usage="mockableSynapseSubscriptionResource.CheckKustoPoolNameAvailability (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of Azure region. </param>
        <param name="content"> The name of the cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks that the kusto pool name is valid and is not already in use.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Synapse/locations/{location}/kustoPoolCheckNameAvailability</description></item><item><term>Operation Id</term><description>KustoPools_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2021-06-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseKustoPoolResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckKustoPoolNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityResult&gt;&gt; CheckKustoPoolNameAvailabilityAsync (Azure.Core.AzureLocation location, Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityResult&gt;&gt; CheckKustoPoolNameAvailabilityAsync(valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseSubscriptionResource.CheckKustoPoolNameAvailabilityAsync(Azure.Core.AzureLocation,Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckKustoPoolNameAvailabilityAsync (location As AzureLocation, content As KustoPoolNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of KustoPoolNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="abstract member CheckKustoPoolNameAvailabilityAsync : Azure.Core.AzureLocation * Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityResult&gt;&gt;&#xA;override this.CheckKustoPoolNameAvailabilityAsync : Azure.Core.AzureLocation * Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityResult&gt;&gt;" Usage="mockableSynapseSubscriptionResource.CheckKustoPoolNameAvailabilityAsync (location, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="content" Type="Azure.ResourceManager.Synapse.Models.KustoPoolNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The name of Azure region. </param>
        <param name="content"> The name of the cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks that the kusto pool name is valid and is not already in use.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Synapse/locations/{location}/kustoPoolCheckNameAvailability</description></item><item><term>Operation Id</term><description>KustoPools_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2021-06-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseKustoPoolResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSkusKustoPools">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Synapse.Models.KustoPoolSkuDescription&gt; GetSkusKustoPools (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Synapse.Models.KustoPoolSkuDescription&gt; GetSkusKustoPools(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseSubscriptionResource.GetSkusKustoPools(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSkusKustoPools (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of KustoPoolSkuDescription)" />
      <MemberSignature Language="F#" Value="abstract member GetSkusKustoPools : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Synapse.Models.KustoPoolSkuDescription&gt;&#xA;override this.GetSkusKustoPools : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Synapse.Models.KustoPoolSkuDescription&gt;" Usage="mockableSynapseSubscriptionResource.GetSkusKustoPools cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Synapse.Models.KustoPoolSkuDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists eligible SKUs for Kusto Pool resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Synapse/skus</description></item><item><term>Operation Id</term><description>KustoPools_ListSkus</description></item><item><term>Default Api Version</term><description>2021-06-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseKustoPoolResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Synapse.Models.KustoPoolSkuDescription" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSkusKustoPoolsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.Models.KustoPoolSkuDescription&gt; GetSkusKustoPoolsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Synapse.Models.KustoPoolSkuDescription&gt; GetSkusKustoPoolsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseSubscriptionResource.GetSkusKustoPoolsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSkusKustoPoolsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of KustoPoolSkuDescription)" />
      <MemberSignature Language="F#" Value="abstract member GetSkusKustoPoolsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.Models.KustoPoolSkuDescription&gt;&#xA;override this.GetSkusKustoPoolsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.Models.KustoPoolSkuDescription&gt;" Usage="mockableSynapseSubscriptionResource.GetSkusKustoPoolsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.Models.KustoPoolSkuDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists eligible SKUs for Kusto Pool resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Synapse/skus</description></item><item><term>Operation Id</term><description>KustoPools_ListSkus</description></item><item><term>Default Api Version</term><description>2021-06-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseKustoPoolResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Synapse.Models.KustoPoolSkuDescription" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapsePrivateLinkHubs">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource&gt; GetSynapsePrivateLinkHubs (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource&gt; GetSynapsePrivateLinkHubs(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseSubscriptionResource.GetSynapsePrivateLinkHubs(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapsePrivateLinkHubs (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SynapsePrivateLinkHubResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSynapsePrivateLinkHubs : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource&gt;&#xA;override this.GetSynapsePrivateLinkHubs : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource&gt;" Usage="mockableSynapseSubscriptionResource.GetSynapsePrivateLinkHubs cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a list of privateLinkHubs in a subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Synapse/privateLinkHubs</description></item><item><term>Operation Id</term><description>PrivateLinkHubs_List</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapsePrivateLinkHubsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource&gt; GetSynapsePrivateLinkHubsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource&gt; GetSynapsePrivateLinkHubsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseSubscriptionResource.GetSynapsePrivateLinkHubsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapsePrivateLinkHubsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SynapsePrivateLinkHubResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSynapsePrivateLinkHubsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource&gt;&#xA;override this.GetSynapsePrivateLinkHubsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource&gt;" Usage="mockableSynapseSubscriptionResource.GetSynapsePrivateLinkHubsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a list of privateLinkHubs in a subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Synapse/privateLinkHubs</description></item><item><term>Operation Id</term><description>PrivateLinkHubs_List</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseWorkspaces">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt; GetSynapseWorkspaces (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt; GetSynapseWorkspaces(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseSubscriptionResource.GetSynapseWorkspaces(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseWorkspaces (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SynapseWorkspaceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseWorkspaces : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&#xA;override this.GetSynapseWorkspaces : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;" Usage="mockableSynapseSubscriptionResource.GetSynapseWorkspaces cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a list of workspaces in a subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Synapse/workspaces</description></item><item><term>Operation Id</term><description>Workspaces_List</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceResource" /></description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseWorkspacesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt; GetSynapseWorkspacesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt; GetSynapseWorkspacesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseSubscriptionResource.GetSynapseWorkspacesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseWorkspacesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SynapseWorkspaceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseWorkspacesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;&#xA;override this.GetSynapseWorkspacesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;" Usage="mockableSynapseSubscriptionResource.GetSynapseWorkspacesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Synapse.SynapseWorkspaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns a list of workspaces in a subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Synapse/workspaces</description></item><item><term>Operation Id</term><description>Workspaces_List</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceResource" /></description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
