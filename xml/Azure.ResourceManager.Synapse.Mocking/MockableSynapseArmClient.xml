<Type Name="MockableSynapseArmClient" FullName="Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient">
  <TypeSignature Language="C#" Value="public class MockableSynapseArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableSynapseArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableSynapseArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableSynapseArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableSynapseArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseAadOnlyAuthenticationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationResource GetSynapseAadOnlyAuthenticationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationResource GetSynapseAadOnlyAuthenticationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseAadOnlyAuthenticationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseAadOnlyAuthenticationResource (id As ResourceIdentifier) As SynapseAadOnlyAuthenticationResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseAadOnlyAuthenticationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationResource&#xA;override this.GetSynapseAadOnlyAuthenticationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationResource" Usage="mockableSynapseArmClient.GetSynapseAadOnlyAuthenticationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.SynapseAadOnlyAuthenticationName)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseAadOnlyAuthenticationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseAttachedDatabaseConfigurationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseAttachedDatabaseConfigurationResource GetSynapseAttachedDatabaseConfigurationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseAttachedDatabaseConfigurationResource GetSynapseAttachedDatabaseConfigurationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseAttachedDatabaseConfigurationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseAttachedDatabaseConfigurationResource (id As ResourceIdentifier) As SynapseAttachedDatabaseConfigurationResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseAttachedDatabaseConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseAttachedDatabaseConfigurationResource&#xA;override this.GetSynapseAttachedDatabaseConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseAttachedDatabaseConfigurationResource" Usage="mockableSynapseArmClient.GetSynapseAttachedDatabaseConfigurationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseAttachedDatabaseConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseAttachedDatabaseConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseAttachedDatabaseConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseAttachedDatabaseConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseAttachedDatabaseConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseBigDataPoolInfoResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoResource GetSynapseBigDataPoolInfoResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoResource GetSynapseBigDataPoolInfoResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseBigDataPoolInfoResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseBigDataPoolInfoResource (id As ResourceIdentifier) As SynapseBigDataPoolInfoResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseBigDataPoolInfoResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoResource&#xA;override this.GetSynapseBigDataPoolInfoResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoResource" Usage="mockableSynapseArmClient.GetSynapseBigDataPoolInfoResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseBigDataPoolInfoResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseClusterPrincipalAssignmentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseClusterPrincipalAssignmentResource GetSynapseClusterPrincipalAssignmentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseClusterPrincipalAssignmentResource GetSynapseClusterPrincipalAssignmentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseClusterPrincipalAssignmentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseClusterPrincipalAssignmentResource (id As ResourceIdentifier) As SynapseClusterPrincipalAssignmentResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseClusterPrincipalAssignmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseClusterPrincipalAssignmentResource&#xA;override this.GetSynapseClusterPrincipalAssignmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseClusterPrincipalAssignmentResource" Usage="mockableSynapseArmClient.GetSynapseClusterPrincipalAssignmentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseClusterPrincipalAssignmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseClusterPrincipalAssignmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseClusterPrincipalAssignmentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseClusterPrincipalAssignmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseClusterPrincipalAssignmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseDatabasePrincipalAssignmentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseDatabasePrincipalAssignmentResource GetSynapseDatabasePrincipalAssignmentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseDatabasePrincipalAssignmentResource GetSynapseDatabasePrincipalAssignmentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseDatabasePrincipalAssignmentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseDatabasePrincipalAssignmentResource (id As ResourceIdentifier) As SynapseDatabasePrincipalAssignmentResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseDatabasePrincipalAssignmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseDatabasePrincipalAssignmentResource&#xA;override this.GetSynapseDatabasePrincipalAssignmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseDatabasePrincipalAssignmentResource" Usage="mockableSynapseArmClient.GetSynapseDatabasePrincipalAssignmentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseDatabasePrincipalAssignmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseDatabasePrincipalAssignmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseDatabasePrincipalAssignmentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseDatabasePrincipalAssignmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseDatabasePrincipalAssignmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseDatabaseResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseDatabaseResource GetSynapseDatabaseResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseDatabaseResource GetSynapseDatabaseResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseDatabaseResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseDatabaseResource (id As ResourceIdentifier) As SynapseDatabaseResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseDatabaseResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseDatabaseResource&#xA;override this.GetSynapseDatabaseResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseDatabaseResource" Usage="mockableSynapseArmClient.GetSynapseDatabaseResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseDatabaseResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseDatabaseResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseDatabaseResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseDatabaseResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseDatabaseResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseDataConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseDataConnectionResource GetSynapseDataConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseDataConnectionResource GetSynapseDataConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseDataConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseDataConnectionResource (id As ResourceIdentifier) As SynapseDataConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseDataConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseDataConnectionResource&#xA;override this.GetSynapseDataConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseDataConnectionResource" Usage="mockableSynapseArmClient.GetSynapseDataConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseDataConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseDataConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseDataConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseDataConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseDataConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseDataMaskingPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseDataMaskingPolicyResource GetSynapseDataMaskingPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseDataMaskingPolicyResource GetSynapseDataMaskingPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseDataMaskingPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseDataMaskingPolicyResource (id As ResourceIdentifier) As SynapseDataMaskingPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseDataMaskingPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseDataMaskingPolicyResource&#xA;override this.GetSynapseDataMaskingPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseDataMaskingPolicyResource" Usage="mockableSynapseArmClient.GetSynapseDataMaskingPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseDataMaskingPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseDataMaskingPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseDataMaskingPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseDataMaskingPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseDataMaskingPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseDataMaskingRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseDataMaskingRuleResource GetSynapseDataMaskingRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseDataMaskingRuleResource GetSynapseDataMaskingRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseDataMaskingRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseDataMaskingRuleResource (id As ResourceIdentifier) As SynapseDataMaskingRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseDataMaskingRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseDataMaskingRuleResource&#xA;override this.GetSynapseDataMaskingRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseDataMaskingRuleResource" Usage="mockableSynapseArmClient.GetSynapseDataMaskingRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseDataMaskingRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseDataMaskingRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseDataMaskingRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseDataMaskingRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseDataMaskingRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseDataWarehouseUserActivityResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource GetSynapseDataWarehouseUserActivityResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource GetSynapseDataWarehouseUserActivityResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseDataWarehouseUserActivityResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseDataWarehouseUserActivityResource (id As ResourceIdentifier) As SynapseDataWarehouseUserActivityResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseDataWarehouseUserActivityResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource&#xA;override this.GetSynapseDataWarehouseUserActivityResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource" Usage="mockableSynapseArmClient.GetSynapseDataWarehouseUserActivityResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.SynapseDataWarehouseUserActivityName)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseDataWarehouseUserActivityResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseDedicatedSqlMinimalTlsSettingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingResource GetSynapseDedicatedSqlMinimalTlsSettingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingResource GetSynapseDedicatedSqlMinimalTlsSettingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseDedicatedSqlMinimalTlsSettingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseDedicatedSqlMinimalTlsSettingResource (id As ResourceIdentifier) As SynapseDedicatedSqlMinimalTlsSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseDedicatedSqlMinimalTlsSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingResource&#xA;override this.GetSynapseDedicatedSqlMinimalTlsSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingResource" Usage="mockableSynapseArmClient.GetSynapseDedicatedSqlMinimalTlsSettingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseDedicatedSqlMinimalTlsSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseEncryptionProtectorResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseEncryptionProtectorResource GetSynapseEncryptionProtectorResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseEncryptionProtectorResource GetSynapseEncryptionProtectorResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseEncryptionProtectorResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseEncryptionProtectorResource (id As ResourceIdentifier) As SynapseEncryptionProtectorResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseEncryptionProtectorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseEncryptionProtectorResource&#xA;override this.GetSynapseEncryptionProtectorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseEncryptionProtectorResource" Usage="mockableSynapseArmClient.GetSynapseEncryptionProtectorResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseEncryptionProtectorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseEncryptionProtectorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseEncryptionProtectorResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.SynapseEncryptionProtectorName)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseEncryptionProtectorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseEncryptionProtectorResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseExtendedServerBlobAuditingPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyResource GetSynapseExtendedServerBlobAuditingPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyResource GetSynapseExtendedServerBlobAuditingPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseExtendedServerBlobAuditingPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseExtendedServerBlobAuditingPolicyResource (id As ResourceIdentifier) As SynapseExtendedServerBlobAuditingPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseExtendedServerBlobAuditingPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyResource&#xA;override this.GetSynapseExtendedServerBlobAuditingPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyResource" Usage="mockableSynapseArmClient.GetSynapseExtendedServerBlobAuditingPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseExtendedServerBlobAuditingPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseExtendedSqlPoolBlobAuditingPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseExtendedSqlPoolBlobAuditingPolicyResource GetSynapseExtendedSqlPoolBlobAuditingPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseExtendedSqlPoolBlobAuditingPolicyResource GetSynapseExtendedSqlPoolBlobAuditingPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseExtendedSqlPoolBlobAuditingPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseExtendedSqlPoolBlobAuditingPolicyResource (id As ResourceIdentifier) As SynapseExtendedSqlPoolBlobAuditingPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseExtendedSqlPoolBlobAuditingPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseExtendedSqlPoolBlobAuditingPolicyResource&#xA;override this.GetSynapseExtendedSqlPoolBlobAuditingPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseExtendedSqlPoolBlobAuditingPolicyResource" Usage="mockableSynapseArmClient.GetSynapseExtendedSqlPoolBlobAuditingPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseExtendedSqlPoolBlobAuditingPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseExtendedSqlPoolBlobAuditingPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseExtendedSqlPoolBlobAuditingPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseExtendedSqlPoolBlobAuditingPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseExtendedSqlPoolBlobAuditingPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseGeoBackupPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseGeoBackupPolicyResource GetSynapseGeoBackupPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseGeoBackupPolicyResource GetSynapseGeoBackupPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseGeoBackupPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseGeoBackupPolicyResource (id As ResourceIdentifier) As SynapseGeoBackupPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseGeoBackupPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseGeoBackupPolicyResource&#xA;override this.GetSynapseGeoBackupPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseGeoBackupPolicyResource" Usage="mockableSynapseArmClient.GetSynapseGeoBackupPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseGeoBackupPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseGeoBackupPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseGeoBackupPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.SynapseGeoBackupPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseGeoBackupPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseGeoBackupPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseIntegrationRuntimeResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeResource GetSynapseIntegrationRuntimeResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeResource GetSynapseIntegrationRuntimeResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseIntegrationRuntimeResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseIntegrationRuntimeResource (id As ResourceIdentifier) As SynapseIntegrationRuntimeResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseIntegrationRuntimeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeResource&#xA;override this.GetSynapseIntegrationRuntimeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeResource" Usage="mockableSynapseArmClient.GetSynapseIntegrationRuntimeResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseIntegrationRuntimeResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseIPFirewallRuleInfoResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoResource GetSynapseIPFirewallRuleInfoResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoResource GetSynapseIPFirewallRuleInfoResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseIPFirewallRuleInfoResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseIPFirewallRuleInfoResource (id As ResourceIdentifier) As SynapseIPFirewallRuleInfoResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseIPFirewallRuleInfoResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoResource&#xA;override this.GetSynapseIPFirewallRuleInfoResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoResource" Usage="mockableSynapseArmClient.GetSynapseIPFirewallRuleInfoResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseIPFirewallRuleInfoResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseKeyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseKeyResource GetSynapseKeyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseKeyResource GetSynapseKeyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseKeyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseKeyResource (id As ResourceIdentifier) As SynapseKeyResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseKeyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseKeyResource&#xA;override this.GetSynapseKeyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseKeyResource" Usage="mockableSynapseArmClient.GetSynapseKeyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseKeyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseKeyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseKeyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseKeyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseKeyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseKustoPoolResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseKustoPoolResource GetSynapseKustoPoolResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseKustoPoolResource GetSynapseKustoPoolResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseKustoPoolResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseKustoPoolResource (id As ResourceIdentifier) As SynapseKustoPoolResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseKustoPoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseKustoPoolResource&#xA;override this.GetSynapseKustoPoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseKustoPoolResource" Usage="mockableSynapseArmClient.GetSynapseKustoPoolResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseKustoPoolResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseKustoPoolResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseKustoPoolResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseKustoPoolResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseKustoPoolResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseLibraryResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseLibraryResource GetSynapseLibraryResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseLibraryResource GetSynapseLibraryResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseLibraryResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseLibraryResource (id As ResourceIdentifier) As SynapseLibraryResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseLibraryResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseLibraryResource&#xA;override this.GetSynapseLibraryResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseLibraryResource" Usage="mockableSynapseArmClient.GetSynapseLibraryResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseLibraryResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseLibraryResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseLibraryResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseLibraryResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseLibraryResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseMaintenanceWindowOptionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseMaintenanceWindowOptionResource GetSynapseMaintenanceWindowOptionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseMaintenanceWindowOptionResource GetSynapseMaintenanceWindowOptionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseMaintenanceWindowOptionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseMaintenanceWindowOptionResource (id As ResourceIdentifier) As SynapseMaintenanceWindowOptionResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseMaintenanceWindowOptionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseMaintenanceWindowOptionResource&#xA;override this.GetSynapseMaintenanceWindowOptionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseMaintenanceWindowOptionResource" Usage="mockableSynapseArmClient.GetSynapseMaintenanceWindowOptionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseMaintenanceWindowOptionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseMaintenanceWindowOptionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseMaintenanceWindowOptionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseMaintenanceWindowOptionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseMaintenanceWindowOptionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseMaintenanceWindowResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseMaintenanceWindowResource GetSynapseMaintenanceWindowResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseMaintenanceWindowResource GetSynapseMaintenanceWindowResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseMaintenanceWindowResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseMaintenanceWindowResource (id As ResourceIdentifier) As SynapseMaintenanceWindowResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseMaintenanceWindowResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseMaintenanceWindowResource&#xA;override this.GetSynapseMaintenanceWindowResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseMaintenanceWindowResource" Usage="mockableSynapseArmClient.GetSynapseMaintenanceWindowResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseMaintenanceWindowResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseMaintenanceWindowResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseMaintenanceWindowResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseMaintenanceWindowResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseMaintenanceWindowResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseManagedIdentitySqlControlSettingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseManagedIdentitySqlControlSettingResource GetSynapseManagedIdentitySqlControlSettingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseManagedIdentitySqlControlSettingResource GetSynapseManagedIdentitySqlControlSettingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseManagedIdentitySqlControlSettingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseManagedIdentitySqlControlSettingResource (id As ResourceIdentifier) As SynapseManagedIdentitySqlControlSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseManagedIdentitySqlControlSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseManagedIdentitySqlControlSettingResource&#xA;override this.GetSynapseManagedIdentitySqlControlSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseManagedIdentitySqlControlSettingResource" Usage="mockableSynapseArmClient.GetSynapseManagedIdentitySqlControlSettingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseManagedIdentitySqlControlSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseManagedIdentitySqlControlSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseManagedIdentitySqlControlSettingResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseManagedIdentitySqlControlSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseManagedIdentitySqlControlSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseMetadataSyncConfigurationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseMetadataSyncConfigurationResource GetSynapseMetadataSyncConfigurationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseMetadataSyncConfigurationResource GetSynapseMetadataSyncConfigurationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseMetadataSyncConfigurationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseMetadataSyncConfigurationResource (id As ResourceIdentifier) As SynapseMetadataSyncConfigurationResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseMetadataSyncConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseMetadataSyncConfigurationResource&#xA;override this.GetSynapseMetadataSyncConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseMetadataSyncConfigurationResource" Usage="mockableSynapseArmClient.GetSynapseMetadataSyncConfigurationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseMetadataSyncConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseMetadataSyncConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseMetadataSyncConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseMetadataSyncConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseMetadataSyncConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapsePrivateEndpointConnectionForPrivateLinkHubResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionForPrivateLinkHubResource GetSynapsePrivateEndpointConnectionForPrivateLinkHubResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionForPrivateLinkHubResource GetSynapsePrivateEndpointConnectionForPrivateLinkHubResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapsePrivateEndpointConnectionForPrivateLinkHubResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapsePrivateEndpointConnectionForPrivateLinkHubResource (id As ResourceIdentifier) As SynapsePrivateEndpointConnectionForPrivateLinkHubResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapsePrivateEndpointConnectionForPrivateLinkHubResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionForPrivateLinkHubResource&#xA;override this.GetSynapsePrivateEndpointConnectionForPrivateLinkHubResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionForPrivateLinkHubResource" Usage="mockableSynapseArmClient.GetSynapsePrivateEndpointConnectionForPrivateLinkHubResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionForPrivateLinkHubResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionForPrivateLinkHubResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionForPrivateLinkHubResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionForPrivateLinkHubResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionForPrivateLinkHubResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapsePrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource GetSynapsePrivateEndpointConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource GetSynapsePrivateEndpointConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapsePrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapsePrivateEndpointConnectionResource (id As ResourceIdentifier) As SynapsePrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapsePrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource&#xA;override this.GetSynapsePrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource" Usage="mockableSynapseArmClient.GetSynapsePrivateEndpointConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapsePrivateLinkHubResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource GetSynapsePrivateLinkHubResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource GetSynapsePrivateLinkHubResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapsePrivateLinkHubResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapsePrivateLinkHubResource (id As ResourceIdentifier) As SynapsePrivateLinkHubResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapsePrivateLinkHubResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource&#xA;override this.GetSynapsePrivateLinkHubResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource" Usage="mockableSynapseArmClient.GetSynapsePrivateLinkHubResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateLinkHubResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapsePrivateLinkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapsePrivateLinkResource GetSynapsePrivateLinkResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapsePrivateLinkResource GetSynapsePrivateLinkResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapsePrivateLinkResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapsePrivateLinkResource (id As ResourceIdentifier) As SynapsePrivateLinkResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapsePrivateLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapsePrivateLinkResource&#xA;override this.GetSynapsePrivateLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapsePrivateLinkResource" Usage="mockableSynapseArmClient.GetSynapsePrivateLinkResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapsePrivateLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapsePrivateLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapsePrivateLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseRecoverableSqlPoolResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolResource GetSynapseRecoverableSqlPoolResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolResource GetSynapseRecoverableSqlPoolResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseRecoverableSqlPoolResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseRecoverableSqlPoolResource (id As ResourceIdentifier) As SynapseRecoverableSqlPoolResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseRecoverableSqlPoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolResource&#xA;override this.GetSynapseRecoverableSqlPoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolResource" Usage="mockableSynapseArmClient.GetSynapseRecoverableSqlPoolResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseRecoverableSqlPoolResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseReplicationLinkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseReplicationLinkResource GetSynapseReplicationLinkResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseReplicationLinkResource GetSynapseReplicationLinkResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseReplicationLinkResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseReplicationLinkResource (id As ResourceIdentifier) As SynapseReplicationLinkResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseReplicationLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseReplicationLinkResource&#xA;override this.GetSynapseReplicationLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseReplicationLinkResource" Usage="mockableSynapseArmClient.GetSynapseReplicationLinkResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseReplicationLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseReplicationLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseReplicationLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseReplicationLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseReplicationLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseRestorableDroppedSqlPoolResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolResource GetSynapseRestorableDroppedSqlPoolResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolResource GetSynapseRestorableDroppedSqlPoolResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseRestorableDroppedSqlPoolResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseRestorableDroppedSqlPoolResource (id As ResourceIdentifier) As SynapseRestorableDroppedSqlPoolResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseRestorableDroppedSqlPoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolResource&#xA;override this.GetSynapseRestorableDroppedSqlPoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolResource" Usage="mockableSynapseArmClient.GetSynapseRestorableDroppedSqlPoolResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseRestorableDroppedSqlPoolResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseRestorePointResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseRestorePointResource GetSynapseRestorePointResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseRestorePointResource GetSynapseRestorePointResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseRestorePointResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseRestorePointResource (id As ResourceIdentifier) As SynapseRestorePointResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseRestorePointResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseRestorePointResource&#xA;override this.GetSynapseRestorePointResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseRestorePointResource" Usage="mockableSynapseArmClient.GetSynapseRestorePointResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseRestorePointResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseRestorePointResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseRestorePointResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseRestorePointResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseRestorePointResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseSensitivityLabelResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseSensitivityLabelResource GetSynapseSensitivityLabelResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseSensitivityLabelResource GetSynapseSensitivityLabelResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseSensitivityLabelResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseSensitivityLabelResource (id As ResourceIdentifier) As SynapseSensitivityLabelResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseSensitivityLabelResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseSensitivityLabelResource&#xA;override this.GetSynapseSensitivityLabelResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseSensitivityLabelResource" Usage="mockableSynapseArmClient.GetSynapseSensitivityLabelResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseSensitivityLabelResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseSensitivityLabelResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseSensitivityLabelResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.SynapseSensitivityLabelSource)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseSensitivityLabelResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseSensitivityLabelResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseServerBlobAuditingPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyResource GetSynapseServerBlobAuditingPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyResource GetSynapseServerBlobAuditingPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseServerBlobAuditingPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseServerBlobAuditingPolicyResource (id As ResourceIdentifier) As SynapseServerBlobAuditingPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseServerBlobAuditingPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyResource&#xA;override this.GetSynapseServerBlobAuditingPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyResource" Usage="mockableSynapseArmClient.GetSynapseServerBlobAuditingPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.SynapseBlobAuditingPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseServerBlobAuditingPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseServerSecurityAlertPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyResource GetSynapseServerSecurityAlertPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyResource GetSynapseServerSecurityAlertPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseServerSecurityAlertPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseServerSecurityAlertPolicyResource (id As ResourceIdentifier) As SynapseServerSecurityAlertPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseServerSecurityAlertPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyResource&#xA;override this.GetSynapseServerSecurityAlertPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyResource" Usage="mockableSynapseArmClient.GetSynapseServerSecurityAlertPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.SqlServerSecurityAlertPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseServerSecurityAlertPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseServerVulnerabilityAssessmentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentResource GetSynapseServerVulnerabilityAssessmentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentResource GetSynapseServerVulnerabilityAssessmentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseServerVulnerabilityAssessmentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseServerVulnerabilityAssessmentResource (id As ResourceIdentifier) As SynapseServerVulnerabilityAssessmentResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseServerVulnerabilityAssessmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentResource&#xA;override this.GetSynapseServerVulnerabilityAssessmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentResource" Usage="mockableSynapseArmClient.GetSynapseServerVulnerabilityAssessmentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentResource.CreateResourceIdentifier(System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentName)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseServerVulnerabilityAssessmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseSparkConfigurationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseSparkConfigurationResource GetSynapseSparkConfigurationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseSparkConfigurationResource GetSynapseSparkConfigurationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseSparkConfigurationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseSparkConfigurationResource (id As ResourceIdentifier) As SynapseSparkConfigurationResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseSparkConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseSparkConfigurationResource&#xA;override this.GetSynapseSparkConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseSparkConfigurationResource" Usage="mockableSynapseArmClient.GetSynapseSparkConfigurationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseSparkConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseSparkConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseSparkConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseSparkConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseSparkConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseSqlPoolBlobAuditingPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseSqlPoolBlobAuditingPolicyResource GetSynapseSqlPoolBlobAuditingPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseSqlPoolBlobAuditingPolicyResource GetSynapseSqlPoolBlobAuditingPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseSqlPoolBlobAuditingPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseSqlPoolBlobAuditingPolicyResource (id As ResourceIdentifier) As SynapseSqlPoolBlobAuditingPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseSqlPoolBlobAuditingPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseSqlPoolBlobAuditingPolicyResource&#xA;override this.GetSynapseSqlPoolBlobAuditingPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseSqlPoolBlobAuditingPolicyResource" Usage="mockableSynapseArmClient.GetSynapseSqlPoolBlobAuditingPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseSqlPoolBlobAuditingPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolBlobAuditingPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseSqlPoolBlobAuditingPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolBlobAuditingPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolBlobAuditingPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseSqlPoolColumnResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseSqlPoolColumnResource GetSynapseSqlPoolColumnResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseSqlPoolColumnResource GetSynapseSqlPoolColumnResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseSqlPoolColumnResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseSqlPoolColumnResource (id As ResourceIdentifier) As SynapseSqlPoolColumnResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseSqlPoolColumnResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseSqlPoolColumnResource&#xA;override this.GetSynapseSqlPoolColumnResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseSqlPoolColumnResource" Usage="mockableSynapseArmClient.GetSynapseSqlPoolColumnResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseSqlPoolColumnResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolColumnResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseSqlPoolColumnResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolColumnResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolColumnResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseSqlPoolConnectionPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseSqlPoolConnectionPolicyResource GetSynapseSqlPoolConnectionPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseSqlPoolConnectionPolicyResource GetSynapseSqlPoolConnectionPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseSqlPoolConnectionPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseSqlPoolConnectionPolicyResource (id As ResourceIdentifier) As SynapseSqlPoolConnectionPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseSqlPoolConnectionPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseSqlPoolConnectionPolicyResource&#xA;override this.GetSynapseSqlPoolConnectionPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseSqlPoolConnectionPolicyResource" Usage="mockableSynapseArmClient.GetSynapseSqlPoolConnectionPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseSqlPoolConnectionPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolConnectionPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseSqlPoolConnectionPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.SqlPoolConnectionPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolConnectionPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolConnectionPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseSqlPoolResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseSqlPoolResource GetSynapseSqlPoolResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseSqlPoolResource GetSynapseSqlPoolResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseSqlPoolResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseSqlPoolResource (id As ResourceIdentifier) As SynapseSqlPoolResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseSqlPoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseSqlPoolResource&#xA;override this.GetSynapseSqlPoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseSqlPoolResource" Usage="mockableSynapseArmClient.GetSynapseSqlPoolResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseSqlPoolResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseSqlPoolResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseSqlPoolSchemaResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseSqlPoolSchemaResource GetSynapseSqlPoolSchemaResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseSqlPoolSchemaResource GetSynapseSqlPoolSchemaResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseSqlPoolSchemaResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseSqlPoolSchemaResource (id As ResourceIdentifier) As SynapseSqlPoolSchemaResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseSqlPoolSchemaResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseSqlPoolSchemaResource&#xA;override this.GetSynapseSqlPoolSchemaResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseSqlPoolSchemaResource" Usage="mockableSynapseArmClient.GetSynapseSqlPoolSchemaResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseSqlPoolSchemaResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolSchemaResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseSqlPoolSchemaResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolSchemaResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolSchemaResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseSqlPoolSecurityAlertPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseSqlPoolSecurityAlertPolicyResource GetSynapseSqlPoolSecurityAlertPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseSqlPoolSecurityAlertPolicyResource GetSynapseSqlPoolSecurityAlertPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseSqlPoolSecurityAlertPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseSqlPoolSecurityAlertPolicyResource (id As ResourceIdentifier) As SynapseSqlPoolSecurityAlertPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseSqlPoolSecurityAlertPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseSqlPoolSecurityAlertPolicyResource&#xA;override this.GetSynapseSqlPoolSecurityAlertPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseSqlPoolSecurityAlertPolicyResource" Usage="mockableSynapseArmClient.GetSynapseSqlPoolSecurityAlertPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseSqlPoolSecurityAlertPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolSecurityAlertPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseSqlPoolSecurityAlertPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.SqlPoolSecurityAlertPolicyName)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolSecurityAlertPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolSecurityAlertPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseSqlPoolTableResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseSqlPoolTableResource GetSynapseSqlPoolTableResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseSqlPoolTableResource GetSynapseSqlPoolTableResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseSqlPoolTableResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseSqlPoolTableResource (id As ResourceIdentifier) As SynapseSqlPoolTableResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseSqlPoolTableResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseSqlPoolTableResource&#xA;override this.GetSynapseSqlPoolTableResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseSqlPoolTableResource" Usage="mockableSynapseArmClient.GetSynapseSqlPoolTableResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseSqlPoolTableResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolTableResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseSqlPoolTableResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolTableResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolTableResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseSqlPoolVulnerabilityAssessmentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseSqlPoolVulnerabilityAssessmentResource GetSynapseSqlPoolVulnerabilityAssessmentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseSqlPoolVulnerabilityAssessmentResource GetSynapseSqlPoolVulnerabilityAssessmentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseSqlPoolVulnerabilityAssessmentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseSqlPoolVulnerabilityAssessmentResource (id As ResourceIdentifier) As SynapseSqlPoolVulnerabilityAssessmentResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseSqlPoolVulnerabilityAssessmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseSqlPoolVulnerabilityAssessmentResource&#xA;override this.GetSynapseSqlPoolVulnerabilityAssessmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseSqlPoolVulnerabilityAssessmentResource" Usage="mockableSynapseArmClient.GetSynapseSqlPoolVulnerabilityAssessmentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseSqlPoolVulnerabilityAssessmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolVulnerabilityAssessmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseSqlPoolVulnerabilityAssessmentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentName)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolVulnerabilityAssessmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolVulnerabilityAssessmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseSqlPoolVulnerabilityAssessmentRuleBaselineResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseSqlPoolVulnerabilityAssessmentRuleBaselineResource GetSynapseSqlPoolVulnerabilityAssessmentRuleBaselineResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseSqlPoolVulnerabilityAssessmentRuleBaselineResource GetSynapseSqlPoolVulnerabilityAssessmentRuleBaselineResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseSqlPoolVulnerabilityAssessmentRuleBaselineResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseSqlPoolVulnerabilityAssessmentRuleBaselineResource (id As ResourceIdentifier) As SynapseSqlPoolVulnerabilityAssessmentRuleBaselineResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseSqlPoolVulnerabilityAssessmentRuleBaselineResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseSqlPoolVulnerabilityAssessmentRuleBaselineResource&#xA;override this.GetSynapseSqlPoolVulnerabilityAssessmentRuleBaselineResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseSqlPoolVulnerabilityAssessmentRuleBaselineResource" Usage="mockableSynapseArmClient.GetSynapseSqlPoolVulnerabilityAssessmentRuleBaselineResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseSqlPoolVulnerabilityAssessmentRuleBaselineResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolVulnerabilityAssessmentRuleBaselineResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseSqlPoolVulnerabilityAssessmentRuleBaselineResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentName,System.String,Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentPolicyBaselineName)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolVulnerabilityAssessmentRuleBaselineResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseSqlPoolVulnerabilityAssessmentRuleBaselineResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseTransparentDataEncryptionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseTransparentDataEncryptionResource GetSynapseTransparentDataEncryptionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseTransparentDataEncryptionResource GetSynapseTransparentDataEncryptionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseTransparentDataEncryptionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseTransparentDataEncryptionResource (id As ResourceIdentifier) As SynapseTransparentDataEncryptionResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseTransparentDataEncryptionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseTransparentDataEncryptionResource&#xA;override this.GetSynapseTransparentDataEncryptionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseTransparentDataEncryptionResource" Usage="mockableSynapseArmClient.GetSynapseTransparentDataEncryptionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseTransparentDataEncryptionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseTransparentDataEncryptionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseTransparentDataEncryptionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.SynapseTransparentDataEncryptionName)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseTransparentDataEncryptionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseTransparentDataEncryptionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseVulnerabilityAssessmentScanRecordResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseVulnerabilityAssessmentScanRecordResource GetSynapseVulnerabilityAssessmentScanRecordResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseVulnerabilityAssessmentScanRecordResource GetSynapseVulnerabilityAssessmentScanRecordResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseVulnerabilityAssessmentScanRecordResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseVulnerabilityAssessmentScanRecordResource (id As ResourceIdentifier) As SynapseVulnerabilityAssessmentScanRecordResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseVulnerabilityAssessmentScanRecordResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseVulnerabilityAssessmentScanRecordResource&#xA;override this.GetSynapseVulnerabilityAssessmentScanRecordResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseVulnerabilityAssessmentScanRecordResource" Usage="mockableSynapseArmClient.GetSynapseVulnerabilityAssessmentScanRecordResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseVulnerabilityAssessmentScanRecordResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseVulnerabilityAssessmentScanRecordResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseVulnerabilityAssessmentScanRecordResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,Azure.ResourceManager.Synapse.Models.SynapseVulnerabilityAssessmentName,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseVulnerabilityAssessmentScanRecordResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseVulnerabilityAssessmentScanRecordResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseWorkloadClassifierResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseWorkloadClassifierResource GetSynapseWorkloadClassifierResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseWorkloadClassifierResource GetSynapseWorkloadClassifierResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseWorkloadClassifierResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseWorkloadClassifierResource (id As ResourceIdentifier) As SynapseWorkloadClassifierResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseWorkloadClassifierResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseWorkloadClassifierResource&#xA;override this.GetSynapseWorkloadClassifierResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseWorkloadClassifierResource" Usage="mockableSynapseArmClient.GetSynapseWorkloadClassifierResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseWorkloadClassifierResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkloadClassifierResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseWorkloadClassifierResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkloadClassifierResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkloadClassifierResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseWorkloadGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseWorkloadGroupResource GetSynapseWorkloadGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseWorkloadGroupResource GetSynapseWorkloadGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseWorkloadGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseWorkloadGroupResource (id As ResourceIdentifier) As SynapseWorkloadGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseWorkloadGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseWorkloadGroupResource&#xA;override this.GetSynapseWorkloadGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseWorkloadGroupResource" Usage="mockableSynapseArmClient.GetSynapseWorkloadGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseWorkloadGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkloadGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseWorkloadGroupResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkloadGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkloadGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseWorkspaceAdministratorResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseWorkspaceAdministratorResource GetSynapseWorkspaceAdministratorResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseWorkspaceAdministratorResource GetSynapseWorkspaceAdministratorResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseWorkspaceAdministratorResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseWorkspaceAdministratorResource (id As ResourceIdentifier) As SynapseWorkspaceAdministratorResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseWorkspaceAdministratorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseWorkspaceAdministratorResource&#xA;override this.GetSynapseWorkspaceAdministratorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseWorkspaceAdministratorResource" Usage="mockableSynapseArmClient.GetSynapseWorkspaceAdministratorResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseWorkspaceAdministratorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceAdministratorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseWorkspaceAdministratorResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceAdministratorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceAdministratorResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseWorkspacePrivateLinkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseWorkspacePrivateLinkResource GetSynapseWorkspacePrivateLinkResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseWorkspacePrivateLinkResource GetSynapseWorkspacePrivateLinkResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseWorkspacePrivateLinkResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseWorkspacePrivateLinkResource (id As ResourceIdentifier) As SynapseWorkspacePrivateLinkResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseWorkspacePrivateLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseWorkspacePrivateLinkResource&#xA;override this.GetSynapseWorkspacePrivateLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseWorkspacePrivateLinkResource" Usage="mockableSynapseArmClient.GetSynapseWorkspacePrivateLinkResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseWorkspacePrivateLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspacePrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseWorkspacePrivateLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspacePrivateLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspacePrivateLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseWorkspaceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseWorkspaceResource GetSynapseWorkspaceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseWorkspaceResource GetSynapseWorkspaceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseWorkspaceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseWorkspaceResource (id As ResourceIdentifier) As SynapseWorkspaceResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseWorkspaceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseWorkspaceResource&#xA;override this.GetSynapseWorkspaceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseWorkspaceResource" Usage="mockableSynapseArmClient.GetSynapseWorkspaceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseWorkspaceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseWorkspaceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynapseWorkspaceSqlAdministratorResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Synapse.SynapseWorkspaceSqlAdministratorResource GetSynapseWorkspaceSqlAdministratorResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Synapse.SynapseWorkspaceSqlAdministratorResource GetSynapseWorkspaceSqlAdministratorResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Mocking.MockableSynapseArmClient.GetSynapseWorkspaceSqlAdministratorResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynapseWorkspaceSqlAdministratorResource (id As ResourceIdentifier) As SynapseWorkspaceSqlAdministratorResource" />
      <MemberSignature Language="F#" Value="abstract member GetSynapseWorkspaceSqlAdministratorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseWorkspaceSqlAdministratorResource&#xA;override this.GetSynapseWorkspaceSqlAdministratorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Synapse.SynapseWorkspaceSqlAdministratorResource" Usage="mockableSynapseArmClient.GetSynapseWorkspaceSqlAdministratorResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.SynapseWorkspaceSqlAdministratorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceSqlAdministratorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Synapse.SynapseWorkspaceSqlAdministratorResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceSqlAdministratorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Synapse.SynapseWorkspaceSqlAdministratorResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
