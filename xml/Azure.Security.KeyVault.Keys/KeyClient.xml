<Type Name="KeyClient" FullName="Azure.Security.KeyVault.Keys.KeyClient">
  <TypeSignature Language="C#" Value="public class KeyClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Security.KeyVault.Keys.KeyClient" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyClient" />
  <TypeSignature Language="F#" Value="type KeyClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The KeyClient provides synchronous and asynchronous methods to manage <see cref="T:Azure.Security.KeyVault.Keys.KeyVaultKey" /> in the Azure Key Vault. The client
            supports creating, retrieving, updating, deleting, purging, backing up, restoring, and listing the <see cref="T:Azure.Security.KeyVault.Keys.KeyVaultKey" />.
            The client also supports listing <see cref="T:Azure.Security.KeyVault.Keys.DeletedKey" /> for a soft-delete enabled Azure Key Vault.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Security.KeyVault.Keys.KeyClient" /> class for mocking.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyClient (Uri vaultUri, Azure.Core.TokenCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri vaultUri, class Azure.Core.TokenCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (vaultUri As Uri, credential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Security.KeyVault.Keys.KeyClient : Uri * Azure.Core.TokenCredential -&gt; Azure.Security.KeyVault.Keys.KeyClient" Usage="new Azure.Security.KeyVault.Keys.KeyClient (vaultUri, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="vaultUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="vaultUri">
            A <see cref="T:System.Uri" /> to the vault on which the client operates. Appears as "DNS Name" in the Azure portal.
            If you have a key <see cref="T:System.Uri" />, use <see cref="T:Azure.Security.KeyVault.Keys.KeyVaultKeyIdentifier" /> to parse the <see cref="P:Azure.Security.KeyVault.Keys.KeyVaultKeyIdentifier.VaultUri" /> and other information.
            You should validate that this URI references a valid Key Vault or Managed HSM resource. See https://aka.ms/azsdk/blog/vault-uri for details.
            </param>
        <param name="credential">A <see cref="T:Azure.Core.TokenCredential" /> used to authenticate requests to the vault, such as DefaultAzureCredential.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Security.KeyVault.Keys.KeyClient" /> class for the specified vault.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultUri" /> or <paramref name="credential" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyClient (Uri vaultUri, Azure.Core.TokenCredential credential, Azure.Security.KeyVault.Keys.KeyClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri vaultUri, class Azure.Core.TokenCredential credential, class Azure.Security.KeyVault.Keys.KeyClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Security.KeyVault.Keys.KeyClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (vaultUri As Uri, credential As TokenCredential, options As KeyClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Security.KeyVault.Keys.KeyClient : Uri * Azure.Core.TokenCredential * Azure.Security.KeyVault.Keys.KeyClientOptions -&gt; Azure.Security.KeyVault.Keys.KeyClient" Usage="new Azure.Security.KeyVault.Keys.KeyClient (vaultUri, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="vaultUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Security.KeyVault.Keys.KeyClientOptions" />
      </Parameters>
      <Docs>
        <param name="vaultUri">
            A <see cref="T:System.Uri" /> to the vault on which the client operates. Appears as "DNS Name" in the Azure portal.
            If you have a key <see cref="T:System.Uri" />, use <see cref="T:Azure.Security.KeyVault.Keys.KeyVaultKeyIdentifier" /> to parse the <see cref="P:Azure.Security.KeyVault.Keys.KeyVaultKeyIdentifier.VaultUri" /> and other information.
            You should validate that this URI references a valid Key Vault or Managed HSM resource. See https://aka.ms/azsdk/blog/vault-uri for details.
            </param>
        <param name="credential">A <see cref="T:Azure.Core.TokenCredential" /> used to authenticate requests to the vault, such as DefaultAzureCredential.</param>
        <param name="options">
          <see cref="T:Azure.Security.KeyVault.Keys.KeyClientOptions" /> that allow to configure the management of the request sent to Key Vault.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Security.KeyVault.Keys.KeyClient" /> class for the specified vault.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultUri" /> or <paramref name="credential" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="BackupKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;byte[]&gt; BackupKey (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;unsigned int8[]&gt; BackupKey(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.BackupKey(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BackupKey (name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Byte())" />
      <MemberSignature Language="F#" Value="abstract member BackupKey : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;byte[]&gt;&#xA;override this.BackupKey : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;byte[]&gt;" Usage="keyClient.BackupKey (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the key.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Requests that a backup of the specified key be downloaded to the client.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The Key Backup operation exports a key from Azure Key Vault in a protected
            form. Note that this operation does NOT return the actual key in a form that
            can be used outside the Azure Key Vault system, the returned key
            is either protected to a Azure Key Vault HSM or to Azure Key Vault itself.
            The intent of this operation is to allow a client to GENERATE a key in one
            Azure Key Vault instance, BACKUP the key, and then RESTORE it into another
            Azure Key Vault instance. The BACKUP operation may be used to export, in
            protected form, any key type from Azure Key Vault. Individual versions of a
            key cannot be backed up. BACKUP / RESTORE can be performed within
            geographical boundaries only; meaning that a BACKUP from one geographical
            area cannot be restored to another geographical area. For example, a backup
            from the US geographical area cannot be restored in an EU geographical
            area. This operation requires the key/backup permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="BackupKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;byte[]&gt;&gt; BackupKeyAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;unsigned int8[]&gt;&gt; BackupKeyAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.BackupKeyAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BackupKeyAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Byte()))" />
      <MemberSignature Language="F#" Value="abstract member BackupKeyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;byte[]&gt;&gt;&#xA;override this.BackupKeyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;byte[]&gt;&gt;" Usage="keyClient.BackupKeyAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Byte[]&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the key.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Requests that a backup of the specified key be downloaded to the client.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The Key Backup operation exports a key from Azure Key Vault in a protected
            form. Note that this operation does NOT return the actual key in a form that
            can be used outside the Azure Key Vault system, the returned key
            is either protected to a Azure Key Vault HSM or to Azure Key Vault itself.
            The intent of this operation is to allow a client to GENERATE a key in one
            Azure Key Vault instance, BACKUP the key, and then RESTORE it into another
            Azure Key Vault instance. The BACKUP operation may be used to export, in
            protected form, any key type from Azure Key Vault. Individual versions of a
            key cannot be backed up. BACKUP / RESTORE can be performed within
            geographical boundaries only; meaning that a BACKUP from one geographical
            area cannot be restored to another geographical area. For example, a backup
            from the US geographical area cannot be restored in an EU geographical
            area. This operation requires the key/backup permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateEcKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt; CreateEcKey (Azure.Security.KeyVault.Keys.CreateEcKeyOptions ecKeyOptions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.KeyVaultKey&gt; CreateEcKey(class Azure.Security.KeyVault.Keys.CreateEcKeyOptions ecKeyOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.CreateEcKey(Azure.Security.KeyVault.Keys.CreateEcKeyOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateEcKey (ecKeyOptions As CreateEcKeyOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of KeyVaultKey)" />
      <MemberSignature Language="F#" Value="abstract member CreateEcKey : Azure.Security.KeyVault.Keys.CreateEcKeyOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&#xA;override this.CreateEcKey : Azure.Security.KeyVault.Keys.CreateEcKeyOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;" Usage="keyClient.CreateEcKey (ecKeyOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ecKeyOptions" Type="Azure.Security.KeyVault.Keys.CreateEcKeyOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ecKeyOptions">The key options object containing information about the Elliptic Curve key being created.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates and stores a new Elliptic Curve key in Key Vault. If the named key already exists,
            Azure Key Vault creates a new version of the key. This operation requires the keys/create permission.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ecKeyOptions" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateEcKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt; CreateEcKeyAsync (Azure.Security.KeyVault.Keys.CreateEcKeyOptions ecKeyOptions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt; CreateEcKeyAsync(class Azure.Security.KeyVault.Keys.CreateEcKeyOptions ecKeyOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.CreateEcKeyAsync(Azure.Security.KeyVault.Keys.CreateEcKeyOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateEcKeyAsync (ecKeyOptions As CreateEcKeyOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of KeyVaultKey))" />
      <MemberSignature Language="F#" Value="abstract member CreateEcKeyAsync : Azure.Security.KeyVault.Keys.CreateEcKeyOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt;&#xA;override this.CreateEcKeyAsync : Azure.Security.KeyVault.Keys.CreateEcKeyOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt;" Usage="keyClient.CreateEcKeyAsync (ecKeyOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ecKeyOptions" Type="Azure.Security.KeyVault.Keys.CreateEcKeyOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ecKeyOptions">The key options object containing information about the Elliptic Curve key being created.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates and stores a new Elliptic Curve key in Key Vault. If the named key already exists,
            Azure Key Vault creates a new version of the key. This operation requires the keys/create permission.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ecKeyOptions" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt; CreateKey (string name, Azure.Security.KeyVault.Keys.KeyType keyType, Azure.Security.KeyVault.Keys.CreateKeyOptions keyOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.KeyVaultKey&gt; CreateKey(string name, valuetype Azure.Security.KeyVault.Keys.KeyType keyType, class Azure.Security.KeyVault.Keys.CreateKeyOptions keyOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.CreateKey(System.String,Azure.Security.KeyVault.Keys.KeyType,Azure.Security.KeyVault.Keys.CreateKeyOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateKey (name As String, keyType As KeyType, Optional keyOptions As CreateKeyOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of KeyVaultKey)" />
      <MemberSignature Language="F#" Value="abstract member CreateKey : string * Azure.Security.KeyVault.Keys.KeyType * Azure.Security.KeyVault.Keys.CreateKeyOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&#xA;override this.CreateKey : string * Azure.Security.KeyVault.Keys.KeyType * Azure.Security.KeyVault.Keys.CreateKeyOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;" Usage="keyClient.CreateKey (name, keyType, keyOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="keyType" Type="Azure.Security.KeyVault.Keys.KeyType" />
        <Parameter Name="keyOptions" Type="Azure.Security.KeyVault.Keys.CreateKeyOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the key.</param>
        <param name="keyType">The type of key to create. See <see cref="T:Azure.Security.KeyVault.Keys.KeyType" /> for valid values.</param>
        <param name="keyOptions">Specific attributes with information about the key.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates and stores a new key in Key Vault. The create key operation can be used to create any key type in Azure Key Vault.
            If the named key already exists, Azure Key Vault creates a new version of the key. This operation requires the keys/create permission.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, or <paramref name="keyType" /> contains no value.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt; CreateKeyAsync (string name, Azure.Security.KeyVault.Keys.KeyType keyType, Azure.Security.KeyVault.Keys.CreateKeyOptions keyOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt; CreateKeyAsync(string name, valuetype Azure.Security.KeyVault.Keys.KeyType keyType, class Azure.Security.KeyVault.Keys.CreateKeyOptions keyOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.CreateKeyAsync(System.String,Azure.Security.KeyVault.Keys.KeyType,Azure.Security.KeyVault.Keys.CreateKeyOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateKeyAsync (name As String, keyType As KeyType, Optional keyOptions As CreateKeyOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of KeyVaultKey))" />
      <MemberSignature Language="F#" Value="abstract member CreateKeyAsync : string * Azure.Security.KeyVault.Keys.KeyType * Azure.Security.KeyVault.Keys.CreateKeyOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt;&#xA;override this.CreateKeyAsync : string * Azure.Security.KeyVault.Keys.KeyType * Azure.Security.KeyVault.Keys.CreateKeyOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt;" Usage="keyClient.CreateKeyAsync (name, keyType, keyOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="keyType" Type="Azure.Security.KeyVault.Keys.KeyType" />
        <Parameter Name="keyOptions" Type="Azure.Security.KeyVault.Keys.CreateKeyOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the key.</param>
        <param name="keyType">The type of key to create. See <see cref="T:Azure.Security.KeyVault.Keys.KeyType" /> for valid values.</param>
        <param name="keyOptions">Specific attributes with information about the key.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates and stores a new key in Key Vault. The create key operation can be used to create any key type in Azure Key Vault.
            If the named key already exists, Azure Key Vault creates a new version of the key. This operation requires the keys/create permission.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, or <paramref name="keyType" /> contains no value.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOctKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt; CreateOctKey (Azure.Security.KeyVault.Keys.CreateOctKeyOptions octKeyOptions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.KeyVaultKey&gt; CreateOctKey(class Azure.Security.KeyVault.Keys.CreateOctKeyOptions octKeyOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.CreateOctKey(Azure.Security.KeyVault.Keys.CreateOctKeyOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOctKey (octKeyOptions As CreateOctKeyOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of KeyVaultKey)" />
      <MemberSignature Language="F#" Value="abstract member CreateOctKey : Azure.Security.KeyVault.Keys.CreateOctKeyOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&#xA;override this.CreateOctKey : Azure.Security.KeyVault.Keys.CreateOctKeyOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;" Usage="keyClient.CreateOctKey (octKeyOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="octKeyOptions" Type="Azure.Security.KeyVault.Keys.CreateOctKeyOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="octKeyOptions">The key options object containing information about the AES key being created.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates and stores a new AES key in Key Vault. If the named key already exists, Azure Key Vault creates a new
            version of the key. This operation requires the keys/create permission.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="octKeyOptions" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOctKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt; CreateOctKeyAsync (Azure.Security.KeyVault.Keys.CreateOctKeyOptions octKeyOptions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt; CreateOctKeyAsync(class Azure.Security.KeyVault.Keys.CreateOctKeyOptions octKeyOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.CreateOctKeyAsync(Azure.Security.KeyVault.Keys.CreateOctKeyOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOctKeyAsync (octKeyOptions As CreateOctKeyOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of KeyVaultKey))" />
      <MemberSignature Language="F#" Value="abstract member CreateOctKeyAsync : Azure.Security.KeyVault.Keys.CreateOctKeyOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt;&#xA;override this.CreateOctKeyAsync : Azure.Security.KeyVault.Keys.CreateOctKeyOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt;" Usage="keyClient.CreateOctKeyAsync (octKeyOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="octKeyOptions" Type="Azure.Security.KeyVault.Keys.CreateOctKeyOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="octKeyOptions">The key options object containing information about the AES key being created.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates and stores a new AES key in Key Vault. If the named key already exists, Azure Key Vault creates a new
            version of the key. This operation requires the keys/create permission.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="octKeyOptions" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRsaKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt; CreateRsaKey (Azure.Security.KeyVault.Keys.CreateRsaKeyOptions rsaKeyOptions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.KeyVaultKey&gt; CreateRsaKey(class Azure.Security.KeyVault.Keys.CreateRsaKeyOptions rsaKeyOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.CreateRsaKey(Azure.Security.KeyVault.Keys.CreateRsaKeyOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateRsaKey (rsaKeyOptions As CreateRsaKeyOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of KeyVaultKey)" />
      <MemberSignature Language="F#" Value="abstract member CreateRsaKey : Azure.Security.KeyVault.Keys.CreateRsaKeyOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&#xA;override this.CreateRsaKey : Azure.Security.KeyVault.Keys.CreateRsaKeyOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;" Usage="keyClient.CreateRsaKey (rsaKeyOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rsaKeyOptions" Type="Azure.Security.KeyVault.Keys.CreateRsaKeyOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="rsaKeyOptions">The key options object containing information about the RSA key being created.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates and stores a new RSA key in Key Vault. If the named key already exists, Azure Key Vault creates a new
            version of the key. This operation requires the keys/create permission.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rsaKeyOptions" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRsaKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt; CreateRsaKeyAsync (Azure.Security.KeyVault.Keys.CreateRsaKeyOptions rsaKeyOptions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt; CreateRsaKeyAsync(class Azure.Security.KeyVault.Keys.CreateRsaKeyOptions rsaKeyOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.CreateRsaKeyAsync(Azure.Security.KeyVault.Keys.CreateRsaKeyOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateRsaKeyAsync (rsaKeyOptions As CreateRsaKeyOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of KeyVaultKey))" />
      <MemberSignature Language="F#" Value="abstract member CreateRsaKeyAsync : Azure.Security.KeyVault.Keys.CreateRsaKeyOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt;&#xA;override this.CreateRsaKeyAsync : Azure.Security.KeyVault.Keys.CreateRsaKeyOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt;" Usage="keyClient.CreateRsaKeyAsync (rsaKeyOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rsaKeyOptions" Type="Azure.Security.KeyVault.Keys.CreateRsaKeyOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="rsaKeyOptions">The key options object containing information about the RSA key being created.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates and stores a new RSA key in Key Vault. If the named key already exists, Azure Key Vault creates a new
            version of the key. This operation requires the keys/create permission.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rsaKeyOptions" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCryptographyClient">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient GetCryptographyClient (string keyName, string keyVersion = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient GetCryptographyClient(string keyName, string keyVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.GetCryptographyClient(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCryptographyClient (keyName As String, Optional keyVersion As String = Nothing) As CryptographyClient" />
      <MemberSignature Language="F#" Value="abstract member GetCryptographyClient : string * string -&gt; Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient&#xA;override this.GetCryptographyClient : string * string -&gt; Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient" Usage="keyClient.GetCryptographyClient (keyName, keyVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="keyVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyName">The name of the key used to perform cryptographic operations.</param>
        <param name="keyVersion">Optional version of the key used to perform cryptographic operations.</param>
        <summary>
            Get a <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient" /> for the given key.
            </summary>
        <returns>A <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient" /> using the same options and pipeline as this <see cref="T:Azure.Security.KeyVault.Keys.KeyClient" />.</returns>
        <remarks>
          <para>
            Given a key <paramref name="keyName" /> and optional <paramref name="keyVersion" />, a new <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient" /> will be created
            using the same <see cref="P:Azure.Security.KeyVault.Keys.KeyClient.VaultUri" /> and options passed to this <see cref="T:Azure.Security.KeyVault.Keys.KeyClient" />, including the <see cref="T:Azure.Security.KeyVault.Keys.KeyClientOptions.ServiceVersion" />,
            <see cref="P:Azure.Core.ClientOptions.Diagnostics" />, <see cref="P:Azure.Core.ClientOptions.Retry" />, and other options.
            </para>
          <para>
            If you want to create a <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient" /> using a different Key Vault or Managed HSM endpoint, with different options, or even with a
            <see cref="T:Azure.Security.KeyVault.Keys.JsonWebKey" /> you already have acquired, you can create a <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient" /> directly with any of those alternatives.
            </para>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> is an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyName" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Keys.DeletedKey&gt; GetDeletedKey (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.DeletedKey&gt; GetDeletedKey(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.GetDeletedKey(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeletedKey (name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DeletedKey)" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedKey : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.DeletedKey&gt;&#xA;override this.GetDeletedKey : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.DeletedKey&gt;" Usage="keyClient.GetDeletedKey (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Keys.DeletedKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the key.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets the public part of a deleted key.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The Get Deleted Key operation is applicable for soft-delete enabled vaults.
            While the operation can be invoked on any vault, it will return an error if
            invoked on a non soft-delete enabled vault. This operation requires the
            keys/get permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.DeletedKey&gt;&gt; GetDeletedKeyAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.DeletedKey&gt;&gt; GetDeletedKeyAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.GetDeletedKeyAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeletedKeyAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DeletedKey))" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedKeyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.DeletedKey&gt;&gt;&#xA;override this.GetDeletedKeyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.DeletedKey&gt;&gt;" Usage="keyClient.GetDeletedKeyAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.DeletedKey&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the key.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets the public part of a deleted key.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The Get Deleted Key operation is applicable for soft-delete enabled vaults.
            While the operation can be invoked on any vault, it will return an error if
            invoked on a non soft-delete enabled vault. This operation requires the
            keys/get permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedKeys">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Security.KeyVault.Keys.DeletedKey&gt; GetDeletedKeys (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Security.KeyVault.Keys.DeletedKey&gt; GetDeletedKeys(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.GetDeletedKeys(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeletedKeys (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DeletedKey)" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedKeys : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Security.KeyVault.Keys.DeletedKey&gt;&#xA;override this.GetDeletedKeys : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Security.KeyVault.Keys.DeletedKey&gt;" Usage="keyClient.GetDeletedKeys cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Security.KeyVault.Keys.DeletedKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Lists the deleted keys in the specified vault.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Retrieves a list of the keys in the Key Vault that contains the public part of a deleted key.
            This operation includes deletion-specific information.
            The Get Deleted Keys operation is applicable
            for vaults enabled for soft-delete. While the operation can be invoked on
            any vault, it will return an error if invoked on a non soft-delete enabled
            vault. This operation requires the keys/list permission.
            </remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedKeysAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Security.KeyVault.Keys.DeletedKey&gt; GetDeletedKeysAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Security.KeyVault.Keys.DeletedKey&gt; GetDeletedKeysAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.GetDeletedKeysAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeletedKeysAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DeletedKey)" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedKeysAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Security.KeyVault.Keys.DeletedKey&gt;&#xA;override this.GetDeletedKeysAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Security.KeyVault.Keys.DeletedKey&gt;" Usage="keyClient.GetDeletedKeysAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Security.KeyVault.Keys.DeletedKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Lists the deleted keys in the specified vault.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Retrieves a list of the keys in the Key Vault that contains the public part of a deleted key.
            This operation includes deletion-specific information.
            The Get Deleted Keys operation is applicable
            for vaults enabled for soft-delete. While the operation can be invoked on
            any vault, it will return an error if invoked on a non soft-delete enabled
            vault. This operation requires the keys/list permission.
            </remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt; GetKey (string name, string version = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.KeyVaultKey&gt; GetKey(string name, string version, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.GetKey(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKey (name As String, Optional version As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of KeyVaultKey)" />
      <MemberSignature Language="F#" Value="abstract member GetKey : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&#xA;override this.GetKey : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;" Usage="keyClient.GetKey (name, version, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the key.</param>
        <param name="version">The version of the key.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets the public part of a stored key.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The get key operation is applicable to all key types. If the requested key
            is symmetric, then no key is released in the response. This
            operation requires the keys/get permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt; GetKeyAsync (string name, string version = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt; GetKeyAsync(string name, string version, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.GetKeyAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeyAsync (name As String, Optional version As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of KeyVaultKey))" />
      <MemberSignature Language="F#" Value="abstract member GetKeyAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt;&#xA;override this.GetKeyAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt;" Usage="keyClient.GetKeyAsync (name, version, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the key.</param>
        <param name="version">The version of the key.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets the public part of a stored key.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The get key operation is applicable to all key types. If the requested key
            is symmetric, then no key is released in the response. This
            operation requires the keys/get permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyRotationPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt; GetKeyRotationPolicy (string keyName, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt; GetKeyRotationPolicy(string keyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.GetKeyRotationPolicy(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeyRotationPolicy (keyName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of KeyRotationPolicy)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GetKeyRotationPolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt;&#xA;override this.GetKeyRotationPolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt;" Usage="keyClient.GetKeyRotationPolicy (keyName, cancellationToken)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt; GetKeyRotationPolicy (string name, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt; GetKeyRotationPolicy(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeyRotationPolicy (name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of KeyRotationPolicy)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member GetKeyRotationPolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt;&#xA;override this.GetKeyRotationPolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt;" Usage="keyClient.GetKeyRotationPolicy (name, cancellationToken)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" />
      </Parameters>
      <Docs>
        <param name="keyName">The name of the key.</param>
        <param name="name">The name of the key.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets the <see cref="T:Azure.Security.KeyVault.Keys.KeyRotationPolicy" /> for the specified key in Key Vault.
            </summary>
        <returns>A <see cref="T:Azure.Security.KeyVault.Keys.KeyRotationPolicy" /> for the specified key.</returns>
        <remarks>
            This operation requires the keys/get permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> contains an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyRotationPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt;&gt; GetKeyRotationPolicyAsync (string keyName, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt;&gt; GetKeyRotationPolicyAsync(string keyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.GetKeyRotationPolicyAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeyRotationPolicyAsync (keyName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of KeyRotationPolicy))" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GetKeyRotationPolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt;&gt;&#xA;override this.GetKeyRotationPolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt;&gt;" Usage="keyClient.GetKeyRotationPolicyAsync (keyName, cancellationToken)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt;&gt; GetKeyRotationPolicyAsync (string name, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt;&gt; GetKeyRotationPolicyAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeyRotationPolicyAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of KeyRotationPolicy))" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member GetKeyRotationPolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt;&gt;&#xA;override this.GetKeyRotationPolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt;&gt;" Usage="keyClient.GetKeyRotationPolicyAsync (name, cancellationToken)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" />
      </Parameters>
      <Docs>
        <param name="keyName">The name of the key.</param>
        <param name="name">The name of the key.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets the <see cref="T:Azure.Security.KeyVault.Keys.KeyRotationPolicy" /> for the specified key in Key Vault.
            </summary>
        <returns>A <see cref="T:Azure.Security.KeyVault.Keys.KeyRotationPolicy" /> for the specified key.</returns>
        <remarks>
            This operation requires the keys/get permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> contains an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesOfKeys">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Security.KeyVault.Keys.KeyProperties&gt; GetPropertiesOfKeys (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Security.KeyVault.Keys.KeyProperties&gt; GetPropertiesOfKeys(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.GetPropertiesOfKeys(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesOfKeys (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of KeyProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesOfKeys : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Security.KeyVault.Keys.KeyProperties&gt;&#xA;override this.GetPropertiesOfKeys : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Security.KeyVault.Keys.KeyProperties&gt;" Usage="keyClient.GetPropertiesOfKeys cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Security.KeyVault.Keys.KeyProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Lists the properties of all enabled and disabled keys in the specified vault. You can use the returned <see cref="P:Azure.Security.KeyVault.Keys.KeyProperties.Name" /> in subsequent calls to <see cref="M:Azure.Security.KeyVault.Keys.KeyClient.GetKey(System.String,System.String,System.Threading.CancellationToken)" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            Retrieves a list of the keys in the Key Vault that contains the public part of a stored key.
            The list operation is applicable to all key types, however only the base key identifier,
            attributes, and tags are provided in the response. Individual versions of a
            key are not listed in the response. This operation requires the keys/list
            permission.
            </para>
          <para>
            Managed keys may also be listed. They are the public key for certificates stored in Key Vault.
            </para>
        </remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesOfKeysAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Security.KeyVault.Keys.KeyProperties&gt; GetPropertiesOfKeysAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Security.KeyVault.Keys.KeyProperties&gt; GetPropertiesOfKeysAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.GetPropertiesOfKeysAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesOfKeysAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of KeyProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesOfKeysAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Security.KeyVault.Keys.KeyProperties&gt;&#xA;override this.GetPropertiesOfKeysAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Security.KeyVault.Keys.KeyProperties&gt;" Usage="keyClient.GetPropertiesOfKeysAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Security.KeyVault.Keys.KeyProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Lists the properties of all enabled and disabled keys in the specified vault. You can use the returned <see cref="P:Azure.Security.KeyVault.Keys.KeyProperties.Name" /> in subsequent calls to <see cref="M:Azure.Security.KeyVault.Keys.KeyClient.GetKeyAsync(System.String,System.String,System.Threading.CancellationToken)" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            Retrieves a list of the keys in the Key Vault that contains the public part of a stored key.
            The list operation is applicable to all key types, however only the base key identifier,
            attributes, and tags are provided in the response. Individual versions of a
            key are not listed in the response. This operation requires the keys/list
            permission.
            </para>
          <para>
            Managed keys may also be listed. They are the public key for certificates stored in Key Vault.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesOfKeyVersions">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Security.KeyVault.Keys.KeyProperties&gt; GetPropertiesOfKeyVersions (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Security.KeyVault.Keys.KeyProperties&gt; GetPropertiesOfKeyVersions(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.GetPropertiesOfKeyVersions(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesOfKeyVersions (name As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of KeyProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesOfKeyVersions : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Security.KeyVault.Keys.KeyProperties&gt;&#xA;override this.GetPropertiesOfKeyVersions : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Security.KeyVault.Keys.KeyProperties&gt;" Usage="keyClient.GetPropertiesOfKeyVersions (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Security.KeyVault.Keys.KeyProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the key.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Lists the properties of all enabled and disabled versions of the specified key. You can use the returned <see cref="P:Azure.Security.KeyVault.Keys.KeyProperties.Name" /> and <see cref="P:Azure.Security.KeyVault.Keys.KeyProperties.Version" /> in subsequent calls to <see cref="M:Azure.Security.KeyVault.Keys.KeyClient.GetKey(System.String,System.String,System.Threading.CancellationToken)" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The full key identifier, attributes, and tags are provided in the response.
            This operation requires the keys/list permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesOfKeyVersionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Security.KeyVault.Keys.KeyProperties&gt; GetPropertiesOfKeyVersionsAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Security.KeyVault.Keys.KeyProperties&gt; GetPropertiesOfKeyVersionsAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.GetPropertiesOfKeyVersionsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesOfKeyVersionsAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of KeyProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesOfKeyVersionsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Security.KeyVault.Keys.KeyProperties&gt;&#xA;override this.GetPropertiesOfKeyVersionsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Security.KeyVault.Keys.KeyProperties&gt;" Usage="keyClient.GetPropertiesOfKeyVersionsAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Security.KeyVault.Keys.KeyProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the key.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Lists the properties of all enabled and disabled versions of the specified key. You can use the returned <see cref="P:Azure.Security.KeyVault.Keys.KeyProperties.Name" /> and <see cref="P:Azure.Security.KeyVault.Keys.KeyProperties.Version" /> in subsequent calls to <see cref="M:Azure.Security.KeyVault.Keys.KeyClient.GetKeyAsync(System.String,System.String,System.Threading.CancellationToken)" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The full key identifier, attributes, and tags are provided in the response.
            This operation requires the keys/list permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRandomBytes">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;byte[]&gt; GetRandomBytes (int count, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;unsigned int8[]&gt; GetRandomBytes(int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.GetRandomBytes(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRandomBytes (count As Integer, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Byte())" />
      <MemberSignature Language="F#" Value="abstract member GetRandomBytes : int * System.Threading.CancellationToken -&gt; Azure.Response&lt;byte[]&gt;&#xA;override this.GetRandomBytes : int * System.Threading.CancellationToken -&gt; Azure.Response&lt;byte[]&gt;" Usage="keyClient.GetRandomBytes (count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="count">The requested number of random bytes.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Get the requested number of bytes containing random values from a managed hardware security module (HSM).
            </summary>
        <returns>A byte array containing random values from a managed hardware security module (HSM).</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="count" /> is less than 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRandomBytesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;byte[]&gt;&gt; GetRandomBytesAsync (int count, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;unsigned int8[]&gt;&gt; GetRandomBytesAsync(int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.GetRandomBytesAsync(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRandomBytesAsync (count As Integer, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Byte()))" />
      <MemberSignature Language="F#" Value="abstract member GetRandomBytesAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;byte[]&gt;&gt;&#xA;override this.GetRandomBytesAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;byte[]&gt;&gt;" Usage="keyClient.GetRandomBytesAsync (count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Byte[]&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="count">The requested number of random bytes.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Get the requested number of bytes containing random values from a managed hardware security module (HSM).
            </summary>
        <returns>A byte array containing random values from a managed hardware security module (HSM).</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="count" /> is less than 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt; ImportKey (Azure.Security.KeyVault.Keys.ImportKeyOptions importKeyOptions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.KeyVaultKey&gt; ImportKey(class Azure.Security.KeyVault.Keys.ImportKeyOptions importKeyOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.ImportKey(Azure.Security.KeyVault.Keys.ImportKeyOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportKey (importKeyOptions As ImportKeyOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of KeyVaultKey)" />
      <MemberSignature Language="F#" Value="abstract member ImportKey : Azure.Security.KeyVault.Keys.ImportKeyOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&#xA;override this.ImportKey : Azure.Security.KeyVault.Keys.ImportKeyOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;" Usage="keyClient.ImportKey (importKeyOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importKeyOptions" Type="Azure.Security.KeyVault.Keys.ImportKeyOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="importKeyOptions">The key import configuration object containing information about the <see cref="T:Azure.Security.KeyVault.Keys.JsonWebKey" /> being imported.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Imports an externally created key, stores it, and returns key parameters
            and attributes to the client.
            </summary>
        <returns>The <see cref="T:Azure.Security.KeyVault.Keys.KeyVaultKey" /> that was imported.</returns>
        <remarks>
            The import key operation may be used to import any key type into an Azure
            Key Vault. If the named key already exists, Azure Key Vault creates a new
            version of the key. This operation requires the keys/import permission.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="importKeyOptions" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt; ImportKey (string name, Azure.Security.KeyVault.Keys.JsonWebKey keyMaterial, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.KeyVaultKey&gt; ImportKey(string name, class Azure.Security.KeyVault.Keys.JsonWebKey keyMaterial, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.ImportKey(System.String,Azure.Security.KeyVault.Keys.JsonWebKey,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportKey (name As String, keyMaterial As JsonWebKey, Optional cancellationToken As CancellationToken = Nothing) As Response(Of KeyVaultKey)" />
      <MemberSignature Language="F#" Value="abstract member ImportKey : string * Azure.Security.KeyVault.Keys.JsonWebKey * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&#xA;override this.ImportKey : string * Azure.Security.KeyVault.Keys.JsonWebKey * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;" Usage="keyClient.ImportKey (name, keyMaterial, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="keyMaterial" Type="Azure.Security.KeyVault.Keys.JsonWebKey" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the key.</param>
        <param name="keyMaterial">The <see cref="T:Azure.Security.KeyVault.Keys.JsonWebKey" /> being imported.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Imports an externally created key, stores it, and returns key parameters
            and attributes to the client.
            </summary>
        <returns>The <see cref="T:Azure.Security.KeyVault.Keys.KeyVaultKey" /> that was imported.</returns>
        <remarks>
            The import key operation may be used to import any key type into an Azure
            Key Vault. If the named key already exists, Azure Key Vault creates a new
            version of the key. This operation requires the keys/import permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> or <paramref name="keyMaterial" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt; ImportKeyAsync (Azure.Security.KeyVault.Keys.ImportKeyOptions importKeyOptions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt; ImportKeyAsync(class Azure.Security.KeyVault.Keys.ImportKeyOptions importKeyOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.ImportKeyAsync(Azure.Security.KeyVault.Keys.ImportKeyOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportKeyAsync (importKeyOptions As ImportKeyOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of KeyVaultKey))" />
      <MemberSignature Language="F#" Value="abstract member ImportKeyAsync : Azure.Security.KeyVault.Keys.ImportKeyOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt;&#xA;override this.ImportKeyAsync : Azure.Security.KeyVault.Keys.ImportKeyOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt;" Usage="keyClient.ImportKeyAsync (importKeyOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importKeyOptions" Type="Azure.Security.KeyVault.Keys.ImportKeyOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="importKeyOptions">The key import configuration object containing information about the <see cref="T:Azure.Security.KeyVault.Keys.JsonWebKey" /> being imported.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Imports an externally created key, stores it, and returns key parameters
            and attributes to the client.
            </summary>
        <returns>The <see cref="T:Azure.Security.KeyVault.Keys.KeyVaultKey" /> that was imported.</returns>
        <remarks>
            The import key operation may be used to import any key type into an Azure
            Key Vault. If the named key already exists, Azure Key Vault creates a new
            version of the key. This operation requires the keys/import permission.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="importKeyOptions" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt; ImportKeyAsync (string name, Azure.Security.KeyVault.Keys.JsonWebKey keyMaterial, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt; ImportKeyAsync(string name, class Azure.Security.KeyVault.Keys.JsonWebKey keyMaterial, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.ImportKeyAsync(System.String,Azure.Security.KeyVault.Keys.JsonWebKey,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportKeyAsync (name As String, keyMaterial As JsonWebKey, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of KeyVaultKey))" />
      <MemberSignature Language="F#" Value="abstract member ImportKeyAsync : string * Azure.Security.KeyVault.Keys.JsonWebKey * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt;&#xA;override this.ImportKeyAsync : string * Azure.Security.KeyVault.Keys.JsonWebKey * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt;" Usage="keyClient.ImportKeyAsync (name, keyMaterial, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="keyMaterial" Type="Azure.Security.KeyVault.Keys.JsonWebKey" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the key.</param>
        <param name="keyMaterial">The <see cref="T:Azure.Security.KeyVault.Keys.JsonWebKey" /> being imported.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Imports an externally created key, stores it, and returns key parameters
            and attributes to the client.
            </summary>
        <returns>The <see cref="T:Azure.Security.KeyVault.Keys.KeyVaultKey" /> that was imported.</returns>
        <remarks>
            The import key operation may be used to import any key type into an Azure
            Key Vault. If the named key already exists, Azure Key Vault creates a new
            version of the key. This operation requires the keys/import permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> or <paramref name="keyMaterial" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="PurgeDeletedKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Response PurgeDeletedKey (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response PurgeDeletedKey(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.PurgeDeletedKey(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PurgeDeletedKey (name As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member PurgeDeletedKey : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.PurgeDeletedKey : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="keyClient.PurgeDeletedKey (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the key.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Permanently deletes the specified key.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The Purge Deleted Key operation is applicable for soft-delete enabled
            vaults. While the operation can be invoked on any vault, it will return an
            error if invoked on a non soft-delete enabled vault. This operation
            requires the keys/purge permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="PurgeDeletedKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; PurgeDeletedKeyAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; PurgeDeletedKeyAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.PurgeDeletedKeyAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PurgeDeletedKeyAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member PurgeDeletedKeyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.PurgeDeletedKeyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="keyClient.PurgeDeletedKeyAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the key.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Permanently deletes the specified key.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The Purge Deleted Key operation is applicable for soft-delete enabled
            vaults. While the operation can be invoked on any vault, it will return an
            error if invoked on a non soft-delete enabled vault. This operation
            requires the keys/purge permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt; ReleaseKey (Azure.Security.KeyVault.Keys.ReleaseKeyOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt; ReleaseKey(class Azure.Security.KeyVault.Keys.ReleaseKeyOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.ReleaseKey(Azure.Security.KeyVault.Keys.ReleaseKeyOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReleaseKey (options As ReleaseKeyOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ReleaseKeyResult)" />
      <MemberSignature Language="F#" Value="abstract member ReleaseKey : Azure.Security.KeyVault.Keys.ReleaseKeyOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;&#xA;override this.ReleaseKey : Azure.Security.KeyVault.Keys.ReleaseKeyOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;" Usage="keyClient.ReleaseKey (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Security.KeyVault.Keys.ReleaseKeyOptions" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="options">
          <see cref="T:Azure.Security.KeyVault.Keys.ReleaseKeyOptions" /> containing the name, attestation assertion for the target, and additional options to release a key.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Releases a key.
            </summary>
        <returns>The key release result containing the released key.</returns>
        <remarks>
            The key must be exportable.
            This operation requires the keys/release permission.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="options" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt; ReleaseKey (string name, string targetAttestationToken, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt; ReleaseKey(string name, string targetAttestationToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.ReleaseKey(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReleaseKey (name As String, targetAttestationToken As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ReleaseKeyResult)" />
      <MemberSignature Language="F#" Value="abstract member ReleaseKey : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;&#xA;override this.ReleaseKey : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;" Usage="keyClient.ReleaseKey (name, targetAttestationToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="targetAttestationToken" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="name">The name of the key to release.</param>
        <param name="targetAttestationToken">The attestation assertion for the target of the key release.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Releases the latest version of a key.
            </summary>
        <returns>The key release result containing the released key.</returns>
        <remarks>
            The key must be exportable.
            This operation requires the keys/release permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> or <paramref name="targetAttestationToken" /> contains an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> or <paramref name="targetAttestationToken" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt; ReleaseKey (string name, string targetAttestationToken, Azure.Security.KeyVault.Keys.ReleaseKeyOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt; ReleaseKey(string name, string targetAttestationToken, class Azure.Security.KeyVault.Keys.ReleaseKeyOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.ReleaseKey(System.String,System.String,Azure.Security.KeyVault.Keys.ReleaseKeyOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReleaseKey (name As String, targetAttestationToken As String, Optional options As ReleaseKeyOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ReleaseKeyResult)" />
      <MemberSignature Language="F#" Value="abstract member ReleaseKey : string * string * Azure.Security.KeyVault.Keys.ReleaseKeyOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;&#xA;override this.ReleaseKey : string * string * Azure.Security.KeyVault.Keys.ReleaseKeyOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;" Usage="keyClient.ReleaseKey (name, targetAttestationToken, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="targetAttestationToken" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="Azure.Security.KeyVault.Keys.ReleaseKeyOptions" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name">The name of the key to release.</param>
        <param name="targetAttestationToken">The attestation assertion for the target of the key release.</param>
        <param name="options">Optional <see cref="T:Azure.Security.KeyVault.Keys.ReleaseKeyOptions" /> containing additional options to release a key.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Releases the latest version of a key.
            </summary>
        <returns>The key release result containing the released key.</returns>
        <remarks>
            The key must be exportable.
            This operation requires the keys/release permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> or <paramref name="targetAttestationToken" /> contains an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> or <paramref name="targetAttestationToken" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt; ReleaseKey (string name, string version, string targetAttestationToken, Azure.Security.KeyVault.Keys.ReleaseKeyOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt; ReleaseKey(string name, string version, string targetAttestationToken, class Azure.Security.KeyVault.Keys.ReleaseKeyOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.ReleaseKey(System.String,System.String,System.String,Azure.Security.KeyVault.Keys.ReleaseKeyOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReleaseKey (name As String, version As String, targetAttestationToken As String, Optional options As ReleaseKeyOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ReleaseKeyResult)" />
      <MemberSignature Language="F#" Value="abstract member ReleaseKey : string * string * string * Azure.Security.KeyVault.Keys.ReleaseKeyOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;&#xA;override this.ReleaseKey : string * string * string * Azure.Security.KeyVault.Keys.ReleaseKeyOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;" Usage="keyClient.ReleaseKey (name, version, targetAttestationToken, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="version" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="targetAttestationToken" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="Azure.Security.KeyVault.Keys.ReleaseKeyOptions" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="4" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name">The name of the key to release.</param>
        <param name="version">Optional version of the key to release.</param>
        <param name="targetAttestationToken">The attestation assertion for the target of the key release.</param>
        <param name="options">Optional <see cref="T:Azure.Security.KeyVault.Keys.ReleaseKeyOptions" /> containing additional options to release a key.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Releases a key.
            </summary>
        <returns>The key release result containing the released key.</returns>
        <remarks>
            The key must be exportable.
            This operation requires the keys/release permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> or <paramref name="targetAttestationToken" /> contains an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> or <paramref name="targetAttestationToken" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;&gt; ReleaseKeyAsync (Azure.Security.KeyVault.Keys.ReleaseKeyOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;&gt; ReleaseKeyAsync(class Azure.Security.KeyVault.Keys.ReleaseKeyOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.ReleaseKeyAsync(Azure.Security.KeyVault.Keys.ReleaseKeyOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReleaseKeyAsync (options As ReleaseKeyOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ReleaseKeyResult))" />
      <MemberSignature Language="F#" Value="abstract member ReleaseKeyAsync : Azure.Security.KeyVault.Keys.ReleaseKeyOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;&gt;&#xA;override this.ReleaseKeyAsync : Azure.Security.KeyVault.Keys.ReleaseKeyOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;&gt;" Usage="keyClient.ReleaseKeyAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Security.KeyVault.Keys.ReleaseKeyOptions" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="options">
          <see cref="T:Azure.Security.KeyVault.Keys.ReleaseKeyOptions" /> containing the name, attestation assertion for the target, and additional options to release a key.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Releases a key.
            </summary>
        <returns>The key release result containing the released key.</returns>
        <remarks>
            The key must be exportable.
            This operation requires the keys/release permission.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="options" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;&gt; ReleaseKeyAsync (string name, string targetAttestationToken, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;&gt; ReleaseKeyAsync(string name, string targetAttestationToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.ReleaseKeyAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReleaseKeyAsync (name As String, targetAttestationToken As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ReleaseKeyResult))" />
      <MemberSignature Language="F#" Value="abstract member ReleaseKeyAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;&gt;&#xA;override this.ReleaseKeyAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;&gt;" Usage="keyClient.ReleaseKeyAsync (name, targetAttestationToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="targetAttestationToken" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="name">The name of the key to release.</param>
        <param name="targetAttestationToken">The attestation assertion for the target of the key release.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Releases the latest version of a key.
            </summary>
        <returns>The key release result containing the released key.</returns>
        <remarks>
            The key must be exportable.
            This operation requires the keys/release permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> or <paramref name="targetAttestationToken" /> contains an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> or <paramref name="targetAttestationToken" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;&gt; ReleaseKeyAsync (string name, string targetAttestationToken, Azure.Security.KeyVault.Keys.ReleaseKeyOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;&gt; ReleaseKeyAsync(string name, string targetAttestationToken, class Azure.Security.KeyVault.Keys.ReleaseKeyOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.ReleaseKeyAsync(System.String,System.String,Azure.Security.KeyVault.Keys.ReleaseKeyOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReleaseKeyAsync (name As String, targetAttestationToken As String, Optional options As ReleaseKeyOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ReleaseKeyResult))" />
      <MemberSignature Language="F#" Value="abstract member ReleaseKeyAsync : string * string * Azure.Security.KeyVault.Keys.ReleaseKeyOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;&gt;&#xA;override this.ReleaseKeyAsync : string * string * Azure.Security.KeyVault.Keys.ReleaseKeyOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;&gt;" Usage="keyClient.ReleaseKeyAsync (name, targetAttestationToken, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="targetAttestationToken" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="Azure.Security.KeyVault.Keys.ReleaseKeyOptions" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name">The name of the key to release.</param>
        <param name="targetAttestationToken">The attestation assertion for the target of the key release.</param>
        <param name="options">Optional <see cref="T:Azure.Security.KeyVault.Keys.ReleaseKeyOptions" /> containing additional options to release a key.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Releases the latest version of a key.
            </summary>
        <returns>The key release result containing the released key.</returns>
        <remarks>
            The key must be exportable.
            This operation requires the keys/release permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> or <paramref name="targetAttestationToken" /> contains an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> or <paramref name="targetAttestationToken" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;&gt; ReleaseKeyAsync (string name, string version, string targetAttestationToken, Azure.Security.KeyVault.Keys.ReleaseKeyOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;&gt; ReleaseKeyAsync(string name, string version, string targetAttestationToken, class Azure.Security.KeyVault.Keys.ReleaseKeyOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.ReleaseKeyAsync(System.String,System.String,System.String,Azure.Security.KeyVault.Keys.ReleaseKeyOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReleaseKeyAsync (name As String, version As String, targetAttestationToken As String, Optional options As ReleaseKeyOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ReleaseKeyResult))" />
      <MemberSignature Language="F#" Value="abstract member ReleaseKeyAsync : string * string * string * Azure.Security.KeyVault.Keys.ReleaseKeyOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;&gt;&#xA;override this.ReleaseKeyAsync : string * string * string * Azure.Security.KeyVault.Keys.ReleaseKeyOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;&gt;" Usage="keyClient.ReleaseKeyAsync (name, version, targetAttestationToken, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.ReleaseKeyResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="version" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="targetAttestationToken" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="Azure.Security.KeyVault.Keys.ReleaseKeyOptions" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="4" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name">The name of the key to release.</param>
        <param name="version">Optional version of the key to release.</param>
        <param name="targetAttestationToken">The attestation assertion for the target of the key release.</param>
        <param name="options">Optional <see cref="T:Azure.Security.KeyVault.Keys.ReleaseKeyOptions" /> containing additional options to release a key.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Releases a key.
            </summary>
        <returns>The key release result containing the released key.</returns>
        <remarks>
            The key must be exportable.
            This operation requires the keys/release permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> or <paramref name="targetAttestationToken" /> contains an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> or <paramref name="targetAttestationToken" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="RestoreKeyBackup">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt; RestoreKeyBackup (byte[] backup, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.KeyVaultKey&gt; RestoreKeyBackup(unsigned int8[] backup, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.RestoreKeyBackup(System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RestoreKeyBackup (backup As Byte(), Optional cancellationToken As CancellationToken = Nothing) As Response(Of KeyVaultKey)" />
      <MemberSignature Language="F#" Value="abstract member RestoreKeyBackup : byte[] * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&#xA;override this.RestoreKeyBackup : byte[] * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;" Usage="keyClient.RestoreKeyBackup (backup, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backup" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="backup">The backup blob associated with a key.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Restores a backed up key to a vault.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Imports a previously backed up key into Azure Key Vault, restoring the key,
            its key identifier, attributes, and access control policies. The RESTORE
            operation may be used to import a previously backed up key. Individual
            versions of a key cannot be restored. The key is restored in its entirety
            with the same key name as it had when it was backed up. If the key name is
            not available in the target Key Vault, the RESTORE operation will be
            rejected. While the key name is retained during restore, the final key
            identifier will change if the key is restored to a different vault. Restore
            will restore all versions and preserve version identifiers. The RESTORE
            operation is subject to security constraints: The target Key Vault must be
            owned by the same Microsoft Azure Subscription as the source Key Vault The
            user must have RESTORE permission in the target Key Vault. This operation
            requires the keys/restore permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="backup" /> is an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="backup" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="RestoreKeyBackupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt; RestoreKeyBackupAsync (byte[] backup, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt; RestoreKeyBackupAsync(unsigned int8[] backup, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.RestoreKeyBackupAsync(System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RestoreKeyBackupAsync (backup As Byte(), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of KeyVaultKey))" />
      <MemberSignature Language="F#" Value="abstract member RestoreKeyBackupAsync : byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt;&#xA;override this.RestoreKeyBackupAsync : byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt;" Usage="keyClient.RestoreKeyBackupAsync (backup, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backup" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="backup">The backup blob associated with a key.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Restores a backed up key to a vault.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Imports a previously backed up key into Azure Key Vault, restoring the key,
            its key identifier, attributes, and access control policies. The RESTORE
            operation may be used to import a previously backed up key. Individual
            versions of a key cannot be restored. The key is restored in its entirety
            with the same key name as it had when it was backed up. If the key name is
            not available in the target Key Vault, the RESTORE operation will be
            rejected. While the key name is retained during restore, the final key
            identifier will change if the key is restored to a different vault. Restore
            will restore all versions and preserve version identifiers. The RESTORE
            operation is subject to security constraints: The target Key Vault must be
            owned by the same Microsoft Azure Subscription as the source Key Vault The
            user must have RESTORE permission in the target Key Vault. This operation
            requires the keys/restore permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="backup" /> is an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="backup" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="RotateKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt; RotateKey (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.KeyVaultKey&gt; RotateKey(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.RotateKey(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RotateKey (name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of KeyVaultKey)" />
      <MemberSignature Language="F#" Value="abstract member RotateKey : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&#xA;override this.RotateKey : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;" Usage="keyClient.RotateKey (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of key to be rotated. The system will generate a new version in the specified key.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates a new key version in Key Vault, stores it, then returns the new <see cref="T:Azure.Security.KeyVault.Keys.KeyVaultKey" />.
            </summary>
        <returns>A new version of the rotate <see cref="T:Azure.Security.KeyVault.Keys.KeyVaultKey" />.</returns>
        <remarks>
            The operation will rotate the key based on the key policy. It requires the keys/rotate permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> contains an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="RotateKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt; RotateKeyAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt; RotateKeyAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.RotateKeyAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RotateKeyAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of KeyVaultKey))" />
      <MemberSignature Language="F#" Value="abstract member RotateKeyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt;&#xA;override this.RotateKeyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt;" Usage="keyClient.RotateKeyAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of key to be rotated. The system will generate a new version in the specified key.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates a new key version in Key Vault, stores it, then returns the new <see cref="T:Azure.Security.KeyVault.Keys.KeyVaultKey" />.
            </summary>
        <returns>A new version of the rotate <see cref="T:Azure.Security.KeyVault.Keys.KeyVaultKey" />.</returns>
        <remarks>
            The operation will rotate the key based on the key policy. It requires the keys/rotate permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> contains an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="StartDeleteKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.KeyVault.Keys.DeleteKeyOperation StartDeleteKey (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.KeyVault.Keys.DeleteKeyOperation StartDeleteKey(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.StartDeleteKey(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDeleteKey (name As String, Optional cancellationToken As CancellationToken = Nothing) As DeleteKeyOperation" />
      <MemberSignature Language="F#" Value="abstract member StartDeleteKey : string * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.DeleteKeyOperation&#xA;override this.StartDeleteKey : string * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.DeleteKeyOperation" Usage="keyClient.StartDeleteKey (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.DeleteKeyOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the key.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Deletes a key of any type from storage in Azure Key Vault.
            </summary>
        <returns>
            A <see cref="T:Azure.Security.KeyVault.Keys.DeleteKeyOperation" /> to wait on this long-running operation.
            If the Key Vault is soft delete-enabled, you only need to wait for the operation to complete if you need to recover or purge the key;
            otherwise, the key is deleted automatically on the <see cref="P:Azure.Security.KeyVault.Keys.DeletedKey.ScheduledPurgeDate" />.
            </returns>
        <remarks>
            The delete key operation cannot be used to remove individual versions of a
            key. This operation removes the cryptographic material associated with the
            key, which means the key is not usable for Sign/Verify, Wrap/Unwrap or
            Encrypt/Decrypt operations. This operation requires the keys/delete
            permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="StartDeleteKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.DeleteKeyOperation&gt; StartDeleteKeyAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.KeyVault.Keys.DeleteKeyOperation&gt; StartDeleteKeyAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.StartDeleteKeyAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDeleteKeyAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DeleteKeyOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartDeleteKeyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.DeleteKeyOperation&gt;&#xA;override this.StartDeleteKeyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.DeleteKeyOperation&gt;" Usage="keyClient.StartDeleteKeyAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.DeleteKeyOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the key.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Deletes a key of any type from storage in Azure Key Vault.
            </summary>
        <returns>
            A <see cref="T:Azure.Security.KeyVault.Keys.DeleteKeyOperation" /> to wait on this long-running operation.
            If the Key Vault is soft delete-enabled, you only need to wait for the operation to complete if you need to recover or purge the key;
            otherwise, the key is deleted automatically on the <see cref="P:Azure.Security.KeyVault.Keys.DeletedKey.ScheduledPurgeDate" />.
            </returns>
        <remarks>
            The delete key operation cannot be used to remove individual versions of a
            key. This operation removes the cryptographic material associated with the
            key, which means the key is not usable for Sign/Verify, Wrap/Unwrap or
            Encrypt/Decrypt operations. This operation requires the keys/delete
            permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="StartRecoverDeletedKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.KeyVault.Keys.RecoverDeletedKeyOperation StartRecoverDeletedKey (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.KeyVault.Keys.RecoverDeletedKeyOperation StartRecoverDeletedKey(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.StartRecoverDeletedKey(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRecoverDeletedKey (name As String, Optional cancellationToken As CancellationToken = Nothing) As RecoverDeletedKeyOperation" />
      <MemberSignature Language="F#" Value="abstract member StartRecoverDeletedKey : string * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.RecoverDeletedKeyOperation&#xA;override this.StartRecoverDeletedKey : string * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.RecoverDeletedKeyOperation" Usage="keyClient.StartRecoverDeletedKey (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.RecoverDeletedKeyOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the key.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Recovers the deleted key to its latest version.
            </summary>
        <returns>A <see cref="T:Azure.Security.KeyVault.Keys.RecoverDeletedKeyOperation" /> to wait on this long-running operation.</returns>
        <remarks>
            The Recover Deleted Key operation is applicable for deleted keys in
            soft-delete enabled vaults. It recovers the deleted key back to its latest
            version under /keys. An attempt to recover an non-deleted key will return
            an error. Consider this the inverse of the delete operation on soft-delete
            enabled vaults. This operation requires the keys/recover permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="StartRecoverDeletedKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.RecoverDeletedKeyOperation&gt; StartRecoverDeletedKeyAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.KeyVault.Keys.RecoverDeletedKeyOperation&gt; StartRecoverDeletedKeyAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.StartRecoverDeletedKeyAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRecoverDeletedKeyAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of RecoverDeletedKeyOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartRecoverDeletedKeyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.RecoverDeletedKeyOperation&gt;&#xA;override this.StartRecoverDeletedKeyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.RecoverDeletedKeyOperation&gt;" Usage="keyClient.StartRecoverDeletedKeyAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.RecoverDeletedKeyOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the key.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Recovers the deleted key to its latest version.
            </summary>
        <returns>A <see cref="T:Azure.Security.KeyVault.Keys.RecoverDeletedKeyOperation" /> to wait on this long-running operation.</returns>
        <remarks>
            The Recover Deleted Key operation is applicable for deleted keys in
            soft-delete enabled vaults. It recovers the deleted key back to its latest
            version under /keys. An attempt to recover an non-deleted key will return
            an error. Consider this the inverse of the delete operation on soft-delete
            enabled vaults. This operation requires the keys/recover permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateKeyProperties">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt; UpdateKeyProperties (Azure.Security.KeyVault.Keys.KeyProperties properties, System.Collections.Generic.IEnumerable&lt;Azure.Security.KeyVault.Keys.KeyOperation&gt; keyOperations = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.KeyVaultKey&gt; UpdateKeyProperties(class Azure.Security.KeyVault.Keys.KeyProperties properties, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.Security.KeyVault.Keys.KeyOperation&gt; keyOperations, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.UpdateKeyProperties(Azure.Security.KeyVault.Keys.KeyProperties,System.Collections.Generic.IEnumerable{Azure.Security.KeyVault.Keys.KeyOperation},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateKeyProperties (properties As KeyProperties, Optional keyOperations As IEnumerable(Of KeyOperation) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of KeyVaultKey)" />
      <MemberSignature Language="F#" Value="abstract member UpdateKeyProperties : Azure.Security.KeyVault.Keys.KeyProperties * seq&lt;Azure.Security.KeyVault.Keys.KeyOperation&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&#xA;override this.UpdateKeyProperties : Azure.Security.KeyVault.Keys.KeyProperties * seq&lt;Azure.Security.KeyVault.Keys.KeyOperation&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;" Usage="keyClient.UpdateKeyProperties (properties, keyOperations, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="Azure.Security.KeyVault.Keys.KeyProperties" />
        <Parameter Name="keyOperations" Type="System.Collections.Generic.IEnumerable&lt;Azure.Security.KeyVault.Keys.KeyOperation&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="properties">The <see cref="T:Azure.Security.KeyVault.Keys.KeyProperties" /> object with updated properties.</param>
        <param name="keyOperations">Optional list of supported <see cref="T:Azure.Security.KeyVault.Keys.KeyOperation" />. If null, no changes will be made to existing key operations.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            The update key operation changes specified attributes of a stored key and
            can be applied to any key type and key version stored in Azure Key Vault.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            In order to perform this operation, the key must already exist in the Key
            Vault. Note: The cryptographic material of a key itself cannot be changed.
            This operation requires the keys/update permission.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="properties" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateKeyPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt; UpdateKeyPropertiesAsync (Azure.Security.KeyVault.Keys.KeyProperties properties, System.Collections.Generic.IEnumerable&lt;Azure.Security.KeyVault.Keys.KeyOperation&gt; keyOperations = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt; UpdateKeyPropertiesAsync(class Azure.Security.KeyVault.Keys.KeyProperties properties, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.Security.KeyVault.Keys.KeyOperation&gt; keyOperations, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.UpdateKeyPropertiesAsync(Azure.Security.KeyVault.Keys.KeyProperties,System.Collections.Generic.IEnumerable{Azure.Security.KeyVault.Keys.KeyOperation},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateKeyPropertiesAsync (properties As KeyProperties, Optional keyOperations As IEnumerable(Of KeyOperation) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of KeyVaultKey))" />
      <MemberSignature Language="F#" Value="abstract member UpdateKeyPropertiesAsync : Azure.Security.KeyVault.Keys.KeyProperties * seq&lt;Azure.Security.KeyVault.Keys.KeyOperation&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt;&#xA;override this.UpdateKeyPropertiesAsync : Azure.Security.KeyVault.Keys.KeyProperties * seq&lt;Azure.Security.KeyVault.Keys.KeyOperation&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt;" Usage="keyClient.UpdateKeyPropertiesAsync (properties, keyOperations, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyVaultKey&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="Azure.Security.KeyVault.Keys.KeyProperties" />
        <Parameter Name="keyOperations" Type="System.Collections.Generic.IEnumerable&lt;Azure.Security.KeyVault.Keys.KeyOperation&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="properties">The <see cref="T:Azure.Security.KeyVault.Keys.KeyProperties" /> object with updated properties.</param>
        <param name="keyOperations">Optional list of supported <see cref="T:Azure.Security.KeyVault.Keys.KeyOperation" />. If null, no changes will be made to existing key operations.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            The update key operation changes specified attributes of a stored key and
            can be applied to any key type and key version stored in Azure Key Vault.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            In order to perform this operation, the key must already exist in the Key
            Vault. Note: The cryptographic material of a key itself cannot be changed.
            This operation requires the keys/update permission.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="properties" /> or <paramref name="keyOperations" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateKeyRotationPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt; UpdateKeyRotationPolicy (string keyName, Azure.Security.KeyVault.Keys.KeyRotationPolicy policy, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt; UpdateKeyRotationPolicy(string keyName, class Azure.Security.KeyVault.Keys.KeyRotationPolicy policy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.UpdateKeyRotationPolicy(System.String,Azure.Security.KeyVault.Keys.KeyRotationPolicy,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateKeyRotationPolicy (keyName As String, policy As KeyRotationPolicy, Optional cancellationToken As CancellationToken = Nothing) As Response(Of KeyRotationPolicy)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member UpdateKeyRotationPolicy : string * Azure.Security.KeyVault.Keys.KeyRotationPolicy * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt;&#xA;override this.UpdateKeyRotationPolicy : string * Azure.Security.KeyVault.Keys.KeyRotationPolicy * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt;" Usage="keyClient.UpdateKeyRotationPolicy (keyName, policy, cancellationToken)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt; UpdateKeyRotationPolicy (string name, Azure.Security.KeyVault.Keys.KeyRotationPolicy policy, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt; UpdateKeyRotationPolicy(string name, class Azure.Security.KeyVault.Keys.KeyRotationPolicy policy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateKeyRotationPolicy (name As String, policy As KeyRotationPolicy, Optional cancellationToken As CancellationToken = Nothing) As Response(Of KeyRotationPolicy)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member UpdateKeyRotationPolicy : string * Azure.Security.KeyVault.Keys.KeyRotationPolicy * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt;&#xA;override this.UpdateKeyRotationPolicy : string * Azure.Security.KeyVault.Keys.KeyRotationPolicy * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt;" Usage="keyClient.UpdateKeyRotationPolicy (name, policy, cancellationToken)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="policy" Type="Azure.Security.KeyVault.Keys.KeyRotationPolicy" Index="1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" />
      </Parameters>
      <Docs>
        <param name="keyName">The name of the key.</param>
        <param name="name">The name of the key.</param>
        <param name="policy">The <see cref="T:Azure.Security.KeyVault.Keys.KeyRotationPolicy" /> to update.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Updates the <see cref="T:Azure.Security.KeyVault.Keys.KeyRotationPolicy" /> for the specified key in Key Vault.
            </summary>
        <returns>A <see cref="T:Azure.Security.KeyVault.Keys.KeyRotationPolicy" /> for the specified key.</returns>
        <remarks>
            This operation requires the keys/update permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> contains an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyName" /> or <paramref name="policy" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateKeyRotationPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt;&gt; UpdateKeyRotationPolicyAsync (string keyName, Azure.Security.KeyVault.Keys.KeyRotationPolicy policy, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt;&gt; UpdateKeyRotationPolicyAsync(string keyName, class Azure.Security.KeyVault.Keys.KeyRotationPolicy policy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.KeyClient.UpdateKeyRotationPolicyAsync(System.String,Azure.Security.KeyVault.Keys.KeyRotationPolicy,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateKeyRotationPolicyAsync (keyName As String, policy As KeyRotationPolicy, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of KeyRotationPolicy))" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member UpdateKeyRotationPolicyAsync : string * Azure.Security.KeyVault.Keys.KeyRotationPolicy * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt;&gt;&#xA;override this.UpdateKeyRotationPolicyAsync : string * Azure.Security.KeyVault.Keys.KeyRotationPolicy * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt;&gt;" Usage="keyClient.UpdateKeyRotationPolicyAsync (keyName, policy, cancellationToken)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt;&gt; UpdateKeyRotationPolicyAsync (string name, Azure.Security.KeyVault.Keys.KeyRotationPolicy policy, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt;&gt; UpdateKeyRotationPolicyAsync(string name, class Azure.Security.KeyVault.Keys.KeyRotationPolicy policy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateKeyRotationPolicyAsync (name As String, policy As KeyRotationPolicy, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of KeyRotationPolicy))" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member UpdateKeyRotationPolicyAsync : string * Azure.Security.KeyVault.Keys.KeyRotationPolicy * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt;&gt;&#xA;override this.UpdateKeyRotationPolicyAsync : string * Azure.Security.KeyVault.Keys.KeyRotationPolicy * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt;&gt;" Usage="keyClient.UpdateKeyRotationPolicyAsync (name, policy, cancellationToken)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Keys.KeyRotationPolicy&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="policy" Type="Azure.Security.KeyVault.Keys.KeyRotationPolicy" Index="1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" />
      </Parameters>
      <Docs>
        <param name="keyName">The name of the key.</param>
        <param name="name">The name of the key.</param>
        <param name="policy">The <see cref="T:Azure.Security.KeyVault.Keys.KeyRotationPolicy" /> to update.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Updates the <see cref="T:Azure.Security.KeyVault.Keys.KeyRotationPolicy" /> for the specified key in Key Vault.
            </summary>
        <returns>A <see cref="T:Azure.Security.KeyVault.Keys.KeyRotationPolicy" /> for the specified key.</returns>
        <remarks>
            This operation requires the keys/update permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> contains an empty string.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyName" /> or <paramref name="policy" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="VaultUri">
      <MemberSignature Language="C#" Value="public virtual Uri VaultUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri VaultUri" />
      <MemberSignature Language="DocId" Value="P:Azure.Security.KeyVault.Keys.KeyClient.VaultUri" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property VaultUri As Uri" />
      <MemberSignature Language="F#" Value="member this.VaultUri : Uri" Usage="Azure.Security.KeyVault.Keys.KeyClient.VaultUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:System.Uri" /> of the vault used to create this instance of the <see cref="T:Azure.Security.KeyVault.Keys.KeyClient" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
