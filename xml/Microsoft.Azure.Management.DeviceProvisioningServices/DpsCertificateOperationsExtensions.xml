<Type Name="DpsCertificateOperationsExtensions" FullName="Microsoft.Azure.Management.DeviceProvisioningServices.DpsCertificateOperationsExtensions">
  <TypeSignature Language="C#" Value="public static class DpsCertificateOperationsExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DpsCertificateOperationsExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.DeviceProvisioningServices.DpsCertificateOperationsExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DpsCertificateOperationsExtensions" />
  <TypeSignature Language="F#" Value="type DpsCertificateOperationsExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.DeviceProvisioningServices</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for DpsCertificateOperations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateOrUpdate">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateResponse CreateOrUpdate (this Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations operations, string resourceGroupName, string provisioningServiceName, string certificateName, string ifMatch = default, Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateResponse CreateOrUpdate(class Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations operations, string resourceGroupName, string provisioningServiceName, string certificateName, string ifMatch, class Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DeviceProvisioningServices.DpsCertificateOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateProperties)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateOrUpdate (operations As IDpsCertificateOperations, resourceGroupName As String, provisioningServiceName As String, certificateName As String, Optional ifMatch As String = Nothing, Optional properties As CertificateProperties = Nothing) As CertificateResponse" />
      <MemberSignature Language="F#" Value="static member CreateOrUpdate : Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations * string * string * string * string * Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateProperties -&gt; Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateResponse" Usage="Microsoft.Azure.Management.DeviceProvisioningServices.DpsCertificateOperationsExtensions.CreateOrUpdate (operations, resourceGroupName, provisioningServiceName, certificateName, ifMatch, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DeviceProvisioningServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="provisioningServiceName" Type="System.String" />
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="properties" Type="Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateProperties" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            Resource group identifier.
            </param>
        <param name="provisioningServiceName">
            The name of the provisioning service.
            </param>
        <param name="certificateName">
            The name of the certificate create or update.
            </param>
        <param name="ifMatch">
            ETag of the certificate. This is required to update an existing
            certificate, and ignored while creating a brand new certificate.
            </param>
        <param name="properties">
            properties of a certificate
            </param>
        <summary>
            Upload the certificate to the provisioning service.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Add new certificate or update an existing certificate.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateResponse&gt; CreateOrUpdateAsync (this Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations operations, string resourceGroupName, string provisioningServiceName, string certificateName, string ifMatch = default, Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateProperties properties = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateResponse&gt; CreateOrUpdateAsync(class Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations operations, string resourceGroupName, string provisioningServiceName, string certificateName, string ifMatch, class Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateProperties properties, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DeviceProvisioningServices.DpsCertificateOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateProperties,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateOrUpdateAsync (operations As IDpsCertificateOperations, resourceGroupName As String, provisioningServiceName As String, certificateName As String, Optional ifMatch As String = Nothing, Optional properties As CertificateProperties = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of CertificateResponse)" />
      <MemberSignature Language="F#" Value="static member CreateOrUpdateAsync : Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations * string * string * string * string * Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateProperties * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateResponse&gt;" Usage="Microsoft.Azure.Management.DeviceProvisioningServices.DpsCertificateOperationsExtensions.CreateOrUpdateAsync (operations, resourceGroupName, provisioningServiceName, certificateName, ifMatch, properties, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DeviceProvisioningServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="provisioningServiceName" Type="System.String" />
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="properties" Type="Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateProperties" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            Resource group identifier.
            </param>
        <param name="provisioningServiceName">
            The name of the provisioning service.
            </param>
        <param name="certificateName">
            The name of the certificate create or update.
            </param>
        <param name="ifMatch">
            ETag of the certificate. This is required to update an existing
            certificate, and ignored while creating a brand new certificate.
            </param>
        <param name="properties">
            properties of a certificate
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Upload the certificate to the provisioning service.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Add new certificate or update an existing certificate.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static void Delete (this Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations operations, string resourceGroupName, string ifMatch, string provisioningServiceName, string certificateName, string certificatename = default, byte[] certificaterawBytes = default, bool? certificateisVerified = default, string certificatepurpose = default, DateTime? certificatecreated = default, DateTime? certificatelastUpdated = default, bool? certificatehasPrivateKey = default, string certificatenonce = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Delete(class Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations operations, string resourceGroupName, string ifMatch, string provisioningServiceName, string certificateName, string certificatename, unsigned int8[] certificaterawBytes, valuetype System.Nullable`1&lt;bool&gt; certificateisVerified, string certificatepurpose, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; certificatecreated, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; certificatelastUpdated, valuetype System.Nullable`1&lt;bool&gt; certificatehasPrivateKey, string certificatenonce) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DeviceProvisioningServices.DpsCertificateOperationsExtensions.Delete(Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations,System.String,System.String,System.String,System.String,System.String,System.Byte[],System.Nullable{System.Boolean},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.String)" />
      <MemberSignature Language="F#" Value="static member Delete : Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations * string * string * string * string * string * byte[] * Nullable&lt;bool&gt; * string * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; * Nullable&lt;bool&gt; * string -&gt; unit" Usage="Microsoft.Azure.Management.DeviceProvisioningServices.DpsCertificateOperationsExtensions.Delete (operations, resourceGroupName, ifMatch, provisioningServiceName, certificateName, certificatename, certificaterawBytes, certificateisVerified, certificatepurpose, certificatecreated, certificatelastUpdated, certificatehasPrivateKey, certificatenonce)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DeviceProvisioningServices</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="provisioningServiceName" Type="System.String" />
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="certificatename" Type="System.String" />
        <Parameter Name="certificaterawBytes" Type="System.Byte[]" />
        <Parameter Name="certificateisVerified" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="certificatepurpose" Type="System.String" />
        <Parameter Name="certificatecreated" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="certificatelastUpdated" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="certificatehasPrivateKey" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="certificatenonce" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            Resource group identifier.
            </param>
        <param name="ifMatch">
            ETag of the certificate
            </param>
        <param name="provisioningServiceName">
            The name of the provisioning service.
            </param>
        <param name="certificateName">
            This is a mandatory field, and is the logical name of the certificate that
            the provisioning service will access by.
            </param>
        <param name="certificatename">
            This is optional, and it is the Common Name of the certificate.
            </param>
        <param name="certificaterawBytes">
            Raw data within the certificate.
            </param>
        <param name="certificateisVerified">
            Indicates if certificate has been verified by owner of the private key.
            </param>
        <param name="certificatepurpose">
            A description that mentions the purpose of the certificate. Possible values
            include: 'clientAuthentication', 'serverAuthentication'
            </param>
        <param name="certificatecreated">
            Time the certificate is created.
            </param>
        <param name="certificatelastUpdated">
            Time the certificate is last updated.
            </param>
        <param name="certificatehasPrivateKey">
            Indicates if the certificate contains a private key.
            </param>
        <param name="certificatenonce">
            Random number generated to indicate Proof of Possession.
            </param>
        <summary>
            Delete the Provisioning Service Certificate.
            </summary>
        <remarks>
            Deletes the specified certificate associated with the Provisioning Service
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task DeleteAsync (this Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations operations, string resourceGroupName, string ifMatch, string provisioningServiceName, string certificateName, string certificatename = default, byte[] certificaterawBytes = default, bool? certificateisVerified = default, string certificatepurpose = default, DateTime? certificatecreated = default, DateTime? certificatelastUpdated = default, bool? certificatehasPrivateKey = default, string certificatenonce = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task DeleteAsync(class Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations operations, string resourceGroupName, string ifMatch, string provisioningServiceName, string certificateName, string certificatename, unsigned int8[] certificaterawBytes, valuetype System.Nullable`1&lt;bool&gt; certificateisVerified, string certificatepurpose, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; certificatecreated, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; certificatelastUpdated, valuetype System.Nullable`1&lt;bool&gt; certificatehasPrivateKey, string certificatenonce, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DeviceProvisioningServices.DpsCertificateOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations,System.String,System.String,System.String,System.String,System.String,System.Byte[],System.Nullable{System.Boolean},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member DeleteAsync : Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations * string * string * string * string * string * byte[] * Nullable&lt;bool&gt; * string * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; * Nullable&lt;bool&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.Management.DeviceProvisioningServices.DpsCertificateOperationsExtensions.DeleteAsync (operations, resourceGroupName, ifMatch, provisioningServiceName, certificateName, certificatename, certificaterawBytes, certificateisVerified, certificatepurpose, certificatecreated, certificatelastUpdated, certificatehasPrivateKey, certificatenonce, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DeviceProvisioningServices</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="provisioningServiceName" Type="System.String" />
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="certificatename" Type="System.String" />
        <Parameter Name="certificaterawBytes" Type="System.Byte[]" />
        <Parameter Name="certificateisVerified" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="certificatepurpose" Type="System.String" />
        <Parameter Name="certificatecreated" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="certificatelastUpdated" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="certificatehasPrivateKey" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="certificatenonce" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            Resource group identifier.
            </param>
        <param name="ifMatch">
            ETag of the certificate
            </param>
        <param name="provisioningServiceName">
            The name of the provisioning service.
            </param>
        <param name="certificateName">
            This is a mandatory field, and is the logical name of the certificate that
            the provisioning service will access by.
            </param>
        <param name="certificatename">
            This is optional, and it is the Common Name of the certificate.
            </param>
        <param name="certificaterawBytes">
            Raw data within the certificate.
            </param>
        <param name="certificateisVerified">
            Indicates if certificate has been verified by owner of the private key.
            </param>
        <param name="certificatepurpose">
            A description that mentions the purpose of the certificate. Possible values
            include: 'clientAuthentication', 'serverAuthentication'
            </param>
        <param name="certificatecreated">
            Time the certificate is created.
            </param>
        <param name="certificatelastUpdated">
            Time the certificate is last updated.
            </param>
        <param name="certificatehasPrivateKey">
            Indicates if the certificate contains a private key.
            </param>
        <param name="certificatenonce">
            Random number generated to indicate Proof of Possession.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Delete the Provisioning Service Certificate.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Deletes the specified certificate associated with the Provisioning Service
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateVerificationCode">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Management.DeviceProvisioningServices.Models.VerificationCodeResponse GenerateVerificationCode (this Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations operations, string certificateName, string ifMatch, string resourceGroupName, string provisioningServiceName, string certificatename = default, byte[] certificaterawBytes = default, bool? certificateisVerified = default, string certificatepurpose = default, DateTime? certificatecreated = default, DateTime? certificatelastUpdated = default, bool? certificatehasPrivateKey = default, string certificatenonce = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Management.DeviceProvisioningServices.Models.VerificationCodeResponse GenerateVerificationCode(class Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations operations, string certificateName, string ifMatch, string resourceGroupName, string provisioningServiceName, string certificatename, unsigned int8[] certificaterawBytes, valuetype System.Nullable`1&lt;bool&gt; certificateisVerified, string certificatepurpose, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; certificatecreated, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; certificatelastUpdated, valuetype System.Nullable`1&lt;bool&gt; certificatehasPrivateKey, string certificatenonce) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DeviceProvisioningServices.DpsCertificateOperationsExtensions.GenerateVerificationCode(Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations,System.String,System.String,System.String,System.String,System.String,System.Byte[],System.Nullable{System.Boolean},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.String)" />
      <MemberSignature Language="F#" Value="static member GenerateVerificationCode : Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations * string * string * string * string * string * byte[] * Nullable&lt;bool&gt; * string * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; * Nullable&lt;bool&gt; * string -&gt; Microsoft.Azure.Management.DeviceProvisioningServices.Models.VerificationCodeResponse" Usage="Microsoft.Azure.Management.DeviceProvisioningServices.DpsCertificateOperationsExtensions.GenerateVerificationCode (operations, certificateName, ifMatch, resourceGroupName, provisioningServiceName, certificatename, certificaterawBytes, certificateisVerified, certificatepurpose, certificatecreated, certificatelastUpdated, certificatehasPrivateKey, certificatenonce)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DeviceProvisioningServices</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.DeviceProvisioningServices.Models.VerificationCodeResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations" RefType="this" />
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="provisioningServiceName" Type="System.String" />
        <Parameter Name="certificatename" Type="System.String" />
        <Parameter Name="certificaterawBytes" Type="System.Byte[]" />
        <Parameter Name="certificateisVerified" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="certificatepurpose" Type="System.String" />
        <Parameter Name="certificatecreated" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="certificatelastUpdated" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="certificatehasPrivateKey" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="certificatenonce" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="certificateName">
            The mandatory logical name of the certificate, that the provisioning
            service uses to access.
            </param>
        <param name="ifMatch">
            ETag of the certificate. This is required to update an existing
            certificate, and ignored while creating a brand new certificate.
            </param>
        <param name="resourceGroupName">
            name of resource group.
            </param>
        <param name="provisioningServiceName">
            Name of provisioning service.
            </param>
        <param name="certificatename">
            Common Name for the certificate.
            </param>
        <param name="certificaterawBytes">
            Raw data of certificate.
            </param>
        <param name="certificateisVerified">
            Indicates if the certificate has been verified by owner of the private key.
            </param>
        <param name="certificatepurpose">
            Description mentioning the purpose of the certificate. Possible values
            include: 'clientAuthentication', 'serverAuthentication'
            </param>
        <param name="certificatecreated">
            Certificate creation time.
            </param>
        <param name="certificatelastUpdated">
            Certificate last updated time.
            </param>
        <param name="certificatehasPrivateKey">
            Indicates if the certificate contains private key.
            </param>
        <param name="certificatenonce">
            Random number generated to indicate Proof of Possession.
            </param>
        <summary>
            Generate verification code for Proof of Possession.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateVerificationCodeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DeviceProvisioningServices.Models.VerificationCodeResponse&gt; GenerateVerificationCodeAsync (this Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations operations, string certificateName, string ifMatch, string resourceGroupName, string provisioningServiceName, string certificatename = default, byte[] certificaterawBytes = default, bool? certificateisVerified = default, string certificatepurpose = default, DateTime? certificatecreated = default, DateTime? certificatelastUpdated = default, bool? certificatehasPrivateKey = default, string certificatenonce = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.DeviceProvisioningServices.Models.VerificationCodeResponse&gt; GenerateVerificationCodeAsync(class Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations operations, string certificateName, string ifMatch, string resourceGroupName, string provisioningServiceName, string certificatename, unsigned int8[] certificaterawBytes, valuetype System.Nullable`1&lt;bool&gt; certificateisVerified, string certificatepurpose, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; certificatecreated, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; certificatelastUpdated, valuetype System.Nullable`1&lt;bool&gt; certificatehasPrivateKey, string certificatenonce, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DeviceProvisioningServices.DpsCertificateOperationsExtensions.GenerateVerificationCodeAsync(Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations,System.String,System.String,System.String,System.String,System.String,System.Byte[],System.Nullable{System.Boolean},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member GenerateVerificationCodeAsync : Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations * string * string * string * string * string * byte[] * Nullable&lt;bool&gt; * string * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; * Nullable&lt;bool&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DeviceProvisioningServices.Models.VerificationCodeResponse&gt;" Usage="Microsoft.Azure.Management.DeviceProvisioningServices.DpsCertificateOperationsExtensions.GenerateVerificationCodeAsync (operations, certificateName, ifMatch, resourceGroupName, provisioningServiceName, certificatename, certificaterawBytes, certificateisVerified, certificatepurpose, certificatecreated, certificatelastUpdated, certificatehasPrivateKey, certificatenonce, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DeviceProvisioningServices</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DeviceProvisioningServices.Models.VerificationCodeResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations" RefType="this" />
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="provisioningServiceName" Type="System.String" />
        <Parameter Name="certificatename" Type="System.String" />
        <Parameter Name="certificaterawBytes" Type="System.Byte[]" />
        <Parameter Name="certificateisVerified" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="certificatepurpose" Type="System.String" />
        <Parameter Name="certificatecreated" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="certificatelastUpdated" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="certificatehasPrivateKey" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="certificatenonce" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="certificateName">
            The mandatory logical name of the certificate, that the provisioning
            service uses to access.
            </param>
        <param name="ifMatch">
            ETag of the certificate. This is required to update an existing
            certificate, and ignored while creating a brand new certificate.
            </param>
        <param name="resourceGroupName">
            name of resource group.
            </param>
        <param name="provisioningServiceName">
            Name of provisioning service.
            </param>
        <param name="certificatename">
            Common Name for the certificate.
            </param>
        <param name="certificaterawBytes">
            Raw data of certificate.
            </param>
        <param name="certificateisVerified">
            Indicates if the certificate has been verified by owner of the private key.
            </param>
        <param name="certificatepurpose">
            Description mentioning the purpose of the certificate. Possible values
            include: 'clientAuthentication', 'serverAuthentication'
            </param>
        <param name="certificatecreated">
            Certificate creation time.
            </param>
        <param name="certificatelastUpdated">
            Certificate last updated time.
            </param>
        <param name="certificatehasPrivateKey">
            Indicates if the certificate contains private key.
            </param>
        <param name="certificatenonce">
            Random number generated to indicate Proof of Possession.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Generate verification code for Proof of Possession.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateResponse Get (this Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations operations, string certificateName, string resourceGroupName, string provisioningServiceName, string ifMatch = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateResponse Get(class Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations operations, string certificateName, string resourceGroupName, string provisioningServiceName, string ifMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DeviceProvisioningServices.DpsCertificateOperationsExtensions.Get(Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Get (operations As IDpsCertificateOperations, certificateName As String, resourceGroupName As String, provisioningServiceName As String, Optional ifMatch As String = Nothing) As CertificateResponse" />
      <MemberSignature Language="F#" Value="static member Get : Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations * string * string * string * string -&gt; Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateResponse" Usage="Microsoft.Azure.Management.DeviceProvisioningServices.DpsCertificateOperationsExtensions.Get (operations, certificateName, resourceGroupName, provisioningServiceName, ifMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DeviceProvisioningServices</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations" RefType="this" />
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="provisioningServiceName" Type="System.String" />
        <Parameter Name="ifMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="certificateName">
            Name of the certificate to retrieve.
            </param>
        <param name="resourceGroupName">
            Resource group identifier.
            </param>
        <param name="provisioningServiceName">
            Name of the provisioning service the certificate is associated with.
            </param>
        <param name="ifMatch">
            ETag of the certificate.
            </param>
        <summary>
            Get the certificate from the provisioning service.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateResponse&gt; GetAsync (this Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations operations, string certificateName, string resourceGroupName, string provisioningServiceName, string ifMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateResponse&gt; GetAsync(class Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations operations, string certificateName, string resourceGroupName, string provisioningServiceName, string ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DeviceProvisioningServices.DpsCertificateOperationsExtensions.GetAsync(Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAsync (operations As IDpsCertificateOperations, certificateName As String, resourceGroupName As String, provisioningServiceName As String, Optional ifMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of CertificateResponse)" />
      <MemberSignature Language="F#" Value="static member GetAsync : Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations * string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateResponse&gt;" Usage="Microsoft.Azure.Management.DeviceProvisioningServices.DpsCertificateOperationsExtensions.GetAsync (operations, certificateName, resourceGroupName, provisioningServiceName, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DeviceProvisioningServices</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations" RefType="this" />
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="provisioningServiceName" Type="System.String" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="certificateName">
            Name of the certificate to retrieve.
            </param>
        <param name="resourceGroupName">
            Resource group identifier.
            </param>
        <param name="provisioningServiceName">
            Name of the provisioning service the certificate is associated with.
            </param>
        <param name="ifMatch">
            ETag of the certificate.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Get the certificate from the provisioning service.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateListDescription List (this Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations operations, string resourceGroupName, string provisioningServiceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateListDescription List(class Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations operations, string resourceGroupName, string provisioningServiceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DeviceProvisioningServices.DpsCertificateOperationsExtensions.List(Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function List (operations As IDpsCertificateOperations, resourceGroupName As String, provisioningServiceName As String) As CertificateListDescription" />
      <MemberSignature Language="F#" Value="static member List : Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations * string * string -&gt; Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateListDescription" Usage="Microsoft.Azure.Management.DeviceProvisioningServices.DpsCertificateOperationsExtensions.List (operations, resourceGroupName, provisioningServiceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DeviceProvisioningServices</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateListDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="provisioningServiceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            Name of resource group.
            </param>
        <param name="provisioningServiceName">
            Name of provisioning service to retrieve certificates for.
            </param>
        <summary>
            Get all the certificates tied to the provisioning service.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateListDescription&gt; ListAsync (this Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations operations, string resourceGroupName, string provisioningServiceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateListDescription&gt; ListAsync(class Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations operations, string resourceGroupName, string provisioningServiceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DeviceProvisioningServices.DpsCertificateOperationsExtensions.ListAsync(Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ListAsync (operations As IDpsCertificateOperations, resourceGroupName As String, provisioningServiceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of CertificateListDescription)" />
      <MemberSignature Language="F#" Value="static member ListAsync : Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateListDescription&gt;" Usage="Microsoft.Azure.Management.DeviceProvisioningServices.DpsCertificateOperationsExtensions.ListAsync (operations, resourceGroupName, provisioningServiceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DeviceProvisioningServices</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateListDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="provisioningServiceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            Name of resource group.
            </param>
        <param name="provisioningServiceName">
            Name of provisioning service to retrieve certificates for.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Get all the certificates tied to the provisioning service.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyCertificate">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateResponse VerifyCertificate (this Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations operations, string certificateName, string ifMatch, string resourceGroupName, string provisioningServiceName, string certificatename = default, byte[] certificaterawBytes = default, bool? certificateisVerified = default, string certificatepurpose = default, DateTime? certificatecreated = default, DateTime? certificatelastUpdated = default, bool? certificatehasPrivateKey = default, string certificatenonce = default, string certificate = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateResponse VerifyCertificate(class Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations operations, string certificateName, string ifMatch, string resourceGroupName, string provisioningServiceName, string certificatename, unsigned int8[] certificaterawBytes, valuetype System.Nullable`1&lt;bool&gt; certificateisVerified, string certificatepurpose, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; certificatecreated, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; certificatelastUpdated, valuetype System.Nullable`1&lt;bool&gt; certificatehasPrivateKey, string certificatenonce, string certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DeviceProvisioningServices.DpsCertificateOperationsExtensions.VerifyCertificate(Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations,System.String,System.String,System.String,System.String,System.String,System.Byte[],System.Nullable{System.Boolean},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.String,System.String)" />
      <MemberSignature Language="F#" Value="static member VerifyCertificate : Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations * string * string * string * string * string * byte[] * Nullable&lt;bool&gt; * string * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; * Nullable&lt;bool&gt; * string * string -&gt; Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateResponse" Usage="Microsoft.Azure.Management.DeviceProvisioningServices.DpsCertificateOperationsExtensions.VerifyCertificate (operations, certificateName, ifMatch, resourceGroupName, provisioningServiceName, certificatename, certificaterawBytes, certificateisVerified, certificatepurpose, certificatecreated, certificatelastUpdated, certificatehasPrivateKey, certificatenonce, certificate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DeviceProvisioningServices</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations" RefType="this" />
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="provisioningServiceName" Type="System.String" />
        <Parameter Name="certificatename" Type="System.String" />
        <Parameter Name="certificaterawBytes" Type="System.Byte[]" />
        <Parameter Name="certificateisVerified" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="certificatepurpose" Type="System.String" />
        <Parameter Name="certificatecreated" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="certificatelastUpdated" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="certificatehasPrivateKey" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="certificatenonce" Type="System.String" />
        <Parameter Name="certificate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="certificateName">
            The mandatory logical name of the certificate, that the provisioning
            service uses to access.
            </param>
        <param name="ifMatch">
            ETag of the certificate.
            </param>
        <param name="resourceGroupName">
            Resource group name.
            </param>
        <param name="provisioningServiceName">
            Provisioning service name.
            </param>
        <param name="certificatename">
            Common Name for the certificate.
            </param>
        <param name="certificaterawBytes">
            Raw data of certificate.
            </param>
        <param name="certificateisVerified">
            Indicates if the certificate has been verified by owner of the private key.
            </param>
        <param name="certificatepurpose">
            Describe the purpose of the certificate. Possible values include:
            'clientAuthentication', 'serverAuthentication'
            </param>
        <param name="certificatecreated">
            Certificate creation time.
            </param>
        <param name="certificatelastUpdated">
            Certificate last updated time.
            </param>
        <param name="certificatehasPrivateKey">
            Indicates if the certificate contains private key.
            </param>
        <param name="certificatenonce">
            Random number generated to indicate Proof of Possession.
            </param>
        <param name="certificate">
            base-64 representation of X509 certificate .cer file or just .pem file
            content.
            </param>
        <summary>
            Verify certificate's private key possession.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Verifies the certificate's private key possession by providing the leaf
            cert issued by the verifying pre uploaded certificate.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyCertificateAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateResponse&gt; VerifyCertificateAsync (this Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations operations, string certificateName, string ifMatch, string resourceGroupName, string provisioningServiceName, string certificatename = default, byte[] certificaterawBytes = default, bool? certificateisVerified = default, string certificatepurpose = default, DateTime? certificatecreated = default, DateTime? certificatelastUpdated = default, bool? certificatehasPrivateKey = default, string certificatenonce = default, string certificate = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateResponse&gt; VerifyCertificateAsync(class Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations operations, string certificateName, string ifMatch, string resourceGroupName, string provisioningServiceName, string certificatename, unsigned int8[] certificaterawBytes, valuetype System.Nullable`1&lt;bool&gt; certificateisVerified, string certificatepurpose, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; certificatecreated, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; certificatelastUpdated, valuetype System.Nullable`1&lt;bool&gt; certificatehasPrivateKey, string certificatenonce, string certificate, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DeviceProvisioningServices.DpsCertificateOperationsExtensions.VerifyCertificateAsync(Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations,System.String,System.String,System.String,System.String,System.String,System.Byte[],System.Nullable{System.Boolean},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member VerifyCertificateAsync : Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations * string * string * string * string * string * byte[] * Nullable&lt;bool&gt; * string * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; * Nullable&lt;bool&gt; * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateResponse&gt;" Usage="Microsoft.Azure.Management.DeviceProvisioningServices.DpsCertificateOperationsExtensions.VerifyCertificateAsync (operations, certificateName, ifMatch, resourceGroupName, provisioningServiceName, certificatename, certificaterawBytes, certificateisVerified, certificatepurpose, certificatecreated, certificatelastUpdated, certificatehasPrivateKey, certificatenonce, certificate, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DeviceProvisioningServices</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.DeviceProvisioningServices.Models.CertificateResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.DeviceProvisioningServices.IDpsCertificateOperations" RefType="this" />
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="provisioningServiceName" Type="System.String" />
        <Parameter Name="certificatename" Type="System.String" />
        <Parameter Name="certificaterawBytes" Type="System.Byte[]" />
        <Parameter Name="certificateisVerified" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="certificatepurpose" Type="System.String" />
        <Parameter Name="certificatecreated" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="certificatelastUpdated" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="certificatehasPrivateKey" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="certificatenonce" Type="System.String" />
        <Parameter Name="certificate" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="certificateName">
            The mandatory logical name of the certificate, that the provisioning
            service uses to access.
            </param>
        <param name="ifMatch">
            ETag of the certificate.
            </param>
        <param name="resourceGroupName">
            Resource group name.
            </param>
        <param name="provisioningServiceName">
            Provisioning service name.
            </param>
        <param name="certificatename">
            Common Name for the certificate.
            </param>
        <param name="certificaterawBytes">
            Raw data of certificate.
            </param>
        <param name="certificateisVerified">
            Indicates if the certificate has been verified by owner of the private key.
            </param>
        <param name="certificatepurpose">
            Describe the purpose of the certificate. Possible values include:
            'clientAuthentication', 'serverAuthentication'
            </param>
        <param name="certificatecreated">
            Certificate creation time.
            </param>
        <param name="certificatelastUpdated">
            Certificate last updated time.
            </param>
        <param name="certificatehasPrivateKey">
            Indicates if the certificate contains private key.
            </param>
        <param name="certificatenonce">
            Random number generated to indicate Proof of Possession.
            </param>
        <param name="certificate">
            base-64 representation of X509 certificate .cer file or just .pem file
            content.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Verify certificate's private key possession.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Verifies the certificate's private key possession by providing the leaf
            cert issued by the verifying pre uploaded certificate.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
