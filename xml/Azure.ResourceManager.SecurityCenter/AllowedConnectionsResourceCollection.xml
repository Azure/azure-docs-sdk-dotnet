<Type Name="AllowedConnectionsResourceCollection" FullName="Azure.ResourceManager.SecurityCenter.AllowedConnectionsResourceCollection">
  <TypeSignature Language="C#" Value="public class AllowedConnectionsResourceCollection : Azure.ResourceManager.ArmCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AllowedConnectionsResourceCollection extends Azure.ResourceManager.ArmCollection" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.SecurityCenter.AllowedConnectionsResourceCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class AllowedConnectionsResourceCollection&#xA;Inherits ArmCollection" />
  <TypeSignature Language="F#" Value="type AllowedConnectionsResourceCollection = class&#xA;    inherit ArmCollection" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.SecurityCenter.AllowedConnectionsResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.SecurityCenter.AllowedConnectionsResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            To get an <see cref="T:Azure.ResourceManager.SecurityCenter.AllowedConnectionsResourceCollection" /> instance call the GetAllowedConnectionsResources method from an instance of <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AllowedConnectionsResourceCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AllowedConnectionsResourceCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.SecurityCenter.AllowedConnectionsResourceCollection" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; Exists (string ascLocation, Azure.ResourceManager.SecurityCenter.Models.ConnectionType connectionType, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; Exists(string ascLocation, valuetype Azure.ResourceManager.SecurityCenter.Models.ConnectionType connectionType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AllowedConnectionsResourceCollection.Exists(System.String,Azure.ResourceManager.SecurityCenter.Models.ConnectionType,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Exists (ascLocation As String, connectionType As ConnectionType, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Exists : string * Azure.ResourceManager.SecurityCenter.Models.ConnectionType * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.Exists : string * Azure.ResourceManager.SecurityCenter.Models.ConnectionType * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="allowedConnectionsResourceCollection.Exists (ascLocation, connectionType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascLocation" Type="System.String" />
        <Parameter Name="connectionType" Type="Azure.ResourceManager.SecurityCenter.Models.ConnectionType" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ascLocation"> The location where ASC stores the data of the subscription. can be retrieved from Get locations. </param>
        <param name="connectionType"> The type of allowed connections (Internal, External). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks to see if the resource exists in azure.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/allowedConnections/{connectionType}
            Operation Id: AllowedConnections_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="ascLocation" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ascLocation" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; ExistsAsync (string ascLocation, Azure.ResourceManager.SecurityCenter.Models.ConnectionType connectionType, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; ExistsAsync(string ascLocation, valuetype Azure.ResourceManager.SecurityCenter.Models.ConnectionType connectionType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AllowedConnectionsResourceCollection.ExistsAsync(System.String,Azure.ResourceManager.SecurityCenter.Models.ConnectionType,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExistsAsync (ascLocation As String, connectionType As ConnectionType, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member ExistsAsync : string * Azure.ResourceManager.SecurityCenter.Models.ConnectionType * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.ExistsAsync : string * Azure.ResourceManager.SecurityCenter.Models.ConnectionType * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="allowedConnectionsResourceCollection.ExistsAsync (ascLocation, connectionType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascLocation" Type="System.String" />
        <Parameter Name="connectionType" Type="Azure.ResourceManager.SecurityCenter.Models.ConnectionType" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ascLocation"> The location where ASC stores the data of the subscription. can be retrieved from Get locations. </param>
        <param name="connectionType"> The type of allowed connections (Internal, External). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks to see if the resource exists in azure.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/allowedConnections/{connectionType}
            Operation Id: AllowedConnections_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="ascLocation" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ascLocation" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AllowedConnectionsResource&gt; Get (string ascLocation, Azure.ResourceManager.SecurityCenter.Models.ConnectionType connectionType, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.AllowedConnectionsResource&gt; Get(string ascLocation, valuetype Azure.ResourceManager.SecurityCenter.Models.ConnectionType connectionType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AllowedConnectionsResourceCollection.Get(System.String,Azure.ResourceManager.SecurityCenter.Models.ConnectionType,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (ascLocation As String, connectionType As ConnectionType, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AllowedConnectionsResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * Azure.ResourceManager.SecurityCenter.Models.ConnectionType * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AllowedConnectionsResource&gt;&#xA;override this.Get : string * Azure.ResourceManager.SecurityCenter.Models.ConnectionType * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AllowedConnectionsResource&gt;" Usage="allowedConnectionsResourceCollection.Get (ascLocation, connectionType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AllowedConnectionsResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascLocation" Type="System.String" />
        <Parameter Name="connectionType" Type="Azure.ResourceManager.SecurityCenter.Models.ConnectionType" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ascLocation"> The location where ASC stores the data of the subscription. can be retrieved from Get locations. </param>
        <param name="connectionType"> The type of allowed connections (Internal, External). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the list of all possible traffic between resources for the subscription and location, based on connection type.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/allowedConnections/{connectionType}
            Operation Id: AllowedConnections_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="ascLocation" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ascLocation" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AllowedConnectionsResource&gt;&gt; GetAsync (string ascLocation, Azure.ResourceManager.SecurityCenter.Models.ConnectionType connectionType, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.AllowedConnectionsResource&gt;&gt; GetAsync(string ascLocation, valuetype Azure.ResourceManager.SecurityCenter.Models.ConnectionType connectionType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AllowedConnectionsResourceCollection.GetAsync(System.String,Azure.ResourceManager.SecurityCenter.Models.ConnectionType,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (ascLocation As String, connectionType As ConnectionType, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AllowedConnectionsResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * Azure.ResourceManager.SecurityCenter.Models.ConnectionType * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AllowedConnectionsResource&gt;&gt;&#xA;override this.GetAsync : string * Azure.ResourceManager.SecurityCenter.Models.ConnectionType * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AllowedConnectionsResource&gt;&gt;" Usage="allowedConnectionsResourceCollection.GetAsync (ascLocation, connectionType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AllowedConnectionsResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascLocation" Type="System.String" />
        <Parameter Name="connectionType" Type="Azure.ResourceManager.SecurityCenter.Models.ConnectionType" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ascLocation"> The location where ASC stores the data of the subscription. can be retrieved from Get locations. </param>
        <param name="connectionType"> The type of allowed connections (Internal, External). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the list of all possible traffic between resources for the subscription and location, based on connection type.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/allowedConnections/{connectionType}
            Operation Id: AllowedConnections_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="ascLocation" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ascLocation" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
