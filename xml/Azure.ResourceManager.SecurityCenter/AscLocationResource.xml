<Type Name="AscLocationResource" FullName="Azure.ResourceManager.SecurityCenter.AscLocationResource">
  <TypeSignature Language="C#" Value="public class AscLocationResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AscLocationResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.SecurityCenter.AscLocationResource" />
  <TypeSignature Language="VB.NET" Value="Public Class AscLocationResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type AscLocationResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing an AscLocation along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.SecurityCenter.AscLocationResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetAscLocationResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> using the GetAscLocation method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AscLocationResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AscLocationResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.SecurityCenter.AscLocationResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string ascLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string ascLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AscLocationResource.CreateResourceIdentifier(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, ascLocation As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.SecurityCenter.AscLocationResource.CreateResourceIdentifier (subscriptionId, ascLocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="ascLocation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">To be added.</param>
        <param name="ascLocation">To be added.</param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.SecurityCenter.AscLocationResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.AscLocationData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.SecurityCenter.AscLocationData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.SecurityCenter.AscLocationResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As AscLocationData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.SecurityCenter.AscLocationData" Usage="Azure.ResourceManager.SecurityCenter.AscLocationResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.AscLocationData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AscLocationResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.AscLocationResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AscLocationResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of AscLocationResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AscLocationResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AscLocationResource&gt;" Usage="ascLocationResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AscLocationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Details of a specific location
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}
            Operation Id: Locations_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAdaptiveApplicationControlGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource&gt; GetAdaptiveApplicationControlGroup (string groupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource&gt; GetAdaptiveApplicationControlGroup(string groupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AscLocationResource.GetAdaptiveApplicationControlGroup(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAdaptiveApplicationControlGroup (groupName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AdaptiveApplicationControlGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAdaptiveApplicationControlGroup : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource&gt;&#xA;override this.GetAdaptiveApplicationControlGroup : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource&gt;" Usage="ascLocationResource.GetAdaptiveApplicationControlGroup (groupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupName"> Name of an application control machine group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an application control VM/server group.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/applicationWhitelistings/{groupName}
            Operation Id: AdaptiveApplicationControls_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="groupName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="groupName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAdaptiveApplicationControlGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource&gt;&gt; GetAdaptiveApplicationControlGroupAsync (string groupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource&gt;&gt; GetAdaptiveApplicationControlGroupAsync(string groupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AscLocationResource.GetAdaptiveApplicationControlGroupAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAdaptiveApplicationControlGroupAsync (groupName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AdaptiveApplicationControlGroupResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAdaptiveApplicationControlGroupAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource&gt;&gt;&#xA;override this.GetAdaptiveApplicationControlGroupAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource&gt;&gt;" Usage="ascLocationResource.GetAdaptiveApplicationControlGroupAsync (groupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupName"> Name of an application control machine group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an application control VM/server group.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/applicationWhitelistings/{groupName}
            Operation Id: AdaptiveApplicationControls_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="groupName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="groupName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAdaptiveApplicationControlGroups">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupCollection GetAdaptiveApplicationControlGroups ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupCollection GetAdaptiveApplicationControlGroups() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AscLocationResource.GetAdaptiveApplicationControlGroups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAdaptiveApplicationControlGroups () As AdaptiveApplicationControlGroupCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAdaptiveApplicationControlGroups : unit -&gt; Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupCollection&#xA;override this.GetAdaptiveApplicationControlGroups : unit -&gt; Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupCollection" Usage="ascLocationResource.GetAdaptiveApplicationControlGroups " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AdaptiveApplicationControlGroupResources in the AscLocation. </summary>
        <returns> An object representing collection of AdaptiveApplicationControlGroupResources and their operations over a AdaptiveApplicationControlGroupResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllowedConnectionsByHomeRegion">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.AllowedConnectionsResource&gt; GetAllowedConnectionsByHomeRegion (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.AllowedConnectionsResource&gt; GetAllowedConnectionsByHomeRegion(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AscLocationResource.GetAllowedConnectionsByHomeRegion(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllowedConnectionsByHomeRegion (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AllowedConnectionsResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAllowedConnectionsByHomeRegion : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.AllowedConnectionsResource&gt;&#xA;override this.GetAllowedConnectionsByHomeRegion : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.AllowedConnectionsResource&gt;" Usage="ascLocationResource.GetAllowedConnectionsByHomeRegion cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.AllowedConnectionsResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the list of all possible traffic between resources for the subscription and location.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/allowedConnections
            Operation Id: AllowedConnections_ListByHomeRegion
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.AllowedConnectionsResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllowedConnectionsByHomeRegionAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.AllowedConnectionsResource&gt; GetAllowedConnectionsByHomeRegionAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.AllowedConnectionsResource&gt; GetAllowedConnectionsByHomeRegionAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AscLocationResource.GetAllowedConnectionsByHomeRegionAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllowedConnectionsByHomeRegionAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AllowedConnectionsResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAllowedConnectionsByHomeRegionAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.AllowedConnectionsResource&gt;&#xA;override this.GetAllowedConnectionsByHomeRegionAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.AllowedConnectionsResource&gt;" Usage="ascLocationResource.GetAllowedConnectionsByHomeRegionAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.AllowedConnectionsResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the list of all possible traffic between resources for the subscription and location.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/allowedConnections
            Operation Id: AllowedConnections_ListByHomeRegion
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.AllowedConnectionsResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllSecuritySolutionsReferenceDataByHomeRegion">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolutionsReferenceData&gt; GetAllSecuritySolutionsReferenceDataByHomeRegion (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.Models.SecuritySolutionsReferenceData&gt; GetAllSecuritySolutionsReferenceDataByHomeRegion(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AscLocationResource.GetAllSecuritySolutionsReferenceDataByHomeRegion(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllSecuritySolutionsReferenceDataByHomeRegion (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SecuritySolutionsReferenceData)" />
      <MemberSignature Language="F#" Value="abstract member GetAllSecuritySolutionsReferenceDataByHomeRegion : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolutionsReferenceData&gt;&#xA;override this.GetAllSecuritySolutionsReferenceDataByHomeRegion : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolutionsReferenceData&gt;" Usage="ascLocationResource.GetAllSecuritySolutionsReferenceDataByHomeRegion cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolutionsReferenceData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets list of all supported Security Solutions for subscription and location.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/securitySolutionsReferenceData
            Operation Id: SecuritySolutionsReferenceData_ListByHomeRegion
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.Models.SecuritySolutionsReferenceData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllSecuritySolutionsReferenceDataByHomeRegionAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolutionsReferenceData&gt; GetAllSecuritySolutionsReferenceDataByHomeRegionAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.Models.SecuritySolutionsReferenceData&gt; GetAllSecuritySolutionsReferenceDataByHomeRegionAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AscLocationResource.GetAllSecuritySolutionsReferenceDataByHomeRegionAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllSecuritySolutionsReferenceDataByHomeRegionAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SecuritySolutionsReferenceData)" />
      <MemberSignature Language="F#" Value="abstract member GetAllSecuritySolutionsReferenceDataByHomeRegionAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolutionsReferenceData&gt;&#xA;override this.GetAllSecuritySolutionsReferenceDataByHomeRegionAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolutionsReferenceData&gt;" Usage="ascLocationResource.GetAllSecuritySolutionsReferenceDataByHomeRegionAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolutionsReferenceData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets list of all supported Security Solutions for subscription and location.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/securitySolutionsReferenceData
            Operation Id: SecuritySolutionsReferenceData_ListByHomeRegion
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.Models.SecuritySolutionsReferenceData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAscLocationLocationAlert">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AscLocationLocationAlertResource&gt; GetAscLocationLocationAlert (string alertName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.AscLocationLocationAlertResource&gt; GetAscLocationLocationAlert(string alertName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AscLocationResource.GetAscLocationLocationAlert(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAscLocationLocationAlert (alertName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AscLocationLocationAlertResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAscLocationLocationAlert : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AscLocationLocationAlertResource&gt;&#xA;override this.GetAscLocationLocationAlert : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AscLocationLocationAlertResource&gt;" Usage="ascLocationResource.GetAscLocationLocationAlert (alertName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AscLocationLocationAlertResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alertName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="alertName"> Name of the alert object. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an alert that is associated with a subscription
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/alerts/{alertName}
            Operation Id: Alerts_GetSubscriptionLevel
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="alertName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="alertName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAscLocationLocationAlertAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AscLocationLocationAlertResource&gt;&gt; GetAscLocationLocationAlertAsync (string alertName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.AscLocationLocationAlertResource&gt;&gt; GetAscLocationLocationAlertAsync(string alertName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AscLocationResource.GetAscLocationLocationAlertAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAscLocationLocationAlertAsync (alertName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AscLocationLocationAlertResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAscLocationLocationAlertAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AscLocationLocationAlertResource&gt;&gt;&#xA;override this.GetAscLocationLocationAlertAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AscLocationLocationAlertResource&gt;&gt;" Usage="ascLocationResource.GetAscLocationLocationAlertAsync (alertName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AscLocationLocationAlertResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alertName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="alertName"> Name of the alert object. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an alert that is associated with a subscription
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/alerts/{alertName}
            Operation Id: Alerts_GetSubscriptionLevel
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="alertName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="alertName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAscLocationLocationAlerts">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.AscLocationLocationAlertCollection GetAscLocationLocationAlerts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.AscLocationLocationAlertCollection GetAscLocationLocationAlerts() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AscLocationResource.GetAscLocationLocationAlerts" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAscLocationLocationAlerts () As AscLocationLocationAlertCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAscLocationLocationAlerts : unit -&gt; Azure.ResourceManager.SecurityCenter.AscLocationLocationAlertCollection&#xA;override this.GetAscLocationLocationAlerts : unit -&gt; Azure.ResourceManager.SecurityCenter.AscLocationLocationAlertCollection" Usage="ascLocationResource.GetAscLocationLocationAlerts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.AscLocationLocationAlertCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AscLocationLocationAlertResources in the AscLocation. </summary>
        <returns> An object representing collection of AscLocationLocationAlertResources and their operations over a AscLocationLocationAlertResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAscLocationLocationTask">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AscLocationLocationTaskResource&gt; GetAscLocationLocationTask (string taskName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.AscLocationLocationTaskResource&gt; GetAscLocationLocationTask(string taskName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AscLocationResource.GetAscLocationLocationTask(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAscLocationLocationTask (taskName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AscLocationLocationTaskResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAscLocationLocationTask : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AscLocationLocationTaskResource&gt;&#xA;override this.GetAscLocationLocationTask : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AscLocationLocationTaskResource&gt;" Usage="ascLocationResource.GetAscLocationLocationTask (taskName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AscLocationLocationTaskResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="taskName"> Name of the task object, will be a GUID. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Recommended tasks that will help improve the security of the subscription proactively
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/tasks/{taskName}
            Operation Id: Tasks_GetSubscriptionLevelTask
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="taskName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="taskName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAscLocationLocationTaskAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AscLocationLocationTaskResource&gt;&gt; GetAscLocationLocationTaskAsync (string taskName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.AscLocationLocationTaskResource&gt;&gt; GetAscLocationLocationTaskAsync(string taskName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AscLocationResource.GetAscLocationLocationTaskAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAscLocationLocationTaskAsync (taskName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AscLocationLocationTaskResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAscLocationLocationTaskAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AscLocationLocationTaskResource&gt;&gt;&#xA;override this.GetAscLocationLocationTaskAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AscLocationLocationTaskResource&gt;&gt;" Usage="ascLocationResource.GetAscLocationLocationTaskAsync (taskName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AscLocationLocationTaskResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="taskName"> Name of the task object, will be a GUID. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Recommended tasks that will help improve the security of the subscription proactively
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/tasks/{taskName}
            Operation Id: Tasks_GetSubscriptionLevelTask
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="taskName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="taskName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAscLocationLocationTasks">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.AscLocationLocationTaskCollection GetAscLocationLocationTasks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.AscLocationLocationTaskCollection GetAscLocationLocationTasks() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AscLocationResource.GetAscLocationLocationTasks" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAscLocationLocationTasks () As AscLocationLocationTaskCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAscLocationLocationTasks : unit -&gt; Azure.ResourceManager.SecurityCenter.AscLocationLocationTaskCollection&#xA;override this.GetAscLocationLocationTasks : unit -&gt; Azure.ResourceManager.SecurityCenter.AscLocationLocationTaskCollection" Usage="ascLocationResource.GetAscLocationLocationTasks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.AscLocationLocationTaskCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AscLocationLocationTaskResources in the AscLocation. </summary>
        <returns> An object representing collection of AscLocationLocationTaskResources and their operations over a AscLocationLocationTaskResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AscLocationResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.AscLocationResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AscLocationResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AscLocationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AscLocationResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AscLocationResource&gt;&gt;" Usage="ascLocationResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AscLocationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Details of a specific location
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}
            Operation Id: Locations_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDiscoveredSecuritySolutionsByHomeRegion">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.DiscoveredSecuritySolutionResource&gt; GetDiscoveredSecuritySolutionsByHomeRegion (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.DiscoveredSecuritySolutionResource&gt; GetDiscoveredSecuritySolutionsByHomeRegion(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AscLocationResource.GetDiscoveredSecuritySolutionsByHomeRegion(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDiscoveredSecuritySolutionsByHomeRegion (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DiscoveredSecuritySolutionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDiscoveredSecuritySolutionsByHomeRegion : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.DiscoveredSecuritySolutionResource&gt;&#xA;override this.GetDiscoveredSecuritySolutionsByHomeRegion : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.DiscoveredSecuritySolutionResource&gt;" Usage="ascLocationResource.GetDiscoveredSecuritySolutionsByHomeRegion cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.DiscoveredSecuritySolutionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of discovered Security Solutions for the subscription and location.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/discoveredSecuritySolutions
            Operation Id: DiscoveredSecuritySolutions_ListByHomeRegion
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.DiscoveredSecuritySolutionResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDiscoveredSecuritySolutionsByHomeRegionAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.DiscoveredSecuritySolutionResource&gt; GetDiscoveredSecuritySolutionsByHomeRegionAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.DiscoveredSecuritySolutionResource&gt; GetDiscoveredSecuritySolutionsByHomeRegionAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AscLocationResource.GetDiscoveredSecuritySolutionsByHomeRegionAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDiscoveredSecuritySolutionsByHomeRegionAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DiscoveredSecuritySolutionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDiscoveredSecuritySolutionsByHomeRegionAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.DiscoveredSecuritySolutionResource&gt;&#xA;override this.GetDiscoveredSecuritySolutionsByHomeRegionAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.DiscoveredSecuritySolutionResource&gt;" Usage="ascLocationResource.GetDiscoveredSecuritySolutionsByHomeRegionAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.DiscoveredSecuritySolutionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of discovered Security Solutions for the subscription and location.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/discoveredSecuritySolutions
            Operation Id: DiscoveredSecuritySolutions_ListByHomeRegion
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.DiscoveredSecuritySolutionResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExternalSecuritySolutionsByHomeRegion">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.ExternalSecuritySolutionResource&gt; GetExternalSecuritySolutionsByHomeRegion (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.ExternalSecuritySolutionResource&gt; GetExternalSecuritySolutionsByHomeRegion(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AscLocationResource.GetExternalSecuritySolutionsByHomeRegion(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExternalSecuritySolutionsByHomeRegion (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ExternalSecuritySolutionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetExternalSecuritySolutionsByHomeRegion : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.ExternalSecuritySolutionResource&gt;&#xA;override this.GetExternalSecuritySolutionsByHomeRegion : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.ExternalSecuritySolutionResource&gt;" Usage="ascLocationResource.GetExternalSecuritySolutionsByHomeRegion cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.ExternalSecuritySolutionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of external Security Solutions for the subscription and location.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/ExternalSecuritySolutions
            Operation Id: ExternalSecuritySolutions_ListByHomeRegion
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.ExternalSecuritySolutionResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExternalSecuritySolutionsByHomeRegionAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.ExternalSecuritySolutionResource&gt; GetExternalSecuritySolutionsByHomeRegionAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.ExternalSecuritySolutionResource&gt; GetExternalSecuritySolutionsByHomeRegionAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AscLocationResource.GetExternalSecuritySolutionsByHomeRegionAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExternalSecuritySolutionsByHomeRegionAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ExternalSecuritySolutionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetExternalSecuritySolutionsByHomeRegionAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.ExternalSecuritySolutionResource&gt;&#xA;override this.GetExternalSecuritySolutionsByHomeRegionAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.ExternalSecuritySolutionResource&gt;" Usage="ascLocationResource.GetExternalSecuritySolutionsByHomeRegionAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.ExternalSecuritySolutionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of external Security Solutions for the subscription and location.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/ExternalSecuritySolutions
            Operation Id: ExternalSecuritySolutions_ListByHomeRegion
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.ExternalSecuritySolutionResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetJitNetworkAccessPoliciesByRegion">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt; GetJitNetworkAccessPoliciesByRegion (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt; GetJitNetworkAccessPoliciesByRegion(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AscLocationResource.GetJitNetworkAccessPoliciesByRegion(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJitNetworkAccessPoliciesByRegion (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of JitNetworkAccessPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetJitNetworkAccessPoliciesByRegion : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt;&#xA;override this.GetJitNetworkAccessPoliciesByRegion : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt;" Usage="ascLocationResource.GetJitNetworkAccessPoliciesByRegion cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Policies for protecting resources using Just-in-Time access control for the subscription, location
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/jitNetworkAccessPolicies
            Operation Id: JitNetworkAccessPolicies_ListByRegion
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetJitNetworkAccessPoliciesByRegionAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt; GetJitNetworkAccessPoliciesByRegionAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt; GetJitNetworkAccessPoliciesByRegionAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AscLocationResource.GetJitNetworkAccessPoliciesByRegionAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJitNetworkAccessPoliciesByRegionAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of JitNetworkAccessPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetJitNetworkAccessPoliciesByRegionAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt;&#xA;override this.GetJitNetworkAccessPoliciesByRegionAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt;" Usage="ascLocationResource.GetJitNetworkAccessPoliciesByRegionAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Policies for protecting resources using Just-in-Time access control for the subscription, location
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/jitNetworkAccessPolicies
            Operation Id: JitNetworkAccessPolicies_ListByRegion
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTopologiesByHomeRegion">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.TopologyResource&gt; GetTopologiesByHomeRegion (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.TopologyResource&gt; GetTopologiesByHomeRegion(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AscLocationResource.GetTopologiesByHomeRegion(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTopologiesByHomeRegion (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of TopologyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetTopologiesByHomeRegion : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.TopologyResource&gt;&#xA;override this.GetTopologiesByHomeRegion : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.TopologyResource&gt;" Usage="ascLocationResource.GetTopologiesByHomeRegion cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.TopologyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list that allows to build a topology view of a subscription and location.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/topologies
            Operation Id: Topology_ListByHomeRegion
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.TopologyResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTopologiesByHomeRegionAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.TopologyResource&gt; GetTopologiesByHomeRegionAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.TopologyResource&gt; GetTopologiesByHomeRegionAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AscLocationResource.GetTopologiesByHomeRegionAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTopologiesByHomeRegionAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of TopologyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetTopologiesByHomeRegionAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.TopologyResource&gt;&#xA;override this.GetTopologiesByHomeRegionAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.TopologyResource&gt;" Usage="ascLocationResource.GetTopologiesByHomeRegionAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.TopologyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list that allows to build a topology view of a subscription and location.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/topologies
            Operation Id: Topology_ListByHomeRegion
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.TopologyResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.SecurityCenter.AscLocationResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.SecurityCenter.AscLocationResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.SecurityCenter.AscLocationResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.SecurityCenter.AscLocationResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SimulateAlert">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation SimulateAlert (Azure.WaitUntil waitUntil, Azure.ResourceManager.SecurityCenter.Models.AlertSimulatorRequestBody alertSimulatorRequestBody, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation SimulateAlert(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.SecurityCenter.Models.AlertSimulatorRequestBody alertSimulatorRequestBody, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AscLocationResource.SimulateAlert(Azure.WaitUntil,Azure.ResourceManager.SecurityCenter.Models.AlertSimulatorRequestBody,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SimulateAlert (waitUntil As WaitUntil, alertSimulatorRequestBody As AlertSimulatorRequestBody, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member SimulateAlert : Azure.WaitUntil * Azure.ResourceManager.SecurityCenter.Models.AlertSimulatorRequestBody * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.SimulateAlert : Azure.WaitUntil * Azure.ResourceManager.SecurityCenter.Models.AlertSimulatorRequestBody * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="ascLocationResource.SimulateAlert (waitUntil, alertSimulatorRequestBody, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="alertSimulatorRequestBody" Type="Azure.ResourceManager.SecurityCenter.Models.AlertSimulatorRequestBody" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="alertSimulatorRequestBody"> Alert Simulator Request Properties. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Simulate security alerts
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/alerts/default/simulate
            Operation Id: Alerts_Simulate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="alertSimulatorRequestBody" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SimulateAlertAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; SimulateAlertAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.SecurityCenter.Models.AlertSimulatorRequestBody alertSimulatorRequestBody, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; SimulateAlertAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.SecurityCenter.Models.AlertSimulatorRequestBody alertSimulatorRequestBody, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.AscLocationResource.SimulateAlertAsync(Azure.WaitUntil,Azure.ResourceManager.SecurityCenter.Models.AlertSimulatorRequestBody,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SimulateAlertAsync (waitUntil As WaitUntil, alertSimulatorRequestBody As AlertSimulatorRequestBody, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member SimulateAlertAsync : Azure.WaitUntil * Azure.ResourceManager.SecurityCenter.Models.AlertSimulatorRequestBody * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.SimulateAlertAsync : Azure.WaitUntil * Azure.ResourceManager.SecurityCenter.Models.AlertSimulatorRequestBody * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="ascLocationResource.SimulateAlertAsync (waitUntil, alertSimulatorRequestBody, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="alertSimulatorRequestBody" Type="Azure.ResourceManager.SecurityCenter.Models.AlertSimulatorRequestBody" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="alertSimulatorRequestBody"> Alert Simulator Request Properties. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Simulate security alerts
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/alerts/default/simulate
            Operation Id: Alerts_Simulate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="alertSimulatorRequestBody" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
