<Type Name="SubscriptionExtensions" FullName="Azure.ResourceManager.Subscription.SubscriptionExtensions">
  <TypeSignature Language="C#" Value="public static class SubscriptionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SubscriptionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Subscription.SubscriptionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module SubscriptionExtensions" />
  <TypeSignature Language="F#" Value="type SubscriptionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.Subscription. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AcceptSubscriptionOwnership">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ArmOperation AcceptSubscriptionOwnership (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, string subscriptionId, Azure.ResourceManager.Subscription.Models.AcceptOwnershipContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ArmOperation AcceptSubscriptionOwnership(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, string subscriptionId, class Azure.ResourceManager.Subscription.Models.AcceptOwnershipContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.SubscriptionExtensions.AcceptSubscriptionOwnership(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,System.String,Azure.ResourceManager.Subscription.Models.AcceptOwnershipContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AcceptSubscriptionOwnership (tenantResource As TenantResource, waitUntil As WaitUntil, subscriptionId As String, content As AcceptOwnershipContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="static member AcceptSubscriptionOwnership : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * string * Azure.ResourceManager.Subscription.Models.AcceptOwnershipContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="Azure.ResourceManager.Subscription.SubscriptionExtensions.AcceptSubscriptionOwnership (tenantResource, waitUntil, subscriptionId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.Subscription.Models.AcceptOwnershipContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="subscriptionId"> Subscription Id. </param>
        <param name="content"> The <see cref="T:Azure.ResourceManager.Subscription.Models.AcceptOwnershipContent" /> to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Accept subscription ownership.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Subscription/subscriptions/{subscriptionId}/acceptOwnership</description></item><item><term>Operation Id</term><description>Subscription_AcceptOwnership</description></item><item><term>Default Api Version</term><description>2021-10-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionTenantResource.AcceptSubscriptionOwnership(Azure.WaitUntil,System.String,Azure.ResourceManager.Subscription.Models.AcceptOwnershipContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" />, <paramref name="subscriptionId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AcceptSubscriptionOwnershipAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; AcceptSubscriptionOwnershipAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, string subscriptionId, Azure.ResourceManager.Subscription.Models.AcceptOwnershipContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; AcceptSubscriptionOwnershipAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, string subscriptionId, class Azure.ResourceManager.Subscription.Models.AcceptOwnershipContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.SubscriptionExtensions.AcceptSubscriptionOwnershipAsync(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,System.String,Azure.ResourceManager.Subscription.Models.AcceptOwnershipContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AcceptSubscriptionOwnershipAsync (tenantResource As TenantResource, waitUntil As WaitUntil, subscriptionId As String, content As AcceptOwnershipContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="static member AcceptSubscriptionOwnershipAsync : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * string * Azure.ResourceManager.Subscription.Models.AcceptOwnershipContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="Azure.ResourceManager.Subscription.SubscriptionExtensions.AcceptSubscriptionOwnershipAsync (tenantResource, waitUntil, subscriptionId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.Subscription.Models.AcceptOwnershipContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="subscriptionId"> Subscription Id. </param>
        <param name="content"> The <see cref="T:Azure.ResourceManager.Subscription.Models.AcceptOwnershipContent" /> to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Accept subscription ownership.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Subscription/subscriptions/{subscriptionId}/acceptOwnership</description></item><item><term>Operation Id</term><description>Subscription_AcceptOwnership</description></item><item><term>Default Api Version</term><description>2021-10-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionTenantResource.AcceptSubscriptionOwnership(Azure.WaitUntil,System.String,Azure.ResourceManager.Subscription.Models.AcceptOwnershipContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" />, <paramref name="subscriptionId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CancelSubscription">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Subscription.Models.CanceledSubscriptionId&gt; CancelSubscription (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Subscription.Models.CanceledSubscriptionId&gt; CancelSubscription(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.SubscriptionExtensions.CancelSubscription(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CancelSubscription (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CanceledSubscriptionId)" />
      <MemberSignature Language="F#" Value="static member CancelSubscription : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Subscription.Models.CanceledSubscriptionId&gt;" Usage="Azure.ResourceManager.Subscription.SubscriptionExtensions.CancelSubscription (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Subscription.Models.CanceledSubscriptionId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The operation to cancel a subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Subscription/cancel</description></item><item><term>Operation Id</term><description>Subscription_Cancel</description></item><item><term>Default Api Version</term><description>2021-10-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionSubscriptionResource.CancelSubscription(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CancelSubscriptionAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.Models.CanceledSubscriptionId&gt;&gt; CancelSubscriptionAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Subscription.Models.CanceledSubscriptionId&gt;&gt; CancelSubscriptionAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.SubscriptionExtensions.CancelSubscriptionAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CancelSubscriptionAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CanceledSubscriptionId))" />
      <MemberSignature Language="F#" Value="static member CancelSubscriptionAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.Models.CanceledSubscriptionId&gt;&gt;" Usage="Azure.ResourceManager.Subscription.SubscriptionExtensions.CancelSubscriptionAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.Models.CanceledSubscriptionId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The operation to cancel a subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Subscription/cancel</description></item><item><term>Operation Id</term><description>Subscription_Cancel</description></item><item><term>Default Api Version</term><description>2021-10-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionSubscriptionResource.CancelSubscription(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="EnableSubscription">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Subscription.Models.EnabledSubscriptionId&gt; EnableSubscription (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Subscription.Models.EnabledSubscriptionId&gt; EnableSubscription(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.SubscriptionExtensions.EnableSubscription(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EnableSubscription (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EnabledSubscriptionId)" />
      <MemberSignature Language="F#" Value="static member EnableSubscription : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Subscription.Models.EnabledSubscriptionId&gt;" Usage="Azure.ResourceManager.Subscription.SubscriptionExtensions.EnableSubscription (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Subscription.Models.EnabledSubscriptionId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The operation to enable a subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Subscription/enable</description></item><item><term>Operation Id</term><description>Subscription_Enable</description></item><item><term>Default Api Version</term><description>2021-10-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionSubscriptionResource.EnableSubscription(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="EnableSubscriptionAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.Models.EnabledSubscriptionId&gt;&gt; EnableSubscriptionAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Subscription.Models.EnabledSubscriptionId&gt;&gt; EnableSubscriptionAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.SubscriptionExtensions.EnableSubscriptionAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EnableSubscriptionAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EnabledSubscriptionId))" />
      <MemberSignature Language="F#" Value="static member EnableSubscriptionAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.Models.EnabledSubscriptionId&gt;&gt;" Usage="Azure.ResourceManager.Subscription.SubscriptionExtensions.EnableSubscriptionAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.Models.EnabledSubscriptionId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The operation to enable a subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Subscription/enable</description></item><item><term>Operation Id</term><description>Subscription_Enable</description></item><item><term>Default Api Version</term><description>2021-10-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionSubscriptionResource.EnableSubscription(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAcceptOwnershipStatus">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Subscription.Models.AcceptOwnershipStatus&gt; GetAcceptOwnershipStatus (this Azure.ResourceManager.Resources.TenantResource tenantResource, string subscriptionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Subscription.Models.AcceptOwnershipStatus&gt; GetAcceptOwnershipStatus(class Azure.ResourceManager.Resources.TenantResource tenantResource, string subscriptionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.SubscriptionExtensions.GetAcceptOwnershipStatus(Azure.ResourceManager.Resources.TenantResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAcceptOwnershipStatus (tenantResource As TenantResource, subscriptionId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AcceptOwnershipStatus)" />
      <MemberSignature Language="F#" Value="static member GetAcceptOwnershipStatus : Azure.ResourceManager.Resources.TenantResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Subscription.Models.AcceptOwnershipStatus&gt;" Usage="Azure.ResourceManager.Subscription.SubscriptionExtensions.GetAcceptOwnershipStatus (tenantResource, subscriptionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Subscription.Models.AcceptOwnershipStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="subscriptionId"> Subscription Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Accept subscription ownership status.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Subscription/subscriptions/{subscriptionId}/acceptOwnershipStatus</description></item><item><term>Operation Id</term><description>Subscription_AcceptOwnershipStatus</description></item><item><term>Default Api Version</term><description>2021-10-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionTenantResource.GetAcceptOwnershipStatus(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="subscriptionId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAcceptOwnershipStatusAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.Models.AcceptOwnershipStatus&gt;&gt; GetAcceptOwnershipStatusAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, string subscriptionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Subscription.Models.AcceptOwnershipStatus&gt;&gt; GetAcceptOwnershipStatusAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, string subscriptionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.SubscriptionExtensions.GetAcceptOwnershipStatusAsync(Azure.ResourceManager.Resources.TenantResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAcceptOwnershipStatusAsync (tenantResource As TenantResource, subscriptionId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AcceptOwnershipStatus))" />
      <MemberSignature Language="F#" Value="static member GetAcceptOwnershipStatusAsync : Azure.ResourceManager.Resources.TenantResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.Models.AcceptOwnershipStatus&gt;&gt;" Usage="Azure.ResourceManager.Subscription.SubscriptionExtensions.GetAcceptOwnershipStatusAsync (tenantResource, subscriptionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.Models.AcceptOwnershipStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="subscriptionId"> Subscription Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Accept subscription ownership status.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Subscription/subscriptions/{subscriptionId}/acceptOwnershipStatus</description></item><item><term>Operation Id</term><description>Subscription_AcceptOwnershipStatus</description></item><item><term>Default Api Version</term><description>2021-10-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionTenantResource.GetAcceptOwnershipStatus(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="subscriptionId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBillingAccountPolicies">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Subscription.BillingAccountPolicyCollection GetBillingAccountPolicies (this Azure.ResourceManager.Resources.TenantResource tenantResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Subscription.BillingAccountPolicyCollection GetBillingAccountPolicies(class Azure.ResourceManager.Resources.TenantResource tenantResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.SubscriptionExtensions.GetBillingAccountPolicies(Azure.ResourceManager.Resources.TenantResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBillingAccountPolicies (tenantResource As TenantResource) As BillingAccountPolicyCollection" />
      <MemberSignature Language="F#" Value="static member GetBillingAccountPolicies : Azure.ResourceManager.Resources.TenantResource -&gt; Azure.ResourceManager.Subscription.BillingAccountPolicyCollection" Usage="Azure.ResourceManager.Subscription.SubscriptionExtensions.GetBillingAccountPolicies tenantResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Subscription.BillingAccountPolicyCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of BillingAccountPolicyResources in the TenantResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionTenantResource.GetBillingAccountPolicies" /> instead.</description></item></summary>
        <returns> An object representing collection of BillingAccountPolicyResources and their operations over a BillingAccountPolicyResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBillingAccountPolicy">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Subscription.BillingAccountPolicyResource&gt; GetBillingAccountPolicy (this Azure.ResourceManager.Resources.TenantResource tenantResource, string billingAccountId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Subscription.BillingAccountPolicyResource&gt; GetBillingAccountPolicy(class Azure.ResourceManager.Resources.TenantResource tenantResource, string billingAccountId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.SubscriptionExtensions.GetBillingAccountPolicy(Azure.ResourceManager.Resources.TenantResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBillingAccountPolicy (tenantResource As TenantResource, billingAccountId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BillingAccountPolicyResource)" />
      <MemberSignature Language="F#" Value="static member GetBillingAccountPolicy : Azure.ResourceManager.Resources.TenantResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Subscription.BillingAccountPolicyResource&gt;" Usage="Azure.ResourceManager.Subscription.SubscriptionExtensions.GetBillingAccountPolicy (tenantResource, billingAccountId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Subscription.BillingAccountPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="billingAccountId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="billingAccountId"> Billing Account Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get Billing Account Policy.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Subscription/policies/default</description></item><item><term>Operation Id</term><description>BillingAccount_GetPolicy</description></item><item><term>Default Api Version</term><description>2021-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Subscription.BillingAccountPolicyResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionTenantResource.GetBillingAccountPolicy(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="billingAccountId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBillingAccountPolicyAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.BillingAccountPolicyResource&gt;&gt; GetBillingAccountPolicyAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, string billingAccountId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Subscription.BillingAccountPolicyResource&gt;&gt; GetBillingAccountPolicyAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, string billingAccountId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.SubscriptionExtensions.GetBillingAccountPolicyAsync(Azure.ResourceManager.Resources.TenantResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBillingAccountPolicyAsync (tenantResource As TenantResource, billingAccountId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BillingAccountPolicyResource))" />
      <MemberSignature Language="F#" Value="static member GetBillingAccountPolicyAsync : Azure.ResourceManager.Resources.TenantResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.BillingAccountPolicyResource&gt;&gt;" Usage="Azure.ResourceManager.Subscription.SubscriptionExtensions.GetBillingAccountPolicyAsync (tenantResource, billingAccountId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.BillingAccountPolicyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="billingAccountId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="billingAccountId"> Billing Account Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get Billing Account Policy.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Subscription/policies/default</description></item><item><term>Operation Id</term><description>BillingAccount_GetPolicy</description></item><item><term>Default Api Version</term><description>2021-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Subscription.BillingAccountPolicyResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionTenantResource.GetBillingAccountPolicyAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="billingAccountId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="billingAccountId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBillingAccountPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Subscription.BillingAccountPolicyResource GetBillingAccountPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Subscription.BillingAccountPolicyResource GetBillingAccountPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.SubscriptionExtensions.GetBillingAccountPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBillingAccountPolicyResource (client As ArmClient, id As ResourceIdentifier) As BillingAccountPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetBillingAccountPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Subscription.BillingAccountPolicyResource" Usage="Azure.ResourceManager.Subscription.SubscriptionExtensions.GetBillingAccountPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Subscription.BillingAccountPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Subscription.BillingAccountPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Subscription.BillingAccountPolicyResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.Subscription.BillingAccountPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionArmClient.GetBillingAccountPolicyResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Subscription.BillingAccountPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionAlias">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Subscription.SubscriptionAliasResource&gt; GetSubscriptionAlias (this Azure.ResourceManager.Resources.TenantResource tenantResource, string aliasName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Subscription.SubscriptionAliasResource&gt; GetSubscriptionAlias(class Azure.ResourceManager.Resources.TenantResource tenantResource, string aliasName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.SubscriptionExtensions.GetSubscriptionAlias(Azure.ResourceManager.Resources.TenantResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSubscriptionAlias (tenantResource As TenantResource, aliasName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SubscriptionAliasResource)" />
      <MemberSignature Language="F#" Value="static member GetSubscriptionAlias : Azure.ResourceManager.Resources.TenantResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Subscription.SubscriptionAliasResource&gt;" Usage="Azure.ResourceManager.Subscription.SubscriptionExtensions.GetSubscriptionAlias (tenantResource, aliasName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Subscription.SubscriptionAliasResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="aliasName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="aliasName"> AliasName is the name for the subscription creation request. Note that this is not the same as subscription name and this doesn’t have any other lifecycle need beyond the request for subscription creation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get Alias Subscription.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Subscription/aliases/{aliasName}</description></item><item><term>Operation Id</term><description>Alias_Get</description></item><item><term>Default Api Version</term><description>2021-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Subscription.SubscriptionAliasResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionTenantResource.GetSubscriptionAlias(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="aliasName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="aliasName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionAliasAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.SubscriptionAliasResource&gt;&gt; GetSubscriptionAliasAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, string aliasName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Subscription.SubscriptionAliasResource&gt;&gt; GetSubscriptionAliasAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, string aliasName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.SubscriptionExtensions.GetSubscriptionAliasAsync(Azure.ResourceManager.Resources.TenantResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSubscriptionAliasAsync (tenantResource As TenantResource, aliasName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SubscriptionAliasResource))" />
      <MemberSignature Language="F#" Value="static member GetSubscriptionAliasAsync : Azure.ResourceManager.Resources.TenantResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.SubscriptionAliasResource&gt;&gt;" Usage="Azure.ResourceManager.Subscription.SubscriptionExtensions.GetSubscriptionAliasAsync (tenantResource, aliasName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.SubscriptionAliasResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="aliasName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="aliasName"> AliasName is the name for the subscription creation request. Note that this is not the same as subscription name and this doesn’t have any other lifecycle need beyond the request for subscription creation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get Alias Subscription.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Subscription/aliases/{aliasName}</description></item><item><term>Operation Id</term><description>Alias_Get</description></item><item><term>Default Api Version</term><description>2021-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Subscription.SubscriptionAliasResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionTenantResource.GetSubscriptionAliasAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="aliasName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="aliasName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionAliases">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Subscription.SubscriptionAliasCollection GetSubscriptionAliases (this Azure.ResourceManager.Resources.TenantResource tenantResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Subscription.SubscriptionAliasCollection GetSubscriptionAliases(class Azure.ResourceManager.Resources.TenantResource tenantResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.SubscriptionExtensions.GetSubscriptionAliases(Azure.ResourceManager.Resources.TenantResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSubscriptionAliases (tenantResource As TenantResource) As SubscriptionAliasCollection" />
      <MemberSignature Language="F#" Value="static member GetSubscriptionAliases : Azure.ResourceManager.Resources.TenantResource -&gt; Azure.ResourceManager.Subscription.SubscriptionAliasCollection" Usage="Azure.ResourceManager.Subscription.SubscriptionExtensions.GetSubscriptionAliases tenantResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Subscription.SubscriptionAliasCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of SubscriptionAliasResources in the TenantResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionTenantResource.GetSubscriptionAliases" /> instead.</description></item></summary>
        <returns> An object representing collection of SubscriptionAliasResources and their operations over a SubscriptionAliasResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionAliasResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Subscription.SubscriptionAliasResource GetSubscriptionAliasResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Subscription.SubscriptionAliasResource GetSubscriptionAliasResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.SubscriptionExtensions.GetSubscriptionAliasResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSubscriptionAliasResource (client As ArmClient, id As ResourceIdentifier) As SubscriptionAliasResource" />
      <MemberSignature Language="F#" Value="static member GetSubscriptionAliasResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Subscription.SubscriptionAliasResource" Usage="Azure.ResourceManager.Subscription.SubscriptionExtensions.GetSubscriptionAliasResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Subscription.SubscriptionAliasResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Subscription.SubscriptionAliasResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Subscription.SubscriptionAliasResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.Subscription.SubscriptionAliasResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionArmClient.GetSubscriptionAliasResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Subscription.SubscriptionAliasResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTenantPolicy">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Subscription.TenantPolicyResource GetTenantPolicy (this Azure.ResourceManager.Resources.TenantResource tenantResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Subscription.TenantPolicyResource GetTenantPolicy(class Azure.ResourceManager.Resources.TenantResource tenantResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.SubscriptionExtensions.GetTenantPolicy(Azure.ResourceManager.Resources.TenantResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTenantPolicy (tenantResource As TenantResource) As TenantPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetTenantPolicy : Azure.ResourceManager.Resources.TenantResource -&gt; Azure.ResourceManager.Subscription.TenantPolicyResource" Usage="Azure.ResourceManager.Subscription.SubscriptionExtensions.GetTenantPolicy tenantResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Subscription.TenantPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <summary>
            Gets an object representing a TenantPolicyResource along with the instance operations that can be performed on it in the TenantResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionTenantResource.GetTenantPolicy" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Subscription.TenantPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTenantPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Subscription.TenantPolicyResource GetTenantPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Subscription.TenantPolicyResource GetTenantPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.SubscriptionExtensions.GetTenantPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTenantPolicyResource (client As ArmClient, id As ResourceIdentifier) As TenantPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetTenantPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Subscription.TenantPolicyResource" Usage="Azure.ResourceManager.Subscription.SubscriptionExtensions.GetTenantPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Subscription.TenantPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Subscription.TenantPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Subscription.TenantPolicyResource.CreateResourceIdentifier" /> to create a <see cref="T:Azure.ResourceManager.Subscription.TenantPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionArmClient.GetTenantPolicyResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Subscription.TenantPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RenameSubscription">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Subscription.Models.RenamedSubscriptionId&gt; RenameSubscription (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.Subscription.Models.SubscriptionName body, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Subscription.Models.RenamedSubscriptionId&gt; RenameSubscription(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.Subscription.Models.SubscriptionName body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.SubscriptionExtensions.RenameSubscription(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.Subscription.Models.SubscriptionName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RenameSubscription (subscriptionResource As SubscriptionResource, body As SubscriptionName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RenamedSubscriptionId)" />
      <MemberSignature Language="F#" Value="static member RenameSubscription : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.Subscription.Models.SubscriptionName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Subscription.Models.RenamedSubscriptionId&gt;" Usage="Azure.ResourceManager.Subscription.SubscriptionExtensions.RenameSubscription (subscriptionResource, body, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Subscription.Models.RenamedSubscriptionId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="body" Type="Azure.ResourceManager.Subscription.Models.SubscriptionName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="body"> Subscription Name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The operation to rename a subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Subscription/rename</description></item><item><term>Operation Id</term><description>Subscription_Rename</description></item><item><term>Default Api Version</term><description>2021-10-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionSubscriptionResource.RenameSubscription(Azure.ResourceManager.Subscription.Models.SubscriptionName,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="body" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RenameSubscriptionAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.Models.RenamedSubscriptionId&gt;&gt; RenameSubscriptionAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.Subscription.Models.SubscriptionName body, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Subscription.Models.RenamedSubscriptionId&gt;&gt; RenameSubscriptionAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.Subscription.Models.SubscriptionName body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Subscription.SubscriptionExtensions.RenameSubscriptionAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.Subscription.Models.SubscriptionName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RenameSubscriptionAsync (subscriptionResource As SubscriptionResource, body As SubscriptionName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RenamedSubscriptionId))" />
      <MemberSignature Language="F#" Value="static member RenameSubscriptionAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.Subscription.Models.SubscriptionName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.Models.RenamedSubscriptionId&gt;&gt;" Usage="Azure.ResourceManager.Subscription.SubscriptionExtensions.RenameSubscriptionAsync (subscriptionResource, body, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Subscription</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Subscription.Models.RenamedSubscriptionId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="body" Type="Azure.ResourceManager.Subscription.Models.SubscriptionName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="body"> Subscription Name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The operation to rename a subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Subscription/rename</description></item><item><term>Operation Id</term><description>Subscription_Rename</description></item><item><term>Default Api Version</term><description>2021-10-01</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Subscription.Mocking.MockableSubscriptionSubscriptionResource.RenameSubscription(Azure.ResourceManager.Subscription.Models.SubscriptionName,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="body" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
