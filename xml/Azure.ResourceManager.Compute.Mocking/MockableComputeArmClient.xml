<Type Name="MockableComputeArmClient" FullName="Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient">
  <TypeSignature Language="C#" Value="public class MockableComputeArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableComputeArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableComputeArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableComputeArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
    <AssemblyVersion>1.5.0.0</AssemblyVersion>
    <AssemblyVersion>1.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableComputeArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailabilitySetResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.AvailabilitySetResource GetAvailabilitySetResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.AvailabilitySetResource GetAvailabilitySetResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetAvailabilitySetResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailabilitySetResource (id As ResourceIdentifier) As AvailabilitySetResource" />
      <MemberSignature Language="F#" Value="abstract member GetAvailabilitySetResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.AvailabilitySetResource&#xA;override this.GetAvailabilitySetResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.AvailabilitySetResource" Usage="mockableComputeArmClient.GetAvailabilitySetResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.AvailabilitySetResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Compute.AvailabilitySetResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.AvailabilitySetResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Compute.AvailabilitySetResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.AvailabilitySetResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCapacityReservationGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.CapacityReservationGroupResource GetCapacityReservationGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.CapacityReservationGroupResource GetCapacityReservationGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetCapacityReservationGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCapacityReservationGroupResource (id As ResourceIdentifier) As CapacityReservationGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetCapacityReservationGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.CapacityReservationGroupResource&#xA;override this.GetCapacityReservationGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.CapacityReservationGroupResource" Usage="mockableComputeArmClient.GetCapacityReservationGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.CapacityReservationGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.CapacityReservationGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.CapacityReservationGroupResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.CapacityReservationGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.CapacityReservationGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCapacityReservationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.CapacityReservationResource GetCapacityReservationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.CapacityReservationResource GetCapacityReservationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetCapacityReservationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCapacityReservationResource (id As ResourceIdentifier) As CapacityReservationResource" />
      <MemberSignature Language="F#" Value="abstract member GetCapacityReservationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.CapacityReservationResource&#xA;override this.GetCapacityReservationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.CapacityReservationResource" Usage="mockableComputeArmClient.GetCapacityReservationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.CapacityReservationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.CapacityReservationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.CapacityReservationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.CapacityReservationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.CapacityReservationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCloudServiceOSFamilyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.CloudServiceOSFamilyResource GetCloudServiceOSFamilyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.CloudServiceOSFamilyResource GetCloudServiceOSFamilyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetCloudServiceOSFamilyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCloudServiceOSFamilyResource (id As ResourceIdentifier) As CloudServiceOSFamilyResource" />
      <MemberSignature Language="F#" Value="abstract member GetCloudServiceOSFamilyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.CloudServiceOSFamilyResource&#xA;override this.GetCloudServiceOSFamilyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.CloudServiceOSFamilyResource" Usage="mockableComputeArmClient.GetCloudServiceOSFamilyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.CloudServiceOSFamilyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.CloudServiceOSFamilyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.CloudServiceOSFamilyResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.CloudServiceOSFamilyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.CloudServiceOSFamilyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCloudServiceOSVersionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.CloudServiceOSVersionResource GetCloudServiceOSVersionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.CloudServiceOSVersionResource GetCloudServiceOSVersionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetCloudServiceOSVersionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCloudServiceOSVersionResource (id As ResourceIdentifier) As CloudServiceOSVersionResource" />
      <MemberSignature Language="F#" Value="abstract member GetCloudServiceOSVersionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.CloudServiceOSVersionResource&#xA;override this.GetCloudServiceOSVersionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.CloudServiceOSVersionResource" Usage="mockableComputeArmClient.GetCloudServiceOSVersionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.CloudServiceOSVersionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.CloudServiceOSVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.CloudServiceOSVersionResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.CloudServiceOSVersionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.CloudServiceOSVersionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCloudServiceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.CloudServiceResource GetCloudServiceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.CloudServiceResource GetCloudServiceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetCloudServiceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCloudServiceResource (id As ResourceIdentifier) As CloudServiceResource" />
      <MemberSignature Language="F#" Value="abstract member GetCloudServiceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.CloudServiceResource&#xA;override this.GetCloudServiceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.CloudServiceResource" Usage="mockableComputeArmClient.GetCloudServiceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.CloudServiceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.CloudServiceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.CloudServiceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.CloudServiceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.CloudServiceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCloudServiceRoleInstanceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.CloudServiceRoleInstanceResource GetCloudServiceRoleInstanceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.CloudServiceRoleInstanceResource GetCloudServiceRoleInstanceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetCloudServiceRoleInstanceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCloudServiceRoleInstanceResource (id As ResourceIdentifier) As CloudServiceRoleInstanceResource" />
      <MemberSignature Language="F#" Value="abstract member GetCloudServiceRoleInstanceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.CloudServiceRoleInstanceResource&#xA;override this.GetCloudServiceRoleInstanceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.CloudServiceRoleInstanceResource" Usage="mockableComputeArmClient.GetCloudServiceRoleInstanceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.CloudServiceRoleInstanceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.CloudServiceRoleInstanceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.CloudServiceRoleInstanceResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.CloudServiceRoleInstanceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.CloudServiceRoleInstanceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCloudServiceRoleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.CloudServiceRoleResource GetCloudServiceRoleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.CloudServiceRoleResource GetCloudServiceRoleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetCloudServiceRoleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCloudServiceRoleResource (id As ResourceIdentifier) As CloudServiceRoleResource" />
      <MemberSignature Language="F#" Value="abstract member GetCloudServiceRoleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.CloudServiceRoleResource&#xA;override this.GetCloudServiceRoleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.CloudServiceRoleResource" Usage="mockableComputeArmClient.GetCloudServiceRoleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.CloudServiceRoleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.CloudServiceRoleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.CloudServiceRoleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.CloudServiceRoleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.CloudServiceRoleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCommunityGalleryImageResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.CommunityGalleryImageResource GetCommunityGalleryImageResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.CommunityGalleryImageResource GetCommunityGalleryImageResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetCommunityGalleryImageResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCommunityGalleryImageResource (id As ResourceIdentifier) As CommunityGalleryImageResource" />
      <MemberSignature Language="F#" Value="abstract member GetCommunityGalleryImageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.CommunityGalleryImageResource&#xA;override this.GetCommunityGalleryImageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.CommunityGalleryImageResource" Usage="mockableComputeArmClient.GetCommunityGalleryImageResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.CommunityGalleryImageResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.CommunityGalleryImageResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.CommunityGalleryImageResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.CommunityGalleryImageResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.CommunityGalleryImageResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCommunityGalleryImageVersionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.CommunityGalleryImageVersionResource GetCommunityGalleryImageVersionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.CommunityGalleryImageVersionResource GetCommunityGalleryImageVersionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetCommunityGalleryImageVersionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCommunityGalleryImageVersionResource (id As ResourceIdentifier) As CommunityGalleryImageVersionResource" />
      <MemberSignature Language="F#" Value="abstract member GetCommunityGalleryImageVersionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.CommunityGalleryImageVersionResource&#xA;override this.GetCommunityGalleryImageVersionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.CommunityGalleryImageVersionResource" Usage="mockableComputeArmClient.GetCommunityGalleryImageVersionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.CommunityGalleryImageVersionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.CommunityGalleryImageVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.CommunityGalleryImageVersionResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.CommunityGalleryImageVersionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.CommunityGalleryImageVersionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCommunityGalleryResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.CommunityGalleryResource GetCommunityGalleryResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.CommunityGalleryResource GetCommunityGalleryResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetCommunityGalleryResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCommunityGalleryResource (id As ResourceIdentifier) As CommunityGalleryResource" />
      <MemberSignature Language="F#" Value="abstract member GetCommunityGalleryResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.CommunityGalleryResource&#xA;override this.GetCommunityGalleryResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.CommunityGalleryResource" Usage="mockableComputeArmClient.GetCommunityGalleryResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.CommunityGalleryResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.CommunityGalleryResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.CommunityGalleryResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.CommunityGalleryResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.CommunityGalleryResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComputePrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.ComputePrivateEndpointConnectionResource GetComputePrivateEndpointConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.ComputePrivateEndpointConnectionResource GetComputePrivateEndpointConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetComputePrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetComputePrivateEndpointConnectionResource (id As ResourceIdentifier) As ComputePrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetComputePrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.ComputePrivateEndpointConnectionResource&#xA;override this.GetComputePrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.ComputePrivateEndpointConnectionResource" Usage="mockableComputeArmClient.GetComputePrivateEndpointConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.ComputePrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.ComputePrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.ComputePrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.ComputePrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.ComputePrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDedicatedHostGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.DedicatedHostGroupResource GetDedicatedHostGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.DedicatedHostGroupResource GetDedicatedHostGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetDedicatedHostGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDedicatedHostGroupResource (id As ResourceIdentifier) As DedicatedHostGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetDedicatedHostGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.DedicatedHostGroupResource&#xA;override this.GetDedicatedHostGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.DedicatedHostGroupResource" Usage="mockableComputeArmClient.GetDedicatedHostGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.DedicatedHostGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.DedicatedHostGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.DedicatedHostGroupResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.DedicatedHostGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.DedicatedHostGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDedicatedHostResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.DedicatedHostResource GetDedicatedHostResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.DedicatedHostResource GetDedicatedHostResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetDedicatedHostResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDedicatedHostResource (id As ResourceIdentifier) As DedicatedHostResource" />
      <MemberSignature Language="F#" Value="abstract member GetDedicatedHostResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.DedicatedHostResource&#xA;override this.GetDedicatedHostResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.DedicatedHostResource" Usage="mockableComputeArmClient.GetDedicatedHostResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.DedicatedHostResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.DedicatedHostResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.DedicatedHostResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.DedicatedHostResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.DedicatedHostResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDiskAccessResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.DiskAccessResource GetDiskAccessResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.DiskAccessResource GetDiskAccessResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetDiskAccessResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDiskAccessResource (id As ResourceIdentifier) As DiskAccessResource" />
      <MemberSignature Language="F#" Value="abstract member GetDiskAccessResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.DiskAccessResource&#xA;override this.GetDiskAccessResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.DiskAccessResource" Usage="mockableComputeArmClient.GetDiskAccessResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.DiskAccessResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.DiskAccessResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.DiskAccessResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.DiskAccessResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.DiskAccessResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDiskEncryptionSetResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.DiskEncryptionSetResource GetDiskEncryptionSetResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.DiskEncryptionSetResource GetDiskEncryptionSetResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetDiskEncryptionSetResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDiskEncryptionSetResource (id As ResourceIdentifier) As DiskEncryptionSetResource" />
      <MemberSignature Language="F#" Value="abstract member GetDiskEncryptionSetResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.DiskEncryptionSetResource&#xA;override this.GetDiskEncryptionSetResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.DiskEncryptionSetResource" Usage="mockableComputeArmClient.GetDiskEncryptionSetResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.DiskEncryptionSetResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.DiskEncryptionSetResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.DiskEncryptionSetResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.DiskEncryptionSetResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.DiskEncryptionSetResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDiskImageResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.DiskImageResource GetDiskImageResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.DiskImageResource GetDiskImageResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetDiskImageResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDiskImageResource (id As ResourceIdentifier) As DiskImageResource" />
      <MemberSignature Language="F#" Value="abstract member GetDiskImageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.DiskImageResource&#xA;override this.GetDiskImageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.DiskImageResource" Usage="mockableComputeArmClient.GetDiskImageResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.DiskImageResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.DiskImageResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.DiskImageResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.DiskImageResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.DiskImageResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDiskRestorePointResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.DiskRestorePointResource GetDiskRestorePointResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.DiskRestorePointResource GetDiskRestorePointResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetDiskRestorePointResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDiskRestorePointResource (id As ResourceIdentifier) As DiskRestorePointResource" />
      <MemberSignature Language="F#" Value="abstract member GetDiskRestorePointResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.DiskRestorePointResource&#xA;override this.GetDiskRestorePointResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.DiskRestorePointResource" Usage="mockableComputeArmClient.GetDiskRestorePointResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.DiskRestorePointResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.DiskRestorePointResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.DiskRestorePointResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.DiskRestorePointResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.DiskRestorePointResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGalleryApplicationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.GalleryApplicationResource GetGalleryApplicationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.GalleryApplicationResource GetGalleryApplicationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetGalleryApplicationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGalleryApplicationResource (id As ResourceIdentifier) As GalleryApplicationResource" />
      <MemberSignature Language="F#" Value="abstract member GetGalleryApplicationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.GalleryApplicationResource&#xA;override this.GetGalleryApplicationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.GalleryApplicationResource" Usage="mockableComputeArmClient.GetGalleryApplicationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.GalleryApplicationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.GalleryApplicationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.GalleryApplicationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.GalleryApplicationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.GalleryApplicationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGalleryApplicationVersionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.GalleryApplicationVersionResource GetGalleryApplicationVersionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.GalleryApplicationVersionResource GetGalleryApplicationVersionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetGalleryApplicationVersionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGalleryApplicationVersionResource (id As ResourceIdentifier) As GalleryApplicationVersionResource" />
      <MemberSignature Language="F#" Value="abstract member GetGalleryApplicationVersionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.GalleryApplicationVersionResource&#xA;override this.GetGalleryApplicationVersionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.GalleryApplicationVersionResource" Usage="mockableComputeArmClient.GetGalleryApplicationVersionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.GalleryApplicationVersionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.GalleryApplicationVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.GalleryApplicationVersionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.GalleryApplicationVersionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.GalleryApplicationVersionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGalleryImageResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.GalleryImageResource GetGalleryImageResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.GalleryImageResource GetGalleryImageResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetGalleryImageResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGalleryImageResource (id As ResourceIdentifier) As GalleryImageResource" />
      <MemberSignature Language="F#" Value="abstract member GetGalleryImageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.GalleryImageResource&#xA;override this.GetGalleryImageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.GalleryImageResource" Usage="mockableComputeArmClient.GetGalleryImageResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.GalleryImageResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.GalleryImageResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.GalleryImageResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.GalleryImageResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.GalleryImageResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGalleryImageVersionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.GalleryImageVersionResource GetGalleryImageVersionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.GalleryImageVersionResource GetGalleryImageVersionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetGalleryImageVersionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGalleryImageVersionResource (id As ResourceIdentifier) As GalleryImageVersionResource" />
      <MemberSignature Language="F#" Value="abstract member GetGalleryImageVersionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.GalleryImageVersionResource&#xA;override this.GetGalleryImageVersionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.GalleryImageVersionResource" Usage="mockableComputeArmClient.GetGalleryImageVersionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.GalleryImageVersionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.GalleryImageVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.GalleryImageVersionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.GalleryImageVersionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.GalleryImageVersionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGalleryResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.GalleryResource GetGalleryResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.GalleryResource GetGalleryResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetGalleryResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGalleryResource (id As ResourceIdentifier) As GalleryResource" />
      <MemberSignature Language="F#" Value="abstract member GetGalleryResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.GalleryResource&#xA;override this.GetGalleryResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.GalleryResource" Usage="mockableComputeArmClient.GetGalleryResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.GalleryResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.GalleryResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.GalleryResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.GalleryResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.GalleryResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedDiskResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.ManagedDiskResource GetManagedDiskResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.ManagedDiskResource GetManagedDiskResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetManagedDiskResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedDiskResource (id As ResourceIdentifier) As ManagedDiskResource" />
      <MemberSignature Language="F#" Value="abstract member GetManagedDiskResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.ManagedDiskResource&#xA;override this.GetManagedDiskResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.ManagedDiskResource" Usage="mockableComputeArmClient.GetManagedDiskResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.ManagedDiskResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.ManagedDiskResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.ManagedDiskResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.ManagedDiskResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.ManagedDiskResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProximityPlacementGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.ProximityPlacementGroupResource GetProximityPlacementGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.ProximityPlacementGroupResource GetProximityPlacementGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetProximityPlacementGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProximityPlacementGroupResource (id As ResourceIdentifier) As ProximityPlacementGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetProximityPlacementGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.ProximityPlacementGroupResource&#xA;override this.GetProximityPlacementGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.ProximityPlacementGroupResource" Usage="mockableComputeArmClient.GetProximityPlacementGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.ProximityPlacementGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.ProximityPlacementGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.ProximityPlacementGroupResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.ProximityPlacementGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.ProximityPlacementGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRestorePointGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.RestorePointGroupResource GetRestorePointGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.RestorePointGroupResource GetRestorePointGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetRestorePointGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRestorePointGroupResource (id As ResourceIdentifier) As RestorePointGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetRestorePointGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.RestorePointGroupResource&#xA;override this.GetRestorePointGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.RestorePointGroupResource" Usage="mockableComputeArmClient.GetRestorePointGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.RestorePointGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.RestorePointGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.RestorePointGroupResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.RestorePointGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.RestorePointGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRestorePointResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.RestorePointResource GetRestorePointResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.RestorePointResource GetRestorePointResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetRestorePointResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRestorePointResource (id As ResourceIdentifier) As RestorePointResource" />
      <MemberSignature Language="F#" Value="abstract member GetRestorePointResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.RestorePointResource&#xA;override this.GetRestorePointResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.RestorePointResource" Usage="mockableComputeArmClient.GetRestorePointResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.RestorePointResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.RestorePointResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.RestorePointResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.RestorePointResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.RestorePointResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSharedGalleryImageResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.SharedGalleryImageResource GetSharedGalleryImageResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.SharedGalleryImageResource GetSharedGalleryImageResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetSharedGalleryImageResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSharedGalleryImageResource (id As ResourceIdentifier) As SharedGalleryImageResource" />
      <MemberSignature Language="F#" Value="abstract member GetSharedGalleryImageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.SharedGalleryImageResource&#xA;override this.GetSharedGalleryImageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.SharedGalleryImageResource" Usage="mockableComputeArmClient.GetSharedGalleryImageResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.SharedGalleryImageResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.SharedGalleryImageResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.SharedGalleryImageResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.SharedGalleryImageResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.SharedGalleryImageResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSharedGalleryImageVersionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.SharedGalleryImageVersionResource GetSharedGalleryImageVersionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.SharedGalleryImageVersionResource GetSharedGalleryImageVersionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetSharedGalleryImageVersionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSharedGalleryImageVersionResource (id As ResourceIdentifier) As SharedGalleryImageVersionResource" />
      <MemberSignature Language="F#" Value="abstract member GetSharedGalleryImageVersionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.SharedGalleryImageVersionResource&#xA;override this.GetSharedGalleryImageVersionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.SharedGalleryImageVersionResource" Usage="mockableComputeArmClient.GetSharedGalleryImageVersionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.SharedGalleryImageVersionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.SharedGalleryImageVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.SharedGalleryImageVersionResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.SharedGalleryImageVersionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.SharedGalleryImageVersionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSharedGalleryResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.SharedGalleryResource GetSharedGalleryResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.SharedGalleryResource GetSharedGalleryResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetSharedGalleryResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSharedGalleryResource (id As ResourceIdentifier) As SharedGalleryResource" />
      <MemberSignature Language="F#" Value="abstract member GetSharedGalleryResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.SharedGalleryResource&#xA;override this.GetSharedGalleryResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.SharedGalleryResource" Usage="mockableComputeArmClient.GetSharedGalleryResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.SharedGalleryResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.SharedGalleryResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.SharedGalleryResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.SharedGalleryResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.SharedGalleryResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSnapshotResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.SnapshotResource GetSnapshotResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.SnapshotResource GetSnapshotResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetSnapshotResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSnapshotResource (id As ResourceIdentifier) As SnapshotResource" />
      <MemberSignature Language="F#" Value="abstract member GetSnapshotResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.SnapshotResource&#xA;override this.GetSnapshotResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.SnapshotResource" Usage="mockableComputeArmClient.GetSnapshotResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.SnapshotResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.SnapshotResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.SnapshotResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.SnapshotResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.SnapshotResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSshPublicKeyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.SshPublicKeyResource GetSshPublicKeyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.SshPublicKeyResource GetSshPublicKeyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetSshPublicKeyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSshPublicKeyResource (id As ResourceIdentifier) As SshPublicKeyResource" />
      <MemberSignature Language="F#" Value="abstract member GetSshPublicKeyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.SshPublicKeyResource&#xA;override this.GetSshPublicKeyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.SshPublicKeyResource" Usage="mockableComputeArmClient.GetSshPublicKeyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.SshPublicKeyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.SshPublicKeyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.SshPublicKeyResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.SshPublicKeyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.SshPublicKeyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachineExtensionImageResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.VirtualMachineExtensionImageResource GetVirtualMachineExtensionImageResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.VirtualMachineExtensionImageResource GetVirtualMachineExtensionImageResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetVirtualMachineExtensionImageResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualMachineExtensionImageResource (id As ResourceIdentifier) As VirtualMachineExtensionImageResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualMachineExtensionImageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.VirtualMachineExtensionImageResource&#xA;override this.GetVirtualMachineExtensionImageResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.VirtualMachineExtensionImageResource" Usage="mockableComputeArmClient.GetVirtualMachineExtensionImageResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.VirtualMachineExtensionImageResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.VirtualMachineExtensionImageResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.VirtualMachineExtensionImageResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.VirtualMachineExtensionImageResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.VirtualMachineExtensionImageResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachineExtensionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.VirtualMachineExtensionResource GetVirtualMachineExtensionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.VirtualMachineExtensionResource GetVirtualMachineExtensionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetVirtualMachineExtensionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualMachineExtensionResource (id As ResourceIdentifier) As VirtualMachineExtensionResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualMachineExtensionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.VirtualMachineExtensionResource&#xA;override this.GetVirtualMachineExtensionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.VirtualMachineExtensionResource" Usage="mockableComputeArmClient.GetVirtualMachineExtensionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.VirtualMachineExtensionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.VirtualMachineExtensionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.VirtualMachineExtensionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.VirtualMachineExtensionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.VirtualMachineExtensionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachineResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.VirtualMachineResource GetVirtualMachineResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.VirtualMachineResource GetVirtualMachineResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetVirtualMachineResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualMachineResource (id As ResourceIdentifier) As VirtualMachineResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualMachineResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.VirtualMachineResource&#xA;override this.GetVirtualMachineResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.VirtualMachineResource" Usage="mockableComputeArmClient.GetVirtualMachineResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.VirtualMachineResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.VirtualMachineResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.VirtualMachineResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.VirtualMachineResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.VirtualMachineResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachineRunCommandResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.VirtualMachineRunCommandResource GetVirtualMachineRunCommandResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.VirtualMachineRunCommandResource GetVirtualMachineRunCommandResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetVirtualMachineRunCommandResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualMachineRunCommandResource (id As ResourceIdentifier) As VirtualMachineRunCommandResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualMachineRunCommandResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.VirtualMachineRunCommandResource&#xA;override this.GetVirtualMachineRunCommandResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.VirtualMachineRunCommandResource" Usage="mockableComputeArmClient.GetVirtualMachineRunCommandResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.VirtualMachineRunCommandResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.VirtualMachineRunCommandResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.VirtualMachineRunCommandResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.VirtualMachineRunCommandResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.VirtualMachineRunCommandResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachineScaleSetExtensionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.VirtualMachineScaleSetExtensionResource GetVirtualMachineScaleSetExtensionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.VirtualMachineScaleSetExtensionResource GetVirtualMachineScaleSetExtensionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetVirtualMachineScaleSetExtensionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualMachineScaleSetExtensionResource (id As ResourceIdentifier) As VirtualMachineScaleSetExtensionResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualMachineScaleSetExtensionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.VirtualMachineScaleSetExtensionResource&#xA;override this.GetVirtualMachineScaleSetExtensionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.VirtualMachineScaleSetExtensionResource" Usage="mockableComputeArmClient.GetVirtualMachineScaleSetExtensionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.VirtualMachineScaleSetExtensionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.VirtualMachineScaleSetExtensionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.VirtualMachineScaleSetExtensionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.VirtualMachineScaleSetExtensionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.VirtualMachineScaleSetExtensionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachineScaleSetResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.VirtualMachineScaleSetResource GetVirtualMachineScaleSetResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.VirtualMachineScaleSetResource GetVirtualMachineScaleSetResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetVirtualMachineScaleSetResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualMachineScaleSetResource (id As ResourceIdentifier) As VirtualMachineScaleSetResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualMachineScaleSetResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.VirtualMachineScaleSetResource&#xA;override this.GetVirtualMachineScaleSetResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.VirtualMachineScaleSetResource" Usage="mockableComputeArmClient.GetVirtualMachineScaleSetResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.VirtualMachineScaleSetResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.VirtualMachineScaleSetResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.VirtualMachineScaleSetResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.VirtualMachineScaleSetResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.VirtualMachineScaleSetResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachineScaleSetRollingUpgradeResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.VirtualMachineScaleSetRollingUpgradeResource GetVirtualMachineScaleSetRollingUpgradeResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.VirtualMachineScaleSetRollingUpgradeResource GetVirtualMachineScaleSetRollingUpgradeResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetVirtualMachineScaleSetRollingUpgradeResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualMachineScaleSetRollingUpgradeResource (id As ResourceIdentifier) As VirtualMachineScaleSetRollingUpgradeResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualMachineScaleSetRollingUpgradeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.VirtualMachineScaleSetRollingUpgradeResource&#xA;override this.GetVirtualMachineScaleSetRollingUpgradeResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.VirtualMachineScaleSetRollingUpgradeResource" Usage="mockableComputeArmClient.GetVirtualMachineScaleSetRollingUpgradeResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.VirtualMachineScaleSetRollingUpgradeResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.VirtualMachineScaleSetRollingUpgradeResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.VirtualMachineScaleSetRollingUpgradeResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.VirtualMachineScaleSetRollingUpgradeResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.VirtualMachineScaleSetRollingUpgradeResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachineScaleSetVmExtensionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.VirtualMachineScaleSetVmExtensionResource GetVirtualMachineScaleSetVmExtensionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.VirtualMachineScaleSetVmExtensionResource GetVirtualMachineScaleSetVmExtensionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetVirtualMachineScaleSetVmExtensionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualMachineScaleSetVmExtensionResource (id As ResourceIdentifier) As VirtualMachineScaleSetVmExtensionResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualMachineScaleSetVmExtensionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.VirtualMachineScaleSetVmExtensionResource&#xA;override this.GetVirtualMachineScaleSetVmExtensionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.VirtualMachineScaleSetVmExtensionResource" Usage="mockableComputeArmClient.GetVirtualMachineScaleSetVmExtensionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.VirtualMachineScaleSetVmExtensionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.VirtualMachineScaleSetVmExtensionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.VirtualMachineScaleSetVmExtensionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.VirtualMachineScaleSetVmExtensionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.VirtualMachineScaleSetVmExtensionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachineScaleSetVmResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.VirtualMachineScaleSetVmResource GetVirtualMachineScaleSetVmResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.VirtualMachineScaleSetVmResource GetVirtualMachineScaleSetVmResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetVirtualMachineScaleSetVmResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualMachineScaleSetVmResource (id As ResourceIdentifier) As VirtualMachineScaleSetVmResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualMachineScaleSetVmResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.VirtualMachineScaleSetVmResource&#xA;override this.GetVirtualMachineScaleSetVmResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.VirtualMachineScaleSetVmResource" Usage="mockableComputeArmClient.GetVirtualMachineScaleSetVmResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.VirtualMachineScaleSetVmResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.VirtualMachineScaleSetVmResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.VirtualMachineScaleSetVmResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.VirtualMachineScaleSetVmResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.VirtualMachineScaleSetVmResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachineScaleSetVmRunCommandResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Compute.VirtualMachineScaleSetVmRunCommandResource GetVirtualMachineScaleSetVmRunCommandResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Compute.VirtualMachineScaleSetVmRunCommandResource GetVirtualMachineScaleSetVmRunCommandResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Compute.Mocking.MockableComputeArmClient.GetVirtualMachineScaleSetVmRunCommandResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualMachineScaleSetVmRunCommandResource (id As ResourceIdentifier) As VirtualMachineScaleSetVmRunCommandResource" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualMachineScaleSetVmRunCommandResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.VirtualMachineScaleSetVmRunCommandResource&#xA;override this.GetVirtualMachineScaleSetVmRunCommandResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Compute.VirtualMachineScaleSetVmRunCommandResource" Usage="mockableComputeArmClient.GetVirtualMachineScaleSetVmRunCommandResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Compute</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Compute.VirtualMachineScaleSetVmRunCommandResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Compute.VirtualMachineScaleSetVmRunCommandResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Compute.VirtualMachineScaleSetVmRunCommandResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Compute.VirtualMachineScaleSetVmRunCommandResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Compute.VirtualMachineScaleSetVmRunCommandResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
