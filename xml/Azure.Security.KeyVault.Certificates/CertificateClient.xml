<Type Name="CertificateClient" FullName="Azure.Security.KeyVault.Certificates.CertificateClient">
  <TypeSignature Language="C#" Value="public class CertificateClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CertificateClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Security.KeyVault.Certificates.CertificateClient" />
  <TypeSignature Language="VB.NET" Value="Public Class CertificateClient" />
  <TypeSignature Language="F#" Value="type CertificateClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The CertificateClient provides synchronous and asynchronous methods to manage <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" />s in Azure Key Vault. The client
            supports creating, retrieving, updating, deleting, purging, backing up, restoring, and listing the <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" />, along with managing
            certificate <see cref="T:Azure.Security.KeyVault.Certificates.CertificateIssuer" />s and <see cref="T:Azure.Security.KeyVault.Certificates.CertificateContact" />s. The client also supports listing <see cref="T:Azure.Security.KeyVault.Certificates.DeletedCertificate" /> for a soft delete
            enabled key vault.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CertificateClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Security.KeyVault.Certificates.CertificateClient" /> class for mocking.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CertificateClient (Uri vaultUri, Azure.Core.TokenCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri vaultUri, class Azure.Core.TokenCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (vaultUri As Uri, credential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Security.KeyVault.Certificates.CertificateClient : Uri * Azure.Core.TokenCredential -&gt; Azure.Security.KeyVault.Certificates.CertificateClient" Usage="new Azure.Security.KeyVault.Certificates.CertificateClient (vaultUri, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="vaultUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="vaultUri">A <see cref="T:System.Uri" /> to the vault on which the client operates. Appears as "DNS Name" in the Azure portal.</param>
        <param name="credential">A <see cref="T:Azure.Core.TokenCredential" /> used to authenticate requests to the vault, such as DefaultAzureCredential.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Security.KeyVault.Certificates.CertificateClient" /> class for the specified vault.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultUri" /> or <paramref name="credential" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CertificateClient (Uri vaultUri, Azure.Core.TokenCredential credential, Azure.Security.KeyVault.Certificates.CertificateClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri vaultUri, class Azure.Core.TokenCredential credential, class Azure.Security.KeyVault.Certificates.CertificateClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Security.KeyVault.Certificates.CertificateClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (vaultUri As Uri, credential As TokenCredential, options As CertificateClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Security.KeyVault.Certificates.CertificateClient : Uri * Azure.Core.TokenCredential * Azure.Security.KeyVault.Certificates.CertificateClientOptions -&gt; Azure.Security.KeyVault.Certificates.CertificateClient" Usage="new Azure.Security.KeyVault.Certificates.CertificateClient (vaultUri, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="vaultUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Security.KeyVault.Certificates.CertificateClientOptions" />
      </Parameters>
      <Docs>
        <param name="vaultUri">A <see cref="T:System.Uri" /> to the vault on which the client operates. Appears as "DNS Name" in the Azure portal.</param>
        <param name="credential">A <see cref="T:Azure.Core.TokenCredential" /> used to authenticate requests to the vault, such as DefaultAzureCredential.</param>
        <param name="options">
          <see cref="T:Azure.Security.KeyVault.Certificates.CertificateClientOptions" /> that allow to configure the management of the request sent to Key Vault.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Security.KeyVault.Certificates.CertificateClient" /> class for the specified vault.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultUri" /> or <paramref name="credential" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="BackupCertificate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;byte[]&gt; BackupCertificate (string certificateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;unsigned int8[]&gt; BackupCertificate(string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.BackupCertificate(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BackupCertificate (certificateName As String, Optional cancellationToken As CancellationToken = null) As Response(Of Byte())" />
      <MemberSignature Language="F#" Value="abstract member BackupCertificate : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;byte[]&gt;&#xA;override this.BackupCertificate : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;byte[]&gt;" Usage="certificateClient.BackupCertificate (certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateName">The name of the <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" /> to backup.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates a backup of the certificate, including all versions, which can be used to restore the certificate to the state at the time of the backup in the case the certificate is deleted, or to
            restore the certificate to a different vault in the same region as the original value. This operation requires the certificate/backup permission.
            </summary>
        <returns>The certificate backup.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="BackupCertificateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;byte[]&gt;&gt; BackupCertificateAsync (string certificateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;unsigned int8[]&gt;&gt; BackupCertificateAsync(string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.BackupCertificateAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BackupCertificateAsync (certificateName As String, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of Byte()))" />
      <MemberSignature Language="F#" Value="abstract member BackupCertificateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;byte[]&gt;&gt;&#xA;override this.BackupCertificateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;byte[]&gt;&gt;" Usage="certificateClient.BackupCertificateAsync (certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Byte[]&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateName">The name of the <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" /> to backup.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates a backup of the certificate, including all versions, which can be used to restore the certificate to the state at the time of the backup in the case the certificate is deleted, or to
            restore the certificate to a different vault in the same region as the original value. This operation requires the certificate/backup permission.
            </summary>
        <returns>The certificate backup.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateIssuer">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt; CreateIssuer (Azure.Security.KeyVault.Certificates.CertificateIssuer issuer, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Certificates.CertificateIssuer&gt; CreateIssuer(class Azure.Security.KeyVault.Certificates.CertificateIssuer issuer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.CreateIssuer(Azure.Security.KeyVault.Certificates.CertificateIssuer,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIssuer (issuer As CertificateIssuer, Optional cancellationToken As CancellationToken = null) As Response(Of CertificateIssuer)" />
      <MemberSignature Language="F#" Value="abstract member CreateIssuer : Azure.Security.KeyVault.Certificates.CertificateIssuer * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;&#xA;override this.CreateIssuer : Azure.Security.KeyVault.Certificates.CertificateIssuer * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;" Usage="certificateClient.CreateIssuer (issuer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuer" Type="Azure.Security.KeyVault.Certificates.CertificateIssuer" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="issuer">The <see cref="T:Azure.Security.KeyVault.Certificates.CertificateIssuer" /> to add or replace in the vault.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates or replaces a certificate <see cref="T:Azure.Security.KeyVault.Certificates.CertificateIssuer" /> in the key vault. This operation requires the certificates/setissuers permission.
            </summary>
        <returns>The created certificate issuer.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:Azure.Security.KeyVault.Certificates.CertificateIssuer.Name" /> of <paramref name="issuer" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="issuer" /> or <see cref="P:Azure.Security.KeyVault.Certificates.CertificateIssuer.Name" /> of <paramref name="issuer" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateIssuerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;&gt; CreateIssuerAsync (Azure.Security.KeyVault.Certificates.CertificateIssuer issuer, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;&gt; CreateIssuerAsync(class Azure.Security.KeyVault.Certificates.CertificateIssuer issuer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.CreateIssuerAsync(Azure.Security.KeyVault.Certificates.CertificateIssuer,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIssuerAsync (issuer As CertificateIssuer, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of CertificateIssuer))" />
      <MemberSignature Language="F#" Value="abstract member CreateIssuerAsync : Azure.Security.KeyVault.Certificates.CertificateIssuer * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;&gt;&#xA;override this.CreateIssuerAsync : Azure.Security.KeyVault.Certificates.CertificateIssuer * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;&gt;" Usage="certificateClient.CreateIssuerAsync (issuer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuer" Type="Azure.Security.KeyVault.Certificates.CertificateIssuer" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="issuer">The <see cref="T:Azure.Security.KeyVault.Certificates.CertificateIssuer" /> to add or replace in the vault.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates or replaces a certificate <see cref="T:Azure.Security.KeyVault.Certificates.CertificateIssuer" /> in the key vault. This operation requires the certificates/setissuers permission.
            </summary>
        <returns>The created certificate issuer.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:Azure.Security.KeyVault.Certificates.CertificateIssuer.Name" /> of <paramref name="issuer" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="issuer" /> or <see cref="P:Azure.Security.KeyVault.Certificates.CertificateIssuer.Name" /> of <paramref name="issuer" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteContacts">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.Collections.Generic.IList&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt;&gt; DeleteContacts (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.Collections.Generic.IList`1&lt;class Azure.Security.KeyVault.Certificates.CertificateContact&gt;&gt; DeleteContacts(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.DeleteContacts(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteContacts (Optional cancellationToken As CancellationToken = null) As Response(Of IList(Of CertificateContact))" />
      <MemberSignature Language="F#" Value="abstract member DeleteContacts : System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IList&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt;&gt;&#xA;override this.DeleteContacts : System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IList&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt;&gt;" Usage="certificateClient.DeleteContacts cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Collections.Generic.IList&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Deletes all certificate <see cref="T:Azure.Security.KeyVault.Certificates.CertificateContact" />s from the key vault, replacing any existing contacts. This operation requires the certificates/managecontacts permission.
            </summary>
        <returns>The certificate contacts deleted from the vault.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteContactsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IList&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt;&gt;&gt; DeleteContactsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.Collections.Generic.IList`1&lt;class Azure.Security.KeyVault.Certificates.CertificateContact&gt;&gt;&gt; DeleteContactsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.DeleteContactsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteContactsAsync (Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of IList(Of CertificateContact)))" />
      <MemberSignature Language="F#" Value="abstract member DeleteContactsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IList&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt;&gt;&gt;&#xA;override this.DeleteContactsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IList&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt;&gt;&gt;" Usage="certificateClient.DeleteContactsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IList&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Deletes all certificate <see cref="T:Azure.Security.KeyVault.Certificates.CertificateContact" />s from the key vault, replacing any existing contacts. This operation requires the certificates/managecontacts permission.
            </summary>
        <returns>The certificate contacts deleted from the vault.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteIssuer">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt; DeleteIssuer (string issuerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Certificates.CertificateIssuer&gt; DeleteIssuer(string issuerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.DeleteIssuer(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIssuer (issuerName As String, Optional cancellationToken As CancellationToken = null) As Response(Of CertificateIssuer)" />
      <MemberSignature Language="F#" Value="abstract member DeleteIssuer : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;&#xA;override this.DeleteIssuer : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;" Usage="certificateClient.DeleteIssuer (issuerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="issuerName">The name of the <see cref="T:Azure.Security.KeyVault.Certificates.CertificateIssuer" /> to delete.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Deletes the specified certificate <see cref="T:Azure.Security.KeyVault.Certificates.CertificateIssuer" /> from the vault. This operation requires the certificates/deleteissuers permission.
            </summary>
        <returns>The deleted certificate issuer.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="issuerName" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="issuerName" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteIssuerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;&gt; DeleteIssuerAsync (string issuerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;&gt; DeleteIssuerAsync(string issuerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.DeleteIssuerAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIssuerAsync (issuerName As String, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of CertificateIssuer))" />
      <MemberSignature Language="F#" Value="abstract member DeleteIssuerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;&gt;&#xA;override this.DeleteIssuerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;&gt;" Usage="certificateClient.DeleteIssuerAsync (issuerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="issuerName">The name of the <see cref="T:Azure.Security.KeyVault.Certificates.CertificateIssuer" /> to delete.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Deletes the specified certificate <see cref="T:Azure.Security.KeyVault.Certificates.CertificateIssuer" /> from the vault. This operation requires the certificates/deleteissuers permission.
            </summary>
        <returns>The deleted certificate issuer.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="issuerName" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="issuerName" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCertificate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt; GetCertificate (string certificateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt; GetCertificate(string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetCertificate(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCertificate (certificateName As String, Optional cancellationToken As CancellationToken = null) As Response(Of KeyVaultCertificateWithPolicy)" />
      <MemberSignature Language="F#" Value="abstract member GetCertificate : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;&#xA;override this.GetCertificate : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;" Usage="certificateClient.GetCertificate (certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateName">The name of the <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" /> to retrieve.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Returns the latest version of the <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" /> along with its <see cref="T:Azure.Security.KeyVault.Certificates.CertificatePolicy" />. This operation requires the certificates/get permission.
            </summary>
        <returns>A response containing the certificate and policy as a <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy" /> instance.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCertificateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;&gt; GetCertificateAsync (string certificateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;&gt; GetCertificateAsync(string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetCertificateAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCertificateAsync (certificateName As String, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of KeyVaultCertificateWithPolicy))" />
      <MemberSignature Language="F#" Value="abstract member GetCertificateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;&gt;&#xA;override this.GetCertificateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;&gt;" Usage="certificateClient.GetCertificateAsync (certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateName">The name of the <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" /> to retrieve.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Returns the latest version of the <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" /> along with its <see cref="T:Azure.Security.KeyVault.Certificates.CertificatePolicy" />. This operation requires the certificates/get permission.
            </summary>
        <returns>A response containing the certificate and policy as a <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy" /> instance.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCertificateOperation">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.KeyVault.Certificates.CertificateOperation GetCertificateOperation (string certificateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.KeyVault.Certificates.CertificateOperation GetCertificateOperation(string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetCertificateOperation(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCertificateOperation (certificateName As String, Optional cancellationToken As CancellationToken = null) As CertificateOperation" />
      <MemberSignature Language="F#" Value="abstract member GetCertificateOperation : string * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Certificates.CertificateOperation&#xA;override this.GetCertificateOperation : string * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Certificates.CertificateOperation" Usage="certificateClient.GetCertificateOperation (certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Certificates.CertificateOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateName">The name of the certificate for which an operation is pending.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets a pending <see cref="T:Azure.Security.KeyVault.Certificates.CertificateOperation" /> from the key vault. This operation requires the certificates/get permission.
            </summary>
        <returns>The given certificate's current pending operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCertificateOperationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Certificates.CertificateOperation&gt; GetCertificateOperationAsync (string certificateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.KeyVault.Certificates.CertificateOperation&gt; GetCertificateOperationAsync(string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetCertificateOperationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCertificateOperationAsync (certificateName As String, Optional cancellationToken As CancellationToken = null) As Task(Of CertificateOperation)" />
      <MemberSignature Language="F#" Value="abstract member GetCertificateOperationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Certificates.CertificateOperation&gt;&#xA;override this.GetCertificateOperationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Certificates.CertificateOperation&gt;" Usage="certificateClient.GetCertificateOperationAsync (certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Certificates.CertificateOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateName">The name of the certificate for which an operation is pending.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets a pending <see cref="T:Azure.Security.KeyVault.Certificates.CertificateOperation" /> from the key vault. This operation requires the certificates/get permission.
            </summary>
        <returns>The given certificate's current pending operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCertificatePolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificatePolicy&gt; GetCertificatePolicy (string certificateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Certificates.CertificatePolicy&gt; GetCertificatePolicy(string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetCertificatePolicy(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCertificatePolicy (certificateName As String, Optional cancellationToken As CancellationToken = null) As Response(Of CertificatePolicy)" />
      <MemberSignature Language="F#" Value="abstract member GetCertificatePolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificatePolicy&gt;&#xA;override this.GetCertificatePolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificatePolicy&gt;" Usage="certificateClient.GetCertificatePolicy (certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificatePolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateName">The name of the certificate whose policy should be retrieved.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Retrieves the <see cref="T:Azure.Security.KeyVault.Certificates.CertificatePolicy" /> of the specified certificate. This operation requires the certificate/get permission.
            </summary>
        <returns>The <see cref="T:Azure.Security.KeyVault.Certificates.CertificatePolicy" /> of the specified certificate.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCertificatePolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificatePolicy&gt;&gt; GetCertificatePolicyAsync (string certificateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Certificates.CertificatePolicy&gt;&gt; GetCertificatePolicyAsync(string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetCertificatePolicyAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCertificatePolicyAsync (certificateName As String, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of CertificatePolicy))" />
      <MemberSignature Language="F#" Value="abstract member GetCertificatePolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificatePolicy&gt;&gt;&#xA;override this.GetCertificatePolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificatePolicy&gt;&gt;" Usage="certificateClient.GetCertificatePolicyAsync (certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificatePolicy&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateName">The name of the certificate whose policy should be retrieved.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Retrieves the <see cref="T:Azure.Security.KeyVault.Certificates.CertificatePolicy" /> of the specified certificate. This operation requires the certificate/get permission.
            </summary>
        <returns>The <see cref="T:Azure.Security.KeyVault.Certificates.CertificatePolicy" /> of the specified certificate.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCertificateVersion">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificate&gt; GetCertificateVersion (string certificateName, string version, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Certificates.KeyVaultCertificate&gt; GetCertificateVersion(string certificateName, string version, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetCertificateVersion(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCertificateVersion (certificateName As String, version As String, Optional cancellationToken As CancellationToken = null) As Response(Of KeyVaultCertificate)" />
      <MemberSignature Language="F#" Value="abstract member GetCertificateVersion : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificate&gt;&#xA;override this.GetCertificateVersion : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificate&gt;" Usage="certificateClient.GetCertificateVersion (certificateName, version, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateName">The name of the <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" /> to retrieve.</param>
        <param name="version">The version of the <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" /> to retrieve.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets a specific version of the <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" />. This operation requires the certificates/get permission.
            </summary>
        <returns>The requested <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCertificateVersionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificate&gt;&gt; GetCertificateVersionAsync (string certificateName, string version, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Certificates.KeyVaultCertificate&gt;&gt; GetCertificateVersionAsync(string certificateName, string version, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetCertificateVersionAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCertificateVersionAsync (certificateName As String, version As String, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of KeyVaultCertificate))" />
      <MemberSignature Language="F#" Value="abstract member GetCertificateVersionAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificate&gt;&gt;&#xA;override this.GetCertificateVersionAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificate&gt;&gt;" Usage="certificateClient.GetCertificateVersionAsync (certificateName, version, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificate&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateName">The name of the <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" /> to retrieve.</param>
        <param name="version">The version of the <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" /> to retrieve.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets a specific version of the <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" />. This operation requires the certificates/get permission.
            </summary>
        <returns>The requested <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetContacts">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.Collections.Generic.IList&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt;&gt; GetContacts (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.Collections.Generic.IList`1&lt;class Azure.Security.KeyVault.Certificates.CertificateContact&gt;&gt; GetContacts(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetContacts(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContacts (Optional cancellationToken As CancellationToken = null) As Response(Of IList(Of CertificateContact))" />
      <MemberSignature Language="F#" Value="abstract member GetContacts : System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IList&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt;&gt;&#xA;override this.GetContacts : System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IList&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt;&gt;" Usage="certificateClient.GetContacts cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Collections.Generic.IList&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets the certificate <see cref="T:Azure.Security.KeyVault.Certificates.CertificateContact" />s for the key vaults. This operation requires the certificates/managecontacts permission.
            </summary>
        <returns>The certificate contacts of the vault.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContactsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IList&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt;&gt;&gt; GetContactsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.Collections.Generic.IList`1&lt;class Azure.Security.KeyVault.Certificates.CertificateContact&gt;&gt;&gt; GetContactsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetContactsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContactsAsync (Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of IList(Of CertificateContact)))" />
      <MemberSignature Language="F#" Value="abstract member GetContactsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IList&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt;&gt;&gt;&#xA;override this.GetContactsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IList&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt;&gt;&gt;" Usage="certificateClient.GetContactsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IList&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets the certificate <see cref="T:Azure.Security.KeyVault.Certificates.CertificateContact" />s for the key vaults. This operation requires the certificates/managecontacts permission.
            </summary>
        <returns>The certificate contacts of the vault.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedCertificate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Certificates.DeletedCertificate&gt; GetDeletedCertificate (string certificateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Certificates.DeletedCertificate&gt; GetDeletedCertificate(string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetDeletedCertificate(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeletedCertificate (certificateName As String, Optional cancellationToken As CancellationToken = null) As Response(Of DeletedCertificate)" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedCertificate : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Certificates.DeletedCertificate&gt;&#xA;override this.GetDeletedCertificate : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Certificates.DeletedCertificate&gt;" Usage="certificateClient.GetDeletedCertificate (certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Certificates.DeletedCertificate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateName">The name of the <see cref="T:Azure.Security.KeyVault.Certificates.DeletedCertificate" />.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Retrieves information about the specified deleted <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" />. This operation is only applicable in vaults enabled for soft delete, and
            requires the certificates/get permission.
            </summary>
        <returns>The details of the <see cref="T:Azure.Security.KeyVault.Certificates.DeletedCertificate" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedCertificateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.DeletedCertificate&gt;&gt; GetDeletedCertificateAsync (string certificateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Certificates.DeletedCertificate&gt;&gt; GetDeletedCertificateAsync(string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetDeletedCertificateAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeletedCertificateAsync (certificateName As String, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of DeletedCertificate))" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedCertificateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.DeletedCertificate&gt;&gt;&#xA;override this.GetDeletedCertificateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.DeletedCertificate&gt;&gt;" Usage="certificateClient.GetDeletedCertificateAsync (certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.DeletedCertificate&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateName">The name of the <see cref="T:Azure.Security.KeyVault.Certificates.DeletedCertificate" />.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Retrieves information about the specified deleted <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" />. This operation is only applicable in vaults enabled for soft delete, and
            requires the certificates/get permission.
            </summary>
        <returns>The details of the <see cref="T:Azure.Security.KeyVault.Certificates.DeletedCertificate" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedCertificates">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Security.KeyVault.Certificates.DeletedCertificate&gt; GetDeletedCertificates (bool includePending = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Security.KeyVault.Certificates.DeletedCertificate&gt; GetDeletedCertificates(bool includePending, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetDeletedCertificates(System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeletedCertificates (Optional includePending As Boolean = false, Optional cancellationToken As CancellationToken = null) As Pageable(Of DeletedCertificate)" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedCertificates : bool * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Security.KeyVault.Certificates.DeletedCertificate&gt;&#xA;override this.GetDeletedCertificates : bool * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Security.KeyVault.Certificates.DeletedCertificate&gt;" Usage="certificateClient.GetDeletedCertificates (includePending, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Security.KeyVault.Certificates.DeletedCertificate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePending" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="includePending">Specifies whether to include certificates in a delete pending state as well.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Enumerates the deleted certificates in the vault. This operation is only available on soft delete-enabled vaults, and requires the certificates/list/get permissions.
            </summary>
        <returns>An enumerable collection of deleted certificates.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedCertificatesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Security.KeyVault.Certificates.DeletedCertificate&gt; GetDeletedCertificatesAsync (bool includePending = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Security.KeyVault.Certificates.DeletedCertificate&gt; GetDeletedCertificatesAsync(bool includePending, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetDeletedCertificatesAsync(System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeletedCertificatesAsync (Optional includePending As Boolean = false, Optional cancellationToken As CancellationToken = null) As AsyncPageable(Of DeletedCertificate)" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedCertificatesAsync : bool * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Security.KeyVault.Certificates.DeletedCertificate&gt;&#xA;override this.GetDeletedCertificatesAsync : bool * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Security.KeyVault.Certificates.DeletedCertificate&gt;" Usage="certificateClient.GetDeletedCertificatesAsync (includePending, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Security.KeyVault.Certificates.DeletedCertificate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePending" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="includePending">Specifies whether to include certificates in a delete pending state as well.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Enumerates the deleted certificates in the vault. This operation is only available on soft delete-enabled vaults, and requires the certificates/list/get permissions.
            </summary>
        <returns>An enumerable collection of deleted certificates.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIssuer">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt; GetIssuer (string issuerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Certificates.CertificateIssuer&gt; GetIssuer(string issuerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetIssuer(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIssuer (issuerName As String, Optional cancellationToken As CancellationToken = null) As Response(Of CertificateIssuer)" />
      <MemberSignature Language="F#" Value="abstract member GetIssuer : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;&#xA;override this.GetIssuer : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;" Usage="certificateClient.GetIssuer (issuerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="issuerName">The name of the <see cref="T:Azure.Security.KeyVault.Certificates.CertificateIssuer" /> to retrieve.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Retrieves the specified certificate <see cref="T:Azure.Security.KeyVault.Certificates.CertificateIssuer" /> from the vault. This operation requires the certificates/getissuers permission.
            </summary>
        <returns>The retrieved certificate issuer.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="issuerName" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="issuerName" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIssuerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;&gt; GetIssuerAsync (string issuerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;&gt; GetIssuerAsync(string issuerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetIssuerAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIssuerAsync (issuerName As String, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of CertificateIssuer))" />
      <MemberSignature Language="F#" Value="abstract member GetIssuerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;&gt;&#xA;override this.GetIssuerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;&gt;" Usage="certificateClient.GetIssuerAsync (issuerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="issuerName">The name of the <see cref="T:Azure.Security.KeyVault.Certificates.CertificateIssuer" /> to retrieve.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Retrieves the specified certificate <see cref="T:Azure.Security.KeyVault.Certificates.CertificateIssuer" /> from the vault. This operation requires the certificates/getissuers permission.
            </summary>
        <returns>The retrieved certificate issuer.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="issuerName" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="issuerName" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesOfCertificates">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Security.KeyVault.Certificates.CertificateProperties&gt; GetPropertiesOfCertificates (bool includePending = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Security.KeyVault.Certificates.CertificateProperties&gt; GetPropertiesOfCertificates(bool includePending, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetPropertiesOfCertificates(System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesOfCertificates (Optional includePending As Boolean = false, Optional cancellationToken As CancellationToken = null) As Pageable(Of CertificateProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesOfCertificates : bool * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Security.KeyVault.Certificates.CertificateProperties&gt;&#xA;override this.GetPropertiesOfCertificates : bool * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Security.KeyVault.Certificates.CertificateProperties&gt;" Usage="certificateClient.GetPropertiesOfCertificates (includePending, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Security.KeyVault.Certificates.CertificateProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePending" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="includePending">Specifies whether to include certificates in a pending state as well.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Lists the properties of all certificates in the specified vault. You can use the returned <see cref="P:Azure.Security.KeyVault.Certificates.CertificateProperties.Name" /> in subsequent calls to <see cref="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetCertificate(System.String,System.Threading.CancellationToken)" />.
            This operation requires the certificates/list permission.
            </summary>
        <returns>An enumerable collection of certificate metadata.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesOfCertificatesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Security.KeyVault.Certificates.CertificateProperties&gt; GetPropertiesOfCertificatesAsync (bool includePending = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Security.KeyVault.Certificates.CertificateProperties&gt; GetPropertiesOfCertificatesAsync(bool includePending, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetPropertiesOfCertificatesAsync(System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesOfCertificatesAsync (Optional includePending As Boolean = false, Optional cancellationToken As CancellationToken = null) As AsyncPageable(Of CertificateProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesOfCertificatesAsync : bool * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Security.KeyVault.Certificates.CertificateProperties&gt;&#xA;override this.GetPropertiesOfCertificatesAsync : bool * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Security.KeyVault.Certificates.CertificateProperties&gt;" Usage="certificateClient.GetPropertiesOfCertificatesAsync (includePending, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Security.KeyVault.Certificates.CertificateProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePending" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="includePending">Specifies whether to include certificates in a pending state as well.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Lists the properties of all certificates in the specified vault. You can use the returned <see cref="P:Azure.Security.KeyVault.Certificates.CertificateProperties.Name" /> in subsequent calls to <see cref="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetCertificate(System.String,System.Threading.CancellationToken)" />.
            This operation requires the certificates/list permission.
            </summary>
        <returns>An enumerable collection of certificate metadata.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesOfCertificateVersions">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Security.KeyVault.Certificates.CertificateProperties&gt; GetPropertiesOfCertificateVersions (string certificateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Security.KeyVault.Certificates.CertificateProperties&gt; GetPropertiesOfCertificateVersions(string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetPropertiesOfCertificateVersions(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesOfCertificateVersions (certificateName As String, Optional cancellationToken As CancellationToken = null) As Pageable(Of CertificateProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesOfCertificateVersions : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Security.KeyVault.Certificates.CertificateProperties&gt;&#xA;override this.GetPropertiesOfCertificateVersions : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Security.KeyVault.Certificates.CertificateProperties&gt;" Usage="certificateClient.GetPropertiesOfCertificateVersions (certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Security.KeyVault.Certificates.CertificateProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateName">The name of the certificate whose versions should be retrieved.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Lists the properties of all versions of the specified certificate in the specified vault. You can use the returned <see cref="P:Azure.Security.KeyVault.Certificates.CertificateProperties.Name" /> in subsequent calls to <see cref="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetCertificateVersion(System.String,System.String,System.Threading.CancellationToken)" />.
            This operation requires the certificates/list permission.
            </summary>
        <returns>An enumerable collection of the certificate's versions.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesOfCertificateVersionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Security.KeyVault.Certificates.CertificateProperties&gt; GetPropertiesOfCertificateVersionsAsync (string certificateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Security.KeyVault.Certificates.CertificateProperties&gt; GetPropertiesOfCertificateVersionsAsync(string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetPropertiesOfCertificateVersionsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesOfCertificateVersionsAsync (certificateName As String, Optional cancellationToken As CancellationToken = null) As AsyncPageable(Of CertificateProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesOfCertificateVersionsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Security.KeyVault.Certificates.CertificateProperties&gt;&#xA;override this.GetPropertiesOfCertificateVersionsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Security.KeyVault.Certificates.CertificateProperties&gt;" Usage="certificateClient.GetPropertiesOfCertificateVersionsAsync (certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Security.KeyVault.Certificates.CertificateProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateName">The name of the certificate whose versions should be retrieved.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Lists the properties of all versions of the specified certificate in the specified vault. You can use the returned <see cref="P:Azure.Security.KeyVault.Certificates.CertificateProperties.Name" /> in subsequent calls to <see cref="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetCertificateVersion(System.String,System.String,System.Threading.CancellationToken)" />.
            This operation requires the certificates/list permission.
            </summary>
        <returns>An enumerable collection of the certificate's versions.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesOfIssuers">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Security.KeyVault.Certificates.IssuerProperties&gt; GetPropertiesOfIssuers (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Security.KeyVault.Certificates.IssuerProperties&gt; GetPropertiesOfIssuers(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetPropertiesOfIssuers(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesOfIssuers (Optional cancellationToken As CancellationToken = null) As Pageable(Of IssuerProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesOfIssuers : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Security.KeyVault.Certificates.IssuerProperties&gt;&#xA;override this.GetPropertiesOfIssuers : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Security.KeyVault.Certificates.IssuerProperties&gt;" Usage="certificateClient.GetPropertiesOfIssuers cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Security.KeyVault.Certificates.IssuerProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Lists the properties of all issuers in the specified vault. You can use the returned <see cref="P:Azure.Security.KeyVault.Certificates.CertificateProperties.Name" /> in subsequent calls to <see cref="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetIssuer(System.String,System.Threading.CancellationToken)" />.
            This operation requires the certificates/getissuers permission.
            </summary>
        <returns>An enumerable collection of certificate issuers' metadata.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesOfIssuersAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Security.KeyVault.Certificates.IssuerProperties&gt; GetPropertiesOfIssuersAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Security.KeyVault.Certificates.IssuerProperties&gt; GetPropertiesOfIssuersAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetPropertiesOfIssuersAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesOfIssuersAsync (Optional cancellationToken As CancellationToken = null) As AsyncPageable(Of IssuerProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesOfIssuersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Security.KeyVault.Certificates.IssuerProperties&gt;&#xA;override this.GetPropertiesOfIssuersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Security.KeyVault.Certificates.IssuerProperties&gt;" Usage="certificateClient.GetPropertiesOfIssuersAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Security.KeyVault.Certificates.IssuerProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Lists the properties of all issuers in the specified vault. You can use the returned <see cref="P:Azure.Security.KeyVault.Certificates.CertificateProperties.Name" /> in subsequent calls to <see cref="M:Azure.Security.KeyVault.Certificates.CertificateClient.GetIssuer(System.String,System.Threading.CancellationToken)" />.
            This operation requires the certificates/getissuers permission.
            </summary>
        <returns>An enumerable collection of certificate issuers' metadata.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportCertificate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt; ImportCertificate (Azure.Security.KeyVault.Certificates.ImportCertificateOptions importCertificateOptions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt; ImportCertificate(class Azure.Security.KeyVault.Certificates.ImportCertificateOptions importCertificateOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.ImportCertificate(Azure.Security.KeyVault.Certificates.ImportCertificateOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportCertificate (importCertificateOptions As ImportCertificateOptions, Optional cancellationToken As CancellationToken = null) As Response(Of KeyVaultCertificateWithPolicy)" />
      <MemberSignature Language="F#" Value="abstract member ImportCertificate : Azure.Security.KeyVault.Certificates.ImportCertificateOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;&#xA;override this.ImportCertificate : Azure.Security.KeyVault.Certificates.ImportCertificateOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;" Usage="certificateClient.ImportCertificate (importCertificateOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importCertificateOptions" Type="Azure.Security.KeyVault.Certificates.ImportCertificateOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="importCertificateOptions">The details of the certificate to import to the key vault.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Imports a pre-existing certificate to the key vault. The specified certificate must be in PFX or ASCII PEM format, and must contain the private key as well as the X.509 certificates. This operation requires the
            certificates/import permission.
            </summary>
        <returns>The imported certificate and policy.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:Azure.Security.KeyVault.Certificates.ImportCertificateOptions.Name" /> of <paramref name="importCertificateOptions" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="importCertificateOptions" /> or <see cref="P:Azure.Security.KeyVault.Certificates.ImportCertificateOptions.Name" /> of <paramref name="importCertificateOptions" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportCertificateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;&gt; ImportCertificateAsync (Azure.Security.KeyVault.Certificates.ImportCertificateOptions importCertificateOptions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;&gt; ImportCertificateAsync(class Azure.Security.KeyVault.Certificates.ImportCertificateOptions importCertificateOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.ImportCertificateAsync(Azure.Security.KeyVault.Certificates.ImportCertificateOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportCertificateAsync (importCertificateOptions As ImportCertificateOptions, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of KeyVaultCertificateWithPolicy))" />
      <MemberSignature Language="F#" Value="abstract member ImportCertificateAsync : Azure.Security.KeyVault.Certificates.ImportCertificateOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;&gt;&#xA;override this.ImportCertificateAsync : Azure.Security.KeyVault.Certificates.ImportCertificateOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;&gt;" Usage="certificateClient.ImportCertificateAsync (importCertificateOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importCertificateOptions" Type="Azure.Security.KeyVault.Certificates.ImportCertificateOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="importCertificateOptions">The details of the certificate to import to the key vault.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Imports a pre-existing certificate to the key vault. The specified certificate must be in PFX or ASCII PEM format, and must contain the private key as well as the X.509 certificates. This operation requires the
            certificates/import permission.
            </summary>
        <returns>The imported certificate and policy.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:Azure.Security.KeyVault.Certificates.ImportCertificateOptions.Name" /> of <paramref name="importCertificateOptions" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="importCertificateOptions" /> or <see cref="P:Azure.Security.KeyVault.Certificates.ImportCertificateOptions.Name" /> of <paramref name="importCertificateOptions" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="MergeCertificate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt; MergeCertificate (Azure.Security.KeyVault.Certificates.MergeCertificateOptions mergeCertificateOptions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt; MergeCertificate(class Azure.Security.KeyVault.Certificates.MergeCertificateOptions mergeCertificateOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.MergeCertificate(Azure.Security.KeyVault.Certificates.MergeCertificateOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MergeCertificate (mergeCertificateOptions As MergeCertificateOptions, Optional cancellationToken As CancellationToken = null) As Response(Of KeyVaultCertificateWithPolicy)" />
      <MemberSignature Language="F#" Value="abstract member MergeCertificate : Azure.Security.KeyVault.Certificates.MergeCertificateOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;&#xA;override this.MergeCertificate : Azure.Security.KeyVault.Certificates.MergeCertificateOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;" Usage="certificateClient.MergeCertificate (mergeCertificateOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeCertificateOptions" Type="Azure.Security.KeyVault.Certificates.MergeCertificateOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mergeCertificateOptions">The details of the certificate or certificate chain to merge into the key vault.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Merges a certificate or a certificate chain with a key pair currently available in the service. This operation requires the certificate/create permission.
            </summary>
        <returns>The merged certificate.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="mergeCertificateOptions" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="MergeCertificateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;&gt; MergeCertificateAsync (Azure.Security.KeyVault.Certificates.MergeCertificateOptions mergeCertificateOptions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;&gt; MergeCertificateAsync(class Azure.Security.KeyVault.Certificates.MergeCertificateOptions mergeCertificateOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.MergeCertificateAsync(Azure.Security.KeyVault.Certificates.MergeCertificateOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MergeCertificateAsync (mergeCertificateOptions As MergeCertificateOptions, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of KeyVaultCertificateWithPolicy))" />
      <MemberSignature Language="F#" Value="abstract member MergeCertificateAsync : Azure.Security.KeyVault.Certificates.MergeCertificateOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;&gt;&#xA;override this.MergeCertificateAsync : Azure.Security.KeyVault.Certificates.MergeCertificateOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;&gt;" Usage="certificateClient.MergeCertificateAsync (mergeCertificateOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeCertificateOptions" Type="Azure.Security.KeyVault.Certificates.MergeCertificateOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="mergeCertificateOptions">The details of the certificate or certificate chain to merge into the key vault.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Merges a certificate or a certificate chain with a key pair currently available in the service. This operation requires the certificate/create permission.
            </summary>
        <returns>The merged certificate.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="mergeCertificateOptions" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="PurgeDeletedCertificate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response PurgeDeletedCertificate (string certificateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response PurgeDeletedCertificate(string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.PurgeDeletedCertificate(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PurgeDeletedCertificate (certificateName As String, Optional cancellationToken As CancellationToken = null) As Response" />
      <MemberSignature Language="F#" Value="abstract member PurgeDeletedCertificate : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.PurgeDeletedCertificate : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="certificateClient.PurgeDeletedCertificate (certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateName">The name of the <see cref="T:Azure.Security.KeyVault.Certificates.DeletedCertificate" /> to permanently delete.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Permanently and irreversibly deletes the specified deleted certificate, without the possibility of recovery. This operation is only applicable in vaults enabled for soft delete, and
            requires the certificates/purge permission. The operation is not available if the DeletedCertificate.RecoveryLevel of the DeletedCertificate does not specify 'Purgeable'.
            </summary>
        <returns>The HTTP response from the service.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="PurgeDeletedCertificateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; PurgeDeletedCertificateAsync (string certificateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; PurgeDeletedCertificateAsync(string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.PurgeDeletedCertificateAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PurgeDeletedCertificateAsync (certificateName As String, Optional cancellationToken As CancellationToken = null) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member PurgeDeletedCertificateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.PurgeDeletedCertificateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="certificateClient.PurgeDeletedCertificateAsync (certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateName">The name of the <see cref="T:Azure.Security.KeyVault.Certificates.DeletedCertificate" /> to permanently delete.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Permanently and irreversibly deletes the specified deleted certificate, without the possibility of recovery. This operation is only applicable in vaults enabled for soft delete, and
            requires the certificates/purge permission. The operation is not available if the DeletedCertificate.RecoveryLevel of the DeletedCertificate does not specify 'Purgeable'.
            </summary>
        <returns>The HTTP response from the service.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="RestoreCertificateBackup">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt; RestoreCertificateBackup (byte[] backup, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt; RestoreCertificateBackup(unsigned int8[] backup, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.RestoreCertificateBackup(System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RestoreCertificateBackup (backup As Byte(), Optional cancellationToken As CancellationToken = null) As Response(Of KeyVaultCertificateWithPolicy)" />
      <MemberSignature Language="F#" Value="abstract member RestoreCertificateBackup : byte[] * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;&#xA;override this.RestoreCertificateBackup : byte[] * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;" Usage="certificateClient.RestoreCertificateBackup (backup, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backup" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="backup">The backup of the <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" /> to restore.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Restores a <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" />, including all versions, from a backup created from the <see cref="M:Azure.Security.KeyVault.Certificates.CertificateClient.BackupCertificate(System.String,System.Threading.CancellationToken)" /> or <see cref="M:Azure.Security.KeyVault.Certificates.CertificateClient.BackupCertificateAsync(System.String,System.Threading.CancellationToken)" />. The backup must be restored
            to a vault in the same region as its original vault. This operation requires the certificate/restore permission.
            </summary>
        <returns>The restored certificate and policy.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="backup" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="RestoreCertificateBackupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;&gt; RestoreCertificateBackupAsync (byte[] backup, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;&gt; RestoreCertificateBackupAsync(unsigned int8[] backup, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.RestoreCertificateBackupAsync(System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RestoreCertificateBackupAsync (backup As Byte(), Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of KeyVaultCertificateWithPolicy))" />
      <MemberSignature Language="F#" Value="abstract member RestoreCertificateBackupAsync : byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;&gt;&#xA;override this.RestoreCertificateBackupAsync : byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;&gt;" Usage="certificateClient.RestoreCertificateBackupAsync (backup, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backup" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="backup">The backup of the <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" /> to restore.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Restores a <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" />, including all versions, from a backup created from the <see cref="M:Azure.Security.KeyVault.Certificates.CertificateClient.BackupCertificate(System.String,System.Threading.CancellationToken)" /> or <see cref="M:Azure.Security.KeyVault.Certificates.CertificateClient.BackupCertificateAsync(System.String,System.Threading.CancellationToken)" />. The backup must be restored
            to a vault in the same region as its original vault. This operation requires the certificate/restore permission.
            </summary>
        <returns>The restored certificate and policy.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="backup" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetContacts">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.Collections.Generic.IList&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt;&gt; SetContacts (System.Collections.Generic.IEnumerable&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt; contacts, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.Collections.Generic.IList`1&lt;class Azure.Security.KeyVault.Certificates.CertificateContact&gt;&gt; SetContacts(class System.Collections.Generic.IEnumerable`1&lt;class Azure.Security.KeyVault.Certificates.CertificateContact&gt; contacts, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.SetContacts(System.Collections.Generic.IEnumerable{Azure.Security.KeyVault.Certificates.CertificateContact},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetContacts (contacts As IEnumerable(Of CertificateContact), Optional cancellationToken As CancellationToken = null) As Response(Of IList(Of CertificateContact))" />
      <MemberSignature Language="F#" Value="abstract member SetContacts : seq&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IList&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt;&gt;&#xA;override this.SetContacts : seq&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IList&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt;&gt;" Usage="certificateClient.SetContacts (contacts, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Collections.Generic.IList&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contacts" Type="System.Collections.Generic.IEnumerable&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="contacts">The certificate contacts for the vault.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Sets the certificate <see cref="T:Azure.Security.KeyVault.Certificates.CertificateContact" />s for the key vault, replacing any existing contacts. This operation requires the certificates/managecontacts permission.
            </summary>
        <returns>The updated certificate contacts of the vault.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contacts" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetContactsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IList&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt;&gt;&gt; SetContactsAsync (System.Collections.Generic.IEnumerable&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt; contacts, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.Collections.Generic.IList`1&lt;class Azure.Security.KeyVault.Certificates.CertificateContact&gt;&gt;&gt; SetContactsAsync(class System.Collections.Generic.IEnumerable`1&lt;class Azure.Security.KeyVault.Certificates.CertificateContact&gt; contacts, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.SetContactsAsync(System.Collections.Generic.IEnumerable{Azure.Security.KeyVault.Certificates.CertificateContact},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetContactsAsync (contacts As IEnumerable(Of CertificateContact), Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of IList(Of CertificateContact)))" />
      <MemberSignature Language="F#" Value="abstract member SetContactsAsync : seq&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IList&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt;&gt;&gt;&#xA;override this.SetContactsAsync : seq&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IList&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt;&gt;&gt;" Usage="certificateClient.SetContactsAsync (contacts, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IList&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contacts" Type="System.Collections.Generic.IEnumerable&lt;Azure.Security.KeyVault.Certificates.CertificateContact&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="contacts">The certificate contacts for the vault.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Sets the certificate <see cref="T:Azure.Security.KeyVault.Certificates.CertificateContact" />s for the key vault, replacing any existing contacts. This operation requires the certificates/managecontacts permission.
            </summary>
        <returns>The updated certificate contacts of the vault.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contacts" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="StartCreateCertificate">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.KeyVault.Certificates.CertificateOperation StartCreateCertificate (string certificateName, Azure.Security.KeyVault.Certificates.CertificatePolicy policy, bool? enabled = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.KeyVault.Certificates.CertificateOperation StartCreateCertificate(string certificateName, class Azure.Security.KeyVault.Certificates.CertificatePolicy policy, valuetype System.Nullable`1&lt;bool&gt; enabled, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.StartCreateCertificate(System.String,Azure.Security.KeyVault.Certificates.CertificatePolicy,System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateCertificate (certificateName As String, policy As CertificatePolicy, Optional enabled As Nullable(Of Boolean) = null, Optional tags As IDictionary(Of String, String) = null, Optional cancellationToken As CancellationToken = null) As CertificateOperation" />
      <MemberSignature Language="F#" Value="abstract member StartCreateCertificate : string * Azure.Security.KeyVault.Certificates.CertificatePolicy * Nullable&lt;bool&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Certificates.CertificateOperation&#xA;override this.StartCreateCertificate : string * Azure.Security.KeyVault.Certificates.CertificatePolicy * Nullable&lt;bool&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Certificates.CertificateOperation" Usage="certificateClient.StartCreateCertificate (certificateName, policy, enabled, tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Certificates.CertificateOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="policy" Type="Azure.Security.KeyVault.Certificates.CertificatePolicy" />
        <Parameter Name="enabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateName">The name of the certificate to create.</param>
        <param name="policy">The <see cref="T:Azure.Security.KeyVault.Certificates.CertificatePolicy" /> which governs the properties and lifecycle of the created certificate.</param>
        <param name="enabled">Specifies whether the certificate should be created in an enabled state. If null, the server default will be used.</param>
        <param name="tags">Tags to be applied to the created certificate.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Starts a long running operation to create a <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" /> in the vault with the specified certificate policy.
            </summary>
        <returns>A <see cref="T:Azure.Security.KeyVault.Certificates.CertificateOperation" /> which contains details on the create operation, and can be used to retrieve updated status.</returns>
        <remarks>
            If no certificate with the specified name exists it will be created; otherwise, a new version of the existing certificate will be created.
            This operation requires the certificates/create permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> or <paramref name="policy" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="StartCreateCertificateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Certificates.CertificateOperation&gt; StartCreateCertificateAsync (string certificateName, Azure.Security.KeyVault.Certificates.CertificatePolicy policy, bool? enabled = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.KeyVault.Certificates.CertificateOperation&gt; StartCreateCertificateAsync(string certificateName, class Azure.Security.KeyVault.Certificates.CertificatePolicy policy, valuetype System.Nullable`1&lt;bool&gt; enabled, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.StartCreateCertificateAsync(System.String,Azure.Security.KeyVault.Certificates.CertificatePolicy,System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateCertificateAsync (certificateName As String, policy As CertificatePolicy, Optional enabled As Nullable(Of Boolean) = null, Optional tags As IDictionary(Of String, String) = null, Optional cancellationToken As CancellationToken = null) As Task(Of CertificateOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartCreateCertificateAsync : string * Azure.Security.KeyVault.Certificates.CertificatePolicy * Nullable&lt;bool&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Certificates.CertificateOperation&gt;&#xA;override this.StartCreateCertificateAsync : string * Azure.Security.KeyVault.Certificates.CertificatePolicy * Nullable&lt;bool&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Certificates.CertificateOperation&gt;" Usage="certificateClient.StartCreateCertificateAsync (certificateName, policy, enabled, tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Certificates.CertificateOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="policy" Type="Azure.Security.KeyVault.Certificates.CertificatePolicy" />
        <Parameter Name="enabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateName">The name of the certificate to create.</param>
        <param name="policy">The <see cref="T:Azure.Security.KeyVault.Certificates.CertificatePolicy" /> which governs the properties and lifecycle of the created certificate.</param>
        <param name="enabled">Specifies whether the certificate should be created in an enabled state. If null, the server default will be used.</param>
        <param name="tags">Tags to be applied to the created certificate.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Starts a long running operation to create a <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" /> in the vault with the specified certificate policy.
            </summary>
        <returns>A <see cref="T:Azure.Security.KeyVault.Certificates.CertificateOperation" /> which contains details on the create operation, and can be used to retrieve updated status.</returns>
        <remarks>
            If no certificate with the specified name exists it will be created; otherwise, a new version of the existing certificate will be created.
            This operation requires the certificates/create permission.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> or <paramref name="policy" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="StartDeleteCertificate">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.KeyVault.Certificates.DeleteCertificateOperation StartDeleteCertificate (string certificateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.KeyVault.Certificates.DeleteCertificateOperation StartDeleteCertificate(string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.StartDeleteCertificate(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDeleteCertificate (certificateName As String, Optional cancellationToken As CancellationToken = null) As DeleteCertificateOperation" />
      <MemberSignature Language="F#" Value="abstract member StartDeleteCertificate : string * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Certificates.DeleteCertificateOperation&#xA;override this.StartDeleteCertificate : string * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Certificates.DeleteCertificateOperation" Usage="certificateClient.StartDeleteCertificate (certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Certificates.DeleteCertificateOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateName">The name of the <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" /> to delete.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Deletes all versions of the specified <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" />. If the vault is soft delete-enabled, the <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" /> will be marked for permanent deletion
            and can be recovered with <see cref="M:Azure.Security.KeyVault.Certificates.CertificateClient.StartRecoverDeletedCertificate(System.String,System.Threading.CancellationToken)" />, or purged with <see cref="M:Azure.Security.KeyVault.Certificates.CertificateClient.PurgeDeletedCertificate(System.String,System.Threading.CancellationToken)" />. This operation requires the certificates/delete permission.
            </summary>
        <returns>
            A <see cref="T:Azure.Security.KeyVault.Certificates.DeleteCertificateOperation" /> to wait on this long-running operation.
            If the Key Vault is soft delete-enabled, you only need to wait for the operation to complete if you need to recover or purge the certificate;
            otherwise, the certificate is deleted automatically on the <see cref="P:Azure.Security.KeyVault.Certificates.DeletedCertificate.ScheduledPurgeDate" />.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="StartDeleteCertificateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Certificates.DeleteCertificateOperation&gt; StartDeleteCertificateAsync (string certificateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.KeyVault.Certificates.DeleteCertificateOperation&gt; StartDeleteCertificateAsync(string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.StartDeleteCertificateAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDeleteCertificateAsync (certificateName As String, Optional cancellationToken As CancellationToken = null) As Task(Of DeleteCertificateOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartDeleteCertificateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Certificates.DeleteCertificateOperation&gt;&#xA;override this.StartDeleteCertificateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Certificates.DeleteCertificateOperation&gt;" Usage="certificateClient.StartDeleteCertificateAsync (certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Certificates.DeleteCertificateOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateName">The name of the <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" /> to delete.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Deletes all versions of the specified <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" />. If the vault is soft delete-enabled, the <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" /> will be marked for permanent deletion
            and can be recovered with <see cref="M:Azure.Security.KeyVault.Certificates.CertificateClient.StartRecoverDeletedCertificate(System.String,System.Threading.CancellationToken)" />, or purged with <see cref="M:Azure.Security.KeyVault.Certificates.CertificateClient.PurgeDeletedCertificate(System.String,System.Threading.CancellationToken)" />. This operation requires the certificates/delete permission.
            </summary>
        <returns>
            A <see cref="T:Azure.Security.KeyVault.Certificates.DeleteCertificateOperation" /> to wait on this long-running operation.
            If the Key Vault is soft delete-enabled, you only need to wait for the operation to complete if you need to recover or purge the certificate;
            otherwise, the certificate is deleted automatically on the <see cref="P:Azure.Security.KeyVault.Certificates.DeletedCertificate.ScheduledPurgeDate" />.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="StartRecoverDeletedCertificate">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.KeyVault.Certificates.RecoverDeletedCertificateOperation StartRecoverDeletedCertificate (string certificateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.KeyVault.Certificates.RecoverDeletedCertificateOperation StartRecoverDeletedCertificate(string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.StartRecoverDeletedCertificate(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRecoverDeletedCertificate (certificateName As String, Optional cancellationToken As CancellationToken = null) As RecoverDeletedCertificateOperation" />
      <MemberSignature Language="F#" Value="abstract member StartRecoverDeletedCertificate : string * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Certificates.RecoverDeletedCertificateOperation&#xA;override this.StartRecoverDeletedCertificate : string * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Certificates.RecoverDeletedCertificateOperation" Usage="certificateClient.StartRecoverDeletedCertificate (certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Certificates.RecoverDeletedCertificateOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateName">The name of the <see cref="T:Azure.Security.KeyVault.Certificates.DeletedCertificate" />.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Recovers the <see cref="T:Azure.Security.KeyVault.Certificates.DeletedCertificate" /> to its pre-deleted state. This operation is only applicable in vaults enabled for soft delete, and
            requires the certificates/recover permission.
            </summary>
        <returns>A <see cref="T:Azure.Security.KeyVault.Certificates.RecoverDeletedCertificateOperation" /> to wait on this long-running operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="StartRecoverDeletedCertificateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Certificates.RecoverDeletedCertificateOperation&gt; StartRecoverDeletedCertificateAsync (string certificateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.KeyVault.Certificates.RecoverDeletedCertificateOperation&gt; StartRecoverDeletedCertificateAsync(string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.StartRecoverDeletedCertificateAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRecoverDeletedCertificateAsync (certificateName As String, Optional cancellationToken As CancellationToken = null) As Task(Of RecoverDeletedCertificateOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartRecoverDeletedCertificateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Certificates.RecoverDeletedCertificateOperation&gt;&#xA;override this.StartRecoverDeletedCertificateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Certificates.RecoverDeletedCertificateOperation&gt;" Usage="certificateClient.StartRecoverDeletedCertificateAsync (certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Certificates.RecoverDeletedCertificateOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateName">The name of the <see cref="T:Azure.Security.KeyVault.Certificates.DeletedCertificate" />.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Recovers the <see cref="T:Azure.Security.KeyVault.Certificates.DeletedCertificate" /> to its pre-deleted state. This operation is only applicable in vaults enabled for soft delete, and
            requires the certificates/recover permission.
            </summary>
        <returns>A <see cref="T:Azure.Security.KeyVault.Certificates.RecoverDeletedCertificateOperation" /> to wait on this long-running operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateCertificatePolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificatePolicy&gt; UpdateCertificatePolicy (string certificateName, Azure.Security.KeyVault.Certificates.CertificatePolicy policy, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Certificates.CertificatePolicy&gt; UpdateCertificatePolicy(string certificateName, class Azure.Security.KeyVault.Certificates.CertificatePolicy policy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.UpdateCertificatePolicy(System.String,Azure.Security.KeyVault.Certificates.CertificatePolicy,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateCertificatePolicy (certificateName As String, policy As CertificatePolicy, Optional cancellationToken As CancellationToken = null) As Response(Of CertificatePolicy)" />
      <MemberSignature Language="F#" Value="abstract member UpdateCertificatePolicy : string * Azure.Security.KeyVault.Certificates.CertificatePolicy * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificatePolicy&gt;&#xA;override this.UpdateCertificatePolicy : string * Azure.Security.KeyVault.Certificates.CertificatePolicy * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificatePolicy&gt;" Usage="certificateClient.UpdateCertificatePolicy (certificateName, policy, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificatePolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="policy" Type="Azure.Security.KeyVault.Certificates.CertificatePolicy" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateName">The name of the certificate whose policy should be updated.</param>
        <param name="policy">The updated policy for the specified certificate.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Updates the <see cref="T:Azure.Security.KeyVault.Certificates.CertificatePolicy" /> of the specified certificate. This operation requires the certificate/update permission.
            </summary>
        <returns>The updated certificate policy.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateCertificatePolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificatePolicy&gt;&gt; UpdateCertificatePolicyAsync (string certificateName, Azure.Security.KeyVault.Certificates.CertificatePolicy policy, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Certificates.CertificatePolicy&gt;&gt; UpdateCertificatePolicyAsync(string certificateName, class Azure.Security.KeyVault.Certificates.CertificatePolicy policy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.UpdateCertificatePolicyAsync(System.String,Azure.Security.KeyVault.Certificates.CertificatePolicy,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateCertificatePolicyAsync (certificateName As String, policy As CertificatePolicy, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of CertificatePolicy))" />
      <MemberSignature Language="F#" Value="abstract member UpdateCertificatePolicyAsync : string * Azure.Security.KeyVault.Certificates.CertificatePolicy * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificatePolicy&gt;&gt;&#xA;override this.UpdateCertificatePolicyAsync : string * Azure.Security.KeyVault.Certificates.CertificatePolicy * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificatePolicy&gt;&gt;" Usage="certificateClient.UpdateCertificatePolicyAsync (certificateName, policy, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificatePolicy&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="policy" Type="Azure.Security.KeyVault.Certificates.CertificatePolicy" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateName">The name of the certificate whose policy should be updated.</param>
        <param name="policy">The updated policy for the specified certificate.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Updates the <see cref="T:Azure.Security.KeyVault.Certificates.CertificatePolicy" /> of the specified certificate. This operation requires the certificate/update permission.
            </summary>
        <returns>The updated certificate policy.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateCertificateProperties">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificate&gt; UpdateCertificateProperties (Azure.Security.KeyVault.Certificates.CertificateProperties properties, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Certificates.KeyVaultCertificate&gt; UpdateCertificateProperties(class Azure.Security.KeyVault.Certificates.CertificateProperties properties, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.UpdateCertificateProperties(Azure.Security.KeyVault.Certificates.CertificateProperties,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateCertificateProperties (properties As CertificateProperties, Optional cancellationToken As CancellationToken = null) As Response(Of KeyVaultCertificate)" />
      <MemberSignature Language="F#" Value="abstract member UpdateCertificateProperties : Azure.Security.KeyVault.Certificates.CertificateProperties * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificate&gt;&#xA;override this.UpdateCertificateProperties : Azure.Security.KeyVault.Certificates.CertificateProperties * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificate&gt;" Usage="certificateClient.UpdateCertificateProperties (properties, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="Azure.Security.KeyVault.Certificates.CertificateProperties" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="properties">The <see cref="T:Azure.Security.KeyVault.Certificates.CertificateProperties" /> object with updated properties.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Updates the specified <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" /> with the specified values for its mutable properties. This operation requires the certificates/update permission.
            </summary>
        <returns>The updated <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="properties" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateCertificatePropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificate&gt;&gt; UpdateCertificatePropertiesAsync (Azure.Security.KeyVault.Certificates.CertificateProperties properties, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Certificates.KeyVaultCertificate&gt;&gt; UpdateCertificatePropertiesAsync(class Azure.Security.KeyVault.Certificates.CertificateProperties properties, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.UpdateCertificatePropertiesAsync(Azure.Security.KeyVault.Certificates.CertificateProperties,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateCertificatePropertiesAsync (properties As CertificateProperties, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of KeyVaultCertificate))" />
      <MemberSignature Language="F#" Value="abstract member UpdateCertificatePropertiesAsync : Azure.Security.KeyVault.Certificates.CertificateProperties * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificate&gt;&gt;&#xA;override this.UpdateCertificatePropertiesAsync : Azure.Security.KeyVault.Certificates.CertificateProperties * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificate&gt;&gt;" Usage="certificateClient.UpdateCertificatePropertiesAsync (properties, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.KeyVaultCertificate&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="Azure.Security.KeyVault.Certificates.CertificateProperties" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="properties">The <see cref="T:Azure.Security.KeyVault.Certificates.CertificateProperties" /> object with updated properties.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Updates the specified <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" /> with the specified values for its mutable properties. This operation requires the certificates/update permission.
            </summary>
        <returns>The updated <see cref="T:Azure.Security.KeyVault.Certificates.KeyVaultCertificate" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="properties" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateIssuer">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt; UpdateIssuer (Azure.Security.KeyVault.Certificates.CertificateIssuer issuer, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Certificates.CertificateIssuer&gt; UpdateIssuer(class Azure.Security.KeyVault.Certificates.CertificateIssuer issuer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.UpdateIssuer(Azure.Security.KeyVault.Certificates.CertificateIssuer,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateIssuer (issuer As CertificateIssuer, Optional cancellationToken As CancellationToken = null) As Response(Of CertificateIssuer)" />
      <MemberSignature Language="F#" Value="abstract member UpdateIssuer : Azure.Security.KeyVault.Certificates.CertificateIssuer * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;&#xA;override this.UpdateIssuer : Azure.Security.KeyVault.Certificates.CertificateIssuer * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;" Usage="certificateClient.UpdateIssuer (issuer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuer" Type="Azure.Security.KeyVault.Certificates.CertificateIssuer" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="issuer">The <see cref="T:Azure.Security.KeyVault.Certificates.CertificateIssuer" /> to update in the vault.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Updates the specified certificate <see cref="T:Azure.Security.KeyVault.Certificates.CertificateIssuer" /> in the vault, only updating the specified fields, others will remain unchanged. This operation requires the certificates/setissuers permission.
            </summary>
        <returns>The updated certificate issuer.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:Azure.Security.KeyVault.Certificates.CertificateIssuer.Name" /> of <paramref name="issuer" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="issuer" /> or <see cref="P:Azure.Security.KeyVault.Certificates.CertificateIssuer.Name" /> of <paramref name="issuer" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateIssuerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;&gt; UpdateIssuerAsync (Azure.Security.KeyVault.Certificates.CertificateIssuer issuer, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;&gt; UpdateIssuerAsync(class Azure.Security.KeyVault.Certificates.CertificateIssuer issuer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.CertificateClient.UpdateIssuerAsync(Azure.Security.KeyVault.Certificates.CertificateIssuer,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateIssuerAsync (issuer As CertificateIssuer, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of CertificateIssuer))" />
      <MemberSignature Language="F#" Value="abstract member UpdateIssuerAsync : Azure.Security.KeyVault.Certificates.CertificateIssuer * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;&gt;&#xA;override this.UpdateIssuerAsync : Azure.Security.KeyVault.Certificates.CertificateIssuer * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;&gt;" Usage="certificateClient.UpdateIssuerAsync (issuer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Certificates.CertificateIssuer&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuer" Type="Azure.Security.KeyVault.Certificates.CertificateIssuer" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="issuer">The <see cref="T:Azure.Security.KeyVault.Certificates.CertificateIssuer" /> to update in the vault.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Updates the specified certificate <see cref="T:Azure.Security.KeyVault.Certificates.CertificateIssuer" /> in the vault, only updating the specified fields, others will remain unchanged. This operation requires the certificates/setissuers permission.
            </summary>
        <returns>The updated certificate issuer.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:Azure.Security.KeyVault.Certificates.CertificateIssuer.Name" /> of <paramref name="issuer" /> is empty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="issuer" /> or <see cref="P:Azure.Security.KeyVault.Certificates.CertificateIssuer.Name" /> of <paramref name="issuer" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="VaultUri">
      <MemberSignature Language="C#" Value="public virtual Uri VaultUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri VaultUri" />
      <MemberSignature Language="DocId" Value="P:Azure.Security.KeyVault.Certificates.CertificateClient.VaultUri" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property VaultUri As Uri" />
      <MemberSignature Language="F#" Value="member this.VaultUri : Uri" Usage="Azure.Security.KeyVault.Certificates.CertificateClient.VaultUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:System.Uri" /> of the vault used to create this instance of the <see cref="T:Azure.Security.KeyVault.Certificates.CertificateClient" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
