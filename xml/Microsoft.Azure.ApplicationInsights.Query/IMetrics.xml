<Type Name="IMetrics" FullName="Microsoft.Azure.ApplicationInsights.Query.IMetrics">
  <TypeSignature Language="C#" Value="public interface IMetrics" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMetrics" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.ApplicationInsights.Query.IMetrics" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMetrics" />
  <TypeSignature Language="F#" Value="type IMetrics = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.ApplicationInsights.Query</AssemblyName>
    <AssemblyVersion>0.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Metrics operations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetIntervaledMetricWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.ApplicationInsights.Query.Models.MetricsIntervaledResult&gt;&gt; GetIntervaledMetricWithHttpMessagesAsync (string appId, string metricId, string timespan = default, TimeSpan? interval = default, System.Collections.Generic.IList&lt;string&gt; aggregation = default, System.Collections.Generic.IList&lt;string&gt; segment = default, int? top = default, string orderby = default, string filter = default, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.ApplicationInsights.Query.Models.MetricsIntervaledResult&gt;&gt; GetIntervaledMetricWithHttpMessagesAsync(string appId, string metricId, string timespan, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; interval, class System.Collections.Generic.IList`1&lt;string&gt; aggregation, class System.Collections.Generic.IList`1&lt;string&gt; segment, valuetype System.Nullable`1&lt;int32&gt; top, string orderby, string filter, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ApplicationInsights.Query.IMetrics.GetIntervaledMetricWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Nullable{System.Int32},System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIntervaledMetricWithHttpMessagesAsync (appId As String, metricId As String, Optional timespan As String = Nothing, Optional interval As Nullable(Of TimeSpan) = Nothing, Optional aggregation As IList(Of String) = Nothing, Optional segment As IList(Of String) = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional orderby As String = Nothing, Optional filter As String = Nothing, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of MetricsIntervaledResult))" />
      <MemberSignature Language="F#" Value="abstract member GetIntervaledMetricWithHttpMessagesAsync : string * string * string * Nullable&lt;TimeSpan&gt; * System.Collections.Generic.IList&lt;string&gt; * System.Collections.Generic.IList&lt;string&gt; * Nullable&lt;int&gt; * string * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.ApplicationInsights.Query.Models.MetricsIntervaledResult&gt;&gt;" Usage="iMetrics.GetIntervaledMetricWithHttpMessagesAsync (appId, metricId, timespan, interval, aggregation, segment, top, orderby, filter, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ApplicationInsights.Query</AssemblyName>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.ApplicationInsights.Query.Models.MetricsIntervaledResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="metricId" Type="System.String" />
        <Parameter Name="timespan" Type="System.String" />
        <Parameter Name="interval" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="aggregation" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="segment" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="appId">
            ID of the application. This is Application ID from the API Access settings
            blade in the Azure portal.
            </param>
        <param name="metricId">
            ID of the metric. This is either a standard AI metric, or an
            application-specific custom metric. Possible values include:
            'requests/count', 'requests/duration', 'requests/failed',
            'users/count', 'users/authenticated', 'pageViews/count',
            'pageViews/duration', 'client/processingDuration',
            'client/receiveDuration', 'client/networkDuration',
            'client/sendDuration', 'client/totalDuration',
            'dependencies/count', 'dependencies/failed',
            'dependencies/duration', 'exceptions/count', 'exceptions/browser',
            'exceptions/server', 'sessions/count',
            'performanceCounters/requestExecutionTime',
            'performanceCounters/requestsPerSecond',
            'performanceCounters/requestsInQueue',
            'performanceCounters/memoryAvailableBytes',
            'performanceCounters/exceptionsPerSecond',
            'performanceCounters/processCpuPercentage',
            'performanceCounters/processIOBytesPerSecond',
            'performanceCounters/processPrivateBytes',
            'performanceCounters/processorCpuPercentage',
            'availabilityResults/availabilityPercentage',
            'availabilityResults/duration', 'billing/telemetryCount',
            'customEvents/count'
            </param>
        <param name="timespan">
            The timespan over which to retrieve metric values. This is an
            ISO8601 time period value. If timespan is omitted, a default time
            range of `PT12H` ("last 12 hours") is used. The actual timespan
            that is queried may be adjusted by the server based. In all cases,
            the actual time span used for the query is included in the
            response.
            </param>
        <param name="interval">
            The time interval to use when retrieving metric values. This is an
            ISO8601 duration. If interval is omitted, the metric value is
            aggregated across the entire timespan. If interval is supplied, the
            server may adjust the interval to a more appropriate size based on
            the timespan used for the query. In all cases, the actual interval
            used for the query is included in the response.
            </param>
        <param name="aggregation">
            The aggregation to use when computing the metric values. To
            retrieve more than one aggregation at a time, separate them with a
            comma. If no aggregation is specified, then the default aggregation
            for the metric is used.
            </param>
        <param name="segment">
            The name of the dimension to segment the metric values by. This
            dimension must be applicable to the metric you are retrieving. To
            segment by more than one dimension at a time, separate them with a
            comma (,). In this case, the metric data will be segmented in the
            order the dimensions are listed in the parameter.
            </param>
        <param name="top">
            The number of segments to return.  This value is only valid when
            segment is specified.
            </param>
        <param name="orderby">
            The aggregation function and direction to sort the segments by.
            This value is only valid when segment is specified.
            </param>
        <param name="filter">
            An expression used to filter the results.  This value should be a
            valid OData filter expression where the keys of each clause should
            be applicable dimensions for the metric you are retrieving.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Retrieve metric data
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Gets metric values for a single metric
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntervaledSegmentedMetricWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.ApplicationInsights.Query.Models.MetricsIntervaledSegmentedResult&gt;&gt; GetIntervaledSegmentedMetricWithHttpMessagesAsync (string appId, string metricId, string timespan = default, TimeSpan? interval = default, System.Collections.Generic.IList&lt;string&gt; aggregation = default, System.Collections.Generic.IList&lt;string&gt; segment = default, int? top = default, string orderby = default, string filter = default, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.ApplicationInsights.Query.Models.MetricsIntervaledSegmentedResult&gt;&gt; GetIntervaledSegmentedMetricWithHttpMessagesAsync(string appId, string metricId, string timespan, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; interval, class System.Collections.Generic.IList`1&lt;string&gt; aggregation, class System.Collections.Generic.IList`1&lt;string&gt; segment, valuetype System.Nullable`1&lt;int32&gt; top, string orderby, string filter, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ApplicationInsights.Query.IMetrics.GetIntervaledSegmentedMetricWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Nullable{System.Int32},System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIntervaledSegmentedMetricWithHttpMessagesAsync (appId As String, metricId As String, Optional timespan As String = Nothing, Optional interval As Nullable(Of TimeSpan) = Nothing, Optional aggregation As IList(Of String) = Nothing, Optional segment As IList(Of String) = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional orderby As String = Nothing, Optional filter As String = Nothing, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of MetricsIntervaledSegmentedResult))" />
      <MemberSignature Language="F#" Value="abstract member GetIntervaledSegmentedMetricWithHttpMessagesAsync : string * string * string * Nullable&lt;TimeSpan&gt; * System.Collections.Generic.IList&lt;string&gt; * System.Collections.Generic.IList&lt;string&gt; * Nullable&lt;int&gt; * string * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.ApplicationInsights.Query.Models.MetricsIntervaledSegmentedResult&gt;&gt;" Usage="iMetrics.GetIntervaledSegmentedMetricWithHttpMessagesAsync (appId, metricId, timespan, interval, aggregation, segment, top, orderby, filter, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ApplicationInsights.Query</AssemblyName>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.ApplicationInsights.Query.Models.MetricsIntervaledSegmentedResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="metricId" Type="System.String" />
        <Parameter Name="timespan" Type="System.String" />
        <Parameter Name="interval" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="aggregation" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="segment" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="appId">
            ID of the application. This is Application ID from the API Access settings
            blade in the Azure portal.
            </param>
        <param name="metricId">
            ID of the metric. This is either a standard AI metric, or an
            application-specific custom metric. Possible values include:
            'requests/count', 'requests/duration', 'requests/failed',
            'users/count', 'users/authenticated', 'pageViews/count',
            'pageViews/duration', 'client/processingDuration',
            'client/receiveDuration', 'client/networkDuration',
            'client/sendDuration', 'client/totalDuration',
            'dependencies/count', 'dependencies/failed',
            'dependencies/duration', 'exceptions/count', 'exceptions/browser',
            'exceptions/server', 'sessions/count',
            'performanceCounters/requestExecutionTime',
            'performanceCounters/requestsPerSecond',
            'performanceCounters/requestsInQueue',
            'performanceCounters/memoryAvailableBytes',
            'performanceCounters/exceptionsPerSecond',
            'performanceCounters/processCpuPercentage',
            'performanceCounters/processIOBytesPerSecond',
            'performanceCounters/processPrivateBytes',
            'performanceCounters/processorCpuPercentage',
            'availabilityResults/availabilityPercentage',
            'availabilityResults/duration', 'billing/telemetryCount',
            'customEvents/count'
            </param>
        <param name="timespan">
            The timespan over which to retrieve metric values. This is an
            ISO8601 time period value. If timespan is omitted, a default time
            range of `PT12H` ("last 12 hours") is used. The actual timespan
            that is queried may be adjusted by the server based. In all cases,
            the actual time span used for the query is included in the
            response.
            </param>
        <param name="interval">
            The time interval to use when retrieving metric values. This is an
            ISO8601 duration. If interval is omitted, the metric value is
            aggregated across the entire timespan. If interval is supplied, the
            server may adjust the interval to a more appropriate size based on
            the timespan used for the query. In all cases, the actual interval
            used for the query is included in the response.
            </param>
        <param name="aggregation">
            The aggregation to use when computing the metric values. To
            retrieve more than one aggregation at a time, separate them with a
            comma. If no aggregation is specified, then the default aggregation
            for the metric is used.
            </param>
        <param name="segment">
            The name of the dimension to segment the metric values by. This
            dimension must be applicable to the metric you are retrieving. To
            segment by more than one dimension at a time, separate them with a
            comma (,). In this case, the metric data will be segmented in the
            order the dimensions are listed in the parameter.
            </param>
        <param name="top">
            The number of segments to return.  This value is only valid when
            segment is specified.
            </param>
        <param name="orderby">
            The aggregation function and direction to sort the segments by.
            This value is only valid when segment is specified.
            </param>
        <param name="filter">
            An expression used to filter the results.  This value should be a
            valid OData filter expression where the keys of each clause should
            be applicable dimensions for the metric you are retrieving.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Retrieve metric data
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Gets metric values for a single metric
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;object&gt;&gt; GetMetadataWithHttpMessagesAsync (string appId, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;object&gt;&gt; GetMetadataWithHttpMessagesAsync(string appId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ApplicationInsights.Query.IMetrics.GetMetadataWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataWithHttpMessagesAsync (appId As String, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of Object))" />
      <MemberSignature Language="F#" Value="abstract member GetMetadataWithHttpMessagesAsync : string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;obj&gt;&gt;" Usage="iMetrics.GetMetadataWithHttpMessagesAsync (appId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ApplicationInsights.Query</AssemblyName>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="appId">
            ID of the application. This is Application ID from the API Access
            settings blade in the Azure portal.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Retrieve metric metatadata
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Gets metadata describing the available metrics
            </remarks>
        <exception cref="T:Microsoft.Azure.ApplicationInsights.Query.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMetricSummaryWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.ApplicationInsights.Query.Models.MetricsSummaryResult&gt;&gt; GetMetricSummaryWithHttpMessagesAsync (string appId, string metricId, string timespan = default, System.Collections.Generic.IList&lt;string&gt; aggregation = default, int? top = default, string orderby = default, string filter = default, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.ApplicationInsights.Query.Models.MetricsSummaryResult&gt;&gt; GetMetricSummaryWithHttpMessagesAsync(string appId, string metricId, string timespan, class System.Collections.Generic.IList`1&lt;string&gt; aggregation, valuetype System.Nullable`1&lt;int32&gt; top, string orderby, string filter, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ApplicationInsights.Query.IMetrics.GetMetricSummaryWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Int32},System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetricSummaryWithHttpMessagesAsync (appId As String, metricId As String, Optional timespan As String = Nothing, Optional aggregation As IList(Of String) = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional orderby As String = Nothing, Optional filter As String = Nothing, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of MetricsSummaryResult))" />
      <MemberSignature Language="F#" Value="abstract member GetMetricSummaryWithHttpMessagesAsync : string * string * string * System.Collections.Generic.IList&lt;string&gt; * Nullable&lt;int&gt; * string * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.ApplicationInsights.Query.Models.MetricsSummaryResult&gt;&gt;" Usage="iMetrics.GetMetricSummaryWithHttpMessagesAsync (appId, metricId, timespan, aggregation, top, orderby, filter, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ApplicationInsights.Query</AssemblyName>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.ApplicationInsights.Query.Models.MetricsSummaryResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="metricId" Type="System.String" />
        <Parameter Name="timespan" Type="System.String" />
        <Parameter Name="aggregation" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="appId">
            ID of the application. This is Application ID from the API Access settings
            blade in the Azure portal.
            </param>
        <param name="metricId">
            ID of the metric. This is either a standard AI metric, or an
            application-specific custom metric. Possible values include:
            'requests/count', 'requests/duration', 'requests/failed',
            'users/count', 'users/authenticated', 'pageViews/count',
            'pageViews/duration', 'client/processingDuration',
            'client/receiveDuration', 'client/networkDuration',
            'client/sendDuration', 'client/totalDuration',
            'dependencies/count', 'dependencies/failed',
            'dependencies/duration', 'exceptions/count', 'exceptions/browser',
            'exceptions/server', 'sessions/count',
            'performanceCounters/requestExecutionTime',
            'performanceCounters/requestsPerSecond',
            'performanceCounters/requestsInQueue',
            'performanceCounters/memoryAvailableBytes',
            'performanceCounters/exceptionsPerSecond',
            'performanceCounters/processCpuPercentage',
            'performanceCounters/processIOBytesPerSecond',
            'performanceCounters/processPrivateBytes',
            'performanceCounters/processorCpuPercentage',
            'availabilityResults/availabilityPercentage',
            'availabilityResults/duration', 'billing/telemetryCount',
            'customEvents/count'
            </param>
        <param name="timespan">
            The timespan over which to retrieve metric values. This is an
            ISO8601 time period value. If timespan is omitted, a default time
            range of `PT12H` ("last 12 hours") is used. The actual timespan
            that is queried may be adjusted by the server based. In all cases,
            the actual time span used for the query is included in the
            response.
            </param>
        <param name="aggregation">
            The aggregation to use when computing the metric values. To
            retrieve more than one aggregation at a time, separate them with a
            comma. If no aggregation is specified, then the default aggregation
            for the metric is used.
            </param>
        <param name="top">
            The number of segments to return.  This value is only valid when
            segment is specified.
            </param>
        <param name="orderby">
            The aggregation function and direction to sort the segments by.
            This value is only valid when segment is specified.
            </param>
        <param name="filter">
            An expression used to filter the results.  This value should be a
            valid OData filter expression where the keys of each clause should
            be applicable dimensions for the metric you are retrieving.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Retrieve summary metric data
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Gets summary metric values for a single metric
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMultipleWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.ApplicationInsights.Query.Models.MetricsResultsItem&gt;&gt;&gt; GetMultipleWithHttpMessagesAsync (string appId, System.Collections.Generic.IList&lt;Microsoft.Azure.ApplicationInsights.Query.Models.MetricsPostBodySchema&gt; body, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.ApplicationInsights.Query.Models.MetricsResultsItem&gt;&gt;&gt; GetMultipleWithHttpMessagesAsync(string appId, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.ApplicationInsights.Query.Models.MetricsPostBodySchema&gt; body, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ApplicationInsights.Query.IMetrics.GetMultipleWithHttpMessagesAsync(System.String,System.Collections.Generic.IList{Microsoft.Azure.ApplicationInsights.Query.Models.MetricsPostBodySchema},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMultipleWithHttpMessagesAsync (appId As String, body As IList(Of MetricsPostBodySchema), Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of IList(Of MetricsResultsItem)))" />
      <MemberSignature Language="F#" Value="abstract member GetMultipleWithHttpMessagesAsync : string * System.Collections.Generic.IList&lt;Microsoft.Azure.ApplicationInsights.Query.Models.MetricsPostBodySchema&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.ApplicationInsights.Query.Models.MetricsResultsItem&gt;&gt;&gt;" Usage="iMetrics.GetMultipleWithHttpMessagesAsync (appId, body, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ApplicationInsights.Query</AssemblyName>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.ApplicationInsights.Query.Models.MetricsResultsItem&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="body" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.ApplicationInsights.Query.Models.MetricsPostBodySchema&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="appId">
            ID of the application. This is Application ID from the API Access
            settings blade in the Azure portal.
            </param>
        <param name="body">
            The batched metrics query.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Retrieve metric data
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Gets metric values for multiple metrics
            </remarks>
        <exception cref="T:Microsoft.Azure.ApplicationInsights.Query.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSegmentedMetricWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.ApplicationInsights.Query.Models.MetricsSegmentedResult&gt;&gt; GetSegmentedMetricWithHttpMessagesAsync (string appId, string metricId, string timespan = default, System.Collections.Generic.IList&lt;string&gt; aggregation = default, System.Collections.Generic.IList&lt;string&gt; segment = default, int? top = default, string orderby = default, string filter = default, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.ApplicationInsights.Query.Models.MetricsSegmentedResult&gt;&gt; GetSegmentedMetricWithHttpMessagesAsync(string appId, string metricId, string timespan, class System.Collections.Generic.IList`1&lt;string&gt; aggregation, class System.Collections.Generic.IList`1&lt;string&gt; segment, valuetype System.Nullable`1&lt;int32&gt; top, string orderby, string filter, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ApplicationInsights.Query.IMetrics.GetSegmentedMetricWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Nullable{System.Int32},System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSegmentedMetricWithHttpMessagesAsync (appId As String, metricId As String, Optional timespan As String = Nothing, Optional aggregation As IList(Of String) = Nothing, Optional segment As IList(Of String) = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional orderby As String = Nothing, Optional filter As String = Nothing, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of MetricsSegmentedResult))" />
      <MemberSignature Language="F#" Value="abstract member GetSegmentedMetricWithHttpMessagesAsync : string * string * string * System.Collections.Generic.IList&lt;string&gt; * System.Collections.Generic.IList&lt;string&gt; * Nullable&lt;int&gt; * string * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.ApplicationInsights.Query.Models.MetricsSegmentedResult&gt;&gt;" Usage="iMetrics.GetSegmentedMetricWithHttpMessagesAsync (appId, metricId, timespan, aggregation, segment, top, orderby, filter, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ApplicationInsights.Query</AssemblyName>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.ApplicationInsights.Query.Models.MetricsSegmentedResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="metricId" Type="System.String" />
        <Parameter Name="timespan" Type="System.String" />
        <Parameter Name="aggregation" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="segment" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="appId">
            ID of the application. This is Application ID from the API Access settings
            blade in the Azure portal.
            </param>
        <param name="metricId">
            ID of the metric. This is either a standard AI metric, or an
            application-specific custom metric. Possible values include:
            'requests/count', 'requests/duration', 'requests/failed',
            'users/count', 'users/authenticated', 'pageViews/count',
            'pageViews/duration', 'client/processingDuration',
            'client/receiveDuration', 'client/networkDuration',
            'client/sendDuration', 'client/totalDuration',
            'dependencies/count', 'dependencies/failed',
            'dependencies/duration', 'exceptions/count', 'exceptions/browser',
            'exceptions/server', 'sessions/count',
            'performanceCounters/requestExecutionTime',
            'performanceCounters/requestsPerSecond',
            'performanceCounters/requestsInQueue',
            'performanceCounters/memoryAvailableBytes',
            'performanceCounters/exceptionsPerSecond',
            'performanceCounters/processCpuPercentage',
            'performanceCounters/processIOBytesPerSecond',
            'performanceCounters/processPrivateBytes',
            'performanceCounters/processorCpuPercentage',
            'availabilityResults/availabilityPercentage',
            'availabilityResults/duration', 'billing/telemetryCount',
            'customEvents/count'
            </param>
        <param name="timespan">
            The timespan over which to retrieve metric values. This is an
            ISO8601 time period value. If timespan is omitted, a default time
            range of `PT12H` ("last 12 hours") is used. The actual timespan
            that is queried may be adjusted by the server based. In all cases,
            the actual time span used for the query is included in the
            response.
            </param>
        <param name="aggregation">
            The aggregation to use when computing the metric values. To
            retrieve more than one aggregation at a time, separate them with a
            comma. If no aggregation is specified, then the default aggregation
            for the metric is used.
            </param>
        <param name="segment">
            The name of the dimension to segment the metric values by. This
            dimension must be applicable to the metric you are retrieving. To
            segment by more than one dimension at a time, separate them with a
            comma (,). In this case, the metric data will be segmented in the
            order the dimensions are listed in the parameter.
            </param>
        <param name="top">
            The number of segments to return.  This value is only valid when
            segment is specified.
            </param>
        <param name="orderby">
            The aggregation function and direction to sort the segments by.
            This value is only valid when segment is specified.
            </param>
        <param name="filter">
            An expression used to filter the results.  This value should be a
            valid OData filter expression where the keys of each clause should
            be applicable dimensions for the metric you are retrieving.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Retrieve metric data
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Gets metric values for a single metric
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.ApplicationInsights.Query.Models.MetricsResult&gt;&gt; GetWithHttpMessagesAsync (string appId, string metricId, string timespan = default, TimeSpan? interval = default, System.Collections.Generic.IList&lt;string&gt; aggregation = default, System.Collections.Generic.IList&lt;string&gt; segment = default, int? top = default, string orderby = default, string filter = default, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.ApplicationInsights.Query.Models.MetricsResult&gt;&gt; GetWithHttpMessagesAsync(string appId, string metricId, string timespan, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; interval, class System.Collections.Generic.IList`1&lt;string&gt; aggregation, class System.Collections.Generic.IList`1&lt;string&gt; segment, valuetype System.Nullable`1&lt;int32&gt; top, string orderby, string filter, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ApplicationInsights.Query.IMetrics.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Nullable{System.Int32},System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWithHttpMessagesAsync (appId As String, metricId As String, Optional timespan As String = Nothing, Optional interval As Nullable(Of TimeSpan) = Nothing, Optional aggregation As IList(Of String) = Nothing, Optional segment As IList(Of String) = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional orderby As String = Nothing, Optional filter As String = Nothing, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of MetricsResult))" />
      <MemberSignature Language="F#" Value="abstract member GetWithHttpMessagesAsync : string * string * string * Nullable&lt;TimeSpan&gt; * System.Collections.Generic.IList&lt;string&gt; * System.Collections.Generic.IList&lt;string&gt; * Nullable&lt;int&gt; * string * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.ApplicationInsights.Query.Models.MetricsResult&gt;&gt;" Usage="iMetrics.GetWithHttpMessagesAsync (appId, metricId, timespan, interval, aggregation, segment, top, orderby, filter, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ApplicationInsights.Query</AssemblyName>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.ApplicationInsights.Query.Models.MetricsResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="metricId" Type="System.String" />
        <Parameter Name="timespan" Type="System.String" />
        <Parameter Name="interval" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="aggregation" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="segment" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="appId">
            ID of the application. This is Application ID from the API Access
            settings blade in the Azure portal.
            </param>
        <param name="metricId">
            ID of the metric. This is either a standard AI metric, or an
            application-specific custom metric. Possible values include:
            'requests/count', 'requests/duration', 'requests/failed',
            'users/count', 'users/authenticated', 'pageViews/count',
            'pageViews/duration', 'client/processingDuration',
            'client/receiveDuration', 'client/networkDuration',
            'client/sendDuration', 'client/totalDuration',
            'dependencies/count', 'dependencies/failed',
            'dependencies/duration', 'exceptions/count', 'exceptions/browser',
            'exceptions/server', 'sessions/count',
            'performanceCounters/requestExecutionTime',
            'performanceCounters/requestsPerSecond',
            'performanceCounters/requestsInQueue',
            'performanceCounters/memoryAvailableBytes',
            'performanceCounters/exceptionsPerSecond',
            'performanceCounters/processCpuPercentage',
            'performanceCounters/processIOBytesPerSecond',
            'performanceCounters/processPrivateBytes',
            'performanceCounters/processorCpuPercentage',
            'availabilityResults/availabilityPercentage',
            'availabilityResults/duration', 'billing/telemetryCount',
            'customEvents/count'
            </param>
        <param name="timespan">
            The timespan over which to retrieve metric values. This is an
            ISO8601 time period value. If timespan is omitted, a default time
            range of `PT12H` ("last 12 hours") is used. The actual timespan
            that is queried may be adjusted by the server based. In all cases,
            the actual time span used for the query is included in the
            response.
            </param>
        <param name="interval">
            The time interval to use when retrieving metric values. This is an
            ISO8601 duration. If interval is omitted, the metric value is
            aggregated across the entire timespan. If interval is supplied, the
            server may adjust the interval to a more appropriate size based on
            the timespan used for the query. In all cases, the actual interval
            used for the query is included in the response.
            </param>
        <param name="aggregation">
            The aggregation to use when computing the metric values. To
            retrieve more than one aggregation at a time, separate them with a
            comma. If no aggregation is specified, then the default aggregation
            for the metric is used.
            </param>
        <param name="segment">
            The name of the dimension to segment the metric values by. This
            dimension must be applicable to the metric you are retrieving. To
            segment by more than one dimension at a time, separate them with a
            comma (,). In this case, the metric data will be segmented in the
            order the dimensions are listed in the parameter.
            </param>
        <param name="top">
            The number of segments to return.  This value is only valid when
            segment is specified.
            </param>
        <param name="orderby">
            The aggregation function and direction to sort the segments by.
            This value is only valid when segment is specified.
            </param>
        <param name="filter">
            An expression used to filter the results.  This value should be a
            valid OData filter expression where the keys of each clause should
            be applicable dimensions for the metric you are retrieving.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Retrieve metric data
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Gets metric values for a single metric
            </remarks>
        <exception cref="T:Microsoft.Azure.ApplicationInsights.Query.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
