<Type Name="IQueryOperations" FullName="Microsoft.Azure.ApplicationInsights.Query.IQueryOperations">
  <TypeSignature Language="C#" Value="public interface IQueryOperations" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IQueryOperations" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.ApplicationInsights.Query.IQueryOperations" />
  <TypeSignature Language="VB.NET" Value="Public Interface IQueryOperations" />
  <TypeSignature Language="F#" Value="type IQueryOperations = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.ApplicationInsights.Query</AssemblyName>
    <AssemblyVersion>0.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            QueryOperations operations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ExecuteWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.ApplicationInsights.Query.Models.QueryResults&gt;&gt; ExecuteWithHttpMessagesAsync (string appId, string query, string timespan = default, System.Collections.Generic.IList&lt;string&gt; applications = default, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.ApplicationInsights.Query.Models.QueryResults&gt;&gt; ExecuteWithHttpMessagesAsync(string appId, string query, string timespan, class System.Collections.Generic.IList`1&lt;string&gt; applications, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.ApplicationInsights.Query.IQueryOperations.ExecuteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteWithHttpMessagesAsync (appId As String, query As String, Optional timespan As String = Nothing, Optional applications As IList(Of String) = Nothing, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of QueryResults))" />
      <MemberSignature Language="F#" Value="abstract member ExecuteWithHttpMessagesAsync : string * string * string * System.Collections.Generic.IList&lt;string&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.ApplicationInsights.Query.Models.QueryResults&gt;&gt;" Usage="iQueryOperations.ExecuteWithHttpMessagesAsync (appId, query, timespan, applications, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.ApplicationInsights.Query</AssemblyName>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.ApplicationInsights.Query.Models.QueryResults&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="timespan" Type="System.String" />
        <Parameter Name="applications" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="appId">
            ID of the application. This is Application ID from the API Access
            settings blade in the Azure portal.
            </param>
        <param name="query">
            The query to execute.
            </param>
        <param name="timespan">
            Optional. The timespan over which to query data. This is an ISO8601
            time period value.  This timespan is applied in addition to any
            that are specified in the query expression.
            </param>
        <param name="applications">
            A list of Application IDs for cross-application queries.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Execute an Analytics query
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Executes an Analytics query for data.
            [Here](https://dev.applicationinsights.io/documentation/Using-the-API/Query)
            is an example for using POST with an Analytics query.
            </remarks>
        <exception cref="T:Microsoft.Azure.ApplicationInsights.Query.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
