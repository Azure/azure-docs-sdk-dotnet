<Type Name="NetworkConfiguration" FullName="Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration">
  <TypeSignature Language="C#" Value="public class NetworkConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NetworkConfiguration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class NetworkConfiguration" />
  <TypeSignature Language="F#" Value="type NetworkConfiguration = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
    <AssemblyVersion>14.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The network configuration for a Pool.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the NetworkConfiguration class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkConfiguration (string subnetId = default, Microsoft.Azure.Batch.Protocol.Models.DynamicVNetAssignmentScope? dynamicVNetAssignmentScope = default, Microsoft.Azure.Batch.Protocol.Models.PoolEndpointConfiguration endpointConfiguration = default, Microsoft.Azure.Batch.Protocol.Models.PublicIPAddressConfiguration publicIPAddressConfiguration = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string subnetId, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Batch.Protocol.Models.DynamicVNetAssignmentScope&gt; dynamicVNetAssignmentScope, class Microsoft.Azure.Batch.Protocol.Models.PoolEndpointConfiguration endpointConfiguration, class Microsoft.Azure.Batch.Protocol.Models.PublicIPAddressConfiguration publicIPAddressConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.#ctor(System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.DynamicVNetAssignmentScope},Microsoft.Azure.Batch.Protocol.Models.PoolEndpointConfiguration,Microsoft.Azure.Batch.Protocol.Models.PublicIPAddressConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional subnetId As String = Nothing, Optional dynamicVNetAssignmentScope As Nullable(Of DynamicVNetAssignmentScope) = Nothing, Optional endpointConfiguration As PoolEndpointConfiguration = Nothing, Optional publicIPAddressConfiguration As PublicIPAddressConfiguration = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration : string * Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.DynamicVNetAssignmentScope&gt; * Microsoft.Azure.Batch.Protocol.Models.PoolEndpointConfiguration * Microsoft.Azure.Batch.Protocol.Models.PublicIPAddressConfiguration -&gt; Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration" Usage="new Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration (subnetId, dynamicVNetAssignmentScope, endpointConfiguration, publicIPAddressConfiguration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="subnetId" Type="System.String" />
        <Parameter Name="dynamicVNetAssignmentScope" Type="System.Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.DynamicVNetAssignmentScope&gt;" />
        <Parameter Name="endpointConfiguration" Type="Microsoft.Azure.Batch.Protocol.Models.PoolEndpointConfiguration" />
        <Parameter Name="publicIPAddressConfiguration" Type="Microsoft.Azure.Batch.Protocol.Models.PublicIPAddressConfiguration" />
      </Parameters>
      <Docs>
        <param name="subnetId">The ARM resource identifier of the virtual
            network subnet which the Compute Nodes of the Pool will join. This
            is of the form
            /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.</param>
        <param name="dynamicVNetAssignmentScope">The scope of dynamic vnet
            assignment.</param>
        <param name="endpointConfiguration">The configuration for endpoints
            on Compute Nodes in the Batch Pool.</param>
        <param name="publicIPAddressConfiguration">The Public IPAddress
            configuration for Compute Nodes in the Batch Pool.</param>
        <summary>
            Initializes a new instance of the NetworkConfiguration class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DynamicVNetAssignmentScope">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Batch.Protocol.Models.DynamicVNetAssignmentScope? DynamicVNetAssignmentScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Batch.Protocol.Models.DynamicVNetAssignmentScope&gt; DynamicVNetAssignmentScope" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.DynamicVNetAssignmentScope" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicVNetAssignmentScope As Nullable(Of DynamicVNetAssignmentScope)" />
      <MemberSignature Language="F#" Value="member this.DynamicVNetAssignmentScope : Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.DynamicVNetAssignmentScope&gt; with get, set" Usage="Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.DynamicVNetAssignmentScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="dynamicVNetAssignmentScope")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="dynamicVNetAssignmentScope")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.DynamicVNetAssignmentScope&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the scope of dynamic vnet assignment.
            </summary>
        <value>To be added.</value>
        <remarks>
            Possible values include: 'none', 'job'
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndpointConfiguration">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Batch.Protocol.Models.PoolEndpointConfiguration EndpointConfiguration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Batch.Protocol.Models.PoolEndpointConfiguration EndpointConfiguration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.EndpointConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Property EndpointConfiguration As PoolEndpointConfiguration" />
      <MemberSignature Language="F#" Value="member this.EndpointConfiguration : Microsoft.Azure.Batch.Protocol.Models.PoolEndpointConfiguration with get, set" Usage="Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.EndpointConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="endpointConfiguration")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="endpointConfiguration")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Batch.Protocol.Models.PoolEndpointConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the configuration for endpoints on Compute Nodes in
            the Batch Pool.
            </summary>
        <value>To be added.</value>
        <remarks>
            Pool endpoint configuration is only supported on Pools with the
            virtualMachineConfiguration property.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PublicIPAddressConfiguration">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Batch.Protocol.Models.PublicIPAddressConfiguration PublicIPAddressConfiguration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Batch.Protocol.Models.PublicIPAddressConfiguration PublicIPAddressConfiguration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.PublicIPAddressConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Property PublicIPAddressConfiguration As PublicIPAddressConfiguration" />
      <MemberSignature Language="F#" Value="member this.PublicIPAddressConfiguration : Microsoft.Azure.Batch.Protocol.Models.PublicIPAddressConfiguration with get, set" Usage="Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.PublicIPAddressConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="publicIPAddressConfiguration")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="publicIPAddressConfiguration")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Batch.Protocol.Models.PublicIPAddressConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the Public IPAddress configuration for Compute Nodes
            in the Batch Pool.
            </summary>
        <value>To be added.</value>
        <remarks>
            Public IP configuration property is only supported on Pools with
            the virtualMachineConfiguration property.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubnetId">
      <MemberSignature Language="C#" Value="public string SubnetId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubnetId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.SubnetId" />
      <MemberSignature Language="VB.NET" Value="Public Property SubnetId As String" />
      <MemberSignature Language="F#" Value="member this.SubnetId : string with get, set" Usage="Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration.SubnetId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>14.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="subnetId")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="subnetId")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the ARM resource identifier of the virtual network
            subnet which the Compute Nodes of the Pool will join. This is of
            the form
            /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.
            </summary>
        <value>To be added.</value>
        <remarks>
            The virtual network must be in the same region and subscription as
            the Azure Batch Account. The specified subnet should have enough
            free IP addresses to accommodate the number of Compute Nodes in the
            Pool. If the subnet doesn't have enough free IP addresses, the Pool
            will partially allocate Nodes and a resize error will occur. The
            'MicrosoftAzureBatch' service principal must have the 'Classic
            Virtual Machine Contributor' Role-Based Access Control (RBAC) role
            for the specified VNet. The specified subnet must allow
            communication from the Azure Batch service to be able to schedule
            Tasks on the Nodes. This can be verified by checking if the
            specified VNet has any associated Network Security Groups (NSG). If
            communication to the Nodes in the specified subnet is denied by an
            NSG, then the Batch service will set the state of the Compute Nodes
            to unusable. For Pools created with virtualMachineConfiguration
            only ARM virtual networks ('Microsoft.Network/virtualNetworks') are
            supported, but for Pools created with cloudServiceConfiguration
            both ARM and classic virtual networks are supported. If the
            specified VNet has any associated Network Security Groups (NSG),
            then a few reserved system ports must be enabled for inbound
            communication. For Pools created with a virtual machine
            configuration, enable ports 29876 and 29877, as well as port 22 for
            Linux and port 3389 for Windows. For Pools created with a cloud
            service configuration, enable ports 10100, 20100, and 30100. Also
            enable outbound connections to Azure Storage on port 443. For more
            details see:
            https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
