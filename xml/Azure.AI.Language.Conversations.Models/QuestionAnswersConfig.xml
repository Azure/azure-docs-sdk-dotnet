<Type Name="QuestionAnswersConfig" FullName="Azure.AI.Language.Conversations.Models.QuestionAnswersConfig">
  <TypeSignature Language="C#" Value="public class QuestionAnswersConfig : System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QuestionAnswersConfig extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.Language.Conversations.Models.QuestionAnswersConfig" />
  <TypeSignature Language="VB.NET" Value="Public Class QuestionAnswersConfig&#xA;Implements IJsonModel(Of QuestionAnswersConfig), IPersistableModel(Of QuestionAnswersConfig)" />
  <TypeSignature Language="F#" Value="type QuestionAnswersConfig = class&#xA;    interface IJsonModel&lt;QuestionAnswersConfig&gt;&#xA;    interface IPersistableModel&lt;QuestionAnswersConfig&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Parameters to query a knowledge base. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QuestionAnswersConfig ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.QuestionAnswersConfig.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Conversations.Models.QuestionAnswersConfig" />. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnswerContext">
      <MemberSignature Language="C#" Value="public Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswerContext AnswerContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswerContext AnswerContext" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Language.Conversations.Models.QuestionAnswersConfig.AnswerContext" />
      <MemberSignature Language="VB.NET" Value="Public Property AnswerContext As KnowledgeBaseAnswerContext" />
      <MemberSignature Language="F#" Value="member this.AnswerContext : Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswerContext with get, set" Usage="Azure.AI.Language.Conversations.Models.QuestionAnswersConfig.AnswerContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswerContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Context object with previous QnA's information. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfidenceThreshold">
      <MemberSignature Language="C#" Value="public double? ConfidenceThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float64&gt; ConfidenceThreshold" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Language.Conversations.Models.QuestionAnswersConfig.ConfidenceThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Property ConfidenceThreshold As Nullable(Of Double)" />
      <MemberSignature Language="F#" Value="member this.ConfidenceThreshold : Nullable&lt;double&gt; with get, set" Usage="Azure.AI.Language.Conversations.Models.QuestionAnswersConfig.ConfidenceThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Minimum threshold score for answers, value ranges from 0 to 1. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filters">
      <MemberSignature Language="C#" Value="public Azure.AI.Language.Conversations.Models.QueryFilters Filters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.Language.Conversations.Models.QueryFilters Filters" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Language.Conversations.Models.QuestionAnswersConfig.Filters" />
      <MemberSignature Language="VB.NET" Value="Public Property Filters As QueryFilters" />
      <MemberSignature Language="F#" Value="member this.Filters : Azure.AI.Language.Conversations.Models.QueryFilters with get, set" Usage="Azure.AI.Language.Conversations.Models.QuestionAnswersConfig.Filters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Conversations.Models.QueryFilters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Filter QnAs based on given metadata list and knowledge base sources. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeUnstructuredSources">
      <MemberSignature Language="C#" Value="public bool? IncludeUnstructuredSources { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IncludeUnstructuredSources" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Language.Conversations.Models.QuestionAnswersConfig.IncludeUnstructuredSources" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeUnstructuredSources As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IncludeUnstructuredSources : Nullable&lt;bool&gt; with get, set" Usage="Azure.AI.Language.Conversations.Models.QuestionAnswersConfig.IncludeUnstructuredSources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> (Optional) Flag to enable Query over Unstructured Sources. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JsonModelWriteCore">
      <MemberSignature Language="C#" Value="protected virtual void JsonModelWriteCore (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void JsonModelWriteCore(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.QuestionAnswersConfig.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub JsonModelWriteCore (writer As Utf8JsonWriter, options As ModelReaderWriterOptions)" />
      <MemberSignature Language="F#" Value="abstract member JsonModelWriteCore : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.JsonModelWriteCore : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="questionAnswersConfig.JsonModelWriteCore (writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer"> The JSON writer. </param>
        <param name="options"> The client options for reading and writing models. </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QnaId">
      <MemberSignature Language="C#" Value="public int? QnaId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; QnaId" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Language.Conversations.Models.QuestionAnswersConfig.QnaId" />
      <MemberSignature Language="VB.NET" Value="Public Property QnaId As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.QnaId : Nullable&lt;int&gt; with get, set" Usage="Azure.AI.Language.Conversations.Models.QuestionAnswersConfig.QnaId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Exact QnA ID to fetch from the knowledge base, this field takes priority over question. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Question">
      <MemberSignature Language="C#" Value="public string Question { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Question" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Language.Conversations.Models.QuestionAnswersConfig.Question" />
      <MemberSignature Language="VB.NET" Value="Public Property Question As String" />
      <MemberSignature Language="F#" Value="member this.Question : string with get, set" Usage="Azure.AI.Language.Conversations.Models.QuestionAnswersConfig.Question" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> User question to query against the knowledge base. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RankerKind">
      <MemberSignature Language="C#" Value="public Azure.AI.Language.Conversations.Models.RankerKind? RankerKind { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.AI.Language.Conversations.Models.RankerKind&gt; RankerKind" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Language.Conversations.Models.QuestionAnswersConfig.RankerKind" />
      <MemberSignature Language="VB.NET" Value="Public Property RankerKind As Nullable(Of RankerKind)" />
      <MemberSignature Language="F#" Value="member this.RankerKind : Nullable&lt;Azure.AI.Language.Conversations.Models.RankerKind&gt; with get, set" Usage="Azure.AI.Language.Conversations.Models.QuestionAnswersConfig.RankerKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.AI.Language.Conversations.Models.RankerKind&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Type of ranker to be used. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShortAnswerOptions">
      <MemberSignature Language="C#" Value="public Azure.AI.Language.Conversations.Models.ShortAnswerConfig ShortAnswerOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.Language.Conversations.Models.ShortAnswerConfig ShortAnswerOptions" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Language.Conversations.Models.QuestionAnswersConfig.ShortAnswerOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortAnswerOptions As ShortAnswerConfig" />
      <MemberSignature Language="F#" Value="member this.ShortAnswerOptions : Azure.AI.Language.Conversations.Models.ShortAnswerConfig with get, set" Usage="Azure.AI.Language.Conversations.Models.QuestionAnswersConfig.ShortAnswerOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Conversations.Models.ShortAnswerConfig</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> To configure Answer span prediction feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.Language.Conversations.Models.QuestionAnswersConfig IJsonModel&lt;QuestionAnswersConfig&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.Language.Conversations.Models.QuestionAnswersConfig System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.QuestionAnswersConfig.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#Language#Conversations#Models#QuestionAnswersConfig&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As QuestionAnswersConfig Implements IJsonModel(Of QuestionAnswersConfig).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Language.Conversations.Models.QuestionAnswersConfig" Usage="questionAnswersConfig.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Conversations.Models.QuestionAnswersConfig</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;QuestionAnswersConfig&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.QuestionAnswersConfig.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#Language#Conversations#Models#QuestionAnswersConfig&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of QuestionAnswersConfig).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="questionAnswersConfig.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.Language.Conversations.Models.QuestionAnswersConfig IPersistableModel&lt;QuestionAnswersConfig&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.Language.Conversations.Models.QuestionAnswersConfig System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.QuestionAnswersConfig.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Language#Conversations#Models#QuestionAnswersConfig&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As QuestionAnswersConfig Implements IPersistableModel(Of QuestionAnswersConfig).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Language.Conversations.Models.QuestionAnswersConfig" Usage="questionAnswersConfig.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Conversations.Models.QuestionAnswersConfig</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;QuestionAnswersConfig&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.QuestionAnswersConfig.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Language#Conversations#Models#QuestionAnswersConfig&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of QuestionAnswersConfig).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="questionAnswersConfig.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;QuestionAnswersConfig&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.QuestionAnswersConfig.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Language#Conversations#Models#QuestionAnswersConfig&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of QuestionAnswersConfig).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="questionAnswersConfig.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.QuestionAnswersConfig&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public int? Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; Top" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Language.Conversations.Models.QuestionAnswersConfig.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.Top : Nullable&lt;int&gt; with get, set" Usage="Azure.AI.Language.Conversations.Models.QuestionAnswersConfig.Top" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Max number of answers to be returned for the question. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserId">
      <MemberSignature Language="C#" Value="public string UserId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserId" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Language.Conversations.Models.QuestionAnswersConfig.UserId" />
      <MemberSignature Language="VB.NET" Value="Public Property UserId As String" />
      <MemberSignature Language="F#" Value="member this.UserId : string with get, set" Usage="Azure.AI.Language.Conversations.Models.QuestionAnswersConfig.UserId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Unique identifier for the user. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
