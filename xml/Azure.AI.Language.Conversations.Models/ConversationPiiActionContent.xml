<Type Name="ConversationPiiActionContent" FullName="Azure.AI.Language.Conversations.Models.ConversationPiiActionContent">
  <TypeSignature Language="C#" Value="public class ConversationPiiActionContent : System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConversationPiiActionContent extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.Language.Conversations.Models.ConversationPiiActionContent" />
  <TypeSignature Language="VB.NET" Value="Public Class ConversationPiiActionContent&#xA;Implements IJsonModel(Of ConversationPiiActionContent), IPersistableModel(Of ConversationPiiActionContent)" />
  <TypeSignature Language="F#" Value="type ConversationPiiActionContent = class&#xA;    interface IJsonModel&lt;ConversationPiiActionContent&gt;&#xA;    interface IPersistableModel&lt;ConversationPiiActionContent&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Supported parameters for a conversational pii task. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConversationPiiActionContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.ConversationPiiActionContent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Language.Conversations.Models.ConversationPiiActionContent" />. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExcludePiiCategories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.AI.Language.Conversations.Models.ConversationPiiCategoryExclusions&gt; ExcludePiiCategories { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Azure.AI.Language.Conversations.Models.ConversationPiiCategoryExclusions&gt; ExcludePiiCategories" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Language.Conversations.Models.ConversationPiiActionContent.ExcludePiiCategories" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExcludePiiCategories As IList(Of ConversationPiiCategoryExclusions)" />
      <MemberSignature Language="F#" Value="member this.ExcludePiiCategories : System.Collections.Generic.IList&lt;Azure.AI.Language.Conversations.Models.ConversationPiiCategoryExclusions&gt;" Usage="Azure.AI.Language.Conversations.Models.ConversationPiiActionContent.ExcludePiiCategories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.AI.Language.Conversations.Models.ConversationPiiCategoryExclusions&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> List of categories that need to be excluded instead of included. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JsonModelWriteCore">
      <MemberSignature Language="C#" Value="protected virtual void JsonModelWriteCore (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void JsonModelWriteCore(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.ConversationPiiActionContent.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub JsonModelWriteCore (writer As Utf8JsonWriter, options As ModelReaderWriterOptions)" />
      <MemberSignature Language="F#" Value="abstract member JsonModelWriteCore : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.JsonModelWriteCore : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="conversationPiiActionContent.JsonModelWriteCore (writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer"> The JSON writer. </param>
        <param name="options"> The client options for reading and writing models. </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoggingOptOut">
      <MemberSignature Language="C#" Value="public bool? LoggingOptOut { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; LoggingOptOut" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Language.Conversations.Models.ConversationPiiActionContent.LoggingOptOut" />
      <MemberSignature Language="VB.NET" Value="Public Property LoggingOptOut As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.LoggingOptOut : Nullable&lt;bool&gt; with get, set" Usage="Azure.AI.Language.Conversations.Models.ConversationPiiActionContent.LoggingOptOut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> logging opt out. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelVersion">
      <MemberSignature Language="C#" Value="public string ModelVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ModelVersion" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Language.Conversations.Models.ConversationPiiActionContent.ModelVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property ModelVersion As String" />
      <MemberSignature Language="F#" Value="member this.ModelVersion : string with get, set" Usage="Azure.AI.Language.Conversations.Models.ConversationPiiActionContent.ModelVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> model version. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PiiCategories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.AI.Language.Conversations.Models.ConversationPiiCategories&gt; PiiCategories { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Azure.AI.Language.Conversations.Models.ConversationPiiCategories&gt; PiiCategories" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Language.Conversations.Models.ConversationPiiActionContent.PiiCategories" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PiiCategories As IList(Of ConversationPiiCategories)" />
      <MemberSignature Language="F#" Value="member this.PiiCategories : System.Collections.Generic.IList&lt;Azure.AI.Language.Conversations.Models.ConversationPiiCategories&gt;" Usage="Azure.AI.Language.Conversations.Models.ConversationPiiActionContent.PiiCategories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.AI.Language.Conversations.Models.ConversationPiiCategories&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Array of ConversationPIICategories. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedactAudioTiming">
      <MemberSignature Language="C#" Value="public bool? RedactAudioTiming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; RedactAudioTiming" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Language.Conversations.Models.ConversationPiiActionContent.RedactAudioTiming" />
      <MemberSignature Language="VB.NET" Value="Public Property RedactAudioTiming As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.RedactAudioTiming : Nullable&lt;bool&gt; with get, set" Usage="Azure.AI.Language.Conversations.Models.ConversationPiiActionContent.RedactAudioTiming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Flag to indicate if response should include audio stream offset and duration for any detected entities to be redacted. By default, audio timing of redacted entities are not included. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedactionCharacter">
      <MemberSignature Language="C#" Value="public Azure.AI.Language.Conversations.Models.RedactionCharacter? RedactionCharacter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.AI.Language.Conversations.Models.RedactionCharacter&gt; RedactionCharacter" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Language.Conversations.Models.ConversationPiiActionContent.RedactionCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Property RedactionCharacter As Nullable(Of RedactionCharacter)" />
      <MemberSignature Language="F#" Value="member this.RedactionCharacter : Nullable&lt;Azure.AI.Language.Conversations.Models.RedactionCharacter&gt; with get, set" Usage="Azure.AI.Language.Conversations.Models.ConversationPiiActionContent.RedactionCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.AI.Language.Conversations.Models.RedactionCharacter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Optional parameter to use a Custom Character to be used for redaction in PII responses. Default character will be * as before. We allow specific ascii characters for redaction. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedactionPolicy">
      <MemberSignature Language="C#" Value="public Azure.AI.Language.Conversations.Models.BaseRedactionPolicy RedactionPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.Language.Conversations.Models.BaseRedactionPolicy RedactionPolicy" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Language.Conversations.Models.ConversationPiiActionContent.RedactionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property RedactionPolicy As BaseRedactionPolicy" />
      <MemberSignature Language="F#" Value="member this.RedactionPolicy : Azure.AI.Language.Conversations.Models.BaseRedactionPolicy with get, set" Usage="Azure.AI.Language.Conversations.Models.ConversationPiiActionContent.RedactionPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Conversations.Models.BaseRedactionPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Optional parameter determine what type of redaction to use.
            Please note <see cref="T:Azure.AI.Language.Conversations.Models.BaseRedactionPolicy" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.AI.Language.Conversations.Models.CharacterMaskPolicyType" />, <see cref="T:Azure.AI.Language.Conversations.Models.EntityMaskTypePolicyType" /> and <see cref="T:Azure.AI.Language.Conversations.Models.NoMaskPolicyType" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedactionSource">
      <MemberSignature Language="C#" Value="public Azure.AI.Language.Conversations.Models.TranscriptContentType? RedactionSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.AI.Language.Conversations.Models.TranscriptContentType&gt; RedactionSource" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Language.Conversations.Models.ConversationPiiActionContent.RedactionSource" />
      <MemberSignature Language="VB.NET" Value="Public Property RedactionSource As Nullable(Of TranscriptContentType)" />
      <MemberSignature Language="F#" Value="member this.RedactionSource : Nullable&lt;Azure.AI.Language.Conversations.Models.TranscriptContentType&gt; with get, set" Usage="Azure.AI.Language.Conversations.Models.ConversationPiiActionContent.RedactionSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.AI.Language.Conversations.Models.TranscriptContentType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> For transcript conversations, this parameter provides information regarding which content type (ITN, Text, Lexical, Masked ITN) should be used for entity detection. The details of the entities detected - like the offset, length and the text itself - will correspond to the text type selected here. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.Language.Conversations.Models.ConversationPiiActionContent IJsonModel&lt;ConversationPiiActionContent&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.Language.Conversations.Models.ConversationPiiActionContent System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.ConversationPiiActionContent.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#Language#Conversations#Models#ConversationPiiActionContent&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As ConversationPiiActionContent Implements IJsonModel(Of ConversationPiiActionContent).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Language.Conversations.Models.ConversationPiiActionContent" Usage="conversationPiiActionContent.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Conversations.Models.ConversationPiiActionContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;ConversationPiiActionContent&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.ConversationPiiActionContent.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#Language#Conversations#Models#ConversationPiiActionContent&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of ConversationPiiActionContent).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="conversationPiiActionContent.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.Language.Conversations.Models.ConversationPiiActionContent IPersistableModel&lt;ConversationPiiActionContent&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.Language.Conversations.Models.ConversationPiiActionContent System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.ConversationPiiActionContent.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Language#Conversations#Models#ConversationPiiActionContent&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As ConversationPiiActionContent Implements IPersistableModel(Of ConversationPiiActionContent).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Language.Conversations.Models.ConversationPiiActionContent" Usage="conversationPiiActionContent.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Conversations.Models.ConversationPiiActionContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;ConversationPiiActionContent&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.ConversationPiiActionContent.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Language#Conversations#Models#ConversationPiiActionContent&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of ConversationPiiActionContent).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="conversationPiiActionContent.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary>
        <returns>The format that the model uses when communicating with the service.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;ConversationPiiActionContent&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.ConversationPiiActionContent.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Language#Conversations#Models#ConversationPiiActionContent&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of ConversationPiiActionContent).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="conversationPiiActionContent.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Language.Conversations.Models.ConversationPiiActionContent&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
