<Type Name="BlobContainersImpl" FullName="Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl">
  <TypeSignature Language="C#" Value="public class BlobContainersImpl : Microsoft.Azure.Management.ResourceManager.Fluent.Core.Wrapper&lt;Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations&gt;, Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta, Microsoft.Azure.Management.Storage.Fluent.IBlobContainers" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BlobContainersImpl extends Microsoft.Azure.Management.ResourceManager.Fluent.Core.Wrapper`1&lt;class Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations&gt; implements class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta, class Microsoft.Azure.Management.Storage.Fluent.IBlobContainers" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl" />
  <TypeSignature Language="VB.NET" Value="Public Class BlobContainersImpl&#xA;Inherits Wrapper(Of IBlobContainersOperations)&#xA;Implements IBeta, IBlobContainers" />
  <TypeSignature Language="F#" Value="type BlobContainersImpl = class&#xA;    inherit Wrapper&lt;IBlobContainersOperations&gt;&#xA;    interface IBlobContainers&#xA;    interface IBeta" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Storage.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.61</AssemblyVersion>
    <AssemblyVersion>1.0.0.62</AssemblyVersion>
    <AssemblyVersion>1.0.0.63</AssemblyVersion>
    <AssemblyVersion>1.0.0.64</AssemblyVersion>
    <AssemblyVersion>1.0.0.65</AssemblyVersion>
    <AssemblyVersion>1.0.0.66</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.Wrapper&lt;Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">Microsoft.Azure.Management.Storage.Fluent.IBlobContainersOperations</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IBeta</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.Storage.Fluent.IBlobContainers</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ClearLegalHoldAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.ILegalHold&gt; ClearLegalHoldAsync (string resourceGroupName, string accountName, string containerName, System.Collections.Generic.IList&lt;string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Storage.Fluent.ILegalHold&gt; ClearLegalHoldAsync(string resourceGroupName, string accountName, string containerName, class System.Collections.Generic.IList`1&lt;string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.ClearLegalHoldAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearLegalHoldAsync (resourceGroupName As String, accountName As String, containerName As String, tags As IList(Of String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of ILegalHold)" />
      <MemberSignature Language="F#" Value="member this.ClearLegalHoldAsync : string * string * string * System.Collections.Generic.IList&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.ILegalHold&gt;" Usage="blobContainersImpl.ClearLegalHoldAsync (resourceGroupName, accountName, containerName, tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Storage.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.ILegalHold&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">To be added.</param>
        <param name="accountName">To be added.</param>
        <param name="containerName">To be added.</param>
        <param name="tags">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineContainer">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl DefineContainer (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl DefineContainer(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.DefineContainer(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineContainer (name As String) As BlobContainerImpl" />
      <MemberSignature Language="F#" Value="member this.DefineContainer : string -&gt; Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl" Usage="blobContainersImpl.DefineContainer name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Storage.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Storage.Fluent.BlobContainerImpl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineImmutabilityPolicy">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl DefineImmutabilityPolicy (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl DefineImmutabilityPolicy(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.DefineImmutabilityPolicy(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineImmutabilityPolicy (name As String) As ImmutabilityPolicyImpl" />
      <MemberSignature Language="F#" Value="member this.DefineImmutabilityPolicy : string -&gt; Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl" Usage="blobContainersImpl.DefineImmutabilityPolicy name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Storage.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicyImpl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DeleteAsync (string resourceGroupName, string accountName, string containerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DeleteAsync(string resourceGroupName, string accountName, string containerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteAsync (resourceGroupName As String, accountName As String, containerName As String, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="member this.DeleteAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="blobContainersImpl.DeleteAsync (resourceGroupName, accountName, containerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Storage.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">To be added.</param>
        <param name="accountName">To be added.</param>
        <param name="containerName">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteImmutabilityPolicyAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DeleteImmutabilityPolicyAsync (string resourceGroupName, string accountName, string containerName, string ifMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DeleteImmutabilityPolicyAsync(string resourceGroupName, string accountName, string containerName, string ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.DeleteImmutabilityPolicyAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteImmutabilityPolicyAsync (resourceGroupName As String, accountName As String, containerName As String, ifMatch As String, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="member this.DeleteImmutabilityPolicyAsync : string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="blobContainersImpl.DeleteImmutabilityPolicyAsync (resourceGroupName, accountName, containerName, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Storage.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">To be added.</param>
        <param name="accountName">To be added.</param>
        <param name="containerName">To be added.</param>
        <param name="ifMatch">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendImmutabilityPolicyAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy&gt; ExtendImmutabilityPolicyAsync (string resourceGroupName, string accountName, string containerName, string ifMatch, int immutabilityPeriodSinceCreationInDays, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy&gt; ExtendImmutabilityPolicyAsync(string resourceGroupName, string accountName, string containerName, string ifMatch, int32 immutabilityPeriodSinceCreationInDays, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.ExtendImmutabilityPolicyAsync(System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExtendImmutabilityPolicyAsync (resourceGroupName As String, accountName As String, containerName As String, ifMatch As String, immutabilityPeriodSinceCreationInDays As Integer, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IImmutabilityPolicy)" />
      <MemberSignature Language="F#" Value="member this.ExtendImmutabilityPolicyAsync : string * string * string * string * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy&gt;" Usage="blobContainersImpl.ExtendImmutabilityPolicyAsync (resourceGroupName, accountName, containerName, ifMatch, immutabilityPeriodSinceCreationInDays, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Storage.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="immutabilityPeriodSinceCreationInDays" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">To be added.</param>
        <param name="accountName">To be added.</param>
        <param name="containerName">To be added.</param>
        <param name="ifMatch">To be added.</param>
        <param name="immutabilityPeriodSinceCreationInDays">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.IBlobContainer&gt; GetAsync (string resourceGroupName, string accountName, string containerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Storage.Fluent.IBlobContainer&gt; GetAsync(string resourceGroupName, string accountName, string containerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.GetAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (resourceGroupName As String, accountName As String, containerName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IBlobContainer)" />
      <MemberSignature Language="F#" Value="member this.GetAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.IBlobContainer&gt;" Usage="blobContainersImpl.GetAsync (resourceGroupName, accountName, containerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Storage.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.IBlobContainer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">To be added.</param>
        <param name="accountName">To be added.</param>
        <param name="containerName">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImmutabilityPolicyAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy&gt; GetImmutabilityPolicyAsync (string resourceGroupName, string accountName, string containerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy&gt; GetImmutabilityPolicyAsync(string resourceGroupName, string accountName, string containerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.GetImmutabilityPolicyAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetImmutabilityPolicyAsync (resourceGroupName As String, accountName As String, containerName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IImmutabilityPolicy)" />
      <MemberSignature Language="F#" Value="member this.GetImmutabilityPolicyAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy&gt;" Usage="blobContainersImpl.GetImmutabilityPolicyAsync (resourceGroupName, accountName, containerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Storage.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">To be added.</param>
        <param name="accountName">To be added.</param>
        <param name="containerName">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;Microsoft.Azure.Management.Storage.Fluent.IListContainerItems&gt;&gt; ListAsync (string resourceGroupName, string accountName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection`1&lt;class Microsoft.Azure.Management.Storage.Fluent.IListContainerItems&gt;&gt; ListAsync(string resourceGroupName, string accountName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.ListAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListAsync (resourceGroupName As String, accountName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IPagedCollection(Of IListContainerItems))" />
      <MemberSignature Language="F#" Value="member this.ListAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;Microsoft.Azure.Management.Storage.Fluent.IListContainerItems&gt;&gt;" Usage="blobContainersImpl.ListAsync (resourceGroupName, accountName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Storage.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;Microsoft.Azure.Management.Storage.Fluent.IListContainerItems&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">To be added.</param>
        <param name="accountName">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockImmutabilityPolicyAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy&gt; LockImmutabilityPolicyAsync (string resourceGroupName, string accountName, string containerName, string ifMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy&gt; LockImmutabilityPolicyAsync(string resourceGroupName, string accountName, string containerName, string ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.LockImmutabilityPolicyAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function LockImmutabilityPolicyAsync (resourceGroupName As String, accountName As String, containerName As String, ifMatch As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IImmutabilityPolicy)" />
      <MemberSignature Language="F#" Value="member this.LockImmutabilityPolicyAsync : string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy&gt;" Usage="blobContainersImpl.LockImmutabilityPolicyAsync (resourceGroupName, accountName, containerName, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Storage.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">To be added.</param>
        <param name="accountName">To be added.</param>
        <param name="containerName">To be added.</param>
        <param name="ifMatch">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Manager">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Storage.Fluent.StorageManager Manager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Azure.Management.Storage.Fluent.StorageManager Manager() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Manager" />
      <MemberSignature Language="VB.NET" Value="Public Function Manager () As StorageManager" />
      <MemberSignature Language="F#" Value="member this.Manager : unit -&gt; Microsoft.Azure.Management.Storage.Fluent.StorageManager" Usage="blobContainersImpl.Manager " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Storage.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Storage.Fluent.StorageManager</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.ClearLegalHoldAsync">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.ILegalHold&gt; IBlobContainers.ClearLegalHoldAsync (string resourceGroupName, string accountName, string containerName, System.Collections.Generic.IList&lt;string&gt; tags, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Storage.Fluent.ILegalHold&gt; Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.ClearLegalHoldAsync(string resourceGroupName, string accountName, string containerName, class System.Collections.Generic.IList`1&lt;string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#ClearLegalHoldAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Function ClearLegalHoldAsync (resourceGroupName As String, accountName As String, containerName As String, tags As IList(Of String), cancellationToken As CancellationToken) As Task(Of ILegalHold) Implements IBlobContainers.ClearLegalHoldAsync" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.ClearLegalHoldAsync : string * string * string * System.Collections.Generic.IList&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.ILegalHold&gt;&#xA;override this.Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.ClearLegalHoldAsync : string * string * string * System.Collections.Generic.IList&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.ILegalHold&gt;" Usage="blobContainersImpl.Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.ClearLegalHoldAsync (resourceGroupName, accountName, containerName, tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.ClearLegalHoldAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Storage.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.ILegalHold&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
        <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
        <param name="containerName">The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.</param>
        <param name="tags">Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.</param>
        <summary>
            Clears legal hold tags. Clearing the same or non-existent tag results in an idempotent operation. ClearLegalHold clears out only the specified tags in the request.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
        <return>The observable for the request.</return>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DefineContainer">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IBlank IBlobContainers.DefineContainer (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IBlank Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DefineContainer(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#DefineContainer(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function DefineContainer (name As String) As IBlank Implements IBlobContainers.DefineContainer" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DefineContainer : string -&gt; Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IBlank&#xA;override this.Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DefineContainer : string -&gt; Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IBlank" Usage="blobContainersImpl.Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DefineContainer name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DefineContainer(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Storage.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Storage.Fluent.BlobContainer.Definition.IBlank</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Resource name.</param>
        <summary>
            Begins definition for a new Container resource.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The first stage of the new Container definition.</return>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DefineImmutabilityPolicy">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Definition.IBlank IBlobContainers.DefineImmutabilityPolicy (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Definition.IBlank Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DefineImmutabilityPolicy(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#DefineImmutabilityPolicy(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function DefineImmutabilityPolicy (name As String) As IBlank Implements IBlobContainers.DefineImmutabilityPolicy" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DefineImmutabilityPolicy : string -&gt; Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Definition.IBlank&#xA;override this.Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DefineImmutabilityPolicy : string -&gt; Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Definition.IBlank" Usage="blobContainersImpl.Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DefineImmutabilityPolicy name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DefineImmutabilityPolicy(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Storage.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Storage.Fluent.ImmutabilityPolicy.Definition.IBlank</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Resource name.</param>
        <summary>
            Begins definition for a new ImmutabilityPolicy resource.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The first stage of the new ImmutabilityPolicy definition.</return>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DeleteAsync">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Task IBlobContainers.DeleteAsync (string resourceGroupName, string accountName, string containerName, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Threading.Tasks.Task Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DeleteAsync(string resourceGroupName, string accountName, string containerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Function DeleteAsync (resourceGroupName As String, accountName As String, containerName As String, cancellationToken As CancellationToken) As Task Implements IBlobContainers.DeleteAsync" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DeleteAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DeleteAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="blobContainersImpl.Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DeleteAsync (resourceGroupName, accountName, containerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Storage.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
        <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
        <param name="containerName">The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.</param>
        <summary>
            Deletes specified container under its account.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
        <return>The observable for the request.</return>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DeleteImmutabilityPolicyAsync">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Task IBlobContainers.DeleteImmutabilityPolicyAsync (string resourceGroupName, string accountName, string containerName, string ifMatch, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Threading.Tasks.Task Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DeleteImmutabilityPolicyAsync(string resourceGroupName, string accountName, string containerName, string ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#DeleteImmutabilityPolicyAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Function DeleteImmutabilityPolicyAsync (resourceGroupName As String, accountName As String, containerName As String, ifMatch As String, cancellationToken As CancellationToken) As Task Implements IBlobContainers.DeleteImmutabilityPolicyAsync" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DeleteImmutabilityPolicyAsync : string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DeleteImmutabilityPolicyAsync : string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="blobContainersImpl.Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DeleteImmutabilityPolicyAsync (resourceGroupName, accountName, containerName, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.DeleteImmutabilityPolicyAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Storage.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
        <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
        <param name="containerName">The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.</param>
        <param name="ifMatch">The entity state (ETag) version of the immutability policy to update. A value of "" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.</param>
        <summary>
            Aborts an unlocked immutability policy. The response of delete has immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is required for this operation. Deleting a locked immutability policy is not allowed, only way is to delete the container after deleting all blobs inside the container.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
        <return>The observable for the request.</return>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.ExtendImmutabilityPolicyAsync">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy&gt; IBlobContainers.ExtendImmutabilityPolicyAsync (string resourceGroupName, string accountName, string containerName, string ifMatch, int immutabilityPeriodSinceCreationInDays, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy&gt; Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.ExtendImmutabilityPolicyAsync(string resourceGroupName, string accountName, string containerName, string ifMatch, int32 immutabilityPeriodSinceCreationInDays, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#ExtendImmutabilityPolicyAsync(System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Function ExtendImmutabilityPolicyAsync (resourceGroupName As String, accountName As String, containerName As String, ifMatch As String, immutabilityPeriodSinceCreationInDays As Integer, cancellationToken As CancellationToken) As Task(Of IImmutabilityPolicy) Implements IBlobContainers.ExtendImmutabilityPolicyAsync" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.ExtendImmutabilityPolicyAsync : string * string * string * string * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy&gt;&#xA;override this.Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.ExtendImmutabilityPolicyAsync : string * string * string * string * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy&gt;" Usage="blobContainersImpl.Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.ExtendImmutabilityPolicyAsync (resourceGroupName, accountName, containerName, ifMatch, immutabilityPeriodSinceCreationInDays, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.ExtendImmutabilityPolicyAsync(System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Storage.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="immutabilityPeriodSinceCreationInDays" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
        <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
        <param name="containerName">The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.</param>
        <param name="ifMatch">The entity state (ETag) version of the immutability policy to update. A value of "" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.</param>
        <param name="immutabilityPeriodSinceCreationInDays">The immutability period for the blobs in the container since the policy creation, in days.</param>
        <summary>
            Extends the immutabilityPeriodSinceCreationInDays of a locked immutabilityPolicy. The only action allowed on a Locked policy will be this action. ETag in If-Match is required for this operation.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
        <return>The observable for the request.</return>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.GetAsync">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.IBlobContainer&gt; IBlobContainers.GetAsync (string resourceGroupName, string accountName, string containerName, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Storage.Fluent.IBlobContainer&gt; Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.GetAsync(string resourceGroupName, string accountName, string containerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#GetAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Function GetAsync (resourceGroupName As String, accountName As String, containerName As String, cancellationToken As CancellationToken) As Task(Of IBlobContainer) Implements IBlobContainers.GetAsync" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.GetAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.IBlobContainer&gt;&#xA;override this.Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.GetAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.IBlobContainer&gt;" Usage="blobContainersImpl.Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.GetAsync (resourceGroupName, accountName, containerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.GetAsync(System.String,System.String,System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Storage.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.IBlobContainer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
        <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
        <param name="containerName">The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.</param>
        <summary>
            Gets properties of a specified container.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
        <return>The observable for the request.</return>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.GetImmutabilityPolicyAsync">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy&gt; IBlobContainers.GetImmutabilityPolicyAsync (string resourceGroupName, string accountName, string containerName, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy&gt; Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.GetImmutabilityPolicyAsync(string resourceGroupName, string accountName, string containerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#GetImmutabilityPolicyAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Function GetImmutabilityPolicyAsync (resourceGroupName As String, accountName As String, containerName As String, cancellationToken As CancellationToken) As Task(Of IImmutabilityPolicy) Implements IBlobContainers.GetImmutabilityPolicyAsync" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.GetImmutabilityPolicyAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy&gt;&#xA;override this.Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.GetImmutabilityPolicyAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy&gt;" Usage="blobContainersImpl.Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.GetImmutabilityPolicyAsync (resourceGroupName, accountName, containerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.GetImmutabilityPolicyAsync(System.String,System.String,System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Storage.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
        <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
        <param name="containerName">The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.</param>
        <summary>
            Gets the existing immutability policy along with the corresponding ETag in response headers and body.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
        <return>The observable for the request.</return>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.ListAsync">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;Microsoft.Azure.Management.Storage.Fluent.IListContainerItems&gt;&gt; IBlobContainers.ListAsync (string resourceGroupName, string accountName, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection`1&lt;class Microsoft.Azure.Management.Storage.Fluent.IListContainerItems&gt;&gt; Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.ListAsync(string resourceGroupName, string accountName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#ListAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Function ListAsync (resourceGroupName As String, accountName As String, cancellationToken As CancellationToken) As Task(Of IPagedCollection(Of IListContainerItems)) Implements IBlobContainers.ListAsync" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.ListAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;Microsoft.Azure.Management.Storage.Fluent.IListContainerItems&gt;&gt;&#xA;override this.Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.ListAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;Microsoft.Azure.Management.Storage.Fluent.IListContainerItems&gt;&gt;" Usage="blobContainersImpl.Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.ListAsync (resourceGroupName, accountName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.ListAsync(System.String,System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Storage.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.ResourceManager.Fluent.Core.IPagedCollection&lt;Microsoft.Azure.Management.Storage.Fluent.IListContainerItems&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
        <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
        <summary>
            Lists all containers and does not support a prefix like data plane. Also SRP today does not return continuation token.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
        <return>The observable for the request.</return>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.LockImmutabilityPolicyAsync">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy&gt; IBlobContainers.LockImmutabilityPolicyAsync (string resourceGroupName, string accountName, string containerName, string ifMatch, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy&gt; Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.LockImmutabilityPolicyAsync(string resourceGroupName, string accountName, string containerName, string ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#LockImmutabilityPolicyAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Function LockImmutabilityPolicyAsync (resourceGroupName As String, accountName As String, containerName As String, ifMatch As String, cancellationToken As CancellationToken) As Task(Of IImmutabilityPolicy) Implements IBlobContainers.LockImmutabilityPolicyAsync" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.LockImmutabilityPolicyAsync : string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy&gt;&#xA;override this.Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.LockImmutabilityPolicyAsync : string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy&gt;" Usage="blobContainersImpl.Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.LockImmutabilityPolicyAsync (resourceGroupName, accountName, containerName, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.LockImmutabilityPolicyAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Storage.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.IImmutabilityPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
        <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
        <param name="containerName">The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.</param>
        <param name="ifMatch">The entity state (ETag) version of the immutability policy to update. A value of "" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.</param>
        <summary>
            Sets the ImmutabilityPolicy to Locked state. The only action allowed on a Locked policy is ExtendImmutabilityPolicy action. ETag in If-Match is required for this operation.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
        <return>The observable for the request.</return>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.SetLegalHoldAsync">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.ILegalHold&gt; IBlobContainers.SetLegalHoldAsync (string resourceGroupName, string accountName, string containerName, System.Collections.Generic.IList&lt;string&gt; tags, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Storage.Fluent.ILegalHold&gt; Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.SetLegalHoldAsync(string resourceGroupName, string accountName, string containerName, class System.Collections.Generic.IList`1&lt;string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.Microsoft#Azure#Management#Storage#Fluent#IBlobContainers#SetLegalHoldAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Function SetLegalHoldAsync (resourceGroupName As String, accountName As String, containerName As String, tags As IList(Of String), cancellationToken As CancellationToken) As Task(Of ILegalHold) Implements IBlobContainers.SetLegalHoldAsync" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.SetLegalHoldAsync : string * string * string * System.Collections.Generic.IList&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.ILegalHold&gt;&#xA;override this.Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.SetLegalHoldAsync : string * string * string * System.Collections.Generic.IList&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.ILegalHold&gt;" Usage="blobContainersImpl.Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.SetLegalHoldAsync (resourceGroupName, accountName, containerName, tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Storage.Fluent.IBlobContainers.SetLegalHoldAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Storage.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.ILegalHold&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <param name="resourceGroupName">The name of the resource group within the user's subscription. The name is case insensitive.</param>
        <param name="accountName">The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</param>
        <param name="containerName">The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.</param>
        <param name="tags">Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.</param>
        <summary>
            Sets legal hold tags. Setting the same tag results in an idempotent operation. SetLegalHold follows an append pattern and does not clear out the existing tags that are not specified in the request.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <throws>IllegalArgumentException thrown if parameters fail the validation.</throws>
        <return>The observable for the request.</return>
      </Docs>
    </Member>
    <Member MemberName="SetLegalHoldAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.ILegalHold&gt; SetLegalHoldAsync (string resourceGroupName, string accountName, string containerName, System.Collections.Generic.IList&lt;string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Storage.Fluent.ILegalHold&gt; SetLegalHoldAsync(string resourceGroupName, string accountName, string containerName, class System.Collections.Generic.IList`1&lt;string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Storage.Fluent.BlobContainersImpl.SetLegalHoldAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetLegalHoldAsync (resourceGroupName As String, accountName As String, containerName As String, tags As IList(Of String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of ILegalHold)" />
      <MemberSignature Language="F#" Value="member this.SetLegalHoldAsync : string * string * string * System.Collections.Generic.IList&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.ILegalHold&gt;" Usage="blobContainersImpl.SetLegalHoldAsync (resourceGroupName, accountName, containerName, tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Storage.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.61</AssemblyVersion>
        <AssemblyVersion>1.0.0.62</AssemblyVersion>
        <AssemblyVersion>1.0.0.63</AssemblyVersion>
        <AssemblyVersion>1.0.0.64</AssemblyVersion>
        <AssemblyVersion>1.0.0.65</AssemblyVersion>
        <AssemblyVersion>1.0.0.66</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Storage.Fluent.ILegalHold&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName">To be added.</param>
        <param name="accountName">To be added.</param>
        <param name="containerName">To be added.</param>
        <param name="tags">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
