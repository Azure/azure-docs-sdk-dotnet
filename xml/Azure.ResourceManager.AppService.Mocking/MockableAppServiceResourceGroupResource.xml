<Type Name="MockableAppServiceResourceGroupResource" FullName="Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableAppServiceResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableAppServiceResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableAppServiceResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableAppServiceResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableAppServiceResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllResourceHealthMetadataData">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.AppService.ResourceHealthMetadataData&gt; GetAllResourceHealthMetadataData (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.AppService.ResourceHealthMetadataData&gt; GetAllResourceHealthMetadataData(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource.GetAllResourceHealthMetadataData(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllResourceHealthMetadataData (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ResourceHealthMetadataData)" />
      <MemberSignature Language="F#" Value="abstract member GetAllResourceHealthMetadataData : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AppService.ResourceHealthMetadataData&gt;&#xA;override this.GetAllResourceHealthMetadataData : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AppService.ResourceHealthMetadataData&gt;" Usage="mockableAppServiceResourceGroupResource.GetAllResourceHealthMetadataData cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.AppService.ResourceHealthMetadataData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Description for List all ResourceHealthMetadata for all sites in the resource group in the subscription.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/resourceHealthMetadata
            Operation Id: ResourceHealthMetadata_ListByResourceGroup
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.AppService.ResourceHealthMetadataData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllResourceHealthMetadataDataAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.AppService.ResourceHealthMetadataData&gt; GetAllResourceHealthMetadataDataAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.AppService.ResourceHealthMetadataData&gt; GetAllResourceHealthMetadataDataAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource.GetAllResourceHealthMetadataDataAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllResourceHealthMetadataDataAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ResourceHealthMetadataData)" />
      <MemberSignature Language="F#" Value="abstract member GetAllResourceHealthMetadataDataAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AppService.ResourceHealthMetadataData&gt;&#xA;override this.GetAllResourceHealthMetadataDataAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AppService.ResourceHealthMetadataData&gt;" Usage="mockableAppServiceResourceGroupResource.GetAllResourceHealthMetadataDataAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.AppService.ResourceHealthMetadataData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Description for List all ResourceHealthMetadata for all sites in the resource group in the subscription.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/resourceHealthMetadata
            Operation Id: ResourceHealthMetadata_ListByResourceGroup
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.AppService.ResourceHealthMetadataData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppCertificate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppService.AppCertificateResource&gt; GetAppCertificate (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppService.AppCertificateResource&gt; GetAppCertificate(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource.GetAppCertificate(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppCertificate (name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AppCertificateResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAppCertificate : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppService.AppCertificateResource&gt;&#xA;override this.GetAppCertificate : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppService.AppCertificateResource&gt;" Usage="mockableAppServiceResourceGroupResource.GetAppCertificate (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppService.AppCertificateResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the certificate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Description for Get a certificate.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/certificates/{name}</description></item><item><term>Operation Id</term><description>Certificates_Get</description></item><item><term>Default Api Version</term><description>2023-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppService.AppCertificateResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppCertificateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.AppCertificateResource&gt;&gt; GetAppCertificateAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppService.AppCertificateResource&gt;&gt; GetAppCertificateAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource.GetAppCertificateAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppCertificateAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AppCertificateResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAppCertificateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.AppCertificateResource&gt;&gt;&#xA;override this.GetAppCertificateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.AppCertificateResource&gt;&gt;" Usage="mockableAppServiceResourceGroupResource.GetAppCertificateAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.AppCertificateResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the certificate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Description for Get a certificate.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/certificates/{name}</description></item><item><term>Operation Id</term><description>Certificates_Get</description></item><item><term>Default Api Version</term><description>2023-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppService.AppCertificateResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppCertificates">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppService.AppCertificateCollection GetAppCertificates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppService.AppCertificateCollection GetAppCertificates() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource.GetAppCertificates" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppCertificates () As AppCertificateCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAppCertificates : unit -&gt; Azure.ResourceManager.AppService.AppCertificateCollection&#xA;override this.GetAppCertificates : unit -&gt; Azure.ResourceManager.AppService.AppCertificateCollection" Usage="mockableAppServiceResourceGroupResource.GetAppCertificates " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppService.AppCertificateCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AppCertificateResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of AppCertificateResources and their operations over a AppCertificateResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppServiceCertificateOrder">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppService.AppServiceCertificateOrderResource&gt; GetAppServiceCertificateOrder (string certificateOrderName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppService.AppServiceCertificateOrderResource&gt; GetAppServiceCertificateOrder(string certificateOrderName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource.GetAppServiceCertificateOrder(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppServiceCertificateOrder (certificateOrderName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AppServiceCertificateOrderResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAppServiceCertificateOrder : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppService.AppServiceCertificateOrderResource&gt;&#xA;override this.GetAppServiceCertificateOrder : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppService.AppServiceCertificateOrderResource&gt;" Usage="mockableAppServiceResourceGroupResource.GetAppServiceCertificateOrder (certificateOrderName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppService.AppServiceCertificateOrderResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateOrderName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateOrderName"> Name of the certificate order.. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Description for Get a certificate order.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}</description></item><item><term>Operation Id</term><description>AppServiceCertificateOrders_Get</description></item><item><term>Default Api Version</term><description>2023-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppService.AppServiceCertificateOrderResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateOrderName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateOrderName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppServiceCertificateOrderAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.AppServiceCertificateOrderResource&gt;&gt; GetAppServiceCertificateOrderAsync (string certificateOrderName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppService.AppServiceCertificateOrderResource&gt;&gt; GetAppServiceCertificateOrderAsync(string certificateOrderName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource.GetAppServiceCertificateOrderAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppServiceCertificateOrderAsync (certificateOrderName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AppServiceCertificateOrderResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAppServiceCertificateOrderAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.AppServiceCertificateOrderResource&gt;&gt;&#xA;override this.GetAppServiceCertificateOrderAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.AppServiceCertificateOrderResource&gt;&gt;" Usage="mockableAppServiceResourceGroupResource.GetAppServiceCertificateOrderAsync (certificateOrderName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.AppServiceCertificateOrderResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateOrderName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateOrderName"> Name of the certificate order.. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Description for Get a certificate order.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}</description></item><item><term>Operation Id</term><description>AppServiceCertificateOrders_Get</description></item><item><term>Default Api Version</term><description>2023-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppService.AppServiceCertificateOrderResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateOrderName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateOrderName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppServiceCertificateOrders">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppService.AppServiceCertificateOrderCollection GetAppServiceCertificateOrders ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppService.AppServiceCertificateOrderCollection GetAppServiceCertificateOrders() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource.GetAppServiceCertificateOrders" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppServiceCertificateOrders () As AppServiceCertificateOrderCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAppServiceCertificateOrders : unit -&gt; Azure.ResourceManager.AppService.AppServiceCertificateOrderCollection&#xA;override this.GetAppServiceCertificateOrders : unit -&gt; Azure.ResourceManager.AppService.AppServiceCertificateOrderCollection" Usage="mockableAppServiceResourceGroupResource.GetAppServiceCertificateOrders " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppService.AppServiceCertificateOrderCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AppServiceCertificateOrderResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of AppServiceCertificateOrderResources and their operations over a AppServiceCertificateOrderResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppServiceDomain">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppService.AppServiceDomainResource&gt; GetAppServiceDomain (string domainName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppService.AppServiceDomainResource&gt; GetAppServiceDomain(string domainName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource.GetAppServiceDomain(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppServiceDomain (domainName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AppServiceDomainResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAppServiceDomain : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppService.AppServiceDomainResource&gt;&#xA;override this.GetAppServiceDomain : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppService.AppServiceDomainResource&gt;" Usage="mockableAppServiceResourceGroupResource.GetAppServiceDomain (domainName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppService.AppServiceDomainResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domainName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="domainName"> Name of the domain. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Description for Get a domain.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}</description></item><item><term>Operation Id</term><description>Domains_Get</description></item><item><term>Default Api Version</term><description>2023-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppService.AppServiceDomainResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="domainName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="domainName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppServiceDomainAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.AppServiceDomainResource&gt;&gt; GetAppServiceDomainAsync (string domainName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppService.AppServiceDomainResource&gt;&gt; GetAppServiceDomainAsync(string domainName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource.GetAppServiceDomainAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppServiceDomainAsync (domainName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AppServiceDomainResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAppServiceDomainAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.AppServiceDomainResource&gt;&gt;&#xA;override this.GetAppServiceDomainAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.AppServiceDomainResource&gt;&gt;" Usage="mockableAppServiceResourceGroupResource.GetAppServiceDomainAsync (domainName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.AppServiceDomainResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domainName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="domainName"> Name of the domain. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Description for Get a domain.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}</description></item><item><term>Operation Id</term><description>Domains_Get</description></item><item><term>Default Api Version</term><description>2023-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppService.AppServiceDomainResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="domainName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="domainName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppServiceDomains">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppService.AppServiceDomainCollection GetAppServiceDomains ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppService.AppServiceDomainCollection GetAppServiceDomains() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource.GetAppServiceDomains" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppServiceDomains () As AppServiceDomainCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAppServiceDomains : unit -&gt; Azure.ResourceManager.AppService.AppServiceDomainCollection&#xA;override this.GetAppServiceDomains : unit -&gt; Azure.ResourceManager.AppService.AppServiceDomainCollection" Usage="mockableAppServiceResourceGroupResource.GetAppServiceDomains " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppService.AppServiceDomainCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AppServiceDomainResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of AppServiceDomainResources and their operations over a AppServiceDomainResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppServiceEnvironment">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppService.AppServiceEnvironmentResource&gt; GetAppServiceEnvironment (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppService.AppServiceEnvironmentResource&gt; GetAppServiceEnvironment(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource.GetAppServiceEnvironment(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppServiceEnvironment (name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AppServiceEnvironmentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAppServiceEnvironment : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppService.AppServiceEnvironmentResource&gt;&#xA;override this.GetAppServiceEnvironment : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppService.AppServiceEnvironmentResource&gt;" Usage="mockableAppServiceResourceGroupResource.GetAppServiceEnvironment (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppService.AppServiceEnvironmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the App Service Environment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Description for Get the properties of an App Service Environment.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}</description></item><item><term>Operation Id</term><description>AppServiceEnvironments_Get</description></item><item><term>Default Api Version</term><description>2023-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppService.AppServiceEnvironmentResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppServiceEnvironmentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.AppServiceEnvironmentResource&gt;&gt; GetAppServiceEnvironmentAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppService.AppServiceEnvironmentResource&gt;&gt; GetAppServiceEnvironmentAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource.GetAppServiceEnvironmentAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppServiceEnvironmentAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AppServiceEnvironmentResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAppServiceEnvironmentAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.AppServiceEnvironmentResource&gt;&gt;&#xA;override this.GetAppServiceEnvironmentAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.AppServiceEnvironmentResource&gt;&gt;" Usage="mockableAppServiceResourceGroupResource.GetAppServiceEnvironmentAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.AppServiceEnvironmentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the App Service Environment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Description for Get the properties of an App Service Environment.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}</description></item><item><term>Operation Id</term><description>AppServiceEnvironments_Get</description></item><item><term>Default Api Version</term><description>2023-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppService.AppServiceEnvironmentResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppServiceEnvironments">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppService.AppServiceEnvironmentCollection GetAppServiceEnvironments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppService.AppServiceEnvironmentCollection GetAppServiceEnvironments() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource.GetAppServiceEnvironments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppServiceEnvironments () As AppServiceEnvironmentCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAppServiceEnvironments : unit -&gt; Azure.ResourceManager.AppService.AppServiceEnvironmentCollection&#xA;override this.GetAppServiceEnvironments : unit -&gt; Azure.ResourceManager.AppService.AppServiceEnvironmentCollection" Usage="mockableAppServiceResourceGroupResource.GetAppServiceEnvironments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppService.AppServiceEnvironmentCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AppServiceEnvironmentResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of AppServiceEnvironmentResources and their operations over a AppServiceEnvironmentResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppServicePlan">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppService.AppServicePlanResource&gt; GetAppServicePlan (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppService.AppServicePlanResource&gt; GetAppServicePlan(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource.GetAppServicePlan(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppServicePlan (name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AppServicePlanResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAppServicePlan : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppService.AppServicePlanResource&gt;&#xA;override this.GetAppServicePlan : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppService.AppServicePlanResource&gt;" Usage="mockableAppServiceResourceGroupResource.GetAppServicePlan (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppService.AppServicePlanResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the App Service plan. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Description for Get an App Service plan.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}</description></item><item><term>Operation Id</term><description>AppServicePlans_Get</description></item><item><term>Default Api Version</term><description>2023-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppService.AppServicePlanResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppServicePlanAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.AppServicePlanResource&gt;&gt; GetAppServicePlanAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppService.AppServicePlanResource&gt;&gt; GetAppServicePlanAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource.GetAppServicePlanAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppServicePlanAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AppServicePlanResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAppServicePlanAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.AppServicePlanResource&gt;&gt;&#xA;override this.GetAppServicePlanAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.AppServicePlanResource&gt;&gt;" Usage="mockableAppServiceResourceGroupResource.GetAppServicePlanAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.AppServicePlanResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the App Service plan. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Description for Get an App Service plan.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}</description></item><item><term>Operation Id</term><description>AppServicePlans_Get</description></item><item><term>Default Api Version</term><description>2023-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppService.AppServicePlanResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppServicePlans">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppService.AppServicePlanCollection GetAppServicePlans ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppService.AppServicePlanCollection GetAppServicePlans() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource.GetAppServicePlans" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppServicePlans () As AppServicePlanCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAppServicePlans : unit -&gt; Azure.ResourceManager.AppService.AppServicePlanCollection&#xA;override this.GetAppServicePlans : unit -&gt; Azure.ResourceManager.AppService.AppServicePlanCollection" Usage="mockableAppServiceResourceGroupResource.GetAppServicePlans " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppService.AppServicePlanCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AppServicePlanResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of AppServicePlanResources and their operations over a AppServicePlanResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKubeEnvironment">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppService.KubeEnvironmentResource&gt; GetKubeEnvironment (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppService.KubeEnvironmentResource&gt; GetKubeEnvironment(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource.GetKubeEnvironment(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKubeEnvironment (name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of KubeEnvironmentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetKubeEnvironment : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppService.KubeEnvironmentResource&gt;&#xA;override this.GetKubeEnvironment : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppService.KubeEnvironmentResource&gt;" Usage="mockableAppServiceResourceGroupResource.GetKubeEnvironment (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppService.KubeEnvironmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the Kubernetes Environment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Description for Get the properties of a Kubernetes Environment.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/kubeEnvironments/{name}</description></item><item><term>Operation Id</term><description>KubeEnvironments_Get</description></item><item><term>Default Api Version</term><description>2023-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppService.KubeEnvironmentResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKubeEnvironmentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.KubeEnvironmentResource&gt;&gt; GetKubeEnvironmentAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppService.KubeEnvironmentResource&gt;&gt; GetKubeEnvironmentAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource.GetKubeEnvironmentAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKubeEnvironmentAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of KubeEnvironmentResource))" />
      <MemberSignature Language="F#" Value="abstract member GetKubeEnvironmentAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.KubeEnvironmentResource&gt;&gt;&#xA;override this.GetKubeEnvironmentAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.KubeEnvironmentResource&gt;&gt;" Usage="mockableAppServiceResourceGroupResource.GetKubeEnvironmentAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.KubeEnvironmentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the Kubernetes Environment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Description for Get the properties of a Kubernetes Environment.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/kubeEnvironments/{name}</description></item><item><term>Operation Id</term><description>KubeEnvironments_Get</description></item><item><term>Default Api Version</term><description>2023-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppService.KubeEnvironmentResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKubeEnvironments">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppService.KubeEnvironmentCollection GetKubeEnvironments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppService.KubeEnvironmentCollection GetKubeEnvironments() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource.GetKubeEnvironments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKubeEnvironments () As KubeEnvironmentCollection" />
      <MemberSignature Language="F#" Value="abstract member GetKubeEnvironments : unit -&gt; Azure.ResourceManager.AppService.KubeEnvironmentCollection&#xA;override this.GetKubeEnvironments : unit -&gt; Azure.ResourceManager.AppService.KubeEnvironmentCollection" Usage="mockableAppServiceResourceGroupResource.GetKubeEnvironments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppService.KubeEnvironmentCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of KubeEnvironmentResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of KubeEnvironmentResources and their operations over a KubeEnvironmentResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStaticSite">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppService.StaticSiteResource&gt; GetStaticSite (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppService.StaticSiteResource&gt; GetStaticSite(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource.GetStaticSite(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStaticSite (name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of StaticSiteResource)" />
      <MemberSignature Language="F#" Value="abstract member GetStaticSite : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppService.StaticSiteResource&gt;&#xA;override this.GetStaticSite : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppService.StaticSiteResource&gt;" Usage="mockableAppServiceResourceGroupResource.GetStaticSite (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppService.StaticSiteResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the static site. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Description for Gets the details of a static site.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}</description></item><item><term>Operation Id</term><description>StaticSites_GetStaticSite</description></item><item><term>Default Api Version</term><description>2023-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppService.StaticSiteResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStaticSiteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.StaticSiteResource&gt;&gt; GetStaticSiteAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppService.StaticSiteResource&gt;&gt; GetStaticSiteAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource.GetStaticSiteAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStaticSiteAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of StaticSiteResource))" />
      <MemberSignature Language="F#" Value="abstract member GetStaticSiteAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.StaticSiteResource&gt;&gt;&#xA;override this.GetStaticSiteAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.StaticSiteResource&gt;&gt;" Usage="mockableAppServiceResourceGroupResource.GetStaticSiteAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.StaticSiteResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the static site. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Description for Gets the details of a static site.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}</description></item><item><term>Operation Id</term><description>StaticSites_GetStaticSite</description></item><item><term>Default Api Version</term><description>2023-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppService.StaticSiteResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStaticSites">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppService.StaticSiteCollection GetStaticSites ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppService.StaticSiteCollection GetStaticSites() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource.GetStaticSites" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStaticSites () As StaticSiteCollection" />
      <MemberSignature Language="F#" Value="abstract member GetStaticSites : unit -&gt; Azure.ResourceManager.AppService.StaticSiteCollection&#xA;override this.GetStaticSites : unit -&gt; Azure.ResourceManager.AppService.StaticSiteCollection" Usage="mockableAppServiceResourceGroupResource.GetStaticSites " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppService.StaticSiteCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of StaticSiteResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of StaticSiteResources and their operations over a StaticSiteResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebSite">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppService.WebSiteResource&gt; GetWebSite (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppService.WebSiteResource&gt; GetWebSite(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource.GetWebSite(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWebSite (name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of WebSiteResource)" />
      <MemberSignature Language="F#" Value="abstract member GetWebSite : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppService.WebSiteResource&gt;&#xA;override this.GetWebSite : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppService.WebSiteResource&gt;" Usage="mockableAppServiceResourceGroupResource.GetWebSite (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppService.WebSiteResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the app. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Description for Gets the details of a web, mobile, or API app.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}</description></item><item><term>Operation Id</term><description>WebApps_Get</description></item><item><term>Default Api Version</term><description>2023-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppService.WebSiteResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWebSiteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.WebSiteResource&gt;&gt; GetWebSiteAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppService.WebSiteResource&gt;&gt; GetWebSiteAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource.GetWebSiteAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWebSiteAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of WebSiteResource))" />
      <MemberSignature Language="F#" Value="abstract member GetWebSiteAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.WebSiteResource&gt;&gt;&#xA;override this.GetWebSiteAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.WebSiteResource&gt;&gt;" Usage="mockableAppServiceResourceGroupResource.GetWebSiteAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.WebSiteResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the app. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Description for Gets the details of a web, mobile, or API app.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}</description></item><item><term>Operation Id</term><description>WebApps_Get</description></item><item><term>Default Api Version</term><description>2023-12-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AppService.WebSiteResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWebSites">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppService.WebSiteCollection GetWebSites ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppService.WebSiteCollection GetWebSites() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource.GetWebSites" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWebSites () As WebSiteCollection" />
      <MemberSignature Language="F#" Value="abstract member GetWebSites : unit -&gt; Azure.ResourceManager.AppService.WebSiteCollection&#xA;override this.GetWebSites : unit -&gt; Azure.ResourceManager.AppService.WebSiteCollection" Usage="mockableAppServiceResourceGroupResource.GetWebSites " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppService.WebSiteCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of WebSiteResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of WebSiteResources and their operations over a WebSiteResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppService.Models.AppServiceValidateResult&gt; Validate (Azure.ResourceManager.AppService.Models.AppServiceValidateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppService.Models.AppServiceValidateResult&gt; Validate(class Azure.ResourceManager.AppService.Models.AppServiceValidateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource.Validate(Azure.ResourceManager.AppService.Models.AppServiceValidateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Validate (content As AppServiceValidateContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AppServiceValidateResult)" />
      <MemberSignature Language="F#" Value="abstract member Validate : Azure.ResourceManager.AppService.Models.AppServiceValidateContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppService.Models.AppServiceValidateResult&gt;&#xA;override this.Validate : Azure.ResourceManager.AppService.Models.AppServiceValidateContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppService.Models.AppServiceValidateResult&gt;" Usage="mockableAppServiceResourceGroupResource.Validate (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppService.Models.AppServiceValidateResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.AppService.Models.AppServiceValidateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Request with the resources to validate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Description for Validate if a resource can be created.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/validate</description></item><item><term>Operation Id</term><description>Validate</description></item><item><term>Default Api Version</term><description>2023-12-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.Models.AppServiceValidateResult&gt;&gt; ValidateAsync (Azure.ResourceManager.AppService.Models.AppServiceValidateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppService.Models.AppServiceValidateResult&gt;&gt; ValidateAsync(class Azure.ResourceManager.AppService.Models.AppServiceValidateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.Mocking.MockableAppServiceResourceGroupResource.ValidateAsync(Azure.ResourceManager.AppService.Models.AppServiceValidateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateAsync (content As AppServiceValidateContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AppServiceValidateResult))" />
      <MemberSignature Language="F#" Value="abstract member ValidateAsync : Azure.ResourceManager.AppService.Models.AppServiceValidateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.Models.AppServiceValidateResult&gt;&gt;&#xA;override this.ValidateAsync : Azure.ResourceManager.AppService.Models.AppServiceValidateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.Models.AppServiceValidateResult&gt;&gt;" Usage="mockableAppServiceResourceGroupResource.ValidateAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.Models.AppServiceValidateResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.AppService.Models.AppServiceValidateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Request with the resources to validate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Description for Validate if a resource can be created.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/validate</description></item><item><term>Operation Id</term><description>Validate</description></item><item><term>Default Api Version</term><description>2023-12-01</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
