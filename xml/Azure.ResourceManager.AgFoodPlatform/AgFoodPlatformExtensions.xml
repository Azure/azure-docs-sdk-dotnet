<Type Name="AgFoodPlatformExtensions" FullName="Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions">
  <TypeSignature Language="C#" Value="public static class AgFoodPlatformExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AgFoodPlatformExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module AgFoodPlatformExtensions" />
  <TypeSignature Language="F#" Value="type AgFoodPlatformExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.AgFoodPlatform</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.AgFoodPlatform. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckNameAvailabilityLocation">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityResponse&gt; CheckNameAvailabilityLocation (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityResponse&gt; CheckNameAvailabilityLocation(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions.CheckNameAvailabilityLocation(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckNameAvailabilityLocation (subscriptionResource As SubscriptionResource, content As CheckNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CheckNameAvailabilityResponse)" />
      <MemberSignature Language="F#" Value="static member CheckNameAvailabilityLocation : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityResponse&gt;" Usage="Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions.CheckNameAvailabilityLocation (subscriptionResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AgFoodPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="content"> NameAvailabilityRequest object. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks the name availability of the resource with requested resource name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AgFoodPlatform/checkNameAvailability</description></item><item><term>Operation Id</term><description>Locations_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2021-09-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AgFoodPlatform.Mocking.MockableAgFoodPlatformSubscriptionResource.CheckNameAvailabilityLocation(Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckNameAvailabilityLocationAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityResponse&gt;&gt; CheckNameAvailabilityLocationAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityResponse&gt;&gt; CheckNameAvailabilityLocationAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions.CheckNameAvailabilityLocationAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckNameAvailabilityLocationAsync (subscriptionResource As SubscriptionResource, content As CheckNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CheckNameAvailabilityResponse))" />
      <MemberSignature Language="F#" Value="static member CheckNameAvailabilityLocationAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityResponse&gt;&gt;" Usage="Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions.CheckNameAvailabilityLocationAsync (subscriptionResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AgFoodPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="content"> NameAvailabilityRequest object. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks the name availability of the resource with requested resource name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AgFoodPlatform/checkNameAvailability</description></item><item><term>Operation Id</term><description>Locations_CheckNameAvailability</description></item><item><term>Default Api Version</term><description>2021-09-01-preview</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AgFoodPlatform.Mocking.MockableAgFoodPlatformSubscriptionResource.CheckNameAvailabilityLocation(Azure.ResourceManager.AgFoodPlatform.Models.CheckNameAvailabilityContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAgFoodPlatformPrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformPrivateEndpointConnectionResource GetAgFoodPlatformPrivateEndpointConnectionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformPrivateEndpointConnectionResource GetAgFoodPlatformPrivateEndpointConnectionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions.GetAgFoodPlatformPrivateEndpointConnectionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAgFoodPlatformPrivateEndpointConnectionResource (client As ArmClient, id As ResourceIdentifier) As AgFoodPlatformPrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="static member GetAgFoodPlatformPrivateEndpointConnectionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformPrivateEndpointConnectionResource" Usage="Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions.GetAgFoodPlatformPrivateEndpointConnectionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AgFoodPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformPrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformPrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformPrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AgFoodPlatform.Mocking.MockableAgFoodPlatformArmClient.GetAgFoodPlatformPrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformPrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAgFoodPlatformPrivateLinkResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformPrivateLinkResource GetAgFoodPlatformPrivateLinkResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformPrivateLinkResource GetAgFoodPlatformPrivateLinkResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions.GetAgFoodPlatformPrivateLinkResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAgFoodPlatformPrivateLinkResource (client As ArmClient, id As ResourceIdentifier) As AgFoodPlatformPrivateLinkResource" />
      <MemberSignature Language="F#" Value="static member GetAgFoodPlatformPrivateLinkResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformPrivateLinkResource" Usage="Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions.GetAgFoodPlatformPrivateLinkResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AgFoodPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformPrivateLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformPrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformPrivateLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformPrivateLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AgFoodPlatform.Mocking.MockableAgFoodPlatformArmClient.GetAgFoodPlatformPrivateLinkResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformPrivateLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExtensionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.AgFoodPlatform.ExtensionResource GetExtensionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.AgFoodPlatform.ExtensionResource GetExtensionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions.GetExtensionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetExtensionResource (client As ArmClient, id As ResourceIdentifier) As ExtensionResource" />
      <MemberSignature Language="F#" Value="static member GetExtensionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AgFoodPlatform.ExtensionResource" Usage="Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions.GetExtensionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AgFoodPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AgFoodPlatform.ExtensionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.AgFoodPlatform.ExtensionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AgFoodPlatform.ExtensionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.AgFoodPlatform.ExtensionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AgFoodPlatform.Mocking.MockableAgFoodPlatformArmClient.GetExtensionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AgFoodPlatform.ExtensionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFarmBeat">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.AgFoodPlatform.FarmBeatResource&gt; GetFarmBeat (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string farmBeatsResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.AgFoodPlatform.FarmBeatResource&gt; GetFarmBeat(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string farmBeatsResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions.GetFarmBeat(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFarmBeat (resourceGroupResource As ResourceGroupResource, farmBeatsResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of FarmBeatResource)" />
      <MemberSignature Language="F#" Value="static member GetFarmBeat : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AgFoodPlatform.FarmBeatResource&gt;" Usage="Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions.GetFarmBeat (resourceGroupResource, farmBeatsResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AgFoodPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AgFoodPlatform.FarmBeatResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="farmBeatsResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="farmBeatsResourceName"> FarmBeats resource name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get FarmBeats resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{farmBeatsResourceName}</description></item><item><term>Operation Id</term><description>FarmBeatsModels_Get</description></item><item><term>Default Api Version</term><description>2021-09-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AgFoodPlatform.FarmBeatResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AgFoodPlatform.Mocking.MockableAgFoodPlatformResourceGroupResource.GetFarmBeat(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="farmBeatsResourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmBeatsResourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFarmBeatAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AgFoodPlatform.FarmBeatResource&gt;&gt; GetFarmBeatAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string farmBeatsResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AgFoodPlatform.FarmBeatResource&gt;&gt; GetFarmBeatAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string farmBeatsResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions.GetFarmBeatAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFarmBeatAsync (resourceGroupResource As ResourceGroupResource, farmBeatsResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of FarmBeatResource))" />
      <MemberSignature Language="F#" Value="static member GetFarmBeatAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AgFoodPlatform.FarmBeatResource&gt;&gt;" Usage="Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions.GetFarmBeatAsync (resourceGroupResource, farmBeatsResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AgFoodPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AgFoodPlatform.FarmBeatResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="farmBeatsResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="farmBeatsResourceName"> FarmBeats resource name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get FarmBeats resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{farmBeatsResourceName}</description></item><item><term>Operation Id</term><description>FarmBeatsModels_Get</description></item><item><term>Default Api Version</term><description>2021-09-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AgFoodPlatform.FarmBeatResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AgFoodPlatform.Mocking.MockableAgFoodPlatformResourceGroupResource.GetFarmBeatAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="farmBeatsResourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmBeatsResourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFarmBeatResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.AgFoodPlatform.FarmBeatResource GetFarmBeatResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.AgFoodPlatform.FarmBeatResource GetFarmBeatResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions.GetFarmBeatResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFarmBeatResource (client As ArmClient, id As ResourceIdentifier) As FarmBeatResource" />
      <MemberSignature Language="F#" Value="static member GetFarmBeatResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AgFoodPlatform.FarmBeatResource" Usage="Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions.GetFarmBeatResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AgFoodPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AgFoodPlatform.FarmBeatResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.AgFoodPlatform.FarmBeatResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AgFoodPlatform.FarmBeatResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.AgFoodPlatform.FarmBeatResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AgFoodPlatform.Mocking.MockableAgFoodPlatformArmClient.GetFarmBeatResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AgFoodPlatform.FarmBeatResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFarmBeats">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.AgFoodPlatform.FarmBeatCollection GetFarmBeats (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.AgFoodPlatform.FarmBeatCollection GetFarmBeats(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions.GetFarmBeats(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFarmBeats (resourceGroupResource As ResourceGroupResource) As FarmBeatCollection" />
      <MemberSignature Language="F#" Value="static member GetFarmBeats : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.AgFoodPlatform.FarmBeatCollection" Usage="Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions.GetFarmBeats resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AgFoodPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AgFoodPlatform.FarmBeatCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of FarmBeatResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AgFoodPlatform.Mocking.MockableAgFoodPlatformResourceGroupResource.GetFarmBeats" /> instead.</description></item></summary>
        <returns> An object representing collection of FarmBeatResources and their operations over a FarmBeatResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFarmBeats">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.AgFoodPlatform.FarmBeatResource&gt; GetFarmBeats (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, int? maxPageSize = default, string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.AgFoodPlatform.FarmBeatResource&gt; GetFarmBeats(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Nullable`1&lt;int32&gt; maxPageSize, string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions.GetFarmBeats(Azure.ResourceManager.Resources.SubscriptionResource,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFarmBeats (subscriptionResource As SubscriptionResource, Optional maxPageSize As Nullable(Of Integer) = Nothing, Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of FarmBeatResource)" />
      <MemberSignature Language="F#" Value="static member GetFarmBeats : Azure.ResourceManager.Resources.SubscriptionResource * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AgFoodPlatform.FarmBeatResource&gt;" Usage="Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions.GetFarmBeats (subscriptionResource, maxPageSize, skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AgFoodPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.AgFoodPlatform.FarmBeatResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="maxPageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="maxPageSize">
            Maximum number of items needed (inclusive).
            Minimum = 10, Maximum = 1000, Default value = 50.
            </param>
        <param name="skipToken"> Skip token for getting next set of results. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the FarmBeats instances for a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AgFoodPlatform/farmBeats</description></item><item><term>Operation Id</term><description>FarmBeatsModels_ListBySubscription</description></item><item><term>Default Api Version</term><description>2021-09-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AgFoodPlatform.FarmBeatResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AgFoodPlatform.Mocking.MockableAgFoodPlatformSubscriptionResource.GetFarmBeats(System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.AgFoodPlatform.FarmBeatResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFarmBeatsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.AgFoodPlatform.FarmBeatResource&gt; GetFarmBeatsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, int? maxPageSize = default, string skipToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.AgFoodPlatform.FarmBeatResource&gt; GetFarmBeatsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Nullable`1&lt;int32&gt; maxPageSize, string skipToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions.GetFarmBeatsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFarmBeatsAsync (subscriptionResource As SubscriptionResource, Optional maxPageSize As Nullable(Of Integer) = Nothing, Optional skipToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of FarmBeatResource)" />
      <MemberSignature Language="F#" Value="static member GetFarmBeatsAsync : Azure.ResourceManager.Resources.SubscriptionResource * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AgFoodPlatform.FarmBeatResource&gt;" Usage="Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions.GetFarmBeatsAsync (subscriptionResource, maxPageSize, skipToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AgFoodPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.AgFoodPlatform.FarmBeatResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="maxPageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="maxPageSize">
            Maximum number of items needed (inclusive).
            Minimum = 10, Maximum = 1000, Default value = 50.
            </param>
        <param name="skipToken"> Skip token for getting next set of results. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the FarmBeats instances for a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AgFoodPlatform/farmBeats</description></item><item><term>Operation Id</term><description>FarmBeatsModels_ListBySubscription</description></item><item><term>Default Api Version</term><description>2021-09-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AgFoodPlatform.FarmBeatResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AgFoodPlatform.Mocking.MockableAgFoodPlatformSubscriptionResource.GetFarmBeats(System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.AgFoodPlatform.FarmBeatResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFarmBeatsExtension">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.AgFoodPlatform.FarmBeatsExtensionResource&gt; GetFarmBeatsExtension (this Azure.ResourceManager.Resources.TenantResource tenantResource, string farmBeatsExtensionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.AgFoodPlatform.FarmBeatsExtensionResource&gt; GetFarmBeatsExtension(class Azure.ResourceManager.Resources.TenantResource tenantResource, string farmBeatsExtensionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions.GetFarmBeatsExtension(Azure.ResourceManager.Resources.TenantResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFarmBeatsExtension (tenantResource As TenantResource, farmBeatsExtensionId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of FarmBeatsExtensionResource)" />
      <MemberSignature Language="F#" Value="static member GetFarmBeatsExtension : Azure.ResourceManager.Resources.TenantResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AgFoodPlatform.FarmBeatsExtensionResource&gt;" Usage="Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions.GetFarmBeatsExtension (tenantResource, farmBeatsExtensionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AgFoodPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AgFoodPlatform.FarmBeatsExtensionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="farmBeatsExtensionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="farmBeatsExtensionId"> farmBeatsExtensionId to be queried. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get farmBeats extension.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AgFoodPlatform/farmBeatsExtensionDefinitions/{farmBeatsExtensionId}</description></item><item><term>Operation Id</term><description>FarmBeatsExtensions_Get</description></item><item><term>Default Api Version</term><description>2021-09-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AgFoodPlatform.FarmBeatsExtensionResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AgFoodPlatform.Mocking.MockableAgFoodPlatformTenantResource.GetFarmBeatsExtension(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="farmBeatsExtensionId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmBeatsExtensionId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFarmBeatsExtensionAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AgFoodPlatform.FarmBeatsExtensionResource&gt;&gt; GetFarmBeatsExtensionAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, string farmBeatsExtensionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AgFoodPlatform.FarmBeatsExtensionResource&gt;&gt; GetFarmBeatsExtensionAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, string farmBeatsExtensionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions.GetFarmBeatsExtensionAsync(Azure.ResourceManager.Resources.TenantResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFarmBeatsExtensionAsync (tenantResource As TenantResource, farmBeatsExtensionId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of FarmBeatsExtensionResource))" />
      <MemberSignature Language="F#" Value="static member GetFarmBeatsExtensionAsync : Azure.ResourceManager.Resources.TenantResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AgFoodPlatform.FarmBeatsExtensionResource&gt;&gt;" Usage="Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions.GetFarmBeatsExtensionAsync (tenantResource, farmBeatsExtensionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AgFoodPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AgFoodPlatform.FarmBeatsExtensionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="farmBeatsExtensionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="farmBeatsExtensionId"> farmBeatsExtensionId to be queried. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get farmBeats extension.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.AgFoodPlatform/farmBeatsExtensionDefinitions/{farmBeatsExtensionId}</description></item><item><term>Operation Id</term><description>FarmBeatsExtensions_Get</description></item><item><term>Default Api Version</term><description>2021-09-01-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.AgFoodPlatform.FarmBeatsExtensionResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AgFoodPlatform.Mocking.MockableAgFoodPlatformTenantResource.GetFarmBeatsExtensionAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> or <paramref name="farmBeatsExtensionId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmBeatsExtensionId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFarmBeatsExtensionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.AgFoodPlatform.FarmBeatsExtensionResource GetFarmBeatsExtensionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.AgFoodPlatform.FarmBeatsExtensionResource GetFarmBeatsExtensionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions.GetFarmBeatsExtensionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFarmBeatsExtensionResource (client As ArmClient, id As ResourceIdentifier) As FarmBeatsExtensionResource" />
      <MemberSignature Language="F#" Value="static member GetFarmBeatsExtensionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.AgFoodPlatform.FarmBeatsExtensionResource" Usage="Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions.GetFarmBeatsExtensionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AgFoodPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AgFoodPlatform.FarmBeatsExtensionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.AgFoodPlatform.FarmBeatsExtensionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.AgFoodPlatform.FarmBeatsExtensionResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.AgFoodPlatform.FarmBeatsExtensionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AgFoodPlatform.Mocking.MockableAgFoodPlatformArmClient.GetFarmBeatsExtensionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.AgFoodPlatform.FarmBeatsExtensionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFarmBeatsExtensions">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.AgFoodPlatform.FarmBeatsExtensionCollection GetFarmBeatsExtensions (this Azure.ResourceManager.Resources.TenantResource tenantResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.AgFoodPlatform.FarmBeatsExtensionCollection GetFarmBeatsExtensions(class Azure.ResourceManager.Resources.TenantResource tenantResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions.GetFarmBeatsExtensions(Azure.ResourceManager.Resources.TenantResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFarmBeatsExtensions (tenantResource As TenantResource) As FarmBeatsExtensionCollection" />
      <MemberSignature Language="F#" Value="static member GetFarmBeatsExtensions : Azure.ResourceManager.Resources.TenantResource -&gt; Azure.ResourceManager.AgFoodPlatform.FarmBeatsExtensionCollection" Usage="Azure.ResourceManager.AgFoodPlatform.AgFoodPlatformExtensions.GetFarmBeatsExtensions tenantResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AgFoodPlatform</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AgFoodPlatform.FarmBeatsExtensionCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of FarmBeatsExtensionResources in the TenantResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.AgFoodPlatform.Mocking.MockableAgFoodPlatformTenantResource.GetFarmBeatsExtensions" /> instead.</description></item></summary>
        <returns> An object representing collection of FarmBeatsExtensionResources and their operations over a FarmBeatsExtensionResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tenantResource" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
