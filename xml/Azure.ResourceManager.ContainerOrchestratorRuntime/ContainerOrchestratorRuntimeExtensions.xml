<Type Name="ContainerOrchestratorRuntimeExtensions" FullName="Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions">
  <TypeSignature Language="C#" Value="public static class ContainerOrchestratorRuntimeExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ContainerOrchestratorRuntimeExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ContainerOrchestratorRuntimeExtensions" />
  <TypeSignature Language="F#" Value="type ContainerOrchestratorRuntimeExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ContainerOrchestratorRuntime</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.ContainerOrchestratorRuntime. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetConnectedClusterBgpPeer">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterBgpPeerResource&gt; GetConnectedClusterBgpPeer (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string bgpPeerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterBgpPeerResource&gt; GetConnectedClusterBgpPeer(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string bgpPeerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterBgpPeer(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetConnectedClusterBgpPeer (client As ArmClient, scope As ResourceIdentifier, bgpPeerName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ConnectedClusterBgpPeerResource)" />
      <MemberSignature Language="F#" Value="static member GetConnectedClusterBgpPeer : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterBgpPeerResource&gt;" Usage="Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterBgpPeer (client, scope, bgpPeerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerOrchestratorRuntime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterBgpPeerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="bgpPeerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="bgpPeerName"> The name of the BgpPeer. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a BgpPeer
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.KubernetesRuntime/bgpPeers/{bgpPeerName}</description></item><item><term>Operation Id</term><description>BgpPeer_Get</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterBgpPeerResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ContainerOrchestratorRuntime.Mocking.MockableContainerOrchestratorRuntimeArmClient.GetConnectedClusterBgpPeer(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="bgpPeerName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="bgpPeerName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConnectedClusterBgpPeerAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterBgpPeerResource&gt;&gt; GetConnectedClusterBgpPeerAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string bgpPeerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterBgpPeerResource&gt;&gt; GetConnectedClusterBgpPeerAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string bgpPeerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterBgpPeerAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetConnectedClusterBgpPeerAsync (client As ArmClient, scope As ResourceIdentifier, bgpPeerName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ConnectedClusterBgpPeerResource))" />
      <MemberSignature Language="F#" Value="static member GetConnectedClusterBgpPeerAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterBgpPeerResource&gt;&gt;" Usage="Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterBgpPeerAsync (client, scope, bgpPeerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerOrchestratorRuntime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterBgpPeerResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="bgpPeerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="bgpPeerName"> The name of the BgpPeer. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a BgpPeer
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.KubernetesRuntime/bgpPeers/{bgpPeerName}</description></item><item><term>Operation Id</term><description>BgpPeer_Get</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterBgpPeerResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ContainerOrchestratorRuntime.Mocking.MockableContainerOrchestratorRuntimeArmClient.GetConnectedClusterBgpPeerAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="bgpPeerName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="bgpPeerName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConnectedClusterBgpPeerResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterBgpPeerResource GetConnectedClusterBgpPeerResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterBgpPeerResource GetConnectedClusterBgpPeerResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterBgpPeerResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetConnectedClusterBgpPeerResource (client As ArmClient, id As ResourceIdentifier) As ConnectedClusterBgpPeerResource" />
      <MemberSignature Language="F#" Value="static member GetConnectedClusterBgpPeerResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterBgpPeerResource" Usage="Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterBgpPeerResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerOrchestratorRuntime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterBgpPeerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterBgpPeerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterBgpPeerResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterBgpPeerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ContainerOrchestratorRuntime.Mocking.MockableContainerOrchestratorRuntimeArmClient.GetConnectedClusterBgpPeerResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterBgpPeerResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConnectedClusterBgpPeers">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterBgpPeerCollection GetConnectedClusterBgpPeers (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterBgpPeerCollection GetConnectedClusterBgpPeers(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterBgpPeers(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetConnectedClusterBgpPeers (client As ArmClient, scope As ResourceIdentifier) As ConnectedClusterBgpPeerCollection" />
      <MemberSignature Language="F#" Value="static member GetConnectedClusterBgpPeers : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterBgpPeerCollection" Usage="Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterBgpPeers (client, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerOrchestratorRuntime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterBgpPeerCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary>
            Gets a collection of ConnectedClusterBgpPeerResources in the ArmClient.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ContainerOrchestratorRuntime.Mocking.MockableContainerOrchestratorRuntimeArmClient.GetConnectedClusterBgpPeers(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> An object representing collection of ConnectedClusterBgpPeerResources and their operations over a ConnectedClusterBgpPeerResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConnectedClusterLoadBalancer">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterLoadBalancerResource&gt; GetConnectedClusterLoadBalancer (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string loadBalancerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterLoadBalancerResource&gt; GetConnectedClusterLoadBalancer(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string loadBalancerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterLoadBalancer(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetConnectedClusterLoadBalancer (client As ArmClient, scope As ResourceIdentifier, loadBalancerName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ConnectedClusterLoadBalancerResource)" />
      <MemberSignature Language="F#" Value="static member GetConnectedClusterLoadBalancer : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterLoadBalancerResource&gt;" Usage="Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterLoadBalancer (client, scope, loadBalancerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerOrchestratorRuntime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterLoadBalancerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="loadBalancerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="loadBalancerName"> The name of the LoadBalancer. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a LoadBalancer
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.KubernetesRuntime/loadBalancers/{loadBalancerName}</description></item><item><term>Operation Id</term><description>LoadBalancer_Get</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterLoadBalancerResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ContainerOrchestratorRuntime.Mocking.MockableContainerOrchestratorRuntimeArmClient.GetConnectedClusterLoadBalancer(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="loadBalancerName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="loadBalancerName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConnectedClusterLoadBalancerAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterLoadBalancerResource&gt;&gt; GetConnectedClusterLoadBalancerAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string loadBalancerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterLoadBalancerResource&gt;&gt; GetConnectedClusterLoadBalancerAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string loadBalancerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterLoadBalancerAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetConnectedClusterLoadBalancerAsync (client As ArmClient, scope As ResourceIdentifier, loadBalancerName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ConnectedClusterLoadBalancerResource))" />
      <MemberSignature Language="F#" Value="static member GetConnectedClusterLoadBalancerAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterLoadBalancerResource&gt;&gt;" Usage="Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterLoadBalancerAsync (client, scope, loadBalancerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerOrchestratorRuntime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterLoadBalancerResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="loadBalancerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="loadBalancerName"> The name of the LoadBalancer. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a LoadBalancer
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.KubernetesRuntime/loadBalancers/{loadBalancerName}</description></item><item><term>Operation Id</term><description>LoadBalancer_Get</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterLoadBalancerResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ContainerOrchestratorRuntime.Mocking.MockableContainerOrchestratorRuntimeArmClient.GetConnectedClusterLoadBalancerAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="loadBalancerName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="loadBalancerName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConnectedClusterLoadBalancerResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterLoadBalancerResource GetConnectedClusterLoadBalancerResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterLoadBalancerResource GetConnectedClusterLoadBalancerResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterLoadBalancerResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetConnectedClusterLoadBalancerResource (client As ArmClient, id As ResourceIdentifier) As ConnectedClusterLoadBalancerResource" />
      <MemberSignature Language="F#" Value="static member GetConnectedClusterLoadBalancerResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterLoadBalancerResource" Usage="Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterLoadBalancerResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerOrchestratorRuntime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterLoadBalancerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterLoadBalancerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterLoadBalancerResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterLoadBalancerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ContainerOrchestratorRuntime.Mocking.MockableContainerOrchestratorRuntimeArmClient.GetConnectedClusterLoadBalancerResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterLoadBalancerResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConnectedClusterLoadBalancers">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterLoadBalancerCollection GetConnectedClusterLoadBalancers (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterLoadBalancerCollection GetConnectedClusterLoadBalancers(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterLoadBalancers(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetConnectedClusterLoadBalancers (client As ArmClient, scope As ResourceIdentifier) As ConnectedClusterLoadBalancerCollection" />
      <MemberSignature Language="F#" Value="static member GetConnectedClusterLoadBalancers : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterLoadBalancerCollection" Usage="Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterLoadBalancers (client, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerOrchestratorRuntime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterLoadBalancerCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary>
            Gets a collection of ConnectedClusterLoadBalancerResources in the ArmClient.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ContainerOrchestratorRuntime.Mocking.MockableContainerOrchestratorRuntimeArmClient.GetConnectedClusterLoadBalancers(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> An object representing collection of ConnectedClusterLoadBalancerResources and their operations over a ConnectedClusterLoadBalancerResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConnectedClusterService">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterServiceResource&gt; GetConnectedClusterService (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string serviceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterServiceResource&gt; GetConnectedClusterService(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string serviceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterService(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetConnectedClusterService (client As ArmClient, scope As ResourceIdentifier, serviceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ConnectedClusterServiceResource)" />
      <MemberSignature Language="F#" Value="static member GetConnectedClusterService : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterServiceResource&gt;" Usage="Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterService (client, scope, serviceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerOrchestratorRuntime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="serviceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="serviceName"> The name of the the service. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a ServiceResource
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.KubernetesRuntime/services/{serviceName}</description></item><item><term>Operation Id</term><description>ServiceResource_Get</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterServiceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ContainerOrchestratorRuntime.Mocking.MockableContainerOrchestratorRuntimeArmClient.GetConnectedClusterService(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="serviceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="serviceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConnectedClusterServiceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterServiceResource&gt;&gt; GetConnectedClusterServiceAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string serviceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterServiceResource&gt;&gt; GetConnectedClusterServiceAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string serviceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterServiceAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetConnectedClusterServiceAsync (client As ArmClient, scope As ResourceIdentifier, serviceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ConnectedClusterServiceResource))" />
      <MemberSignature Language="F#" Value="static member GetConnectedClusterServiceAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterServiceResource&gt;&gt;" Usage="Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterServiceAsync (client, scope, serviceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerOrchestratorRuntime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterServiceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="serviceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="serviceName"> The name of the the service. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a ServiceResource
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.KubernetesRuntime/services/{serviceName}</description></item><item><term>Operation Id</term><description>ServiceResource_Get</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterServiceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ContainerOrchestratorRuntime.Mocking.MockableContainerOrchestratorRuntimeArmClient.GetConnectedClusterServiceAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="serviceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="serviceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConnectedClusterServiceResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterServiceResource GetConnectedClusterServiceResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterServiceResource GetConnectedClusterServiceResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterServiceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetConnectedClusterServiceResource (client As ArmClient, id As ResourceIdentifier) As ConnectedClusterServiceResource" />
      <MemberSignature Language="F#" Value="static member GetConnectedClusterServiceResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterServiceResource" Usage="Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterServiceResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerOrchestratorRuntime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterServiceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterServiceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterServiceResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterServiceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ContainerOrchestratorRuntime.Mocking.MockableContainerOrchestratorRuntimeArmClient.GetConnectedClusterServiceResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterServiceResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConnectedClusterServices">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterServiceCollection GetConnectedClusterServices (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterServiceCollection GetConnectedClusterServices(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterServices(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetConnectedClusterServices (client As ArmClient, scope As ResourceIdentifier) As ConnectedClusterServiceCollection" />
      <MemberSignature Language="F#" Value="static member GetConnectedClusterServices : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterServiceCollection" Usage="Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterServices (client, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerOrchestratorRuntime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary>
            Gets a collection of ConnectedClusterServiceResources in the ArmClient.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ContainerOrchestratorRuntime.Mocking.MockableContainerOrchestratorRuntimeArmClient.GetConnectedClusterServices(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> An object representing collection of ConnectedClusterServiceResources and their operations over a ConnectedClusterServiceResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConnectedClusterStorageClass">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterStorageClassResource&gt; GetConnectedClusterStorageClass (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string storageClassName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterStorageClassResource&gt; GetConnectedClusterStorageClass(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string storageClassName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterStorageClass(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetConnectedClusterStorageClass (client As ArmClient, scope As ResourceIdentifier, storageClassName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ConnectedClusterStorageClassResource)" />
      <MemberSignature Language="F#" Value="static member GetConnectedClusterStorageClass : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterStorageClassResource&gt;" Usage="Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterStorageClass (client, scope, storageClassName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerOrchestratorRuntime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterStorageClassResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="storageClassName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="storageClassName"> The name of the the storage class. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a StorageClassResource
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.KubernetesRuntime/storageClasses/{storageClassName}</description></item><item><term>Operation Id</term><description>StorageClassResource_Get</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterStorageClassResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ContainerOrchestratorRuntime.Mocking.MockableContainerOrchestratorRuntimeArmClient.GetConnectedClusterStorageClass(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="storageClassName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="storageClassName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConnectedClusterStorageClassAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterStorageClassResource&gt;&gt; GetConnectedClusterStorageClassAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string storageClassName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterStorageClassResource&gt;&gt; GetConnectedClusterStorageClassAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string storageClassName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterStorageClassAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetConnectedClusterStorageClassAsync (client As ArmClient, scope As ResourceIdentifier, storageClassName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ConnectedClusterStorageClassResource))" />
      <MemberSignature Language="F#" Value="static member GetConnectedClusterStorageClassAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterStorageClassResource&gt;&gt;" Usage="Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterStorageClassAsync (client, scope, storageClassName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerOrchestratorRuntime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterStorageClassResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="storageClassName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="storageClassName"> The name of the the storage class. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a StorageClassResource
            <list type="bullet"><item><term>Request Path</term><description>/{resourceUri}/providers/Microsoft.KubernetesRuntime/storageClasses/{storageClassName}</description></item><item><term>Operation Id</term><description>StorageClassResource_Get</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterStorageClassResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ContainerOrchestratorRuntime.Mocking.MockableContainerOrchestratorRuntimeArmClient.GetConnectedClusterStorageClassAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> or <paramref name="storageClassName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="storageClassName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConnectedClusterStorageClasses">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterStorageClassCollection GetConnectedClusterStorageClasses (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterStorageClassCollection GetConnectedClusterStorageClasses(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterStorageClasses(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetConnectedClusterStorageClasses (client As ArmClient, scope As ResourceIdentifier) As ConnectedClusterStorageClassCollection" />
      <MemberSignature Language="F#" Value="static member GetConnectedClusterStorageClasses : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterStorageClassCollection" Usage="Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterStorageClasses (client, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerOrchestratorRuntime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterStorageClassCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary>
            Gets a collection of ConnectedClusterStorageClassResources in the ArmClient.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ContainerOrchestratorRuntime.Mocking.MockableContainerOrchestratorRuntimeArmClient.GetConnectedClusterStorageClasses(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> An object representing collection of ConnectedClusterStorageClassResources and their operations over a ConnectedClusterStorageClassResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConnectedClusterStorageClassResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterStorageClassResource GetConnectedClusterStorageClassResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterStorageClassResource GetConnectedClusterStorageClassResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterStorageClassResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetConnectedClusterStorageClassResource (client As ArmClient, id As ResourceIdentifier) As ConnectedClusterStorageClassResource" />
      <MemberSignature Language="F#" Value="static member GetConnectedClusterStorageClassResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterStorageClassResource" Usage="Azure.ResourceManager.ContainerOrchestratorRuntime.ContainerOrchestratorRuntimeExtensions.GetConnectedClusterStorageClassResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerOrchestratorRuntime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterStorageClassResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterStorageClassResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterStorageClassResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterStorageClassResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ContainerOrchestratorRuntime.Mocking.MockableContainerOrchestratorRuntimeArmClient.GetConnectedClusterStorageClassResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerOrchestratorRuntime.ConnectedClusterStorageClassResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
