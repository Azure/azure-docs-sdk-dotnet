<Type Name="ResourceNamePropertyResolver" FullName="Azure.Provisioning.Primitives.ResourceNamePropertyResolver">
  <TypeSignature Language="C#" Value="public abstract class ResourceNamePropertyResolver : Azure.Provisioning.Primitives.PropertyResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ResourceNamePropertyResolver extends Azure.Provisioning.Primitives.PropertyResolver" />
  <TypeSignature Language="DocId" Value="T:Azure.Provisioning.Primitives.ResourceNamePropertyResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ResourceNamePropertyResolver&#xA;Inherits PropertyResolver" />
  <TypeSignature Language="F#" Value="type ResourceNamePropertyResolver = class&#xA;    inherit PropertyResolver" />
  <AssemblyInfo>
    <AssemblyName>Azure.Provisioning</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Provisioning.Primitives.PropertyResolver</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides a strategy for resolving Azure names using their resource name as
            a prefix, the set of valid characters, the max length allowed, and an
            optional min length.
            </summary>
    <remarks>
            You can learn more about Azure's resource naming rules at
            <see href="https://learn.microsoft.com/azure/azure-resource-manager/management/resource-name-rules">
            https://learn.microsoft.com/azure/azure-resource-manager/management/resource-name-rules
            </see>.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ResourceNamePropertyResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Primitives.ResourceNamePropertyResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveName">
      <MemberSignature Language="C#" Value="public abstract Azure.Provisioning.BicepValue&lt;string&gt;? ResolveName (Azure.Provisioning.ProvisioningContext context, Azure.Provisioning.Primitives.Resource resource, Azure.Provisioning.Primitives.ResourceNameRequirements requirements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Provisioning.BicepValue`1&lt;string&gt; ResolveName(class Azure.Provisioning.ProvisioningContext context, class Azure.Provisioning.Primitives.Resource resource, valuetype Azure.Provisioning.Primitives.ResourceNameRequirements requirements) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Primitives.ResourceNamePropertyResolver.ResolveName(Azure.Provisioning.ProvisioningContext,Azure.Provisioning.Primitives.Resource,Azure.Provisioning.Primitives.ResourceNameRequirements)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ResolveName (context As ProvisioningContext, resource As Resource, requirements As ResourceNameRequirements) As BicepValue(Of String)" />
      <MemberSignature Language="F#" Value="abstract member ResolveName : Azure.Provisioning.ProvisioningContext * Azure.Provisioning.Primitives.Resource * Azure.Provisioning.Primitives.ResourceNameRequirements -&gt; Azure.Provisioning.BicepValue&lt;string&gt;" Usage="resourceNamePropertyResolver.ResolveName (context, resource, requirements)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Azure.Provisioning.ProvisioningContext" />
        <Parameter Name="resource" Type="Azure.Provisioning.Primitives.Resource" />
        <Parameter Name="requirements" Type="Azure.Provisioning.Primitives.ResourceNameRequirements" />
      </Parameters>
      <Docs>
        <param name="context">The provisioning context for this resource.</param>
        <param name="resource">The resource with an unset Name property.</param>
        <param name="requirements">Requirements to name the resource.</param>
        <summary>
            Resolve a name for the given resource.
            </summary>
        <returns>A name for the resource, if one could be created.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveProperties">
      <MemberSignature Language="C#" Value="public override void ResolveProperties (Azure.Provisioning.ProvisioningContext context, Azure.Provisioning.Primitives.ProvisioningConstruct construct);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResolveProperties(class Azure.Provisioning.ProvisioningContext context, class Azure.Provisioning.Primitives.ProvisioningConstruct construct) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Primitives.ResourceNamePropertyResolver.ResolveProperties(Azure.Provisioning.ProvisioningContext,Azure.Provisioning.Primitives.ProvisioningConstruct)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResolveProperties (context As ProvisioningContext, construct As ProvisioningConstruct)" />
      <MemberSignature Language="F#" Value="override this.ResolveProperties : Azure.Provisioning.ProvisioningContext * Azure.Provisioning.Primitives.ProvisioningConstruct -&gt; unit" Usage="resourceNamePropertyResolver.ResolveProperties (context, construct)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Azure.Provisioning.ProvisioningContext" />
        <Parameter Name="construct" Type="Azure.Provisioning.Primitives.ProvisioningConstruct" />
      </Parameters>
      <Docs>
        <param name="context">The current provisioning context.</param>
        <param name="construct">The construct with properties to resolve.</param>
        <summary>
            Try to resolve the values of any unset properties in the given construct.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SanitizeText">
      <MemberSignature Language="C#" Value="protected static string SanitizeText (string text, Azure.Provisioning.Primitives.ResourceNameCharacters validCharacters);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string SanitizeText(string text, valuetype Azure.Provisioning.Primitives.ResourceNameCharacters validCharacters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Primitives.ResourceNamePropertyResolver.SanitizeText(System.String,Azure.Provisioning.Primitives.ResourceNameCharacters)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function SanitizeText (text As String, validCharacters As ResourceNameCharacters) As String" />
      <MemberSignature Language="F#" Value="static member SanitizeText : string * Azure.Provisioning.Primitives.ResourceNameCharacters -&gt; string" Usage="Azure.Provisioning.Primitives.ResourceNamePropertyResolver.SanitizeText (text, validCharacters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="validCharacters" Type="Azure.Provisioning.Primitives.ResourceNameCharacters" />
      </Parameters>
      <Docs>
        <param name="text">The unsanitized text to append.</param>
        <param name="validCharacters">
            The set of characters that will be appended.
            </param>
        <summary>
            Get a sanitized version of the given text according to the set of valid
            characters.  Case will be changed as needed, but any other invalid
            characters are ignored.
            </summary>
        <returns>A sanitized version of the text.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
