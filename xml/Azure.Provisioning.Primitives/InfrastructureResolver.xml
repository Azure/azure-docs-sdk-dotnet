<Type Name="InfrastructureResolver" FullName="Azure.Provisioning.Primitives.InfrastructureResolver">
  <TypeSignature Language="C#" Value="public abstract class InfrastructureResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InfrastructureResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Provisioning.Primitives.InfrastructureResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class InfrastructureResolver" />
  <TypeSignature Language="F#" Value="type InfrastructureResolver = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Provisioning</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            An infrastructure resolver attempts to resolve the values of any unset
            properties or resources in <see cref="T:Azure.Provisioning.Infrastructure" />.  This can be
            useful for defaulting common values, implementing organization policies, or
            other scenarios where you want to uniformly configure all the resources in
            a deployment.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InfrastructureResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Primitives.InfrastructureResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNestedInfrastructure">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Azure.Provisioning.Infrastructure&gt; GetNestedInfrastructure (Azure.Provisioning.ProvisioningContext context, Azure.Provisioning.Infrastructure infrastructure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Azure.Provisioning.Infrastructure&gt; GetNestedInfrastructure(class Azure.Provisioning.ProvisioningContext context, class Azure.Provisioning.Infrastructure infrastructure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Primitives.InfrastructureResolver.GetNestedInfrastructure(Azure.Provisioning.ProvisioningContext,Azure.Provisioning.Infrastructure)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNestedInfrastructure (context As ProvisioningContext, infrastructure As Infrastructure) As IEnumerable(Of Infrastructure)" />
      <MemberSignature Language="F#" Value="member this.GetNestedInfrastructure : Azure.Provisioning.ProvisioningContext * Azure.Provisioning.Infrastructure -&gt; seq&lt;Azure.Provisioning.Infrastructure&gt;" Usage="infrastructureResolver.GetNestedInfrastructure (context, infrastructure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Azure.Provisioning.Infrastructure&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Azure.Provisioning.ProvisioningContext" />
        <Parameter Name="infrastructure" Type="Azure.Provisioning.Infrastructure" />
      </Parameters>
      <Docs>
        <param name="context">The current provisioning context.</param>
        <param name="infrastructure">
            The infrastructure to inspect for any nested infrastructure.
            </param>
        <summary>
            Gets any nested infrastructure that should be composed separately.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveInfrastructure">
      <MemberSignature Language="C#" Value="public virtual void ResolveInfrastructure (Azure.Provisioning.ProvisioningContext context, Azure.Provisioning.Infrastructure infrastructure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResolveInfrastructure(class Azure.Provisioning.ProvisioningContext context, class Azure.Provisioning.Infrastructure infrastructure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Primitives.InfrastructureResolver.ResolveInfrastructure(Azure.Provisioning.ProvisioningContext,Azure.Provisioning.Infrastructure)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResolveInfrastructure (context As ProvisioningContext, infrastructure As Infrastructure)" />
      <MemberSignature Language="F#" Value="abstract member ResolveInfrastructure : Azure.Provisioning.ProvisioningContext * Azure.Provisioning.Infrastructure -&gt; unit&#xA;override this.ResolveInfrastructure : Azure.Provisioning.ProvisioningContext * Azure.Provisioning.Infrastructure -&gt; unit" Usage="infrastructureResolver.ResolveInfrastructure (context, infrastructure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Azure.Provisioning.ProvisioningContext" />
        <Parameter Name="infrastructure" Type="Azure.Provisioning.Infrastructure" />
      </Parameters>
      <Docs>
        <param name="context">The current provisioning context.</param>
        <param name="infrastructure">The infrastructure to resolve properties of.</param>
        <summary>
            Resolve any properties of the infrastructure.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveResources">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Azure.Provisioning.Primitives.Provisionable&gt; ResolveResources (Azure.Provisioning.ProvisioningContext context, System.Collections.Generic.IEnumerable&lt;Azure.Provisioning.Primitives.Provisionable&gt; resources);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Azure.Provisioning.Primitives.Provisionable&gt; ResolveResources(class Azure.Provisioning.ProvisioningContext context, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Provisioning.Primitives.Provisionable&gt; resources) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Primitives.InfrastructureResolver.ResolveResources(Azure.Provisioning.ProvisioningContext,System.Collections.Generic.IEnumerable{Azure.Provisioning.Primitives.Provisionable})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveResources (context As ProvisioningContext, resources As IEnumerable(Of Provisionable)) As IEnumerable(Of Provisionable)" />
      <MemberSignature Language="F#" Value="abstract member ResolveResources : Azure.Provisioning.ProvisioningContext * seq&lt;Azure.Provisioning.Primitives.Provisionable&gt; -&gt; seq&lt;Azure.Provisioning.Primitives.Provisionable&gt;&#xA;override this.ResolveResources : Azure.Provisioning.ProvisioningContext * seq&lt;Azure.Provisioning.Primitives.Provisionable&gt; -&gt; seq&lt;Azure.Provisioning.Primitives.Provisionable&gt;" Usage="infrastructureResolver.ResolveResources (context, resources)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Azure.Provisioning.Primitives.Provisionable&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Azure.Provisioning.ProvisioningContext" />
        <Parameter Name="resources" Type="System.Collections.Generic.IEnumerable&lt;Azure.Provisioning.Primitives.Provisionable&gt;" />
      </Parameters>
      <Docs>
        <param name="context">The current provisioning context.</param>
        <param name="resources">The existing resources to resolve.</param>
        <summary>
            Process the collection of resources in the infrastructure.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
