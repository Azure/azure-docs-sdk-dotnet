<Type Name="MockableConnectedVMwarevSphereArmClient" FullName="Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereArmClient">
  <TypeSignature Language="C#" Value="public class MockableConnectedVMwarevSphereArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableConnectedVMwarevSphereArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableConnectedVMwarevSphereArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableConnectedVMwarevSphereArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableConnectedVMwarevSphereArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVCenterInventoryItemResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ConnectedVMwarevSphere.VCenterInventoryItemResource GetVCenterInventoryItemResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ConnectedVMwarevSphere.VCenterInventoryItemResource GetVCenterInventoryItemResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereArmClient.GetVCenterInventoryItemResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVCenterInventoryItemResource (id As ResourceIdentifier) As VCenterInventoryItemResource" />
      <MemberSignature Language="F#" Value="abstract member GetVCenterInventoryItemResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VCenterInventoryItemResource&#xA;override this.GetVCenterInventoryItemResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VCenterInventoryItemResource" Usage="mockableConnectedVMwarevSphereArmClient.GetVCenterInventoryItemResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VCenterInventoryItemResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VCenterInventoryItemResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.VCenterInventoryItemResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VCenterInventoryItemResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VCenterInventoryItemResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVmInstanceGuestAgentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceGuestAgentResource GetVmInstanceGuestAgentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceGuestAgentResource GetVmInstanceGuestAgentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereArmClient.GetVmInstanceGuestAgentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVmInstanceGuestAgentResource (id As ResourceIdentifier) As VmInstanceGuestAgentResource" />
      <MemberSignature Language="F#" Value="abstract member GetVmInstanceGuestAgentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceGuestAgentResource&#xA;override this.GetVmInstanceGuestAgentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceGuestAgentResource" Usage="mockableConnectedVMwarevSphereArmClient.GetVmInstanceGuestAgentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceGuestAgentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceGuestAgentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceGuestAgentResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceGuestAgentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceGuestAgentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVmInstanceHybridIdentityMetadataResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceHybridIdentityMetadataResource GetVmInstanceHybridIdentityMetadataResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceHybridIdentityMetadataResource GetVmInstanceHybridIdentityMetadataResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereArmClient.GetVmInstanceHybridIdentityMetadataResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVmInstanceHybridIdentityMetadataResource (id As ResourceIdentifier) As VmInstanceHybridIdentityMetadataResource" />
      <MemberSignature Language="F#" Value="abstract member GetVmInstanceHybridIdentityMetadataResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceHybridIdentityMetadataResource&#xA;override this.GetVmInstanceHybridIdentityMetadataResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceHybridIdentityMetadataResource" Usage="mockableConnectedVMwarevSphereArmClient.GetVmInstanceHybridIdentityMetadataResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceHybridIdentityMetadataResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceHybridIdentityMetadataResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceHybridIdentityMetadataResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceHybridIdentityMetadataResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceHybridIdentityMetadataResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareClusterResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource GetVMwareClusterResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource GetVMwareClusterResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereArmClient.GetVMwareClusterResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareClusterResource (id As ResourceIdentifier) As VMwareClusterResource" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareClusterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&#xA;override this.GetVMwareClusterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource" Usage="mockableConnectedVMwarevSphereArmClient.GetVMwareClusterResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareDatastoreResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource GetVMwareDatastoreResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource GetVMwareDatastoreResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereArmClient.GetVMwareDatastoreResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareDatastoreResource (id As ResourceIdentifier) As VMwareDatastoreResource" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareDatastoreResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&#xA;override this.GetVMwareDatastoreResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource" Usage="mockableConnectedVMwarevSphereArmClient.GetVMwareDatastoreResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareHostResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource GetVMwareHostResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource GetVMwareHostResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereArmClient.GetVMwareHostResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareHostResource (id As ResourceIdentifier) As VMwareHostResource" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareHostResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&#xA;override this.GetVMwareHostResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource" Usage="mockableConnectedVMwarevSphereArmClient.GetVMwareHostResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareResourcePoolResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource GetVMwareResourcePoolResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource GetVMwareResourcePoolResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereArmClient.GetVMwareResourcePoolResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareResourcePoolResource (id As ResourceIdentifier) As VMwareResourcePoolResource" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareResourcePoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource&#xA;override this.GetVMwareResourcePoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource" Usage="mockableConnectedVMwarevSphereArmClient.GetVMwareResourcePoolResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVCenterResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource GetVMwareVCenterResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource GetVMwareVCenterResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereArmClient.GetVMwareVCenterResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareVCenterResource (id As ResourceIdentifier) As VMwareVCenterResource" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareVCenterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource&#xA;override this.GetVMwareVCenterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource" Usage="mockableConnectedVMwarevSphereArmClient.GetVMwareVCenterResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVirtualNetworkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource GetVMwareVirtualNetworkResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource GetVMwareVirtualNetworkResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereArmClient.GetVMwareVirtualNetworkResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareVirtualNetworkResource (id As ResourceIdentifier) As VMwareVirtualNetworkResource" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareVirtualNetworkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource&#xA;override this.GetVMwareVirtualNetworkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource" Usage="mockableConnectedVMwarevSphereArmClient.GetVMwareVirtualNetworkResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVmInstance">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceResource GetVMwareVmInstance (Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceResource GetVMwareVmInstance(class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereArmClient.GetVMwareVmInstance(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareVmInstance (scope As ResourceIdentifier) As VMwareVmInstanceResource" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareVmInstance : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceResource&#xA;override this.GetVMwareVmInstance : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceResource" Usage="mockableConnectedVMwarevSphereArmClient.GetVMwareVmInstance scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets an object representing a VMwareVmInstanceResource along with the instance operations that can be performed on it in the ArmClient. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVmInstanceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceResource GetVMwareVmInstanceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceResource GetVMwareVmInstanceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereArmClient.GetVMwareVmInstanceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareVmInstanceResource (id As ResourceIdentifier) As VMwareVmInstanceResource" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareVmInstanceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceResource&#xA;override this.GetVMwareVmInstanceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceResource" Usage="mockableConnectedVMwarevSphereArmClient.GetVMwareVmInstanceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVmTemplateResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource GetVMwareVmTemplateResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource GetVMwareVmTemplateResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereArmClient.GetVMwareVmTemplateResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareVmTemplateResource (id As ResourceIdentifier) As VMwareVmTemplateResource" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareVmTemplateResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource&#xA;override this.GetVMwareVmTemplateResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource" Usage="mockableConnectedVMwarevSphereArmClient.GetVMwareVmTemplateResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
