<Type Name="MockableConnectedVMwarevSphereResourceGroupResource" FullName="Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableConnectedVMwarevSphereResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableConnectedVMwarevSphereResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableConnectedVMwarevSphereResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableConnectedVMwarevSphereResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableConnectedVMwarevSphereResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareCluster">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt; GetVMwareCluster (string clusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt; GetVMwareCluster(string clusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareCluster(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareCluster (clusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VMwareClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareCluster : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt;&#xA;override this.GetVMwareCluster : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt;" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVMwareCluster (clusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="clusterName"> Name of the cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements cluster GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/clusters/{clusterName}</description></item><item><term>Operation Id</term><description>Clusters_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clusterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareClusterAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt;&gt; GetVMwareClusterAsync (string clusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt;&gt; GetVMwareClusterAsync(string clusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareClusterAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareClusterAsync (clusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VMwareClusterResource))" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareClusterAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt;&gt;&#xA;override this.GetVMwareClusterAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt;&gt;" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVMwareClusterAsync (clusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="clusterName"> Name of the cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements cluster GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/clusters/{clusterName}</description></item><item><term>Operation Id</term><description>Clusters_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clusterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareClusters">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterCollection GetVMwareClusters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterCollection GetVMwareClusters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareClusters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareClusters () As VMwareClusterCollection" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareClusters : unit -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterCollection&#xA;override this.GetVMwareClusters : unit -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterCollection" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVMwareClusters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of VMwareClusterResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of VMwareClusterResources and their operations over a VMwareClusterResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareDatastore">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt; GetVMwareDatastore (string datastoreName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt; GetVMwareDatastore(string datastoreName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareDatastore(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareDatastore (datastoreName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VMwareDatastoreResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareDatastore : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt;&#xA;override this.GetVMwareDatastore : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt;" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVMwareDatastore (datastoreName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datastoreName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="datastoreName"> Name of the datastore. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements datastore GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/datastores/{datastoreName}</description></item><item><term>Operation Id</term><description>Datastores_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="datastoreName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="datastoreName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareDatastoreAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt;&gt; GetVMwareDatastoreAsync (string datastoreName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt;&gt; GetVMwareDatastoreAsync(string datastoreName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareDatastoreAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareDatastoreAsync (datastoreName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VMwareDatastoreResource))" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareDatastoreAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt;&gt;&#xA;override this.GetVMwareDatastoreAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt;&gt;" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVMwareDatastoreAsync (datastoreName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datastoreName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="datastoreName"> Name of the datastore. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements datastore GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/datastores/{datastoreName}</description></item><item><term>Operation Id</term><description>Datastores_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="datastoreName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="datastoreName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareDatastores">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreCollection GetVMwareDatastores ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreCollection GetVMwareDatastores() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareDatastores" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareDatastores () As VMwareDatastoreCollection" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareDatastores : unit -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreCollection&#xA;override this.GetVMwareDatastores : unit -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreCollection" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVMwareDatastores " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of VMwareDatastoreResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of VMwareDatastoreResources and their operations over a VMwareDatastoreResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareHost">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt; GetVMwareHost (string hostName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt; GetVMwareHost(string hostName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareHost(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareHost (hostName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VMwareHostResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareHost : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt;&#xA;override this.GetVMwareHost : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt;" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVMwareHost (hostName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="hostName"> Name of the host. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements host GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/hosts/{hostName}</description></item><item><term>Operation Id</term><description>Hosts_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareHostAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt;&gt; GetVMwareHostAsync (string hostName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt;&gt; GetVMwareHostAsync(string hostName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareHostAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareHostAsync (hostName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VMwareHostResource))" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareHostAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt;&gt;&#xA;override this.GetVMwareHostAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt;&gt;" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVMwareHostAsync (hostName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="hostName"> Name of the host. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements host GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/hosts/{hostName}</description></item><item><term>Operation Id</term><description>Hosts_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareHosts">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostCollection GetVMwareHosts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostCollection GetVMwareHosts() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareHosts" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareHosts () As VMwareHostCollection" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareHosts : unit -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostCollection&#xA;override this.GetVMwareHosts : unit -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostCollection" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVMwareHosts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of VMwareHostResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of VMwareHostResources and their operations over a VMwareHostResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareResourcePool">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource&gt; GetVMwareResourcePool (string resourcePoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource&gt; GetVMwareResourcePool(string resourcePoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareResourcePool(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareResourcePool (resourcePoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VMwareResourcePoolResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareResourcePool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource&gt;&#xA;override this.GetVMwareResourcePool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource&gt;" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVMwareResourcePool (resourcePoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourcePoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourcePoolName"> Name of the resourcePool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements resourcePool GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/resourcePools/{resourcePoolName}</description></item><item><term>Operation Id</term><description>ResourcePools_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourcePoolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourcePoolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareResourcePoolAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource&gt;&gt; GetVMwareResourcePoolAsync (string resourcePoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource&gt;&gt; GetVMwareResourcePoolAsync(string resourcePoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareResourcePoolAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareResourcePoolAsync (resourcePoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VMwareResourcePoolResource))" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareResourcePoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource&gt;&gt;&#xA;override this.GetVMwareResourcePoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource&gt;&gt;" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVMwareResourcePoolAsync (resourcePoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourcePoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourcePoolName"> Name of the resourcePool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements resourcePool GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/resourcePools/{resourcePoolName}</description></item><item><term>Operation Id</term><description>ResourcePools_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourcePoolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourcePoolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareResourcePools">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolCollection GetVMwareResourcePools ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolCollection GetVMwareResourcePools() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareResourcePools" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareResourcePools () As VMwareResourcePoolCollection" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareResourcePools : unit -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolCollection&#xA;override this.GetVMwareResourcePools : unit -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolCollection" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVMwareResourcePools " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of VMwareResourcePoolResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of VMwareResourcePoolResources and their operations over a VMwareResourcePoolResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVCenter">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource&gt; GetVMwareVCenter (string vcenterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource&gt; GetVMwareVCenter(string vcenterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareVCenter(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareVCenter (vcenterName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VMwareVCenterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareVCenter : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource&gt;&#xA;override this.GetVMwareVCenter : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource&gt;" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVMwareVCenter (vcenterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vcenterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vcenterName"> Name of the vCenter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements vCenter GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/vcenters/{vcenterName}</description></item><item><term>Operation Id</term><description>VCenters_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vcenterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vcenterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVCenterAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource&gt;&gt; GetVMwareVCenterAsync (string vcenterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource&gt;&gt; GetVMwareVCenterAsync(string vcenterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareVCenterAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareVCenterAsync (vcenterName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VMwareVCenterResource))" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareVCenterAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource&gt;&gt;&#xA;override this.GetVMwareVCenterAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource&gt;&gt;" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVMwareVCenterAsync (vcenterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vcenterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vcenterName"> Name of the vCenter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements vCenter GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/vcenters/{vcenterName}</description></item><item><term>Operation Id</term><description>VCenters_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vcenterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vcenterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVCenters">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterCollection GetVMwareVCenters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterCollection GetVMwareVCenters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareVCenters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareVCenters () As VMwareVCenterCollection" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareVCenters : unit -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterCollection&#xA;override this.GetVMwareVCenters : unit -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterCollection" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVMwareVCenters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of VMwareVCenterResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of VMwareVCenterResources and their operations over a VMwareVCenterResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVirtualNetwork">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource&gt; GetVMwareVirtualNetwork (string virtualNetworkName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource&gt; GetVMwareVirtualNetwork(string virtualNetworkName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareVirtualNetwork(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareVirtualNetwork (virtualNetworkName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VMwareVirtualNetworkResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareVirtualNetwork : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource&gt;&#xA;override this.GetVMwareVirtualNetwork : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource&gt;" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVMwareVirtualNetwork (virtualNetworkName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualNetworkName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualNetworkName"> Name of the virtual network resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements virtual network GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualNetworks/{virtualNetworkName}</description></item><item><term>Operation Id</term><description>VirtualNetworks_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualNetworkName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualNetworkName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVirtualNetworkAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource&gt;&gt; GetVMwareVirtualNetworkAsync (string virtualNetworkName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource&gt;&gt; GetVMwareVirtualNetworkAsync(string virtualNetworkName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareVirtualNetworkAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareVirtualNetworkAsync (virtualNetworkName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VMwareVirtualNetworkResource))" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareVirtualNetworkAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource&gt;&gt;&#xA;override this.GetVMwareVirtualNetworkAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource&gt;&gt;" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVMwareVirtualNetworkAsync (virtualNetworkName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualNetworkName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualNetworkName"> Name of the virtual network resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements virtual network GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualNetworks/{virtualNetworkName}</description></item><item><term>Operation Id</term><description>VirtualNetworks_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualNetworkName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualNetworkName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVirtualNetworks">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkCollection GetVMwareVirtualNetworks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkCollection GetVMwareVirtualNetworks() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareVirtualNetworks" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareVirtualNetworks () As VMwareVirtualNetworkCollection" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareVirtualNetworks : unit -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkCollection&#xA;override this.GetVMwareVirtualNetworks : unit -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkCollection" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVMwareVirtualNetworks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of VMwareVirtualNetworkResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of VMwareVirtualNetworkResources and their operations over a VMwareVirtualNetworkResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVmTemplate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource&gt; GetVMwareVmTemplate (string virtualMachineTemplateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource&gt; GetVMwareVmTemplate(string virtualMachineTemplateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareVmTemplate(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareVmTemplate (virtualMachineTemplateName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VMwareVmTemplateResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareVmTemplate : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource&gt;&#xA;override this.GetVMwareVmTemplate : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource&gt;" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVMwareVmTemplate (virtualMachineTemplateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualMachineTemplateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualMachineTemplateName"> Name of the virtual machine template resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements virtual machine template GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachineTemplates/{virtualMachineTemplateName}</description></item><item><term>Operation Id</term><description>VirtualMachineTemplates_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualMachineTemplateName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualMachineTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVmTemplateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource&gt;&gt; GetVMwareVmTemplateAsync (string virtualMachineTemplateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource&gt;&gt; GetVMwareVmTemplateAsync(string virtualMachineTemplateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareVmTemplateAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareVmTemplateAsync (virtualMachineTemplateName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VMwareVmTemplateResource))" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareVmTemplateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource&gt;&gt;&#xA;override this.GetVMwareVmTemplateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource&gt;&gt;" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVMwareVmTemplateAsync (virtualMachineTemplateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualMachineTemplateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualMachineTemplateName"> Name of the virtual machine template resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements virtual machine template GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachineTemplates/{virtualMachineTemplateName}</description></item><item><term>Operation Id</term><description>VirtualMachineTemplates_Get</description></item><item><term>Default Api Version</term><description>2023-10-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualMachineTemplateName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualMachineTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareVmTemplates">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateCollection GetVMwareVmTemplates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateCollection GetVMwareVmTemplates() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareVmTemplates" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareVmTemplates () As VMwareVmTemplateCollection" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareVmTemplates : unit -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateCollection&#xA;override this.GetVMwareVmTemplates : unit -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateCollection" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVMwareVmTemplates " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of VMwareVmTemplateResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of VMwareVmTemplateResources and their operations over a VMwareVmTemplateResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
