<Type Name="SearchService" FullName="Microsoft.Azure.Management.Search.Models.SearchService">
  <TypeSignature Language="C#" Value="public class SearchService : Microsoft.Azure.Management.Search.Models.Resource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SearchService extends Microsoft.Azure.Management.Search.Models.Resource" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Search.Models.SearchService" />
  <TypeSignature Language="VB.NET" Value="Public Class SearchService&#xA;Inherits Resource" />
  <TypeSignature Language="F#" Value="type SearchService = class&#xA;    inherit Resource" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Search</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.Management.Search.Models.Resource</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.Rest.Serialization.JsonTransformation]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.Rest.Serialization.JsonTransformation&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Describes an Azure Search service and its current state.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SearchService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Search.Models.SearchService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Search</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the SearchService class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SearchService (string id = default, string name = default, string type = default, string location = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Microsoft.Azure.Management.Search.Models.Identity identity = default, int? replicaCount = default, int? partitionCount = default, Microsoft.Azure.Management.Search.Models.HostingMode? hostingMode = default, Microsoft.Azure.Management.Search.Models.SearchServiceStatus? status = default, string statusDetails = default, Microsoft.Azure.Management.Search.Models.ProvisioningState? provisioningState = default, Microsoft.Azure.Management.Search.Models.Sku sku = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string id, string name, string type, string location, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, class Microsoft.Azure.Management.Search.Models.Identity identity, valuetype System.Nullable`1&lt;int32&gt; replicaCount, valuetype System.Nullable`1&lt;int32&gt; partitionCount, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Management.Search.Models.HostingMode&gt; hostingMode, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Management.Search.Models.SearchServiceStatus&gt; status, string statusDetails, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Management.Search.Models.ProvisioningState&gt; provisioningState, class Microsoft.Azure.Management.Search.Models.Sku sku) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Search.Models.SearchService.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Search.Models.Identity,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Microsoft.Azure.Management.Search.Models.HostingMode},System.Nullable{Microsoft.Azure.Management.Search.Models.SearchServiceStatus},System.String,System.Nullable{Microsoft.Azure.Management.Search.Models.ProvisioningState},Microsoft.Azure.Management.Search.Models.Sku)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional id As String = Nothing, Optional name As String = Nothing, Optional type As String = Nothing, Optional location As String = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional identity As Identity = Nothing, Optional replicaCount As Nullable(Of Integer) = Nothing, Optional partitionCount As Nullable(Of Integer) = Nothing, Optional hostingMode As Nullable(Of HostingMode) = Nothing, Optional status As Nullable(Of SearchServiceStatus) = Nothing, Optional statusDetails As String = Nothing, Optional provisioningState As Nullable(Of ProvisioningState) = Nothing, Optional sku As Sku = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.Search.Models.SearchService : string * string * string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * Microsoft.Azure.Management.Search.Models.Identity * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;Microsoft.Azure.Management.Search.Models.HostingMode&gt; * Nullable&lt;Microsoft.Azure.Management.Search.Models.SearchServiceStatus&gt; * string * Nullable&lt;Microsoft.Azure.Management.Search.Models.ProvisioningState&gt; * Microsoft.Azure.Management.Search.Models.Sku -&gt; Microsoft.Azure.Management.Search.Models.SearchService" Usage="new Microsoft.Azure.Management.Search.Models.SearchService (id, name, type, location, tags, identity, replicaCount, partitionCount, hostingMode, status, statusDetails, provisioningState, sku)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Search</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="location" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="identity" Type="Microsoft.Azure.Management.Search.Models.Identity" />
        <Parameter Name="replicaCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="partitionCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="hostingMode" Type="System.Nullable&lt;Microsoft.Azure.Management.Search.Models.HostingMode&gt;" />
        <Parameter Name="status" Type="System.Nullable&lt;Microsoft.Azure.Management.Search.Models.SearchServiceStatus&gt;" />
        <Parameter Name="statusDetails" Type="System.String" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Microsoft.Azure.Management.Search.Models.ProvisioningState&gt;" />
        <Parameter Name="sku" Type="Microsoft.Azure.Management.Search.Models.Sku" />
      </Parameters>
      <Docs>
        <param name="id">The ID of the resource. This can be used with the
            Azure Resource Manager to link resources together.</param>
        <param name="name">The name of the resource.</param>
        <param name="type">The resource type.</param>
        <param name="location">The geographic location of the resource.
            This must be one of the supported and registered Azure Geo Regions
            (for example, West US, East US, Southeast Asia, and so forth). This
            property is required when creating a new resource.</param>
        <param name="tags">Tags to help categorize the resource in the
            Azure portal.</param>
        <param name="identity">The identity of the resource.</param>
        <param name="replicaCount">The number of replicas in the Search
            service. If specified, it must be a value between 1 and 12
            inclusive for standard SKUs or between 1 and 3 inclusive for basic
            SKU.</param>
        <param name="partitionCount">The number of partitions in the Search
            service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values
            greater than 1 are only valid for standard SKUs. For 'standard3'
            services with hostingMode set to 'highDensity', the allowed values
            are between 1 and 3.</param>
        <param name="hostingMode">Applicable only for the standard3 SKU.
            You can set this property to enable up to 3 high density partitions
            that allow up to 1000 indexes, which is much higher than the
            maximum indexes allowed for any other SKU. For the standard3 SKU,
            the value is either 'default' or 'highDensity'. For all other SKUs,
            this value must be 'default'. Possible values include: 'default',
            'highDensity'</param>
        <param name="status">The status of the Search service. Possible
            values include: 'running': The Search service is running and no
            provisioning operations are underway. 'provisioning': The Search
            service is being provisioned or scaled up or down. 'deleting': The
            Search service is being deleted. 'degraded': The Search service is
            degraded. This can occur when the underlying search units are not
            healthy. The Search service is most likely operational, but
            performance might be slow and some requests might be dropped.
            'disabled': The Search service is disabled. In this state, the
            service will reject all API requests. 'error': The Search service
            is in an error state. If your service is in the degraded, disabled,
            or error states, it means the Azure Search team is actively
            investigating the underlying issue. Dedicated services in these
            states are still chargeable based on the number of search units
            provisioned. Possible values include: 'running', 'provisioning',
            'deleting', 'degraded', 'disabled', 'error'</param>
        <param name="statusDetails">The details of the Search service
            status.</param>
        <param name="provisioningState">The state of the last provisioning
            operation performed on the Search service. Provisioning is an
            intermediate state that occurs while service capacity is being
            established. After capacity is set up, provisioningState changes to
            either 'succeeded' or 'failed'. Client applications can poll
            provisioning status (the recommended polling interval is from 30
            seconds to one minute) by using the Get Search Service operation to
            see when an operation is completed. If you are using the free
            service, this value tends to come back as 'succeeded' directly in
            the call to Create Search service. This is because the free service
            uses capacity that is already set up. Possible values include:
            'succeeded', 'provisioning', 'failed'</param>
        <param name="sku">The SKU of the Search Service, which determines
            price tier and capacity limits. This property is required when
            creating a new Search Service.</param>
        <summary>
            Initializes a new instance of the SearchService class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostingMode">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Search.Models.HostingMode? HostingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Management.Search.Models.HostingMode&gt; HostingMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Search.Models.SearchService.HostingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property HostingMode As Nullable(Of HostingMode)" />
      <MemberSignature Language="F#" Value="member this.HostingMode : Nullable&lt;Microsoft.Azure.Management.Search.Models.HostingMode&gt; with get, set" Usage="Microsoft.Azure.Management.Search.Models.SearchService.HostingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Search</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.hostingMode")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.hostingMode")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.Azure.Management.Search.Models.HostingMode&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets applicable only for the standard3 SKU. You can set
            this property to enable up to 3 high density partitions that allow
            up to 1000 indexes, which is much higher than the maximum indexes
            allowed for any other SKU. For the standard3 SKU, the value is
            either 'default' or 'highDensity'. For all other SKUs, this value
            must be 'default'. Possible values include: 'default',
            'highDensity'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartitionCount">
      <MemberSignature Language="C#" Value="public int? PartitionCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; PartitionCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Search.Models.SearchService.PartitionCount" />
      <MemberSignature Language="VB.NET" Value="Public Property PartitionCount As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.PartitionCount : Nullable&lt;int&gt; with get, set" Usage="Microsoft.Azure.Management.Search.Models.SearchService.PartitionCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Search</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.partitionCount")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.partitionCount")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the number of partitions in the Search service; if
            specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1
            are only valid for standard SKUs. For 'standard3' services with
            hostingMode set to 'highDensity', the allowed values are between 1
            and 3.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvisioningState">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Search.Models.ProvisioningState? ProvisioningState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Management.Search.Models.ProvisioningState&gt; ProvisioningState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Search.Models.SearchService.ProvisioningState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProvisioningState As Nullable(Of ProvisioningState)" />
      <MemberSignature Language="F#" Value="member this.ProvisioningState : Nullable&lt;Microsoft.Azure.Management.Search.Models.ProvisioningState&gt;" Usage="Microsoft.Azure.Management.Search.Models.SearchService.ProvisioningState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Search</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.provisioningState")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.provisioningState")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.Azure.Management.Search.Models.ProvisioningState&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the state of the last provisioning operation performed on the
            Search service. Provisioning is an intermediate state that occurs
            while service capacity is being established. After capacity is set
            up, provisioningState changes to either 'succeeded' or 'failed'.
            Client applications can poll provisioning status (the recommended
            polling interval is from 30 seconds to one minute) by using the Get
            Search Service operation to see when an operation is completed. If
            you are using the free service, this value tends to come back as
            'succeeded' directly in the call to Create Search service. This is
            because the free service uses capacity that is already set up.
            Possible values include: 'succeeded', 'provisioning', 'failed'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplicaCount">
      <MemberSignature Language="C#" Value="public int? ReplicaCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ReplicaCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Search.Models.SearchService.ReplicaCount" />
      <MemberSignature Language="VB.NET" Value="Public Property ReplicaCount As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.ReplicaCount : Nullable&lt;int&gt; with get, set" Usage="Microsoft.Azure.Management.Search.Models.SearchService.ReplicaCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Search</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.replicaCount")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.replicaCount")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the number of replicas in the Search service. If
            specified, it must be a value between 1 and 12 inclusive for
            standard SKUs or between 1 and 3 inclusive for basic SKU.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sku">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Search.Models.Sku Sku { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.Search.Models.Sku Sku" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Search.Models.SearchService.Sku" />
      <MemberSignature Language="VB.NET" Value="Public Property Sku As Sku" />
      <MemberSignature Language="F#" Value="member this.Sku : Microsoft.Azure.Management.Search.Models.Sku with get, set" Usage="Microsoft.Azure.Management.Search.Models.SearchService.Sku" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Search</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="sku")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="sku")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Search.Models.Sku</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the SKU of the Search Service, which determines price
            tier and capacity limits. This property is required when creating a
            new Search Service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Search.Models.SearchServiceStatus? Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Management.Search.Models.SearchServiceStatus&gt; Status" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Search.Models.SearchService.Status" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Status As Nullable(Of SearchServiceStatus)" />
      <MemberSignature Language="F#" Value="member this.Status : Nullable&lt;Microsoft.Azure.Management.Search.Models.SearchServiceStatus&gt;" Usage="Microsoft.Azure.Management.Search.Models.SearchService.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Search</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.status")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.status")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.Azure.Management.Search.Models.SearchServiceStatus&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the status of the Search service. Possible values include:
            'running': The Search service is running and no provisioning
            operations are underway. 'provisioning': The Search service is
            being provisioned or scaled up or down. 'deleting': The Search
            service is being deleted. 'degraded': The Search service is
            degraded. This can occur when the underlying search units are not
            healthy. The Search service is most likely operational, but
            performance might be slow and some requests might be dropped.
            'disabled': The Search service is disabled. In this state, the
            service will reject all API requests. 'error': The Search service
            is in an error state. If your service is in the degraded, disabled,
            or error states, it means the Azure Search team is actively
            investigating the underlying issue. Dedicated services in these
            states are still chargeable based on the number of search units
            provisioned. Possible values include: 'running', 'provisioning',
            'deleting', 'degraded', 'disabled', 'error'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatusDetails">
      <MemberSignature Language="C#" Value="public string StatusDetails { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StatusDetails" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Search.Models.SearchService.StatusDetails" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StatusDetails As String" />
      <MemberSignature Language="F#" Value="member this.StatusDetails : string" Usage="Microsoft.Azure.Management.Search.Models.SearchService.StatusDetails" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Search</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.statusDetails")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.statusDetails")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the details of the Search service status.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Search.Models.SearchService.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate ()" />
      <MemberSignature Language="F#" Value="override this.Validate : unit -&gt; unit" Usage="searchService.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Search</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
