<Type Name="SparkModelFactory" FullName="Azure.Analytics.Synapse.Spark.Models.SparkModelFactory">
  <TypeSignature Language="C#" Value="public static class SparkModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SparkModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Synapse.Spark.Models.SparkModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class SparkModelFactory" />
  <TypeSignature Language="F#" Value="type SparkModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for read-only models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="SparkBatchJob">
      <MemberSignature Language="C#" Value="public static Azure.Analytics.Synapse.Spark.Models.SparkBatchJob SparkBatchJob (Azure.Analytics.Synapse.Spark.Models.SparkBatchJobState livyInfo = default, string name = default, string workspaceName = default, string sparkPoolName = default, string submitterName = default, string submitterId = default, string artifactId = default, Azure.Analytics.Synapse.Spark.Models.SparkJobType? jobType = default, Azure.Analytics.Synapse.Spark.Models.SparkBatchJobResultType? result = default, Azure.Analytics.Synapse.Spark.Models.SparkScheduler scheduler = default, Azure.Analytics.Synapse.Spark.Models.SparkServicePlugin plugin = default, System.Collections.Generic.IEnumerable&lt;Azure.Analytics.Synapse.Spark.Models.SparkServiceError&gt; errors = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; tags = default, int id = 0, string appId = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; appInfo = default, Azure.Analytics.Synapse.Spark.Models.LivyStates? state = default, System.Collections.Generic.IEnumerable&lt;string&gt; logLines = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Analytics.Synapse.Spark.Models.SparkBatchJob SparkBatchJob(class Azure.Analytics.Synapse.Spark.Models.SparkBatchJobState livyInfo, string name, string workspaceName, string sparkPoolName, string submitterName, string submitterId, string artifactId, valuetype System.Nullable`1&lt;valuetype Azure.Analytics.Synapse.Spark.Models.SparkJobType&gt; jobType, valuetype System.Nullable`1&lt;valuetype Azure.Analytics.Synapse.Spark.Models.SparkBatchJobResultType&gt; result, class Azure.Analytics.Synapse.Spark.Models.SparkScheduler scheduler, class Azure.Analytics.Synapse.Spark.Models.SparkServicePlugin plugin, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Analytics.Synapse.Spark.Models.SparkServiceError&gt; errors, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt; tags, int32 id, string appId, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt; appInfo, valuetype System.Nullable`1&lt;valuetype Azure.Analytics.Synapse.Spark.Models.LivyStates&gt; state, class System.Collections.Generic.IEnumerable`1&lt;string&gt; logLines) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.Models.SparkModelFactory.SparkBatchJob(Azure.Analytics.Synapse.Spark.Models.SparkBatchJobState,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{Azure.Analytics.Synapse.Spark.Models.SparkJobType},System.Nullable{Azure.Analytics.Synapse.Spark.Models.SparkBatchJobResultType},Azure.Analytics.Synapse.Spark.Models.SparkScheduler,Azure.Analytics.Synapse.Spark.Models.SparkServicePlugin,System.Collections.Generic.IEnumerable{Azure.Analytics.Synapse.Spark.Models.SparkServiceError},System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Int32,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Nullable{Azure.Analytics.Synapse.Spark.Models.LivyStates},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SparkBatchJob (Optional livyInfo As SparkBatchJobState = Nothing, Optional name As String = Nothing, Optional workspaceName As String = Nothing, Optional sparkPoolName As String = Nothing, Optional submitterName As String = Nothing, Optional submitterId As String = Nothing, Optional artifactId As String = Nothing, Optional jobType As Nullable(Of SparkJobType) = Nothing, Optional result As Nullable(Of SparkBatchJobResultType) = Nothing, Optional scheduler As SparkScheduler = Nothing, Optional plugin As SparkServicePlugin = Nothing, Optional errors As IEnumerable(Of SparkServiceError) = Nothing, Optional tags As IReadOnlyDictionary(Of String, String) = Nothing, Optional id As Integer = 0, Optional appId As String = Nothing, Optional appInfo As IReadOnlyDictionary(Of String, String) = Nothing, Optional state As Nullable(Of LivyStates) = Nothing, Optional logLines As IEnumerable(Of String) = Nothing) As SparkBatchJob" />
      <MemberSignature Language="F#" Value="static member SparkBatchJob : Azure.Analytics.Synapse.Spark.Models.SparkBatchJobState * string * string * string * string * string * string * Nullable&lt;Azure.Analytics.Synapse.Spark.Models.SparkJobType&gt; * Nullable&lt;Azure.Analytics.Synapse.Spark.Models.SparkBatchJobResultType&gt; * Azure.Analytics.Synapse.Spark.Models.SparkScheduler * Azure.Analytics.Synapse.Spark.Models.SparkServicePlugin * seq&lt;Azure.Analytics.Synapse.Spark.Models.SparkServiceError&gt; * System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt; * int * string * System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt; * Nullable&lt;Azure.Analytics.Synapse.Spark.Models.LivyStates&gt; * seq&lt;string&gt; -&gt; Azure.Analytics.Synapse.Spark.Models.SparkBatchJob" Usage="Azure.Analytics.Synapse.Spark.Models.SparkModelFactory.SparkBatchJob (livyInfo, name, workspaceName, sparkPoolName, submitterName, submitterId, artifactId, jobType, result, scheduler, plugin, errors, tags, id, appId, appInfo, state, logLines)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Spark.Models.SparkBatchJob</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="livyInfo" Type="Azure.Analytics.Synapse.Spark.Models.SparkBatchJobState" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="workspaceName" Type="System.String" />
        <Parameter Name="sparkPoolName" Type="System.String" />
        <Parameter Name="submitterName" Type="System.String" />
        <Parameter Name="submitterId" Type="System.String" />
        <Parameter Name="artifactId" Type="System.String" />
        <Parameter Name="jobType" Type="System.Nullable&lt;Azure.Analytics.Synapse.Spark.Models.SparkJobType&gt;" />
        <Parameter Name="result" Type="System.Nullable&lt;Azure.Analytics.Synapse.Spark.Models.SparkBatchJobResultType&gt;" />
        <Parameter Name="scheduler" Type="Azure.Analytics.Synapse.Spark.Models.SparkScheduler" />
        <Parameter Name="plugin" Type="Azure.Analytics.Synapse.Spark.Models.SparkServicePlugin" />
        <Parameter Name="errors" Type="System.Collections.Generic.IEnumerable&lt;Azure.Analytics.Synapse.Spark.Models.SparkServiceError&gt;" />
        <Parameter Name="tags" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="appInfo" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="state" Type="System.Nullable&lt;Azure.Analytics.Synapse.Spark.Models.LivyStates&gt;" />
        <Parameter Name="logLines" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="livyInfo" />
        <param name="name"> The batch name. </param>
        <param name="workspaceName"> The workspace name. </param>
        <param name="sparkPoolName"> The Spark pool name. </param>
        <param name="submitterName"> The submitter name. </param>
        <param name="submitterId"> The submitter identifier. </param>
        <param name="artifactId"> The artifact identifier. </param>
        <param name="jobType"> The job type. </param>
        <param name="result"> The Spark batch job result. </param>
        <param name="scheduler"> The scheduler information. </param>
        <param name="plugin"> The plugin information. </param>
        <param name="errors"> The error information. </param>
        <param name="tags"> The tags. </param>
        <param name="id"> The session Id. </param>
        <param name="appId"> The application id of this session. </param>
        <param name="appInfo"> The detailed application info. </param>
        <param name="state"> The batch state. </param>
        <param name="logLines"> The log lines. </param>
        <summary> Initializes a new instance of SparkBatchJob. </summary>
        <returns> A new <see cref="T:Azure.Analytics.Synapse.Spark.Models.SparkBatchJob" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SparkBatchJobCollection">
      <MemberSignature Language="C#" Value="public static Azure.Analytics.Synapse.Spark.Models.SparkBatchJobCollection SparkBatchJobCollection (int from = 0, int total = 0, System.Collections.Generic.IEnumerable&lt;Azure.Analytics.Synapse.Spark.Models.SparkBatchJob&gt; sessions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Analytics.Synapse.Spark.Models.SparkBatchJobCollection SparkBatchJobCollection(int32 from, int32 total, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Analytics.Synapse.Spark.Models.SparkBatchJob&gt; sessions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.Models.SparkModelFactory.SparkBatchJobCollection(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{Azure.Analytics.Synapse.Spark.Models.SparkBatchJob})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SparkBatchJobCollection (Optional from As Integer = 0, Optional total As Integer = 0, Optional sessions As IEnumerable(Of SparkBatchJob) = Nothing) As SparkBatchJobCollection" />
      <MemberSignature Language="F#" Value="static member SparkBatchJobCollection : int * int * seq&lt;Azure.Analytics.Synapse.Spark.Models.SparkBatchJob&gt; -&gt; Azure.Analytics.Synapse.Spark.Models.SparkBatchJobCollection" Usage="Azure.Analytics.Synapse.Spark.Models.SparkModelFactory.SparkBatchJobCollection (from, total, sessions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Spark.Models.SparkBatchJobCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.Int32" />
        <Parameter Name="total" Type="System.Int32" />
        <Parameter Name="sessions" Type="System.Collections.Generic.IEnumerable&lt;Azure.Analytics.Synapse.Spark.Models.SparkBatchJob&gt;" />
      </Parameters>
      <Docs>
        <param name="from"> The start index of fetched sessions. </param>
        <param name="total"> Number of sessions fetched. </param>
        <param name="sessions"> Batch list. </param>
        <summary> Initializes a new instance of SparkBatchJobCollection. </summary>
        <returns> A new <see cref="T:Azure.Analytics.Synapse.Spark.Models.SparkBatchJobCollection" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SparkBatchJobState">
      <MemberSignature Language="C#" Value="public static Azure.Analytics.Synapse.Spark.Models.SparkBatchJobState SparkBatchJobState (DateTimeOffset? notStartedAt = default, DateTimeOffset? startingAt = default, DateTimeOffset? runningAt = default, DateTimeOffset? deadAt = default, DateTimeOffset? successAt = default, DateTimeOffset? terminatedAt = default, DateTimeOffset? recoveringAt = default, string currentState = default, Azure.Analytics.Synapse.Spark.Models.SparkRequest jobCreationRequest = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Analytics.Synapse.Spark.Models.SparkBatchJobState SparkBatchJobState(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; notStartedAt, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startingAt, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; runningAt, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; deadAt, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; successAt, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; terminatedAt, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; recoveringAt, string currentState, class Azure.Analytics.Synapse.Spark.Models.SparkRequest jobCreationRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.Models.SparkModelFactory.SparkBatchJobState(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,Azure.Analytics.Synapse.Spark.Models.SparkRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SparkBatchJobState (Optional notStartedAt As Nullable(Of DateTimeOffset) = Nothing, Optional startingAt As Nullable(Of DateTimeOffset) = Nothing, Optional runningAt As Nullable(Of DateTimeOffset) = Nothing, Optional deadAt As Nullable(Of DateTimeOffset) = Nothing, Optional successAt As Nullable(Of DateTimeOffset) = Nothing, Optional terminatedAt As Nullable(Of DateTimeOffset) = Nothing, Optional recoveringAt As Nullable(Of DateTimeOffset) = Nothing, Optional currentState As String = Nothing, Optional jobCreationRequest As SparkRequest = Nothing) As SparkBatchJobState" />
      <MemberSignature Language="F#" Value="static member SparkBatchJobState : Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * string * Azure.Analytics.Synapse.Spark.Models.SparkRequest -&gt; Azure.Analytics.Synapse.Spark.Models.SparkBatchJobState" Usage="Azure.Analytics.Synapse.Spark.Models.SparkModelFactory.SparkBatchJobState (notStartedAt, startingAt, runningAt, deadAt, successAt, terminatedAt, recoveringAt, currentState, jobCreationRequest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Spark.Models.SparkBatchJobState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notStartedAt" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="startingAt" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="runningAt" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="deadAt" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="successAt" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="terminatedAt" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="recoveringAt" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="currentState" Type="System.String" />
        <Parameter Name="jobCreationRequest" Type="Azure.Analytics.Synapse.Spark.Models.SparkRequest" />
      </Parameters>
      <Docs>
        <param name="notStartedAt"> the time that at which "not_started" livy state was first seen. </param>
        <param name="startingAt"> the time that at which "starting" livy state was first seen. </param>
        <param name="runningAt"> the time that at which "running" livy state was first seen. </param>
        <param name="deadAt"> time that at which "dead" livy state was first seen. </param>
        <param name="successAt"> the time that at which "success" livy state was first seen. </param>
        <param name="terminatedAt"> the time that at which "killed" livy state was first seen. </param>
        <param name="recoveringAt"> the time that at which "recovering" livy state was first seen. </param>
        <param name="currentState"> the Spark job state. </param>
        <param name="jobCreationRequest" />
        <summary> Initializes a new instance of SparkBatchJobState. </summary>
        <returns> A new <see cref="T:Azure.Analytics.Synapse.Spark.Models.SparkBatchJobState" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SparkRequest">
      <MemberSignature Language="C#" Value="public static Azure.Analytics.Synapse.Spark.Models.SparkRequest SparkRequest (string name = default, string file = default, string className = default, System.Collections.Generic.IEnumerable&lt;string&gt; arguments = default, System.Collections.Generic.IEnumerable&lt;string&gt; jars = default, System.Collections.Generic.IEnumerable&lt;string&gt; pythonFiles = default, System.Collections.Generic.IEnumerable&lt;string&gt; files = default, System.Collections.Generic.IEnumerable&lt;string&gt; archives = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; configuration = default, string driverMemory = default, int? driverCores = default, string executorMemory = default, int? executorCores = default, int? executorCount = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Analytics.Synapse.Spark.Models.SparkRequest SparkRequest(string name, string file, string className, class System.Collections.Generic.IEnumerable`1&lt;string&gt; arguments, class System.Collections.Generic.IEnumerable`1&lt;string&gt; jars, class System.Collections.Generic.IEnumerable`1&lt;string&gt; pythonFiles, class System.Collections.Generic.IEnumerable`1&lt;string&gt; files, class System.Collections.Generic.IEnumerable`1&lt;string&gt; archives, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt; configuration, string driverMemory, valuetype System.Nullable`1&lt;int32&gt; driverCores, string executorMemory, valuetype System.Nullable`1&lt;int32&gt; executorCores, valuetype System.Nullable`1&lt;int32&gt; executorCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.Models.SparkModelFactory.SparkRequest(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SparkRequest (Optional name As String = Nothing, Optional file As String = Nothing, Optional className As String = Nothing, Optional arguments As IEnumerable(Of String) = Nothing, Optional jars As IEnumerable(Of String) = Nothing, Optional pythonFiles As IEnumerable(Of String) = Nothing, Optional files As IEnumerable(Of String) = Nothing, Optional archives As IEnumerable(Of String) = Nothing, Optional configuration As IReadOnlyDictionary(Of String, String) = Nothing, Optional driverMemory As String = Nothing, Optional driverCores As Nullable(Of Integer) = Nothing, Optional executorMemory As String = Nothing, Optional executorCores As Nullable(Of Integer) = Nothing, Optional executorCount As Nullable(Of Integer) = Nothing) As SparkRequest" />
      <MemberSignature Language="F#" Value="static member SparkRequest : string * string * string * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt; * string * Nullable&lt;int&gt; * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; -&gt; Azure.Analytics.Synapse.Spark.Models.SparkRequest" Usage="Azure.Analytics.Synapse.Spark.Models.SparkModelFactory.SparkRequest (name, file, className, arguments, jars, pythonFiles, files, archives, configuration, driverMemory, driverCores, executorMemory, executorCores, executorCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Spark.Models.SparkRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="jars" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="pythonFiles" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="files" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="archives" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="configuration" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="driverMemory" Type="System.String" />
        <Parameter Name="driverCores" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="executorMemory" Type="System.String" />
        <Parameter Name="executorCores" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="executorCount" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="name" />
        <param name="file" />
        <param name="className" />
        <param name="arguments" />
        <param name="jars" />
        <param name="pythonFiles" />
        <param name="files" />
        <param name="archives" />
        <param name="configuration"> Dictionary of &lt;string&gt;. </param>
        <param name="driverMemory" />
        <param name="driverCores" />
        <param name="executorMemory" />
        <param name="executorCores" />
        <param name="executorCount" />
        <summary> Initializes a new instance of SparkRequest. </summary>
        <returns> A new <see cref="T:Azure.Analytics.Synapse.Spark.Models.SparkRequest" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SparkScheduler">
      <MemberSignature Language="C#" Value="public static Azure.Analytics.Synapse.Spark.Models.SparkScheduler SparkScheduler (DateTimeOffset? submittedAt = default, DateTimeOffset? scheduledAt = default, DateTimeOffset? endedAt = default, DateTimeOffset? cancellationRequestedAt = default, Azure.Analytics.Synapse.Spark.Models.SchedulerCurrentState? currentState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Analytics.Synapse.Spark.Models.SparkScheduler SparkScheduler(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; submittedAt, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; scheduledAt, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endedAt, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; cancellationRequestedAt, valuetype System.Nullable`1&lt;valuetype Azure.Analytics.Synapse.Spark.Models.SchedulerCurrentState&gt; currentState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.Models.SparkModelFactory.SparkScheduler(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.Analytics.Synapse.Spark.Models.SchedulerCurrentState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SparkScheduler (Optional submittedAt As Nullable(Of DateTimeOffset) = Nothing, Optional scheduledAt As Nullable(Of DateTimeOffset) = Nothing, Optional endedAt As Nullable(Of DateTimeOffset) = Nothing, Optional cancellationRequestedAt As Nullable(Of DateTimeOffset) = Nothing, Optional currentState As Nullable(Of SchedulerCurrentState) = Nothing) As SparkScheduler" />
      <MemberSignature Language="F#" Value="static member SparkScheduler : Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.Analytics.Synapse.Spark.Models.SchedulerCurrentState&gt; -&gt; Azure.Analytics.Synapse.Spark.Models.SparkScheduler" Usage="Azure.Analytics.Synapse.Spark.Models.SparkModelFactory.SparkScheduler (submittedAt, scheduledAt, endedAt, cancellationRequestedAt, currentState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Spark.Models.SparkScheduler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="submittedAt" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="scheduledAt" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endedAt" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="cancellationRequestedAt" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="currentState" Type="System.Nullable&lt;Azure.Analytics.Synapse.Spark.Models.SchedulerCurrentState&gt;" />
      </Parameters>
      <Docs>
        <param name="submittedAt" />
        <param name="scheduledAt" />
        <param name="endedAt" />
        <param name="cancellationRequestedAt" />
        <param name="currentState" />
        <summary> Initializes a new instance of SparkScheduler. </summary>
        <returns> A new <see cref="T:Azure.Analytics.Synapse.Spark.Models.SparkScheduler" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SparkServiceError">
      <MemberSignature Language="C#" Value="public static Azure.Analytics.Synapse.Spark.Models.SparkServiceError SparkServiceError (string message = default, string errorCode = default, Azure.Analytics.Synapse.Spark.Models.SparkErrorSource? source = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Analytics.Synapse.Spark.Models.SparkServiceError SparkServiceError(string message, string errorCode, valuetype System.Nullable`1&lt;valuetype Azure.Analytics.Synapse.Spark.Models.SparkErrorSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.Models.SparkModelFactory.SparkServiceError(System.String,System.String,System.Nullable{Azure.Analytics.Synapse.Spark.Models.SparkErrorSource})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SparkServiceError (Optional message As String = Nothing, Optional errorCode As String = Nothing, Optional source As Nullable(Of SparkErrorSource) = Nothing) As SparkServiceError" />
      <MemberSignature Language="F#" Value="static member SparkServiceError : string * string * Nullable&lt;Azure.Analytics.Synapse.Spark.Models.SparkErrorSource&gt; -&gt; Azure.Analytics.Synapse.Spark.Models.SparkServiceError" Usage="Azure.Analytics.Synapse.Spark.Models.SparkModelFactory.SparkServiceError (message, errorCode, source)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Spark.Models.SparkServiceError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="errorCode" Type="System.String" />
        <Parameter Name="source" Type="System.Nullable&lt;Azure.Analytics.Synapse.Spark.Models.SparkErrorSource&gt;" />
      </Parameters>
      <Docs>
        <param name="message" />
        <param name="errorCode" />
        <param name="source" />
        <summary> Initializes a new instance of SparkServiceError. </summary>
        <returns> A new <see cref="T:Azure.Analytics.Synapse.Spark.Models.SparkServiceError" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SparkServicePlugin">
      <MemberSignature Language="C#" Value="public static Azure.Analytics.Synapse.Spark.Models.SparkServicePlugin SparkServicePlugin (DateTimeOffset? preparationStartedAt = default, DateTimeOffset? resourceAcquisitionStartedAt = default, DateTimeOffset? submissionStartedAt = default, DateTimeOffset? monitoringStartedAt = default, DateTimeOffset? cleanupStartedAt = default, Azure.Analytics.Synapse.Spark.Models.PluginCurrentState? currentState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Analytics.Synapse.Spark.Models.SparkServicePlugin SparkServicePlugin(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; preparationStartedAt, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; resourceAcquisitionStartedAt, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; submissionStartedAt, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; monitoringStartedAt, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; cleanupStartedAt, valuetype System.Nullable`1&lt;valuetype Azure.Analytics.Synapse.Spark.Models.PluginCurrentState&gt; currentState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.Models.SparkModelFactory.SparkServicePlugin(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.Analytics.Synapse.Spark.Models.PluginCurrentState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SparkServicePlugin (Optional preparationStartedAt As Nullable(Of DateTimeOffset) = Nothing, Optional resourceAcquisitionStartedAt As Nullable(Of DateTimeOffset) = Nothing, Optional submissionStartedAt As Nullable(Of DateTimeOffset) = Nothing, Optional monitoringStartedAt As Nullable(Of DateTimeOffset) = Nothing, Optional cleanupStartedAt As Nullable(Of DateTimeOffset) = Nothing, Optional currentState As Nullable(Of PluginCurrentState) = Nothing) As SparkServicePlugin" />
      <MemberSignature Language="F#" Value="static member SparkServicePlugin : Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.Analytics.Synapse.Spark.Models.PluginCurrentState&gt; -&gt; Azure.Analytics.Synapse.Spark.Models.SparkServicePlugin" Usage="Azure.Analytics.Synapse.Spark.Models.SparkModelFactory.SparkServicePlugin (preparationStartedAt, resourceAcquisitionStartedAt, submissionStartedAt, monitoringStartedAt, cleanupStartedAt, currentState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Spark.Models.SparkServicePlugin</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preparationStartedAt" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="resourceAcquisitionStartedAt" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="submissionStartedAt" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="monitoringStartedAt" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="cleanupStartedAt" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="currentState" Type="System.Nullable&lt;Azure.Analytics.Synapse.Spark.Models.PluginCurrentState&gt;" />
      </Parameters>
      <Docs>
        <param name="preparationStartedAt" />
        <param name="resourceAcquisitionStartedAt" />
        <param name="submissionStartedAt" />
        <param name="monitoringStartedAt" />
        <param name="cleanupStartedAt" />
        <param name="currentState" />
        <summary> Initializes a new instance of SparkServicePlugin. </summary>
        <returns> A new <see cref="T:Azure.Analytics.Synapse.Spark.Models.SparkServicePlugin" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SparkSession">
      <MemberSignature Language="C#" Value="public static Azure.Analytics.Synapse.Spark.Models.SparkSession SparkSession (Azure.Analytics.Synapse.Spark.Models.SparkSessionState livyInfo = default, string name = default, string workspaceName = default, string sparkPoolName = default, string submitterName = default, string submitterId = default, string artifactId = default, Azure.Analytics.Synapse.Spark.Models.SparkJobType? jobType = default, Azure.Analytics.Synapse.Spark.Models.SparkSessionResultType? result = default, Azure.Analytics.Synapse.Spark.Models.SparkScheduler scheduler = default, Azure.Analytics.Synapse.Spark.Models.SparkServicePlugin plugin = default, System.Collections.Generic.IEnumerable&lt;Azure.Analytics.Synapse.Spark.Models.SparkServiceError&gt; errors = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; tags = default, int id = 0, string appId = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; appInfo = default, Azure.Analytics.Synapse.Spark.Models.LivyStates? state = default, System.Collections.Generic.IEnumerable&lt;string&gt; logLines = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Analytics.Synapse.Spark.Models.SparkSession SparkSession(class Azure.Analytics.Synapse.Spark.Models.SparkSessionState livyInfo, string name, string workspaceName, string sparkPoolName, string submitterName, string submitterId, string artifactId, valuetype System.Nullable`1&lt;valuetype Azure.Analytics.Synapse.Spark.Models.SparkJobType&gt; jobType, valuetype System.Nullable`1&lt;valuetype Azure.Analytics.Synapse.Spark.Models.SparkSessionResultType&gt; result, class Azure.Analytics.Synapse.Spark.Models.SparkScheduler scheduler, class Azure.Analytics.Synapse.Spark.Models.SparkServicePlugin plugin, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Analytics.Synapse.Spark.Models.SparkServiceError&gt; errors, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt; tags, int32 id, string appId, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt; appInfo, valuetype System.Nullable`1&lt;valuetype Azure.Analytics.Synapse.Spark.Models.LivyStates&gt; state, class System.Collections.Generic.IEnumerable`1&lt;string&gt; logLines) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.Models.SparkModelFactory.SparkSession(Azure.Analytics.Synapse.Spark.Models.SparkSessionState,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{Azure.Analytics.Synapse.Spark.Models.SparkJobType},System.Nullable{Azure.Analytics.Synapse.Spark.Models.SparkSessionResultType},Azure.Analytics.Synapse.Spark.Models.SparkScheduler,Azure.Analytics.Synapse.Spark.Models.SparkServicePlugin,System.Collections.Generic.IEnumerable{Azure.Analytics.Synapse.Spark.Models.SparkServiceError},System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Int32,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Nullable{Azure.Analytics.Synapse.Spark.Models.LivyStates},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SparkSession (Optional livyInfo As SparkSessionState = Nothing, Optional name As String = Nothing, Optional workspaceName As String = Nothing, Optional sparkPoolName As String = Nothing, Optional submitterName As String = Nothing, Optional submitterId As String = Nothing, Optional artifactId As String = Nothing, Optional jobType As Nullable(Of SparkJobType) = Nothing, Optional result As Nullable(Of SparkSessionResultType) = Nothing, Optional scheduler As SparkScheduler = Nothing, Optional plugin As SparkServicePlugin = Nothing, Optional errors As IEnumerable(Of SparkServiceError) = Nothing, Optional tags As IReadOnlyDictionary(Of String, String) = Nothing, Optional id As Integer = 0, Optional appId As String = Nothing, Optional appInfo As IReadOnlyDictionary(Of String, String) = Nothing, Optional state As Nullable(Of LivyStates) = Nothing, Optional logLines As IEnumerable(Of String) = Nothing) As SparkSession" />
      <MemberSignature Language="F#" Value="static member SparkSession : Azure.Analytics.Synapse.Spark.Models.SparkSessionState * string * string * string * string * string * string * Nullable&lt;Azure.Analytics.Synapse.Spark.Models.SparkJobType&gt; * Nullable&lt;Azure.Analytics.Synapse.Spark.Models.SparkSessionResultType&gt; * Azure.Analytics.Synapse.Spark.Models.SparkScheduler * Azure.Analytics.Synapse.Spark.Models.SparkServicePlugin * seq&lt;Azure.Analytics.Synapse.Spark.Models.SparkServiceError&gt; * System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt; * int * string * System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt; * Nullable&lt;Azure.Analytics.Synapse.Spark.Models.LivyStates&gt; * seq&lt;string&gt; -&gt; Azure.Analytics.Synapse.Spark.Models.SparkSession" Usage="Azure.Analytics.Synapse.Spark.Models.SparkModelFactory.SparkSession (livyInfo, name, workspaceName, sparkPoolName, submitterName, submitterId, artifactId, jobType, result, scheduler, plugin, errors, tags, id, appId, appInfo, state, logLines)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Spark.Models.SparkSession</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="livyInfo" Type="Azure.Analytics.Synapse.Spark.Models.SparkSessionState" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="workspaceName" Type="System.String" />
        <Parameter Name="sparkPoolName" Type="System.String" />
        <Parameter Name="submitterName" Type="System.String" />
        <Parameter Name="submitterId" Type="System.String" />
        <Parameter Name="artifactId" Type="System.String" />
        <Parameter Name="jobType" Type="System.Nullable&lt;Azure.Analytics.Synapse.Spark.Models.SparkJobType&gt;" />
        <Parameter Name="result" Type="System.Nullable&lt;Azure.Analytics.Synapse.Spark.Models.SparkSessionResultType&gt;" />
        <Parameter Name="scheduler" Type="Azure.Analytics.Synapse.Spark.Models.SparkScheduler" />
        <Parameter Name="plugin" Type="Azure.Analytics.Synapse.Spark.Models.SparkServicePlugin" />
        <Parameter Name="errors" Type="System.Collections.Generic.IEnumerable&lt;Azure.Analytics.Synapse.Spark.Models.SparkServiceError&gt;" />
        <Parameter Name="tags" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="appInfo" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="state" Type="System.Nullable&lt;Azure.Analytics.Synapse.Spark.Models.LivyStates&gt;" />
        <Parameter Name="logLines" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="livyInfo" />
        <param name="name" />
        <param name="workspaceName" />
        <param name="sparkPoolName" />
        <param name="submitterName" />
        <param name="submitterId" />
        <param name="artifactId" />
        <param name="jobType"> The job type. </param>
        <param name="result" />
        <param name="scheduler" />
        <param name="plugin" />
        <param name="errors" />
        <param name="tags"> Dictionary of &lt;string&gt;. </param>
        <param name="id" />
        <param name="appId" />
        <param name="appInfo"> Dictionary of &lt;string&gt;. </param>
        <param name="state"> The session state. </param>
        <param name="logLines" />
        <summary> Initializes a new instance of SparkSession. </summary>
        <returns> A new <see cref="T:Azure.Analytics.Synapse.Spark.Models.SparkSession" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SparkSessionCollection">
      <MemberSignature Language="C#" Value="public static Azure.Analytics.Synapse.Spark.Models.SparkSessionCollection SparkSessionCollection (int from = 0, int total = 0, System.Collections.Generic.IEnumerable&lt;Azure.Analytics.Synapse.Spark.Models.SparkSession&gt; sessions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Analytics.Synapse.Spark.Models.SparkSessionCollection SparkSessionCollection(int32 from, int32 total, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Analytics.Synapse.Spark.Models.SparkSession&gt; sessions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.Models.SparkModelFactory.SparkSessionCollection(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{Azure.Analytics.Synapse.Spark.Models.SparkSession})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SparkSessionCollection (Optional from As Integer = 0, Optional total As Integer = 0, Optional sessions As IEnumerable(Of SparkSession) = Nothing) As SparkSessionCollection" />
      <MemberSignature Language="F#" Value="static member SparkSessionCollection : int * int * seq&lt;Azure.Analytics.Synapse.Spark.Models.SparkSession&gt; -&gt; Azure.Analytics.Synapse.Spark.Models.SparkSessionCollection" Usage="Azure.Analytics.Synapse.Spark.Models.SparkModelFactory.SparkSessionCollection (from, total, sessions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Spark.Models.SparkSessionCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.Int32" />
        <Parameter Name="total" Type="System.Int32" />
        <Parameter Name="sessions" Type="System.Collections.Generic.IEnumerable&lt;Azure.Analytics.Synapse.Spark.Models.SparkSession&gt;" />
      </Parameters>
      <Docs>
        <param name="from" />
        <param name="total" />
        <param name="sessions" />
        <summary> Initializes a new instance of SparkSessionCollection. </summary>
        <returns> A new <see cref="T:Azure.Analytics.Synapse.Spark.Models.SparkSessionCollection" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SparkSessionState">
      <MemberSignature Language="C#" Value="public static Azure.Analytics.Synapse.Spark.Models.SparkSessionState SparkSessionState (DateTimeOffset? notStartedAt = default, DateTimeOffset? startingAt = default, DateTimeOffset? idleAt = default, DateTimeOffset? deadAt = default, DateTimeOffset? shuttingDownAt = default, DateTimeOffset? terminatedAt = default, DateTimeOffset? recoveringAt = default, DateTimeOffset? busyAt = default, DateTimeOffset? errorAt = default, string currentState = default, Azure.Analytics.Synapse.Spark.Models.SparkRequest jobCreationRequest = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Analytics.Synapse.Spark.Models.SparkSessionState SparkSessionState(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; notStartedAt, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startingAt, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; idleAt, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; deadAt, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; shuttingDownAt, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; terminatedAt, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; recoveringAt, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; busyAt, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; errorAt, string currentState, class Azure.Analytics.Synapse.Spark.Models.SparkRequest jobCreationRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.Models.SparkModelFactory.SparkSessionState(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,Azure.Analytics.Synapse.Spark.Models.SparkRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SparkSessionState (Optional notStartedAt As Nullable(Of DateTimeOffset) = Nothing, Optional startingAt As Nullable(Of DateTimeOffset) = Nothing, Optional idleAt As Nullable(Of DateTimeOffset) = Nothing, Optional deadAt As Nullable(Of DateTimeOffset) = Nothing, Optional shuttingDownAt As Nullable(Of DateTimeOffset) = Nothing, Optional terminatedAt As Nullable(Of DateTimeOffset) = Nothing, Optional recoveringAt As Nullable(Of DateTimeOffset) = Nothing, Optional busyAt As Nullable(Of DateTimeOffset) = Nothing, Optional errorAt As Nullable(Of DateTimeOffset) = Nothing, Optional currentState As String = Nothing, Optional jobCreationRequest As SparkRequest = Nothing) As SparkSessionState" />
      <MemberSignature Language="F#" Value="static member SparkSessionState : Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * string * Azure.Analytics.Synapse.Spark.Models.SparkRequest -&gt; Azure.Analytics.Synapse.Spark.Models.SparkSessionState" Usage="Azure.Analytics.Synapse.Spark.Models.SparkModelFactory.SparkSessionState (notStartedAt, startingAt, idleAt, deadAt, shuttingDownAt, terminatedAt, recoveringAt, busyAt, errorAt, currentState, jobCreationRequest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Spark.Models.SparkSessionState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notStartedAt" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="startingAt" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="idleAt" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="deadAt" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="shuttingDownAt" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="terminatedAt" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="recoveringAt" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="busyAt" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="errorAt" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="currentState" Type="System.String" />
        <Parameter Name="jobCreationRequest" Type="Azure.Analytics.Synapse.Spark.Models.SparkRequest" />
      </Parameters>
      <Docs>
        <param name="notStartedAt" />
        <param name="startingAt" />
        <param name="idleAt" />
        <param name="deadAt" />
        <param name="shuttingDownAt" />
        <param name="terminatedAt" />
        <param name="recoveringAt" />
        <param name="busyAt" />
        <param name="errorAt" />
        <param name="currentState" />
        <param name="jobCreationRequest" />
        <summary> Initializes a new instance of SparkSessionState. </summary>
        <returns> A new <see cref="T:Azure.Analytics.Synapse.Spark.Models.SparkSessionState" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SparkStatement">
      <MemberSignature Language="C#" Value="public static Azure.Analytics.Synapse.Spark.Models.SparkStatement SparkStatement (int id = 0, string code = default, Azure.Analytics.Synapse.Spark.Models.LivyStatementStates? state = default, Azure.Analytics.Synapse.Spark.Models.SparkStatementOutput output = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Analytics.Synapse.Spark.Models.SparkStatement SparkStatement(int32 id, string code, valuetype System.Nullable`1&lt;valuetype Azure.Analytics.Synapse.Spark.Models.LivyStatementStates&gt; state, class Azure.Analytics.Synapse.Spark.Models.SparkStatementOutput output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.Models.SparkModelFactory.SparkStatement(System.Int32,System.String,System.Nullable{Azure.Analytics.Synapse.Spark.Models.LivyStatementStates},Azure.Analytics.Synapse.Spark.Models.SparkStatementOutput)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SparkStatement (Optional id As Integer = 0, Optional code As String = Nothing, Optional state As Nullable(Of LivyStatementStates) = Nothing, Optional output As SparkStatementOutput = Nothing) As SparkStatement" />
      <MemberSignature Language="F#" Value="static member SparkStatement : int * string * Nullable&lt;Azure.Analytics.Synapse.Spark.Models.LivyStatementStates&gt; * Azure.Analytics.Synapse.Spark.Models.SparkStatementOutput -&gt; Azure.Analytics.Synapse.Spark.Models.SparkStatement" Usage="Azure.Analytics.Synapse.Spark.Models.SparkModelFactory.SparkStatement (id, code, state, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Spark.Models.SparkStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="code" Type="System.String" />
        <Parameter Name="state" Type="System.Nullable&lt;Azure.Analytics.Synapse.Spark.Models.LivyStatementStates&gt;" />
        <Parameter Name="output" Type="Azure.Analytics.Synapse.Spark.Models.SparkStatementOutput" />
      </Parameters>
      <Docs>
        <param name="id" />
        <param name="code" />
        <param name="state" />
        <param name="output" />
        <summary> Initializes a new instance of SparkStatement. </summary>
        <returns> A new <see cref="T:Azure.Analytics.Synapse.Spark.Models.SparkStatement" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SparkStatementCancellationResult">
      <MemberSignature Language="C#" Value="public static Azure.Analytics.Synapse.Spark.Models.SparkStatementCancellationResult SparkStatementCancellationResult (string message = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Analytics.Synapse.Spark.Models.SparkStatementCancellationResult SparkStatementCancellationResult(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.Models.SparkModelFactory.SparkStatementCancellationResult(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SparkStatementCancellationResult (Optional message As String = Nothing) As SparkStatementCancellationResult" />
      <MemberSignature Language="F#" Value="static member SparkStatementCancellationResult : string -&gt; Azure.Analytics.Synapse.Spark.Models.SparkStatementCancellationResult" Usage="Azure.Analytics.Synapse.Spark.Models.SparkModelFactory.SparkStatementCancellationResult message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Spark.Models.SparkStatementCancellationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"> The msg property from the Livy API. The value is always "canceled". </param>
        <summary> Initializes a new instance of SparkStatementCancellationResult. </summary>
        <returns> A new <see cref="T:Azure.Analytics.Synapse.Spark.Models.SparkStatementCancellationResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SparkStatementCollection">
      <MemberSignature Language="C#" Value="public static Azure.Analytics.Synapse.Spark.Models.SparkStatementCollection SparkStatementCollection (int total = 0, System.Collections.Generic.IEnumerable&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatement&gt; statements = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Analytics.Synapse.Spark.Models.SparkStatementCollection SparkStatementCollection(int32 total, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Analytics.Synapse.Spark.Models.SparkStatement&gt; statements) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.Models.SparkModelFactory.SparkStatementCollection(System.Int32,System.Collections.Generic.IEnumerable{Azure.Analytics.Synapse.Spark.Models.SparkStatement})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SparkStatementCollection (Optional total As Integer = 0, Optional statements As IEnumerable(Of SparkStatement) = Nothing) As SparkStatementCollection" />
      <MemberSignature Language="F#" Value="static member SparkStatementCollection : int * seq&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatement&gt; -&gt; Azure.Analytics.Synapse.Spark.Models.SparkStatementCollection" Usage="Azure.Analytics.Synapse.Spark.Models.SparkModelFactory.SparkStatementCollection (total, statements)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Spark.Models.SparkStatementCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="total" Type="System.Int32" />
        <Parameter Name="statements" Type="System.Collections.Generic.IEnumerable&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatement&gt;" />
      </Parameters>
      <Docs>
        <param name="total" />
        <param name="statements" />
        <summary> Initializes a new instance of SparkStatementCollection. </summary>
        <returns> A new <see cref="T:Azure.Analytics.Synapse.Spark.Models.SparkStatementCollection" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SparkStatementOutput">
      <MemberSignature Language="C#" Value="public static Azure.Analytics.Synapse.Spark.Models.SparkStatementOutput SparkStatementOutput (string status = default, int executionCount = 0, object data = default, string errorName = default, string errorValue = default, System.Collections.Generic.IEnumerable&lt;string&gt; traceback = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Analytics.Synapse.Spark.Models.SparkStatementOutput SparkStatementOutput(string status, int32 executionCount, object data, string errorName, string errorValue, class System.Collections.Generic.IEnumerable`1&lt;string&gt; traceback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.Models.SparkModelFactory.SparkStatementOutput(System.String,System.Int32,System.Object,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SparkStatementOutput (Optional status As String = Nothing, Optional executionCount As Integer = 0, Optional data As Object = Nothing, Optional errorName As String = Nothing, Optional errorValue As String = Nothing, Optional traceback As IEnumerable(Of String) = Nothing) As SparkStatementOutput" />
      <MemberSignature Language="F#" Value="static member SparkStatementOutput : string * int * obj * string * string * seq&lt;string&gt; -&gt; Azure.Analytics.Synapse.Spark.Models.SparkStatementOutput" Usage="Azure.Analytics.Synapse.Spark.Models.SparkModelFactory.SparkStatementOutput (status, executionCount, data, errorName, errorValue, traceback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Spark.Models.SparkStatementOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="System.String" />
        <Parameter Name="executionCount" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="errorName" Type="System.String" />
        <Parameter Name="errorValue" Type="System.String" />
        <Parameter Name="traceback" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="status" />
        <param name="executionCount" />
        <param name="data"> Any object. </param>
        <param name="errorName" />
        <param name="errorValue" />
        <param name="traceback" />
        <summary> Initializes a new instance of SparkStatementOutput. </summary>
        <returns> A new <see cref="T:Azure.Analytics.Synapse.Spark.Models.SparkStatementOutput" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
