<Type Name="ElasticsearchChatDataSource" FullName="Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource">
  <TypeSignature Language="C#" Value="public class ElasticsearchChatDataSource : Azure.AI.OpenAI.Chat.AzureChatDataSource, System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ElasticsearchChatDataSource extends Azure.AI.OpenAI.Chat.AzureChatDataSource implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class ElasticsearchChatDataSource&#xA;Inherits AzureChatDataSource&#xA;Implements IJsonModel(Of ElasticsearchChatDataSource), IPersistableModel(Of ElasticsearchChatDataSource)" />
  <TypeSignature Language="F#" Value="type ElasticsearchChatDataSource = class&#xA;    inherit AzureChatDataSource&#xA;    interface IJsonModel&lt;ElasticsearchChatDataSource&gt;&#xA;    interface IPersistableModel&lt;ElasticsearchChatDataSource&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.OpenAI</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.AI.OpenAI.Chat.AzureChatDataSource</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> The ElasticsearchChatDataSource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ElasticsearchChatDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Constructors of types with required members are not supported in this version of your compiler.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Constructors of types with required members are not supported in this version of your compiler.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowPartialResult">
      <MemberSignature Language="C#" Value="public bool? AllowPartialResult { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; AllowPartialResult" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.AllowPartialResult" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowPartialResult As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.AllowPartialResult : Nullable&lt;bool&gt; with get, set" Usage="Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.AllowPartialResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If set to true, the system will allow partial search results to be used and the request will fail if all
            partial queries fail. If not specified or specified as false, the request will fail if any search query fails.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authentication">
      <MemberSignature Language="C#" Value="public Azure.AI.OpenAI.Chat.DataSourceAuthentication Authentication { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.OpenAI.Chat.DataSourceAuthentication Authentication" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.Authentication" />
      <MemberSignature Language="VB.NET" Value="Public Property Authentication As DataSourceAuthentication" />
      <MemberSignature Language="F#" Value="member this.Authentication : Azure.AI.OpenAI.Chat.DataSourceAuthentication with get, set" Usage="Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.Authentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.OpenAI.Chat.DataSourceAuthentication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The authentication options to use with the Elasticsearch data source.
            </summary>
        <value>To be added.</value>
        <remarks>
            Elasticsearch data sources support any of the following options:
            <list type="bullet"><item><see cref="M:Azure.AI.OpenAI.Chat.DataSourceAuthentication.FromEncodedApiKey(System.String)" /></item><item><see cref="M:Azure.AI.OpenAI.Chat.DataSourceAuthentication.FromKeyAndKeyId(System.String,System.String)" /></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="Endpoint">
      <MemberSignature Language="C#" Value="public Uri Endpoint { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Endpoint" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.Endpoint" />
      <MemberSignature Language="VB.NET" Value="Public Property Endpoint As Uri" />
      <MemberSignature Language="F#" Value="member this.Endpoint : Uri with get, set" Usage="Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.Endpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the endpoint. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldMappings">
      <MemberSignature Language="C#" Value="public Azure.AI.OpenAI.Chat.DataSourceFieldMappings FieldMappings { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.OpenAI.Chat.DataSourceFieldMappings FieldMappings" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.FieldMappings" />
      <MemberSignature Language="VB.NET" Value="Public Property FieldMappings As DataSourceFieldMappings" />
      <MemberSignature Language="F#" Value="member this.FieldMappings : Azure.AI.OpenAI.Chat.DataSourceFieldMappings with get, set" Usage="Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.FieldMappings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.OpenAI.Chat.DataSourceFieldMappings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the index field mappings. </summary>
        <value>To be added.</value>
        <remarks>
            Supported field mappings for Elasticsearch data sources include:
            <list type="bullet"><item><see cref="P:Azure.AI.OpenAI.Chat.DataSourceFieldMappings.ContentFieldNames" /></item><item><see cref="P:Azure.AI.OpenAI.Chat.DataSourceFieldMappings.ContentFieldSeparator" /></item><item><see cref="P:Azure.AI.OpenAI.Chat.DataSourceFieldMappings.TitleFieldName" /></item><item><see cref="P:Azure.AI.OpenAI.Chat.DataSourceFieldMappings.UrlFieldName" /></item><item><see cref="P:Azure.AI.OpenAI.Chat.DataSourceFieldMappings.FilepathFieldName" /></item><item><see cref="P:Azure.AI.OpenAI.Chat.DataSourceFieldMappings.VectorFieldNames" /></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexName">
      <MemberSignature Language="C#" Value="public string IndexName { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IndexName" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.IndexName" />
      <MemberSignature Language="VB.NET" Value="Public Property IndexName As String" />
      <MemberSignature Language="F#" Value="member this.IndexName : string with get, set" Usage="Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.IndexName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the index name. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InScope">
      <MemberSignature Language="C#" Value="public bool? InScope { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; InScope" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.InScope" />
      <MemberSignature Language="VB.NET" Value="Public Property InScope As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.InScope : Nullable&lt;bool&gt; with get, set" Usage="Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.InScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Whether queries should be restricted to use of the indexed data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxSearchQueries">
      <MemberSignature Language="C#" Value="public int? MaxSearchQueries { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MaxSearchQueries" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.MaxSearchQueries" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxSearchQueries As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.MaxSearchQueries : Nullable&lt;int&gt; with get, set" Usage="Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.MaxSearchQueries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The maximum number of rewritten queries that should be sent to the search provider for a single user message.
            By default, the system will make an automatic determination.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputContextFlags">
      <MemberSignature Language="C#" Value="public Azure.AI.OpenAI.Chat.DataSourceOutputContextFlags? OutputContextFlags { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.AI.OpenAI.Chat.DataSourceOutputContextFlags&gt; OutputContextFlags" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.OutputContextFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property OutputContextFlags As Nullable(Of DataSourceOutputContextFlags)" />
      <MemberSignature Language="F#" Value="member this.OutputContextFlags : Nullable&lt;Azure.AI.OpenAI.Chat.DataSourceOutputContextFlags&gt; with get, set" Usage="Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.OutputContextFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.AI.OpenAI.Chat.DataSourceOutputContextFlags&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The <c>include_context</c> flags to request for an On Your Data retrieval result, which control what information
            will be available on <see cref="T:Azure.AI.OpenAI.Chat.AzureChatMessageContext" /> instances in the response.
            </summary>
        <value>To be added.</value>
        <remarks>
            By default, <c>intent</c> and <c>citations</c> will be requested.
            <para>
            This value is provided as a bitmask flag. For example, to request <c>intent</c> and <c>all_retrieved_documents</c>
            contexts, use the bitwise OR operator by assigning
            <c><see cref="F:Azure.AI.OpenAI.Chat.DataSourceOutputContextFlags.Intent" /> | <see cref="F:Azure.AI.OpenAI.Chat.DataSourceOutputContextFlags.AllRetrievedDocuments" /></c>.
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryType">
      <MemberSignature Language="C#" Value="public Azure.AI.OpenAI.Chat.DataSourceQueryType? QueryType { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.AI.OpenAI.Chat.DataSourceQueryType&gt; QueryType" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.QueryType" />
      <MemberSignature Language="VB.NET" Value="Public Property QueryType As Nullable(Of DataSourceQueryType)" />
      <MemberSignature Language="F#" Value="member this.QueryType : Nullable&lt;Azure.AI.OpenAI.Chat.DataSourceQueryType&gt; with get, set" Usage="Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.QueryType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.AI.OpenAI.Chat.DataSourceQueryType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the query type.
            </summary>
        <value>To be added.</value>
        <remarks>
            Elasticsearch supports <see cref="P:Azure.AI.OpenAI.Chat.DataSourceQueryType.Simple" /> and <see cref="P:Azure.AI.OpenAI.Chat.DataSourceQueryType.Vector" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleInformation">
      <MemberSignature Language="C#" Value="public string RoleInformation { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RoleInformation" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.RoleInformation" />
      <MemberSignature Language="VB.NET" Value="Public Property RoleInformation As String" />
      <MemberSignature Language="F#" Value="member this.RoleInformation : string with get, set" Usage="Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.RoleInformation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Additional instructions for the model to inform how it should behave and any context it should reference when
            generating a response. You can describe the assistant's personality and tell it how to format responses.
            This is limited to 100 tokens and counts against the overall token limit.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Strictness">
      <MemberSignature Language="C#" Value="public int? Strictness { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; Strictness" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.Strictness" />
      <MemberSignature Language="VB.NET" Value="Public Property Strictness As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.Strictness : Nullable&lt;int&gt; with get, set" Usage="Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.Strictness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The configured strictness of the search relevance filtering.
            Higher strictness will increase precision but lower recall of the answer.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource IJsonModel&lt;ElasticsearchChatDataSource&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#OpenAI#Chat#ElasticsearchChatDataSource&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As ElasticsearchChatDataSource Implements IJsonModel(Of ElasticsearchChatDataSource).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource" Usage="elasticsearchChatDataSource.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;ElasticsearchChatDataSource&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#OpenAI#Chat#ElasticsearchChatDataSource&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of ElasticsearchChatDataSource).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="elasticsearchChatDataSource.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource IPersistableModel&lt;ElasticsearchChatDataSource&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#OpenAI#Chat#ElasticsearchChatDataSource&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As ElasticsearchChatDataSource Implements IPersistableModel(Of ElasticsearchChatDataSource).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource" Usage="elasticsearchChatDataSource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;ElasticsearchChatDataSource&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#OpenAI#Chat#ElasticsearchChatDataSource&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of ElasticsearchChatDataSource).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="elasticsearchChatDataSource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;ElasticsearchChatDataSource&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#OpenAI#Chat#ElasticsearchChatDataSource&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of ElasticsearchChatDataSource).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="elasticsearchChatDataSource.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TopNDocuments">
      <MemberSignature Language="C#" Value="public int? TopNDocuments { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; TopNDocuments" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.TopNDocuments" />
      <MemberSignature Language="VB.NET" Value="Public Property TopNDocuments As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.TopNDocuments : Nullable&lt;int&gt; with get, set" Usage="Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.TopNDocuments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The configured number of documents to feature in the query. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VectorizationSource">
      <MemberSignature Language="C#" Value="public Azure.AI.OpenAI.Chat.DataSourceVectorizer VectorizationSource { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.OpenAI.Chat.DataSourceVectorizer VectorizationSource" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.VectorizationSource" />
      <MemberSignature Language="VB.NET" Value="Public Property VectorizationSource As DataSourceVectorizer" />
      <MemberSignature Language="F#" Value="member this.VectorizationSource : Azure.AI.OpenAI.Chat.DataSourceVectorizer with get, set" Usage="Azure.AI.OpenAI.Chat.ElasticsearchChatDataSource.VectorizationSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.OpenAI.Chat.DataSourceVectorizer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The vectorization dependency used for embeddings.
            </summary>
        <value>To be added.</value>
        <remarks>
            Supported vectorization dependencies for Elasticsearch data sources include:
            <list type="bullet"><item><see cref="M:Azure.AI.OpenAI.Chat.DataSourceVectorizer.FromEndpoint(System.Uri,Azure.AI.OpenAI.Chat.DataSourceAuthentication)" /></item><item><see cref="M:Azure.AI.OpenAI.Chat.DataSourceVectorizer.FromDeploymentName(System.String)" /></item><item><see cref="M:Azure.AI.OpenAI.Chat.DataSourceVectorizer.FromModelId(System.String)" /></item></list></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
