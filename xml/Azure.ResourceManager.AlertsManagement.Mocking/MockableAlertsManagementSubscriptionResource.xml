<Type Name="MockableAlertsManagementSubscriptionResource" FullName="Azure.ResourceManager.AlertsManagement.Mocking.MockableAlertsManagementSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableAlertsManagementSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableAlertsManagementSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.AlertsManagement.Mocking.MockableAlertsManagementSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableAlertsManagementSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableAlertsManagementSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.AlertsManagement</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableAlertsManagementSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AlertsManagement.Mocking.MockableAlertsManagementSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.AlertsManagement.Mocking.MockableAlertsManagementSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAlertProcessingRules">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.AlertsManagement.AlertProcessingRuleResource&gt; GetAlertProcessingRules (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.AlertsManagement.AlertProcessingRuleResource&gt; GetAlertProcessingRules(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AlertsManagement.Mocking.MockableAlertsManagementSubscriptionResource.GetAlertProcessingRules(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAlertProcessingRules (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AlertProcessingRuleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAlertProcessingRules : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AlertsManagement.AlertProcessingRuleResource&gt;&#xA;override this.GetAlertProcessingRules : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AlertsManagement.AlertProcessingRuleResource&gt;" Usage="mockableAlertsManagementSubscriptionResource.GetAlertProcessingRules cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.AlertsManagement.AlertProcessingRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all alert processing rules in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/actionRules</description></item><item><term>Operation Id</term><description>AlertProcessingRules_ListBySubscription</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.AlertsManagement.AlertProcessingRuleResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAlertProcessingRulesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.AlertsManagement.AlertProcessingRuleResource&gt; GetAlertProcessingRulesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.AlertsManagement.AlertProcessingRuleResource&gt; GetAlertProcessingRulesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AlertsManagement.Mocking.MockableAlertsManagementSubscriptionResource.GetAlertProcessingRulesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAlertProcessingRulesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AlertProcessingRuleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAlertProcessingRulesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AlertsManagement.AlertProcessingRuleResource&gt;&#xA;override this.GetAlertProcessingRulesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AlertsManagement.AlertProcessingRuleResource&gt;" Usage="mockableAlertsManagementSubscriptionResource.GetAlertProcessingRulesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.AlertsManagement.AlertProcessingRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all alert processing rules in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/actionRules</description></item><item><term>Operation Id</term><description>AlertProcessingRules_ListBySubscription</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.AlertsManagement.AlertProcessingRuleResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceAlert">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AlertsManagement.ServiceAlertResource&gt; GetServiceAlert (Guid alertId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AlertsManagement.ServiceAlertResource&gt; GetServiceAlert(valuetype System.Guid alertId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AlertsManagement.Mocking.MockableAlertsManagementSubscriptionResource.GetServiceAlert(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceAlert (alertId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServiceAlertResource)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceAlert : Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AlertsManagement.ServiceAlertResource&gt;&#xA;override this.GetServiceAlert : Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AlertsManagement.ServiceAlertResource&gt;" Usage="mockableAlertsManagementSubscriptionResource.GetServiceAlert (alertId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AlertsManagement.ServiceAlertResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alertId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="alertId"> Unique ID of an alert instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get information related to a specific alert
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/alerts/{alertId}</description></item><item><term>Operation Id</term><description>Alerts_GetById</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceAlertAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AlertsManagement.ServiceAlertResource&gt;&gt; GetServiceAlertAsync (Guid alertId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AlertsManagement.ServiceAlertResource&gt;&gt; GetServiceAlertAsync(valuetype System.Guid alertId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AlertsManagement.Mocking.MockableAlertsManagementSubscriptionResource.GetServiceAlertAsync(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceAlertAsync (alertId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServiceAlertResource))" />
      <MemberSignature Language="F#" Value="abstract member GetServiceAlertAsync : Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AlertsManagement.ServiceAlertResource&gt;&gt;&#xA;override this.GetServiceAlertAsync : Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AlertsManagement.ServiceAlertResource&gt;&gt;" Usage="mockableAlertsManagementSubscriptionResource.GetServiceAlertAsync (alertId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AlertsManagement.ServiceAlertResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alertId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="alertId"> Unique ID of an alert instance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get information related to a specific alert
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/alerts/{alertId}</description></item><item><term>Operation Id</term><description>Alerts_GetById</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceAlerts">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AlertsManagement.ServiceAlertCollection GetServiceAlerts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AlertsManagement.ServiceAlertCollection GetServiceAlerts() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AlertsManagement.Mocking.MockableAlertsManagementSubscriptionResource.GetServiceAlerts" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceAlerts () As ServiceAlertCollection" />
      <MemberSignature Language="F#" Value="abstract member GetServiceAlerts : unit -&gt; Azure.ResourceManager.AlertsManagement.ServiceAlertCollection&#xA;override this.GetServiceAlerts : unit -&gt; Azure.ResourceManager.AlertsManagement.ServiceAlertCollection" Usage="mockableAlertsManagementSubscriptionResource.GetServiceAlerts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AlertsManagement.ServiceAlertCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ServiceAlertResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of ServiceAlertResources and their operations over a ServiceAlertResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceAlertSummary">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSummary&gt; GetServiceAlertSummary (Azure.ResourceManager.AlertsManagement.Models.SubscriptionResourceGetServiceAlertSummaryOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSummary&gt; GetServiceAlertSummary(class Azure.ResourceManager.AlertsManagement.Models.SubscriptionResourceGetServiceAlertSummaryOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AlertsManagement.Mocking.MockableAlertsManagementSubscriptionResource.GetServiceAlertSummary(Azure.ResourceManager.AlertsManagement.Models.SubscriptionResourceGetServiceAlertSummaryOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceAlertSummary (options As SubscriptionResourceGetServiceAlertSummaryOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServiceAlertSummary)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceAlertSummary : Azure.ResourceManager.AlertsManagement.Models.SubscriptionResourceGetServiceAlertSummaryOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSummary&gt;&#xA;override this.GetServiceAlertSummary : Azure.ResourceManager.AlertsManagement.Models.SubscriptionResourceGetServiceAlertSummaryOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSummary&gt;" Usage="mockableAlertsManagementSubscriptionResource.GetServiceAlertSummary (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.ResourceManager.AlertsManagement.Models.SubscriptionResourceGetServiceAlertSummaryOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a summarized count of your alerts grouped by various parameters (e.g. grouping by 'Severity' returns the count of alerts for each severity).
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/alertsSummary</description></item><item><term>Operation Id</term><description>Alerts_GetSummary</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="options" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceAlertSummary">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSummary&gt; GetServiceAlertSummary (Azure.ResourceManager.AlertsManagement.Models.AlertsSummaryGroupByField groupby, bool? includeSmartGroupsCount = default, string targetResource = default, string targetResourceType = default, string targetResourceGroup = default, Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert? monitorService = default, Azure.ResourceManager.AlertsManagement.Models.MonitorCondition? monitorCondition = default, Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity? severity = default, Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState? alertState = default, string alertRule = default, Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter? timeRange = default, string customTimeRange = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSummary&gt; GetServiceAlertSummary(valuetype Azure.ResourceManager.AlertsManagement.Models.AlertsSummaryGroupByField groupby, valuetype System.Nullable`1&lt;bool&gt; includeSmartGroupsCount, string targetResource, string targetResourceType, string targetResourceGroup, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert&gt; monitorService, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.AlertsManagement.Models.MonitorCondition&gt; monitorCondition, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity&gt; severity, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState&gt; alertState, string alertRule, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter&gt; timeRange, string customTimeRange, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AlertsManagement.Mocking.MockableAlertsManagementSubscriptionResource.GetServiceAlertSummary(Azure.ResourceManager.AlertsManagement.Models.AlertsSummaryGroupByField,System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert},System.Nullable{Azure.ResourceManager.AlertsManagement.Models.MonitorCondition},System.Nullable{Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity},System.Nullable{Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState},System.String,System.Nullable{Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceAlertSummary (groupby As AlertsSummaryGroupByField, Optional includeSmartGroupsCount As Nullable(Of Boolean) = Nothing, Optional targetResource As String = Nothing, Optional targetResourceType As String = Nothing, Optional targetResourceGroup As String = Nothing, Optional monitorService As Nullable(Of MonitorServiceSourceForAlert) = Nothing, Optional monitorCondition As Nullable(Of MonitorCondition) = Nothing, Optional severity As Nullable(Of ServiceAlertSeverity) = Nothing, Optional alertState As Nullable(Of ServiceAlertState) = Nothing, Optional alertRule As String = Nothing, Optional timeRange As Nullable(Of TimeRangeFilter) = Nothing, Optional customTimeRange As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServiceAlertSummary)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceAlertSummary : Azure.ResourceManager.AlertsManagement.Models.AlertsSummaryGroupByField * Nullable&lt;bool&gt; * string * string * string * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.MonitorCondition&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState&gt; * string * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter&gt; * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSummary&gt;&#xA;override this.GetServiceAlertSummary : Azure.ResourceManager.AlertsManagement.Models.AlertsSummaryGroupByField * Nullable&lt;bool&gt; * string * string * string * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.MonitorCondition&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState&gt; * string * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter&gt; * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSummary&gt;" Usage="mockableAlertsManagementSubscriptionResource.GetServiceAlertSummary (groupby, includeSmartGroupsCount, targetResource, targetResourceType, targetResourceGroup, monitorService, monitorCondition, severity, alertState, alertRule, timeRange, customTimeRange, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupby" Type="Azure.ResourceManager.AlertsManagement.Models.AlertsSummaryGroupByField" />
        <Parameter Name="includeSmartGroupsCount" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="targetResource" Type="System.String" />
        <Parameter Name="targetResourceType" Type="System.String" />
        <Parameter Name="targetResourceGroup" Type="System.String" />
        <Parameter Name="monitorService" Type="System.Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert&gt;" />
        <Parameter Name="monitorCondition" Type="System.Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.MonitorCondition&gt;" />
        <Parameter Name="severity" Type="System.Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity&gt;" />
        <Parameter Name="alertState" Type="System.Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState&gt;" />
        <Parameter Name="alertRule" Type="System.String" />
        <Parameter Name="timeRange" Type="System.Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter&gt;" />
        <Parameter Name="customTimeRange" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupby"> This parameter allows the result set to be grouped by input fields (Maximum 2 comma separated fields supported). For example, groupby=severity or groupby=severity,alertstate. </param>
        <param name="includeSmartGroupsCount"> Include count of the SmartGroups as part of the summary. Default value is 'false'. </param>
        <param name="targetResource"> Filter by target resource( which is full ARM ID) Default value is select all. </param>
        <param name="targetResourceType"> Filter by target resource type. Default value is select all. </param>
        <param name="targetResourceGroup"> Filter by target resource group name. Default value is select all. </param>
        <param name="monitorService"> Filter by monitor service which generates the alert instance. Default value is select all. </param>
        <param name="monitorCondition"> Filter by monitor condition which is either 'Fired' or 'Resolved'. Default value is to select all. </param>
        <param name="severity"> Filter by severity.  Default value is select all. </param>
        <param name="alertState"> Filter by state of the alert instance. Default value is to select all. </param>
        <param name="alertRule"> Filter by specific alert rule.  Default value is to select all. </param>
        <param name="timeRange"> Filter by time range by below listed values. Default value is 1 day. </param>
        <param name="customTimeRange"> Filter by custom time range in the format &lt;start-time&gt;/&lt;end-time&gt;  where time is in (ISO-8601 format)'. Permissible values is within 30 days from  query time. Either timeRange or customTimeRange could be used but not both. Default is none. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a summarized count of your alerts grouped by various parameters (e.g. grouping by 'Severity' returns the count of alerts for each severity).
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/alertsSummary</description></item><item><term>Operation Id</term><description>Alerts_GetSummary</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceAlertSummaryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSummary&gt;&gt; GetServiceAlertSummaryAsync (Azure.ResourceManager.AlertsManagement.Models.SubscriptionResourceGetServiceAlertSummaryOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSummary&gt;&gt; GetServiceAlertSummaryAsync(class Azure.ResourceManager.AlertsManagement.Models.SubscriptionResourceGetServiceAlertSummaryOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AlertsManagement.Mocking.MockableAlertsManagementSubscriptionResource.GetServiceAlertSummaryAsync(Azure.ResourceManager.AlertsManagement.Models.SubscriptionResourceGetServiceAlertSummaryOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceAlertSummaryAsync (options As SubscriptionResourceGetServiceAlertSummaryOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServiceAlertSummary))" />
      <MemberSignature Language="F#" Value="abstract member GetServiceAlertSummaryAsync : Azure.ResourceManager.AlertsManagement.Models.SubscriptionResourceGetServiceAlertSummaryOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSummary&gt;&gt;&#xA;override this.GetServiceAlertSummaryAsync : Azure.ResourceManager.AlertsManagement.Models.SubscriptionResourceGetServiceAlertSummaryOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSummary&gt;&gt;" Usage="mockableAlertsManagementSubscriptionResource.GetServiceAlertSummaryAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSummary&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.ResourceManager.AlertsManagement.Models.SubscriptionResourceGetServiceAlertSummaryOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> A property bag which contains all the parameters of this method except the LRO qualifier and request context parameter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a summarized count of your alerts grouped by various parameters (e.g. grouping by 'Severity' returns the count of alerts for each severity).
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/alertsSummary</description></item><item><term>Operation Id</term><description>Alerts_GetSummary</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="options" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceAlertSummaryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSummary&gt;&gt; GetServiceAlertSummaryAsync (Azure.ResourceManager.AlertsManagement.Models.AlertsSummaryGroupByField groupby, bool? includeSmartGroupsCount = default, string targetResource = default, string targetResourceType = default, string targetResourceGroup = default, Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert? monitorService = default, Azure.ResourceManager.AlertsManagement.Models.MonitorCondition? monitorCondition = default, Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity? severity = default, Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState? alertState = default, string alertRule = default, Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter? timeRange = default, string customTimeRange = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSummary&gt;&gt; GetServiceAlertSummaryAsync(valuetype Azure.ResourceManager.AlertsManagement.Models.AlertsSummaryGroupByField groupby, valuetype System.Nullable`1&lt;bool&gt; includeSmartGroupsCount, string targetResource, string targetResourceType, string targetResourceGroup, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert&gt; monitorService, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.AlertsManagement.Models.MonitorCondition&gt; monitorCondition, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity&gt; severity, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState&gt; alertState, string alertRule, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter&gt; timeRange, string customTimeRange, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AlertsManagement.Mocking.MockableAlertsManagementSubscriptionResource.GetServiceAlertSummaryAsync(Azure.ResourceManager.AlertsManagement.Models.AlertsSummaryGroupByField,System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert},System.Nullable{Azure.ResourceManager.AlertsManagement.Models.MonitorCondition},System.Nullable{Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity},System.Nullable{Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState},System.String,System.Nullable{Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceAlertSummaryAsync (groupby As AlertsSummaryGroupByField, Optional includeSmartGroupsCount As Nullable(Of Boolean) = Nothing, Optional targetResource As String = Nothing, Optional targetResourceType As String = Nothing, Optional targetResourceGroup As String = Nothing, Optional monitorService As Nullable(Of MonitorServiceSourceForAlert) = Nothing, Optional monitorCondition As Nullable(Of MonitorCondition) = Nothing, Optional severity As Nullable(Of ServiceAlertSeverity) = Nothing, Optional alertState As Nullable(Of ServiceAlertState) = Nothing, Optional alertRule As String = Nothing, Optional timeRange As Nullable(Of TimeRangeFilter) = Nothing, Optional customTimeRange As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServiceAlertSummary))" />
      <MemberSignature Language="F#" Value="abstract member GetServiceAlertSummaryAsync : Azure.ResourceManager.AlertsManagement.Models.AlertsSummaryGroupByField * Nullable&lt;bool&gt; * string * string * string * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.MonitorCondition&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState&gt; * string * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSummary&gt;&gt;&#xA;override this.GetServiceAlertSummaryAsync : Azure.ResourceManager.AlertsManagement.Models.AlertsSummaryGroupByField * Nullable&lt;bool&gt; * string * string * string * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.MonitorCondition&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity&gt; * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState&gt; * string * Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSummary&gt;&gt;" Usage="mockableAlertsManagementSubscriptionResource.GetServiceAlertSummaryAsync (groupby, includeSmartGroupsCount, targetResource, targetResourceType, targetResourceGroup, monitorService, monitorCondition, severity, alertState, alertRule, timeRange, customTimeRange, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSummary&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupby" Type="Azure.ResourceManager.AlertsManagement.Models.AlertsSummaryGroupByField" />
        <Parameter Name="includeSmartGroupsCount" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="targetResource" Type="System.String" />
        <Parameter Name="targetResourceType" Type="System.String" />
        <Parameter Name="targetResourceGroup" Type="System.String" />
        <Parameter Name="monitorService" Type="System.Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.MonitorServiceSourceForAlert&gt;" />
        <Parameter Name="monitorCondition" Type="System.Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.MonitorCondition&gt;" />
        <Parameter Name="severity" Type="System.Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertSeverity&gt;" />
        <Parameter Name="alertState" Type="System.Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.ServiceAlertState&gt;" />
        <Parameter Name="alertRule" Type="System.String" />
        <Parameter Name="timeRange" Type="System.Nullable&lt;Azure.ResourceManager.AlertsManagement.Models.TimeRangeFilter&gt;" />
        <Parameter Name="customTimeRange" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupby"> This parameter allows the result set to be grouped by input fields (Maximum 2 comma separated fields supported). For example, groupby=severity or groupby=severity,alertstate. </param>
        <param name="includeSmartGroupsCount"> Include count of the SmartGroups as part of the summary. Default value is 'false'. </param>
        <param name="targetResource"> Filter by target resource( which is full ARM ID) Default value is select all. </param>
        <param name="targetResourceType"> Filter by target resource type. Default value is select all. </param>
        <param name="targetResourceGroup"> Filter by target resource group name. Default value is select all. </param>
        <param name="monitorService"> Filter by monitor service which generates the alert instance. Default value is select all. </param>
        <param name="monitorCondition"> Filter by monitor condition which is either 'Fired' or 'Resolved'. Default value is to select all. </param>
        <param name="severity"> Filter by severity.  Default value is select all. </param>
        <param name="alertState"> Filter by state of the alert instance. Default value is to select all. </param>
        <param name="alertRule"> Filter by specific alert rule.  Default value is to select all. </param>
        <param name="timeRange"> Filter by time range by below listed values. Default value is 1 day. </param>
        <param name="customTimeRange"> Filter by custom time range in the format &lt;start-time&gt;/&lt;end-time&gt;  where time is in (ISO-8601 format)'. Permissible values is within 30 days from  query time. Either timeRange or customTimeRange could be used but not both. Default is none. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a summarized count of your alerts grouped by various parameters (e.g. grouping by 'Severity' returns the count of alerts for each severity).
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/alertsSummary</description></item><item><term>Operation Id</term><description>Alerts_GetSummary</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSmartGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt; GetSmartGroup (Guid smartGroupId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt; GetSmartGroup(valuetype System.Guid smartGroupId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AlertsManagement.Mocking.MockableAlertsManagementSubscriptionResource.GetSmartGroup(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSmartGroup (smartGroupId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SmartGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSmartGroup : Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;&#xA;override this.GetSmartGroup : Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;" Usage="mockableAlertsManagementSubscriptionResource.GetSmartGroup (smartGroupId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="smartGroupId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="smartGroupId"> Smart group unique id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get information related to a specific Smart Group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/smartGroups/{smartGroupId}</description></item><item><term>Operation Id</term><description>SmartGroups_GetById</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSmartGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;&gt; GetSmartGroupAsync (Guid smartGroupId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;&gt; GetSmartGroupAsync(valuetype System.Guid smartGroupId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AlertsManagement.Mocking.MockableAlertsManagementSubscriptionResource.GetSmartGroupAsync(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSmartGroupAsync (smartGroupId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SmartGroupResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSmartGroupAsync : Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;&gt;&#xA;override this.GetSmartGroupAsync : Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;&gt;" Usage="mockableAlertsManagementSubscriptionResource.GetSmartGroupAsync (smartGroupId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AlertsManagement.SmartGroupResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="smartGroupId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="smartGroupId"> Smart group unique id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get information related to a specific Smart Group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/smartGroups/{smartGroupId}</description></item><item><term>Operation Id</term><description>SmartGroups_GetById</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSmartGroups">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AlertsManagement.SmartGroupCollection GetSmartGroups ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AlertsManagement.SmartGroupCollection GetSmartGroups() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AlertsManagement.Mocking.MockableAlertsManagementSubscriptionResource.GetSmartGroups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSmartGroups () As SmartGroupCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSmartGroups : unit -&gt; Azure.ResourceManager.AlertsManagement.SmartGroupCollection&#xA;override this.GetSmartGroups : unit -&gt; Azure.ResourceManager.AlertsManagement.SmartGroupCollection" Usage="mockableAlertsManagementSubscriptionResource.GetSmartGroups " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AlertsManagement</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AlertsManagement.SmartGroupCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SmartGroupResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of SmartGroupResources and their operations over a SmartGroupResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
