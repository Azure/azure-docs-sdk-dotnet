<Type Name="DependencyScopeExtensions" FullName="System.Web.Http.DependencyScopeExtensions">
  <TypeSignature Language="C#" Value="public static class DependencyScopeExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DependencyScopeExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Http.DependencyScopeExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DependencyScopeExtensions" />
  <TypeSignature Language="F#" Value="type DependencyScopeExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.WindowsAzure.Mobile.Service</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Extension methods for <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> facilitating getting the services used 
            by the service.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCachePolicyProvider">
      <MemberSignature Language="C#" Value="public static Microsoft.WindowsAzure.Mobile.Service.Cache.ICachePolicyProvider GetCachePolicyProvider (this System.Web.Http.Dependencies.IDependencyScope services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.WindowsAzure.Mobile.Service.Cache.ICachePolicyProvider GetCachePolicyProvider(class System.Web.Http.Dependencies.IDependencyScope services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.DependencyScopeExtensions.GetCachePolicyProvider(System.Web.Http.Dependencies.IDependencyScope)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCachePolicyProvider (services As IDependencyScope) As ICachePolicyProvider" />
      <MemberSignature Language="F#" Value="static member GetCachePolicyProvider : System.Web.Http.Dependencies.IDependencyScope -&gt; Microsoft.WindowsAzure.Mobile.Service.Cache.ICachePolicyProvider" Usage="System.Web.Http.DependencyScopeExtensions.GetCachePolicyProvider services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Mobile.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.WindowsAzure.Mobile.Service.Cache.ICachePolicyProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="System.Web.Http.Dependencies.IDependencyScope" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> implementation.</param>
        <summary>
            Gets the <see cref="T:Microsoft.WindowsAzure.Mobile.Service.Cache.ICachePolicyProvider" /> instance registered with the Dependency Injection engine or
            null if none are registered.
            </summary>
        <returns>The registered instance or null if none are registered.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfigOptions">
      <MemberSignature Language="C#" Value="public static Microsoft.WindowsAzure.Mobile.Service.ConfigOptions GetConfigOptions (this System.Web.Http.Dependencies.IDependencyScope services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.WindowsAzure.Mobile.Service.ConfigOptions GetConfigOptions(class System.Web.Http.Dependencies.IDependencyScope services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.DependencyScopeExtensions.GetConfigOptions(System.Web.Http.Dependencies.IDependencyScope)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetConfigOptions (services As IDependencyScope) As ConfigOptions" />
      <MemberSignature Language="F#" Value="static member GetConfigOptions : System.Web.Http.Dependencies.IDependencyScope -&gt; Microsoft.WindowsAzure.Mobile.Service.ConfigOptions" Usage="System.Web.Http.DependencyScopeExtensions.GetConfigOptions services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Mobile.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.WindowsAzure.Mobile.Service.ConfigOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="System.Web.Http.Dependencies.IDependencyScope" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> implementation.</param>
        <summary>
            Gets the <see cref="T:Microsoft.WindowsAzure.Mobile.Service.ConfigOptions" /> instance registered with the Dependency Injection engine.
            </summary>
        <returns>The registered instance.</returns>
        <remarks>If no type is registered then this method throws an <see cref="T:System.InvalidOperationException" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContentProvider">
      <MemberSignature Language="C#" Value="public static Microsoft.WindowsAzure.Mobile.Service.Content.IContentProvider GetContentProvider (this System.Web.Http.Dependencies.IDependencyScope services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.WindowsAzure.Mobile.Service.Content.IContentProvider GetContentProvider(class System.Web.Http.Dependencies.IDependencyScope services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.DependencyScopeExtensions.GetContentProvider(System.Web.Http.Dependencies.IDependencyScope)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetContentProvider (services As IDependencyScope) As IContentProvider" />
      <MemberSignature Language="F#" Value="static member GetContentProvider : System.Web.Http.Dependencies.IDependencyScope -&gt; Microsoft.WindowsAzure.Mobile.Service.Content.IContentProvider" Usage="System.Web.Http.DependencyScopeExtensions.GetContentProvider services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Mobile.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.WindowsAzure.Mobile.Service.Content.IContentProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="System.Web.Http.Dependencies.IDependencyScope" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> implementation.</param>
        <summary>
            Gets the <see cref="T:Microsoft.WindowsAzure.Mobile.Service.Content.IContentProvider" /> instance registered with the Dependency Injection engine.
            </summary>
        <returns>The registered instance.</returns>
        <remarks>If no type is registered then this method throws an <see cref="T:System.InvalidOperationException" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHealthIndicator">
      <MemberSignature Language="C#" Value="public static Microsoft.WindowsAzure.Mobile.Service.Diagnostics.IHealthIndicator GetHealthIndicator (this System.Web.Http.Dependencies.IDependencyScope services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.WindowsAzure.Mobile.Service.Diagnostics.IHealthIndicator GetHealthIndicator(class System.Web.Http.Dependencies.IDependencyScope services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.DependencyScopeExtensions.GetHealthIndicator(System.Web.Http.Dependencies.IDependencyScope)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHealthIndicator (services As IDependencyScope) As IHealthIndicator" />
      <MemberSignature Language="F#" Value="static member GetHealthIndicator : System.Web.Http.Dependencies.IDependencyScope -&gt; Microsoft.WindowsAzure.Mobile.Service.Diagnostics.IHealthIndicator" Usage="System.Web.Http.DependencyScopeExtensions.GetHealthIndicator services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Mobile.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.WindowsAzure.Mobile.Service.Diagnostics.IHealthIndicator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="System.Web.Http.Dependencies.IDependencyScope" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> implementation.</param>
        <summary>
            Gets the <see cref="T:Microsoft.WindowsAzure.Mobile.Service.Diagnostics.IHealthIndicator" /> instance registered with the Dependency Injection engine.
            </summary>
        <returns>The registered instance.</returns>
        <remarks>If no type is registered then this method throws an <see cref="T:System.InvalidOperationException" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHostCancellationManager">
      <MemberSignature Language="C#" Value="public static Microsoft.WindowsAzure.Mobile.Service.Hosting.IHostCancellationManager GetHostCancellationManager (this System.Web.Http.Dependencies.IDependencyScope services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.WindowsAzure.Mobile.Service.Hosting.IHostCancellationManager GetHostCancellationManager(class System.Web.Http.Dependencies.IDependencyScope services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.DependencyScopeExtensions.GetHostCancellationManager(System.Web.Http.Dependencies.IDependencyScope)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHostCancellationManager (services As IDependencyScope) As IHostCancellationManager" />
      <MemberSignature Language="F#" Value="static member GetHostCancellationManager : System.Web.Http.Dependencies.IDependencyScope -&gt; Microsoft.WindowsAzure.Mobile.Service.Hosting.IHostCancellationManager" Usage="System.Web.Http.DependencyScopeExtensions.GetHostCancellationManager services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Mobile.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.WindowsAzure.Mobile.Service.Hosting.IHostCancellationManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="System.Web.Http.Dependencies.IDependencyScope" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> implementation.</param>
        <summary>
            Gets the <see cref="T:Microsoft.WindowsAzure.Mobile.Service.Hosting.IHostCancellationManager" /> instance registered with the Dependency Injection engine.
            </summary>
        <returns>The registered instance.</returns>
        <remarks>If no type is registered then this method throws an <see cref="T:System.InvalidOperationException" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLoginProviders">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.WindowsAzure.Mobile.Service.Security.ILoginProvider&gt; GetLoginProviders (this System.Web.Http.Dependencies.IDependencyScope services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.WindowsAzure.Mobile.Service.Security.ILoginProvider&gt; GetLoginProviders(class System.Web.Http.Dependencies.IDependencyScope services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.DependencyScopeExtensions.GetLoginProviders(System.Web.Http.Dependencies.IDependencyScope)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLoginProviders (services As IDependencyScope) As IEnumerable(Of ILoginProvider)" />
      <MemberSignature Language="F#" Value="static member GetLoginProviders : System.Web.Http.Dependencies.IDependencyScope -&gt; seq&lt;Microsoft.WindowsAzure.Mobile.Service.Security.ILoginProvider&gt;" Usage="System.Web.Http.DependencyScopeExtensions.GetLoginProviders services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Mobile.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.WindowsAzure.Mobile.Service.Security.ILoginProvider&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="System.Web.Http.Dependencies.IDependencyScope" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> implementation.</param>
        <summary>
            Gets the set of <see cref="T:Microsoft.WindowsAzure.Mobile.Service.Security.ILoginProvider" /> instances registered with the Dependency Injection engine
            or an empty collection if none are registered.
            </summary>
        <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> containing the registered instances.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMediaTypeProvider">
      <MemberSignature Language="C#" Value="public static Microsoft.WindowsAzure.Mobile.Service.Content.IMediaTypeProvider GetMediaTypeProvider (this System.Web.Http.Dependencies.IDependencyScope services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.WindowsAzure.Mobile.Service.Content.IMediaTypeProvider GetMediaTypeProvider(class System.Web.Http.Dependencies.IDependencyScope services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.DependencyScopeExtensions.GetMediaTypeProvider(System.Web.Http.Dependencies.IDependencyScope)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMediaTypeProvider (services As IDependencyScope) As IMediaTypeProvider" />
      <MemberSignature Language="F#" Value="static member GetMediaTypeProvider : System.Web.Http.Dependencies.IDependencyScope -&gt; Microsoft.WindowsAzure.Mobile.Service.Content.IMediaTypeProvider" Usage="System.Web.Http.DependencyScopeExtensions.GetMediaTypeProvider services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Mobile.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.WindowsAzure.Mobile.Service.Content.IMediaTypeProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="System.Web.Http.Dependencies.IDependencyScope" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> implementation.</param>
        <summary>
            Gets the <see cref="T:Microsoft.WindowsAzure.Mobile.Service.Content.IMediaTypeProvider" /> instance registered with the Dependency Injection engine.
            </summary>
        <returns>The registered instance.</returns>
        <remarks>If no type is registered then this method throws an <see cref="T:System.InvalidOperationException" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetricsLogger">
      <MemberSignature Language="C#" Value="public static Microsoft.WindowsAzure.Mobile.Service.Diagnostics.IMetricsLogger GetMetricsLogger (this System.Web.Http.Dependencies.IDependencyScope services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.WindowsAzure.Mobile.Service.Diagnostics.IMetricsLogger GetMetricsLogger(class System.Web.Http.Dependencies.IDependencyScope services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.DependencyScopeExtensions.GetMetricsLogger(System.Web.Http.Dependencies.IDependencyScope)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMetricsLogger (services As IDependencyScope) As IMetricsLogger" />
      <MemberSignature Language="F#" Value="static member GetMetricsLogger : System.Web.Http.Dependencies.IDependencyScope -&gt; Microsoft.WindowsAzure.Mobile.Service.Diagnostics.IMetricsLogger" Usage="System.Web.Http.DependencyScopeExtensions.GetMetricsLogger services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Mobile.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.WindowsAzure.Mobile.Service.Diagnostics.IMetricsLogger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="System.Web.Http.Dependencies.IDependencyScope" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> implementation.</param>
        <summary>
            Gets the <see cref="T:Microsoft.WindowsAzure.Mobile.Service.Diagnostics.IMetricsLogger" /> instance registered with the Dependency Injection engine.
            </summary>
        <returns>The registered instance.</returns>
        <remarks>If no type is registered then this method throws an <see cref="T:System.InvalidOperationException" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationHandlers">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.WindowsAzure.Mobile.Service.Notifications.INotificationHandler&gt; GetNotificationHandlers (this System.Web.Http.Dependencies.IDependencyScope services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.WindowsAzure.Mobile.Service.Notifications.INotificationHandler&gt; GetNotificationHandlers(class System.Web.Http.Dependencies.IDependencyScope services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.DependencyScopeExtensions.GetNotificationHandlers(System.Web.Http.Dependencies.IDependencyScope)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNotificationHandlers (services As IDependencyScope) As IEnumerable(Of INotificationHandler)" />
      <MemberSignature Language="F#" Value="static member GetNotificationHandlers : System.Web.Http.Dependencies.IDependencyScope -&gt; seq&lt;Microsoft.WindowsAzure.Mobile.Service.Notifications.INotificationHandler&gt;" Usage="System.Web.Http.DependencyScopeExtensions.GetNotificationHandlers services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Mobile.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.WindowsAzure.Mobile.Service.Notifications.INotificationHandler&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="System.Web.Http.Dependencies.IDependencyScope" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> implementation.</param>
        <summary>
            Gets the set of <see cref="T:Microsoft.WindowsAzure.Mobile.Service.Notifications.INotificationHandler" /> instances registered with the Dependency Injection engine
            or an empty collection if none are registered.
            </summary>
        <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> containing the registered instances.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNotificationHandlerTypeResolver">
      <MemberSignature Language="C#" Value="public static Microsoft.WindowsAzure.Mobile.Service.Notifications.INotificationHandlerTypeResolver GetNotificationHandlerTypeResolver (this System.Web.Http.Dependencies.IDependencyScope services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.WindowsAzure.Mobile.Service.Notifications.INotificationHandlerTypeResolver GetNotificationHandlerTypeResolver(class System.Web.Http.Dependencies.IDependencyScope services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.DependencyScopeExtensions.GetNotificationHandlerTypeResolver(System.Web.Http.Dependencies.IDependencyScope)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNotificationHandlerTypeResolver (services As IDependencyScope) As INotificationHandlerTypeResolver" />
      <MemberSignature Language="F#" Value="static member GetNotificationHandlerTypeResolver : System.Web.Http.Dependencies.IDependencyScope -&gt; Microsoft.WindowsAzure.Mobile.Service.Notifications.INotificationHandlerTypeResolver" Usage="System.Web.Http.DependencyScopeExtensions.GetNotificationHandlerTypeResolver services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Mobile.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.WindowsAzure.Mobile.Service.Notifications.INotificationHandlerTypeResolver</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="System.Web.Http.Dependencies.IDependencyScope" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> implementation.</param>
        <summary>
            Gets the <see cref="T:Microsoft.WindowsAzure.Mobile.Service.Notifications.INotificationHandlerTypeResolver" /> instance registered with the Dependency Injection engine.
            </summary>
        <returns>The registered instance.</returns>
        <remarks>If no type is registered then this method throws an <see cref="T:System.InvalidOperationException" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOwinAppBuilder">
      <MemberSignature Language="C#" Value="public static Microsoft.WindowsAzure.Mobile.Service.Config.IOwinAppBuilder GetOwinAppBuilder (this System.Web.Http.Dependencies.IDependencyScope services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.WindowsAzure.Mobile.Service.Config.IOwinAppBuilder GetOwinAppBuilder(class System.Web.Http.Dependencies.IDependencyScope services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.DependencyScopeExtensions.GetOwinAppBuilder(System.Web.Http.Dependencies.IDependencyScope)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOwinAppBuilder (services As IDependencyScope) As IOwinAppBuilder" />
      <MemberSignature Language="F#" Value="static member GetOwinAppBuilder : System.Web.Http.Dependencies.IDependencyScope -&gt; Microsoft.WindowsAzure.Mobile.Service.Config.IOwinAppBuilder" Usage="System.Web.Http.DependencyScopeExtensions.GetOwinAppBuilder services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Mobile.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.WindowsAzure.Mobile.Service.Config.IOwinAppBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="System.Web.Http.Dependencies.IDependencyScope" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> implementation.</param>
        <summary>
            Gets the <see cref="T:Microsoft.WindowsAzure.Mobile.Service.Config.IOwinAppBuilder" /> instance registered with the Dependency Injection engine.
            </summary>
        <returns>The registered instance.</returns>
        <remarks>If no type is registered then this method throws an <see cref="T:System.InvalidOperationException" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOwinAppBuilderExtensions">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.WindowsAzure.Mobile.Service.Config.IOwinAppBuilderExtension&gt; GetOwinAppBuilderExtensions (this System.Web.Http.Dependencies.IDependencyScope services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.WindowsAzure.Mobile.Service.Config.IOwinAppBuilderExtension&gt; GetOwinAppBuilderExtensions(class System.Web.Http.Dependencies.IDependencyScope services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.DependencyScopeExtensions.GetOwinAppBuilderExtensions(System.Web.Http.Dependencies.IDependencyScope)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOwinAppBuilderExtensions (services As IDependencyScope) As IEnumerable(Of IOwinAppBuilderExtension)" />
      <MemberSignature Language="F#" Value="static member GetOwinAppBuilderExtensions : System.Web.Http.Dependencies.IDependencyScope -&gt; seq&lt;Microsoft.WindowsAzure.Mobile.Service.Config.IOwinAppBuilderExtension&gt;" Usage="System.Web.Http.DependencyScopeExtensions.GetOwinAppBuilderExtensions services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Mobile.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.WindowsAzure.Mobile.Service.Config.IOwinAppBuilderExtension&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="System.Web.Http.Dependencies.IDependencyScope" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> implementation.</param>
        <summary>
            Gets the set of <see cref="T:Microsoft.WindowsAzure.Mobile.Service.Config.IOwinAppBuilderExtension" /> instances registered with the Dependency Injection engine
            or an empty collection if none are registered.
            </summary>
        <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> containing the registered instances.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOwinLoggerFactory">
      <MemberSignature Language="C#" Value="public static Microsoft.Owin.Logging.ILoggerFactory GetOwinLoggerFactory (this System.Web.Http.Dependencies.IDependencyScope services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Owin.Logging.ILoggerFactory GetOwinLoggerFactory(class System.Web.Http.Dependencies.IDependencyScope services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.DependencyScopeExtensions.GetOwinLoggerFactory(System.Web.Http.Dependencies.IDependencyScope)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOwinLoggerFactory (services As IDependencyScope) As ILoggerFactory" />
      <MemberSignature Language="F#" Value="static member GetOwinLoggerFactory : System.Web.Http.Dependencies.IDependencyScope -&gt; Microsoft.Owin.Logging.ILoggerFactory" Usage="System.Web.Http.DependencyScopeExtensions.GetOwinLoggerFactory services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Mobile.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Owin.Logging.ILoggerFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="System.Web.Http.Dependencies.IDependencyScope" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> implementation.</param>
        <summary>
            Gets the OWIN <see cref="T:Microsoft.Owin.Logging.ILoggerFactory" /> instance registered with the Dependency Injection engine or
            null if none are registered.
            </summary>
        <returns>The registered instance or null if none are registered.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScheduledJobActivator">
      <MemberSignature Language="C#" Value="public static Microsoft.WindowsAzure.Mobile.Service.ScheduledJobs.IScheduledJobActivator GetScheduledJobActivator (this System.Web.Http.Dependencies.IDependencyScope services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.WindowsAzure.Mobile.Service.ScheduledJobs.IScheduledJobActivator GetScheduledJobActivator(class System.Web.Http.Dependencies.IDependencyScope services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.DependencyScopeExtensions.GetScheduledJobActivator(System.Web.Http.Dependencies.IDependencyScope)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScheduledJobActivator (services As IDependencyScope) As IScheduledJobActivator" />
      <MemberSignature Language="F#" Value="static member GetScheduledJobActivator : System.Web.Http.Dependencies.IDependencyScope -&gt; Microsoft.WindowsAzure.Mobile.Service.ScheduledJobs.IScheduledJobActivator" Usage="System.Web.Http.DependencyScopeExtensions.GetScheduledJobActivator services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Mobile.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.WindowsAzure.Mobile.Service.ScheduledJobs.IScheduledJobActivator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="System.Web.Http.Dependencies.IDependencyScope" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> implementation.</param>
        <summary>
            Gets the <see cref="T:Microsoft.WindowsAzure.Mobile.Service.ScheduledJobs.IScheduledJobActivator" /> instance registered with the Dependency Injection engine.
            </summary>
        <returns>The registered instance.</returns>
        <remarks>If no type is registered then this method throws an <see cref="T:System.InvalidOperationException" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScheduledJobSelector">
      <MemberSignature Language="C#" Value="public static Microsoft.WindowsAzure.Mobile.Service.ScheduledJobs.IScheduledJobSelector GetScheduledJobSelector (this System.Web.Http.Dependencies.IDependencyScope services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.WindowsAzure.Mobile.Service.ScheduledJobs.IScheduledJobSelector GetScheduledJobSelector(class System.Web.Http.Dependencies.IDependencyScope services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.DependencyScopeExtensions.GetScheduledJobSelector(System.Web.Http.Dependencies.IDependencyScope)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScheduledJobSelector (services As IDependencyScope) As IScheduledJobSelector" />
      <MemberSignature Language="F#" Value="static member GetScheduledJobSelector : System.Web.Http.Dependencies.IDependencyScope -&gt; Microsoft.WindowsAzure.Mobile.Service.ScheduledJobs.IScheduledJobSelector" Usage="System.Web.Http.DependencyScopeExtensions.GetScheduledJobSelector services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Mobile.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.WindowsAzure.Mobile.Service.ScheduledJobs.IScheduledJobSelector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="System.Web.Http.Dependencies.IDependencyScope" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> implementation.</param>
        <summary>
            Gets the <see cref="T:Microsoft.WindowsAzure.Mobile.Service.ScheduledJobs.IScheduledJobSelector" /> instance registered with the Dependency Injection engine.
            </summary>
        <returns>The registered instance.</returns>
        <remarks>If no type is registered then this method throws an <see cref="T:System.InvalidOperationException" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScheduledJobTypeResolver">
      <MemberSignature Language="C#" Value="public static Microsoft.WindowsAzure.Mobile.Service.ScheduledJobs.IScheduledJobTypeResolver GetScheduledJobTypeResolver (this System.Web.Http.Dependencies.IDependencyScope services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.WindowsAzure.Mobile.Service.ScheduledJobs.IScheduledJobTypeResolver GetScheduledJobTypeResolver(class System.Web.Http.Dependencies.IDependencyScope services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.DependencyScopeExtensions.GetScheduledJobTypeResolver(System.Web.Http.Dependencies.IDependencyScope)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScheduledJobTypeResolver (services As IDependencyScope) As IScheduledJobTypeResolver" />
      <MemberSignature Language="F#" Value="static member GetScheduledJobTypeResolver : System.Web.Http.Dependencies.IDependencyScope -&gt; Microsoft.WindowsAzure.Mobile.Service.ScheduledJobs.IScheduledJobTypeResolver" Usage="System.Web.Http.DependencyScopeExtensions.GetScheduledJobTypeResolver services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Mobile.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.WindowsAzure.Mobile.Service.ScheduledJobs.IScheduledJobTypeResolver</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="System.Web.Http.Dependencies.IDependencyScope" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> implementation.</param>
        <summary>
            Gets the <see cref="T:Microsoft.WindowsAzure.Mobile.Service.ScheduledJobs.IScheduledJobTypeResolver" /> instance registered with the Dependency Injection engine.
            </summary>
        <returns>The registered instance.</returns>
        <remarks>If no type is registered then this method throws an <see cref="T:System.InvalidOperationException" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static TService GetService&lt;TService&gt; (this System.Web.Http.Dependencies.IDependencyScope services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TService GetService&lt;TService&gt;(class System.Web.Http.Dependencies.IDependencyScope services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.DependencyScopeExtensions.GetService``1(System.Web.Http.Dependencies.IDependencyScope)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetService(Of TService) (services As IDependencyScope) As TService" />
      <MemberSignature Language="F#" Value="static member GetService : System.Web.Http.Dependencies.IDependencyScope -&gt; 'Service" Usage="System.Web.Http.DependencyScopeExtensions.GetService services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Mobile.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TService</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="System.Web.Http.Dependencies.IDependencyScope" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TService">The type of services to lookup.</typeparam>
        <param name="services">The <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> implementation.</param>
        <summary>
            Gets the <typeparamref name="TService" /> instance registered with the Dependency Injection engine or
            null if none are registered.
            </summary>
        <returns>The registered instance or null if none are registered.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceOrThrow&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static TService GetServiceOrThrow&lt;TService&gt; (this System.Web.Http.Dependencies.IDependencyScope services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TService GetServiceOrThrow&lt;TService&gt;(class System.Web.Http.Dependencies.IDependencyScope services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.DependencyScopeExtensions.GetServiceOrThrow``1(System.Web.Http.Dependencies.IDependencyScope)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServiceOrThrow(Of TService) (services As IDependencyScope) As TService" />
      <MemberSignature Language="F#" Value="static member GetServiceOrThrow : System.Web.Http.Dependencies.IDependencyScope -&gt; 'Service" Usage="System.Web.Http.DependencyScopeExtensions.GetServiceOrThrow services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Mobile.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TService</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="System.Web.Http.Dependencies.IDependencyScope" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TService">The type of service to lookup.</typeparam>
        <param name="services">The <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> implementation.</param>
        <summary>
            Gets a service of type <typeparamref name="TService" /> or throws <see cref="T:System.InvalidOperationException" />
            if no such service has been registered.
            </summary>
        <returns>The registered service.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServices&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;TService&gt; GetServices&lt;TService&gt; (this System.Web.Http.Dependencies.IDependencyScope services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!TService&gt; GetServices&lt;TService&gt;(class System.Web.Http.Dependencies.IDependencyScope services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.DependencyScopeExtensions.GetServices``1(System.Web.Http.Dependencies.IDependencyScope)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServices(Of TService) (services As IDependencyScope) As IEnumerable(Of TService)" />
      <MemberSignature Language="F#" Value="static member GetServices : System.Web.Http.Dependencies.IDependencyScope -&gt; seq&lt;'Service&gt;" Usage="System.Web.Http.DependencyScopeExtensions.GetServices services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Mobile.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TService&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="System.Web.Http.Dependencies.IDependencyScope" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TService">The type of services to lookup.</typeparam>
        <param name="services">The <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> implementation.</param>
        <summary>
            Gets the set of <typeparamref name="TService" /> instances registered with the Dependency Injection engine
            or an empty collection if none are registered.
            </summary>
        <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> containing the registered instances.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceSettingsProvider">
      <MemberSignature Language="C#" Value="public static Microsoft.WindowsAzure.Mobile.Service.Config.IServiceSettingsProvider GetServiceSettingsProvider (this System.Web.Http.Dependencies.IDependencyScope services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.WindowsAzure.Mobile.Service.Config.IServiceSettingsProvider GetServiceSettingsProvider(class System.Web.Http.Dependencies.IDependencyScope services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.DependencyScopeExtensions.GetServiceSettingsProvider(System.Web.Http.Dependencies.IDependencyScope)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServiceSettingsProvider (services As IDependencyScope) As IServiceSettingsProvider" />
      <MemberSignature Language="F#" Value="static member GetServiceSettingsProvider : System.Web.Http.Dependencies.IDependencyScope -&gt; Microsoft.WindowsAzure.Mobile.Service.Config.IServiceSettingsProvider" Usage="System.Web.Http.DependencyScopeExtensions.GetServiceSettingsProvider services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Mobile.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.WindowsAzure.Mobile.Service.Config.IServiceSettingsProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="System.Web.Http.Dependencies.IDependencyScope" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> implementation.</param>
        <summary>
            Gets the <see cref="T:Microsoft.WindowsAzure.Mobile.Service.Config.IServiceSettingsProvider" /> instance registered with the Dependency Injection engine.
            </summary>
        <returns>The registered instance.</returns>
        <remarks>If no type is registered then this method throws an <see cref="T:System.InvalidOperationException" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceTokenHandler">
      <MemberSignature Language="C#" Value="public static Microsoft.WindowsAzure.Mobile.Service.Security.IServiceTokenHandler GetServiceTokenHandler (this System.Web.Http.Dependencies.IDependencyScope services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.WindowsAzure.Mobile.Service.Security.IServiceTokenHandler GetServiceTokenHandler(class System.Web.Http.Dependencies.IDependencyScope services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.DependencyScopeExtensions.GetServiceTokenHandler(System.Web.Http.Dependencies.IDependencyScope)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetServiceTokenHandler (services As IDependencyScope) As IServiceTokenHandler" />
      <MemberSignature Language="F#" Value="static member GetServiceTokenHandler : System.Web.Http.Dependencies.IDependencyScope -&gt; Microsoft.WindowsAzure.Mobile.Service.Security.IServiceTokenHandler" Usage="System.Web.Http.DependencyScopeExtensions.GetServiceTokenHandler services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Mobile.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.WindowsAzure.Mobile.Service.Security.IServiceTokenHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="System.Web.Http.Dependencies.IDependencyScope" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> implementation.</param>
        <summary>
            Gets the <see cref="T:Microsoft.WindowsAzure.Mobile.Service.Security.IServiceTokenHandler" /> instance registered with the Dependency Injection engine.
            </summary>
        <returns>The registered instance.</returns>
        <remarks>If no type is registered then this method throws an <see cref="T:System.InvalidOperationException" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStatusReporters">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.WindowsAzure.Mobile.Service.Diagnostics.IStatusReporter&gt; GetStatusReporters (this System.Web.Http.Dependencies.IDependencyScope services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.WindowsAzure.Mobile.Service.Diagnostics.IStatusReporter&gt; GetStatusReporters(class System.Web.Http.Dependencies.IDependencyScope services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.DependencyScopeExtensions.GetStatusReporters(System.Web.Http.Dependencies.IDependencyScope)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetStatusReporters (services As IDependencyScope) As IEnumerable(Of IStatusReporter)" />
      <MemberSignature Language="F#" Value="static member GetStatusReporters : System.Web.Http.Dependencies.IDependencyScope -&gt; seq&lt;Microsoft.WindowsAzure.Mobile.Service.Diagnostics.IStatusReporter&gt;" Usage="System.Web.Http.DependencyScopeExtensions.GetStatusReporters services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Mobile.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.WindowsAzure.Mobile.Service.Diagnostics.IStatusReporter&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="System.Web.Http.Dependencies.IDependencyScope" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> implementation.</param>
        <summary>
            Gets the set of <see cref="T:Microsoft.WindowsAzure.Mobile.Service.Diagnostics.IStatusReporter" /> instances registered with the Dependency Injection engine
            or an empty collection if none are registered.
            </summary>
        <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> containing the registered instances.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTemplateServiceProvider">
      <MemberSignature Language="C#" Value="public static Microsoft.WindowsAzure.Mobile.Service.Content.ITemplateServiceProvider GetTemplateServiceProvider (this System.Web.Http.Dependencies.IDependencyScope services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.WindowsAzure.Mobile.Service.Content.ITemplateServiceProvider GetTemplateServiceProvider(class System.Web.Http.Dependencies.IDependencyScope services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.DependencyScopeExtensions.GetTemplateServiceProvider(System.Web.Http.Dependencies.IDependencyScope)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTemplateServiceProvider (services As IDependencyScope) As ITemplateServiceProvider" />
      <MemberSignature Language="F#" Value="static member GetTemplateServiceProvider : System.Web.Http.Dependencies.IDependencyScope -&gt; Microsoft.WindowsAzure.Mobile.Service.Content.ITemplateServiceProvider" Usage="System.Web.Http.DependencyScopeExtensions.GetTemplateServiceProvider services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.WindowsAzure.Mobile.Service</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.WindowsAzure.Mobile.Service.Content.ITemplateServiceProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="System.Web.Http.Dependencies.IDependencyScope" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> implementation.</param>
        <summary>
            Gets the <see cref="T:Microsoft.WindowsAzure.Mobile.Service.Content.ITemplateServiceProvider" /> instance registered with the Dependency Injection engine.
            </summary>
        <returns>The registered instance.</returns>
        <remarks>If no type is registered then this method throws an <see cref="T:System.InvalidOperationException" />.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
