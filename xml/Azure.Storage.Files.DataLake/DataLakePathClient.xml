<Type Name="DataLakePathClient" FullName="Azure.Storage.Files.DataLake.DataLakePathClient">
  <TypeSignature Language="C#" Value="public class DataLakePathClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataLakePathClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Storage.Files.DataLake.DataLakePathClient" />
  <TypeSignature Language="VB.NET" Value="Public Class DataLakePathClient" />
  <TypeSignature Language="F#" Value="type DataLakePathClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
    <AssemblyVersion>12.6.1.0</AssemblyVersion>
    <AssemblyVersion>12.6.2.0</AssemblyVersion>
    <AssemblyVersion>12.7.0.0</AssemblyVersion>
    <AssemblyVersion>12.8.0.0</AssemblyVersion>
    <AssemblyVersion>12.9.0.0</AssemblyVersion>
    <AssemblyVersion>12.10.0.0</AssemblyVersion>
    <AssemblyVersion>12.11.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A PathClient represents a URI to the Azure DataLake service allowing you to manipulate a file or directory.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataLakePathClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.DataLake.DataLakePathClient" />
            class for mocking.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataLakePathClient (Uri pathUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri pathUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pathUri As Uri)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.DataLake.DataLakePathClient : Uri -&gt; Azure.Storage.Files.DataLake.DataLakePathClient" Usage="new Azure.Storage.Files.DataLake.DataLakePathClient pathUri" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pathUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="pathUri">
            A <see cref="P:Azure.Storage.Files.DataLake.DataLakePathClient.Uri" /> referencing the resource that includes the
            name of the account, the name of the file system, and the path to the
            resource.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.DataLake.DataLakePathClient" />
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataLakePathClient (Azure.Storage.Files.DataLake.DataLakeFileSystemClient fileSystemClient, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.Storage.Files.DataLake.DataLakeFileSystemClient fileSystemClient, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.#ctor(Azure.Storage.Files.DataLake.DataLakeFileSystemClient,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileSystemClient As DataLakeFileSystemClient, path As String)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.DataLake.DataLakePathClient : Azure.Storage.Files.DataLake.DataLakeFileSystemClient * string -&gt; Azure.Storage.Files.DataLake.DataLakePathClient" Usage="new Azure.Storage.Files.DataLake.DataLakePathClient (fileSystemClient, path)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileSystemClient" Type="Azure.Storage.Files.DataLake.DataLakeFileSystemClient" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileSystemClient">
          <see cref="T:Azure.Storage.Files.DataLake.DataLakeFileSystemClient" /> of the path's File System.</param>
        <param name="path">The path to the <see cref="T:Azure.Storage.Files.DataLake.DataLakePathClient" />.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.DataLake.DataLakePathClient" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataLakePathClient (Uri pathUri, Azure.AzureSasCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri pathUri, class Azure.AzureSasCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.#ctor(System.Uri,Azure.AzureSasCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pathUri As Uri, credential As AzureSasCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.DataLake.DataLakePathClient : Uri * Azure.AzureSasCredential -&gt; Azure.Storage.Files.DataLake.DataLakePathClient" Usage="new Azure.Storage.Files.DataLake.DataLakePathClient (pathUri, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pathUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureSasCredential" />
      </Parameters>
      <Docs>
        <param name="pathUri">
            A <see cref="P:Azure.Storage.Files.DataLake.DataLakePathClient.Uri" /> referencing the resource that includes the
            name of the account, the name of the file system, and the path to the
            resource.
            Must not contain shared access signature, which should be passed in the second parameter.
            </param>
        <param name="credential">
            The shared access signature credential used to sign requests.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.DataLake.DataLakePathClient" />
            class.
            </summary>
        <remarks>
            This constructor should only be used when shared access signature needs to be updated during lifespan of this client.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataLakePathClient (Uri pathUri, Azure.Core.TokenCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri pathUri, class Azure.Core.TokenCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pathUri As Uri, credential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.DataLake.DataLakePathClient : Uri * Azure.Core.TokenCredential -&gt; Azure.Storage.Files.DataLake.DataLakePathClient" Usage="new Azure.Storage.Files.DataLake.DataLakePathClient (pathUri, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pathUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="pathUri">
            A <see cref="P:Azure.Storage.Files.DataLake.DataLakePathClient.Uri" /> referencing the resource that includes the
            name of the account, the name of the file system, and the path to the
            resource.
            </param>
        <param name="credential">
            The token credential used to sign requests.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.DataLake.DataLakePathClient" />
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataLakePathClient (Uri pathUri, Azure.Storage.Files.DataLake.DataLakeClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri pathUri, class Azure.Storage.Files.DataLake.DataLakeClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.#ctor(System.Uri,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pathUri As Uri, options As DataLakeClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.DataLake.DataLakePathClient : Uri * Azure.Storage.Files.DataLake.DataLakeClientOptions -&gt; Azure.Storage.Files.DataLake.DataLakePathClient" Usage="new Azure.Storage.Files.DataLake.DataLakePathClient (pathUri, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pathUri" Type="System.Uri" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.DataLakeClientOptions" />
      </Parameters>
      <Docs>
        <param name="pathUri">
            A <see cref="P:Azure.Storage.Files.DataLake.DataLakePathClient.Uri" /> referencing the resource that includes the
            name of the account, the name of the file system, and the path to the
            resource.
            </param>
        <param name="options">
            Optional <see cref="T:Azure.Storage.Files.DataLake.DataLakeClientOptions" /> that define the transport
            pipeline policies for authentication, retries, etc., that are
            applied to every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.DataLake.DataLakePathClient" />
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataLakePathClient (Uri pathUri, Azure.Storage.StorageSharedKeyCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri pathUri, class Azure.Storage.StorageSharedKeyCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pathUri As Uri, credential As StorageSharedKeyCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.DataLake.DataLakePathClient : Uri * Azure.Storage.StorageSharedKeyCredential -&gt; Azure.Storage.Files.DataLake.DataLakePathClient" Usage="new Azure.Storage.Files.DataLake.DataLakePathClient (pathUri, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pathUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Storage.StorageSharedKeyCredential" />
      </Parameters>
      <Docs>
        <param name="pathUri">
            A <see cref="P:Azure.Storage.Files.DataLake.DataLakePathClient.Uri" /> referencing the resource that includes the
            name of the account, the name of the file system, and the path to the
            resource.
            </param>
        <param name="credential">
            The shared key credential used to sign requests.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.DataLake.DataLakePathClient" />
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataLakePathClient (string connectionString, string fileSystemName, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string fileSystemName, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, fileSystemName As String, path As String)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.DataLake.DataLakePathClient : string * string * string -&gt; Azure.Storage.Files.DataLake.DataLakePathClient" Usage="new Azure.Storage.Files.DataLake.DataLakePathClient (connectionString, fileSystemName, path)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="fileSystemName" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information,
             <see href="https://docs.microsoft.com/azure/storage/common/storage-configure-connection-string">
             Configure Azure Storage connection strings</see></param>
        <param name="fileSystemName">
             The name of the file system containing this path.
             </param>
        <param name="path">
             The path to the file or directory.
             </param>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Files.DataLake.DataLakePathClient" />.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataLakePathClient (Uri pathUri, Azure.AzureSasCredential credential, Azure.Storage.Files.DataLake.DataLakeClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri pathUri, class Azure.AzureSasCredential credential, class Azure.Storage.Files.DataLake.DataLakeClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.#ctor(System.Uri,Azure.AzureSasCredential,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pathUri As Uri, credential As AzureSasCredential, options As DataLakeClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.DataLake.DataLakePathClient : Uri * Azure.AzureSasCredential * Azure.Storage.Files.DataLake.DataLakeClientOptions -&gt; Azure.Storage.Files.DataLake.DataLakePathClient" Usage="new Azure.Storage.Files.DataLake.DataLakePathClient (pathUri, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pathUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureSasCredential" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.DataLakeClientOptions" />
      </Parameters>
      <Docs>
        <param name="pathUri">
            A <see cref="P:Azure.Storage.Files.DataLake.DataLakePathClient.Uri" /> referencing the resource that includes the
            name of the account, the name of the file system, and the path to the
            resource.
            Must not contain shared access signature, which should be passed in the second parameter.
            </param>
        <param name="credential">
            The shared access signature credential used to sign requests.
            </param>
        <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.DataLake.DataLakePathClient" />
            class.
            </summary>
        <remarks>
            This constructor should only be used when shared access signature needs to be updated during lifespan of this client.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataLakePathClient (Uri pathUri, Azure.Core.TokenCredential credential, Azure.Storage.Files.DataLake.DataLakeClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri pathUri, class Azure.Core.TokenCredential credential, class Azure.Storage.Files.DataLake.DataLakeClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pathUri As Uri, credential As TokenCredential, options As DataLakeClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.DataLake.DataLakePathClient : Uri * Azure.Core.TokenCredential * Azure.Storage.Files.DataLake.DataLakeClientOptions -&gt; Azure.Storage.Files.DataLake.DataLakePathClient" Usage="new Azure.Storage.Files.DataLake.DataLakePathClient (pathUri, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pathUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.DataLakeClientOptions" />
      </Parameters>
      <Docs>
        <param name="pathUri">
            A <see cref="P:Azure.Storage.Files.DataLake.DataLakePathClient.Uri" /> referencing the resource that includes the
            name of the account, the name of the file system, and the path to the
            resource.
            </param>
        <param name="credential">
            The token credential used to sign requests.
            </param>
        <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.DataLake.DataLakePathClient" />
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataLakePathClient (Uri pathUri, Azure.Storage.StorageSharedKeyCredential credential, Azure.Storage.Files.DataLake.DataLakeClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri pathUri, class Azure.Storage.StorageSharedKeyCredential credential, class Azure.Storage.Files.DataLake.DataLakeClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pathUri As Uri, credential As StorageSharedKeyCredential, options As DataLakeClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.DataLake.DataLakePathClient : Uri * Azure.Storage.StorageSharedKeyCredential * Azure.Storage.Files.DataLake.DataLakeClientOptions -&gt; Azure.Storage.Files.DataLake.DataLakePathClient" Usage="new Azure.Storage.Files.DataLake.DataLakePathClient (pathUri, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pathUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Storage.StorageSharedKeyCredential" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.DataLakeClientOptions" />
      </Parameters>
      <Docs>
        <param name="pathUri">
            A <see cref="P:Azure.Storage.Files.DataLake.DataLakePathClient.Uri" /> referencing the resource that includes the
            name of the account, the name of the file system, and the path to the
            resource.
            </param>
        <param name="credential">
            The shared key credential used to sign requests.
            </param>
        <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.DataLake.DataLakePathClient" />
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataLakePathClient (string connectionString, string fileSystemName, string path, Azure.Storage.Files.DataLake.DataLakeClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string fileSystemName, string path, class Azure.Storage.Files.DataLake.DataLakeClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.#ctor(System.String,System.String,System.String,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, fileSystemName As String, path As String, options As DataLakeClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.DataLake.DataLakePathClient : string * string * string * Azure.Storage.Files.DataLake.DataLakeClientOptions -&gt; Azure.Storage.Files.DataLake.DataLakePathClient" Usage="new Azure.Storage.Files.DataLake.DataLakePathClient (connectionString, fileSystemName, path, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="fileSystemName" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.DataLakeClientOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information,
             <see href="https://docs.microsoft.com/azure/storage/common/storage-configure-connection-string">
             Configure Azure Storage connection strings</see></param>
        <param name="fileSystemName">
             The name of the file system containing this path.
             </param>
        <param name="path">
             The path to the file or directory.
             </param>
        <param name="options">
             Optional client options that define the transport pipeline
             policies for authentication, retries, etc., that are applied to
             every request.
             </param>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Files.DataLake.DataLakePathClient" />.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccountName">
      <MemberSignature Language="C#" Value="public virtual string AccountName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccountName" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Files.DataLake.DataLakePathClient.AccountName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AccountName As String" />
      <MemberSignature Language="F#" Value="member this.AccountName : string" Usage="Azure.Storage.Files.DataLake.DataLakePathClient.AccountName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Storage account name corresponding to the directory client.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGenerateSasUri">
      <MemberSignature Language="C#" Value="public virtual bool CanGenerateSasUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGenerateSasUri" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Files.DataLake.DataLakePathClient.CanGenerateSasUri" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanGenerateSasUri As Boolean" />
      <MemberSignature Language="F#" Value="member this.CanGenerateSasUri : bool" Usage="Azure.Storage.Files.DataLake.DataLakePathClient.CanGenerateSasUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Determines whether the client is able to generate a SAS.
            If the client is authenticated with a <see cref="T:Azure.Storage.StorageSharedKeyCredential" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt; Create (Azure.Storage.Files.DataLake.Models.PathResourceType resourceType, Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt; Create(valuetype Azure.Storage.Files.DataLake.Models.PathResourceType resourceType, class Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.Create(Azure.Storage.Files.DataLake.Models.PathResourceType,Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (resourceType As PathResourceType, Optional options As DataLakePathCreateOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PathInfo)" />
      <MemberSignature Language="F#" Value="abstract member Create : Azure.Storage.Files.DataLake.Models.PathResourceType * Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&#xA;override this.Create : Azure.Storage.Files.DataLake.Models.PathResourceType * Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;" Usage="dataLakePathClient.Create (resourceType, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceType" Type="Azure.Storage.Files.DataLake.Models.PathResourceType" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="resourceType">
             Resource type of this path - file or directory.
             </param>
        <param name="options">
             Optional parameters.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.Create(Azure.Storage.Files.DataLake.Models.PathResourceType,Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions,System.Threading.CancellationToken)" /> operation creates a file or directory.
             If the path already exists, it will be overwritten.  If you don't intent to overwrite
             an existing path, consider using the <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.CreateIfNotExists(Azure.Storage.Files.DataLake.Models.PathResourceType,Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions,System.Threading.CancellationToken)" /> API.
            
             For more information, see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/create.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             newly created path.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt; Create (Azure.Storage.Files.DataLake.Models.PathResourceType resourceType, Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders = default, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, string permissions = default, string umask = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt; Create(valuetype Azure.Storage.Files.DataLake.Models.PathResourceType resourceType, class Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, string permissions, string umask, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.Create(Azure.Storage.Files.DataLake.Models.PathResourceType,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (resourceType As PathResourceType, Optional httpHeaders As PathHttpHeaders = Nothing, Optional metadata As IDictionary(Of String, String) = Nothing, Optional permissions As String = Nothing, Optional umask As String = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PathInfo)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member Create : Azure.Storage.Files.DataLake.Models.PathResourceType * Azure.Storage.Files.DataLake.Models.PathHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&#xA;override this.Create : Azure.Storage.Files.DataLake.Models.PathResourceType * Azure.Storage.Files.DataLake.Models.PathHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;" Usage="dataLakePathClient.Create (resourceType, httpHeaders, metadata, permissions, umask, conditions, cancellationToken)" />
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt; Create (Azure.Storage.Files.DataLake.Models.PathResourceType resourceType, Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, string permissions, string umask, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, System.Threading.CancellationToken cancellationToken);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (resourceType As PathResourceType, httpHeaders As PathHttpHeaders, metadata As IDictionary(Of String, String), permissions As String, umask As String, conditions As DataLakeRequestConditions, cancellationToken As CancellationToken) As Response(Of PathInfo)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceType" Type="Azure.Storage.Files.DataLake.Models.PathResourceType" />
        <Parameter Name="httpHeaders" Type="Azure.Storage.Files.DataLake.Models.PathHttpHeaders" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="permissions" Type="System.String" />
        <Parameter Name="umask" Type="System.String" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceType">
             Resource type of this path - file or directory.
             </param>
        <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             new file or directory..
             </param>
        <param name="metadata">
             Optional custom metadata to set for this file or directory.
             </param>
        <param name="permissions">
             Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX access
             permissions for the file owner, the file owning group, and others. Each class may be granted read,
             write, or execute permission. The sticky bit is also supported. Both symbolic (rwxrw-rw-) and 4-digit
             octal notation (e.g. 0766) are supported.
             </param>
        <param name="umask">
             Optional and only valid if Hierarchical Namespace is enabled for the account.
             When creating a file or directory and the parent folder does not have a default ACL,
             the umask restricts the permissions of the file or directory to be created. The resulting
             permission is given by p bitwise-and ^u, where p is the permission and u is the umask. For example,
             if p is 0777 and u is 0057, then the resulting permission is 0720. The default permission is
             0777 for a directory and 0666 for a file. The default umask is 0027. The umask must be specified
             in 4-digit octal notation (e.g. 0766).
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add
             conditions on the creation of this file or directory.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.Create(Azure.Storage.Files.DataLake.Models.PathResourceType,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
             operation creates a file or directory.
             If the path already exists, it will be overwritten.  If you don't intent to overwrite
             an existing path, consider using the <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.CreateIfNotExists(Azure.Storage.Files.DataLake.Models.PathResourceType,Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions,System.Threading.CancellationToken)" /> API.
            
             For more information, see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/create.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             newly created path.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; CreateAsync (Azure.Storage.Files.DataLake.Models.PathResourceType resourceType, Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; CreateAsync(valuetype Azure.Storage.Files.DataLake.Models.PathResourceType resourceType, class Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.CreateAsync(Azure.Storage.Files.DataLake.Models.PathResourceType,Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAsync (resourceType As PathResourceType, Optional options As DataLakePathCreateOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PathInfo))" />
      <MemberSignature Language="F#" Value="abstract member CreateAsync : Azure.Storage.Files.DataLake.Models.PathResourceType * Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;&#xA;override this.CreateAsync : Azure.Storage.Files.DataLake.Models.PathResourceType * Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;" Usage="dataLakePathClient.CreateAsync (resourceType, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceType" Type="Azure.Storage.Files.DataLake.Models.PathResourceType" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="resourceType">
             Resource type of this path - file or directory.
             </param>
        <param name="options">
             Optional parameters.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.CreateAsync(Azure.Storage.Files.DataLake.Models.PathResourceType,Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions,System.Threading.CancellationToken)" /> operation creates a file or directory.
             If the path already exists, it will be overwritten.  If you don't intent to overwrite
             an existing path, consider using the <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.CreateIfNotExistsAsync(Azure.Storage.Files.DataLake.Models.PathResourceType,Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions,System.Threading.CancellationToken)" /> API.
            
             For more information, see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/create.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             newly created path.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; CreateAsync (Azure.Storage.Files.DataLake.Models.PathResourceType resourceType, Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders = default, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, string permissions = default, string umask = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; CreateAsync(valuetype Azure.Storage.Files.DataLake.Models.PathResourceType resourceType, class Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, string permissions, string umask, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.CreateAsync(Azure.Storage.Files.DataLake.Models.PathResourceType,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAsync (resourceType As PathResourceType, Optional httpHeaders As PathHttpHeaders = Nothing, Optional metadata As IDictionary(Of String, String) = Nothing, Optional permissions As String = Nothing, Optional umask As String = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PathInfo))" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member CreateAsync : Azure.Storage.Files.DataLake.Models.PathResourceType * Azure.Storage.Files.DataLake.Models.PathHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;&#xA;override this.CreateAsync : Azure.Storage.Files.DataLake.Models.PathResourceType * Azure.Storage.Files.DataLake.Models.PathHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;" Usage="dataLakePathClient.CreateAsync (resourceType, httpHeaders, metadata, permissions, umask, conditions, cancellationToken)" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; CreateAsync (Azure.Storage.Files.DataLake.Models.PathResourceType resourceType, Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, string permissions, string umask, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, System.Threading.CancellationToken cancellationToken);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAsync (resourceType As PathResourceType, httpHeaders As PathHttpHeaders, metadata As IDictionary(Of String, String), permissions As String, umask As String, conditions As DataLakeRequestConditions, cancellationToken As CancellationToken) As Task(Of Response(Of PathInfo))" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceType" Type="Azure.Storage.Files.DataLake.Models.PathResourceType" />
        <Parameter Name="httpHeaders" Type="Azure.Storage.Files.DataLake.Models.PathHttpHeaders" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="permissions" Type="System.String" />
        <Parameter Name="umask" Type="System.String" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceType">
             Resource type of this path - file or directory.
             </param>
        <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             new file or directory.
             </param>
        <param name="metadata">
             Optional custom metadata to set for this file or directory.
             </param>
        <param name="permissions">
             Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX access
             permissions for the file owner, the file owning group, and others. Each class may be granted read,
             write, or execute permission. The sticky bit is also supported. Both symbolic (rwxrw-rw-) and 4-digit
             octal notation (e.g. 0766) are supported.
             </param>
        <param name="umask">
             Optional and only valid if Hierarchical Namespace is enabled for the account.
             When creating a file or directory and the parent folder does not have a default ACL,
             the umask restricts the permissions of the file or directory to be created. The resulting
             permission is given by p bitwise-and ^u, where p is the permission and u is the umask. For example,
             if p is 0777 and u is 0057, then the resulting permission is 0720. The default permission is
             0777 for a directory and 0666 for a file. The default umask is 0027. The umask must be specified
             in 4-digit octal notation (e.g. 0766).
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add
             conditions on the creation of this file or directory.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.CreateAsync(Azure.Storage.Files.DataLake.Models.PathResourceType,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
             operation creates a file or directory.
             If the path already exists, it will be overwritten.  If you don't intent to overwrite
             an existing path, consider using the <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.CreateIfNotExistsAsync(Azure.Storage.Files.DataLake.Models.PathResourceType,Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions,System.Threading.CancellationToken)" /> API.
            
             For more information, see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/create.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             newly created path.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIfNotExists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt; CreateIfNotExists (Azure.Storage.Files.DataLake.Models.PathResourceType resourceType, Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt; CreateIfNotExists(valuetype Azure.Storage.Files.DataLake.Models.PathResourceType resourceType, class Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.CreateIfNotExists(Azure.Storage.Files.DataLake.Models.PathResourceType,Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIfNotExists (resourceType As PathResourceType, Optional options As DataLakePathCreateOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PathInfo)" />
      <MemberSignature Language="F#" Value="abstract member CreateIfNotExists : Azure.Storage.Files.DataLake.Models.PathResourceType * Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&#xA;override this.CreateIfNotExists : Azure.Storage.Files.DataLake.Models.PathResourceType * Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;" Usage="dataLakePathClient.CreateIfNotExists (resourceType, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceType" Type="Azure.Storage.Files.DataLake.Models.PathResourceType" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="resourceType">
             Resource type of this path - file or directory.
             </param>
        <param name="options">
             Optional parameters.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.CreateIfNotExists(Azure.Storage.Files.DataLake.Models.PathResourceType,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Threading.CancellationToken)" />
             operation creates a file or directory.  If the file or directory already exists, it is not changed.
            
             For more information, see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/create.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             newly created path.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIfNotExists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt; CreateIfNotExists (Azure.Storage.Files.DataLake.Models.PathResourceType resourceType, Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders = default, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, string permissions = default, string umask = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt; CreateIfNotExists(valuetype Azure.Storage.Files.DataLake.Models.PathResourceType resourceType, class Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, string permissions, string umask, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.CreateIfNotExists(Azure.Storage.Files.DataLake.Models.PathResourceType,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIfNotExists (resourceType As PathResourceType, Optional httpHeaders As PathHttpHeaders = Nothing, Optional metadata As IDictionary(Of String, String) = Nothing, Optional permissions As String = Nothing, Optional umask As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PathInfo)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member CreateIfNotExists : Azure.Storage.Files.DataLake.Models.PathResourceType * Azure.Storage.Files.DataLake.Models.PathHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&#xA;override this.CreateIfNotExists : Azure.Storage.Files.DataLake.Models.PathResourceType * Azure.Storage.Files.DataLake.Models.PathHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;" Usage="dataLakePathClient.CreateIfNotExists (resourceType, httpHeaders, metadata, permissions, umask, cancellationToken)" />
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt; CreateIfNotExists (Azure.Storage.Files.DataLake.Models.PathResourceType resourceType, Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, string permissions, string umask, System.Threading.CancellationToken cancellationToken);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIfNotExists (resourceType As PathResourceType, httpHeaders As PathHttpHeaders, metadata As IDictionary(Of String, String), permissions As String, umask As String, cancellationToken As CancellationToken) As Response(Of PathInfo)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceType" Type="Azure.Storage.Files.DataLake.Models.PathResourceType" />
        <Parameter Name="httpHeaders" Type="Azure.Storage.Files.DataLake.Models.PathHttpHeaders" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="permissions" Type="System.String" />
        <Parameter Name="umask" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceType">
             Resource type of this path - file or directory.
             </param>
        <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             new file or directory..
             </param>
        <param name="metadata">
             Optional custom metadata to set for this file or directory..
             </param>
        <param name="permissions">
             Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX access
             permissions for the file owner, the file owning group, and others. Each class may be granted read,
             write, or execute permission. The sticky bit is also supported. Both symbolic (rwxrw-rw-) and 4-digit
             octal notation (e.g. 0766) are supported.
             </param>
        <param name="umask">
             Optional and only valid if Hierarchical Namespace is enabled for the account.
             When creating a file or directory and the parent folder does not have a default ACL,
             the umask restricts the permissions of the file or directory to be created. The resulting
             permission is given by p bitwise-and ^u, where p is the permission and u is the umask. For example,
             if p is 0777 and u is 0057, then the resulting permission is 0720. The default permission is
             0777 for a directory and 0666 for a file. The default umask is 0027. The umask must be specified
             in 4-digit octal notation (e.g. 0766).
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.CreateIfNotExists(Azure.Storage.Files.DataLake.Models.PathResourceType,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Threading.CancellationToken)" />
             operation creates a file or directory.  If the file or directory already exists, it is not changed.
            
             For more information, see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/create.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             newly created path.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIfNotExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; CreateIfNotExistsAsync (Azure.Storage.Files.DataLake.Models.PathResourceType resourceType, Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; CreateIfNotExistsAsync(valuetype Azure.Storage.Files.DataLake.Models.PathResourceType resourceType, class Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.CreateIfNotExistsAsync(Azure.Storage.Files.DataLake.Models.PathResourceType,Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIfNotExistsAsync (resourceType As PathResourceType, Optional options As DataLakePathCreateOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PathInfo))" />
      <MemberSignature Language="F#" Value="abstract member CreateIfNotExistsAsync : Azure.Storage.Files.DataLake.Models.PathResourceType * Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;&#xA;override this.CreateIfNotExistsAsync : Azure.Storage.Files.DataLake.Models.PathResourceType * Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;" Usage="dataLakePathClient.CreateIfNotExistsAsync (resourceType, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceType" Type="Azure.Storage.Files.DataLake.Models.PathResourceType" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="resourceType">
             Resource type of this path - file or directory.
             </param>
        <param name="options">
             Optional parameters.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.CreateIfNotExistsAsync(Azure.Storage.Files.DataLake.Models.PathResourceType,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Threading.CancellationToken)" />
             operation creates a file or directory.  If the file or directory already exists, it is not changed.
            
             For more information, see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/create.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             newly created path.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIfNotExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; CreateIfNotExistsAsync (Azure.Storage.Files.DataLake.Models.PathResourceType resourceType, Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders = default, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, string permissions = default, string umask = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; CreateIfNotExistsAsync(valuetype Azure.Storage.Files.DataLake.Models.PathResourceType resourceType, class Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, string permissions, string umask, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.CreateIfNotExistsAsync(Azure.Storage.Files.DataLake.Models.PathResourceType,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIfNotExistsAsync (resourceType As PathResourceType, Optional httpHeaders As PathHttpHeaders = Nothing, Optional metadata As IDictionary(Of String, String) = Nothing, Optional permissions As String = Nothing, Optional umask As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PathInfo))" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member CreateIfNotExistsAsync : Azure.Storage.Files.DataLake.Models.PathResourceType * Azure.Storage.Files.DataLake.Models.PathHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;&#xA;override this.CreateIfNotExistsAsync : Azure.Storage.Files.DataLake.Models.PathResourceType * Azure.Storage.Files.DataLake.Models.PathHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;" Usage="dataLakePathClient.CreateIfNotExistsAsync (resourceType, httpHeaders, metadata, permissions, umask, cancellationToken)" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; CreateIfNotExistsAsync (Azure.Storage.Files.DataLake.Models.PathResourceType resourceType, Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, string permissions, string umask, System.Threading.CancellationToken cancellationToken);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIfNotExistsAsync (resourceType As PathResourceType, httpHeaders As PathHttpHeaders, metadata As IDictionary(Of String, String), permissions As String, umask As String, cancellationToken As CancellationToken) As Task(Of Response(Of PathInfo))" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceType" Type="Azure.Storage.Files.DataLake.Models.PathResourceType" />
        <Parameter Name="httpHeaders" Type="Azure.Storage.Files.DataLake.Models.PathHttpHeaders" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="permissions" Type="System.String" />
        <Parameter Name="umask" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceType">
             Resource type of this path - file or directory.
             </param>
        <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             new file or directory.
             </param>
        <param name="metadata">
             Optional custom metadata to set for this file or directory..
             </param>
        <param name="permissions">
             Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX access
             permissions for the file owner, the file owning group, and others. Each class may be granted read,
             write, or execute permission. The sticky bit is also supported. Both symbolic (rwxrw-rw-) and 4-digit
             octal notation (e.g. 0766) are supported.
             </param>
        <param name="umask">
             Optional and only valid if Hierarchical Namespace is enabled for the account.
             When creating a file or directory and the parent folder does not have a default ACL,
             the umask restricts the permissions of the file or directory to be created. The resulting
             permission is given by p bitwise-and ^u, where p is the permission and u is the umask. For example,
             if p is 0777 and u is 0057, then the resulting permission is 0720. The default permission is
             0777 for a directory and 0666 for a file. The default umask is 0027. The umask must be specified
             in 4-digit octal notation (e.g. 0766).
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.CreateIfNotExistsAsync(Azure.Storage.Files.DataLake.Models.PathResourceType,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Threading.CancellationToken)" />
             operation creates a file or directory.  If the file or directory already exists, it is not changed.
            
             For more information, see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/create.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             newly created path.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Delete (bool? recursive = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Delete(valuetype System.Nullable`1&lt;bool&gt; recursive, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.Delete(System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (Optional recursive As Nullable(Of Boolean) = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Delete : Nullable&lt;bool&gt; * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.Delete : Nullable&lt;bool&gt; * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="dataLakePathClient.Delete (recursive, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recursive">
             Required and valid only when the resource is a directory. If "true", all paths beneath the directory will be deleted.
             If "false" and the directory is non-empty, an error occurs.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
             deleting this path.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.Delete(System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation marks the specified path
             deletion. The path is later deleted during
             garbage collection which could take several minutes.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/delete">
             Delete Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> on successfully marking for deletion.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteAsync (bool? recursive = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteAsync(valuetype System.Nullable`1&lt;bool&gt; recursive, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.DeleteAsync(System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (Optional recursive As Nullable(Of Boolean) = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Nullable&lt;bool&gt; * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteAsync : Nullable&lt;bool&gt; * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="dataLakePathClient.DeleteAsync (recursive, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recursive">
             Required and valid only when the resource is a directory. If "true", all paths beneath the directory will be deleted.
             If "false" and the directory is non-empty, an error occurs.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
             deleting this path.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.DeleteAsync(System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation marks the specified path
             deletion. The path is later deleted during
             garbage collection which could take several minutes.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/delete">
             Delete Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> on successfully marking for deletion.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteIfExists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; DeleteIfExists (bool? recursive = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; DeleteIfExists(valuetype System.Nullable`1&lt;bool&gt; recursive, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.DeleteIfExists(System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIfExists (Optional recursive As Nullable(Of Boolean) = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member DeleteIfExists : Nullable&lt;bool&gt; * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.DeleteIfExists : Nullable&lt;bool&gt; * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="dataLakePathClient.DeleteIfExists (recursive, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recursive">
             Required and valid only when the resource is a directory. If "true", all paths beneath the directory will be deleted.
             If "false" and the directory is non-empty, an error occurs.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
             deleting this path.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.DeleteIfExists(System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation marks the specified path
             for deletion, if the path exists. The path is later deleted during
             garbage collection which could take several minutes.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/delete">
             Delete Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> on successfully marking for deletion.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteIfExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; DeleteIfExistsAsync (bool? recursive = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; DeleteIfExistsAsync(valuetype System.Nullable`1&lt;bool&gt; recursive, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.DeleteIfExistsAsync(System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIfExistsAsync (Optional recursive As Nullable(Of Boolean) = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member DeleteIfExistsAsync : Nullable&lt;bool&gt; * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.DeleteIfExistsAsync : Nullable&lt;bool&gt; * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="dataLakePathClient.DeleteIfExistsAsync (recursive, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recursive">
             Required and valid only when the resource is a directory. If "true", all paths beneath the directory will be deleted.
             If "false" and the directory is non-empty, an error occurs.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
             deleting this path.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.DeleteIfExistsAsync(System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation marks the specified path
             deletion, if the path exists. The path is later deleted during
             garbage collection which could take several minutes.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/delete">
             Delete Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> on successfully marking for deletion.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; Exists (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; Exists(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.Exists(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Exists (Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Exists : System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.Exists : System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="dataLakePathClient.Exists cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.Exists(System.Threading.CancellationToken)" /> operation can be called on a
            <see cref="T:Azure.Storage.Files.DataLake.DataLakePathClient" /> to see if the associated
            file or director exists in the file system.
            </summary>
        <returns>
            Returns true if the file or directory exists.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs. If you want to create the file system if
            it doesn't exist, use
            <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.CreateIfNotExists(Azure.Storage.Files.DataLake.Models.PathResourceType,Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions,System.Threading.CancellationToken)" />
            instead.
            </remarks>
        <remarks>
            Note that if you call FileClient.Exists on a path that does not
            represent a file, Exists will return true. Similarly, if you
            call DirectoryClient.Exists on a path that is not a directory,
            Exists will return true.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; ExistsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; ExistsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.ExistsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExistsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member ExistsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.ExistsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="dataLakePathClient.ExistsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.ExistsAsync(System.Threading.CancellationToken)" /> operation can be called on a
            <see cref="T:Azure.Storage.Files.DataLake.DataLakePathClient" /> to see if the associated
            file or directory exists in the file system.
            </summary>
        <returns>
            Returns true if the file or directory exists.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs. If you want to create the file system if
            it doesn't exist, use
            <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.CreateIfNotExistsAsync(Azure.Storage.Files.DataLake.Models.PathResourceType,Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions,System.Threading.CancellationToken)" />
            instead.
            </remarks>
        <remarks>
            Note that if you call FileClient.Exists on a path that does not
            represent a file, Exists will return true. Similarly, if you
            call DirectoryClient.Exists on a path that is not a directory,
            Exists will return true.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileSystemName">
      <MemberSignature Language="C#" Value="public virtual string FileSystemName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileSystemName" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Files.DataLake.DataLakePathClient.FileSystemName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FileSystemName As String" />
      <MemberSignature Language="F#" Value="member this.FileSystemName : string" Usage="Azure.Storage.Files.DataLake.DataLakePathClient.FileSystemName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the file system name name corresponding to the directory client.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateSasUri">
      <MemberSignature Language="C#" Value="public virtual Uri GenerateSasUri (Azure.Storage.Sas.DataLakeSasBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Uri GenerateSasUri(class Azure.Storage.Sas.DataLakeSasBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.GenerateSasUri(Azure.Storage.Sas.DataLakeSasBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateSasUri (builder As DataLakeSasBuilder) As Uri" />
      <MemberSignature Language="F#" Value="abstract member GenerateSasUri : Azure.Storage.Sas.DataLakeSasBuilder -&gt; Uri&#xA;override this.GenerateSasUri : Azure.Storage.Sas.DataLakeSasBuilder -&gt; Uri" Usage="dataLakePathClient.GenerateSasUri builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Azure.Storage.Sas.DataLakeSasBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">
             Used to generate a Shared Access Signature (SAS).
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.GenerateSasUri(Azure.Storage.Sas.DataLakeSasBuilder)" /> returns a <see cref="P:Azure.Storage.Files.DataLake.DataLakePathClient.Uri" />
             that generates a DataLake File Service Shared Access Signature (SAS) Uri
             based on the Client properties and and builder. The SAS is signed
             by the shared key credential of the client.
            
             To check if the client is able to sign a Service Sas see
             <see cref="P:Azure.Storage.Files.DataLake.DataLakePathClient.CanGenerateSasUri" />.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas">
             Constructing a Service SAS</see>.
             </summary>
        <returns>
             A <see cref="P:Azure.Storage.Files.DataLake.DataLakePathClient.Uri" /> containing the SAS Uri.
             </returns>
        <remarks>
             A <see cref="T:System.Exception" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateSasUri">
      <MemberSignature Language="C#" Value="public virtual Uri GenerateSasUri (Azure.Storage.Sas.DataLakeSasPermissions permissions, DateTimeOffset expiresOn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Uri GenerateSasUri(valuetype Azure.Storage.Sas.DataLakeSasPermissions permissions, valuetype System.DateTimeOffset expiresOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.GenerateSasUri(Azure.Storage.Sas.DataLakeSasPermissions,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateSasUri (permissions As DataLakeSasPermissions, expiresOn As DateTimeOffset) As Uri" />
      <MemberSignature Language="F#" Value="abstract member GenerateSasUri : Azure.Storage.Sas.DataLakeSasPermissions * DateTimeOffset -&gt; Uri&#xA;override this.GenerateSasUri : Azure.Storage.Sas.DataLakeSasPermissions * DateTimeOffset -&gt; Uri" Usage="dataLakePathClient.GenerateSasUri (permissions, expiresOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permissions" Type="Azure.Storage.Sas.DataLakeSasPermissions" />
        <Parameter Name="expiresOn" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="permissions">
             Required. Specifies the list of permissions to be associated with the SAS.
             See <see cref="T:Azure.Storage.Sas.DataLakeSasPermissions" />.
             </param>
        <param name="expiresOn">
             Required. Specifies the time at which the SAS becomes invalid. This field
             must be omitted if it has been specified in an associated stored access policy.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.GenerateSasUri(Azure.Storage.Sas.DataLakeSasPermissions,System.DateTimeOffset)" />
             returns a <see cref="P:Azure.Storage.Files.DataLake.DataLakePathClient.Uri" /> that generates a DataLake Path Service
             Shared Access Signature (SAS) Uri based on the Client properties and
             parameters passed. The SAS is signed by the shared key credential
             of the client.
            
             To check if the client is able to sign a Service Sas see
             <see cref="P:Azure.Storage.Files.DataLake.DataLakePathClient.CanGenerateSasUri" />.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas">
             Constructing a service SAS</see>.
             </summary>
        <returns>
             A <see cref="P:Azure.Storage.Files.DataLake.DataLakePathClient.Uri" /> containing the SAS Uri.
             </returns>
        <remarks>
             A <see cref="T:System.Exception" /> will be thrown if a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathAccessControl&gt; GetAccessControl (bool? userPrincipalName = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathAccessControl&gt; GetAccessControl(valuetype System.Nullable`1&lt;bool&gt; userPrincipalName, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.GetAccessControl(System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAccessControl (Optional userPrincipalName As Nullable(Of Boolean) = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PathAccessControl)" />
      <MemberSignature Language="F#" Value="abstract member GetAccessControl : Nullable&lt;bool&gt; * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathAccessControl&gt;&#xA;override this.GetAccessControl : Nullable&lt;bool&gt; * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathAccessControl&gt;" Usage="dataLakePathClient.GetAccessControl (userPrincipalName, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathAccessControl&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userPrincipalName" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userPrincipalName">
             Optional.Valid only when Hierarchical Namespace is enabled for the account.If "true",
             the user identity values returned in the x-ms-owner, x-ms-group, and x-ms-acl response
             headers will be transformed from Azure Active Directory Object IDs to User Principal Names.
             If "false", the values will be returned as Azure Active Directory Object IDs.The default
             value is false. Note that group and application Object IDs are not translated because they
             do not have unique friendly names.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add
             conditions on getting the path's access control.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.GetAccessControl(System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation returns the
             access control data for a path.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/getproperties">
             Get Properties</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             path's access control.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControlAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathAccessControl&gt;&gt; GetAccessControlAsync (bool? userPrincipalName = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathAccessControl&gt;&gt; GetAccessControlAsync(valuetype System.Nullable`1&lt;bool&gt; userPrincipalName, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.GetAccessControlAsync(System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAccessControlAsync (Optional userPrincipalName As Nullable(Of Boolean) = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PathAccessControl))" />
      <MemberSignature Language="F#" Value="abstract member GetAccessControlAsync : Nullable&lt;bool&gt; * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathAccessControl&gt;&gt;&#xA;override this.GetAccessControlAsync : Nullable&lt;bool&gt; * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathAccessControl&gt;&gt;" Usage="dataLakePathClient.GetAccessControlAsync (userPrincipalName, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathAccessControl&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userPrincipalName" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userPrincipalName">
             Optional.Valid only when Hierarchical Namespace is enabled for the account.If "true",
             the user identity values returned in the x-ms-owner, x-ms-group, and x-ms-acl response
             headers will be transformed from Azure Active Directory Object IDs to User Principal Names.
             If "false", the values will be returned as Azure Active Directory Object IDs.The default
             value is false. Note that group and application Object IDs are not translated because they
             do not have unique friendly names.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add
             conditions on getting the path's access control.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.GetAccessControlAsync(System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation returns the
             access control data for a path.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/getproperties">
             Get Properties</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             path's access control.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParentDirectoryClientCore">
      <MemberSignature Language="C#" Value="protected internal virtual Azure.Storage.Files.DataLake.DataLakeDirectoryClient GetParentDirectoryClientCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class Azure.Storage.Files.DataLake.DataLakeDirectoryClient GetParentDirectoryClientCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.GetParentDirectoryClientCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetParentDirectoryClientCore () As DataLakeDirectoryClient" />
      <MemberSignature Language="F#" Value="abstract member GetParentDirectoryClientCore : unit -&gt; Azure.Storage.Files.DataLake.DataLakeDirectoryClient&#xA;override this.GetParentDirectoryClientCore : unit -&gt; Azure.Storage.Files.DataLake.DataLakeDirectoryClient" Usage="dataLakePathClient.GetParentDirectoryClientCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Files.DataLake.DataLakeDirectoryClient</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Create a new <see cref="T:Azure.Storage.Files.DataLake.DataLakeDirectoryClient" /> that pointing to this <see cref="T:Azure.Storage.Files.DataLake.DataLakePathClient" />'s parent container.
            The new <see cref="T:Azure.Storage.Files.DataLake.DataLakeDirectoryClient" />
            uses the same request policy pipeline as the
            <see cref="T:Azure.Storage.Files.DataLake.DataLakePathClient" />.
            </summary>
        <returns>A new <see cref="T:Azure.Storage.Files.DataLake.DataLakeDirectoryClient" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParentFileSystemClientCore">
      <MemberSignature Language="C#" Value="protected internal virtual Azure.Storage.Files.DataLake.DataLakeFileSystemClient GetParentFileSystemClientCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class Azure.Storage.Files.DataLake.DataLakeFileSystemClient GetParentFileSystemClientCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.GetParentFileSystemClientCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetParentFileSystemClientCore () As DataLakeFileSystemClient" />
      <MemberSignature Language="F#" Value="abstract member GetParentFileSystemClientCore : unit -&gt; Azure.Storage.Files.DataLake.DataLakeFileSystemClient&#xA;override this.GetParentFileSystemClientCore : unit -&gt; Azure.Storage.Files.DataLake.DataLakeFileSystemClient" Usage="dataLakePathClient.GetParentFileSystemClientCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Files.DataLake.DataLakeFileSystemClient</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Create a new <see cref="T:Azure.Storage.Files.DataLake.DataLakeFileSystemClient" /> that pointing to this <see cref="T:Azure.Storage.Files.DataLake.DataLakePathClient" />'s parent container.
            The new <see cref="T:Azure.Storage.Files.DataLake.DataLakeFileSystemClient" />
            uses the same request policy pipeline as the
            <see cref="T:Azure.Storage.Files.DataLake.DataLakePathClient" />.
            </summary>
        <returns>A new <see cref="T:Azure.Storage.Blobs.BlobContainerClient" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathProperties&gt; GetProperties (Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathProperties&gt; GetProperties(class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.GetProperties(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperties (Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PathProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathProperties&gt;&#xA;override this.GetProperties : Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathProperties&gt;" Usage="dataLakePathClient.GetProperties (conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add
             conditions on getting the path's properties.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.GetProperties(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation returns all
             user-defined metadata, standard HTTP properties, and system
             properties for the path. It does not return the content of the
             path.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-blob-properties">
             Get Properties</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             path's properties.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathProperties&gt;&gt; GetPropertiesAsync (Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathProperties&gt;&gt; GetPropertiesAsync(class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.GetPropertiesAsync(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesAsync (Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PathProperties))" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesAsync : Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathProperties&gt;&gt;&#xA;override this.GetPropertiesAsync : Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathProperties&gt;&gt;" Usage="dataLakePathClient.GetPropertiesAsync (conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathProperties&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add
             conditions on getting the path's properties.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.GetPropertiesAsync(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation returns all
             user-defined metadata, standard HTTP properties, and system
             properties for the path. It does not return the content of the
             path.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-blob-properties">
             Get Properties</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             paths's properties.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Files.DataLake.DataLakePathClient.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Azure.Storage.Files.DataLake.DataLakePathClient.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the file or directory.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public virtual string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Files.DataLake.DataLakePathClient.Path" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Path As String" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="Azure.Storage.Files.DataLake.DataLakePathClient.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the path corresponding to the path client.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessControlRecursive">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.AccessControlChangeResult&gt; RemoveAccessControlRecursive (System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.RemovePathAccessControlItem&gt; accessControlList, string continuationToken = default, Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;valuetype Azure.Storage.Files.DataLake.Models.AccessControlChangeResult&gt; RemoveAccessControlRecursive(class System.Collections.Generic.IList`1&lt;class Azure.Storage.Files.DataLake.Models.RemovePathAccessControlItem&gt; accessControlList, string continuationToken, class Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.RemoveAccessControlRecursive(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.RemovePathAccessControlItem},System.String,Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveAccessControlRecursive (accessControlList As IList(Of RemovePathAccessControlItem), Optional continuationToken As String = Nothing, Optional options As AccessControlChangeOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AccessControlChangeResult)" />
      <MemberSignature Language="F#" Value="abstract member RemoveAccessControlRecursive : System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.RemovePathAccessControlItem&gt; * string * Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.AccessControlChangeResult&gt;&#xA;override this.RemoveAccessControlRecursive : System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.RemovePathAccessControlItem&gt; * string * Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.AccessControlChangeResult&gt;" Usage="dataLakePathClient.RemoveAccessControlRecursive (accessControlList, continuationToken, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.AccessControlChangeResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessControlList" Type="System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.RemovePathAccessControlItem&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="accessControlList">
             The POSIX access control list for the file or directory.
             </param>
        <param name="continuationToken">
             Optional continuation token that can be used to resume previously stopped operation.
             </param>
        <param name="options">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions" /> with additional controls.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.RemoveAccessControlRecursive(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.RemovePathAccessControlItem},System.String,Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions,System.Threading.CancellationToken)" /> operation removes the
             Access Control on a path and subpaths
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> that contains summary stats of the operation.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeAclChangeFailedException" /> will be thrown if a request to
             storage throws a <see cref="T:Azure.RequestFailedException" /> or <see cref="T:System.Exception" />.
            
             Otherwise if a failure occurs outside the request, the respective <see cref="T:System.Exception" />
             type will be thrown if a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessControlRecursiveAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.AccessControlChangeResult&gt;&gt; RemoveAccessControlRecursiveAsync (System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.RemovePathAccessControlItem&gt; accessControlList, string continuationToken = default, Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;valuetype Azure.Storage.Files.DataLake.Models.AccessControlChangeResult&gt;&gt; RemoveAccessControlRecursiveAsync(class System.Collections.Generic.IList`1&lt;class Azure.Storage.Files.DataLake.Models.RemovePathAccessControlItem&gt; accessControlList, string continuationToken, class Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.RemoveAccessControlRecursiveAsync(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.RemovePathAccessControlItem},System.String,Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveAccessControlRecursiveAsync (accessControlList As IList(Of RemovePathAccessControlItem), Optional continuationToken As String = Nothing, Optional options As AccessControlChangeOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AccessControlChangeResult))" />
      <MemberSignature Language="F#" Value="abstract member RemoveAccessControlRecursiveAsync : System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.RemovePathAccessControlItem&gt; * string * Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.AccessControlChangeResult&gt;&gt;&#xA;override this.RemoveAccessControlRecursiveAsync : System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.RemovePathAccessControlItem&gt; * string * Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.AccessControlChangeResult&gt;&gt;" Usage="dataLakePathClient.RemoveAccessControlRecursiveAsync (accessControlList, continuationToken, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.AccessControlChangeResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessControlList" Type="System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.RemovePathAccessControlItem&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="accessControlList">
             The POSIX access control list for the file or directory.
             </param>
        <param name="continuationToken">
             Optional continuation token that can be used to resume previously stopped operation.
             </param>
        <param name="options">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions" /> with additional controls.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.RemoveAccessControlRecursiveAsync(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.RemovePathAccessControlItem},System.String,Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions,System.Threading.CancellationToken)" /> operation removes the
             Access Control on a path and subpaths
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> that contains summary stats of the operation.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeAclChangeFailedException" /> will be thrown if a request to
             storage throws a <see cref="T:Azure.RequestFailedException" /> or <see cref="T:System.Exception" />.
            
             Otherwise if a failure occurs outside the request, the respective <see cref="T:System.Exception" />
             type will be thrown if a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rename">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.DataLakePathClient&gt; Rename (string destinationPath, string destinationFileSystem = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions sourceConditions = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions destinationConditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.DataLakePathClient&gt; Rename(string destinationPath, string destinationFileSystem, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions sourceConditions, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions destinationConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.Rename(System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Rename (destinationPath As String, Optional destinationFileSystem As String = Nothing, Optional sourceConditions As DataLakeRequestConditions = Nothing, Optional destinationConditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataLakePathClient)" />
      <MemberSignature Language="F#" Value="abstract member Rename : string * string * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.DataLakePathClient&gt;&#xA;override this.Rename : string * string * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.DataLakePathClient&gt;" Usage="dataLakePathClient.Rename (destinationPath, destinationFileSystem, sourceConditions, destinationConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.DataLakePathClient&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destinationPath" Type="System.String" />
        <Parameter Name="destinationFileSystem" Type="System.String" />
        <Parameter Name="sourceConditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="destinationConditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="destinationPath">
             The destination path to rename the path to.
             </param>
        <param name="destinationFileSystem">
             Optional destination file system.  If null, path will be renamed within the
             current file system.
             </param>
        <param name="sourceConditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add
             conditions on the source on the creation of this file or directory.
             </param>
        <param name="destinationConditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add
             conditions on the creation of this file or directory.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.Rename(System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation renames a file or directory.
            
             For more information, see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/create.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             newly created path.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenameAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.DataLakePathClient&gt;&gt; RenameAsync (string destinationPath, string destinationFileSystem = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions sourceConditions = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions destinationConditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.DataLakePathClient&gt;&gt; RenameAsync(string destinationPath, string destinationFileSystem, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions sourceConditions, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions destinationConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.RenameAsync(System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RenameAsync (destinationPath As String, Optional destinationFileSystem As String = Nothing, Optional sourceConditions As DataLakeRequestConditions = Nothing, Optional destinationConditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataLakePathClient))" />
      <MemberSignature Language="F#" Value="abstract member RenameAsync : string * string * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.DataLakePathClient&gt;&gt;&#xA;override this.RenameAsync : string * string * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.DataLakePathClient&gt;&gt;" Usage="dataLakePathClient.RenameAsync (destinationPath, destinationFileSystem, sourceConditions, destinationConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.DataLakePathClient&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destinationPath" Type="System.String" />
        <Parameter Name="destinationFileSystem" Type="System.String" />
        <Parameter Name="sourceConditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="destinationConditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="destinationPath">
             The destination path to rename the path to.
             </param>
        <param name="destinationFileSystem">
             Optional destination file system.  If null, path will be renamed within the
             current file system.
             </param>
        <param name="sourceConditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add
             conditions on the source on the creation of this file or directory.
             </param>
        <param name="destinationConditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add
             conditions on the creation of this file or directory.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.RenameAsync(System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation renames a file or directory.
            
             For more information, see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/create.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             newly created path.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControlList">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt; SetAccessControlList (System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt; accessControlList, string owner = default, string group = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt; SetAccessControlList(class System.Collections.Generic.IList`1&lt;class Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt; accessControlList, string owner, string group, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.SetAccessControlList(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.PathAccessControlItem},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetAccessControlList (accessControlList As IList(Of PathAccessControlItem), Optional owner As String = Nothing, Optional group As String = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PathInfo)" />
      <MemberSignature Language="F#" Value="abstract member SetAccessControlList : System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt; * string * string * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&#xA;override this.SetAccessControlList : System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt; * string * string * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;" Usage="dataLakePathClient.SetAccessControlList (accessControlList, owner, group, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessControlList" Type="System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt;" />
        <Parameter Name="owner" Type="System.String" />
        <Parameter Name="group" Type="System.String" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="accessControlList">
             The POSIX access control list for the file or directory.
             </param>
        <param name="owner">
             The owner of the file or directory.
             </param>
        <param name="group">
             The owning group of the file or directory.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
             setting the the path's access control.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.SetAccessControlList(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.PathAccessControlItem},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation sets the
             Access Control on a path
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             path.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControlListAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; SetAccessControlListAsync (System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt; accessControlList, string owner = default, string group = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; SetAccessControlListAsync(class System.Collections.Generic.IList`1&lt;class Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt; accessControlList, string owner, string group, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.SetAccessControlListAsync(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.PathAccessControlItem},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetAccessControlListAsync (accessControlList As IList(Of PathAccessControlItem), Optional owner As String = Nothing, Optional group As String = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PathInfo))" />
      <MemberSignature Language="F#" Value="abstract member SetAccessControlListAsync : System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt; * string * string * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;&#xA;override this.SetAccessControlListAsync : System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt; * string * string * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;" Usage="dataLakePathClient.SetAccessControlListAsync (accessControlList, owner, group, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessControlList" Type="System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt;" />
        <Parameter Name="owner" Type="System.String" />
        <Parameter Name="group" Type="System.String" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="accessControlList">
             The POSIX access control list for the file or directory.
             </param>
        <param name="owner">
             The owner of the file or directory.
             </param>
        <param name="group">
             The owning group of the file or directory.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
             setting the the path's access control.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.SetAccessControlListAsync(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.PathAccessControlItem},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation sets the
             Access Control on a path
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             path.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControlRecursive">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.AccessControlChangeResult&gt; SetAccessControlRecursive (System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt; accessControlList, string continuationToken = default, Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;valuetype Azure.Storage.Files.DataLake.Models.AccessControlChangeResult&gt; SetAccessControlRecursive(class System.Collections.Generic.IList`1&lt;class Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt; accessControlList, string continuationToken, class Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.SetAccessControlRecursive(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.PathAccessControlItem},System.String,Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetAccessControlRecursive (accessControlList As IList(Of PathAccessControlItem), Optional continuationToken As String = Nothing, Optional options As AccessControlChangeOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AccessControlChangeResult)" />
      <MemberSignature Language="F#" Value="abstract member SetAccessControlRecursive : System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt; * string * Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.AccessControlChangeResult&gt;&#xA;override this.SetAccessControlRecursive : System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt; * string * Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.AccessControlChangeResult&gt;" Usage="dataLakePathClient.SetAccessControlRecursive (accessControlList, continuationToken, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.AccessControlChangeResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessControlList" Type="System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="accessControlList">
             The POSIX access control list for the file or directory.
             </param>
        <param name="continuationToken">
             Optional continuation token that can be used to resume previously stopped operation.
             </param>
        <param name="options">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions" /> with additional controls.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.SetAccessControlRecursive(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.PathAccessControlItem},System.String,Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions,System.Threading.CancellationToken)" /> operation sets the
             Access Control on a path and subpaths
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> that contains summary stats of the operation.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeAclChangeFailedException" /> will be thrown if a request to
             storage throws a <see cref="T:Azure.RequestFailedException" /> or <see cref="T:System.Exception" />.
            
             Otherwise if a failure occurs outside the request, the respective <see cref="T:System.Exception" />
             type will be thrown if a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControlRecursiveAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.AccessControlChangeResult&gt;&gt; SetAccessControlRecursiveAsync (System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt; accessControlList, string continuationToken = default, Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;valuetype Azure.Storage.Files.DataLake.Models.AccessControlChangeResult&gt;&gt; SetAccessControlRecursiveAsync(class System.Collections.Generic.IList`1&lt;class Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt; accessControlList, string continuationToken, class Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.SetAccessControlRecursiveAsync(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.PathAccessControlItem},System.String,Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetAccessControlRecursiveAsync (accessControlList As IList(Of PathAccessControlItem), Optional continuationToken As String = Nothing, Optional options As AccessControlChangeOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AccessControlChangeResult))" />
      <MemberSignature Language="F#" Value="abstract member SetAccessControlRecursiveAsync : System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt; * string * Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.AccessControlChangeResult&gt;&gt;&#xA;override this.SetAccessControlRecursiveAsync : System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt; * string * Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.AccessControlChangeResult&gt;&gt;" Usage="dataLakePathClient.SetAccessControlRecursiveAsync (accessControlList, continuationToken, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.AccessControlChangeResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessControlList" Type="System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="accessControlList">
             The POSIX access control list for the file or directory.
             </param>
        <param name="continuationToken">
             Optional continuation token that can be used to resume previously stopped operation.
             </param>
        <param name="options">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions" /> with additional controls.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.SetAccessControlRecursiveAsync(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.PathAccessControlItem},System.String,Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions,System.Threading.CancellationToken)" /> operation sets the
             Access Control on a path and subpaths
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> that contains summary stats of the operation.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeAclChangeFailedException" /> will be thrown if a request to
             storage throws a <see cref="T:Azure.RequestFailedException" /> or <see cref="T:System.Exception" />.
            
             Otherwise if a failure occurs outside the request, the respective <see cref="T:System.Exception" />
             type will be thrown if a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHttpHeaders">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt; SetHttpHeaders (Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt; SetHttpHeaders(class Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.SetHttpHeaders(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetHttpHeaders (Optional httpHeaders As PathHttpHeaders = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PathInfo)" />
      <MemberSignature Language="F#" Value="abstract member SetHttpHeaders : Azure.Storage.Files.DataLake.Models.PathHttpHeaders * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&#xA;override this.SetHttpHeaders : Azure.Storage.Files.DataLake.Models.PathHttpHeaders * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;" Usage="dataLakePathClient.SetHttpHeaders (httpHeaders, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpHeaders" Type="Azure.Storage.Files.DataLake.Models.PathHttpHeaders" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="httpHeaders">
             Optional. The standard HTTP header system properties to set.  If not specified, existing values will be cleared.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
             setting the paths's HTTP headers.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.SetHttpHeaders(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation sets system
             properties on the path.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-blob-properties">
             Set Properties</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             path.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHttpHeadersAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; SetHttpHeadersAsync (Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; SetHttpHeadersAsync(class Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.SetHttpHeadersAsync(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetHttpHeadersAsync (Optional httpHeaders As PathHttpHeaders = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PathInfo))" />
      <MemberSignature Language="F#" Value="abstract member SetHttpHeadersAsync : Azure.Storage.Files.DataLake.Models.PathHttpHeaders * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;&#xA;override this.SetHttpHeadersAsync : Azure.Storage.Files.DataLake.Models.PathHttpHeaders * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;" Usage="dataLakePathClient.SetHttpHeadersAsync (httpHeaders, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpHeaders" Type="Azure.Storage.Files.DataLake.Models.PathHttpHeaders" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="httpHeaders">
             Optional. The standard HTTP header system properties to set.  If not specified, existing values will be cleared.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
             setting the path's HTTP headers.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.SetHttpHeadersAsync(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation sets system
             properties on the PATH.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-blob-properties">
             Set Properties</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             path.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetadata">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt; SetMetadata (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt; SetMetadata(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetMetadata (metadata As IDictionary(Of String, String), Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PathInfo)" />
      <MemberSignature Language="F#" Value="abstract member SetMetadata : System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&#xA;override this.SetMetadata : System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;" Usage="dataLakePathClient.SetMetadata (metadata, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">
             Custom metadata to set for this path.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
             setting the path's metadata.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation sets user-defined
             metadata for the specified path as one or more name-value pairs.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-blob-metadata">
             Set Metadata</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             path.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetadataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; SetMetadataAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; SetMetadataAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetMetadataAsync (metadata As IDictionary(Of String, String), Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PathInfo))" />
      <MemberSignature Language="F#" Value="abstract member SetMetadataAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;&#xA;override this.SetMetadataAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;" Usage="dataLakePathClient.SetMetadataAsync (metadata, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">
             Custom metadata to set for this path.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
             setting the path's metadata.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation sets user-defined
             metadata for the specified path as one or more name-value pairs.
            
            For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-blob-metadata">
             Set Metadata</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             path.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPermissions">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt; SetPermissions (Azure.Storage.Files.DataLake.Models.PathPermissions permissions, string owner = default, string group = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt; SetPermissions(class Azure.Storage.Files.DataLake.Models.PathPermissions permissions, string owner, string group, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.SetPermissions(Azure.Storage.Files.DataLake.Models.PathPermissions,System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetPermissions (permissions As PathPermissions, Optional owner As String = Nothing, Optional group As String = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PathInfo)" />
      <MemberSignature Language="F#" Value="abstract member SetPermissions : Azure.Storage.Files.DataLake.Models.PathPermissions * string * string * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&#xA;override this.SetPermissions : Azure.Storage.Files.DataLake.Models.PathPermissions * string * string * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;" Usage="dataLakePathClient.SetPermissions (permissions, owner, group, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permissions" Type="Azure.Storage.Files.DataLake.Models.PathPermissions" />
        <Parameter Name="owner" Type="System.String" />
        <Parameter Name="group" Type="System.String" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="permissions">
              The POSIX access permissions for the file owner, the file owning group, and others.
             </param>
        <param name="owner">
             The owner of the file or directory.
             </param>
        <param name="group">
             The owning group of the file or directory.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
             setting the the path's access control.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.SetPermissions(Azure.Storage.Files.DataLake.Models.PathPermissions,System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation sets the
             file permissions on a path.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             path.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPermissionsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; SetPermissionsAsync (Azure.Storage.Files.DataLake.Models.PathPermissions permissions, string owner = default, string group = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; SetPermissionsAsync(class Azure.Storage.Files.DataLake.Models.PathPermissions permissions, string owner, string group, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.SetPermissionsAsync(Azure.Storage.Files.DataLake.Models.PathPermissions,System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetPermissionsAsync (permissions As PathPermissions, Optional owner As String = Nothing, Optional group As String = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PathInfo))" />
      <MemberSignature Language="F#" Value="abstract member SetPermissionsAsync : Azure.Storage.Files.DataLake.Models.PathPermissions * string * string * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;&#xA;override this.SetPermissionsAsync : Azure.Storage.Files.DataLake.Models.PathPermissions * string * string * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;" Usage="dataLakePathClient.SetPermissionsAsync (permissions, owner, group, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permissions" Type="Azure.Storage.Files.DataLake.Models.PathPermissions" />
        <Parameter Name="owner" Type="System.String" />
        <Parameter Name="group" Type="System.String" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="permissions">
              The POSIX access permissions for the file owner, the file owning group, and others.
             </param>
        <param name="owner">
             The owner of the file or directory.
             </param>
        <param name="group">
             The owning group of the file or directory.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
             setting the the path's access control.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.SetPermissionsAsync(Azure.Storage.Files.DataLake.Models.PathPermissions,System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation sets the
             file permissions on a path.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             path.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAccessControlRecursive">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.AccessControlChangeResult&gt; UpdateAccessControlRecursive (System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt; accessControlList, string continuationToken = default, Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;valuetype Azure.Storage.Files.DataLake.Models.AccessControlChangeResult&gt; UpdateAccessControlRecursive(class System.Collections.Generic.IList`1&lt;class Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt; accessControlList, string continuationToken, class Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.UpdateAccessControlRecursive(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.PathAccessControlItem},System.String,Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAccessControlRecursive (accessControlList As IList(Of PathAccessControlItem), Optional continuationToken As String = Nothing, Optional options As AccessControlChangeOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AccessControlChangeResult)" />
      <MemberSignature Language="F#" Value="abstract member UpdateAccessControlRecursive : System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt; * string * Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.AccessControlChangeResult&gt;&#xA;override this.UpdateAccessControlRecursive : System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt; * string * Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.AccessControlChangeResult&gt;" Usage="dataLakePathClient.UpdateAccessControlRecursive (accessControlList, continuationToken, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.AccessControlChangeResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessControlList" Type="System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="accessControlList">
             The POSIX access control list for the file or directory.
             </param>
        <param name="continuationToken">
             Optional continuation token that can be used to resume previously stopped operation.
             </param>
        <param name="options">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions" /> with additional controls.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.UpdateAccessControlRecursive(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.PathAccessControlItem},System.String,Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions,System.Threading.CancellationToken)" /> operation modifies the
             Access Control on a path and subpaths
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> that contains summary stats of the operation.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeAclChangeFailedException" /> will be thrown if a request to
             storage throws a <see cref="T:Azure.RequestFailedException" /> or <see cref="T:System.Exception" />.
            
             Otherwise if a failure occurs outside the request, the respective <see cref="T:System.Exception" />
             type will be thrown if a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAccessControlRecursiveAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.AccessControlChangeResult&gt;&gt; UpdateAccessControlRecursiveAsync (System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt; accessControlList, string continuationToken = default, Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;valuetype Azure.Storage.Files.DataLake.Models.AccessControlChangeResult&gt;&gt; UpdateAccessControlRecursiveAsync(class System.Collections.Generic.IList`1&lt;class Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt; accessControlList, string continuationToken, class Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.UpdateAccessControlRecursiveAsync(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.PathAccessControlItem},System.String,Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAccessControlRecursiveAsync (accessControlList As IList(Of PathAccessControlItem), Optional continuationToken As String = Nothing, Optional options As AccessControlChangeOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AccessControlChangeResult))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAccessControlRecursiveAsync : System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt; * string * Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.AccessControlChangeResult&gt;&gt;&#xA;override this.UpdateAccessControlRecursiveAsync : System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt; * string * Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.AccessControlChangeResult&gt;&gt;" Usage="dataLakePathClient.UpdateAccessControlRecursiveAsync (accessControlList, continuationToken, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.AccessControlChangeResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessControlList" Type="System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="accessControlList">
             The POSIX access control list for the file or directory.
             </param>
        <param name="continuationToken">
             Optional continuation token that can be used to resume previously stopped operation.
             </param>
        <param name="options">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions" /> with additional controls.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakePathClient.UpdateAccessControlRecursiveAsync(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.PathAccessControlItem},System.String,Azure.Storage.Files.DataLake.Models.AccessControlChangeOptions,System.Threading.CancellationToken)" /> operation modifies the
             Access Control on a path and subpaths
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> that contains summary stats of the operation.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeAclChangeFailedException" /> will be thrown if a request to
             storage throws a <see cref="T:Azure.RequestFailedException" /> or <see cref="T:System.Exception" />.
            
             Otherwise if a failure occurs outside the request, the respective <see cref="T:System.Exception" />
             type will be thrown if a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public virtual Uri Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Files.DataLake.DataLakePathClient.Uri" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Uri As Uri" />
      <MemberSignature Language="F#" Value="member this.Uri : Uri" Usage="Azure.Storage.Files.DataLake.DataLakePathClient.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the directory's primary <see cref="P:Azure.Storage.Files.DataLake.DataLakePathClient.Uri" /> endpoint.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithCustomerProvidedKey">
      <MemberSignature Language="C#" Value="public Azure.Storage.Files.DataLake.DataLakePathClient WithCustomerProvidedKey (Azure.Storage.Files.DataLake.Models.DataLakeCustomerProvidedKey? customerProvidedKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.Storage.Files.DataLake.DataLakePathClient WithCustomerProvidedKey(valuetype System.Nullable`1&lt;valuetype Azure.Storage.Files.DataLake.Models.DataLakeCustomerProvidedKey&gt; customerProvidedKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakePathClient.WithCustomerProvidedKey(System.Nullable{Azure.Storage.Files.DataLake.Models.DataLakeCustomerProvidedKey})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithCustomerProvidedKey (customerProvidedKey As Nullable(Of DataLakeCustomerProvidedKey)) As DataLakePathClient" />
      <MemberSignature Language="F#" Value="member this.WithCustomerProvidedKey : Nullable&lt;Azure.Storage.Files.DataLake.Models.DataLakeCustomerProvidedKey&gt; -&gt; Azure.Storage.Files.DataLake.DataLakePathClient" Usage="dataLakePathClient.WithCustomerProvidedKey customerProvidedKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Files.DataLake.DataLakePathClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customerProvidedKey" Type="System.Nullable&lt;Azure.Storage.Files.DataLake.Models.DataLakeCustomerProvidedKey&gt;" />
      </Parameters>
      <Docs>
        <param name="customerProvidedKey">The customer provided key.</param>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Files.DataLake.DataLakePathClient" />
             class with an identical <see cref="P:Azure.Storage.Files.DataLake.DataLakePathClient.Uri" /> source but the specified
             <paramref name="customerProvidedKey" />.
            
             </summary>
        <returns>A new <see cref="T:Azure.Storage.Files.DataLake.DataLakePathClient" /> instance.</returns>
        <remarks>
             Pass null to remove the customer provide key in the returned <see cref="T:Azure.Storage.Files.DataLake.DataLakePathClient" />.
             </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
