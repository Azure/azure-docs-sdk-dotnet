<Type Name="DataLakeFileClient" FullName="Azure.Storage.Files.DataLake.DataLakeFileClient">
  <TypeSignature Language="C#" Value="public class DataLakeFileClient : Azure.Storage.Files.DataLake.DataLakePathClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataLakeFileClient extends Azure.Storage.Files.DataLake.DataLakePathClient" />
  <TypeSignature Language="DocId" Value="T:Azure.Storage.Files.DataLake.DataLakeFileClient" />
  <TypeSignature Language="VB.NET" Value="Public Class DataLakeFileClient&#xA;Inherits DataLakePathClient" />
  <TypeSignature Language="F#" Value="type DataLakeFileClient = class&#xA;    inherit DataLakePathClient" />
  <AssemblyInfo>
    <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
    <AssemblyVersion>12.6.1.0</AssemblyVersion>
    <AssemblyVersion>12.6.2.0</AssemblyVersion>
    <AssemblyVersion>12.7.0.0</AssemblyVersion>
    <AssemblyVersion>12.8.0.0</AssemblyVersion>
    <AssemblyVersion>12.9.0.0</AssemblyVersion>
    <AssemblyVersion>12.10.0.0</AssemblyVersion>
    <AssemblyVersion>12.11.0.0</AssemblyVersion>
    <AssemblyVersion>12.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Storage.Files.DataLake.DataLakePathClient</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The <see cref="T:Azure.Storage.Files.DataLake.DataLakeFileClient" /> allows you to manipulate Azure Data Lake files.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataLakeFileClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.DataLake.DataLakeFileClient" />
            class for mocking.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataLakeFileClient (Uri fileUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri fileUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileUri As Uri)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.DataLake.DataLakeFileClient : Uri -&gt; Azure.Storage.Files.DataLake.DataLakeFileClient" Usage="new Azure.Storage.Files.DataLake.DataLakeFileClient fileUri" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="fileUri">
            A <see cref="T:System.Uri" /> referencing the file that includes the
            name of the account, the name of the file system, and the path of the
            file.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.DataLake.DataLakeFileClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataLakeFileClient (Uri fileUri, Azure.AzureSasCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri fileUri, class Azure.AzureSasCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.#ctor(System.Uri,Azure.AzureSasCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileUri As Uri, credential As AzureSasCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.DataLake.DataLakeFileClient : Uri * Azure.AzureSasCredential -&gt; Azure.Storage.Files.DataLake.DataLakeFileClient" Usage="new Azure.Storage.Files.DataLake.DataLakeFileClient (fileUri, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureSasCredential" />
      </Parameters>
      <Docs>
        <param name="fileUri">
            A <see cref="T:System.Uri" /> referencing the file that includes the
            name of the account, the name of the file system, and the path of the
            file.
            Must not contain shared access signature, which should be passed in the second parameter.
            </param>
        <param name="credential">
            The shared access signature credential used to sign requests.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.DataLake.DataLakeFileClient" /> class.
            </summary>
        <remarks>
            This constructor should only be used when shared access signature needs to be updated during lifespan of this client.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataLakeFileClient (Uri fileUri, Azure.Core.TokenCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri fileUri, class Azure.Core.TokenCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileUri As Uri, credential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.DataLake.DataLakeFileClient : Uri * Azure.Core.TokenCredential -&gt; Azure.Storage.Files.DataLake.DataLakeFileClient" Usage="new Azure.Storage.Files.DataLake.DataLakeFileClient (fileUri, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="fileUri">
            A <see cref="T:System.Uri" /> referencing the file that includes the
            name of the account, the name of the file system, and the path of the
            file.
            </param>
        <param name="credential">
            The token credential used to sign requests.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.DataLake.DataLakeFileClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataLakeFileClient (Uri fileUri, Azure.Storage.Files.DataLake.DataLakeClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri fileUri, class Azure.Storage.Files.DataLake.DataLakeClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.#ctor(System.Uri,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileUri As Uri, options As DataLakeClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.DataLake.DataLakeFileClient : Uri * Azure.Storage.Files.DataLake.DataLakeClientOptions -&gt; Azure.Storage.Files.DataLake.DataLakeFileClient" Usage="new Azure.Storage.Files.DataLake.DataLakeFileClient (fileUri, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileUri" Type="System.Uri" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.DataLakeClientOptions" />
      </Parameters>
      <Docs>
        <param name="fileUri">
            A <see cref="T:System.Uri" /> referencing the file that includes the
            name of the account, the name of the file system, and the path of the
            file.
            </param>
        <param name="options">
            Optional <see cref="T:Azure.Storage.Files.DataLake.DataLakeClientOptions" /> that define the transport
            pipeline policies for authentication, retries, etc., that are
            applied to every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.DataLake.DataLakeFileClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataLakeFileClient (Uri fileUri, Azure.Storage.StorageSharedKeyCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri fileUri, class Azure.Storage.StorageSharedKeyCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileUri As Uri, credential As StorageSharedKeyCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.DataLake.DataLakeFileClient : Uri * Azure.Storage.StorageSharedKeyCredential -&gt; Azure.Storage.Files.DataLake.DataLakeFileClient" Usage="new Azure.Storage.Files.DataLake.DataLakeFileClient (fileUri, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Storage.StorageSharedKeyCredential" />
      </Parameters>
      <Docs>
        <param name="fileUri">
            A <see cref="T:System.Uri" /> referencing the file that includes the
            name of the account, the name of the file system, and the path of the
            file.
            </param>
        <param name="credential">
            The shared key credential used to sign requests.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.DataLake.DataLakeFileClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataLakeFileClient (string connectionString, string fileSystemName, string filePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string fileSystemName, string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, fileSystemName As String, filePath As String)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.DataLake.DataLakeFileClient : string * string * string -&gt; Azure.Storage.Files.DataLake.DataLakeFileClient" Usage="new Azure.Storage.Files.DataLake.DataLakeFileClient (connectionString, fileSystemName, filePath)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="fileSystemName" Type="System.String" />
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information,
             <see href="https://docs.microsoft.com/azure/storage/common/storage-configure-connection-string">
             Configure Azure Storage connection strings</see></param>
        <param name="fileSystemName">
             The name of the file system containing this path.
             </param>
        <param name="filePath">
             The path to the file.
             </param>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Files.DataLake.DataLakeDirectoryClient" />.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataLakeFileClient (Uri fileUri, Azure.AzureSasCredential credential, Azure.Storage.Files.DataLake.DataLakeClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri fileUri, class Azure.AzureSasCredential credential, class Azure.Storage.Files.DataLake.DataLakeClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.#ctor(System.Uri,Azure.AzureSasCredential,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileUri As Uri, credential As AzureSasCredential, options As DataLakeClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.DataLake.DataLakeFileClient : Uri * Azure.AzureSasCredential * Azure.Storage.Files.DataLake.DataLakeClientOptions -&gt; Azure.Storage.Files.DataLake.DataLakeFileClient" Usage="new Azure.Storage.Files.DataLake.DataLakeFileClient (fileUri, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureSasCredential" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.DataLakeClientOptions" />
      </Parameters>
      <Docs>
        <param name="fileUri">
            A <see cref="T:System.Uri" /> referencing the file that includes the
            name of the account, the name of the file system, and the path of the
            file.
            Must not contain shared access signature, which should be passed in the second parameter.
            </param>
        <param name="credential">
            The shared access signature credential used to sign requests.
            </param>
        <param name="options">
            Optional <see cref="T:Azure.Storage.Files.DataLake.DataLakeClientOptions" /> that define the transport
            pipeline policies for authentication, retries, etc., that are
            applied to every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.DataLake.DataLakeFileClient" /> class.
            </summary>
        <remarks>
            This constructor should only be used when shared access signature needs to be updated during lifespan of this client.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataLakeFileClient (Uri fileUri, Azure.Core.TokenCredential credential, Azure.Storage.Files.DataLake.DataLakeClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri fileUri, class Azure.Core.TokenCredential credential, class Azure.Storage.Files.DataLake.DataLakeClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileUri As Uri, credential As TokenCredential, options As DataLakeClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.DataLake.DataLakeFileClient : Uri * Azure.Core.TokenCredential * Azure.Storage.Files.DataLake.DataLakeClientOptions -&gt; Azure.Storage.Files.DataLake.DataLakeFileClient" Usage="new Azure.Storage.Files.DataLake.DataLakeFileClient (fileUri, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.DataLakeClientOptions" />
      </Parameters>
      <Docs>
        <param name="fileUri">
            A <see cref="T:System.Uri" /> referencing the file that includes the
            name of the account, the name of the file system, and the path of the
            file.
            </param>
        <param name="credential">
            The token credential used to sign requests.
            </param>
        <param name="options">
            Optional <see cref="T:Azure.Storage.Files.DataLake.DataLakeClientOptions" /> that define the transport
            pipeline policies for authentication, retries, etc., that are
            applied to every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.DataLake.DataLakeFileClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataLakeFileClient (Uri fileUri, Azure.Storage.StorageSharedKeyCredential credential, Azure.Storage.Files.DataLake.DataLakeClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri fileUri, class Azure.Storage.StorageSharedKeyCredential credential, class Azure.Storage.Files.DataLake.DataLakeClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileUri As Uri, credential As StorageSharedKeyCredential, options As DataLakeClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.DataLake.DataLakeFileClient : Uri * Azure.Storage.StorageSharedKeyCredential * Azure.Storage.Files.DataLake.DataLakeClientOptions -&gt; Azure.Storage.Files.DataLake.DataLakeFileClient" Usage="new Azure.Storage.Files.DataLake.DataLakeFileClient (fileUri, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Storage.StorageSharedKeyCredential" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.DataLakeClientOptions" />
      </Parameters>
      <Docs>
        <param name="fileUri">
            A <see cref="T:System.Uri" /> referencing the file that includes the
            name of the account, the name of the file system, and the path of the
            file.
            </param>
        <param name="credential">
            The shared key credential used to sign requests.
            </param>
        <param name="options">
            Optional <see cref="T:Azure.Storage.Files.DataLake.DataLakeClientOptions" /> that define the transport
            pipeline policies for authentication, retries, etc., that are
            applied to every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.DataLake.DataLakeFileClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataLakeFileClient (string connectionString, string fileSystemName, string filePath, Azure.Storage.Files.DataLake.DataLakeClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string fileSystemName, string filePath, class Azure.Storage.Files.DataLake.DataLakeClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.#ctor(System.String,System.String,System.String,Azure.Storage.Files.DataLake.DataLakeClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, fileSystemName As String, filePath As String, options As DataLakeClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.DataLake.DataLakeFileClient : string * string * string * Azure.Storage.Files.DataLake.DataLakeClientOptions -&gt; Azure.Storage.Files.DataLake.DataLakeFileClient" Usage="new Azure.Storage.Files.DataLake.DataLakeFileClient (connectionString, fileSystemName, filePath, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="fileSystemName" Type="System.String" />
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.DataLakeClientOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information,
             <see href="https://docs.microsoft.com/azure/storage/common/storage-configure-connection-string">
             Configure Azure Storage connection strings</see></param>
        <param name="fileSystemName">
             The name of the file system containing this path.
             </param>
        <param name="filePath">
             The path to the file.
             </param>
        <param name="options">
             Optional client options that define the transport pipeline
             policies for authentication, retries, etc., that are applied to
             every request.
             </param>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Files.DataLake.DataLakeDirectoryClient" />.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Append (System.IO.Stream content, long offset, Azure.Storage.Files.DataLake.Models.DataLakeFileAppendOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Append(class System.IO.Stream content, int64 offset, class Azure.Storage.Files.DataLake.Models.DataLakeFileAppendOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Append(System.IO.Stream,System.Int64,Azure.Storage.Files.DataLake.Models.DataLakeFileAppendOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Append (content As Stream, offset As Long, Optional options As DataLakeFileAppendOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Append : System.IO.Stream * int64 * Azure.Storage.Files.DataLake.Models.DataLakeFileAppendOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.Append : System.IO.Stream * int64 * Azure.Storage.Files.DataLake.Models.DataLakeFileAppendOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="dataLakeFileClient.Append (content, offset, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="offset" Type="System.Int64" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.DataLakeFileAppendOptions" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content to upload.
             </param>
        <param name="offset">
             This parameter allows the caller to upload data in parallel and control the order in which it is appended to the file.
             It is required when uploading data to be appended to the file and when flushing previously uploaded data to the file.
             The value must be the position where the data is to be appended. Uploaded data is not immediately flushed, or written, to the file.
             To flush, the previously uploaded data must be contiguous, the position parameter must be specified and equal to the length
             of the file after all data has been written, and there must not be a request entity body included with the request.
             </param>
        <param name="options">
             Optional parameters.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Append(System.IO.Stream,System.Int64,Azure.Storage.Files.DataLake.Models.DataLakeFileAppendOptions,System.Threading.CancellationToken)" /> operation uploads data to be appended to a file.
             Data can only be appended to a file.
             To apply previously uploaded data to a file, call Flush Data.
             Append is currently limited to 4000 MB per request.  To upload large files all at once, consider using <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.IO.Stream)" />.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> describing the state
             of the updated file.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Append (System.IO.Stream content, long offset, byte[] contentHash = default, string leaseId = default, IProgress&lt;long&gt; progressHandler = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Append(class System.IO.Stream content, int64 offset, unsigned int8[] contentHash, string leaseId, class System.IProgress`1&lt;int64&gt; progressHandler, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Append(System.IO.Stream,System.Int64,System.Byte[],System.String,System.IProgress{System.Int64},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Append (content As Stream, offset As Long, Optional contentHash As Byte() = Nothing, Optional leaseId As String = Nothing, Optional progressHandler As IProgress(Of Long) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member Append : System.IO.Stream * int64 * byte[] * string * IProgress&lt;int64&gt; * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.Append : System.IO.Stream * int64 * byte[] * string * IProgress&lt;int64&gt; * System.Threading.CancellationToken -&gt; Azure.Response" Usage="dataLakeFileClient.Append (content, offset, contentHash, leaseId, progressHandler, cancellationToken)" />
      <MemberSignature Language="C#" Value="public virtual Azure.Response Append (System.IO.Stream content, long offset, byte[] contentHash, string leaseId, IProgress&lt;long&gt; progressHandler, System.Threading.CancellationToken cancellationToken);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Append (content As Stream, offset As Long, contentHash As Byte(), leaseId As String, progressHandler As IProgress(Of Long), cancellationToken As CancellationToken) As Response" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="contentHash" Type="System.Byte[]" />
        <Parameter Name="leaseId" Type="System.String" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;System.Int64&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content to upload.
             </param>
        <param name="offset">
             This parameter allows the caller to upload data in parallel and control the order in which it is appended to the file.
             It is required when uploading data to be appended to the file and when flushing previously uploaded data to the file.
             The value must be the position where the data is to be appended. Uploaded data is not immediately flushed, or written, to the file.
             To flush, the previously uploaded data must be contiguous, the position parameter must be specified and equal to the length
             of the file after all data has been written, and there must not be a request entity body included with the request.
             </param>
        <param name="contentHash">
             This hash is used to verify the integrity of the request content during transport. When this header is specified,
             the storage service compares the hash of the content that has arrived with this header value. If the two hashes do not match,
             the operation will fail with error code 400 (Bad Request). Note that this MD5 hash is not stored with the file. This header is
             associated with the request content, and not with the stored content of the file itself.
             </param>
        <param name="leaseId">
             Optional lease id.
             </param>
        <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1" /> to provide
             progress updates about data transfers.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Append(System.IO.Stream,System.Int64,System.Byte[],System.String,System.IProgress{System.Int64},System.Threading.CancellationToken)" /> operation uploads data to be appended to a file.
             Data can only be appended to a file.
             To apply previously uploaded data to a file, call Flush Data.
             Append is currently limited to 4000 MB per request.  To upload large files all at once, consider using <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.IO.Stream)" />.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> describing the state
             of the updated file.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; AppendAsync (System.IO.Stream content, long offset, Azure.Storage.Files.DataLake.Models.DataLakeFileAppendOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; AppendAsync(class System.IO.Stream content, int64 offset, class Azure.Storage.Files.DataLake.Models.DataLakeFileAppendOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.AppendAsync(System.IO.Stream,System.Int64,Azure.Storage.Files.DataLake.Models.DataLakeFileAppendOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendAsync (content As Stream, offset As Long, Optional options As DataLakeFileAppendOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member AppendAsync : System.IO.Stream * int64 * Azure.Storage.Files.DataLake.Models.DataLakeFileAppendOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.AppendAsync : System.IO.Stream * int64 * Azure.Storage.Files.DataLake.Models.DataLakeFileAppendOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="dataLakeFileClient.AppendAsync (content, offset, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="offset" Type="System.Int64" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.DataLakeFileAppendOptions" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content to upload.
             </param>
        <param name="offset">
             This parameter allows the caller to upload data in parallel and control the order in which it is appended to the file.
             It is required when uploading data to be appended to the file and when flushing previously uploaded data to the file.
             The value must be the position where the data is to be appended. Uploaded data is not immediately flushed, or written, to the file.
             To flush, the previously uploaded data must be contiguous, the position parameter must be specified and equal to the length
             of the file after all data has been written, and there must not be a request entity body included with the request.
             </param>
        <param name="options">
             Optional parameters.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.AppendAsync(System.IO.Stream,System.Int64,Azure.Storage.Files.DataLake.Models.DataLakeFileAppendOptions,System.Threading.CancellationToken)" /> operation uploads data to be appended to a file.  Data can only be appended to a file.
             To apply perviously uploaded data to a file, call Flush Data.
             Append is currently limited to 4000 MB per request.  To upload large files all at once, consider using <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.IO.Stream)" />.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> describing the state
             of the updated file.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; AppendAsync (System.IO.Stream content, long offset, byte[] contentHash = default, string leaseId = default, IProgress&lt;long&gt; progressHandler = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; AppendAsync(class System.IO.Stream content, int64 offset, unsigned int8[] contentHash, string leaseId, class System.IProgress`1&lt;int64&gt; progressHandler, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.AppendAsync(System.IO.Stream,System.Int64,System.Byte[],System.String,System.IProgress{System.Int64},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendAsync (content As Stream, offset As Long, Optional contentHash As Byte() = Nothing, Optional leaseId As String = Nothing, Optional progressHandler As IProgress(Of Long) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member AppendAsync : System.IO.Stream * int64 * byte[] * string * IProgress&lt;int64&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.AppendAsync : System.IO.Stream * int64 * byte[] * string * IProgress&lt;int64&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="dataLakeFileClient.AppendAsync (content, offset, contentHash, leaseId, progressHandler, cancellationToken)" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; AppendAsync (System.IO.Stream content, long offset, byte[] contentHash, string leaseId, IProgress&lt;long&gt; progressHandler, System.Threading.CancellationToken cancellationToken);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendAsync (content As Stream, offset As Long, contentHash As Byte(), leaseId As String, progressHandler As IProgress(Of Long), cancellationToken As CancellationToken) As Task(Of Response)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="contentHash" Type="System.Byte[]" />
        <Parameter Name="leaseId" Type="System.String" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;System.Int64&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content to upload.
             </param>
        <param name="offset">
             This parameter allows the caller to upload data in parallel and control the order in which it is appended to the file.
             It is required when uploading data to be appended to the file and when flushing previously uploaded data to the file.
             The value must be the position where the data is to be appended. Uploaded data is not immediately flushed, or written, to the file.
             To flush, the previously uploaded data must be contiguous, the position parameter must be specified and equal to the length
             of the file after all data has been written, and there must not be a request entity body included with the request.
             </param>
        <param name="contentHash">
             This hash is used to verify the integrity of the request content during transport. When this header is specified,
             the storage service compares the hash of the content that has arrived with this header value. If the two hashes do not match,
             the operation will fail with error code 400 (Bad Request). Note that this MD5 hash is not stored with the file. This header is
             associated with the request content, and not with the stored content of the file itself.
             </param>
        <param name="leaseId">
             Optional lease id.
             </param>
        <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1" /> to provide
             progress updates about data transfers.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.AppendAsync(System.IO.Stream,System.Int64,System.Byte[],System.String,System.IProgress{System.Int64},System.Threading.CancellationToken)" /> operation uploads data to be appended to a file.  Data can only be appended to a file.
             To apply perviously uploaded data to a file, call Flush Data.
             Append is currently limited to 4000 MB per request.  To upload large files all at once, consider using <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.IO.Stream)" />.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> describing the state
             of the updated file.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt; Create (Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt; Create(class Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Create(Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (Optional options As DataLakePathCreateOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PathInfo)" />
      <MemberSignature Language="F#" Value="override this.Create : Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;" Usage="dataLakeFileClient.Create (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">
             Optional parameters.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Create(Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions,System.Threading.CancellationToken)" /> operation creates a file.
             If the file already exists, it will be overwritten.  If you don't intent to overwrite
             an existing file, consider using the <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.CreateIfNotExists(Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions,System.Threading.CancellationToken)" /> API.
            
             For more information, see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/create.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             newly created file.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt; Create (Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, string permissions, string umask, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt; Create(class Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, string permissions, string umask, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Create(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (httpHeaders As PathHttpHeaders, metadata As IDictionary(Of String, String), permissions As String, umask As String, conditions As DataLakeRequestConditions, cancellationToken As CancellationToken) As Response(Of PathInfo)" />
      <MemberSignature Language="F#" Value="override this.Create : Azure.Storage.Files.DataLake.Models.PathHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;" Usage="dataLakeFileClient.Create (httpHeaders, metadata, permissions, umask, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpHeaders" Type="Azure.Storage.Files.DataLake.Models.PathHttpHeaders" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="permissions" Type="System.String" />
        <Parameter Name="umask" Type="System.String" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             new file or directory..
             </param>
        <param name="metadata">
             Optional custom metadata to set for this file or directory.
             </param>
        <param name="permissions">
             Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX access
             permissions for the file owner, the file owning group, and others. Each class may be granted read,
             write, or execute permission. The sticky bit is also supported. Both symbolic (rwxrw-rw-) and 4-digit
             octal notation (e.g. 0766) are supported.
             </param>
        <param name="umask">
             Optional and only valid if Hierarchical Namespace is enabled for the account.
             When creating a file or directory and the parent folder does not have a default ACL,
             the umask restricts the permissions of the file or directory to be created. The resulting
             permission is given by p bitwise-and ^u, where p is the permission and u is the umask. For example,
             if p is 0777 and u is 0057, then the resulting permission is 0720. The default permission is
             0777 for a directory and 0666 for a file. The default umask is 0027. The umask must be specified
             in 4-digit octal notation (e.g. 0766).
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add
             conditions on the creation of this file or directory.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Create(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation creates a file.
             If the file already exists, it will be overwritten.  If you don't intent to overwrite
             an existing file, consider using the <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.CreateIfNotExists(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Threading.CancellationToken)" /> API.
            
             For more information, see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/create.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             newly created file.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; CreateAsync (Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; CreateAsync(class Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.CreateAsync(Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAsync (Optional options As DataLakePathCreateOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PathInfo))" />
      <MemberSignature Language="F#" Value="override this.CreateAsync : Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;" Usage="dataLakeFileClient.CreateAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">
             Optional parameters.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.CreateAsync(Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions,System.Threading.CancellationToken)" /> operation creates a file.
             If the file already exists, it will be overwritten.  If you don't intent to overwrite
             an existing file, consider using the <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.CreateIfNotExistsAsync(Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions,System.Threading.CancellationToken)" /> API.
            
             For more information, see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/create.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             newly created file.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; CreateAsync (Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, string permissions, string umask, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; CreateAsync(class Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, string permissions, string umask, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.CreateAsync(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAsync (httpHeaders As PathHttpHeaders, metadata As IDictionary(Of String, String), permissions As String, umask As String, conditions As DataLakeRequestConditions, cancellationToken As CancellationToken) As Task(Of Response(Of PathInfo))" />
      <MemberSignature Language="F#" Value="override this.CreateAsync : Azure.Storage.Files.DataLake.Models.PathHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;" Usage="dataLakeFileClient.CreateAsync (httpHeaders, metadata, permissions, umask, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpHeaders" Type="Azure.Storage.Files.DataLake.Models.PathHttpHeaders" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="permissions" Type="System.String" />
        <Parameter Name="umask" Type="System.String" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             new file or directory..
             </param>
        <param name="metadata">
             Optional custom metadata to set for this file or directory.
             </param>
        <param name="permissions">
             Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX access
             permissions for the file owner, the file owning group, and others. Each class may be granted read,
             write, or execute permission. The sticky bit is also supported. Both symbolic (rwxrw-rw-) and 4-digit
             octal notation (e.g. 0766) are supported.
             </param>
        <param name="umask">
             Optional and only valid if Hierarchical Namespace is enabled for the account.
             When creating a file or directory and the parent folder does not have a default ACL,
             the umask restricts the permissions of the file or directory to be created. The resulting
             permission is given by p bitwise-and ^u, where p is the permission and u is the umask. For example,
             if p is 0777 and u is 0057, then the resulting permission is 0720. The default permission is
             0777 for a directory and 0666 for a file. The default umask is 0027. The umask must be specified
             in 4-digit octal notation (e.g. 0766).
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add
             conditions on the creation of this file or directory.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.CreateAsync(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation creates a file.
             If the file already exists, it will be overwritten.  If you don't intent to overwrite
             an existing file, consider using the <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.CreateIfNotExistsAsync(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Threading.CancellationToken)" /> API.
            
             For more information, see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/create.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             newly created file.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIfNotExists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt; CreateIfNotExists (Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt; CreateIfNotExists(class Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.CreateIfNotExists(Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIfNotExists (Optional options As DataLakePathCreateOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PathInfo)" />
      <MemberSignature Language="F#" Value="override this.CreateIfNotExists : Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;" Usage="dataLakeFileClient.CreateIfNotExists (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">
             Optional parameters.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.CreateIfNotExists(Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions,System.Threading.CancellationToken)" /> operation creates a file.
             If the file already exists, it is not changed.
            
             For more information, see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/create.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             newly created file.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIfNotExists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt; CreateIfNotExists (Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, string permissions, string umask, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt; CreateIfNotExists(class Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, string permissions, string umask, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.CreateIfNotExists(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIfNotExists (httpHeaders As PathHttpHeaders, metadata As IDictionary(Of String, String), permissions As String, umask As String, cancellationToken As CancellationToken) As Response(Of PathInfo)" />
      <MemberSignature Language="F#" Value="override this.CreateIfNotExists : Azure.Storage.Files.DataLake.Models.PathHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;" Usage="dataLakeFileClient.CreateIfNotExists (httpHeaders, metadata, permissions, umask, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpHeaders" Type="Azure.Storage.Files.DataLake.Models.PathHttpHeaders" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="permissions" Type="System.String" />
        <Parameter Name="umask" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             new file or directory..
             </param>
        <param name="metadata">
             Optional custom metadata to set for this file or directory..
             </param>
        <param name="permissions">
             Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX access
             permissions for the file owner, the file owning group, and others. Each class may be granted read,
             write, or execute permission. The sticky bit is also supported. Both symbolic (rwxrw-rw-) and 4-digit
             octal notation (e.g. 0766) are supported.
             </param>
        <param name="umask">
             Optional and only valid if Hierarchical Namespace is enabled for the account.
             When creating a file or directory and the parent folder does not have a default ACL,
             the umask restricts the permissions of the file or directory to be created. The resulting
             permission is given by p bitwise-and ^u, where p is the permission and u is the umask. For example,
             if p is 0777 and u is 0057, then the resulting permission is 0720. The default permission is
             0777 for a directory and 0666 for a file. The default umask is 0027. The umask must be specified
             in 4-digit octal notation (e.g. 0766).
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.CreateIfNotExists(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Threading.CancellationToken)" /> operation creates a file.
             If the file already exists, it is not changed.
            
             For more information, see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/create.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             newly created file.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIfNotExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; CreateIfNotExistsAsync (Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; CreateIfNotExistsAsync(class Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.CreateIfNotExistsAsync(Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIfNotExistsAsync (Optional options As DataLakePathCreateOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PathInfo))" />
      <MemberSignature Language="F#" Value="override this.CreateIfNotExistsAsync : Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;" Usage="dataLakeFileClient.CreateIfNotExistsAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">
             Optional parameters.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.CreateIfNotExistsAsync(Azure.Storage.Files.DataLake.Models.DataLakePathCreateOptions,System.Threading.CancellationToken)" /> operation creates a file.
             If the file already exists, it is not changed.
            
             For more information, see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/create.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             newly created file.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIfNotExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; CreateIfNotExistsAsync (Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, string permissions, string umask, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; CreateIfNotExistsAsync(class Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, string permissions, string umask, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.CreateIfNotExistsAsync(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIfNotExistsAsync (httpHeaders As PathHttpHeaders, metadata As IDictionary(Of String, String), permissions As String, umask As String, cancellationToken As CancellationToken) As Task(Of Response(Of PathInfo))" />
      <MemberSignature Language="F#" Value="override this.CreateIfNotExistsAsync : Azure.Storage.Files.DataLake.Models.PathHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;" Usage="dataLakeFileClient.CreateIfNotExistsAsync (httpHeaders, metadata, permissions, umask, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpHeaders" Type="Azure.Storage.Files.DataLake.Models.PathHttpHeaders" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="permissions" Type="System.String" />
        <Parameter Name="umask" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the
             new file or directory..
             </param>
        <param name="metadata">
             Optional custom metadata to set for this file or directory..
             </param>
        <param name="permissions">
             Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX access
             permissions for the file owner, the file owning group, and others. Each class may be granted read,
             write, or execute permission. The sticky bit is also supported. Both symbolic (rwxrw-rw-) and 4-digit
             octal notation (e.g. 0766) are supported.
             </param>
        <param name="umask">
             Optional and only valid if Hierarchical Namespace is enabled for the account.
             When creating a file or directory and the parent folder does not have a default ACL,
             the umask restricts the permissions of the file or directory to be created. The resulting
             permission is given by p bitwise-and ^u, where p is the permission and u is the umask. For example,
             if p is 0777 and u is 0057, then the resulting permission is 0720. The default permission is
             0777 for a directory and 0666 for a file. The default umask is 0027. The umask must be specified
             in 4-digit octal notation (e.g. 0766).
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.CreateIfNotExistsAsync(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Threading.CancellationToken)" /> operation creates a file.
             If the file already exists, it is not changed.
            
             For more information, see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/create.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             newly created file.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Delete (Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Delete(class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Delete(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="override this.Delete : Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="dataLakeFileClient.Delete (conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
             deleting this path.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Delete(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation marks the specified path
             deletion. The path is later deleted during
             garbage collection which could take several minutes.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/delete">
             Delete Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> on successfully marking for deletion.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteAsync (Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteAsync(class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.DeleteAsync(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="override this.DeleteAsync : Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="dataLakeFileClient.DeleteAsync (conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
             deleting this path.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.DeleteAsync(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation marks the specified path
             deletion. The path is later deleted during
             garbage collection which could take several minutes.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/delete">
             Delete Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> on successfully marking for deletion.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteIfExists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; DeleteIfExists (Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; DeleteIfExists(class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.DeleteIfExists(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIfExists (Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="override this.DeleteIfExists : Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="dataLakeFileClient.DeleteIfExists (conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
             deleting this path.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.DeleteIfExists(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation marks the specified file
             for deletion, if the file exists. The file is later deleted during
             garbage collection which could take several minutes.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/delete">
             Delete Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> on successfully marking for deletion.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteIfExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; DeleteIfExistsAsync (Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; DeleteIfExistsAsync(class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.DeleteIfExistsAsync(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIfExistsAsync (Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="override this.DeleteIfExistsAsync : Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="dataLakeFileClient.DeleteIfExistsAsync (conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
             deleting this path.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.DeleteIfExistsAsync(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation marks the specified file
             for deletion, if the file exists. The file is later deleted during
             garbage collection which could take several minutes.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/delete">
             Delete Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> on successfully marking for deletion.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt; Flush (long position, bool? retainUncommittedData = default, bool? close = default, Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt; Flush(int64 position, valuetype System.Nullable`1&lt;bool&gt; retainUncommittedData, valuetype System.Nullable`1&lt;bool&gt; close, class Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Flush(System.Int64,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Flush (position As Long, Optional retainUncommittedData As Nullable(Of Boolean) = Nothing, Optional close As Nullable(Of Boolean) = Nothing, Optional httpHeaders As PathHttpHeaders = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PathInfo)" />
      <MemberSignature Language="F#" Value="abstract member Flush : int64 * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Azure.Storage.Files.DataLake.Models.PathHttpHeaders * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&#xA;override this.Flush : int64 * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Azure.Storage.Files.DataLake.Models.PathHttpHeaders * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;" Usage="dataLakeFileClient.Flush (position, retainUncommittedData, close, httpHeaders, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int64" />
        <Parameter Name="retainUncommittedData" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="close" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="httpHeaders" Type="Azure.Storage.Files.DataLake.Models.PathHttpHeaders" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="position">
             This parameter allows the caller to upload data in parallel and control the order in which it is appended to the file.
             It is required when uploading data to be appended to the file and when flushing previously uploaded data to the file.
             The value must be the position where the data is to be appended. Uploaded data is not immediately flushed, or written,
             to the file. To flush, the previously uploaded data must be contiguous, the position parameter must be specified and
             equal to the length of the file after all data has been written, and there must not be a request entity body included
             with the request.
             </param>
        <param name="retainUncommittedData">
             If "true", uncommitted data is retained after the flush operation completes; otherwise, the uncommitted data is deleted
             after the flush operation. The default is false. Data at offsets less than the specified position are written to the
             file when flush succeeds, but this optional parameter allows data after the flush position to be retained for a future
             flush operation.
             </param>
        <param name="close">
             Azure Storage Events allow applications to receive notifications when files change. When Azure Storage Events are enabled,
             a file changed event is raised. This event has a property indicating whether this is the final change to distinguish the
             difference between an intermediate flush to a file stream and the final close of a file stream. The close query parameter
             is valid only when the action is "flush" and change notifications are enabled. If the value of close is "true" and the
             flush operation completes successfully, the service raises a file change notification with a property indicating that
             this is the final update (the file stream has been closed). If "false" a change notification is raised indicating the
             file has changed. The default is false. This query parameter is set to true by the Hadoop ABFS driver to indicate that
             the file stream has been closed."
             </param>
        <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the file.
            </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add
             conditions on the flush of this file.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Flush(System.Int64,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation flushes (writes) previously
             appended data to a file.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             path.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; FlushAsync (long position, bool? retainUncommittedData = default, bool? close = default, Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; FlushAsync(int64 position, valuetype System.Nullable`1&lt;bool&gt; retainUncommittedData, valuetype System.Nullable`1&lt;bool&gt; close, class Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.FlushAsync(System.Int64,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FlushAsync (position As Long, Optional retainUncommittedData As Nullable(Of Boolean) = Nothing, Optional close As Nullable(Of Boolean) = Nothing, Optional httpHeaders As PathHttpHeaders = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PathInfo))" />
      <MemberSignature Language="F#" Value="abstract member FlushAsync : int64 * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Azure.Storage.Files.DataLake.Models.PathHttpHeaders * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;&#xA;override this.FlushAsync : int64 * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Azure.Storage.Files.DataLake.Models.PathHttpHeaders * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;" Usage="dataLakeFileClient.FlushAsync (position, retainUncommittedData, close, httpHeaders, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int64" />
        <Parameter Name="retainUncommittedData" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="close" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="httpHeaders" Type="Azure.Storage.Files.DataLake.Models.PathHttpHeaders" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="position">
             This parameter allows the caller to upload data in parallel and control the order in which it is appended to the file.
             It is required when uploading data to be appended to the file and when flushing previously uploaded data to the file.
             The value must be the position where the data is to be appended. Uploaded data is not immediately flushed, or written,
             to the file. To flush, the previously uploaded data must be contiguous, the position parameter must be specified and
             equal to the length of the file after all data has been written, and there must not be a request entity body included
             with the request.
             </param>
        <param name="retainUncommittedData">
             If "true", uncommitted data is retained after the flush operation completes; otherwise, the uncommitted data is deleted
             after the flush operation. The default is false. Data at offsets less than the specified position are written to the
             file when flush succeeds, but this optional parameter allows data after the flush position to be retained for a future
             flush operation.
             </param>
        <param name="close">
             Azure Storage Events allow applications to receive notifications when files change. When Azure Storage Events are enabled,
             a file changed event is raised. This event has a property indicating whether this is the final change to distinguish the
             difference between an intermediate flush to a file stream and the final close of a file stream. The close query parameter
             is valid only when the action is "flush" and change notifications are enabled. If the value of close is "true" and the
             flush operation completes successfully, the service raises a file change notification with a property indicating that
             this is the final update (the file stream has been closed). If "false" a change notification is raised indicating the
             file has changed. The default is false. This query parameter is set to true by the Hadoop ABFS driver to indicate that
             the file stream has been closed."
             </param>
        <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the file.
            </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add
             conditions on the flush of this file.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.FlushAsync(System.Int64,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation flushes (writes) previously
             appended data to a file.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             path.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public override Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathAccessControl&gt; GetAccessControl (bool? userPrincipalName = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathAccessControl&gt; GetAccessControl(valuetype System.Nullable`1&lt;bool&gt; userPrincipalName, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.GetAccessControl(System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAccessControl (Optional userPrincipalName As Nullable(Of Boolean) = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PathAccessControl)" />
      <MemberSignature Language="F#" Value="override this.GetAccessControl : Nullable&lt;bool&gt; * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathAccessControl&gt;" Usage="dataLakeFileClient.GetAccessControl (userPrincipalName, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathAccessControl&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userPrincipalName" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userPrincipalName">
             Optional.Valid only when Hierarchical Namespace is enabled for the account.If "true",
             the user identity values returned in the x-ms-owner, x-ms-group, and x-ms-acl response
             headers will be transformed from Azure Active Directory Object IDs to User Principal Names.
             If "false", the values will be returned as Azure Active Directory Object IDs.The default
             value is false. Note that group and application Object IDs are not translated because they
             do not have unique friendly names.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add
             conditions on getting the path's access control.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.GetAccessControl(System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation returns the
             access control data for a path.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/getproperties">
             Get Properties</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             path's access control.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControlAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathAccessControl&gt;&gt; GetAccessControlAsync (bool? userPrincipalName = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathAccessControl&gt;&gt; GetAccessControlAsync(valuetype System.Nullable`1&lt;bool&gt; userPrincipalName, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.GetAccessControlAsync(System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAccessControlAsync (Optional userPrincipalName As Nullable(Of Boolean) = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PathAccessControl))" />
      <MemberSignature Language="F#" Value="override this.GetAccessControlAsync : Nullable&lt;bool&gt; * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathAccessControl&gt;&gt;" Usage="dataLakeFileClient.GetAccessControlAsync (userPrincipalName, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathAccessControl&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userPrincipalName" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userPrincipalName">
             Optional.Valid only when Hierarchical Namespace is enabled for the account.If "true",
             the user identity values returned in the x-ms-owner, x-ms-group, and x-ms-acl response
             headers will be transformed from Azure Active Directory Object IDs to User Principal Names.
             If "false", the values will be returned as Azure Active Directory Object IDs.The default
             value is false. Note that group and application Object IDs are not translated because they
             do not have unique friendly names.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add
             conditions on getting the path's access control.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.GetAccessControlAsync(System.Nullable{System.Boolean},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation returns the
             access control data for a path.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/getproperties">
             Get Properties</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             path's access control.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathProperties&gt; GetProperties (Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathProperties&gt; GetProperties(class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.GetProperties(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperties (Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PathProperties)" />
      <MemberSignature Language="F#" Value="override this.GetProperties : Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathProperties&gt;" Usage="dataLakeFileClient.GetProperties (conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add
             conditions on getting the path's properties.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.GetProperties(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation returns all
             user-defined metadata, standard HTTP properties, and system
             properties for the path. It does not return the content of the
             path.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-blob-properties">
             Get Properties</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             path's properties.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathProperties&gt;&gt; GetPropertiesAsync (Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathProperties&gt;&gt; GetPropertiesAsync(class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.GetPropertiesAsync(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPropertiesAsync (Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PathProperties))" />
      <MemberSignature Language="F#" Value="override this.GetPropertiesAsync : Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathProperties&gt;&gt;" Usage="dataLakeFileClient.GetPropertiesAsync (conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathProperties&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add
             conditions on getting the path's properties.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.GetPropertiesAsync(Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation returns all
             user-defined metadata, standard HTTP properties, and system
             properties for the path. It does not return the content of the
             path.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-blob-properties">
             Get Properties</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             paths's properties.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxUploadBytes">
      <MemberSignature Language="C#" Value="public virtual int MaxUploadBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxUploadBytes" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Files.DataLake.DataLakeFileClient.MaxUploadBytes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaxUploadBytes As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxUploadBytes : int" Usage="Azure.Storage.Files.DataLake.DataLakeFileClient.MaxUploadBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the maximum number of bytes that can be sent in each append call in
            to <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.IO.Stream,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.IProgress{System.Int64},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />.
            Supported value is now larger than <see cref="F:System.Int32.MaxValue" />; please use
            <see cref="P:Azure.Storage.Files.DataLake.DataLakeFileClient.MaxUploadLongBytes" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxUploadLongBytes">
      <MemberSignature Language="C#" Value="public virtual long MaxUploadLongBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxUploadLongBytes" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Files.DataLake.DataLakeFileClient.MaxUploadLongBytes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaxUploadLongBytes As Long" />
      <MemberSignature Language="F#" Value="member this.MaxUploadLongBytes : int64" Usage="Azure.Storage.Files.DataLake.DataLakeFileClient.MaxUploadLongBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the maximum number of bytes that can be sent in each append call in
            <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.IO.Stream,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.IProgress{System.Int64},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenRead">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream OpenRead (Azure.Storage.Files.DataLake.Models.DataLakeOpenReadOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream OpenRead(class Azure.Storage.Files.DataLake.Models.DataLakeOpenReadOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.OpenRead(Azure.Storage.Files.DataLake.Models.DataLakeOpenReadOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OpenRead (options As DataLakeOpenReadOptions, Optional cancellationToken As CancellationToken = Nothing) As Stream" />
      <MemberSignature Language="F#" Value="abstract member OpenRead : Azure.Storage.Files.DataLake.Models.DataLakeOpenReadOptions * System.Threading.CancellationToken -&gt; System.IO.Stream&#xA;override this.OpenRead : Azure.Storage.Files.DataLake.Models.DataLakeOpenReadOptions * System.Threading.CancellationToken -&gt; System.IO.Stream" Usage="dataLakeFileClient.OpenRead (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.DataLakeOpenReadOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">
            Optional parameters.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            Opens a stream for reading from the file.  The stream will only download
            the file as the stream is read from.
            </summary>
        <returns>
            Returns a stream that will download the file as the stream
            is read from.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenRead">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream OpenRead (bool allowfileModifications, long position = 0, int? bufferSize = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream OpenRead(bool allowfileModifications, int64 position, valuetype System.Nullable`1&lt;int32&gt; bufferSize, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.OpenRead(System.Boolean,System.Int64,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OpenRead (allowfileModifications As Boolean, Optional position As Long = 0, Optional bufferSize As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Stream" />
      <MemberSignature Language="F#" Value="abstract member OpenRead : bool * int64 * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.IO.Stream&#xA;override this.OpenRead : bool * int64 * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.IO.Stream" Usage="dataLakeFileClient.OpenRead (allowfileModifications, position, bufferSize, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowfileModifications" Type="System.Boolean" />
        <Parameter Name="position" Type="System.Int64" />
        <Parameter Name="bufferSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="allowfileModifications">
            If true, you can continue streaming a blob even if it has been modified.
            </param>
        <param name="position">
            The position within the file to begin the stream.
            Defaults to the beginning of the file.
            </param>
        <param name="bufferSize">
            The buffer size to use when the stream downloads parts
            of the file.  Defaults to 1 MB.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            Opens a stream for reading from the file.  The stream will only download
            the file as the stream is read from.
            </summary>
        <returns>
            Returns a stream that will download the file as the stream
            is read from.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenRead">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream OpenRead (long position = 0, int? bufferSize = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream OpenRead(int64 position, valuetype System.Nullable`1&lt;int32&gt; bufferSize, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.OpenRead(System.Int64,System.Nullable{System.Int32},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OpenRead (Optional position As Long = 0, Optional bufferSize As Nullable(Of Integer) = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Stream" />
      <MemberSignature Language="F#" Value="abstract member OpenRead : int64 * Nullable&lt;int&gt; * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.IO.Stream&#xA;override this.OpenRead : int64 * Nullable&lt;int&gt; * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.IO.Stream" Usage="dataLakeFileClient.OpenRead (position, bufferSize, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int64" />
        <Parameter Name="bufferSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="position">
            The position within the file to begin the stream.
            Defaults to the beginning of the file.
            </param>
        <param name="bufferSize">
            The buffer size to use when the stream downloads parts
            of the file.  Defaults to 1 MB.
            </param>
        <param name="conditions">
            Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
            the download of this file.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            Opens a stream for reading from the file.  The stream will only download
            the file as the stream is read from.
            </summary>
        <returns>
            Returns a stream that will download the file as the stream
            is read from.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenReadAsync (Azure.Storage.Files.DataLake.Models.DataLakeOpenReadOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenReadAsync(class Azure.Storage.Files.DataLake.Models.DataLakeOpenReadOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.OpenReadAsync(Azure.Storage.Files.DataLake.Models.DataLakeOpenReadOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OpenReadAsync (options As DataLakeOpenReadOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Stream)" />
      <MemberSignature Language="F#" Value="abstract member OpenReadAsync : Azure.Storage.Files.DataLake.Models.DataLakeOpenReadOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.OpenReadAsync : Azure.Storage.Files.DataLake.Models.DataLakeOpenReadOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="dataLakeFileClient.OpenReadAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.DataLakeOpenReadOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">
            Optional parameters.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            Opens a stream for reading from the file.  The stream will only download
            the file as the stream is read from.
            </summary>
        <returns>
            Returns a stream that will download the file as the stream
            is read from.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenReadAsync (bool allowfileModifications, long position = 0, int? bufferSize = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenReadAsync(bool allowfileModifications, int64 position, valuetype System.Nullable`1&lt;int32&gt; bufferSize, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.OpenReadAsync(System.Boolean,System.Int64,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OpenReadAsync (allowfileModifications As Boolean, Optional position As Long = 0, Optional bufferSize As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Stream)" />
      <MemberSignature Language="F#" Value="abstract member OpenReadAsync : bool * int64 * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.OpenReadAsync : bool * int64 * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="dataLakeFileClient.OpenReadAsync (allowfileModifications, position, bufferSize, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowfileModifications" Type="System.Boolean" />
        <Parameter Name="position" Type="System.Int64" />
        <Parameter Name="bufferSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="allowfileModifications">
            If true, you can continue streaming a blob even if it has been modified.
            </param>
        <param name="position">
            The position within the file to begin the stream.
            Defaults to the beginning of the file.
            </param>
        <param name="bufferSize">
            The buffer size to use when the stream downloads parts
            of the file.  Defaults to 1 MB.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            Opens a stream for reading from the file.  The stream will only download
            the file as the stream is read from.
            </summary>
        <returns>
            Returns a stream that will download the file as the stream
            is read from.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenReadAsync (long position = 0, int? bufferSize = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenReadAsync(int64 position, valuetype System.Nullable`1&lt;int32&gt; bufferSize, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.OpenReadAsync(System.Int64,System.Nullable{System.Int32},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OpenReadAsync (Optional position As Long = 0, Optional bufferSize As Nullable(Of Integer) = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Stream)" />
      <MemberSignature Language="F#" Value="abstract member OpenReadAsync : int64 * Nullable&lt;int&gt; * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.OpenReadAsync : int64 * Nullable&lt;int&gt; * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="dataLakeFileClient.OpenReadAsync (position, bufferSize, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int64" />
        <Parameter Name="bufferSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="position">
            The position within the file to begin the stream.
            Defaults to the beginning of the file.
            </param>
        <param name="bufferSize">
            The buffer size to use when the stream downloads parts
            of the file.  Defaults to 1 MB.
            </param>
        <param name="conditions">
            Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
            the download of the file.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            Opens a stream for reading from the file.  The stream will only download
            the file as the stream is read from.
            </summary>
        <returns>
            Returns a stream that will download the file as the stream
            is read from.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream OpenWrite (bool overwrite, Azure.Storage.Files.DataLake.Models.DataLakeFileOpenWriteOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream OpenWrite(bool overwrite, class Azure.Storage.Files.DataLake.Models.DataLakeFileOpenWriteOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.OpenWrite(System.Boolean,Azure.Storage.Files.DataLake.Models.DataLakeFileOpenWriteOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OpenWrite (overwrite As Boolean, Optional options As DataLakeFileOpenWriteOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Stream" />
      <MemberSignature Language="F#" Value="abstract member OpenWrite : bool * Azure.Storage.Files.DataLake.Models.DataLakeFileOpenWriteOptions * System.Threading.CancellationToken -&gt; System.IO.Stream&#xA;override this.OpenWrite : bool * Azure.Storage.Files.DataLake.Models.DataLakeFileOpenWriteOptions * System.Threading.CancellationToken -&gt; System.IO.Stream" Usage="dataLakeFileClient.OpenWrite (overwrite, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.DataLakeFileOpenWriteOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="overwrite">
            Whether an existing blob should be deleted and recreated.
            </param>
        <param name="options">
            Optional parameters.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            Opens a stream for writing to the file.
            </summary>
        <returns>
            A stream to write to the file.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteAsync (bool overwrite, Azure.Storage.Files.DataLake.Models.DataLakeFileOpenWriteOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteAsync(bool overwrite, class Azure.Storage.Files.DataLake.Models.DataLakeFileOpenWriteOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.OpenWriteAsync(System.Boolean,Azure.Storage.Files.DataLake.Models.DataLakeFileOpenWriteOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OpenWriteAsync (overwrite As Boolean, Optional options As DataLakeFileOpenWriteOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Stream)" />
      <MemberSignature Language="F#" Value="abstract member OpenWriteAsync : bool * Azure.Storage.Files.DataLake.Models.DataLakeFileOpenWriteOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.OpenWriteAsync : bool * Azure.Storage.Files.DataLake.Models.DataLakeFileOpenWriteOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="dataLakeFileClient.OpenWriteAsync (overwrite, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.DataLakeFileOpenWriteOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="overwrite">
            Whether an existing blob should be deleted and recreated.
            </param>
        <param name="options">
            Optional parameters.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            Opens a stream for writing to the file..
            </summary>
        <returns>
            A stream to write to the file.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt; Query (string querySqlExpression, Azure.Storage.Files.DataLake.Models.DataLakeQueryOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt; Query(string querySqlExpression, class Azure.Storage.Files.DataLake.Models.DataLakeQueryOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Query(System.String,Azure.Storage.Files.DataLake.Models.DataLakeQueryOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Query (querySqlExpression As String, Optional options As DataLakeQueryOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of FileDownloadInfo)" />
      <MemberSignature Language="F#" Value="abstract member Query : string * Azure.Storage.Files.DataLake.Models.DataLakeQueryOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&#xA;override this.Query : string * Azure.Storage.Files.DataLake.Models.DataLakeQueryOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;" Usage="dataLakeFileClient.Query (querySqlExpression, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="querySqlExpression" Type="System.String" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.DataLakeQueryOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="querySqlExpression">
            The query. For a sample SQL query expression, see <see href="https://docs.microsoft.com/en-us/azure/storage/blobs/data-lake-storage-query-acceleration-how-to?tabs=dotnet%2Cpowershell#retrieve-data-by-using-a-filter">this </see>article.
            </param>
        <param name="options">
            Optional parameters.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Query(System.String,Azure.Storage.Files.DataLake.Models.DataLakeQueryOptions,System.Threading.CancellationToken)" /> API returns the
            result of a query against the file.
            </summary>
        <returns>
            A <see cref="T:Azure.Response`1" />.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&gt; QueryAsync (string querySqlExpression, Azure.Storage.Files.DataLake.Models.DataLakeQueryOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&gt; QueryAsync(string querySqlExpression, class Azure.Storage.Files.DataLake.Models.DataLakeQueryOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.QueryAsync(System.String,Azure.Storage.Files.DataLake.Models.DataLakeQueryOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QueryAsync (querySqlExpression As String, Optional options As DataLakeQueryOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of FileDownloadInfo))" />
      <MemberSignature Language="F#" Value="abstract member QueryAsync : string * Azure.Storage.Files.DataLake.Models.DataLakeQueryOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&gt;&#xA;override this.QueryAsync : string * Azure.Storage.Files.DataLake.Models.DataLakeQueryOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&gt;" Usage="dataLakeFileClient.QueryAsync (querySqlExpression, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="querySqlExpression" Type="System.String" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.DataLakeQueryOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="querySqlExpression">
            The query. For a sample SQL query expression, see <see href="https://docs.microsoft.com/en-us/azure/storage/blobs/data-lake-storage-query-acceleration-how-to?tabs=dotnet%2Cpowershell#retrieve-data-by-using-a-filter">this </see>article.
            </param>
        <param name="options">
            Optional parameters.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Query(System.String,Azure.Storage.Files.DataLake.Models.DataLakeQueryOptions,System.Threading.CancellationToken)" /> API returns the
            result of a query against the file.
            </summary>
        <returns>
            A <see cref="T:Azure.Response`1" />.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt; Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt; Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read () As Response(Of FileDownloadInfo)" />
      <MemberSignature Language="F#" Value="abstract member Read : unit -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&#xA;override this.Read : unit -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;" Usage="dataLakeFileClient.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Read" /> operation downloads a file from
             the service, including its metadata and properties.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-blob">
             Get Blob</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             downloaded file.  <see cref="P:Azure.Storage.Files.DataLake.Models.FileDownloadInfo.Content" /> contains
             the blob's data.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt; Read (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt; Read(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Read(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (Optional cancellationToken As CancellationToken = Nothing) As Response(Of FileDownloadInfo)" />
      <MemberSignature Language="F#" Value="abstract member Read : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&#xA;override this.Read : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;" Usage="dataLakeFileClient.Read cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Read(System.Threading.CancellationToken)" /> operation downloads a file from
             the service, including its metadata and properties.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-blob">
             Get Blob</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             downloaded file.  <see cref="P:Azure.Storage.Files.DataLake.Models.FileDownloadInfo.Content" /> contains
             the blob's data.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt; Read (Azure.Storage.Files.DataLake.Models.DataLakeFileReadOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt; Read(class Azure.Storage.Files.DataLake.Models.DataLakeFileReadOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Read(Azure.Storage.Files.DataLake.Models.DataLakeFileReadOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (Optional options As DataLakeFileReadOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of FileDownloadInfo)" />
      <MemberSignature Language="F#" Value="abstract member Read : Azure.Storage.Files.DataLake.Models.DataLakeFileReadOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&#xA;override this.Read : Azure.Storage.Files.DataLake.Models.DataLakeFileReadOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;" Usage="dataLakeFileClient.Read (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.DataLakeFileReadOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">
             Optional parameters.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Read(Azure.HttpRange,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Boolean,System.Threading.CancellationToken)" />
             operation downloads a file from the service, including its metadata
             and properties.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-blob">
             Get Blob</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             downloaded file.  <see cref="P:Azure.Storage.Files.DataLake.Models.FileDownloadInfo.Content" /> contains
             the file's data.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt; Read (Azure.HttpRange range = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, bool rangeGetContentHash = false, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt; Read(valuetype Azure.HttpRange range, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, bool rangeGetContentHash, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Read(Azure.HttpRange,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (Optional range As HttpRange = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional rangeGetContentHash As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Response(Of FileDownloadInfo)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member Read : Azure.HttpRange * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&#xA;override this.Read : Azure.HttpRange * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;" Usage="dataLakeFileClient.Read (range, conditions, rangeGetContentHash, cancellationToken)" />
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt; Read (Azure.HttpRange range, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, bool rangeGetContentHash, System.Threading.CancellationToken cancellationToken);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (range As HttpRange, conditions As DataLakeRequestConditions, rangeGetContentHash As Boolean, cancellationToken As CancellationToken) As Response(Of FileDownloadInfo)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Azure.HttpRange" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="rangeGetContentHash" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="range">
             If provided, only donwload the bytes of the file in the specified
             range.  If not provided, download the entire file.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
             donwloading this file.
             </param>
        <param name="rangeGetContentHash">
             When set to true and specified together with the <paramref name="range" />,
             the service returns the MD5 hash for the range, as long as the
             range is less than or equal to 4 MB in size.  If this value is
             specified without <paramref name="range" /> or set to true when the
             range exceeds 4 MB in size, a <see cref="T:Azure.RequestFailedException" />
             is thrown.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Read(Azure.HttpRange,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Boolean,System.Threading.CancellationToken)" />
             operation downloads a file from the service, including its metadata
             and properties.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-blob">
             Get Blob</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             downloaded file.  <see cref="P:Azure.Storage.Files.DataLake.Models.FileDownloadInfo.Content" /> contains
             the file's data.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&gt; ReadAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&gt; ReadAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadAsync () As Task(Of Response(Of FileDownloadInfo))" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : unit -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&gt;&#xA;override this.ReadAsync : unit -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&gt;" Usage="dataLakeFileClient.ReadAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadAsync" /> operation downloads a file from
             the service, including its metadata and properties.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-blob">
             Get Blob</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             downloaded file.  <see cref="P:Azure.Storage.Files.DataLake.Models.FileDownloadInfo.Content" /> contains
             the file's data.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&gt; ReadAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&gt; ReadAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of FileDownloadInfo))" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&gt;&#xA;override this.ReadAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&gt;" Usage="dataLakeFileClient.ReadAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadAsync(System.Threading.CancellationToken)" /> operation downloads a file from
             the service, including its metadata and properties.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-blob">
             Get Blob</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             downloaded file.  <see cref="P:Azure.Storage.Files.DataLake.Models.FileDownloadInfo.Content" /> contains
             the file's data.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&gt; ReadAsync (Azure.Storage.Files.DataLake.Models.DataLakeFileReadOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&gt; ReadAsync(class Azure.Storage.Files.DataLake.Models.DataLakeFileReadOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadAsync(Azure.Storage.Files.DataLake.Models.DataLakeFileReadOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadAsync (Optional options As DataLakeFileReadOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of FileDownloadInfo))" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : Azure.Storage.Files.DataLake.Models.DataLakeFileReadOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&gt;&#xA;override this.ReadAsync : Azure.Storage.Files.DataLake.Models.DataLakeFileReadOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&gt;" Usage="dataLakeFileClient.ReadAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.DataLakeFileReadOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">
             Optional parameters.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadAsync(Azure.HttpRange,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Boolean,System.Threading.CancellationToken)" />
             operation downloads a file from the service, including its metadata
             and properties.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-blob">
             Get Blob</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             downloaded file.  <see cref="P:Azure.Storage.Files.DataLake.Models.FileDownloadInfo.Content" /> contains
             the file's data.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&gt; ReadAsync (Azure.HttpRange range = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, bool rangeGetContentHash = false, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&gt; ReadAsync(valuetype Azure.HttpRange range, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, bool rangeGetContentHash, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadAsync(Azure.HttpRange,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadAsync (Optional range As HttpRange = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional rangeGetContentHash As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of FileDownloadInfo))" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : Azure.HttpRange * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&gt;&#xA;override this.ReadAsync : Azure.HttpRange * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&gt;" Usage="dataLakeFileClient.ReadAsync (range, conditions, rangeGetContentHash, cancellationToken)" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&gt; ReadAsync (Azure.HttpRange range, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, bool rangeGetContentHash, System.Threading.CancellationToken cancellationToken);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadAsync (range As HttpRange, conditions As DataLakeRequestConditions, rangeGetContentHash As Boolean, cancellationToken As CancellationToken) As Task(Of Response(Of FileDownloadInfo))" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.FileDownloadInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Azure.HttpRange" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="rangeGetContentHash" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="range">
             If provided, only donwload the bytes of the file in the specified
             range.  If not provided, download the entire file.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
             donwloading this file.
             </param>
        <param name="rangeGetContentHash">
             When set to true and specified together with the <paramref name="range" />,
             the service returns the MD5 hash for the range, as long as the
             range is less than or equal to 4 MB in size.  If this value is
             specified without <paramref name="range" /> or set to true when the
             range exceeds 4 MB in size, a <see cref="T:Azure.RequestFailedException" />
             is thrown.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadAsync(Azure.HttpRange,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Boolean,System.Threading.CancellationToken)" />
             operation downloads a file from the service, including its metadata
             and properties.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-blob">
             Get Blob</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             downloaded file.  <see cref="P:Azure.Storage.Files.DataLake.Models.FileDownloadInfo.Content" /> contains
             the file's data.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadTo">
      <MemberSignature Language="C#" Value="public virtual Azure.Response ReadTo (System.IO.Stream destination, Azure.Storage.Files.DataLake.Models.DataLakeFileReadToOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response ReadTo(class System.IO.Stream destination, class Azure.Storage.Files.DataLake.Models.DataLakeFileReadToOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadTo(System.IO.Stream,Azure.Storage.Files.DataLake.Models.DataLakeFileReadToOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadTo (destination As Stream, Optional options As DataLakeFileReadToOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member ReadTo : System.IO.Stream * Azure.Storage.Files.DataLake.Models.DataLakeFileReadToOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.ReadTo : System.IO.Stream * Azure.Storage.Files.DataLake.Models.DataLakeFileReadToOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="dataLakeFileClient.ReadTo (destination, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.DataLakeFileReadToOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="destination">
            Destination stream for writing read contents.
            </param>
        <param name="options">
            Options for reading this blob.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadTo(System.IO.Stream,Azure.Storage.Files.DataLake.Models.DataLakeFileReadToOptions,System.Threading.CancellationToken)" />
            operation downloads an entire file using parallel requests,
            and writes the content to the provided stream.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadTo">
      <MemberSignature Language="C#" Value="public virtual Azure.Response ReadTo (string path, Azure.Storage.Files.DataLake.Models.DataLakeFileReadToOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response ReadTo(string path, class Azure.Storage.Files.DataLake.Models.DataLakeFileReadToOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadTo(System.String,Azure.Storage.Files.DataLake.Models.DataLakeFileReadToOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadTo (path As String, Optional options As DataLakeFileReadToOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member ReadTo : string * Azure.Storage.Files.DataLake.Models.DataLakeFileReadToOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.ReadTo : string * Azure.Storage.Files.DataLake.Models.DataLakeFileReadToOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="dataLakeFileClient.ReadTo (path, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.DataLakeFileReadToOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="path">
            File path to write read contents to.
            </param>
        <param name="options">
            Options for reading this blob.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadTo(System.String,Azure.Storage.Files.DataLake.Models.DataLakeFileReadToOptions,System.Threading.CancellationToken)" />
            operation downloads an entire file using parallel requests,
            and writes the content to the provided file path.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadTo">
      <MemberSignature Language="C#" Value="public virtual Azure.Response ReadTo (System.IO.Stream destination, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, Azure.Storage.StorageTransferOptions transferOptions = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response ReadTo(class System.IO.Stream destination, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype Azure.Storage.StorageTransferOptions transferOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadTo(System.IO.Stream,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadTo (destination As Stream, Optional conditions As DataLakeRequestConditions = Nothing, Optional transferOptions As StorageTransferOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member ReadTo : System.IO.Stream * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.ReadTo : System.IO.Stream * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="dataLakeFileClient.ReadTo (destination, conditions, transferOptions, cancellationToken)" />
      <MemberSignature Language="C#" Value="public virtual Azure.Response ReadTo (System.IO.Stream destination, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, Azure.Storage.StorageTransferOptions transferOptions, System.Threading.CancellationToken cancellationToken);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadTo (destination As Stream, conditions As DataLakeRequestConditions, transferOptions As StorageTransferOptions, cancellationToken As CancellationToken) As Response" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="transferOptions" Type="Azure.Storage.StorageTransferOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="destination">
            A <see cref="T:System.IO.Stream" /> to write the downloaded content to.
            </param>
        <param name="conditions">
            Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
            the download of this file.
            </param>
        <param name="transferOptions">
            Optional <see cref="T:Azure.Storage.StorageTransferOptions" /> to configure
            parallel transfer behavior.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadTo(System.IO.Stream,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
            operation downloads an entire file using parallel requests,
            and writes the content to <paramref name="destination" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadTo">
      <MemberSignature Language="C#" Value="public virtual Azure.Response ReadTo (string path, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, Azure.Storage.StorageTransferOptions transferOptions = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response ReadTo(string path, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype Azure.Storage.StorageTransferOptions transferOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadTo(System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadTo (path As String, Optional conditions As DataLakeRequestConditions = Nothing, Optional transferOptions As StorageTransferOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member ReadTo : string * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.ReadTo : string * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="dataLakeFileClient.ReadTo (path, conditions, transferOptions, cancellationToken)" />
      <MemberSignature Language="C#" Value="public virtual Azure.Response ReadTo (string path, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, Azure.Storage.StorageTransferOptions transferOptions, System.Threading.CancellationToken cancellationToken);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadTo (path As String, conditions As DataLakeRequestConditions, transferOptions As StorageTransferOptions, cancellationToken As CancellationToken) As Response" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="transferOptions" Type="Azure.Storage.StorageTransferOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">
            A file path to write the downloaded content to.
            </param>
        <param name="conditions">
            Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
            the download of this file.
            </param>
        <param name="transferOptions">
            Optional <see cref="T:Azure.Storage.StorageTransferOptions" /> to configure
            parallel transfer behavior.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadTo(System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
            operation downloads an entire file using parallel requests,
            and writes the content to <paramref name="path" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; ReadToAsync (System.IO.Stream destination, Azure.Storage.Files.DataLake.Models.DataLakeFileReadToOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; ReadToAsync(class System.IO.Stream destination, class Azure.Storage.Files.DataLake.Models.DataLakeFileReadToOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadToAsync(System.IO.Stream,Azure.Storage.Files.DataLake.Models.DataLakeFileReadToOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToAsync (destination As Stream, Optional options As DataLakeFileReadToOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member ReadToAsync : System.IO.Stream * Azure.Storage.Files.DataLake.Models.DataLakeFileReadToOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.ReadToAsync : System.IO.Stream * Azure.Storage.Files.DataLake.Models.DataLakeFileReadToOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="dataLakeFileClient.ReadToAsync (destination, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.DataLakeFileReadToOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="destination">
            Stream to write read contents to.
            </param>
        <param name="options">
            Options for reading this blob.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadToAsync(System.IO.Stream,Azure.Storage.Files.DataLake.Models.DataLakeFileReadToOptions,System.Threading.CancellationToken)" />
            operation downloads an entire file using parallel requests,
            and writes the content to the provided destination stream.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; ReadToAsync (string path, Azure.Storage.Files.DataLake.Models.DataLakeFileReadToOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; ReadToAsync(string path, class Azure.Storage.Files.DataLake.Models.DataLakeFileReadToOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadToAsync(System.String,Azure.Storage.Files.DataLake.Models.DataLakeFileReadToOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToAsync (path As String, Optional options As DataLakeFileReadToOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member ReadToAsync : string * Azure.Storage.Files.DataLake.Models.DataLakeFileReadToOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.ReadToAsync : string * Azure.Storage.Files.DataLake.Models.DataLakeFileReadToOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="dataLakeFileClient.ReadToAsync (path, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.DataLakeFileReadToOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="path">
            File path to write the read contents to.
            </param>
        <param name="options">
            Options for reading this blob.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadToAsync(System.String,Azure.Storage.Files.DataLake.Models.DataLakeFileReadToOptions,System.Threading.CancellationToken)" />
            operation downloads an entire file using parallel requests,
            and writes the content to the provided file path.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; ReadToAsync (System.IO.Stream destination, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, Azure.Storage.StorageTransferOptions transferOptions = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; ReadToAsync(class System.IO.Stream destination, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype Azure.Storage.StorageTransferOptions transferOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadToAsync(System.IO.Stream,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToAsync (destination As Stream, Optional conditions As DataLakeRequestConditions = Nothing, Optional transferOptions As StorageTransferOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member ReadToAsync : System.IO.Stream * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.ReadToAsync : System.IO.Stream * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="dataLakeFileClient.ReadToAsync (destination, conditions, transferOptions, cancellationToken)" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; ReadToAsync (System.IO.Stream destination, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, Azure.Storage.StorageTransferOptions transferOptions, System.Threading.CancellationToken cancellationToken);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToAsync (destination As Stream, conditions As DataLakeRequestConditions, transferOptions As StorageTransferOptions, cancellationToken As CancellationToken) As Task(Of Response)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="transferOptions" Type="Azure.Storage.StorageTransferOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="destination">
            A <see cref="T:System.IO.Stream" /> to write the downloaded content to.
            </param>
        <param name="conditions">
            Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
            the download of this file.
            </param>
        <param name="transferOptions">
            Optional <see cref="T:Azure.Storage.StorageTransferOptions" /> to configure
            parallel transfer behavior.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadToAsync(System.IO.Stream,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
            operation downloads an entire file using parallel requests,
            and writes the content to <paramref name="destination" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; ReadToAsync (string path, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, Azure.Storage.StorageTransferOptions transferOptions = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; ReadToAsync(string path, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype Azure.Storage.StorageTransferOptions transferOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadToAsync(System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToAsync (path As String, Optional conditions As DataLakeRequestConditions = Nothing, Optional transferOptions As StorageTransferOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member ReadToAsync : string * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.ReadToAsync : string * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="dataLakeFileClient.ReadToAsync (path, conditions, transferOptions, cancellationToken)" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; ReadToAsync (string path, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, Azure.Storage.StorageTransferOptions transferOptions, System.Threading.CancellationToken cancellationToken);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToAsync (path As String, conditions As DataLakeRequestConditions, transferOptions As StorageTransferOptions, cancellationToken As CancellationToken) As Task(Of Response)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="transferOptions" Type="Azure.Storage.StorageTransferOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">
            A file path to write the downloaded content to.
            </param>
        <param name="conditions">
            Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
            the download of this file.
            </param>
        <param name="transferOptions">
            Optional <see cref="T:Azure.Storage.StorageTransferOptions" /> to configure
            parallel transfer behavior.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ReadToAsync(System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
            operation downloads an entire file using parallel requests,
            and writes the content to <paramref name="path" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rename">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.DataLakeFileClient&gt; Rename (string destinationPath, string destinationFileSystem = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions sourceConditions = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions destinationConditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.DataLakeFileClient&gt; Rename(string destinationPath, string destinationFileSystem, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions sourceConditions, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions destinationConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Rename(System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Rename (destinationPath As String, Optional destinationFileSystem As String = Nothing, Optional sourceConditions As DataLakeRequestConditions = Nothing, Optional destinationConditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataLakeFileClient)" />
      <MemberSignature Language="F#" Value="override this.Rename : string * string * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.DataLakeFileClient&gt;" Usage="dataLakeFileClient.Rename (destinationPath, destinationFileSystem, sourceConditions, destinationConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.DataLakeFileClient&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destinationPath" Type="System.String" />
        <Parameter Name="destinationFileSystem" Type="System.String" />
        <Parameter Name="sourceConditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="destinationConditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="destinationPath">
             The destination path to rename the path to.
             </param>
        <param name="destinationFileSystem">
             Optional destination file system.  If null, path will be renamed within the
             current file system.
             </param>
        <param name="sourceConditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add
             conditions on the source on the creation of this file or directory.
             </param>
        <param name="destinationConditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add
             conditions on the creation of this file or directory.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Rename(System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation renames a Directory.
            
             For more information, see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/create.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             newly created file.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenameAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.DataLakeFileClient&gt;&gt; RenameAsync (string destinationPath, string destinationFileSystem = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions sourceConditions = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions destinationConditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.DataLakeFileClient&gt;&gt; RenameAsync(string destinationPath, string destinationFileSystem, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions sourceConditions, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions destinationConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.RenameAsync(System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RenameAsync (destinationPath As String, Optional destinationFileSystem As String = Nothing, Optional sourceConditions As DataLakeRequestConditions = Nothing, Optional destinationConditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataLakeFileClient))" />
      <MemberSignature Language="F#" Value="override this.RenameAsync : string * string * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.DataLakeFileClient&gt;&gt;" Usage="dataLakeFileClient.RenameAsync (destinationPath, destinationFileSystem, sourceConditions, destinationConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.DataLakeFileClient&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destinationPath" Type="System.String" />
        <Parameter Name="destinationFileSystem" Type="System.String" />
        <Parameter Name="sourceConditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="destinationConditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="destinationPath">
             The destination path to rename the path to.
             </param>
        <param name="destinationFileSystem">
             Optional destination file system.  If null, path will be renamed within the
             current file system.
             </param>
        <param name="destinationConditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add
             conditions on the creation of this file or directory.
             </param>
        <param name="sourceConditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add
             conditions on the source on the creation of this file or directory.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.RenameAsync(System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation renames a file or directory.
            
             For more information, see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/create.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             newly created file.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleDeletion">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt; ScheduleDeletion (Azure.Storage.Files.DataLake.Models.DataLakeFileScheduleDeletionOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt; ScheduleDeletion(class Azure.Storage.Files.DataLake.Models.DataLakeFileScheduleDeletionOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ScheduleDeletion(Azure.Storage.Files.DataLake.Models.DataLakeFileScheduleDeletionOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ScheduleDeletion (options As DataLakeFileScheduleDeletionOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PathInfo)" />
      <MemberSignature Language="F#" Value="abstract member ScheduleDeletion : Azure.Storage.Files.DataLake.Models.DataLakeFileScheduleDeletionOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&#xA;override this.ScheduleDeletion : Azure.Storage.Files.DataLake.Models.DataLakeFileScheduleDeletionOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;" Usage="dataLakeFileClient.ScheduleDeletion (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.DataLakeFileScheduleDeletionOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">
            Schedule deletion parameters.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            Schedules the file for deletion.
            </summary>
        <returns>
            A <see cref="T:Azure.Response`1" /> describing the file.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleDeletionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; ScheduleDeletionAsync (Azure.Storage.Files.DataLake.Models.DataLakeFileScheduleDeletionOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; ScheduleDeletionAsync(class Azure.Storage.Files.DataLake.Models.DataLakeFileScheduleDeletionOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.ScheduleDeletionAsync(Azure.Storage.Files.DataLake.Models.DataLakeFileScheduleDeletionOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ScheduleDeletionAsync (options As DataLakeFileScheduleDeletionOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PathInfo))" />
      <MemberSignature Language="F#" Value="abstract member ScheduleDeletionAsync : Azure.Storage.Files.DataLake.Models.DataLakeFileScheduleDeletionOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;&#xA;override this.ScheduleDeletionAsync : Azure.Storage.Files.DataLake.Models.DataLakeFileScheduleDeletionOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;" Usage="dataLakeFileClient.ScheduleDeletionAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.DataLakeFileScheduleDeletionOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">
            Schedule deletion parameters.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            Schedules the file for deletion.
            </summary>
        <returns>
            A <see cref="T:Azure.Response`1" /> describing the file.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControlList">
      <MemberSignature Language="C#" Value="public override Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt; SetAccessControlList (System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt; accessControlList, string owner = default, string group = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt; SetAccessControlList(class System.Collections.Generic.IList`1&lt;class Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt; accessControlList, string owner, string group, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.SetAccessControlList(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.PathAccessControlItem},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SetAccessControlList (accessControlList As IList(Of PathAccessControlItem), Optional owner As String = Nothing, Optional group As String = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PathInfo)" />
      <MemberSignature Language="F#" Value="override this.SetAccessControlList : System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt; * string * string * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;" Usage="dataLakeFileClient.SetAccessControlList (accessControlList, owner, group, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessControlList" Type="System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt;" />
        <Parameter Name="owner" Type="System.String" />
        <Parameter Name="group" Type="System.String" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="accessControlList">
             The POSIX access control list for the file or directory.
             </param>
        <param name="owner">
             The owner of the file or directory.
             </param>
        <param name="group">
             The owning group of the file or directory.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
             setting the the path's access control.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.SetAccessControlList(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.PathAccessControlItem},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation sets the
             Access Control on a path
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             path.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControlListAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; SetAccessControlListAsync (System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt; accessControlList, string owner = default, string group = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; SetAccessControlListAsync(class System.Collections.Generic.IList`1&lt;class Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt; accessControlList, string owner, string group, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.SetAccessControlListAsync(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.PathAccessControlItem},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SetAccessControlListAsync (accessControlList As IList(Of PathAccessControlItem), Optional owner As String = Nothing, Optional group As String = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PathInfo))" />
      <MemberSignature Language="F#" Value="override this.SetAccessControlListAsync : System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt; * string * string * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;" Usage="dataLakeFileClient.SetAccessControlListAsync (accessControlList, owner, group, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessControlList" Type="System.Collections.Generic.IList&lt;Azure.Storage.Files.DataLake.Models.PathAccessControlItem&gt;" />
        <Parameter Name="owner" Type="System.String" />
        <Parameter Name="group" Type="System.String" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="accessControlList">
             The POSIX access control list for the file or directory.
             </param>
        <param name="owner">
             The owner of the file or directory.
             </param>
        <param name="group">
             The owning group of the file or directory.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
             setting the the path's access control.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.SetAccessControlListAsync(System.Collections.Generic.IList{Azure.Storage.Files.DataLake.Models.PathAccessControlItem},System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation sets the
             Access Control on a path
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             path.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHttpHeaders">
      <MemberSignature Language="C#" Value="public override Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt; SetHttpHeaders (Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt; SetHttpHeaders(class Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.SetHttpHeaders(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SetHttpHeaders (Optional httpHeaders As PathHttpHeaders = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PathInfo)" />
      <MemberSignature Language="F#" Value="override this.SetHttpHeaders : Azure.Storage.Files.DataLake.Models.PathHttpHeaders * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;" Usage="dataLakeFileClient.SetHttpHeaders (httpHeaders, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpHeaders" Type="Azure.Storage.Files.DataLake.Models.PathHttpHeaders" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="httpHeaders">
             Optional. The standard HTTP header system properties to set.
             If not specified, existing values will be cleared.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
             setting the paths's HTTP headers.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.SetHttpHeaders(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation sets system
             properties on the path.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-blob-properties">
             Set Blob Properties</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             path.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHttpHeadersAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; SetHttpHeadersAsync (Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; SetHttpHeadersAsync(class Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.SetHttpHeadersAsync(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SetHttpHeadersAsync (Optional httpHeaders As PathHttpHeaders = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PathInfo))" />
      <MemberSignature Language="F#" Value="override this.SetHttpHeadersAsync : Azure.Storage.Files.DataLake.Models.PathHttpHeaders * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;" Usage="dataLakeFileClient.SetHttpHeadersAsync (httpHeaders, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpHeaders" Type="Azure.Storage.Files.DataLake.Models.PathHttpHeaders" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="httpHeaders">
             Optional. The standard HTTP header system properties to set.
             If not specified, existing values will be cleared.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
             setting the path's HTTP headers.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.SetHttpHeadersAsync(Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation sets system
             properties on the PATH.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-blob-properties">
             Set Blob Properties</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             path.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetadata">
      <MemberSignature Language="C#" Value="public override Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt; SetMetadata (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt; SetMetadata(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SetMetadata (metadata As IDictionary(Of String, String), Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PathInfo)" />
      <MemberSignature Language="F#" Value="override this.SetMetadata : System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;" Usage="dataLakeFileClient.SetMetadata (metadata, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">
             Custom metadata to set for this path.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
             setting the path's metadata.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation sets user-defined
             metadata for the specified path as one or more name-value pairs.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-blob-metadata">
             Set Metadata</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             path.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetadataAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; SetMetadataAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; SetMetadataAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SetMetadataAsync (metadata As IDictionary(Of String, String), Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PathInfo))" />
      <MemberSignature Language="F#" Value="override this.SetMetadataAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;" Usage="dataLakeFileClient.SetMetadataAsync (metadata, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">
             Custom metadata to set for this path.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
             setting the path's metadata.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation sets user-defined
             metadata for the specified path as one or more name-value pairs.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-blob-metadata">
             Set Metadata</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             path.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPermissions">
      <MemberSignature Language="C#" Value="public override Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt; SetPermissions (Azure.Storage.Files.DataLake.Models.PathPermissions permissions, string owner = default, string group = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt; SetPermissions(class Azure.Storage.Files.DataLake.Models.PathPermissions permissions, string owner, string group, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.SetPermissions(Azure.Storage.Files.DataLake.Models.PathPermissions,System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SetPermissions (permissions As PathPermissions, Optional owner As String = Nothing, Optional group As String = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PathInfo)" />
      <MemberSignature Language="F#" Value="override this.SetPermissions : Azure.Storage.Files.DataLake.Models.PathPermissions * string * string * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;" Usage="dataLakeFileClient.SetPermissions (permissions, owner, group, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permissions" Type="Azure.Storage.Files.DataLake.Models.PathPermissions" />
        <Parameter Name="owner" Type="System.String" />
        <Parameter Name="group" Type="System.String" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="permissions">
              The POSIX access permissions for the file owner, the file owning group, and others.
             </param>
        <param name="owner">
             The owner of the file or directory.
             </param>
        <param name="group">
             The owning group of the file or directory.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
             setting the the path's access control.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.SetPermissions(Azure.Storage.Files.DataLake.Models.PathPermissions,System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation sets the
             file permissions on a path.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             path.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPermissionsAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; SetPermissionsAsync (Azure.Storage.Files.DataLake.Models.PathPermissions permissions, string owner = default, string group = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; SetPermissionsAsync(class Azure.Storage.Files.DataLake.Models.PathPermissions permissions, string owner, string group, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.SetPermissionsAsync(Azure.Storage.Files.DataLake.Models.PathPermissions,System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SetPermissionsAsync (permissions As PathPermissions, Optional owner As String = Nothing, Optional group As String = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PathInfo))" />
      <MemberSignature Language="F#" Value="override this.SetPermissionsAsync : Azure.Storage.Files.DataLake.Models.PathPermissions * string * string * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;" Usage="dataLakeFileClient.SetPermissionsAsync (permissions, owner, group, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permissions" Type="Azure.Storage.Files.DataLake.Models.PathPermissions" />
        <Parameter Name="owner" Type="System.String" />
        <Parameter Name="group" Type="System.String" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="permissions">
              The POSIX access permissions for the file owner, the file owning group, and others.
             </param>
        <param name="owner">
             The owner of the file or directory.
             </param>
        <param name="group">
             The owning group of the file or directory.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to add conditions on
             setting the the path's access control.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.SetPermissionsAsync(Azure.Storage.Files.DataLake.Models.PathPermissions,System.String,System.String,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.Threading.CancellationToken)" /> operation sets the
             file permissions on a path.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             path.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Upload">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt; Upload (System.IO.Stream content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt; Upload(class System.IO.Stream content) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Upload (content As Stream) As Response(Of PathInfo)" />
      <MemberSignature Language="F#" Value="abstract member Upload : System.IO.Stream -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&#xA;override this.Upload : System.IO.Stream -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;" Usage="dataLakeFileClient.Upload content" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content to upload.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)" />
             operation creates and uploads content to a file.
            
             If the file already exists, then its content will not be overwritten.
             The request will be sent with If-None-Match Header with the value of
             the special wildcard. So if the file already exists a
             <see cref="T:Azure.RequestFailedException" /> is expected to be thrown.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated file.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Upload">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt; Upload (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt; Upload(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Upload (path As String) As Response(Of PathInfo)" />
      <MemberSignature Language="F#" Value="abstract member Upload : string -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&#xA;override this.Upload : string -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;" Usage="dataLakeFileClient.Upload path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
             A file path containing the content to upload.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)" />
             operation creates and uploads content to a file.
            
             If the file already exists, then its content will not be overwritten.
             The request will be sent with If-None-Match Header with the value of
             the special wildcard. So if the file already exists a
             <see cref="T:Azure.RequestFailedException" /> is expected to be thrown.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated block blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Upload">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt; Upload (System.IO.Stream content, Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt; Upload(class System.IO.Stream content, class Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.IO.Stream,Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Upload (content As Stream, options As DataLakeFileUploadOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PathInfo)" />
      <MemberSignature Language="F#" Value="abstract member Upload : System.IO.Stream * Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&#xA;override this.Upload : System.IO.Stream * Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;" Usage="dataLakeFileClient.Upload (content, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content to upload.
             </param>
        <param name="options">
             Optional parameters.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.IO.Stream,Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions,System.Threading.CancellationToken)" />
             operation creates and uploads content to a file.  If the file already exists, its content will be overwritten,
             unless otherwise specified in the <see cref="P:Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions.Conditions" /> or alternatively use
             <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.IO.Stream)" />, <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)" />.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated file.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Upload">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt; Upload (System.IO.Stream content, bool overwrite = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt; Upload(class System.IO.Stream content, bool overwrite, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Upload (content As Stream, Optional overwrite As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PathInfo)" />
      <MemberSignature Language="F#" Value="abstract member Upload : System.IO.Stream * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&#xA;override this.Upload : System.IO.Stream * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;" Usage="dataLakeFileClient.Upload (content, overwrite, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content to upload.
             </param>
        <param name="overwrite">
             Whether the upload should overwrite an existing file.  The
             default value is false.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)" />
             operation creates and uploads content to a file.
            
             If the overwrite parameter is not specified and
             the file already exists, then its content will not be overwritten.
             The request will be sent with If-None-Match Header with the value of
             the special wildcard. So if the file already exists a
             <see cref="T:Azure.RequestFailedException" /> is expected to be thrown.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated file.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Upload">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt; Upload (string path, Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt; Upload(string path, class Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.String,Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Upload (path As String, options As DataLakeFileUploadOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PathInfo)" />
      <MemberSignature Language="F#" Value="abstract member Upload : string * Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&#xA;override this.Upload : string * Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;" Usage="dataLakeFileClient.Upload (path, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">
             A file path containing the content to upload.
             </param>
        <param name="options">
             Optional parameters.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.String,Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions,System.Threading.CancellationToken)" />
             operation creates and uploads content to a file.If the file already exists, its content will be overwritten,
             unless otherwise specified in the <see cref="P:Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions.Conditions" /> or alternatively use
             <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.IO.Stream)" />, <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)" />.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated block blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Upload">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt; Upload (string path, bool overwrite = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt; Upload(string path, bool overwrite, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.String,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Upload (path As String, Optional overwrite As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PathInfo)" />
      <MemberSignature Language="F#" Value="abstract member Upload : string * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&#xA;override this.Upload : string * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;" Usage="dataLakeFileClient.Upload (path, overwrite, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">
             A file path containing the content to upload.
             </param>
        <param name="overwrite">
             Whether the upload should overwrite an existing file.  The
             default value is false.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)" />
             operation creates and uploads content to a file.
            
             If the overwrite parameter is not specified and
             the file already exists, then its content will not be overwritten.
             The request will be sent with If-None-Match Header with the value of
             the special wildcard. So if the file already exists a
             <see cref="T:Azure.RequestFailedException" /> is expected to be thrown.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated block blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Upload">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt; Upload (System.IO.Stream content, Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, IProgress&lt;long&gt; progressHandler = default, Azure.Storage.StorageTransferOptions transferOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt; Upload(class System.IO.Stream content, class Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, class System.IProgress`1&lt;int64&gt; progressHandler, valuetype Azure.Storage.StorageTransferOptions transferOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.IO.Stream,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.IProgress{System.Int64},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Upload (content As Stream, Optional httpHeaders As PathHttpHeaders = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional progressHandler As IProgress(Of Long) = Nothing, Optional transferOptions As StorageTransferOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PathInfo)" />
      <MemberSignature Language="F#" Value="abstract member Upload : System.IO.Stream * Azure.Storage.Files.DataLake.Models.PathHttpHeaders * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * IProgress&lt;int64&gt; * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&#xA;override this.Upload : System.IO.Stream * Azure.Storage.Files.DataLake.Models.PathHttpHeaders * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * IProgress&lt;int64&gt; * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;" Usage="dataLakeFileClient.Upload (content, httpHeaders, conditions, progressHandler, transferOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="httpHeaders" Type="Azure.Storage.Files.DataLake.Models.PathHttpHeaders" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;System.Int64&gt;" />
        <Parameter Name="transferOptions" Type="Azure.Storage.StorageTransferOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content to upload.
             </param>
        <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the file.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to apply to the request.
             </param>
        <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1" /> to provide
             progress updates about data transfers.
             </param>
        <param name="transferOptions">
             Optional <see cref="T:Azure.Storage.StorageTransferOptions" /> to configure
             parallel transfer behavior.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.IO.Stream,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.IProgress{System.Int64},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
             operation creates and uploads content to a file.  If the file already exists, its content will be overwritten,
             unless otherwise specified in the <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> or alternatively use
             <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.IO.Stream)" />, <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)" />.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated file.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Upload">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt; Upload (string path, Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, IProgress&lt;long&gt; progressHandler = default, Azure.Storage.StorageTransferOptions transferOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt; Upload(string path, class Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, class System.IProgress`1&lt;int64&gt; progressHandler, valuetype Azure.Storage.StorageTransferOptions transferOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.String,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.IProgress{System.Int64},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Upload (path As String, Optional httpHeaders As PathHttpHeaders = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional progressHandler As IProgress(Of Long) = Nothing, Optional transferOptions As StorageTransferOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PathInfo)" />
      <MemberSignature Language="F#" Value="abstract member Upload : string * Azure.Storage.Files.DataLake.Models.PathHttpHeaders * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * IProgress&lt;int64&gt; * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&#xA;override this.Upload : string * Azure.Storage.Files.DataLake.Models.PathHttpHeaders * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * IProgress&lt;int64&gt; * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;" Usage="dataLakeFileClient.Upload (path, httpHeaders, conditions, progressHandler, transferOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="httpHeaders" Type="Azure.Storage.Files.DataLake.Models.PathHttpHeaders" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;System.Int64&gt;" />
        <Parameter Name="transferOptions" Type="Azure.Storage.StorageTransferOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">
             A file path containing the content to upload.
             </param>
        <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the file.
            </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to apply to the request.
             </param>
        <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1" /> to provide
             progress updates about data transfers.
             </param>
        <param name="transferOptions">
             Optional <see cref="T:Azure.Storage.StorageTransferOptions" /> to configure
             parallel transfer behavior.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.String,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.IProgress{System.Int64},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
             operation creates and uploads content to a file.If the file already exists, its content will be overwritten,
             unless otherwise specified in the <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> or alternatively use
             <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.IO.Stream)" />, <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)" />.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated block blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; UploadAsync (System.IO.Stream content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; UploadAsync(class System.IO.Stream content) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadAsync (content As Stream) As Task(Of Response(Of PathInfo))" />
      <MemberSignature Language="F#" Value="abstract member UploadAsync : System.IO.Stream -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;&#xA;override this.UploadAsync : System.IO.Stream -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;" Usage="dataLakeFileClient.UploadAsync content" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content to upload.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)" />
             operation creates and uploads content to a file.
            
             If the file already exists, then its content will not be overwritten.
             The request will be sent with If-None-Match Header with the value of
             the special wildcard. So if the file already exists a
             <see cref="T:Azure.RequestFailedException" /> is expected to be thrown.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated block blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; UploadAsync (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; UploadAsync(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadAsync (path As String) As Task(Of Response(Of PathInfo))" />
      <MemberSignature Language="F#" Value="abstract member UploadAsync : string -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;&#xA;override this.UploadAsync : string -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;" Usage="dataLakeFileClient.UploadAsync path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
             A file path containing the content to upload.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)" />
             operation creates and uploads content to a file.
            
             If the file already exists, then its content will not be overwritten.
             The request will be sent with If-None-Match Header with the value of
             the special wildcard. So if the file already exists a
             <see cref="T:Azure.RequestFailedException" /> is expected to be thrown.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated block blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; UploadAsync (System.IO.Stream content, Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; UploadAsync(class System.IO.Stream content, class Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.IO.Stream,Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadAsync (content As Stream, options As DataLakeFileUploadOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PathInfo))" />
      <MemberSignature Language="F#" Value="abstract member UploadAsync : System.IO.Stream * Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;&#xA;override this.UploadAsync : System.IO.Stream * Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;" Usage="dataLakeFileClient.UploadAsync (content, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content to upload.
             </param>
        <param name="options">
             Optional parameters.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.IO.Stream,Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions,System.Threading.CancellationToken)" />
             operation creates and uploads content to a file. If the file already exists, its content will be overwritten,
             unless otherwise specified in the <see cref="P:Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions.Conditions" /> or alternatively use
             <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.IO.Stream)" />, <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)" />.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated block blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; UploadAsync (System.IO.Stream content, bool overwrite = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; UploadAsync(class System.IO.Stream content, bool overwrite, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadAsync (content As Stream, Optional overwrite As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PathInfo))" />
      <MemberSignature Language="F#" Value="abstract member UploadAsync : System.IO.Stream * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;&#xA;override this.UploadAsync : System.IO.Stream * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;" Usage="dataLakeFileClient.UploadAsync (content, overwrite, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content to upload.
             </param>
        <param name="overwrite">
             Whether the upload should overwrite an existing file.  The
             default value is false.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)" />
             operation creates and uploads content to a file.
            
             If the overwrite parameter is not specified and
             the file already exists, then its content will not be overwritten.
             The request will be sent with If-None-Match Header with the value of
             the special wildcard. So if the file already exists a
             <see cref="T:Azure.RequestFailedException" /> is expected to be thrown.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated block blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; UploadAsync (string path, Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; UploadAsync(string path, class Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.String,Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadAsync (path As String, options As DataLakeFileUploadOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PathInfo))" />
      <MemberSignature Language="F#" Value="abstract member UploadAsync : string * Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;&#xA;override this.UploadAsync : string * Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;" Usage="dataLakeFileClient.UploadAsync (path, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="options" Type="Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">
             A file path containing the content to upload.
             </param>
        <param name="options">
             Optional parameters.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.String,Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions,System.Threading.CancellationToken)" />
             operation creates and uploads content to a file.  If the file already exists, its content will be overwritten,
             unless otherwise specified in the <see cref="P:Azure.Storage.Files.DataLake.Models.DataLakeFileUploadOptions.Conditions" /> or alternatively use
             <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.IO.Stream)" />, <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)" />.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated block blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; UploadAsync (string path, bool overwrite = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; UploadAsync(string path, bool overwrite, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.String,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadAsync (path As String, Optional overwrite As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PathInfo))" />
      <MemberSignature Language="F#" Value="abstract member UploadAsync : string * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;&#xA;override this.UploadAsync : string * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;" Usage="dataLakeFileClient.UploadAsync (path, overwrite, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">
             A file path containing the content to upload.
             </param>
        <param name="overwrite">
             Whether the upload should overwrite an existing file.  The
             default value is false.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)" />
             operation creates and uploads content to a file.
            
             If the overwrite parameter is not specified and
             the file already exists, then its content will not be overwritten.
             The request will be sent with If-None-Match Header with the value of
             the special wildcard. So if the file already exists a
             <see cref="T:Azure.RequestFailedException" /> is expected to be thrown.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated block blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; UploadAsync (System.IO.Stream content, Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, IProgress&lt;long&gt; progressHandler = default, Azure.Storage.StorageTransferOptions transferOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; UploadAsync(class System.IO.Stream content, class Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, class System.IProgress`1&lt;int64&gt; progressHandler, valuetype Azure.Storage.StorageTransferOptions transferOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.IO.Stream,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.IProgress{System.Int64},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadAsync (content As Stream, Optional httpHeaders As PathHttpHeaders = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional progressHandler As IProgress(Of Long) = Nothing, Optional transferOptions As StorageTransferOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PathInfo))" />
      <MemberSignature Language="F#" Value="abstract member UploadAsync : System.IO.Stream * Azure.Storage.Files.DataLake.Models.PathHttpHeaders * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * IProgress&lt;int64&gt; * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;&#xA;override this.UploadAsync : System.IO.Stream * Azure.Storage.Files.DataLake.Models.PathHttpHeaders * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * IProgress&lt;int64&gt; * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;" Usage="dataLakeFileClient.UploadAsync (content, httpHeaders, conditions, progressHandler, transferOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="httpHeaders" Type="Azure.Storage.Files.DataLake.Models.PathHttpHeaders" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;System.Int64&gt;" />
        <Parameter Name="transferOptions" Type="Azure.Storage.StorageTransferOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content to upload.
             </param>
        <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the file.
            </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to apply to the request.
             </param>
        <param name="transferOptions">
             Optional <see cref="T:Azure.Storage.StorageTransferOptions" /> to configure
             parallel transfer behavior.
             </param>
        <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1" /> to provide
             progress updates about data transfers.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.IO.Stream,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.IProgress{System.Int64},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
             operation creates and uploads content to a file.  If the file already exists, its content will be overwritten,
             unless otherwise specified in the <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> or alternatively use
             <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.IO.Stream)" />, <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)" />.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated block blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; UploadAsync (string path, Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders = default, Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions = default, IProgress&lt;long&gt; progressHandler = default, Azure.Storage.StorageTransferOptions transferOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt; UploadAsync(string path, class Azure.Storage.Files.DataLake.Models.PathHttpHeaders httpHeaders, class Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions conditions, class System.IProgress`1&lt;int64&gt; progressHandler, valuetype Azure.Storage.StorageTransferOptions transferOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.String,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.IProgress{System.Int64},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadAsync (path As String, Optional httpHeaders As PathHttpHeaders = Nothing, Optional conditions As DataLakeRequestConditions = Nothing, Optional progressHandler As IProgress(Of Long) = Nothing, Optional transferOptions As StorageTransferOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PathInfo))" />
      <MemberSignature Language="F#" Value="abstract member UploadAsync : string * Azure.Storage.Files.DataLake.Models.PathHttpHeaders * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * IProgress&lt;int64&gt; * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;&#xA;override this.UploadAsync : string * Azure.Storage.Files.DataLake.Models.PathHttpHeaders * Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions * IProgress&lt;int64&gt; * Azure.Storage.StorageTransferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;" Usage="dataLakeFileClient.UploadAsync (path, httpHeaders, conditions, progressHandler, transferOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.6.1.0</AssemblyVersion>
        <AssemblyVersion>12.6.2.0</AssemblyVersion>
        <AssemblyVersion>12.7.0.0</AssemblyVersion>
        <AssemblyVersion>12.8.0.0</AssemblyVersion>
        <AssemblyVersion>12.9.0.0</AssemblyVersion>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DataLake.Models.PathInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="httpHeaders" Type="Azure.Storage.Files.DataLake.Models.PathHttpHeaders" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;System.Int64&gt;" />
        <Parameter Name="transferOptions" Type="Azure.Storage.StorageTransferOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">
             A file path containing the content to upload.
             </param>
        <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the file.
            </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> to apply to the request.
             </param>
        <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1" /> to provide
             progress updates about data transfers.
             </param>
        <param name="transferOptions">
             Optional <see cref="T:Azure.Storage.StorageTransferOptions" /> to configure
             parallel transfer behavior.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.UploadAsync(System.String,Azure.Storage.Files.DataLake.Models.PathHttpHeaders,Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions,System.IProgress{System.Int64},Azure.Storage.StorageTransferOptions,System.Threading.CancellationToken)" />
             operation creates and uploads content to a file.  If the file already exists, its content will be overwritten,
             unless otherwise specified in the <see cref="T:Azure.Storage.Files.DataLake.Models.DataLakeRequestConditions" /> or alternatively use
             <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.IO.Stream)" />, <see cref="M:Azure.Storage.Files.DataLake.DataLakeFileClient.Upload(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)" />.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update">
             Update Path</see>.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the updated block blob.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="WithCustomerProvidedKey">
      <MemberSignature Language="C#" Value="public Azure.Storage.Files.DataLake.DataLakeFileClient WithCustomerProvidedKey (Azure.Storage.Files.DataLake.Models.DataLakeCustomerProvidedKey? customerProvidedKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.Storage.Files.DataLake.DataLakeFileClient WithCustomerProvidedKey(valuetype System.Nullable`1&lt;valuetype Azure.Storage.Files.DataLake.Models.DataLakeCustomerProvidedKey&gt; customerProvidedKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DataLake.DataLakeFileClient.WithCustomerProvidedKey(System.Nullable{Azure.Storage.Files.DataLake.Models.DataLakeCustomerProvidedKey})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithCustomerProvidedKey (customerProvidedKey As Nullable(Of DataLakeCustomerProvidedKey)) As DataLakeFileClient" />
      <MemberSignature Language="F#" Value="override this.WithCustomerProvidedKey : Nullable&lt;Azure.Storage.Files.DataLake.Models.DataLakeCustomerProvidedKey&gt; -&gt; Azure.Storage.Files.DataLake.DataLakeFileClient" Usage="dataLakeFileClient.WithCustomerProvidedKey customerProvidedKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.DataLake</AssemblyName>
        <AssemblyVersion>12.10.0.0</AssemblyVersion>
        <AssemblyVersion>12.11.0.0</AssemblyVersion>
        <AssemblyVersion>12.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Files.DataLake.DataLakeFileClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customerProvidedKey" Type="System.Nullable&lt;Azure.Storage.Files.DataLake.Models.DataLakeCustomerProvidedKey&gt;" />
      </Parameters>
      <Docs>
        <param name="customerProvidedKey">The customer provided key.</param>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Files.DataLake.DataLakeFileClient" />
             class with an identical <see cref="T:System.Uri" /> source but the specified
             <paramref name="customerProvidedKey" />.
            
             </summary>
        <returns>A new <see cref="T:Azure.Storage.Files.DataLake.DataLakeFileClient" /> instance.</returns>
        <remarks>
             Pass null to remove the customer provide key in the returned <see cref="T:Azure.Storage.Files.DataLake.DataLakeFileClient" />.
             </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
