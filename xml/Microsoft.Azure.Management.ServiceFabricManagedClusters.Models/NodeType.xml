<Type Name="NodeType" FullName="Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType">
  <TypeSignature Language="C#" Value="public class NodeType : Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.ManagedProxyResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NodeType extends Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.ManagedProxyResource" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType" />
  <TypeSignature Language="VB.NET" Value="Public Class NodeType&#xA;Inherits ManagedProxyResource" />
  <TypeSignature Language="F#" Value="type NodeType = class&#xA;    inherit ManagedProxyResource" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ServiceFabricManagedClusters</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.ManagedProxyResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.Rest.Serialization.JsonTransformation]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.Rest.Serialization.JsonTransformation&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Describes a node type in the cluster, each node type represents sub set
            of nodes in the cluster.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the NodeType class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeType (bool isPrimary, int vmInstanceCount, int dataDiskSizeGB, string id = default, string name = default, string type = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.SystemData systemData = default, string dataDiskType = default, System.Collections.Generic.IDictionary&lt;string,string&gt; placementProperties = default, System.Collections.Generic.IDictionary&lt;string,string&gt; capacities = default, Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.EndpointRangeDescription applicationPorts = default, Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.EndpointRangeDescription ephemeralPorts = default, string vmSize = default, string vmImagePublisher = default, string vmImageOffer = default, string vmImageSku = default, string vmImageVersion = default, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.VaultSecretGroup&gt; vmSecrets = default, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.VMSSExtension&gt; vmExtensions = default, Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.VmManagedIdentity vmManagedIdentity = default, bool? isStateless = default, bool? multiplePlacementGroups = default, string provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool isPrimary, int32 vmInstanceCount, int32 dataDiskSizeGB, string id, string name, string type, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, class Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.SystemData systemData, string dataDiskType, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; placementProperties, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; capacities, class Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.EndpointRangeDescription applicationPorts, class Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.EndpointRangeDescription ephemeralPorts, string vmSize, string vmImagePublisher, string vmImageOffer, string vmImageSku, string vmImageVersion, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.VaultSecretGroup&gt; vmSecrets, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.VMSSExtension&gt; vmExtensions, class Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.VmManagedIdentity vmManagedIdentity, valuetype System.Nullable`1&lt;bool&gt; isStateless, valuetype System.Nullable`1&lt;bool&gt; multiplePlacementGroups, string provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.#ctor(System.Boolean,System.Int32,System.Int32,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.SystemData,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.EndpointRangeDescription,Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.EndpointRangeDescription,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.VaultSecretGroup},System.Collections.Generic.IList{Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.VMSSExtension},Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.VmManagedIdentity,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (isPrimary As Boolean, vmInstanceCount As Integer, dataDiskSizeGB As Integer, Optional id As String = Nothing, Optional name As String = Nothing, Optional type As String = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional systemData As SystemData = Nothing, Optional dataDiskType As String = Nothing, Optional placementProperties As IDictionary(Of String, String) = Nothing, Optional capacities As IDictionary(Of String, String) = Nothing, Optional applicationPorts As EndpointRangeDescription = Nothing, Optional ephemeralPorts As EndpointRangeDescription = Nothing, Optional vmSize As String = Nothing, Optional vmImagePublisher As String = Nothing, Optional vmImageOffer As String = Nothing, Optional vmImageSku As String = Nothing, Optional vmImageVersion As String = Nothing, Optional vmSecrets As IList(Of VaultSecretGroup) = Nothing, Optional vmExtensions As IList(Of VMSSExtension) = Nothing, Optional vmManagedIdentity As VmManagedIdentity = Nothing, Optional isStateless As Nullable(Of Boolean) = Nothing, Optional multiplePlacementGroups As Nullable(Of Boolean) = Nothing, Optional provisioningState As String = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType : bool * int * int * string * string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.SystemData * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.EndpointRangeDescription * Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.EndpointRangeDescription * string * string * string * string * string * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.VaultSecretGroup&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.VMSSExtension&gt; * Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.VmManagedIdentity * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string -&gt; Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType" Usage="new Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType (isPrimary, vmInstanceCount, dataDiskSizeGB, id, name, type, tags, systemData, dataDiskType, placementProperties, capacities, applicationPorts, ephemeralPorts, vmSize, vmImagePublisher, vmImageOffer, vmImageSku, vmImageVersion, vmSecrets, vmExtensions, vmManagedIdentity, isStateless, multiplePlacementGroups, provisioningState)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="isPrimary" Type="System.Boolean" />
        <Parameter Name="vmInstanceCount" Type="System.Int32" />
        <Parameter Name="dataDiskSizeGB" Type="System.Int32" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="systemData" Type="Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.SystemData" />
        <Parameter Name="dataDiskType" Type="System.String" />
        <Parameter Name="placementProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="capacities" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="applicationPorts" Type="Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.EndpointRangeDescription" />
        <Parameter Name="ephemeralPorts" Type="Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.EndpointRangeDescription" />
        <Parameter Name="vmSize" Type="System.String" />
        <Parameter Name="vmImagePublisher" Type="System.String" />
        <Parameter Name="vmImageOffer" Type="System.String" />
        <Parameter Name="vmImageSku" Type="System.String" />
        <Parameter Name="vmImageVersion" Type="System.String" />
        <Parameter Name="vmSecrets" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.VaultSecretGroup&gt;" />
        <Parameter Name="vmExtensions" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.VMSSExtension&gt;" />
        <Parameter Name="vmManagedIdentity" Type="Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.VmManagedIdentity" />
        <Parameter Name="isStateless" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="multiplePlacementGroups" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="systemData">To be added.</param>
        <param name="vmManagedIdentity">To be added.</param>
        <param name="isPrimary">The node type on which system services will
            run. Only one node type should be marked as primary. Primary node
            type cannot be deleted or changed for existing clusters.</param>
        <param name="vmInstanceCount">The number of nodes in the node
            type.</param>
        <param name="dataDiskSizeGB">Disk size for each vm in the node type
            in GBs.</param>
        <param name="id">Azure resource identifier.</param>
        <param name="name">Azure resource name.</param>
        <param name="type">Azure resource type.</param>
        <param name="tags">Azure resource tags.</param>
        <param name="dataDiskType">Possible values include: 'Standard_LRS',
            'StandardSSD_LRS', 'Premium_LRS'</param>
        <param name="placementProperties">The placement tags applied to
            nodes in the node type, which can be used to indicate where certain
            services (workload) should run.</param>
        <param name="capacities">The capacity tags applied to the nodes in
            the node type, the cluster resource manager uses these tags to
            understand how much resource a node has.</param>
        <param name="applicationPorts">The range of ports from which
            cluster assigned port to Service Fabric applications.</param>
        <param name="ephemeralPorts">The range of ephemeral ports that
            nodes in this node type should be configured with.</param>
        <param name="vmSize">The size of virtual machines in the pool. All
            virtual machines in a pool are the same size. For example,
            Standard_D3.</param>
        <param name="vmImagePublisher">The publisher of the Azure Virtual
            Machines Marketplace image. For example, Canonical or
            MicrosoftWindowsServer.</param>
        <param name="vmImageOffer">The offer type of the Azure Virtual
            Machines Marketplace image. For example, UbuntuServer or
            WindowsServer.</param>
        <param name="vmImageSku">The SKU of the Azure Virtual Machines
            Marketplace image. For example, 14.04.0-LTS or
            2012-R2-Datacenter.</param>
        <param name="vmImageVersion">The version of the Azure Virtual
            Machines Marketplace image. A value of 'latest' can be specified to
            select the latest version of an image. If omitted, the default is
            'latest'.</param>
        <param name="vmSecrets">virtual machine secretes.</param>
        <param name="vmExtensions">virtual machine extensions.</param>
        <param name="isStateless">Indicates if the node type can only host
            Stateless workloads.</param>
        <param name="multiplePlacementGroups">Indicates if scale set
            associated with the node type can be composed of multiple placement
            groups.</param>
        <param name="provisioningState">The provisioning state of the
            managed cluster resource. Possible values include: 'None',
            'Creating', 'Created', 'Updating', 'Succeeded', 'Failed',
            'Canceled', 'Deleting', 'Deleted', 'Other'</param>
        <summary>
            Initializes a new instance of the NodeType class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationPorts">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.EndpointRangeDescription ApplicationPorts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.EndpointRangeDescription ApplicationPorts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.ApplicationPorts" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationPorts As EndpointRangeDescription" />
      <MemberSignature Language="F#" Value="member this.ApplicationPorts : Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.EndpointRangeDescription with get, set" Usage="Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.ApplicationPorts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.applicationPorts")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.applicationPorts")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.EndpointRangeDescription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the range of ports from which cluster assigned port to
            Service Fabric applications.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Capacities">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Capacities { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Capacities" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.Capacities" />
      <MemberSignature Language="VB.NET" Value="Public Property Capacities As IDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="member this.Capacities : System.Collections.Generic.IDictionary&lt;string, string&gt; with get, set" Usage="Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.Capacities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.capacities")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.capacities")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the capacity tags applied to the nodes in the node
            type, the cluster resource manager uses these tags to understand
            how much resource a node has.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataDiskSizeGB">
      <MemberSignature Language="C#" Value="public int DataDiskSizeGB { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataDiskSizeGB" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.DataDiskSizeGB" />
      <MemberSignature Language="VB.NET" Value="Public Property DataDiskSizeGB As Integer" />
      <MemberSignature Language="F#" Value="member this.DataDiskSizeGB : int with get, set" Usage="Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.DataDiskSizeGB" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.dataDiskSizeGB")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.dataDiskSizeGB")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets disk size for each vm in the node type in GBs.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataDiskType">
      <MemberSignature Language="C#" Value="public string DataDiskType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataDiskType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.DataDiskType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataDiskType As String" />
      <MemberSignature Language="F#" Value="member this.DataDiskType : string with get, set" Usage="Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.DataDiskType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.dataDiskType")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.dataDiskType")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets possible values include: 'Standard_LRS',
            'StandardSSD_LRS', 'Premium_LRS'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EphemeralPorts">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.EndpointRangeDescription EphemeralPorts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.EndpointRangeDescription EphemeralPorts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.EphemeralPorts" />
      <MemberSignature Language="VB.NET" Value="Public Property EphemeralPorts As EndpointRangeDescription" />
      <MemberSignature Language="F#" Value="member this.EphemeralPorts : Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.EndpointRangeDescription with get, set" Usage="Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.EphemeralPorts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.ephemeralPorts")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.ephemeralPorts")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.EndpointRangeDescription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the range of ephemeral ports that nodes in this node
            type should be configured with.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimary">
      <MemberSignature Language="C#" Value="public bool IsPrimary { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimary" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.IsPrimary" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPrimary As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsPrimary : bool with get, set" Usage="Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.IsPrimary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.isPrimary")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.isPrimary")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the node type on which system services will run. Only
            one node type should be marked as primary. Primary node type cannot
            be deleted or changed for existing clusters.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStateless">
      <MemberSignature Language="C#" Value="public bool? IsStateless { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsStateless" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.IsStateless" />
      <MemberSignature Language="VB.NET" Value="Public Property IsStateless As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsStateless : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.IsStateless" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.isStateless")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.isStateless")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets indicates if the node type can only host Stateless
            workloads.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplePlacementGroups">
      <MemberSignature Language="C#" Value="public bool? MultiplePlacementGroups { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; MultiplePlacementGroups" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.MultiplePlacementGroups" />
      <MemberSignature Language="VB.NET" Value="Public Property MultiplePlacementGroups As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.MultiplePlacementGroups : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.MultiplePlacementGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.multiplePlacementGroups")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.multiplePlacementGroups")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets indicates if scale set associated with the node type
            can be composed of multiple placement groups.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlacementProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; PlacementProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; PlacementProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.PlacementProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property PlacementProperties As IDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="member this.PlacementProperties : System.Collections.Generic.IDictionary&lt;string, string&gt; with get, set" Usage="Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.PlacementProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.placementProperties")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.placementProperties")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the placement tags applied to nodes in the node type,
            which can be used to indicate where certain services (workload)
            should run.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvisioningState">
      <MemberSignature Language="C#" Value="public string ProvisioningState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProvisioningState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.ProvisioningState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProvisioningState As String" />
      <MemberSignature Language="F#" Value="member this.ProvisioningState : string" Usage="Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.ProvisioningState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.provisioningState")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.provisioningState")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the provisioning state of the managed cluster resource.
            Possible values include: 'None', 'Creating', 'Created', 'Updating',
            'Succeeded', 'Failed', 'Canceled', 'Deleting', 'Deleted', 'Other'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="nodeType.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
    <Member MemberName="VmExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.VMSSExtension&gt; VmExtensions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.VMSSExtension&gt; VmExtensions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.VmExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Property VmExtensions As IList(Of VMSSExtension)" />
      <MemberSignature Language="F#" Value="member this.VmExtensions : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.VMSSExtension&gt; with get, set" Usage="Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.VmExtensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.vmExtensions")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.vmExtensions")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.VMSSExtension&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets virtual machine extensions.
            </summary>
        <value>To be added.</value>
        <remarks>
            Set of extensions that should be installed onto the virtual
            machines.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="VmImageOffer">
      <MemberSignature Language="C#" Value="public string VmImageOffer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VmImageOffer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.VmImageOffer" />
      <MemberSignature Language="VB.NET" Value="Public Property VmImageOffer As String" />
      <MemberSignature Language="F#" Value="member this.VmImageOffer : string with get, set" Usage="Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.VmImageOffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.vmImageOffer")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.vmImageOffer")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the offer type of the Azure Virtual Machines
            Marketplace image. For example, UbuntuServer or WindowsServer.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VmImagePublisher">
      <MemberSignature Language="C#" Value="public string VmImagePublisher { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VmImagePublisher" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.VmImagePublisher" />
      <MemberSignature Language="VB.NET" Value="Public Property VmImagePublisher As String" />
      <MemberSignature Language="F#" Value="member this.VmImagePublisher : string with get, set" Usage="Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.VmImagePublisher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.vmImagePublisher")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.vmImagePublisher")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the publisher of the Azure Virtual Machines
            Marketplace image. For example, Canonical or
            MicrosoftWindowsServer.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VmImageSku">
      <MemberSignature Language="C#" Value="public string VmImageSku { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VmImageSku" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.VmImageSku" />
      <MemberSignature Language="VB.NET" Value="Public Property VmImageSku As String" />
      <MemberSignature Language="F#" Value="member this.VmImageSku : string with get, set" Usage="Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.VmImageSku" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.vmImageSku")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.vmImageSku")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the SKU of the Azure Virtual Machines Marketplace
            image. For example, 14.04.0-LTS or 2012-R2-Datacenter.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VmImageVersion">
      <MemberSignature Language="C#" Value="public string VmImageVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VmImageVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.VmImageVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property VmImageVersion As String" />
      <MemberSignature Language="F#" Value="member this.VmImageVersion : string with get, set" Usage="Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.VmImageVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.vmImageVersion")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.vmImageVersion")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the version of the Azure Virtual Machines Marketplace
            image. A value of 'latest' can be specified to select the latest
            version of an image. If omitted, the default is 'latest'.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VmInstanceCount">
      <MemberSignature Language="C#" Value="public int VmInstanceCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VmInstanceCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.VmInstanceCount" />
      <MemberSignature Language="VB.NET" Value="Public Property VmInstanceCount As Integer" />
      <MemberSignature Language="F#" Value="member this.VmInstanceCount : int with get, set" Usage="Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.VmInstanceCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.vmInstanceCount")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.vmInstanceCount")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the number of nodes in the node type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VmManagedIdentity">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.VmManagedIdentity VmManagedIdentity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.VmManagedIdentity VmManagedIdentity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.VmManagedIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Property VmManagedIdentity As VmManagedIdentity" />
      <MemberSignature Language="F#" Value="member this.VmManagedIdentity : Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.VmManagedIdentity with get, set" Usage="Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.VmManagedIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.vmManagedIdentity")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.vmManagedIdentity")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.VmManagedIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary />
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VmSecrets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.VaultSecretGroup&gt; VmSecrets { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.VaultSecretGroup&gt; VmSecrets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.VmSecrets" />
      <MemberSignature Language="VB.NET" Value="Public Property VmSecrets As IList(Of VaultSecretGroup)" />
      <MemberSignature Language="F#" Value="member this.VmSecrets : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.VaultSecretGroup&gt; with get, set" Usage="Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.VmSecrets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.vmSecrets")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.vmSecrets")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.VaultSecretGroup&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets virtual machine secretes.
            </summary>
        <value>To be added.</value>
        <remarks>
            The secrets to install in the virtual machines.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="VmSize">
      <MemberSignature Language="C#" Value="public string VmSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VmSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.VmSize" />
      <MemberSignature Language="VB.NET" Value="Public Property VmSize As String" />
      <MemberSignature Language="F#" Value="member this.VmSize : string with get, set" Usage="Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.NodeType.VmSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.vmSize")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.vmSize")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the size of virtual machines in the pool. All virtual
            machines in a pool are the same size. For example, Standard_D3.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
