<Type Name="ServicePlacementRequireDomainDistributionPolicy" FullName="Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.ServicePlacementRequireDomainDistributionPolicy">
  <TypeSignature Language="C#" Value="public class ServicePlacementRequireDomainDistributionPolicy : Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.ServicePlacementPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServicePlacementRequireDomainDistributionPolicy extends Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.ServicePlacementPolicy" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.ServicePlacementRequireDomainDistributionPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Class ServicePlacementRequireDomainDistributionPolicy&#xA;Inherits ServicePlacementPolicy" />
  <TypeSignature Language="F#" Value="type ServicePlacementRequireDomainDistributionPolicy = class&#xA;    inherit ServicePlacementPolicy" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ServiceFabricManagedClusters</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.ServicePlacementPolicy</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Newtonsoft.Json.JsonObject("RequiredDomainDistribution")]</AttributeName>
      <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonObject("RequiredDomainDistribution")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
             Describes the policy to be used for placement of a Service Fabric
             service where two replicas
             from the same partition should never be placed in the same fault or
             upgrade domain.
            
             While this is not common it can expose the service to an increased risk
             of concurrent failures
             due to unplanned outages or other cases of subsequent/concurrent
             failures. As an example, consider
             a case where replicas are deployed across different data center, with
             one replica per location.
             In the event that one of the datacenters goes offline, normally the
             replica that was placed in that
             datacenter will be packed into one of the remaining datacenters. If
             this is not desirable then this
             policy should be set.
            
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServicePlacementRequireDomainDistributionPolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.ServicePlacementRequireDomainDistributionPolicy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the
            ServicePlacementRequireDomainDistributionPolicy class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServicePlacementRequireDomainDistributionPolicy (string domainName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string domainName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.ServicePlacementRequireDomainDistributionPolicy.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (domainName As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.ServicePlacementRequireDomainDistributionPolicy : string -&gt; Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.ServicePlacementRequireDomainDistributionPolicy" Usage="new Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.ServicePlacementRequireDomainDistributionPolicy domainName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="domainName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="domainName">The name of the domain that should used
            for placement as per this policy.</param>
        <summary>
            Initializes a new instance of the
            ServicePlacementRequireDomainDistributionPolicy class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DomainName">
      <MemberSignature Language="C#" Value="public string DomainName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DomainName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.ServicePlacementRequireDomainDistributionPolicy.DomainName" />
      <MemberSignature Language="VB.NET" Value="Public Property DomainName As String" />
      <MemberSignature Language="F#" Value="member this.DomainName : string with get, set" Usage="Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.ServicePlacementRequireDomainDistributionPolicy.DomainName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="domainName")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="domainName")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name of the domain that should used for placement
            as per this policy.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ServiceFabricManagedClusters.Models.ServicePlacementRequireDomainDistributionPolicy.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="servicePlacementRequireDomainDistributionPolicy.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabricManagedClusters</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
