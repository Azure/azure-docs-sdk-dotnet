<Type Name="MockableConfluentResourceGroupResource" FullName="Azure.ResourceManager.Confluent.Mocking.MockableConfluentResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableConfluentResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableConfluentResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Confluent.Mocking.MockableConfluentResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableConfluentResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableConfluentResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableConfluentResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Mocking.MockableConfluentResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Confluent.Mocking.MockableConfluentResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfluentOrganization">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Confluent.ConfluentOrganizationResource&gt; GetConfluentOrganization (string organizationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Confluent.ConfluentOrganizationResource&gt; GetConfluentOrganization(string organizationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Mocking.MockableConfluentResourceGroupResource.GetConfluentOrganization(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConfluentOrganization (organizationName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ConfluentOrganizationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetConfluentOrganization : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Confluent.ConfluentOrganizationResource&gt;&#xA;override this.GetConfluentOrganization : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Confluent.ConfluentOrganizationResource&gt;" Usage="mockableConfluentResourceGroupResource.GetConfluentOrganization (organizationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Confluent.ConfluentOrganizationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="organizationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="organizationName"> Organization resource name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the properties of a specific Organization resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}</description></item><item><term>Operation Id</term><description>Organization_Get</description></item><item><term>Default Api Version</term><description>2024-02-13</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Confluent.ConfluentOrganizationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="organizationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="organizationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConfluentOrganizationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Confluent.ConfluentOrganizationResource&gt;&gt; GetConfluentOrganizationAsync (string organizationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Confluent.ConfluentOrganizationResource&gt;&gt; GetConfluentOrganizationAsync(string organizationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Mocking.MockableConfluentResourceGroupResource.GetConfluentOrganizationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConfluentOrganizationAsync (organizationName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ConfluentOrganizationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetConfluentOrganizationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Confluent.ConfluentOrganizationResource&gt;&gt;&#xA;override this.GetConfluentOrganizationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Confluent.ConfluentOrganizationResource&gt;&gt;" Usage="mockableConfluentResourceGroupResource.GetConfluentOrganizationAsync (organizationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Confluent.ConfluentOrganizationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="organizationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="organizationName"> Organization resource name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the properties of a specific Organization resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}</description></item><item><term>Operation Id</term><description>Organization_Get</description></item><item><term>Default Api Version</term><description>2024-02-13</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Confluent.ConfluentOrganizationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="organizationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="organizationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConfluentOrganizations">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Confluent.ConfluentOrganizationCollection GetConfluentOrganizations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Confluent.ConfluentOrganizationCollection GetConfluentOrganizations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Mocking.MockableConfluentResourceGroupResource.GetConfluentOrganizations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConfluentOrganizations () As ConfluentOrganizationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetConfluentOrganizations : unit -&gt; Azure.ResourceManager.Confluent.ConfluentOrganizationCollection&#xA;override this.GetConfluentOrganizations : unit -&gt; Azure.ResourceManager.Confluent.ConfluentOrganizationCollection" Usage="mockableConfluentResourceGroupResource.GetConfluentOrganizations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Confluent.ConfluentOrganizationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ConfluentOrganizationResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of ConfluentOrganizationResources and their operations over a ConfluentOrganizationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateOrganization">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Confluent.ConfluentOrganizationResource&gt; ValidateOrganization (string organizationName, Azure.ResourceManager.Confluent.ConfluentOrganizationData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Confluent.ConfluentOrganizationResource&gt; ValidateOrganization(string organizationName, class Azure.ResourceManager.Confluent.ConfluentOrganizationData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Mocking.MockableConfluentResourceGroupResource.ValidateOrganization(System.String,Azure.ResourceManager.Confluent.ConfluentOrganizationData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateOrganization (organizationName As String, data As ConfluentOrganizationData, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ConfluentOrganizationResource)" />
      <MemberSignature Language="F#" Value="abstract member ValidateOrganization : string * Azure.ResourceManager.Confluent.ConfluentOrganizationData * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Confluent.ConfluentOrganizationResource&gt;&#xA;override this.ValidateOrganization : string * Azure.ResourceManager.Confluent.ConfluentOrganizationData * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Confluent.ConfluentOrganizationResource&gt;" Usage="mockableConfluentResourceGroupResource.ValidateOrganization (organizationName, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Confluent.ConfluentOrganizationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="organizationName" Type="System.String" />
        <Parameter Name="data" Type="Azure.ResourceManager.Confluent.ConfluentOrganizationData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="organizationName"> Organization resource name. </param>
        <param name="data"> Organization resource model. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Organization Validate proxy resource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/validations/{organizationName}/orgvalidate</description></item><item><term>Operation Id</term><description>Validations_ValidateOrganization</description></item><item><term>Default Api Version</term><description>2024-02-13</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="organizationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="organizationName" /> or <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateOrganizationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Confluent.ConfluentOrganizationResource&gt;&gt; ValidateOrganizationAsync (string organizationName, Azure.ResourceManager.Confluent.ConfluentOrganizationData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Confluent.ConfluentOrganizationResource&gt;&gt; ValidateOrganizationAsync(string organizationName, class Azure.ResourceManager.Confluent.ConfluentOrganizationData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Mocking.MockableConfluentResourceGroupResource.ValidateOrganizationAsync(System.String,Azure.ResourceManager.Confluent.ConfluentOrganizationData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateOrganizationAsync (organizationName As String, data As ConfluentOrganizationData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ConfluentOrganizationResource))" />
      <MemberSignature Language="F#" Value="abstract member ValidateOrganizationAsync : string * Azure.ResourceManager.Confluent.ConfluentOrganizationData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Confluent.ConfluentOrganizationResource&gt;&gt;&#xA;override this.ValidateOrganizationAsync : string * Azure.ResourceManager.Confluent.ConfluentOrganizationData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Confluent.ConfluentOrganizationResource&gt;&gt;" Usage="mockableConfluentResourceGroupResource.ValidateOrganizationAsync (organizationName, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Confluent.ConfluentOrganizationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="organizationName" Type="System.String" />
        <Parameter Name="data" Type="Azure.ResourceManager.Confluent.ConfluentOrganizationData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="organizationName"> Organization resource name. </param>
        <param name="data"> Organization resource model. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Organization Validate proxy resource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/validations/{organizationName}/orgvalidate</description></item><item><term>Operation Id</term><description>Validations_ValidateOrganization</description></item><item><term>Default Api Version</term><description>2024-02-13</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="organizationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="organizationName" /> or <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateOrganizationV2">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Confluent.Models.ConfluentOrganizationValidationResult&gt; ValidateOrganizationV2 (string organizationName, Azure.ResourceManager.Confluent.ConfluentOrganizationData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Confluent.Models.ConfluentOrganizationValidationResult&gt; ValidateOrganizationV2(string organizationName, class Azure.ResourceManager.Confluent.ConfluentOrganizationData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Mocking.MockableConfluentResourceGroupResource.ValidateOrganizationV2(System.String,Azure.ResourceManager.Confluent.ConfluentOrganizationData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateOrganizationV2 (organizationName As String, data As ConfluentOrganizationData, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ConfluentOrganizationValidationResult)" />
      <MemberSignature Language="F#" Value="abstract member ValidateOrganizationV2 : string * Azure.ResourceManager.Confluent.ConfluentOrganizationData * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Confluent.Models.ConfluentOrganizationValidationResult&gt;&#xA;override this.ValidateOrganizationV2 : string * Azure.ResourceManager.Confluent.ConfluentOrganizationData * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Confluent.Models.ConfluentOrganizationValidationResult&gt;" Usage="mockableConfluentResourceGroupResource.ValidateOrganizationV2 (organizationName, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Confluent.Models.ConfluentOrganizationValidationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="organizationName" Type="System.String" />
        <Parameter Name="data" Type="Azure.ResourceManager.Confluent.ConfluentOrganizationData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="organizationName"> Organization resource name. </param>
        <param name="data"> Organization resource model. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Organization Validate proxy resource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/validations/{organizationName}/orgvalidateV2</description></item><item><term>Operation Id</term><description>Validations_ValidateOrganizationV2</description></item><item><term>Default Api Version</term><description>2024-02-13</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="organizationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="organizationName" /> or <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateOrganizationV2Async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Confluent.Models.ConfluentOrganizationValidationResult&gt;&gt; ValidateOrganizationV2Async (string organizationName, Azure.ResourceManager.Confluent.ConfluentOrganizationData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Confluent.Models.ConfluentOrganizationValidationResult&gt;&gt; ValidateOrganizationV2Async(string organizationName, class Azure.ResourceManager.Confluent.ConfluentOrganizationData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Confluent.Mocking.MockableConfluentResourceGroupResource.ValidateOrganizationV2Async(System.String,Azure.ResourceManager.Confluent.ConfluentOrganizationData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateOrganizationV2Async (organizationName As String, data As ConfluentOrganizationData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ConfluentOrganizationValidationResult))" />
      <MemberSignature Language="F#" Value="abstract member ValidateOrganizationV2Async : string * Azure.ResourceManager.Confluent.ConfluentOrganizationData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Confluent.Models.ConfluentOrganizationValidationResult&gt;&gt;&#xA;override this.ValidateOrganizationV2Async : string * Azure.ResourceManager.Confluent.ConfluentOrganizationData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Confluent.Models.ConfluentOrganizationValidationResult&gt;&gt;" Usage="mockableConfluentResourceGroupResource.ValidateOrganizationV2Async (organizationName, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Confluent</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Confluent.Models.ConfluentOrganizationValidationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="organizationName" Type="System.String" />
        <Parameter Name="data" Type="Azure.ResourceManager.Confluent.ConfluentOrganizationData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="organizationName"> Organization resource name. </param>
        <param name="data"> Organization resource model. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Organization Validate proxy resource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/validations/{organizationName}/orgvalidateV2</description></item><item><term>Operation Id</term><description>Validations_ValidateOrganizationV2</description></item><item><term>Default Api Version</term><description>2024-02-13</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="organizationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="organizationName" /> or <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
