<Type Name="IWithDnsServer" FullName="Microsoft.Azure.Management.Network.Fluent.NetworkInterface.Update.IWithDnsServer">
  <TypeSignature Language="C#" Value="public interface IWithDnsServer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWithDnsServer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Network.Fluent.NetworkInterface.Update.IWithDnsServer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWithDnsServer" />
  <TypeSignature Language="F#" Value="type IWithDnsServer = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWithDnsServer" />
  <TypeSignature Language="C++ CX" Value="public interface class IWithDnsServer" />
  <TypeSignature Language="C++ WINRT" Value="__interface IWithDnsServer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            The stage of the network interface update allowing to specify DNS servers.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="WithAzureDnsServer">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Network.Fluent.NetworkInterface.Update.IUpdate WithAzureDnsServer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Network.Fluent.NetworkInterface.Update.IUpdate WithAzureDnsServer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.Fluent.NetworkInterface.Update.IWithDnsServer.WithAzureDnsServer" />
      <MemberSignature Language="VB.NET" Value="Public Function WithAzureDnsServer () As IUpdate" />
      <MemberSignature Language="F#" Value="abstract member WithAzureDnsServer : unit -&gt; Microsoft.Azure.Management.Network.Fluent.NetworkInterface.Update.IUpdate" Usage="iWithDnsServer.WithAzureDnsServer " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Azure::Management::Network::Fluent::NetworkInterface::Update::IUpdate ^ WithAzureDnsServer();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::Azure::Management::Network::Fluent::NetworkInterface::Update::IUpdate ^ WithAzureDnsServer();" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::Azure::Management::Network::Fluent::NetworkInterface::Update::IUpdate WithAzureDnsServer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Network.Fluent.NetworkInterface.Update.IUpdate</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Specifies to use the default Azure DNS server for the network interface.
            Using azure DNS server will remove any custom DNS server associated with this network interface.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the network interface update.</return>
      </Docs>
    </Member>
    <Member MemberName="WithDnsServer">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Network.Fluent.NetworkInterface.Update.IUpdate WithDnsServer (string ipAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Network.Fluent.NetworkInterface.Update.IUpdate WithDnsServer(string ipAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.Fluent.NetworkInterface.Update.IWithDnsServer.WithDnsServer(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithDnsServer (ipAddress As String) As IUpdate" />
      <MemberSignature Language="F#" Value="abstract member WithDnsServer : string -&gt; Microsoft.Azure.Management.Network.Fluent.NetworkInterface.Update.IUpdate" Usage="iWithDnsServer.WithDnsServer ipAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Azure::Management::Network::Fluent::NetworkInterface::Update::IUpdate ^ WithDnsServer(System::String ^ ipAddress);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::Azure::Management::Network::Fluent::NetworkInterface::Update::IUpdate ^ WithDnsServer(Platform::String ^ ipAddress);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::Azure::Management::Network::Fluent::NetworkInterface::Update::IUpdate WithDnsServer(std::wstring const &amp; ipAddress);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Network.Fluent.NetworkInterface.Update.IUpdate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ipAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ipAddress">The IP address of the DNS server.</param>
        <summary>
            Specifies the IP address of the custom DNS server to associate with the network interface.
            Note this method's effect is additive, i.e. each time it is used, the new dns server is
            added to the network interface.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the network interface update.</return>
      </Docs>
    </Member>
    <Member MemberName="WithoutDnsServer">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Network.Fluent.NetworkInterface.Update.IUpdate WithoutDnsServer (string ipAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Network.Fluent.NetworkInterface.Update.IUpdate WithoutDnsServer(string ipAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.Fluent.NetworkInterface.Update.IWithDnsServer.WithoutDnsServer(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithoutDnsServer (ipAddress As String) As IUpdate" />
      <MemberSignature Language="F#" Value="abstract member WithoutDnsServer : string -&gt; Microsoft.Azure.Management.Network.Fluent.NetworkInterface.Update.IUpdate" Usage="iWithDnsServer.WithoutDnsServer ipAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Azure::Management::Network::Fluent::NetworkInterface::Update::IUpdate ^ WithoutDnsServer(System::String ^ ipAddress);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::Azure::Management::Network::Fluent::NetworkInterface::Update::IUpdate ^ WithoutDnsServer(Platform::String ^ ipAddress);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::Azure::Management::Network::Fluent::NetworkInterface::Update::IUpdate WithoutDnsServer(std::wstring const &amp; ipAddress);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Network.Fluent.NetworkInterface.Update.IUpdate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ipAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ipAddress">The IP address of the DNS server.</param>
        <summary>
            Removes a DNS server associated with the network interface.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>The next stage of the network interface update.</return>
      </Docs>
    </Member>
  </Members>
</Type>