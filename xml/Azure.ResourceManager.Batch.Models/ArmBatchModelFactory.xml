<Type Name="ArmBatchModelFactory" FullName="Azure.ResourceManager.Batch.Models.ArmBatchModelFactory">
  <TypeSignature Language="C#" Value="public static class ArmBatchModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ArmBatchModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Batch.Models.ArmBatchModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ArmBatchModelFactory" />
  <TypeSignature Language="F#" Value="type ArmBatchModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Batch</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BatchAccountCertificateCreateOrUpdateContent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Batch.Models.BatchAccountCertificateCreateOrUpdateContent BatchAccountCertificateCreateOrUpdateContent (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string thumbprintAlgorithm = default, string thumbprintString = default, Azure.ResourceManager.Batch.Models.BatchAccountCertificateFormat? format = default, BinaryData data = default, string password = default, Azure.ETag? etag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Batch.Models.BatchAccountCertificateCreateOrUpdateContent BatchAccountCertificateCreateOrUpdateContent(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string thumbprintAlgorithm, string thumbprintString, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Batch.Models.BatchAccountCertificateFormat&gt; format, class System.BinaryData data, string password, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchAccountCertificateCreateOrUpdateContent(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.Nullable{Azure.ResourceManager.Batch.Models.BatchAccountCertificateFormat},System.BinaryData,System.String,System.Nullable{Azure.ETag})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BatchAccountCertificateCreateOrUpdateContent (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional thumbprintAlgorithm As String = Nothing, Optional thumbprintString As String = Nothing, Optional format As Nullable(Of BatchAccountCertificateFormat) = Nothing, Optional data As BinaryData = Nothing, Optional password As String = Nothing, Optional etag As Nullable(Of ETag) = Nothing) As BatchAccountCertificateCreateOrUpdateContent" />
      <MemberSignature Language="F#" Value="static member BatchAccountCertificateCreateOrUpdateContent : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * string * Nullable&lt;Azure.ResourceManager.Batch.Models.BatchAccountCertificateFormat&gt; * BinaryData * string * Nullable&lt;Azure.ETag&gt; -&gt; Azure.ResourceManager.Batch.Models.BatchAccountCertificateCreateOrUpdateContent" Usage="Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchAccountCertificateCreateOrUpdateContent (id, name, resourceType, systemData, thumbprintAlgorithm, thumbprintString, format, data, password, etag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Batch</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Batch.Models.BatchAccountCertificateCreateOrUpdateContent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="thumbprintAlgorithm" Type="System.String" />
        <Parameter Name="thumbprintString" Type="System.String" />
        <Parameter Name="format" Type="System.Nullable&lt;Azure.ResourceManager.Batch.Models.BatchAccountCertificateFormat&gt;" />
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="thumbprintAlgorithm"> This must match the first portion of the certificate name. Currently required to be 'SHA1'. </param>
        <param name="thumbprintString"> This must match the thumbprint from the name. </param>
        <param name="format"> The format of the certificate - either Pfx or Cer. If omitted, the default is Pfx. </param>
        <param name="data"> The maximum size is 10KB. </param>
        <param name="password"> This must not be specified if the certificate format is Cer. </param>
        <param name="etag"> The ETag of the resource, used for concurrency statements. </param>
        <summary> Initializes a new instance of BatchAccountCertificateCreateOrUpdateContent. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Batch.Models.BatchAccountCertificateCreateOrUpdateContent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchAccountCertificateData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Batch.BatchAccountCertificateData BatchAccountCertificateData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string thumbprintAlgorithm = default, string thumbprintString = default, Azure.ResourceManager.Batch.Models.BatchAccountCertificateFormat? format = default, Azure.ResourceManager.Batch.Models.BatchAccountCertificateProvisioningState? provisioningState = default, DateTimeOffset? provisioningStateTransitOn = default, Azure.ResourceManager.Batch.Models.BatchAccountCertificateProvisioningState? previousProvisioningState = default, DateTimeOffset? previousProvisioningStateTransitOn = default, string publicData = default, Azure.ResponseError deleteCertificateError = default, Azure.ETag? etag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Batch.BatchAccountCertificateData BatchAccountCertificateData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string thumbprintAlgorithm, string thumbprintString, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Batch.Models.BatchAccountCertificateFormat&gt; format, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Batch.Models.BatchAccountCertificateProvisioningState&gt; provisioningState, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; provisioningStateTransitOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Batch.Models.BatchAccountCertificateProvisioningState&gt; previousProvisioningState, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; previousProvisioningStateTransitOn, string publicData, class Azure.ResponseError deleteCertificateError, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchAccountCertificateData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.Nullable{Azure.ResourceManager.Batch.Models.BatchAccountCertificateFormat},System.Nullable{Azure.ResourceManager.Batch.Models.BatchAccountCertificateProvisioningState},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.Batch.Models.BatchAccountCertificateProvisioningState},System.Nullable{System.DateTimeOffset},System.String,Azure.ResponseError,System.Nullable{Azure.ETag})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BatchAccountCertificateData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional thumbprintAlgorithm As String = Nothing, Optional thumbprintString As String = Nothing, Optional format As Nullable(Of BatchAccountCertificateFormat) = Nothing, Optional provisioningState As Nullable(Of BatchAccountCertificateProvisioningState) = Nothing, Optional provisioningStateTransitOn As Nullable(Of DateTimeOffset) = Nothing, Optional previousProvisioningState As Nullable(Of BatchAccountCertificateProvisioningState) = Nothing, Optional previousProvisioningStateTransitOn As Nullable(Of DateTimeOffset) = Nothing, Optional publicData As String = Nothing, Optional deleteCertificateError As ResponseError = Nothing, Optional etag As Nullable(Of ETag) = Nothing) As BatchAccountCertificateData" />
      <MemberSignature Language="F#" Value="static member BatchAccountCertificateData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * string * Nullable&lt;Azure.ResourceManager.Batch.Models.BatchAccountCertificateFormat&gt; * Nullable&lt;Azure.ResourceManager.Batch.Models.BatchAccountCertificateProvisioningState&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.Batch.Models.BatchAccountCertificateProvisioningState&gt; * Nullable&lt;DateTimeOffset&gt; * string * Azure.ResponseError * Nullable&lt;Azure.ETag&gt; -&gt; Azure.ResourceManager.Batch.BatchAccountCertificateData" Usage="Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchAccountCertificateData (id, name, resourceType, systemData, thumbprintAlgorithm, thumbprintString, format, provisioningState, provisioningStateTransitOn, previousProvisioningState, previousProvisioningStateTransitOn, publicData, deleteCertificateError, etag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Batch</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Batch.BatchAccountCertificateData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="thumbprintAlgorithm" Type="System.String" />
        <Parameter Name="thumbprintString" Type="System.String" />
        <Parameter Name="format" Type="System.Nullable&lt;Azure.ResourceManager.Batch.Models.BatchAccountCertificateFormat&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Batch.Models.BatchAccountCertificateProvisioningState&gt;" />
        <Parameter Name="provisioningStateTransitOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="previousProvisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Batch.Models.BatchAccountCertificateProvisioningState&gt;" />
        <Parameter Name="previousProvisioningStateTransitOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="publicData" Type="System.String" />
        <Parameter Name="deleteCertificateError" Type="Azure.ResponseError" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="thumbprintAlgorithm"> This must match the first portion of the certificate name. Currently required to be 'SHA1'. </param>
        <param name="thumbprintString"> This must match the thumbprint from the name. </param>
        <param name="format"> The format of the certificate - either Pfx or Cer. If omitted, the default is Pfx. </param>
        <param name="provisioningState" />
        <param name="provisioningStateTransitOn"> The time at which the certificate entered its current state. </param>
        <param name="previousProvisioningState"> The previous provisioned state of the resource. </param>
        <param name="previousProvisioningStateTransitOn"> The time at which the certificate entered its previous state. </param>
        <param name="publicData"> The public key of the certificate. </param>
        <param name="deleteCertificateError"> This is only returned when the certificate provisioningState is 'Failed'. </param>
        <param name="etag"> The ETag of the resource, used for concurrency statements. </param>
        <summary> Initializes a new instance of BatchAccountCertificateData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Batch.BatchAccountCertificateData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchAccountData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Batch.BatchAccountData BatchAccountData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, string accountEndpoint = default, string nodeManagementEndpoint = default, Azure.ResourceManager.Batch.Models.BatchProvisioningState? provisioningState = default, Azure.ResourceManager.Batch.Models.BatchAccountPoolAllocationMode? poolAllocationMode = default, Azure.ResourceManager.Batch.Models.BatchKeyVaultReference keyVaultReference = default, Azure.ResourceManager.Batch.Models.BatchPublicNetworkAccess? publicNetworkAccess = default, Azure.ResourceManager.Batch.Models.BatchNetworkProfile networkProfile = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Batch.BatchPrivateEndpointConnectionData&gt; privateEndpointConnections = default, Azure.ResourceManager.Batch.Models.BatchAccountAutoStorageConfiguration autoStorage = default, Azure.ResourceManager.Batch.Models.BatchAccountEncryptionConfiguration encryption = default, int? dedicatedCoreQuota = default, int? lowPriorityCoreQuota = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Batch.Models.BatchVmFamilyCoreQuota&gt; dedicatedCoreQuotaPerVmFamily = default, bool? isDedicatedCoreQuotaPerVmFamilyEnforced = default, int? poolQuota = default, int? activeJobAndJobScheduleQuota = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Batch.Models.BatchAuthenticationMode&gt; allowedAuthenticationModes = default, Azure.Core.AzureLocation? location = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Batch.BatchAccountData BatchAccountData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, string accountEndpoint, string nodeManagementEndpoint, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Batch.Models.BatchProvisioningState&gt; provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Batch.Models.BatchAccountPoolAllocationMode&gt; poolAllocationMode, class Azure.ResourceManager.Batch.Models.BatchKeyVaultReference keyVaultReference, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Batch.Models.BatchPublicNetworkAccess&gt; publicNetworkAccess, class Azure.ResourceManager.Batch.Models.BatchNetworkProfile networkProfile, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Batch.BatchPrivateEndpointConnectionData&gt; privateEndpointConnections, class Azure.ResourceManager.Batch.Models.BatchAccountAutoStorageConfiguration autoStorage, class Azure.ResourceManager.Batch.Models.BatchAccountEncryptionConfiguration encryption, valuetype System.Nullable`1&lt;int32&gt; dedicatedCoreQuota, valuetype System.Nullable`1&lt;int32&gt; lowPriorityCoreQuota, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Batch.Models.BatchVmFamilyCoreQuota&gt; dedicatedCoreQuotaPerVmFamily, valuetype System.Nullable`1&lt;bool&gt; isDedicatedCoreQuotaPerVmFamilyEnforced, valuetype System.Nullable`1&lt;int32&gt; poolQuota, valuetype System.Nullable`1&lt;int32&gt; activeJobAndJobScheduleQuota, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.Batch.Models.BatchAuthenticationMode&gt; allowedAuthenticationModes, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchAccountData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.Models.ManagedServiceIdentity,System.String,System.String,System.Nullable{Azure.ResourceManager.Batch.Models.BatchProvisioningState},System.Nullable{Azure.ResourceManager.Batch.Models.BatchAccountPoolAllocationMode},Azure.ResourceManager.Batch.Models.BatchKeyVaultReference,System.Nullable{Azure.ResourceManager.Batch.Models.BatchPublicNetworkAccess},Azure.ResourceManager.Batch.Models.BatchNetworkProfile,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Batch.BatchPrivateEndpointConnectionData},Azure.ResourceManager.Batch.Models.BatchAccountAutoStorageConfiguration,Azure.ResourceManager.Batch.Models.BatchAccountEncryptionConfiguration,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Batch.Models.BatchVmFamilyCoreQuota},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Batch.Models.BatchAuthenticationMode},System.Nullable{Azure.Core.AzureLocation},System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BatchAccountData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional accountEndpoint As String = Nothing, Optional nodeManagementEndpoint As String = Nothing, Optional provisioningState As Nullable(Of BatchProvisioningState) = Nothing, Optional poolAllocationMode As Nullable(Of BatchAccountPoolAllocationMode) = Nothing, Optional keyVaultReference As BatchKeyVaultReference = Nothing, Optional publicNetworkAccess As Nullable(Of BatchPublicNetworkAccess) = Nothing, Optional networkProfile As BatchNetworkProfile = Nothing, Optional privateEndpointConnections As IEnumerable(Of BatchPrivateEndpointConnectionData) = Nothing, Optional autoStorage As BatchAccountAutoStorageConfiguration = Nothing, Optional encryption As BatchAccountEncryptionConfiguration = Nothing, Optional dedicatedCoreQuota As Nullable(Of Integer) = Nothing, Optional lowPriorityCoreQuota As Nullable(Of Integer) = Nothing, Optional dedicatedCoreQuotaPerVmFamily As IEnumerable(Of BatchVmFamilyCoreQuota) = Nothing, Optional isDedicatedCoreQuotaPerVmFamilyEnforced As Nullable(Of Boolean) = Nothing, Optional poolQuota As Nullable(Of Integer) = Nothing, Optional activeJobAndJobScheduleQuota As Nullable(Of Integer) = Nothing, Optional allowedAuthenticationModes As IEnumerable(Of BatchAuthenticationMode) = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional tags As IDictionary(Of String, String) = Nothing) As BatchAccountData" />
      <MemberSignature Language="F#" Value="static member BatchAccountData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.ResourceManager.Models.ManagedServiceIdentity * string * string * Nullable&lt;Azure.ResourceManager.Batch.Models.BatchProvisioningState&gt; * Nullable&lt;Azure.ResourceManager.Batch.Models.BatchAccountPoolAllocationMode&gt; * Azure.ResourceManager.Batch.Models.BatchKeyVaultReference * Nullable&lt;Azure.ResourceManager.Batch.Models.BatchPublicNetworkAccess&gt; * Azure.ResourceManager.Batch.Models.BatchNetworkProfile * seq&lt;Azure.ResourceManager.Batch.BatchPrivateEndpointConnectionData&gt; * Azure.ResourceManager.Batch.Models.BatchAccountAutoStorageConfiguration * Azure.ResourceManager.Batch.Models.BatchAccountEncryptionConfiguration * Nullable&lt;int&gt; * Nullable&lt;int&gt; * seq&lt;Azure.ResourceManager.Batch.Models.BatchVmFamilyCoreQuota&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * seq&lt;Azure.ResourceManager.Batch.Models.BatchAuthenticationMode&gt; * Nullable&lt;Azure.Core.AzureLocation&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Azure.ResourceManager.Batch.BatchAccountData" Usage="Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchAccountData (id, name, resourceType, systemData, identity, accountEndpoint, nodeManagementEndpoint, provisioningState, poolAllocationMode, keyVaultReference, publicNetworkAccess, networkProfile, privateEndpointConnections, autoStorage, encryption, dedicatedCoreQuota, lowPriorityCoreQuota, dedicatedCoreQuotaPerVmFamily, isDedicatedCoreQuotaPerVmFamilyEnforced, poolQuota, activeJobAndJobScheduleQuota, allowedAuthenticationModes, location, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Batch</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Batch.BatchAccountData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" />
        <Parameter Name="accountEndpoint" Type="System.String" />
        <Parameter Name="nodeManagementEndpoint" Type="System.String" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Batch.Models.BatchProvisioningState&gt;" />
        <Parameter Name="poolAllocationMode" Type="System.Nullable&lt;Azure.ResourceManager.Batch.Models.BatchAccountPoolAllocationMode&gt;" />
        <Parameter Name="keyVaultReference" Type="Azure.ResourceManager.Batch.Models.BatchKeyVaultReference" />
        <Parameter Name="publicNetworkAccess" Type="System.Nullable&lt;Azure.ResourceManager.Batch.Models.BatchPublicNetworkAccess&gt;" />
        <Parameter Name="networkProfile" Type="Azure.ResourceManager.Batch.Models.BatchNetworkProfile" />
        <Parameter Name="privateEndpointConnections" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Batch.BatchPrivateEndpointConnectionData&gt;" />
        <Parameter Name="autoStorage" Type="Azure.ResourceManager.Batch.Models.BatchAccountAutoStorageConfiguration" />
        <Parameter Name="encryption" Type="Azure.ResourceManager.Batch.Models.BatchAccountEncryptionConfiguration" />
        <Parameter Name="dedicatedCoreQuota" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="lowPriorityCoreQuota" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="dedicatedCoreQuotaPerVmFamily" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Batch.Models.BatchVmFamilyCoreQuota&gt;" />
        <Parameter Name="isDedicatedCoreQuotaPerVmFamilyEnforced" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="poolQuota" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="activeJobAndJobScheduleQuota" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="allowedAuthenticationModes" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Batch.Models.BatchAuthenticationMode&gt;" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="identity"> The identity of the Batch account. Current supported identity types: None, SystemAssigned, UserAssigned. </param>
        <param name="accountEndpoint"> The account endpoint used to interact with the Batch service. </param>
        <param name="nodeManagementEndpoint"> The endpoint used by compute node to connect to the Batch node management service. </param>
        <param name="provisioningState"> The provisioned state of the resource. </param>
        <param name="poolAllocationMode"> The allocation mode for creating pools in the Batch account. </param>
        <param name="keyVaultReference"> Identifies the Azure key vault associated with a Batch account. </param>
        <param name="publicNetworkAccess"> If not specified, the default value is 'enabled'. </param>
        <param name="networkProfile"> The network profile only takes effect when publicNetworkAccess is enabled. </param>
        <param name="privateEndpointConnections"> List of private endpoint connections associated with the Batch account. </param>
        <param name="autoStorage"> Contains information about the auto-storage account associated with a Batch account. </param>
        <param name="encryption"> Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead. </param>
        <param name="dedicatedCoreQuota"> For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned. </param>
        <param name="lowPriorityCoreQuota"> For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned. </param>
        <param name="dedicatedCoreQuotaPerVmFamily"> A list of the dedicated core quota per Virtual Machine family for the Batch account. For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned. </param>
        <param name="isDedicatedCoreQuotaPerVmFamilyEnforced"> If this flag is true, dedicated core quota is enforced via both the dedicatedCoreQuotaPerVMFamily and dedicatedCoreQuota properties on the account. If this flag is false, dedicated core quota is enforced only via the dedicatedCoreQuota property on the account and does not consider Virtual Machine family. </param>
        <param name="poolQuota"> The pool quota for the Batch account. </param>
        <param name="activeJobAndJobScheduleQuota"> The active job and job schedule quota for the Batch account. </param>
        <param name="allowedAuthenticationModes"> List of allowed authentication modes for the Batch account that can be used to authenticate with the data plane. This does not affect authentication with the control plane. </param>
        <param name="location"> The location of the resource. </param>
        <param name="tags"> The tags of the resource. </param>
        <summary> Initializes a new instance of BatchAccountData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Batch.BatchAccountData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchAccountDetectorData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Batch.BatchAccountDetectorData BatchAccountDetectorData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string value = default, Azure.ETag? etag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Batch.BatchAccountDetectorData BatchAccountDetectorData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string value, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchAccountDetectorData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Nullable{Azure.ETag})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BatchAccountDetectorData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional value As String = Nothing, Optional etag As Nullable(Of ETag) = Nothing) As BatchAccountDetectorData" />
      <MemberSignature Language="F#" Value="static member BatchAccountDetectorData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * Nullable&lt;Azure.ETag&gt; -&gt; Azure.ResourceManager.Batch.BatchAccountDetectorData" Usage="Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchAccountDetectorData (id, name, resourceType, systemData, value, etag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Batch</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Batch.BatchAccountDetectorData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="value"> A base64 encoded string that represents the content of a detector. </param>
        <param name="etag"> The ETag of the resource, used for concurrency statements. </param>
        <summary> Initializes a new instance of BatchAccountDetectorData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Batch.BatchAccountDetectorData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchAccountEndpointDependency">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Batch.Models.BatchAccountEndpointDependency BatchAccountEndpointDependency (string domainName = default, string description = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Batch.Models.BatchEndpointDetail&gt; endpointDetails = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Batch.Models.BatchAccountEndpointDependency BatchAccountEndpointDependency(string domainName, string description, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Batch.Models.BatchEndpointDetail&gt; endpointDetails) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchAccountEndpointDependency(System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Batch.Models.BatchEndpointDetail})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BatchAccountEndpointDependency (Optional domainName As String = Nothing, Optional description As String = Nothing, Optional endpointDetails As IEnumerable(Of BatchEndpointDetail) = Nothing) As BatchAccountEndpointDependency" />
      <MemberSignature Language="F#" Value="static member BatchAccountEndpointDependency : string * string * seq&lt;Azure.ResourceManager.Batch.Models.BatchEndpointDetail&gt; -&gt; Azure.ResourceManager.Batch.Models.BatchAccountEndpointDependency" Usage="Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchAccountEndpointDependency (domainName, description, endpointDetails)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Batch</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Batch.Models.BatchAccountEndpointDependency</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domainName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="endpointDetails" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Batch.Models.BatchEndpointDetail&gt;" />
      </Parameters>
      <Docs>
        <param name="domainName"> The domain name of the dependency. Domain names may be fully qualified or may contain a * wildcard. </param>
        <param name="description"> Human-readable supplemental information about the dependency and when it is applicable. </param>
        <param name="endpointDetails"> The list of connection details for this endpoint. </param>
        <summary> Initializes a new instance of BatchAccountEndpointDependency. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Batch.Models.BatchAccountEndpointDependency" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchAccountKeys">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Batch.Models.BatchAccountKeys BatchAccountKeys (string accountName = default, string primary = default, string secondary = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Batch.Models.BatchAccountKeys BatchAccountKeys(string accountName, string primary, string secondary) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchAccountKeys(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BatchAccountKeys (Optional accountName As String = Nothing, Optional primary As String = Nothing, Optional secondary As String = Nothing) As BatchAccountKeys" />
      <MemberSignature Language="F#" Value="static member BatchAccountKeys : string * string * string -&gt; Azure.ResourceManager.Batch.Models.BatchAccountKeys" Usage="Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchAccountKeys (accountName, primary, secondary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Batch</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Batch.Models.BatchAccountKeys</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="primary" Type="System.String" />
        <Parameter Name="secondary" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="accountName"> The Batch account name. </param>
        <param name="primary"> The primary key associated with the account. </param>
        <param name="secondary"> The secondary key associated with the account. </param>
        <summary> Initializes a new instance of BatchAccountKeys. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Batch.Models.BatchAccountKeys" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchAccountOutboundEnvironmentEndpoint">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Batch.Models.BatchAccountOutboundEnvironmentEndpoint BatchAccountOutboundEnvironmentEndpoint (string category = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Batch.Models.BatchAccountEndpointDependency&gt; endpoints = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Batch.Models.BatchAccountOutboundEnvironmentEndpoint BatchAccountOutboundEnvironmentEndpoint(string category, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Batch.Models.BatchAccountEndpointDependency&gt; endpoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchAccountOutboundEnvironmentEndpoint(System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Batch.Models.BatchAccountEndpointDependency})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BatchAccountOutboundEnvironmentEndpoint (Optional category As String = Nothing, Optional endpoints As IEnumerable(Of BatchAccountEndpointDependency) = Nothing) As BatchAccountOutboundEnvironmentEndpoint" />
      <MemberSignature Language="F#" Value="static member BatchAccountOutboundEnvironmentEndpoint : string * seq&lt;Azure.ResourceManager.Batch.Models.BatchAccountEndpointDependency&gt; -&gt; Azure.ResourceManager.Batch.Models.BatchAccountOutboundEnvironmentEndpoint" Usage="Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchAccountOutboundEnvironmentEndpoint (category, endpoints)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Batch</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Batch.Models.BatchAccountOutboundEnvironmentEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="endpoints" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Batch.Models.BatchAccountEndpointDependency&gt;" />
      </Parameters>
      <Docs>
        <param name="category"> The type of service that the Batch service connects to. </param>
        <param name="endpoints"> The endpoints for this service to which the Batch service makes outbound calls. </param>
        <summary> Initializes a new instance of BatchAccountOutboundEnvironmentEndpoint. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Batch.Models.BatchAccountOutboundEnvironmentEndpoint" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchAccountPoolAutoScaleRun">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Batch.Models.BatchAccountPoolAutoScaleRun BatchAccountPoolAutoScaleRun (DateTimeOffset evaluationOn = default, string results = default, Azure.ResponseError error = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Batch.Models.BatchAccountPoolAutoScaleRun BatchAccountPoolAutoScaleRun(valuetype System.DateTimeOffset evaluationOn, string results, class Azure.ResponseError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchAccountPoolAutoScaleRun(System.DateTimeOffset,System.String,Azure.ResponseError)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BatchAccountPoolAutoScaleRun (Optional evaluationOn As DateTimeOffset = Nothing, Optional results As String = Nothing, Optional error As ResponseError = Nothing) As BatchAccountPoolAutoScaleRun" />
      <MemberSignature Language="F#" Value="static member BatchAccountPoolAutoScaleRun : DateTimeOffset * string * Azure.ResponseError -&gt; Azure.ResourceManager.Batch.Models.BatchAccountPoolAutoScaleRun" Usage="Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchAccountPoolAutoScaleRun (evaluationOn, results, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Batch</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Batch.Models.BatchAccountPoolAutoScaleRun</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evaluationOn" Type="System.DateTimeOffset" />
        <Parameter Name="results" Type="System.String" />
        <Parameter Name="error" Type="Azure.ResponseError" />
      </Parameters>
      <Docs>
        <param name="evaluationOn"> The time at which the autoscale formula was last evaluated. </param>
        <param name="results"> Each variable value is returned in the form $variable=value, and variables are separated by semicolons. </param>
        <param name="error"> An error that occurred when autoscaling a pool. </param>
        <summary> Initializes a new instance of BatchAccountPoolAutoScaleRun. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Batch.Models.BatchAccountPoolAutoScaleRun" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchAccountPoolData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Batch.BatchAccountPoolData BatchAccountPoolData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, string displayName = default, DateTimeOffset? lastModifiedOn = default, DateTimeOffset? createdOn = default, Azure.ResourceManager.Batch.Models.BatchAccountPoolProvisioningState? provisioningState = default, DateTimeOffset? provisioningStateTransitOn = default, Azure.ResourceManager.Batch.Models.BatchAccountPoolAllocationState? allocationState = default, DateTimeOffset? allocationStateTransitionOn = default, string vmSize = default, Azure.ResourceManager.Batch.Models.BatchDeploymentConfiguration deploymentConfiguration = default, int? currentDedicatedNodes = default, int? currentLowPriorityNodes = default, Azure.ResourceManager.Batch.Models.BatchAccountPoolScaleSettings scaleSettings = default, Azure.ResourceManager.Batch.Models.BatchAccountPoolAutoScaleRun autoScaleRun = default, Azure.ResourceManager.Batch.Models.InterNodeCommunicationState? interNodeCommunication = default, Azure.ResourceManager.Batch.Models.BatchNetworkConfiguration networkConfiguration = default, int? taskSlotsPerNode = default, Azure.ResourceManager.Batch.Models.BatchNodeFillType? taskSchedulingNodeFillType = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Batch.Models.BatchUserAccount&gt; userAccounts = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Batch.Models.BatchAccountPoolMetadataItem&gt; metadata = default, Azure.ResourceManager.Batch.Models.BatchAccountPoolStartTask startTask = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Batch.Models.BatchCertificateReference&gt; certificates = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Batch.Models.BatchApplicationPackageReference&gt; applicationPackages = default, System.Collections.Generic.IEnumerable&lt;string&gt; applicationLicenses = default, Azure.ResourceManager.Batch.Models.BatchResizeOperationStatus resizeOperationStatus = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Batch.Models.BatchMountConfiguration&gt; mountConfiguration = default, Azure.ResourceManager.Batch.Models.NodeCommunicationMode? targetNodeCommunicationMode = default, Azure.ResourceManager.Batch.Models.NodeCommunicationMode? currentNodeCommunicationMode = default, Azure.ETag? etag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Batch.BatchAccountPoolData BatchAccountPoolData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, string displayName, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastModifiedOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createdOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Batch.Models.BatchAccountPoolProvisioningState&gt; provisioningState, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; provisioningStateTransitOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Batch.Models.BatchAccountPoolAllocationState&gt; allocationState, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; allocationStateTransitionOn, string vmSize, class Azure.ResourceManager.Batch.Models.BatchDeploymentConfiguration deploymentConfiguration, valuetype System.Nullable`1&lt;int32&gt; currentDedicatedNodes, valuetype System.Nullable`1&lt;int32&gt; currentLowPriorityNodes, class Azure.ResourceManager.Batch.Models.BatchAccountPoolScaleSettings scaleSettings, class Azure.ResourceManager.Batch.Models.BatchAccountPoolAutoScaleRun autoScaleRun, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Batch.Models.InterNodeCommunicationState&gt; interNodeCommunication, class Azure.ResourceManager.Batch.Models.BatchNetworkConfiguration networkConfiguration, valuetype System.Nullable`1&lt;int32&gt; taskSlotsPerNode, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Batch.Models.BatchNodeFillType&gt; taskSchedulingNodeFillType, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Batch.Models.BatchUserAccount&gt; userAccounts, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Batch.Models.BatchAccountPoolMetadataItem&gt; metadata, class Azure.ResourceManager.Batch.Models.BatchAccountPoolStartTask startTask, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Batch.Models.BatchCertificateReference&gt; certificates, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Batch.Models.BatchApplicationPackageReference&gt; applicationPackages, class System.Collections.Generic.IEnumerable`1&lt;string&gt; applicationLicenses, class Azure.ResourceManager.Batch.Models.BatchResizeOperationStatus resizeOperationStatus, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Batch.Models.BatchMountConfiguration&gt; mountConfiguration, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Batch.Models.NodeCommunicationMode&gt; targetNodeCommunicationMode, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Batch.Models.NodeCommunicationMode&gt; currentNodeCommunicationMode, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchAccountPoolData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.Models.ManagedServiceIdentity,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.Batch.Models.BatchAccountPoolProvisioningState},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.Batch.Models.BatchAccountPoolAllocationState},System.Nullable{System.DateTimeOffset},System.String,Azure.ResourceManager.Batch.Models.BatchDeploymentConfiguration,System.Nullable{System.Int32},System.Nullable{System.Int32},Azure.ResourceManager.Batch.Models.BatchAccountPoolScaleSettings,Azure.ResourceManager.Batch.Models.BatchAccountPoolAutoScaleRun,System.Nullable{Azure.ResourceManager.Batch.Models.InterNodeCommunicationState},Azure.ResourceManager.Batch.Models.BatchNetworkConfiguration,System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.Batch.Models.BatchNodeFillType},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Batch.Models.BatchUserAccount},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Batch.Models.BatchAccountPoolMetadataItem},Azure.ResourceManager.Batch.Models.BatchAccountPoolStartTask,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Batch.Models.BatchCertificateReference},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Batch.Models.BatchApplicationPackageReference},System.Collections.Generic.IEnumerable{System.String},Azure.ResourceManager.Batch.Models.BatchResizeOperationStatus,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Batch.Models.BatchMountConfiguration},System.Nullable{Azure.ResourceManager.Batch.Models.NodeCommunicationMode},System.Nullable{Azure.ResourceManager.Batch.Models.NodeCommunicationMode},System.Nullable{Azure.ETag})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BatchAccountPoolData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional displayName As String = Nothing, Optional lastModifiedOn As Nullable(Of DateTimeOffset) = Nothing, Optional createdOn As Nullable(Of DateTimeOffset) = Nothing, Optional provisioningState As Nullable(Of BatchAccountPoolProvisioningState) = Nothing, Optional provisioningStateTransitOn As Nullable(Of DateTimeOffset) = Nothing, Optional allocationState As Nullable(Of BatchAccountPoolAllocationState) = Nothing, Optional allocationStateTransitionOn As Nullable(Of DateTimeOffset) = Nothing, Optional vmSize As String = Nothing, Optional deploymentConfiguration As BatchDeploymentConfiguration = Nothing, Optional currentDedicatedNodes As Nullable(Of Integer) = Nothing, Optional currentLowPriorityNodes As Nullable(Of Integer) = Nothing, Optional scaleSettings As BatchAccountPoolScaleSettings = Nothing, Optional autoScaleRun As BatchAccountPoolAutoScaleRun = Nothing, Optional interNodeCommunication As Nullable(Of InterNodeCommunicationState) = Nothing, Optional networkConfiguration As BatchNetworkConfiguration = Nothing, Optional taskSlotsPerNode As Nullable(Of Integer) = Nothing, Optional taskSchedulingNodeFillType As Nullable(Of BatchNodeFillType) = Nothing, Optional userAccounts As IEnumerable(Of BatchUserAccount) = Nothing, Optional metadata As IEnumerable(Of BatchAccountPoolMetadataItem) = Nothing, Optional startTask As BatchAccountPoolStartTask = Nothing, Optional certificates As IEnumerable(Of BatchCertificateReference) = Nothing, Optional applicationPackages As IEnumerable(Of BatchApplicationPackageReference) = Nothing, Optional applicationLicenses As IEnumerable(Of String) = Nothing, Optional resizeOperationStatus As BatchResizeOperationStatus = Nothing, Optional mountConfiguration As IEnumerable(Of BatchMountConfiguration) = Nothing, Optional targetNodeCommunicationMode As Nullable(Of NodeCommunicationMode) = Nothing, Optional currentNodeCommunicationMode As Nullable(Of NodeCommunicationMode) = Nothing, Optional etag As Nullable(Of ETag) = Nothing) As BatchAccountPoolData" />
      <MemberSignature Language="F#" Value="static member BatchAccountPoolData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.ResourceManager.Models.ManagedServiceIdentity * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.Batch.Models.BatchAccountPoolProvisioningState&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.Batch.Models.BatchAccountPoolAllocationState&gt; * Nullable&lt;DateTimeOffset&gt; * string * Azure.ResourceManager.Batch.Models.BatchDeploymentConfiguration * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Azure.ResourceManager.Batch.Models.BatchAccountPoolScaleSettings * Azure.ResourceManager.Batch.Models.BatchAccountPoolAutoScaleRun * Nullable&lt;Azure.ResourceManager.Batch.Models.InterNodeCommunicationState&gt; * Azure.ResourceManager.Batch.Models.BatchNetworkConfiguration * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.Batch.Models.BatchNodeFillType&gt; * seq&lt;Azure.ResourceManager.Batch.Models.BatchUserAccount&gt; * seq&lt;Azure.ResourceManager.Batch.Models.BatchAccountPoolMetadataItem&gt; * Azure.ResourceManager.Batch.Models.BatchAccountPoolStartTask * seq&lt;Azure.ResourceManager.Batch.Models.BatchCertificateReference&gt; * seq&lt;Azure.ResourceManager.Batch.Models.BatchApplicationPackageReference&gt; * seq&lt;string&gt; * Azure.ResourceManager.Batch.Models.BatchResizeOperationStatus * seq&lt;Azure.ResourceManager.Batch.Models.BatchMountConfiguration&gt; * Nullable&lt;Azure.ResourceManager.Batch.Models.NodeCommunicationMode&gt; * Nullable&lt;Azure.ResourceManager.Batch.Models.NodeCommunicationMode&gt; * Nullable&lt;Azure.ETag&gt; -&gt; Azure.ResourceManager.Batch.BatchAccountPoolData" Usage="Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchAccountPoolData (id, name, resourceType, systemData, identity, displayName, lastModifiedOn, createdOn, provisioningState, provisioningStateTransitOn, allocationState, allocationStateTransitionOn, vmSize, deploymentConfiguration, currentDedicatedNodes, currentLowPriorityNodes, scaleSettings, autoScaleRun, interNodeCommunication, networkConfiguration, taskSlotsPerNode, taskSchedulingNodeFillType, userAccounts, metadata, startTask, certificates, applicationPackages, applicationLicenses, resizeOperationStatus, mountConfiguration, targetNodeCommunicationMode, currentNodeCommunicationMode, etag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Batch</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Batch.BatchAccountPoolData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="lastModifiedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="createdOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Batch.Models.BatchAccountPoolProvisioningState&gt;" />
        <Parameter Name="provisioningStateTransitOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="allocationState" Type="System.Nullable&lt;Azure.ResourceManager.Batch.Models.BatchAccountPoolAllocationState&gt;" />
        <Parameter Name="allocationStateTransitionOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="vmSize" Type="System.String" />
        <Parameter Name="deploymentConfiguration" Type="Azure.ResourceManager.Batch.Models.BatchDeploymentConfiguration" />
        <Parameter Name="currentDedicatedNodes" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="currentLowPriorityNodes" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="scaleSettings" Type="Azure.ResourceManager.Batch.Models.BatchAccountPoolScaleSettings" />
        <Parameter Name="autoScaleRun" Type="Azure.ResourceManager.Batch.Models.BatchAccountPoolAutoScaleRun" />
        <Parameter Name="interNodeCommunication" Type="System.Nullable&lt;Azure.ResourceManager.Batch.Models.InterNodeCommunicationState&gt;" />
        <Parameter Name="networkConfiguration" Type="Azure.ResourceManager.Batch.Models.BatchNetworkConfiguration" />
        <Parameter Name="taskSlotsPerNode" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="taskSchedulingNodeFillType" Type="System.Nullable&lt;Azure.ResourceManager.Batch.Models.BatchNodeFillType&gt;" />
        <Parameter Name="userAccounts" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Batch.Models.BatchUserAccount&gt;" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Batch.Models.BatchAccountPoolMetadataItem&gt;" />
        <Parameter Name="startTask" Type="Azure.ResourceManager.Batch.Models.BatchAccountPoolStartTask" />
        <Parameter Name="certificates" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Batch.Models.BatchCertificateReference&gt;" />
        <Parameter Name="applicationPackages" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Batch.Models.BatchApplicationPackageReference&gt;" />
        <Parameter Name="applicationLicenses" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="resizeOperationStatus" Type="Azure.ResourceManager.Batch.Models.BatchResizeOperationStatus" />
        <Parameter Name="mountConfiguration" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Batch.Models.BatchMountConfiguration&gt;" />
        <Parameter Name="targetNodeCommunicationMode" Type="System.Nullable&lt;Azure.ResourceManager.Batch.Models.NodeCommunicationMode&gt;" />
        <Parameter Name="currentNodeCommunicationMode" Type="System.Nullable&lt;Azure.ResourceManager.Batch.Models.NodeCommunicationMode&gt;" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="identity"> The type of identity used for the Batch Pool. Current supported identity types: UserAssigned, None. </param>
        <param name="displayName"> The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024. </param>
        <param name="lastModifiedOn"> This is the last time at which the pool level data, such as the targetDedicatedNodes or autoScaleSettings, changed. It does not factor in node-level changes such as a compute node changing state. </param>
        <param name="createdOn"> The creation time of the pool. </param>
        <param name="provisioningState"> The current state of the pool. </param>
        <param name="provisioningStateTransitOn"> The time at which the pool entered its current state. </param>
        <param name="allocationState"> Whether the pool is resizing. </param>
        <param name="allocationStateTransitionOn"> The time at which the pool entered its current allocation state. </param>
        <param name="vmSize"> For information about available sizes of virtual machines for Cloud Services pools (pools created with cloudServiceConfiguration), see Sizes for Cloud Services (https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/). Batch supports all Cloud Services VM sizes except ExtraSmall. For information about available VM sizes for pools using images from the Virtual Machines Marketplace (pools created with virtualMachineConfiguration) see Sizes for Virtual Machines (Linux) (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/) or Sizes for Virtual Machines (Windows) (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/). Batch supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series). </param>
        <param name="deploymentConfiguration"> Using CloudServiceConfiguration specifies that the nodes should be creating using Azure Cloud Services (PaaS), while VirtualMachineConfiguration uses Azure Virtual Machines (IaaS). </param>
        <param name="currentDedicatedNodes"> The number of dedicated compute nodes currently in the pool. </param>
        <param name="currentLowPriorityNodes"> The number of Spot/low-priority compute nodes currently in the pool. </param>
        <param name="scaleSettings"> Defines the desired size of the pool. This can either be 'fixedScale' where the requested targetDedicatedNodes is specified, or 'autoScale' which defines a formula which is periodically reevaluated. If this property is not specified, the pool will have a fixed scale with 0 targetDedicatedNodes. </param>
        <param name="autoScaleRun"> This property is set only if the pool automatically scales, i.e. autoScaleSettings are used. </param>
        <param name="interNodeCommunication"> This imposes restrictions on which nodes can be assigned to the pool. Enabling this value can reduce the chance of the requested number of nodes to be allocated in the pool. If not specified, this value defaults to 'Disabled'. </param>
        <param name="networkConfiguration"> The network configuration for a pool. </param>
        <param name="taskSlotsPerNode"> The default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the pool or 256. </param>
        <param name="taskSchedulingNodeFillType"> If not specified, the default is spread. </param>
        <param name="userAccounts"> The list of user accounts to be created on each node in the pool. </param>
        <param name="metadata"> The Batch service does not assign any meaning to metadata; it is solely for the use of user code. </param>
        <param name="startTask"> In an PATCH (update) operation, this property can be set to an empty object to remove the start task from the pool. </param>
        <param name="certificates">
             For Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.
            
             Warning: This property is deprecated and will be removed after February, 2024. Please use the [Azure KeyVault Extension](https://learn.microsoft.com/azure/batch/batch-certificate-migration-guide) instead.
             </param>
        <param name="applicationPackages"> Changes to application package references affect all new compute nodes joining the pool, but do not affect compute nodes that are already in the pool until they are rebooted or reimaged. There is a maximum of 10 application package references on any given pool. </param>
        <param name="applicationLicenses"> The list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, pool creation will fail. </param>
        <param name="resizeOperationStatus"> Describes either the current operation (if the pool AllocationState is Resizing) or the previously completed operation (if the AllocationState is Steady). </param>
        <param name="mountConfiguration"> This supports Azure Files, NFS, CIFS/SMB, and Blobfuse. </param>
        <param name="targetNodeCommunicationMode"> If omitted, the default value is Default. </param>
        <param name="currentNodeCommunicationMode"> Determines how a pool communicates with the Batch service. </param>
        <param name="etag"> The ETag of the resource, used for concurrency statements. </param>
        <summary> Initializes a new instance of BatchAccountPoolData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Batch.BatchAccountPoolData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchApplicationData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Batch.BatchApplicationData BatchApplicationData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string displayName = default, bool? allowUpdates = default, string defaultVersion = default, Azure.ETag? etag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Batch.BatchApplicationData BatchApplicationData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string displayName, valuetype System.Nullable`1&lt;bool&gt; allowUpdates, string defaultVersion, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchApplicationData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Azure.ETag})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BatchApplicationData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional displayName As String = Nothing, Optional allowUpdates As Nullable(Of Boolean) = Nothing, Optional defaultVersion As String = Nothing, Optional etag As Nullable(Of ETag) = Nothing) As BatchApplicationData" />
      <MemberSignature Language="F#" Value="static member BatchApplicationData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * Nullable&lt;bool&gt; * string * Nullable&lt;Azure.ETag&gt; -&gt; Azure.ResourceManager.Batch.BatchApplicationData" Usage="Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchApplicationData (id, name, resourceType, systemData, displayName, allowUpdates, defaultVersion, etag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Batch</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Batch.BatchApplicationData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="allowUpdates" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="defaultVersion" Type="System.String" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="displayName"> The display name for the application. </param>
        <param name="allowUpdates"> A value indicating whether packages within the application may be overwritten using the same version string. </param>
        <param name="defaultVersion"> The package to use if a client requests the application but does not specify a version. This property can only be set to the name of an existing package. </param>
        <param name="etag"> The ETag of the resource, used for concurrency statements. </param>
        <summary> Initializes a new instance of BatchApplicationData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Batch.BatchApplicationData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchApplicationPackageData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Batch.BatchApplicationPackageData BatchApplicationPackageData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.Batch.Models.BatchApplicationPackageState? state = default, string format = default, Uri storageUri = default, DateTimeOffset? storageUriExpireOn = default, DateTimeOffset? lastActivatedOn = default, Azure.ETag? etag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Batch.BatchApplicationPackageData BatchApplicationPackageData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Batch.Models.BatchApplicationPackageState&gt; state, string format, class System.Uri storageUri, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; storageUriExpireOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastActivatedOn, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchApplicationPackageData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.ResourceManager.Batch.Models.BatchApplicationPackageState},System.String,System.Uri,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BatchApplicationPackageData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional state As Nullable(Of BatchApplicationPackageState) = Nothing, Optional format As String = Nothing, Optional storageUri As Uri = Nothing, Optional storageUriExpireOn As Nullable(Of DateTimeOffset) = Nothing, Optional lastActivatedOn As Nullable(Of DateTimeOffset) = Nothing, Optional etag As Nullable(Of ETag) = Nothing) As BatchApplicationPackageData" />
      <MemberSignature Language="F#" Value="static member BatchApplicationPackageData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.ResourceManager.Batch.Models.BatchApplicationPackageState&gt; * string * Uri * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ETag&gt; -&gt; Azure.ResourceManager.Batch.BatchApplicationPackageData" Usage="Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchApplicationPackageData (id, name, resourceType, systemData, state, format, storageUri, storageUriExpireOn, lastActivatedOn, etag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Batch</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Batch.BatchApplicationPackageData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="state" Type="System.Nullable&lt;Azure.ResourceManager.Batch.Models.BatchApplicationPackageState&gt;" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="storageUri" Type="System.Uri" />
        <Parameter Name="storageUriExpireOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="lastActivatedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="state"> The current state of the application package. </param>
        <param name="format"> The format of the application package, if the package is active. </param>
        <param name="storageUri"> The URL for the application package in Azure Storage. </param>
        <param name="storageUriExpireOn"> The UTC time at which the Azure Storage URL will expire. </param>
        <param name="lastActivatedOn"> The time at which the package was last activated, if the package is active. </param>
        <param name="etag"> The ETag of the resource, used for concurrency statements. </param>
        <summary> Initializes a new instance of BatchApplicationPackageData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Batch.BatchApplicationPackageData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchEndpointDetail">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Batch.Models.BatchEndpointDetail BatchEndpointDetail (int? port = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Batch.Models.BatchEndpointDetail BatchEndpointDetail(valuetype System.Nullable`1&lt;int32&gt; port) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchEndpointDetail(System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BatchEndpointDetail (Optional port As Nullable(Of Integer) = Nothing) As BatchEndpointDetail" />
      <MemberSignature Language="F#" Value="static member BatchEndpointDetail : Nullable&lt;int&gt; -&gt; Azure.ResourceManager.Batch.Models.BatchEndpointDetail" Usage="Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchEndpointDetail port" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Batch</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Batch.Models.BatchEndpointDetail</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="port" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="port"> The port an endpoint is connected to. </param>
        <summary> Initializes a new instance of BatchEndpointDetail. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Batch.Models.BatchEndpointDetail" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchIPRule">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Batch.Models.BatchIPRule BatchIPRule (Azure.ResourceManager.Batch.Models.BatchIPRuleAction action = default, string value = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Batch.Models.BatchIPRule BatchIPRule(valuetype Azure.ResourceManager.Batch.Models.BatchIPRuleAction action, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchIPRule(Azure.ResourceManager.Batch.Models.BatchIPRuleAction,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BatchIPRule (Optional action As BatchIPRuleAction = Nothing, Optional value As String = Nothing) As BatchIPRule" />
      <MemberSignature Language="F#" Value="static member BatchIPRule : Azure.ResourceManager.Batch.Models.BatchIPRuleAction * string -&gt; Azure.ResourceManager.Batch.Models.BatchIPRule" Usage="Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchIPRule (action, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Batch</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Batch.Models.BatchIPRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Azure.ResourceManager.Batch.Models.BatchIPRuleAction" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action"> Action when client IP address is matched. </param>
        <param name="value"> IPv4 address, or IPv4 address range in CIDR format. </param>
        <summary> Initializes a new instance of BatchIPRule. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Batch.Models.BatchIPRule" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchLocationQuota">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Batch.Models.BatchLocationQuota BatchLocationQuota (int? accountQuota = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Batch.Models.BatchLocationQuota BatchLocationQuota(valuetype System.Nullable`1&lt;int32&gt; accountQuota) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchLocationQuota(System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BatchLocationQuota (Optional accountQuota As Nullable(Of Integer) = Nothing) As BatchLocationQuota" />
      <MemberSignature Language="F#" Value="static member BatchLocationQuota : Nullable&lt;int&gt; -&gt; Azure.ResourceManager.Batch.Models.BatchLocationQuota" Usage="Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchLocationQuota accountQuota" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Batch</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Batch.Models.BatchLocationQuota</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accountQuota" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="accountQuota"> The number of Batch accounts that may be created under the subscription in the specified region. </param>
        <summary> Initializes a new instance of BatchLocationQuota. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Batch.Models.BatchLocationQuota" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchNameAvailabilityResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Batch.Models.BatchNameAvailabilityResult BatchNameAvailabilityResult (bool? isNameAvailable = default, Azure.ResourceManager.Batch.Models.BatchNameUnavailableReason? reason = default, string message = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Batch.Models.BatchNameAvailabilityResult BatchNameAvailabilityResult(valuetype System.Nullable`1&lt;bool&gt; isNameAvailable, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Batch.Models.BatchNameUnavailableReason&gt; reason, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchNameAvailabilityResult(System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Batch.Models.BatchNameUnavailableReason},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BatchNameAvailabilityResult (Optional isNameAvailable As Nullable(Of Boolean) = Nothing, Optional reason As Nullable(Of BatchNameUnavailableReason) = Nothing, Optional message As String = Nothing) As BatchNameAvailabilityResult" />
      <MemberSignature Language="F#" Value="static member BatchNameAvailabilityResult : Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Batch.Models.BatchNameUnavailableReason&gt; * string -&gt; Azure.ResourceManager.Batch.Models.BatchNameAvailabilityResult" Usage="Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchNameAvailabilityResult (isNameAvailable, reason, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Batch</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Batch.Models.BatchNameAvailabilityResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isNameAvailable" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="reason" Type="System.Nullable&lt;Azure.ResourceManager.Batch.Models.BatchNameUnavailableReason&gt;" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="isNameAvailable"> Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or invalid and cannot be used. </param>
        <param name="reason"> Gets the reason that a Batch account name could not be used. The Reason element is only returned if NameAvailable is false. </param>
        <param name="message"> Gets an error message explaining the Reason value in more detail. </param>
        <summary> Initializes a new instance of BatchNameAvailabilityResult. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Batch.Models.BatchNameAvailabilityResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchPrivateEndpointConnectionData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Batch.BatchPrivateEndpointConnectionData BatchPrivateEndpointConnectionData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.Batch.Models.BatchPrivateEndpointConnectionProvisioningState? provisioningState = default, Azure.Core.ResourceIdentifier privateEndpointId = default, System.Collections.Generic.IEnumerable&lt;string&gt; groupIds = default, Azure.ResourceManager.Batch.Models.BatchPrivateLinkServiceConnectionState connectionState = default, Azure.ETag? etag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Batch.BatchPrivateEndpointConnectionData BatchPrivateEndpointConnectionData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Batch.Models.BatchPrivateEndpointConnectionProvisioningState&gt; provisioningState, class Azure.Core.ResourceIdentifier privateEndpointId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; groupIds, class Azure.ResourceManager.Batch.Models.BatchPrivateLinkServiceConnectionState connectionState, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchPrivateEndpointConnectionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.ResourceManager.Batch.Models.BatchPrivateEndpointConnectionProvisioningState},Azure.Core.ResourceIdentifier,System.Collections.Generic.IEnumerable{System.String},Azure.ResourceManager.Batch.Models.BatchPrivateLinkServiceConnectionState,System.Nullable{Azure.ETag})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BatchPrivateEndpointConnectionData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional provisioningState As Nullable(Of BatchPrivateEndpointConnectionProvisioningState) = Nothing, Optional privateEndpointId As ResourceIdentifier = Nothing, Optional groupIds As IEnumerable(Of String) = Nothing, Optional connectionState As BatchPrivateLinkServiceConnectionState = Nothing, Optional etag As Nullable(Of ETag) = Nothing) As BatchPrivateEndpointConnectionData" />
      <MemberSignature Language="F#" Value="static member BatchPrivateEndpointConnectionData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.ResourceManager.Batch.Models.BatchPrivateEndpointConnectionProvisioningState&gt; * Azure.Core.ResourceIdentifier * seq&lt;string&gt; * Azure.ResourceManager.Batch.Models.BatchPrivateLinkServiceConnectionState * Nullable&lt;Azure.ETag&gt; -&gt; Azure.ResourceManager.Batch.BatchPrivateEndpointConnectionData" Usage="Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchPrivateEndpointConnectionData (id, name, resourceType, systemData, provisioningState, privateEndpointId, groupIds, connectionState, etag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Batch</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Batch.BatchPrivateEndpointConnectionData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.Batch.Models.BatchPrivateEndpointConnectionProvisioningState&gt;" />
        <Parameter Name="privateEndpointId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="groupIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="connectionState" Type="Azure.ResourceManager.Batch.Models.BatchPrivateLinkServiceConnectionState" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="provisioningState"> The provisioning state of the private endpoint connection. </param>
        <param name="privateEndpointId"> The private endpoint of the private endpoint connection. </param>
        <param name="groupIds"> The value has one and only one group id. </param>
        <param name="connectionState"> The private link service connection state of the private endpoint connection. </param>
        <param name="etag"> The ETag of the resource, used for concurrency statements. </param>
        <summary> Initializes a new instance of BatchPrivateEndpointConnectionData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Batch.BatchPrivateEndpointConnectionData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchPrivateLinkResourceData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Batch.BatchPrivateLinkResourceData BatchPrivateLinkResourceData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string groupId = default, System.Collections.Generic.IEnumerable&lt;string&gt; requiredMembers = default, System.Collections.Generic.IEnumerable&lt;string&gt; requiredZoneNames = default, Azure.ETag? etag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Batch.BatchPrivateLinkResourceData BatchPrivateLinkResourceData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string groupId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; requiredMembers, class System.Collections.Generic.IEnumerable`1&lt;string&gt; requiredZoneNames, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchPrivateLinkResourceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{Azure.ETag})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BatchPrivateLinkResourceData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional groupId As String = Nothing, Optional requiredMembers As IEnumerable(Of String) = Nothing, Optional requiredZoneNames As IEnumerable(Of String) = Nothing, Optional etag As Nullable(Of ETag) = Nothing) As BatchPrivateLinkResourceData" />
      <MemberSignature Language="F#" Value="static member BatchPrivateLinkResourceData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;Azure.ETag&gt; -&gt; Azure.ResourceManager.Batch.BatchPrivateLinkResourceData" Usage="Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchPrivateLinkResourceData (id, name, resourceType, systemData, groupId, requiredMembers, requiredZoneNames, etag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Batch</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Batch.BatchPrivateLinkResourceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="requiredMembers" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="requiredZoneNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="groupId"> The group id is used to establish the private link connection. </param>
        <param name="requiredMembers"> The list of required members that are used to establish the private link connection. </param>
        <param name="requiredZoneNames"> The list of required zone names for the private DNS resource name. </param>
        <param name="etag"> The ETag of the resource, used for concurrency statements. </param>
        <summary> Initializes a new instance of BatchPrivateLinkResourceData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Batch.BatchPrivateLinkResourceData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchPrivateLinkServiceConnectionState">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Batch.Models.BatchPrivateLinkServiceConnectionState BatchPrivateLinkServiceConnectionState (Azure.ResourceManager.Batch.Models.BatchPrivateLinkServiceConnectionStatus status = Azure.ResourceManager.Batch.Models.BatchPrivateLinkServiceConnectionStatus.Approved, string description = default, string actionRequired = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Batch.Models.BatchPrivateLinkServiceConnectionState BatchPrivateLinkServiceConnectionState(valuetype Azure.ResourceManager.Batch.Models.BatchPrivateLinkServiceConnectionStatus status, string description, string actionRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchPrivateLinkServiceConnectionState(Azure.ResourceManager.Batch.Models.BatchPrivateLinkServiceConnectionStatus,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BatchPrivateLinkServiceConnectionState (Optional status As BatchPrivateLinkServiceConnectionStatus = Azure.ResourceManager.Batch.Models.BatchPrivateLinkServiceConnectionStatus.Approved, Optional description As String = Nothing, Optional actionRequired As String = Nothing) As BatchPrivateLinkServiceConnectionState" />
      <MemberSignature Language="F#" Value="static member BatchPrivateLinkServiceConnectionState : Azure.ResourceManager.Batch.Models.BatchPrivateLinkServiceConnectionStatus * string * string -&gt; Azure.ResourceManager.Batch.Models.BatchPrivateLinkServiceConnectionState" Usage="Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchPrivateLinkServiceConnectionState (status, description, actionRequired)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Batch</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Batch.Models.BatchPrivateLinkServiceConnectionState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="Azure.ResourceManager.Batch.Models.BatchPrivateLinkServiceConnectionStatus" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="actionRequired" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="status"> The status of the Batch private endpoint connection. </param>
        <param name="description"> Description of the private Connection state. </param>
        <param name="actionRequired"> Action required on the private connection state. </param>
        <summary> Initializes a new instance of BatchPrivateLinkServiceConnectionState. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Batch.Models.BatchPrivateLinkServiceConnectionState" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchResizeOperationStatus">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Batch.Models.BatchResizeOperationStatus BatchResizeOperationStatus (int? targetDedicatedNodes = default, int? targetLowPriorityNodes = default, TimeSpan? resizeTimeout = default, Azure.ResourceManager.Batch.Models.BatchNodeDeallocationOption? nodeDeallocationOption = default, DateTimeOffset? startOn = default, System.Collections.Generic.IEnumerable&lt;Azure.ResponseError&gt; errors = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Batch.Models.BatchResizeOperationStatus BatchResizeOperationStatus(valuetype System.Nullable`1&lt;int32&gt; targetDedicatedNodes, valuetype System.Nullable`1&lt;int32&gt; targetLowPriorityNodes, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; resizeTimeout, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Batch.Models.BatchNodeDeallocationOption&gt; nodeDeallocationOption, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startOn, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResponseError&gt; errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchResizeOperationStatus(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.TimeSpan},System.Nullable{Azure.ResourceManager.Batch.Models.BatchNodeDeallocationOption},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IEnumerable{Azure.ResponseError})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BatchResizeOperationStatus (Optional targetDedicatedNodes As Nullable(Of Integer) = Nothing, Optional targetLowPriorityNodes As Nullable(Of Integer) = Nothing, Optional resizeTimeout As Nullable(Of TimeSpan) = Nothing, Optional nodeDeallocationOption As Nullable(Of BatchNodeDeallocationOption) = Nothing, Optional startOn As Nullable(Of DateTimeOffset) = Nothing, Optional errors As IEnumerable(Of ResponseError) = Nothing) As BatchResizeOperationStatus" />
      <MemberSignature Language="F#" Value="static member BatchResizeOperationStatus : Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;Azure.ResourceManager.Batch.Models.BatchNodeDeallocationOption&gt; * Nullable&lt;DateTimeOffset&gt; * seq&lt;Azure.ResponseError&gt; -&gt; Azure.ResourceManager.Batch.Models.BatchResizeOperationStatus" Usage="Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchResizeOperationStatus (targetDedicatedNodes, targetLowPriorityNodes, resizeTimeout, nodeDeallocationOption, startOn, errors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Batch</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Batch.Models.BatchResizeOperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDedicatedNodes" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="targetLowPriorityNodes" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="resizeTimeout" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="nodeDeallocationOption" Type="System.Nullable&lt;Azure.ResourceManager.Batch.Models.BatchNodeDeallocationOption&gt;" />
        <Parameter Name="startOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="errors" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResponseError&gt;" />
      </Parameters>
      <Docs>
        <param name="targetDedicatedNodes"> The desired number of dedicated compute nodes in the pool. </param>
        <param name="targetLowPriorityNodes"> The desired number of Spot/low-priority compute nodes in the pool. </param>
        <param name="resizeTimeout"> The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request). </param>
        <param name="nodeDeallocationOption"> The default value is requeue. </param>
        <param name="startOn"> The time when this resize operation was started. </param>
        <param name="errors"> This property is set only if an error occurred during the last pool resize, and only when the pool allocationState is Steady. </param>
        <summary> Initializes a new instance of BatchResizeOperationStatus. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Batch.Models.BatchResizeOperationStatus" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchSkuCapability">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Batch.Models.BatchSkuCapability BatchSkuCapability (string name = default, string value = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Batch.Models.BatchSkuCapability BatchSkuCapability(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchSkuCapability(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BatchSkuCapability (Optional name As String = Nothing, Optional value As String = Nothing) As BatchSkuCapability" />
      <MemberSignature Language="F#" Value="static member BatchSkuCapability : string * string -&gt; Azure.ResourceManager.Batch.Models.BatchSkuCapability" Usage="Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchSkuCapability (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Batch</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Batch.Models.BatchSkuCapability</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the feature. </param>
        <param name="value"> The value of the feature. </param>
        <summary> Initializes a new instance of BatchSkuCapability. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Batch.Models.BatchSkuCapability" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchSupportedSku">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Batch.Models.BatchSupportedSku BatchSupportedSku (string name = default, string familyName = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Batch.Models.BatchSkuCapability&gt; capabilities = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Batch.Models.BatchSupportedSku BatchSupportedSku(string name, string familyName, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.Batch.Models.BatchSkuCapability&gt; capabilities) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchSupportedSku(System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Batch.Models.BatchSkuCapability})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BatchSupportedSku (Optional name As String = Nothing, Optional familyName As String = Nothing, Optional capabilities As IEnumerable(Of BatchSkuCapability) = Nothing) As BatchSupportedSku" />
      <MemberSignature Language="F#" Value="static member BatchSupportedSku : string * string * seq&lt;Azure.ResourceManager.Batch.Models.BatchSkuCapability&gt; -&gt; Azure.ResourceManager.Batch.Models.BatchSupportedSku" Usage="Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchSupportedSku (name, familyName, capabilities)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Batch</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Batch.Models.BatchSupportedSku</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="familyName" Type="System.String" />
        <Parameter Name="capabilities" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Batch.Models.BatchSkuCapability&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the SKU. </param>
        <param name="familyName"> The family name of the SKU. </param>
        <param name="capabilities"> A collection of capabilities which this SKU supports. </param>
        <summary> Initializes a new instance of BatchSupportedSku. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Batch.Models.BatchSupportedSku" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchVmFamilyCoreQuota">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Batch.Models.BatchVmFamilyCoreQuota BatchVmFamilyCoreQuota (string name = default, int? coreQuota = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Batch.Models.BatchVmFamilyCoreQuota BatchVmFamilyCoreQuota(string name, valuetype System.Nullable`1&lt;int32&gt; coreQuota) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchVmFamilyCoreQuota(System.String,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BatchVmFamilyCoreQuota (Optional name As String = Nothing, Optional coreQuota As Nullable(Of Integer) = Nothing) As BatchVmFamilyCoreQuota" />
      <MemberSignature Language="F#" Value="static member BatchVmFamilyCoreQuota : string * Nullable&lt;int&gt; -&gt; Azure.ResourceManager.Batch.Models.BatchVmFamilyCoreQuota" Usage="Azure.ResourceManager.Batch.Models.ArmBatchModelFactory.BatchVmFamilyCoreQuota (name, coreQuota)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Batch</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Batch.Models.BatchVmFamilyCoreQuota</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="coreQuota" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> The Virtual Machine family name. </param>
        <param name="coreQuota"> The core quota for the VM family for the Batch account. </param>
        <summary> Initializes a new instance of BatchVmFamilyCoreQuota. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.Batch.Models.BatchVmFamilyCoreQuota" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
