<Type Name="ArmDesktopVirtualizationModelFactory" FullName="Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory">
  <TypeSignature Language="C#" Value="public static class ArmDesktopVirtualizationModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ArmDesktopVirtualizationModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ArmDesktopVirtualizationModelFactory" />
  <TypeSignature Language="F#" Value="type ArmDesktopVirtualizationModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A factory for creating Azure.ResourceManager.DesktopVirtualization.Models instances.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DesktopVirtualizationPrivateEndpointConnection">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateEndpointConnection DesktopVirtualizationPrivateEndpointConnection (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.ResourceIdentifier privateEndpointId = default, Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateLinkServiceConnectionState connectionState = default, Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateEndpointConnectionProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateEndpointConnection DesktopVirtualizationPrivateEndpointConnection(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.Core.ResourceIdentifier privateEndpointId, class Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateLinkServiceConnectionState connectionState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateEndpointConnectionProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.DesktopVirtualizationPrivateEndpointConnection(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.Core.ResourceIdentifier,Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateLinkServiceConnectionState,System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateEndpointConnectionProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DesktopVirtualizationPrivateEndpointConnection (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional privateEndpointId As ResourceIdentifier = Nothing, Optional connectionState As DesktopVirtualizationPrivateLinkServiceConnectionState = Nothing, Optional provisioningState As Nullable(Of DesktopVirtualizationPrivateEndpointConnectionProvisioningState) = Nothing) As DesktopVirtualizationPrivateEndpointConnection" />
      <MemberSignature Language="F#" Value="static member DesktopVirtualizationPrivateEndpointConnection : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.Core.ResourceIdentifier * Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateLinkServiceConnectionState * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateEndpointConnectionProvisioningState&gt; -&gt; Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateEndpointConnection" Usage="Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.DesktopVirtualizationPrivateEndpointConnection (id, name, resourceType, systemData, privateEndpointId, connectionState, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateEndpointConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="privateEndpointId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="connectionState" Type="Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateLinkServiceConnectionState" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateEndpointConnectionProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="privateEndpointId"> The resource of private end point. </param>
        <param name="connectionState"> A collection of information about the state of the connection between service consumer and provider. </param>
        <param name="provisioningState"> The provisioning state of the private endpoint connection resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateEndpointConnection" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateEndpointConnection" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesktopVirtualizationPrivateEndpointConnectionDataData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationPrivateEndpointConnectionDataData DesktopVirtualizationPrivateEndpointConnectionDataData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.ResourceIdentifier privateEndpointId = default, Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateLinkServiceConnectionState connectionState = default, Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateEndpointConnectionProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationPrivateEndpointConnectionDataData DesktopVirtualizationPrivateEndpointConnectionDataData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.Core.ResourceIdentifier privateEndpointId, class Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateLinkServiceConnectionState connectionState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateEndpointConnectionProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.DesktopVirtualizationPrivateEndpointConnectionDataData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.Core.ResourceIdentifier,Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateLinkServiceConnectionState,System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateEndpointConnectionProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DesktopVirtualizationPrivateEndpointConnectionDataData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional privateEndpointId As ResourceIdentifier = Nothing, Optional connectionState As DesktopVirtualizationPrivateLinkServiceConnectionState = Nothing, Optional provisioningState As Nullable(Of DesktopVirtualizationPrivateEndpointConnectionProvisioningState) = Nothing) As DesktopVirtualizationPrivateEndpointConnectionDataData" />
      <MemberSignature Language="F#" Value="static member DesktopVirtualizationPrivateEndpointConnectionDataData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.Core.ResourceIdentifier * Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateLinkServiceConnectionState * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateEndpointConnectionProvisioningState&gt; -&gt; Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationPrivateEndpointConnectionDataData" Usage="Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.DesktopVirtualizationPrivateEndpointConnectionDataData (id, name, resourceType, systemData, privateEndpointId, connectionState, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationPrivateEndpointConnectionDataData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="privateEndpointId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="connectionState" Type="Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateLinkServiceConnectionState" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateEndpointConnectionProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="privateEndpointId"> The resource of private end point. </param>
        <param name="connectionState"> A collection of information about the state of the connection between service consumer and provider. </param>
        <param name="provisioningState"> The provisioning state of the private endpoint connection resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationPrivateEndpointConnectionDataData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationPrivateEndpointConnectionDataData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesktopVirtualizationPrivateLinkResourceData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateLinkResourceData DesktopVirtualizationPrivateLinkResourceData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string groupId = default, System.Collections.Generic.IEnumerable&lt;string&gt; requiredMembers = default, System.Collections.Generic.IEnumerable&lt;string&gt; requiredZoneNames = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateLinkResourceData DesktopVirtualizationPrivateLinkResourceData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string groupId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; requiredMembers, class System.Collections.Generic.IEnumerable`1&lt;string&gt; requiredZoneNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.DesktopVirtualizationPrivateLinkResourceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DesktopVirtualizationPrivateLinkResourceData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional groupId As String = Nothing, Optional requiredMembers As IEnumerable(Of String) = Nothing, Optional requiredZoneNames As IEnumerable(Of String) = Nothing) As DesktopVirtualizationPrivateLinkResourceData" />
      <MemberSignature Language="F#" Value="static member DesktopVirtualizationPrivateLinkResourceData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * seq&lt;string&gt; * seq&lt;string&gt; -&gt; Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateLinkResourceData" Usage="Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.DesktopVirtualizationPrivateLinkResourceData (id, name, resourceType, systemData, groupId, requiredMembers, requiredZoneNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateLinkResourceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="requiredMembers" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="requiredZoneNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="groupId"> The private link resource group id. </param>
        <param name="requiredMembers"> The private link resource required member names. </param>
        <param name="requiredZoneNames"> The private link resource Private link DNS zone name. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateLinkResourceData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateLinkResourceData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesktopVirtualizationStartMenuItem">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationStartMenuItem DesktopVirtualizationStartMenuItem (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string appAlias = default, string filePath = default, string commandLineArguments = default, string iconPath = default, int? iconIndex = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationStartMenuItem DesktopVirtualizationStartMenuItem(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string appAlias, string filePath, string commandLineArguments, string iconPath, valuetype System.Nullable`1&lt;int32&gt; iconIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.DesktopVirtualizationStartMenuItem(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DesktopVirtualizationStartMenuItem (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional appAlias As String = Nothing, Optional filePath As String = Nothing, Optional commandLineArguments As String = Nothing, Optional iconPath As String = Nothing, Optional iconIndex As Nullable(Of Integer) = Nothing) As DesktopVirtualizationStartMenuItem" />
      <MemberSignature Language="F#" Value="static member DesktopVirtualizationStartMenuItem : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * string * string * string * Nullable&lt;int&gt; -&gt; Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationStartMenuItem" Usage="Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.DesktopVirtualizationStartMenuItem (id, name, resourceType, systemData, appAlias, filePath, commandLineArguments, iconPath, iconIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationStartMenuItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="appAlias" Type="System.String" />
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="commandLineArguments" Type="System.String" />
        <Parameter Name="iconPath" Type="System.String" />
        <Parameter Name="iconIndex" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="appAlias"> Alias of StartMenuItem. </param>
        <param name="filePath"> Path to the file of StartMenuItem. </param>
        <param name="commandLineArguments"> Command line arguments for StartMenuItem. </param>
        <param name="iconPath"> Path to the icon. </param>
        <param name="iconIndex"> Index of the icon. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationStartMenuItem" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationStartMenuItem" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandMsixImage">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.Models.ExpandMsixImage ExpandMsixImage (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string packageAlias = default, string imagePath = default, string packageName = default, string packageFamilyName = default, string packageFullName = default, string displayName = default, string packageRelativePath = default, bool? isRegularRegistration = default, bool? isActive = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DesktopVirtualization.Models.MsixPackageDependencies&gt; packageDependencies = default, string version = default, DateTimeOffset? lastUpdatedOn = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DesktopVirtualization.Models.MsixPackageApplications&gt; packageApplications = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.Models.ExpandMsixImage ExpandMsixImage(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string packageAlias, string imagePath, string packageName, string packageFamilyName, string packageFullName, string displayName, string packageRelativePath, valuetype System.Nullable`1&lt;bool&gt; isRegularRegistration, valuetype System.Nullable`1&lt;bool&gt; isActive, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.DesktopVirtualization.Models.MsixPackageDependencies&gt; packageDependencies, string version, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastUpdatedOn, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.DesktopVirtualization.Models.MsixPackageApplications&gt; packageApplications) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.ExpandMsixImage(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Azure.ResourceManager.DesktopVirtualization.Models.MsixPackageDependencies},System.String,System.Nullable{System.DateTimeOffset},System.Collections.Generic.IEnumerable{Azure.ResourceManager.DesktopVirtualization.Models.MsixPackageApplications})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExpandMsixImage (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional packageAlias As String = Nothing, Optional imagePath As String = Nothing, Optional packageName As String = Nothing, Optional packageFamilyName As String = Nothing, Optional packageFullName As String = Nothing, Optional displayName As String = Nothing, Optional packageRelativePath As String = Nothing, Optional isRegularRegistration As Nullable(Of Boolean) = Nothing, Optional isActive As Nullable(Of Boolean) = Nothing, Optional packageDependencies As IEnumerable(Of MsixPackageDependencies) = Nothing, Optional version As String = Nothing, Optional lastUpdatedOn As Nullable(Of DateTimeOffset) = Nothing, Optional packageApplications As IEnumerable(Of MsixPackageApplications) = Nothing) As ExpandMsixImage" />
      <MemberSignature Language="F#" Value="static member ExpandMsixImage : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * string * string * string * string * string * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * seq&lt;Azure.ResourceManager.DesktopVirtualization.Models.MsixPackageDependencies&gt; * string * Nullable&lt;DateTimeOffset&gt; * seq&lt;Azure.ResourceManager.DesktopVirtualization.Models.MsixPackageApplications&gt; -&gt; Azure.ResourceManager.DesktopVirtualization.Models.ExpandMsixImage" Usage="Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.ExpandMsixImage (id, name, resourceType, systemData, packageAlias, imagePath, packageName, packageFamilyName, packageFullName, displayName, packageRelativePath, isRegularRegistration, isActive, packageDependencies, version, lastUpdatedOn, packageApplications)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.Models.ExpandMsixImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="packageAlias" Type="System.String" />
        <Parameter Name="imagePath" Type="System.String" />
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="packageFamilyName" Type="System.String" />
        <Parameter Name="packageFullName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="packageRelativePath" Type="System.String" />
        <Parameter Name="isRegularRegistration" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isActive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="packageDependencies" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DesktopVirtualization.Models.MsixPackageDependencies&gt;" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="lastUpdatedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="packageApplications" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DesktopVirtualization.Models.MsixPackageApplications&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="packageAlias"> Alias of MSIX Package. </param>
        <param name="imagePath"> VHD/CIM image path on Network Share. </param>
        <param name="packageName"> Package Name from appxmanifest.xml. </param>
        <param name="packageFamilyName"> Package Family Name from appxmanifest.xml. Contains Package Name and Publisher name. </param>
        <param name="packageFullName"> Package Full Name from appxmanifest.xml. </param>
        <param name="displayName"> User friendly Name to be displayed in the portal. </param>
        <param name="packageRelativePath"> Relative Path to the package inside the image. </param>
        <param name="isRegularRegistration"> Specifies how to register Package in feed. </param>
        <param name="isActive"> Make this version of the package the active one across the hostpool. </param>
        <param name="packageDependencies"> List of package dependencies. </param>
        <param name="version"> Package Version found in the appxmanifest.xml. </param>
        <param name="lastUpdatedOn"> Date Package was last updated, found in the appxmanifest.xml. </param>
        <param name="packageApplications"> List of package applications. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DesktopVirtualization.Models.ExpandMsixImage" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DesktopVirtualization.Models.ExpandMsixImage" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostPoolData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.HostPoolData HostPoolData (Azure.Core.ResourceIdentifier id, string name, Azure.Core.ResourceType resourceType, Azure.ResourceManager.Models.SystemData systemData, System.Collections.Generic.IDictionary&lt;string,string&gt; tags, Azure.Core.AzureLocation location, string objectId, string friendlyName, string description, Azure.ResourceManager.DesktopVirtualization.Models.HostPoolType hostPoolType, Azure.ResourceManager.DesktopVirtualization.Models.PersonalDesktopAssignmentType? personalDesktopAssignmentType, string customRdpProperty, int? maxSessionLimit, Azure.ResourceManager.DesktopVirtualization.Models.HostPoolLoadBalancerType loadBalancerType, int? ring, bool? isValidationEnvironment, Azure.ResourceManager.DesktopVirtualization.Models.HostPoolRegistrationInfo registrationInfo, string vmTemplate, System.Collections.Generic.IEnumerable&lt;string&gt; applicationGroupReferences, string ssoAdfsAuthority, string ssoClientId, string ssoClientSecretKeyVaultPath, Azure.ResourceManager.DesktopVirtualization.Models.HostPoolSsoSecretType? ssoSecretType, Azure.ResourceManager.DesktopVirtualization.Models.PreferredAppGroupType preferredAppGroupType, bool? startVmOnConnect, bool? isCloudPCResource, Azure.ResourceManager.DesktopVirtualization.Models.SessionHostAgentUpdateProperties agentUpdate, Azure.Core.ResourceIdentifier managedBy, string kind, Azure.ETag? etag, Azure.ResourceManager.Models.ManagedServiceIdentity identity, Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku sku, Azure.ResourceManager.Models.ArmPlan plan);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.HostPoolData HostPoolData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, string objectId, string friendlyName, string description, valuetype Azure.ResourceManager.DesktopVirtualization.Models.HostPoolType hostPoolType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.PersonalDesktopAssignmentType&gt; personalDesktopAssignmentType, string customRdpProperty, valuetype System.Nullable`1&lt;int32&gt; maxSessionLimit, valuetype Azure.ResourceManager.DesktopVirtualization.Models.HostPoolLoadBalancerType loadBalancerType, valuetype System.Nullable`1&lt;int32&gt; ring, valuetype System.Nullable`1&lt;bool&gt; isValidationEnvironment, class Azure.ResourceManager.DesktopVirtualization.Models.HostPoolRegistrationInfo registrationInfo, string vmTemplate, class System.Collections.Generic.IEnumerable`1&lt;string&gt; applicationGroupReferences, string ssoAdfsAuthority, string ssoClientId, string ssoClientSecretKeyVaultPath, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.HostPoolSsoSecretType&gt; ssoSecretType, valuetype Azure.ResourceManager.DesktopVirtualization.Models.PreferredAppGroupType preferredAppGroupType, valuetype System.Nullable`1&lt;bool&gt; startVmOnConnect, valuetype System.Nullable`1&lt;bool&gt; isCloudPCResource, class Azure.ResourceManager.DesktopVirtualization.Models.SessionHostAgentUpdateProperties agentUpdate, class Azure.Core.ResourceIdentifier managedBy, string kind, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, class Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku sku, class Azure.ResourceManager.Models.ArmPlan plan) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.HostPoolData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.String,System.String,System.String,Azure.ResourceManager.DesktopVirtualization.Models.HostPoolType,System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.PersonalDesktopAssignmentType},System.String,System.Nullable{System.Int32},Azure.ResourceManager.DesktopVirtualization.Models.HostPoolLoadBalancerType,System.Nullable{System.Int32},System.Nullable{System.Boolean},Azure.ResourceManager.DesktopVirtualization.Models.HostPoolRegistrationInfo,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.HostPoolSsoSecretType},Azure.ResourceManager.DesktopVirtualization.Models.PreferredAppGroupType,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.ResourceManager.DesktopVirtualization.Models.SessionHostAgentUpdateProperties,Azure.Core.ResourceIdentifier,System.String,System.Nullable{Azure.ETag},Azure.ResourceManager.Models.ManagedServiceIdentity,Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku,Azure.ResourceManager.Models.ArmPlan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HostPoolData (id As ResourceIdentifier, name As String, resourceType As ResourceType, systemData As SystemData, tags As IDictionary(Of String, String), location As AzureLocation, objectId As String, friendlyName As String, description As String, hostPoolType As HostPoolType, personalDesktopAssignmentType As Nullable(Of PersonalDesktopAssignmentType), customRdpProperty As String, maxSessionLimit As Nullable(Of Integer), loadBalancerType As HostPoolLoadBalancerType, ring As Nullable(Of Integer), isValidationEnvironment As Nullable(Of Boolean), registrationInfo As HostPoolRegistrationInfo, vmTemplate As String, applicationGroupReferences As IEnumerable(Of String), ssoAdfsAuthority As String, ssoClientId As String, ssoClientSecretKeyVaultPath As String, ssoSecretType As Nullable(Of HostPoolSsoSecretType), preferredAppGroupType As PreferredAppGroupType, startVmOnConnect As Nullable(Of Boolean), isCloudPCResource As Nullable(Of Boolean), agentUpdate As SessionHostAgentUpdateProperties, managedBy As ResourceIdentifier, kind As String, etag As Nullable(Of ETag), identity As ManagedServiceIdentity, sku As DesktopVirtualizationSku, plan As ArmPlan) As HostPoolData" />
      <MemberSignature Language="F#" Value="static member HostPoolData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * string * string * string * Azure.ResourceManager.DesktopVirtualization.Models.HostPoolType * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.PersonalDesktopAssignmentType&gt; * string * Nullable&lt;int&gt; * Azure.ResourceManager.DesktopVirtualization.Models.HostPoolLoadBalancerType * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Azure.ResourceManager.DesktopVirtualization.Models.HostPoolRegistrationInfo * string * seq&lt;string&gt; * string * string * string * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.HostPoolSsoSecretType&gt; * Azure.ResourceManager.DesktopVirtualization.Models.PreferredAppGroupType * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Azure.ResourceManager.DesktopVirtualization.Models.SessionHostAgentUpdateProperties * Azure.Core.ResourceIdentifier * string * Nullable&lt;Azure.ETag&gt; * Azure.ResourceManager.Models.ManagedServiceIdentity * Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku * Azure.ResourceManager.Models.ArmPlan -&gt; Azure.ResourceManager.DesktopVirtualization.HostPoolData" Usage="Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.HostPoolData (id, name, resourceType, systemData, tags, location, objectId, friendlyName, description, hostPoolType, personalDesktopAssignmentType, customRdpProperty, maxSessionLimit, loadBalancerType, ring, isValidationEnvironment, registrationInfo, vmTemplate, applicationGroupReferences, ssoAdfsAuthority, ssoClientId, ssoClientSecretKeyVaultPath, ssoSecretType, preferredAppGroupType, startVmOnConnect, isCloudPCResource, agentUpdate, managedBy, kind, etag, identity, sku, plan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.HostPoolData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="objectId" Type="System.String" />
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="hostPoolType" Type="Azure.ResourceManager.DesktopVirtualization.Models.HostPoolType" />
        <Parameter Name="personalDesktopAssignmentType" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.PersonalDesktopAssignmentType&gt;" />
        <Parameter Name="customRdpProperty" Type="System.String" />
        <Parameter Name="maxSessionLimit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="loadBalancerType" Type="Azure.ResourceManager.DesktopVirtualization.Models.HostPoolLoadBalancerType" />
        <Parameter Name="ring" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="isValidationEnvironment" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="registrationInfo" Type="Azure.ResourceManager.DesktopVirtualization.Models.HostPoolRegistrationInfo" />
        <Parameter Name="vmTemplate" Type="System.String" />
        <Parameter Name="applicationGroupReferences" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="ssoAdfsAuthority" Type="System.String" />
        <Parameter Name="ssoClientId" Type="System.String" />
        <Parameter Name="ssoClientSecretKeyVaultPath" Type="System.String" />
        <Parameter Name="ssoSecretType" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.HostPoolSsoSecretType&gt;" />
        <Parameter Name="preferredAppGroupType" Type="Azure.ResourceManager.DesktopVirtualization.Models.PreferredAppGroupType" />
        <Parameter Name="startVmOnConnect" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isCloudPCResource" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="agentUpdate" Type="Azure.ResourceManager.DesktopVirtualization.Models.SessionHostAgentUpdateProperties" />
        <Parameter Name="managedBy" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" />
        <Parameter Name="sku" Type="Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku" />
        <Parameter Name="plan" Type="Azure.ResourceManager.Models.ArmPlan" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="objectId"> ObjectId of HostPool. (internal use). </param>
        <param name="friendlyName"> Friendly name of HostPool. </param>
        <param name="description"> Description of HostPool. </param>
        <param name="hostPoolType"> HostPool type for desktop. </param>
        <param name="personalDesktopAssignmentType"> PersonalDesktopAssignment type for HostPool. </param>
        <param name="customRdpProperty"> Custom rdp property of HostPool. </param>
        <param name="maxSessionLimit"> The max session limit of HostPool. </param>
        <param name="loadBalancerType"> The type of the load balancer. </param>
        <param name="ring"> The ring number of HostPool. </param>
        <param name="isValidationEnvironment"> Is validation environment. </param>
        <param name="registrationInfo"> The registration info of HostPool. </param>
        <param name="vmTemplate"> VM template for sessionhosts configuration within hostpool. </param>
        <param name="applicationGroupReferences"> List of applicationGroup links. </param>
        <param name="ssoAdfsAuthority"> URL to customer ADFS server for signing WVD SSO certificates. </param>
        <param name="ssoClientId"> ClientId for the registered Relying Party used to issue WVD SSO certificates. </param>
        <param name="ssoClientSecretKeyVaultPath"> Path to Azure KeyVault storing the secret used for communication to ADFS. </param>
        <param name="ssoSecretType"> The type of single sign on Secret Type. </param>
        <param name="preferredAppGroupType"> The type of preferred application group type, default to Desktop Application Group. </param>
        <param name="startVmOnConnect"> The flag to turn on/off StartVMOnConnect feature. </param>
        <param name="isCloudPCResource"> Is cloud pc resource. </param>
        <param name="agentUpdate"> The session host configuration for updating agent, monitoring agent, and stack component. </param>
        <param name="managedBy"> The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource. </param>
        <param name="kind"> Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value. </param>
        <param name="etag"> The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
        <param name="identity"> Gets or sets the identity. Current supported identity types: SystemAssigned. </param>
        <param name="sku"> The resource model definition representing SKU. </param>
        <param name="plan"> Gets or sets the plan. </param>
        <summary> Initializes a new instance of HostPoolData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DesktopVirtualization.HostPoolData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostPoolData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.HostPoolData HostPoolData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, string objectId = default, string friendlyName = default, string description = default, Azure.ResourceManager.DesktopVirtualization.Models.HostPoolType hostPoolType = default, Azure.ResourceManager.DesktopVirtualization.Models.PersonalDesktopAssignmentType? personalDesktopAssignmentType = default, string customRdpProperty = default, int? maxSessionLimit = default, Azure.ResourceManager.DesktopVirtualization.Models.HostPoolLoadBalancerType loadBalancerType = default, int? ring = default, bool? isValidationEnvironment = default, Azure.ResourceManager.DesktopVirtualization.Models.HostPoolRegistrationInfo registrationInfo = default, string vmTemplate = default, System.Collections.Generic.IEnumerable&lt;string&gt; applicationGroupReferences = default, string ssoAdfsAuthority = default, string ssoClientId = default, string ssoClientSecretKeyVaultPath = default, Azure.ResourceManager.DesktopVirtualization.Models.HostPoolSsoSecretType? ssoSecretType = default, Azure.ResourceManager.DesktopVirtualization.Models.PreferredAppGroupType preferredAppGroupType = default, bool? startVmOnConnect = default, bool? isCloudPCResource = default, Azure.ResourceManager.DesktopVirtualization.Models.HostPoolPublicNetworkAccess? publicNetworkAccess = default, Azure.ResourceManager.DesktopVirtualization.Models.SessionHostAgentUpdateProperties agentUpdate = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateEndpointConnection&gt; privateEndpointConnections = default, Azure.Core.ResourceIdentifier managedBy = default, string kind = default, Azure.ETag? etag = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku sku = default, Azure.ResourceManager.Models.ArmPlan plan = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.HostPoolData HostPoolData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, string objectId, string friendlyName, string description, valuetype Azure.ResourceManager.DesktopVirtualization.Models.HostPoolType hostPoolType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.PersonalDesktopAssignmentType&gt; personalDesktopAssignmentType, string customRdpProperty, valuetype System.Nullable`1&lt;int32&gt; maxSessionLimit, valuetype Azure.ResourceManager.DesktopVirtualization.Models.HostPoolLoadBalancerType loadBalancerType, valuetype System.Nullable`1&lt;int32&gt; ring, valuetype System.Nullable`1&lt;bool&gt; isValidationEnvironment, class Azure.ResourceManager.DesktopVirtualization.Models.HostPoolRegistrationInfo registrationInfo, string vmTemplate, class System.Collections.Generic.IEnumerable`1&lt;string&gt; applicationGroupReferences, string ssoAdfsAuthority, string ssoClientId, string ssoClientSecretKeyVaultPath, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.HostPoolSsoSecretType&gt; ssoSecretType, valuetype Azure.ResourceManager.DesktopVirtualization.Models.PreferredAppGroupType preferredAppGroupType, valuetype System.Nullable`1&lt;bool&gt; startVmOnConnect, valuetype System.Nullable`1&lt;bool&gt; isCloudPCResource, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.HostPoolPublicNetworkAccess&gt; publicNetworkAccess, class Azure.ResourceManager.DesktopVirtualization.Models.SessionHostAgentUpdateProperties agentUpdate, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateEndpointConnection&gt; privateEndpointConnections, class Azure.Core.ResourceIdentifier managedBy, string kind, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, class Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku sku, class Azure.ResourceManager.Models.ArmPlan plan) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.HostPoolData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.String,System.String,System.String,Azure.ResourceManager.DesktopVirtualization.Models.HostPoolType,System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.PersonalDesktopAssignmentType},System.String,System.Nullable{System.Int32},Azure.ResourceManager.DesktopVirtualization.Models.HostPoolLoadBalancerType,System.Nullable{System.Int32},System.Nullable{System.Boolean},Azure.ResourceManager.DesktopVirtualization.Models.HostPoolRegistrationInfo,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.HostPoolSsoSecretType},Azure.ResourceManager.DesktopVirtualization.Models.PreferredAppGroupType,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.HostPoolPublicNetworkAccess},Azure.ResourceManager.DesktopVirtualization.Models.SessionHostAgentUpdateProperties,System.Collections.Generic.IEnumerable{Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateEndpointConnection},Azure.Core.ResourceIdentifier,System.String,System.Nullable{Azure.ETag},Azure.ResourceManager.Models.ManagedServiceIdentity,Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku,Azure.ResourceManager.Models.ArmPlan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HostPoolData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional objectId As String = Nothing, Optional friendlyName As String = Nothing, Optional description As String = Nothing, Optional hostPoolType As HostPoolType = Nothing, Optional personalDesktopAssignmentType As Nullable(Of PersonalDesktopAssignmentType) = Nothing, Optional customRdpProperty As String = Nothing, Optional maxSessionLimit As Nullable(Of Integer) = Nothing, Optional loadBalancerType As HostPoolLoadBalancerType = Nothing, Optional ring As Nullable(Of Integer) = Nothing, Optional isValidationEnvironment As Nullable(Of Boolean) = Nothing, Optional registrationInfo As HostPoolRegistrationInfo = Nothing, Optional vmTemplate As String = Nothing, Optional applicationGroupReferences As IEnumerable(Of String) = Nothing, Optional ssoAdfsAuthority As String = Nothing, Optional ssoClientId As String = Nothing, Optional ssoClientSecretKeyVaultPath As String = Nothing, Optional ssoSecretType As Nullable(Of HostPoolSsoSecretType) = Nothing, Optional preferredAppGroupType As PreferredAppGroupType = Nothing, Optional startVmOnConnect As Nullable(Of Boolean) = Nothing, Optional isCloudPCResource As Nullable(Of Boolean) = Nothing, Optional publicNetworkAccess As Nullable(Of HostPoolPublicNetworkAccess) = Nothing, Optional agentUpdate As SessionHostAgentUpdateProperties = Nothing, Optional privateEndpointConnections As IEnumerable(Of DesktopVirtualizationPrivateEndpointConnection) = Nothing, Optional managedBy As ResourceIdentifier = Nothing, Optional kind As String = Nothing, Optional etag As Nullable(Of ETag) = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional sku As DesktopVirtualizationSku = Nothing, Optional plan As ArmPlan = Nothing) As HostPoolData" />
      <MemberSignature Language="F#" Value="static member HostPoolData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * string * string * string * Azure.ResourceManager.DesktopVirtualization.Models.HostPoolType * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.PersonalDesktopAssignmentType&gt; * string * Nullable&lt;int&gt; * Azure.ResourceManager.DesktopVirtualization.Models.HostPoolLoadBalancerType * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Azure.ResourceManager.DesktopVirtualization.Models.HostPoolRegistrationInfo * string * seq&lt;string&gt; * string * string * string * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.HostPoolSsoSecretType&gt; * Azure.ResourceManager.DesktopVirtualization.Models.PreferredAppGroupType * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.HostPoolPublicNetworkAccess&gt; * Azure.ResourceManager.DesktopVirtualization.Models.SessionHostAgentUpdateProperties * seq&lt;Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateEndpointConnection&gt; * Azure.Core.ResourceIdentifier * string * Nullable&lt;Azure.ETag&gt; * Azure.ResourceManager.Models.ManagedServiceIdentity * Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku * Azure.ResourceManager.Models.ArmPlan -&gt; Azure.ResourceManager.DesktopVirtualization.HostPoolData" Usage="Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.HostPoolData (id, name, resourceType, systemData, tags, location, objectId, friendlyName, description, hostPoolType, personalDesktopAssignmentType, customRdpProperty, maxSessionLimit, loadBalancerType, ring, isValidationEnvironment, registrationInfo, vmTemplate, applicationGroupReferences, ssoAdfsAuthority, ssoClientId, ssoClientSecretKeyVaultPath, ssoSecretType, preferredAppGroupType, startVmOnConnect, isCloudPCResource, publicNetworkAccess, agentUpdate, privateEndpointConnections, managedBy, kind, etag, identity, sku, plan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.HostPoolData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="objectId" Type="System.String" />
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="hostPoolType" Type="Azure.ResourceManager.DesktopVirtualization.Models.HostPoolType" />
        <Parameter Name="personalDesktopAssignmentType" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.PersonalDesktopAssignmentType&gt;" />
        <Parameter Name="customRdpProperty" Type="System.String" />
        <Parameter Name="maxSessionLimit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="loadBalancerType" Type="Azure.ResourceManager.DesktopVirtualization.Models.HostPoolLoadBalancerType" />
        <Parameter Name="ring" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="isValidationEnvironment" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="registrationInfo" Type="Azure.ResourceManager.DesktopVirtualization.Models.HostPoolRegistrationInfo" />
        <Parameter Name="vmTemplate" Type="System.String" />
        <Parameter Name="applicationGroupReferences" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="ssoAdfsAuthority" Type="System.String" />
        <Parameter Name="ssoClientId" Type="System.String" />
        <Parameter Name="ssoClientSecretKeyVaultPath" Type="System.String" />
        <Parameter Name="ssoSecretType" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.HostPoolSsoSecretType&gt;" />
        <Parameter Name="preferredAppGroupType" Type="Azure.ResourceManager.DesktopVirtualization.Models.PreferredAppGroupType" />
        <Parameter Name="startVmOnConnect" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isCloudPCResource" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="publicNetworkAccess" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.HostPoolPublicNetworkAccess&gt;" />
        <Parameter Name="agentUpdate" Type="Azure.ResourceManager.DesktopVirtualization.Models.SessionHostAgentUpdateProperties" />
        <Parameter Name="privateEndpointConnections" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateEndpointConnection&gt;" />
        <Parameter Name="managedBy" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" />
        <Parameter Name="sku" Type="Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku" />
        <Parameter Name="plan" Type="Azure.ResourceManager.Models.ArmPlan" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="objectId"> ObjectId of HostPool. (internal use). </param>
        <param name="friendlyName"> Friendly name of HostPool. </param>
        <param name="description"> Description of HostPool. </param>
        <param name="hostPoolType"> HostPool type for desktop. </param>
        <param name="personalDesktopAssignmentType"> PersonalDesktopAssignment type for HostPool. </param>
        <param name="customRdpProperty"> Custom rdp property of HostPool. </param>
        <param name="maxSessionLimit"> The max session limit of HostPool. </param>
        <param name="loadBalancerType"> The type of the load balancer. </param>
        <param name="ring"> The ring number of HostPool. </param>
        <param name="isValidationEnvironment"> Is validation environment. </param>
        <param name="registrationInfo"> The registration info of HostPool. </param>
        <param name="vmTemplate"> VM template for sessionhosts configuration within hostpool. </param>
        <param name="applicationGroupReferences"> List of applicationGroup links. </param>
        <param name="ssoAdfsAuthority"> URL to customer ADFS server for signing WVD SSO certificates. </param>
        <param name="ssoClientId"> ClientId for the registered Relying Party used to issue WVD SSO certificates. </param>
        <param name="ssoClientSecretKeyVaultPath"> Path to Azure KeyVault storing the secret used for communication to ADFS. </param>
        <param name="ssoSecretType"> The type of single sign on Secret Type. </param>
        <param name="preferredAppGroupType"> The type of preferred application group type, default to Desktop Application Group. </param>
        <param name="startVmOnConnect"> The flag to turn on/off StartVMOnConnect feature. </param>
        <param name="isCloudPCResource"> Is cloud pc resource. </param>
        <param name="publicNetworkAccess"> Enabled allows this resource to be accessed from both public and private networks, Disabled allows this resource to only be accessed via private endpoints. </param>
        <param name="agentUpdate"> The session host configuration for updating agent, monitoring agent, and stack component. </param>
        <param name="privateEndpointConnections"> List of private endpoint connection associated with the specified resource. </param>
        <param name="managedBy"> The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource. </param>
        <param name="kind"> Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value. </param>
        <param name="etag"> The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
        <param name="identity"> Gets or sets the identity. Current supported identity types: SystemAssigned. </param>
        <param name="sku"> The resource model definition representing SKU. </param>
        <param name="plan"> Gets or sets the plan. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DesktopVirtualization.HostPoolData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DesktopVirtualization.HostPoolData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostPoolPatch">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.Models.HostPoolPatch HostPoolPatch (Azure.Core.ResourceIdentifier id, string name, Azure.Core.ResourceType resourceType, Azure.ResourceManager.Models.SystemData systemData, System.Collections.Generic.IDictionary&lt;string,string&gt; tags, string friendlyName, string description, string customRdpProperty, int? maxSessionLimit, Azure.ResourceManager.DesktopVirtualization.Models.PersonalDesktopAssignmentType? personalDesktopAssignmentType, Azure.ResourceManager.DesktopVirtualization.Models.HostPoolLoadBalancerType? loadBalancerType, int? ring, bool? isValidationEnvironment, Azure.ResourceManager.DesktopVirtualization.Models.HostPoolRegistrationInfoPatch registrationInfo, string vmTemplate, string ssoAdfsAuthority, string ssoClientId, string ssoClientSecretKeyVaultPath, Azure.ResourceManager.DesktopVirtualization.Models.HostPoolSsoSecretType? ssoSecretType, Azure.ResourceManager.DesktopVirtualization.Models.PreferredAppGroupType? preferredAppGroupType, bool? startVmOnConnect, Azure.ResourceManager.DesktopVirtualization.Models.SessionHostAgentUpdatePatchProperties agentUpdate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.Models.HostPoolPatch HostPoolPatch(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, string friendlyName, string description, string customRdpProperty, valuetype System.Nullable`1&lt;int32&gt; maxSessionLimit, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.PersonalDesktopAssignmentType&gt; personalDesktopAssignmentType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.HostPoolLoadBalancerType&gt; loadBalancerType, valuetype System.Nullable`1&lt;int32&gt; ring, valuetype System.Nullable`1&lt;bool&gt; isValidationEnvironment, class Azure.ResourceManager.DesktopVirtualization.Models.HostPoolRegistrationInfoPatch registrationInfo, string vmTemplate, string ssoAdfsAuthority, string ssoClientId, string ssoClientSecretKeyVaultPath, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.HostPoolSsoSecretType&gt; ssoSecretType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.PreferredAppGroupType&gt; preferredAppGroupType, valuetype System.Nullable`1&lt;bool&gt; startVmOnConnect, class Azure.ResourceManager.DesktopVirtualization.Models.SessionHostAgentUpdatePatchProperties agentUpdate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.HostPoolPatch(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.PersonalDesktopAssignmentType},System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.HostPoolLoadBalancerType},System.Nullable{System.Int32},System.Nullable{System.Boolean},Azure.ResourceManager.DesktopVirtualization.Models.HostPoolRegistrationInfoPatch,System.String,System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.HostPoolSsoSecretType},System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.PreferredAppGroupType},System.Nullable{System.Boolean},Azure.ResourceManager.DesktopVirtualization.Models.SessionHostAgentUpdatePatchProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HostPoolPatch (id As ResourceIdentifier, name As String, resourceType As ResourceType, systemData As SystemData, tags As IDictionary(Of String, String), friendlyName As String, description As String, customRdpProperty As String, maxSessionLimit As Nullable(Of Integer), personalDesktopAssignmentType As Nullable(Of PersonalDesktopAssignmentType), loadBalancerType As Nullable(Of HostPoolLoadBalancerType), ring As Nullable(Of Integer), isValidationEnvironment As Nullable(Of Boolean), registrationInfo As HostPoolRegistrationInfoPatch, vmTemplate As String, ssoAdfsAuthority As String, ssoClientId As String, ssoClientSecretKeyVaultPath As String, ssoSecretType As Nullable(Of HostPoolSsoSecretType), preferredAppGroupType As Nullable(Of PreferredAppGroupType), startVmOnConnect As Nullable(Of Boolean), agentUpdate As SessionHostAgentUpdatePatchProperties) As HostPoolPatch" />
      <MemberSignature Language="F#" Value="static member HostPoolPatch : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * string * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.PersonalDesktopAssignmentType&gt; * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.HostPoolLoadBalancerType&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Azure.ResourceManager.DesktopVirtualization.Models.HostPoolRegistrationInfoPatch * string * string * string * string * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.HostPoolSsoSecretType&gt; * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.PreferredAppGroupType&gt; * Nullable&lt;bool&gt; * Azure.ResourceManager.DesktopVirtualization.Models.SessionHostAgentUpdatePatchProperties -&gt; Azure.ResourceManager.DesktopVirtualization.Models.HostPoolPatch" Usage="Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.HostPoolPatch (id, name, resourceType, systemData, tags, friendlyName, description, customRdpProperty, maxSessionLimit, personalDesktopAssignmentType, loadBalancerType, ring, isValidationEnvironment, registrationInfo, vmTemplate, ssoAdfsAuthority, ssoClientId, ssoClientSecretKeyVaultPath, ssoSecretType, preferredAppGroupType, startVmOnConnect, agentUpdate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.Models.HostPoolPatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="customRdpProperty" Type="System.String" />
        <Parameter Name="maxSessionLimit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="personalDesktopAssignmentType" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.PersonalDesktopAssignmentType&gt;" />
        <Parameter Name="loadBalancerType" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.HostPoolLoadBalancerType&gt;" />
        <Parameter Name="ring" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="isValidationEnvironment" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="registrationInfo" Type="Azure.ResourceManager.DesktopVirtualization.Models.HostPoolRegistrationInfoPatch" />
        <Parameter Name="vmTemplate" Type="System.String" />
        <Parameter Name="ssoAdfsAuthority" Type="System.String" />
        <Parameter Name="ssoClientId" Type="System.String" />
        <Parameter Name="ssoClientSecretKeyVaultPath" Type="System.String" />
        <Parameter Name="ssoSecretType" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.HostPoolSsoSecretType&gt;" />
        <Parameter Name="preferredAppGroupType" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.PreferredAppGroupType&gt;" />
        <Parameter Name="startVmOnConnect" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="agentUpdate" Type="Azure.ResourceManager.DesktopVirtualization.Models.SessionHostAgentUpdatePatchProperties" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> tags to be updated. </param>
        <param name="friendlyName"> Friendly name of HostPool. </param>
        <param name="description"> Description of HostPool. </param>
        <param name="customRdpProperty"> Custom rdp property of HostPool. </param>
        <param name="maxSessionLimit"> The max session limit of HostPool. </param>
        <param name="personalDesktopAssignmentType"> PersonalDesktopAssignment type for HostPool. </param>
        <param name="loadBalancerType"> The type of the load balancer. </param>
        <param name="ring"> The ring number of HostPool. </param>
        <param name="isValidationEnvironment"> Is validation environment. </param>
        <param name="registrationInfo"> The registration info of HostPool. </param>
        <param name="vmTemplate"> VM template for sessionhosts configuration within hostpool. </param>
        <param name="ssoAdfsAuthority"> URL to customer ADFS server for signing WVD SSO certificates. </param>
        <param name="ssoClientId"> ClientId for the registered Relying Party used to issue WVD SSO certificates. </param>
        <param name="ssoClientSecretKeyVaultPath"> Path to Azure KeyVault storing the secret used for communication to ADFS. </param>
        <param name="ssoSecretType"> The type of single sign on Secret Type. </param>
        <param name="preferredAppGroupType"> The type of preferred application group type, default to Desktop Application Group. </param>
        <param name="startVmOnConnect"> The flag to turn on/off StartVMOnConnect feature. </param>
        <param name="agentUpdate"> The session host configuration for updating agent, monitoring agent, and stack component. </param>
        <summary> Initializes a new instance of HostPoolPatch. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DesktopVirtualization.Models.HostPoolPatch" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostPoolPatch">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.Models.HostPoolPatch HostPoolPatch (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, string friendlyName = default, string description = default, string customRdpProperty = default, int? maxSessionLimit = default, Azure.ResourceManager.DesktopVirtualization.Models.PersonalDesktopAssignmentType? personalDesktopAssignmentType = default, Azure.ResourceManager.DesktopVirtualization.Models.HostPoolLoadBalancerType? loadBalancerType = default, int? ring = default, bool? isValidationEnvironment = default, Azure.ResourceManager.DesktopVirtualization.Models.HostPoolRegistrationInfoPatch registrationInfo = default, string vmTemplate = default, string ssoAdfsAuthority = default, string ssoClientId = default, string ssoClientSecretKeyVaultPath = default, Azure.ResourceManager.DesktopVirtualization.Models.HostPoolSsoSecretType? ssoSecretType = default, Azure.ResourceManager.DesktopVirtualization.Models.PreferredAppGroupType? preferredAppGroupType = default, bool? startVmOnConnect = default, Azure.ResourceManager.DesktopVirtualization.Models.HostPoolPublicNetworkAccess? publicNetworkAccess = default, Azure.ResourceManager.DesktopVirtualization.Models.SessionHostAgentUpdatePatchProperties agentUpdate = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.Models.HostPoolPatch HostPoolPatch(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, string friendlyName, string description, string customRdpProperty, valuetype System.Nullable`1&lt;int32&gt; maxSessionLimit, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.PersonalDesktopAssignmentType&gt; personalDesktopAssignmentType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.HostPoolLoadBalancerType&gt; loadBalancerType, valuetype System.Nullable`1&lt;int32&gt; ring, valuetype System.Nullable`1&lt;bool&gt; isValidationEnvironment, class Azure.ResourceManager.DesktopVirtualization.Models.HostPoolRegistrationInfoPatch registrationInfo, string vmTemplate, string ssoAdfsAuthority, string ssoClientId, string ssoClientSecretKeyVaultPath, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.HostPoolSsoSecretType&gt; ssoSecretType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.PreferredAppGroupType&gt; preferredAppGroupType, valuetype System.Nullable`1&lt;bool&gt; startVmOnConnect, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.HostPoolPublicNetworkAccess&gt; publicNetworkAccess, class Azure.ResourceManager.DesktopVirtualization.Models.SessionHostAgentUpdatePatchProperties agentUpdate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.HostPoolPatch(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.PersonalDesktopAssignmentType},System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.HostPoolLoadBalancerType},System.Nullable{System.Int32},System.Nullable{System.Boolean},Azure.ResourceManager.DesktopVirtualization.Models.HostPoolRegistrationInfoPatch,System.String,System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.HostPoolSsoSecretType},System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.PreferredAppGroupType},System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.HostPoolPublicNetworkAccess},Azure.ResourceManager.DesktopVirtualization.Models.SessionHostAgentUpdatePatchProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HostPoolPatch (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional friendlyName As String = Nothing, Optional description As String = Nothing, Optional customRdpProperty As String = Nothing, Optional maxSessionLimit As Nullable(Of Integer) = Nothing, Optional personalDesktopAssignmentType As Nullable(Of PersonalDesktopAssignmentType) = Nothing, Optional loadBalancerType As Nullable(Of HostPoolLoadBalancerType) = Nothing, Optional ring As Nullable(Of Integer) = Nothing, Optional isValidationEnvironment As Nullable(Of Boolean) = Nothing, Optional registrationInfo As HostPoolRegistrationInfoPatch = Nothing, Optional vmTemplate As String = Nothing, Optional ssoAdfsAuthority As String = Nothing, Optional ssoClientId As String = Nothing, Optional ssoClientSecretKeyVaultPath As String = Nothing, Optional ssoSecretType As Nullable(Of HostPoolSsoSecretType) = Nothing, Optional preferredAppGroupType As Nullable(Of PreferredAppGroupType) = Nothing, Optional startVmOnConnect As Nullable(Of Boolean) = Nothing, Optional publicNetworkAccess As Nullable(Of HostPoolPublicNetworkAccess) = Nothing, Optional agentUpdate As SessionHostAgentUpdatePatchProperties = Nothing) As HostPoolPatch" />
      <MemberSignature Language="F#" Value="static member HostPoolPatch : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * string * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.PersonalDesktopAssignmentType&gt; * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.HostPoolLoadBalancerType&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Azure.ResourceManager.DesktopVirtualization.Models.HostPoolRegistrationInfoPatch * string * string * string * string * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.HostPoolSsoSecretType&gt; * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.PreferredAppGroupType&gt; * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.HostPoolPublicNetworkAccess&gt; * Azure.ResourceManager.DesktopVirtualization.Models.SessionHostAgentUpdatePatchProperties -&gt; Azure.ResourceManager.DesktopVirtualization.Models.HostPoolPatch" Usage="Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.HostPoolPatch (id, name, resourceType, systemData, tags, friendlyName, description, customRdpProperty, maxSessionLimit, personalDesktopAssignmentType, loadBalancerType, ring, isValidationEnvironment, registrationInfo, vmTemplate, ssoAdfsAuthority, ssoClientId, ssoClientSecretKeyVaultPath, ssoSecretType, preferredAppGroupType, startVmOnConnect, publicNetworkAccess, agentUpdate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.Models.HostPoolPatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="customRdpProperty" Type="System.String" />
        <Parameter Name="maxSessionLimit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="personalDesktopAssignmentType" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.PersonalDesktopAssignmentType&gt;" />
        <Parameter Name="loadBalancerType" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.HostPoolLoadBalancerType&gt;" />
        <Parameter Name="ring" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="isValidationEnvironment" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="registrationInfo" Type="Azure.ResourceManager.DesktopVirtualization.Models.HostPoolRegistrationInfoPatch" />
        <Parameter Name="vmTemplate" Type="System.String" />
        <Parameter Name="ssoAdfsAuthority" Type="System.String" />
        <Parameter Name="ssoClientId" Type="System.String" />
        <Parameter Name="ssoClientSecretKeyVaultPath" Type="System.String" />
        <Parameter Name="ssoSecretType" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.HostPoolSsoSecretType&gt;" />
        <Parameter Name="preferredAppGroupType" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.PreferredAppGroupType&gt;" />
        <Parameter Name="startVmOnConnect" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="publicNetworkAccess" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.HostPoolPublicNetworkAccess&gt;" />
        <Parameter Name="agentUpdate" Type="Azure.ResourceManager.DesktopVirtualization.Models.SessionHostAgentUpdatePatchProperties" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> tags to be updated. </param>
        <param name="friendlyName"> Friendly name of HostPool. </param>
        <param name="description"> Description of HostPool. </param>
        <param name="customRdpProperty"> Custom rdp property of HostPool. </param>
        <param name="maxSessionLimit"> The max session limit of HostPool. </param>
        <param name="personalDesktopAssignmentType"> PersonalDesktopAssignment type for HostPool. </param>
        <param name="loadBalancerType"> The type of the load balancer. </param>
        <param name="ring"> The ring number of HostPool. </param>
        <param name="isValidationEnvironment"> Is validation environment. </param>
        <param name="registrationInfo"> The registration info of HostPool. </param>
        <param name="vmTemplate"> VM template for sessionhosts configuration within hostpool. </param>
        <param name="ssoAdfsAuthority"> URL to customer ADFS server for signing WVD SSO certificates. </param>
        <param name="ssoClientId"> ClientId for the registered Relying Party used to issue WVD SSO certificates. </param>
        <param name="ssoClientSecretKeyVaultPath"> Path to Azure KeyVault storing the secret used for communication to ADFS. </param>
        <param name="ssoSecretType"> The type of single sign on Secret Type. </param>
        <param name="preferredAppGroupType"> The type of preferred application group type, default to Desktop Application Group. </param>
        <param name="startVmOnConnect"> The flag to turn on/off StartVMOnConnect feature. </param>
        <param name="publicNetworkAccess"> Enabled to allow this resource to be access from the public network. </param>
        <param name="agentUpdate"> The session host configuration for updating agent, monitoring agent, and stack component. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DesktopVirtualization.Models.HostPoolPatch" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DesktopVirtualization.Models.HostPoolPatch" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MsixPackageData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.MsixPackageData MsixPackageData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string imagePath = default, string packageName = default, string packageFamilyName = default, string displayName = default, string packageRelativePath = default, bool? isRegularRegistration = default, bool? isActive = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DesktopVirtualization.Models.MsixPackageDependencies&gt; packageDependencies = default, string version = default, DateTimeOffset? lastUpdatedOn = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DesktopVirtualization.Models.MsixPackageApplications&gt; packageApplications = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.MsixPackageData MsixPackageData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string imagePath, string packageName, string packageFamilyName, string displayName, string packageRelativePath, valuetype System.Nullable`1&lt;bool&gt; isRegularRegistration, valuetype System.Nullable`1&lt;bool&gt; isActive, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.DesktopVirtualization.Models.MsixPackageDependencies&gt; packageDependencies, string version, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastUpdatedOn, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.DesktopVirtualization.Models.MsixPackageApplications&gt; packageApplications) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.MsixPackageData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Azure.ResourceManager.DesktopVirtualization.Models.MsixPackageDependencies},System.String,System.Nullable{System.DateTimeOffset},System.Collections.Generic.IEnumerable{Azure.ResourceManager.DesktopVirtualization.Models.MsixPackageApplications})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MsixPackageData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional imagePath As String = Nothing, Optional packageName As String = Nothing, Optional packageFamilyName As String = Nothing, Optional displayName As String = Nothing, Optional packageRelativePath As String = Nothing, Optional isRegularRegistration As Nullable(Of Boolean) = Nothing, Optional isActive As Nullable(Of Boolean) = Nothing, Optional packageDependencies As IEnumerable(Of MsixPackageDependencies) = Nothing, Optional version As String = Nothing, Optional lastUpdatedOn As Nullable(Of DateTimeOffset) = Nothing, Optional packageApplications As IEnumerable(Of MsixPackageApplications) = Nothing) As MsixPackageData" />
      <MemberSignature Language="F#" Value="static member MsixPackageData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * string * string * string * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * seq&lt;Azure.ResourceManager.DesktopVirtualization.Models.MsixPackageDependencies&gt; * string * Nullable&lt;DateTimeOffset&gt; * seq&lt;Azure.ResourceManager.DesktopVirtualization.Models.MsixPackageApplications&gt; -&gt; Azure.ResourceManager.DesktopVirtualization.MsixPackageData" Usage="Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.MsixPackageData (id, name, resourceType, systemData, imagePath, packageName, packageFamilyName, displayName, packageRelativePath, isRegularRegistration, isActive, packageDependencies, version, lastUpdatedOn, packageApplications)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.MsixPackageData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="imagePath" Type="System.String" />
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="packageFamilyName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="packageRelativePath" Type="System.String" />
        <Parameter Name="isRegularRegistration" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isActive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="packageDependencies" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DesktopVirtualization.Models.MsixPackageDependencies&gt;" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="lastUpdatedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="packageApplications" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DesktopVirtualization.Models.MsixPackageApplications&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="imagePath"> VHD/CIM image path on Network Share. </param>
        <param name="packageName"> Package Name from appxmanifest.xml. </param>
        <param name="packageFamilyName"> Package Family Name from appxmanifest.xml. Contains Package Name and Publisher name. </param>
        <param name="displayName"> User friendly Name to be displayed in the portal. </param>
        <param name="packageRelativePath"> Relative Path to the package inside the image. </param>
        <param name="isRegularRegistration"> Specifies how to register Package in feed. </param>
        <param name="isActive"> Make this version of the package the active one across the hostpool. </param>
        <param name="packageDependencies"> List of package dependencies. </param>
        <param name="version"> Package Version found in the appxmanifest.xml. </param>
        <param name="lastUpdatedOn"> Date Package was last updated, found in the appxmanifest.xml. </param>
        <param name="packageApplications"> List of package applications. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DesktopVirtualization.MsixPackageData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DesktopVirtualization.MsixPackageData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MsixPackagePatch">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.Models.MsixPackagePatch MsixPackagePatch (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, bool? isActive = default, bool? isRegularRegistration = default, string displayName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.Models.MsixPackagePatch MsixPackagePatch(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;bool&gt; isActive, valuetype System.Nullable`1&lt;bool&gt; isRegularRegistration, string displayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.MsixPackagePatch(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MsixPackagePatch (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional isActive As Nullable(Of Boolean) = Nothing, Optional isRegularRegistration As Nullable(Of Boolean) = Nothing, Optional displayName As String = Nothing) As MsixPackagePatch" />
      <MemberSignature Language="F#" Value="static member MsixPackagePatch : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string -&gt; Azure.ResourceManager.DesktopVirtualization.Models.MsixPackagePatch" Usage="Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.MsixPackagePatch (id, name, resourceType, systemData, isActive, isRegularRegistration, displayName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.Models.MsixPackagePatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="isActive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isRegularRegistration" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="displayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="isActive"> Set a version of the package to be active across hostpool. </param>
        <param name="isRegularRegistration"> Set Registration mode. Regular or Delayed. </param>
        <param name="displayName"> Display name for MSIX Package. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DesktopVirtualization.Models.MsixPackagePatch" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DesktopVirtualization.Models.MsixPackagePatch" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScalingPlanData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.ScalingPlanData ScalingPlanData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, string objectId = default, string description = default, string friendlyName = default, string timeZone = default, Azure.ResourceManager.DesktopVirtualization.Models.ScalingHostPoolType? scalingHostPoolType = default, string exclusionTag = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DesktopVirtualization.Models.ScalingSchedule&gt; schedules = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DesktopVirtualization.Models.ScalingHostPoolReference&gt; hostPoolReferences = default, Azure.Core.ResourceIdentifier managedBy = default, string kind = default, Azure.ETag? etag = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku sku = default, Azure.ResourceManager.Models.ArmPlan plan = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.ScalingPlanData ScalingPlanData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, string objectId, string description, string friendlyName, string timeZone, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.ScalingHostPoolType&gt; scalingHostPoolType, string exclusionTag, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.DesktopVirtualization.Models.ScalingSchedule&gt; schedules, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.DesktopVirtualization.Models.ScalingHostPoolReference&gt; hostPoolReferences, class Azure.Core.ResourceIdentifier managedBy, string kind, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, class Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku sku, class Azure.ResourceManager.Models.ArmPlan plan) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.ScalingPlanData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.String,System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.ScalingHostPoolType},System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.DesktopVirtualization.Models.ScalingSchedule},System.Collections.Generic.IEnumerable{Azure.ResourceManager.DesktopVirtualization.Models.ScalingHostPoolReference},Azure.Core.ResourceIdentifier,System.String,System.Nullable{Azure.ETag},Azure.ResourceManager.Models.ManagedServiceIdentity,Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku,Azure.ResourceManager.Models.ArmPlan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ScalingPlanData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional objectId As String = Nothing, Optional description As String = Nothing, Optional friendlyName As String = Nothing, Optional timeZone As String = Nothing, Optional scalingHostPoolType As Nullable(Of ScalingHostPoolType) = Nothing, Optional exclusionTag As String = Nothing, Optional schedules As IEnumerable(Of ScalingSchedule) = Nothing, Optional hostPoolReferences As IEnumerable(Of ScalingHostPoolReference) = Nothing, Optional managedBy As ResourceIdentifier = Nothing, Optional kind As String = Nothing, Optional etag As Nullable(Of ETag) = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional sku As DesktopVirtualizationSku = Nothing, Optional plan As ArmPlan = Nothing) As ScalingPlanData" />
      <MemberSignature Language="F#" Value="static member ScalingPlanData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * string * string * string * string * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.ScalingHostPoolType&gt; * string * seq&lt;Azure.ResourceManager.DesktopVirtualization.Models.ScalingSchedule&gt; * seq&lt;Azure.ResourceManager.DesktopVirtualization.Models.ScalingHostPoolReference&gt; * Azure.Core.ResourceIdentifier * string * Nullable&lt;Azure.ETag&gt; * Azure.ResourceManager.Models.ManagedServiceIdentity * Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku * Azure.ResourceManager.Models.ArmPlan -&gt; Azure.ResourceManager.DesktopVirtualization.ScalingPlanData" Usage="Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.ScalingPlanData (id, name, resourceType, systemData, tags, location, objectId, description, friendlyName, timeZone, scalingHostPoolType, exclusionTag, schedules, hostPoolReferences, managedBy, kind, etag, identity, sku, plan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.ScalingPlanData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="objectId" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="timeZone" Type="System.String" />
        <Parameter Name="scalingHostPoolType" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.ScalingHostPoolType&gt;" />
        <Parameter Name="exclusionTag" Type="System.String" />
        <Parameter Name="schedules" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DesktopVirtualization.Models.ScalingSchedule&gt;" />
        <Parameter Name="hostPoolReferences" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DesktopVirtualization.Models.ScalingHostPoolReference&gt;" />
        <Parameter Name="managedBy" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" />
        <Parameter Name="sku" Type="Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku" />
        <Parameter Name="plan" Type="Azure.ResourceManager.Models.ArmPlan" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="objectId"> ObjectId of scaling plan. (internal use). </param>
        <param name="description"> Description of scaling plan. </param>
        <param name="friendlyName"> User friendly name of scaling plan. </param>
        <param name="timeZone"> Timezone of the scaling plan. </param>
        <param name="scalingHostPoolType"> HostPool type for desktop. </param>
        <param name="exclusionTag"> Exclusion tag for scaling plan. </param>
        <param name="schedules"> List of ScalingPlanPooledSchedule definitions. </param>
        <param name="hostPoolReferences"> List of ScalingHostPoolReference definitions. </param>
        <param name="managedBy"> The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource. </param>
        <param name="kind"> Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value. </param>
        <param name="etag"> The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
        <param name="identity"> Gets or sets the identity. Current supported identity types: SystemAssigned. </param>
        <param name="sku"> The resource model definition representing SKU. </param>
        <param name="plan"> Gets or sets the plan. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlanData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlanData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScalingPlanPersonalScheduleData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.ScalingPlanPersonalScheduleData ScalingPlanPersonalScheduleData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationDayOfWeek&gt; daysOfWeek = default, Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime rampUpStartTime = default, Azure.ResourceManager.DesktopVirtualization.Models.StartupBehavior? rampUpAutoStartHosts = default, Azure.ResourceManager.DesktopVirtualization.Models.SetStartVmOnConnect? rampUpStartVmOnConnect = default, Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation? rampUpActionOnDisconnect = default, int? rampUpMinutesToWaitOnDisconnect = default, Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation? rampUpActionOnLogoff = default, int? rampUpMinutesToWaitOnLogoff = default, Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime peakStartTime = default, Azure.ResourceManager.DesktopVirtualization.Models.SetStartVmOnConnect? peakStartVmOnConnect = default, Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation? peakActionOnDisconnect = default, int? peakMinutesToWaitOnDisconnect = default, Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation? peakActionOnLogoff = default, int? peakMinutesToWaitOnLogoff = default, Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime rampDownStartTime = default, Azure.ResourceManager.DesktopVirtualization.Models.SetStartVmOnConnect? rampDownStartVmOnConnect = default, Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation? rampDownActionOnDisconnect = default, int? rampDownMinutesToWaitOnDisconnect = default, Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation? rampDownActionOnLogoff = default, int? rampDownMinutesToWaitOnLogoff = default, Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime offPeakStartTime = default, Azure.ResourceManager.DesktopVirtualization.Models.SetStartVmOnConnect? offPeakStartVmOnConnect = default, Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation? offPeakActionOnDisconnect = default, int? offPeakMinutesToWaitOnDisconnect = default, Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation? offPeakActionOnLogoff = default, int? offPeakMinutesToWaitOnLogoff = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.ScalingPlanPersonalScheduleData ScalingPlanPersonalScheduleData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationDayOfWeek&gt; daysOfWeek, class Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime rampUpStartTime, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.StartupBehavior&gt; rampUpAutoStartHosts, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.SetStartVmOnConnect&gt; rampUpStartVmOnConnect, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation&gt; rampUpActionOnDisconnect, valuetype System.Nullable`1&lt;int32&gt; rampUpMinutesToWaitOnDisconnect, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation&gt; rampUpActionOnLogoff, valuetype System.Nullable`1&lt;int32&gt; rampUpMinutesToWaitOnLogoff, class Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime peakStartTime, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.SetStartVmOnConnect&gt; peakStartVmOnConnect, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation&gt; peakActionOnDisconnect, valuetype System.Nullable`1&lt;int32&gt; peakMinutesToWaitOnDisconnect, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation&gt; peakActionOnLogoff, valuetype System.Nullable`1&lt;int32&gt; peakMinutesToWaitOnLogoff, class Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime rampDownStartTime, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.SetStartVmOnConnect&gt; rampDownStartVmOnConnect, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation&gt; rampDownActionOnDisconnect, valuetype System.Nullable`1&lt;int32&gt; rampDownMinutesToWaitOnDisconnect, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation&gt; rampDownActionOnLogoff, valuetype System.Nullable`1&lt;int32&gt; rampDownMinutesToWaitOnLogoff, class Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime offPeakStartTime, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.SetStartVmOnConnect&gt; offPeakStartVmOnConnect, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation&gt; offPeakActionOnDisconnect, valuetype System.Nullable`1&lt;int32&gt; offPeakMinutesToWaitOnDisconnect, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation&gt; offPeakActionOnLogoff, valuetype System.Nullable`1&lt;int32&gt; offPeakMinutesToWaitOnLogoff) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.ScalingPlanPersonalScheduleData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IEnumerable{Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationDayOfWeek},Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime,System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.StartupBehavior},System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.SetStartVmOnConnect},System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation},System.Nullable{System.Int32},Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime,System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.SetStartVmOnConnect},System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation},System.Nullable{System.Int32},Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime,System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.SetStartVmOnConnect},System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation},System.Nullable{System.Int32},Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime,System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.SetStartVmOnConnect},System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ScalingPlanPersonalScheduleData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional daysOfWeek As IEnumerable(Of DesktopVirtualizationDayOfWeek) = Nothing, Optional rampUpStartTime As ScalingActionTime = Nothing, Optional rampUpAutoStartHosts As Nullable(Of StartupBehavior) = Nothing, Optional rampUpStartVmOnConnect As Nullable(Of SetStartVmOnConnect) = Nothing, Optional rampUpActionOnDisconnect As Nullable(Of SessionHandlingOperation) = Nothing, Optional rampUpMinutesToWaitOnDisconnect As Nullable(Of Integer) = Nothing, Optional rampUpActionOnLogoff As Nullable(Of SessionHandlingOperation) = Nothing, Optional rampUpMinutesToWaitOnLogoff As Nullable(Of Integer) = Nothing, Optional peakStartTime As ScalingActionTime = Nothing, Optional peakStartVmOnConnect As Nullable(Of SetStartVmOnConnect) = Nothing, Optional peakActionOnDisconnect As Nullable(Of SessionHandlingOperation) = Nothing, Optional peakMinutesToWaitOnDisconnect As Nullable(Of Integer) = Nothing, Optional peakActionOnLogoff As Nullable(Of SessionHandlingOperation) = Nothing, Optional peakMinutesToWaitOnLogoff As Nullable(Of Integer) = Nothing, Optional rampDownStartTime As ScalingActionTime = Nothing, Optional rampDownStartVmOnConnect As Nullable(Of SetStartVmOnConnect) = Nothing, Optional rampDownActionOnDisconnect As Nullable(Of SessionHandlingOperation) = Nothing, Optional rampDownMinutesToWaitOnDisconnect As Nullable(Of Integer) = Nothing, Optional rampDownActionOnLogoff As Nullable(Of SessionHandlingOperation) = Nothing, Optional rampDownMinutesToWaitOnLogoff As Nullable(Of Integer) = Nothing, Optional offPeakStartTime As ScalingActionTime = Nothing, Optional offPeakStartVmOnConnect As Nullable(Of SetStartVmOnConnect) = Nothing, Optional offPeakActionOnDisconnect As Nullable(Of SessionHandlingOperation) = Nothing, Optional offPeakMinutesToWaitOnDisconnect As Nullable(Of Integer) = Nothing, Optional offPeakActionOnLogoff As Nullable(Of SessionHandlingOperation) = Nothing, Optional offPeakMinutesToWaitOnLogoff As Nullable(Of Integer) = Nothing) As ScalingPlanPersonalScheduleData" />
      <MemberSignature Language="F#" Value="static member ScalingPlanPersonalScheduleData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * seq&lt;Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationDayOfWeek&gt; * Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.StartupBehavior&gt; * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SetStartVmOnConnect&gt; * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation&gt; * Nullable&lt;int&gt; * Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SetStartVmOnConnect&gt; * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation&gt; * Nullable&lt;int&gt; * Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SetStartVmOnConnect&gt; * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation&gt; * Nullable&lt;int&gt; * Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SetStartVmOnConnect&gt; * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation&gt; * Nullable&lt;int&gt; -&gt; Azure.ResourceManager.DesktopVirtualization.ScalingPlanPersonalScheduleData" Usage="Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.ScalingPlanPersonalScheduleData (id, name, resourceType, systemData, daysOfWeek, rampUpStartTime, rampUpAutoStartHosts, rampUpStartVmOnConnect, rampUpActionOnDisconnect, rampUpMinutesToWaitOnDisconnect, rampUpActionOnLogoff, rampUpMinutesToWaitOnLogoff, peakStartTime, peakStartVmOnConnect, peakActionOnDisconnect, peakMinutesToWaitOnDisconnect, peakActionOnLogoff, peakMinutesToWaitOnLogoff, rampDownStartTime, rampDownStartVmOnConnect, rampDownActionOnDisconnect, rampDownMinutesToWaitOnDisconnect, rampDownActionOnLogoff, rampDownMinutesToWaitOnLogoff, offPeakStartTime, offPeakStartVmOnConnect, offPeakActionOnDisconnect, offPeakMinutesToWaitOnDisconnect, offPeakActionOnLogoff, offPeakMinutesToWaitOnLogoff)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.ScalingPlanPersonalScheduleData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="daysOfWeek" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationDayOfWeek&gt;" />
        <Parameter Name="rampUpStartTime" Type="Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime" />
        <Parameter Name="rampUpAutoStartHosts" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.StartupBehavior&gt;" />
        <Parameter Name="rampUpStartVmOnConnect" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SetStartVmOnConnect&gt;" />
        <Parameter Name="rampUpActionOnDisconnect" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation&gt;" />
        <Parameter Name="rampUpMinutesToWaitOnDisconnect" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="rampUpActionOnLogoff" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation&gt;" />
        <Parameter Name="rampUpMinutesToWaitOnLogoff" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="peakStartTime" Type="Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime" />
        <Parameter Name="peakStartVmOnConnect" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SetStartVmOnConnect&gt;" />
        <Parameter Name="peakActionOnDisconnect" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation&gt;" />
        <Parameter Name="peakMinutesToWaitOnDisconnect" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="peakActionOnLogoff" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation&gt;" />
        <Parameter Name="peakMinutesToWaitOnLogoff" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="rampDownStartTime" Type="Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime" />
        <Parameter Name="rampDownStartVmOnConnect" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SetStartVmOnConnect&gt;" />
        <Parameter Name="rampDownActionOnDisconnect" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation&gt;" />
        <Parameter Name="rampDownMinutesToWaitOnDisconnect" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="rampDownActionOnLogoff" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation&gt;" />
        <Parameter Name="rampDownMinutesToWaitOnLogoff" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="offPeakStartTime" Type="Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime" />
        <Parameter Name="offPeakStartVmOnConnect" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SetStartVmOnConnect&gt;" />
        <Parameter Name="offPeakActionOnDisconnect" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation&gt;" />
        <Parameter Name="offPeakMinutesToWaitOnDisconnect" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="offPeakActionOnLogoff" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHandlingOperation&gt;" />
        <Parameter Name="offPeakMinutesToWaitOnLogoff" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="daysOfWeek"> Set of days of the week on which this schedule is active. </param>
        <param name="rampUpStartTime"> Starting time for ramp up period. </param>
        <param name="rampUpAutoStartHosts"> The desired startup behavior during the ramp up period for personal vms in the hostpool. </param>
        <param name="rampUpStartVmOnConnect"> The desired configuration of Start VM On Connect for the hostpool during the ramp up phase. If this is disabled, session hosts must be turned on using rampUpAutoStartHosts or by turning them on manually. </param>
        <param name="rampUpActionOnDisconnect"> Action to be taken after a user disconnect during the ramp up period. </param>
        <param name="rampUpMinutesToWaitOnDisconnect"> The time in minutes to wait before performing the desired session handling action when a user disconnects during the ramp up period. </param>
        <param name="rampUpActionOnLogoff"> Action to be taken after a logoff during the ramp up period. </param>
        <param name="rampUpMinutesToWaitOnLogoff"> The time in minutes to wait before performing the desired session handling action when a user logs off during the ramp up period. </param>
        <param name="peakStartTime"> Starting time for peak period. </param>
        <param name="peakStartVmOnConnect"> The desired configuration of Start VM On Connect for the hostpool during the peak phase. </param>
        <param name="peakActionOnDisconnect"> Action to be taken after a user disconnect during the peak period. </param>
        <param name="peakMinutesToWaitOnDisconnect"> The time in minutes to wait before performing the desired session handling action when a user disconnects during the peak period. </param>
        <param name="peakActionOnLogoff"> Action to be taken after a logoff during the peak period. </param>
        <param name="peakMinutesToWaitOnLogoff"> The time in minutes to wait before performing the desired session handling action when a user logs off during the peak period. </param>
        <param name="rampDownStartTime"> Starting time for ramp down period. </param>
        <param name="rampDownStartVmOnConnect"> The desired configuration of Start VM On Connect for the hostpool during the ramp down phase. </param>
        <param name="rampDownActionOnDisconnect"> Action to be taken after a user disconnect during the ramp down period. </param>
        <param name="rampDownMinutesToWaitOnDisconnect"> The time in minutes to wait before performing the desired session handling action when a user disconnects during the ramp down period. </param>
        <param name="rampDownActionOnLogoff"> Action to be taken after a logoff during the ramp down period. </param>
        <param name="rampDownMinutesToWaitOnLogoff"> The time in minutes to wait before performing the desired session handling action when a user logs off during the ramp down period. </param>
        <param name="offPeakStartTime"> Starting time for off-peak period. </param>
        <param name="offPeakStartVmOnConnect"> The desired configuration of Start VM On Connect for the hostpool during the off-peak phase. </param>
        <param name="offPeakActionOnDisconnect"> Action to be taken after a user disconnect during the off-peak period. </param>
        <param name="offPeakMinutesToWaitOnDisconnect"> The time in minutes to wait before performing the desired session handling action when a user disconnects during the off-peak period. </param>
        <param name="offPeakActionOnLogoff"> Action to be taken after a logoff during the off-peak period. </param>
        <param name="offPeakMinutesToWaitOnLogoff"> The time in minutes to wait before performing the desired session handling action when a user logs off during the off-peak period. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlanPersonalScheduleData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlanPersonalScheduleData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScalingPlanPooledScheduleData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.ScalingPlanPooledScheduleData ScalingPlanPooledScheduleData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationDayOfWeek&gt; daysOfWeek = default, Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime rampUpStartTime = default, Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm? rampUpLoadBalancingAlgorithm = default, int? rampUpMinimumHostsPct = default, int? rampUpCapacityThresholdPct = default, Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime peakStartTime = default, Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm? peakLoadBalancingAlgorithm = default, Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime rampDownStartTime = default, Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm? rampDownLoadBalancingAlgorithm = default, int? rampDownMinimumHostsPct = default, int? rampDownCapacityThresholdPct = default, bool? rampDownForceLogoffUsers = default, Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationStopHostsWhen? rampDownStopHostsWhen = default, int? rampDownWaitTimeMinutes = default, string rampDownNotificationMessage = default, Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime offPeakStartTime = default, Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm? offPeakLoadBalancingAlgorithm = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.ScalingPlanPooledScheduleData ScalingPlanPooledScheduleData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationDayOfWeek&gt; daysOfWeek, class Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime rampUpStartTime, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm&gt; rampUpLoadBalancingAlgorithm, valuetype System.Nullable`1&lt;int32&gt; rampUpMinimumHostsPct, valuetype System.Nullable`1&lt;int32&gt; rampUpCapacityThresholdPct, class Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime peakStartTime, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm&gt; peakLoadBalancingAlgorithm, class Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime rampDownStartTime, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm&gt; rampDownLoadBalancingAlgorithm, valuetype System.Nullable`1&lt;int32&gt; rampDownMinimumHostsPct, valuetype System.Nullable`1&lt;int32&gt; rampDownCapacityThresholdPct, valuetype System.Nullable`1&lt;bool&gt; rampDownForceLogoffUsers, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationStopHostsWhen&gt; rampDownStopHostsWhen, valuetype System.Nullable`1&lt;int32&gt; rampDownWaitTimeMinutes, string rampDownNotificationMessage, class Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime offPeakStartTime, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm&gt; offPeakLoadBalancingAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.ScalingPlanPooledScheduleData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IEnumerable{Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationDayOfWeek},Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime,System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm},System.Nullable{System.Int32},System.Nullable{System.Int32},Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime,System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm},Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime,System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationStopHostsWhen},System.Nullable{System.Int32},System.String,Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime,System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ScalingPlanPooledScheduleData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional daysOfWeek As IEnumerable(Of DesktopVirtualizationDayOfWeek) = Nothing, Optional rampUpStartTime As ScalingActionTime = Nothing, Optional rampUpLoadBalancingAlgorithm As Nullable(Of SessionHostLoadBalancingAlgorithm) = Nothing, Optional rampUpMinimumHostsPct As Nullable(Of Integer) = Nothing, Optional rampUpCapacityThresholdPct As Nullable(Of Integer) = Nothing, Optional peakStartTime As ScalingActionTime = Nothing, Optional peakLoadBalancingAlgorithm As Nullable(Of SessionHostLoadBalancingAlgorithm) = Nothing, Optional rampDownStartTime As ScalingActionTime = Nothing, Optional rampDownLoadBalancingAlgorithm As Nullable(Of SessionHostLoadBalancingAlgorithm) = Nothing, Optional rampDownMinimumHostsPct As Nullable(Of Integer) = Nothing, Optional rampDownCapacityThresholdPct As Nullable(Of Integer) = Nothing, Optional rampDownForceLogoffUsers As Nullable(Of Boolean) = Nothing, Optional rampDownStopHostsWhen As Nullable(Of DesktopVirtualizationStopHostsWhen) = Nothing, Optional rampDownWaitTimeMinutes As Nullable(Of Integer) = Nothing, Optional rampDownNotificationMessage As String = Nothing, Optional offPeakStartTime As ScalingActionTime = Nothing, Optional offPeakLoadBalancingAlgorithm As Nullable(Of SessionHostLoadBalancingAlgorithm) = Nothing) As ScalingPlanPooledScheduleData" />
      <MemberSignature Language="F#" Value="static member ScalingPlanPooledScheduleData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * seq&lt;Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationDayOfWeek&gt; * Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm&gt; * Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationStopHostsWhen&gt; * Nullable&lt;int&gt; * string * Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm&gt; -&gt; Azure.ResourceManager.DesktopVirtualization.ScalingPlanPooledScheduleData" Usage="Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.ScalingPlanPooledScheduleData (id, name, resourceType, systemData, daysOfWeek, rampUpStartTime, rampUpLoadBalancingAlgorithm, rampUpMinimumHostsPct, rampUpCapacityThresholdPct, peakStartTime, peakLoadBalancingAlgorithm, rampDownStartTime, rampDownLoadBalancingAlgorithm, rampDownMinimumHostsPct, rampDownCapacityThresholdPct, rampDownForceLogoffUsers, rampDownStopHostsWhen, rampDownWaitTimeMinutes, rampDownNotificationMessage, offPeakStartTime, offPeakLoadBalancingAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.ScalingPlanPooledScheduleData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="daysOfWeek" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationDayOfWeek&gt;" />
        <Parameter Name="rampUpStartTime" Type="Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime" />
        <Parameter Name="rampUpLoadBalancingAlgorithm" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm&gt;" />
        <Parameter Name="rampUpMinimumHostsPct" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="rampUpCapacityThresholdPct" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="peakStartTime" Type="Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime" />
        <Parameter Name="peakLoadBalancingAlgorithm" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm&gt;" />
        <Parameter Name="rampDownStartTime" Type="Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime" />
        <Parameter Name="rampDownLoadBalancingAlgorithm" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm&gt;" />
        <Parameter Name="rampDownMinimumHostsPct" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="rampDownCapacityThresholdPct" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="rampDownForceLogoffUsers" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="rampDownStopHostsWhen" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationStopHostsWhen&gt;" />
        <Parameter Name="rampDownWaitTimeMinutes" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="rampDownNotificationMessage" Type="System.String" />
        <Parameter Name="offPeakStartTime" Type="Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime" />
        <Parameter Name="offPeakLoadBalancingAlgorithm" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="daysOfWeek"> Set of days of the week on which this schedule is active. </param>
        <param name="rampUpStartTime"> Starting time for ramp up period. </param>
        <param name="rampUpLoadBalancingAlgorithm"> Load balancing algorithm for ramp up period. </param>
        <param name="rampUpMinimumHostsPct"> Minimum host percentage for ramp up period. </param>
        <param name="rampUpCapacityThresholdPct"> Capacity threshold for ramp up period. </param>
        <param name="peakStartTime"> Starting time for peak period. </param>
        <param name="peakLoadBalancingAlgorithm"> Load balancing algorithm for peak period. </param>
        <param name="rampDownStartTime"> Starting time for ramp down period. </param>
        <param name="rampDownLoadBalancingAlgorithm"> Load balancing algorithm for ramp down period. </param>
        <param name="rampDownMinimumHostsPct"> Minimum host percentage for ramp down period. </param>
        <param name="rampDownCapacityThresholdPct"> Capacity threshold for ramp down period. </param>
        <param name="rampDownForceLogoffUsers"> Should users be logged off forcefully from hosts. </param>
        <param name="rampDownStopHostsWhen"> Specifies when to stop hosts during ramp down period. </param>
        <param name="rampDownWaitTimeMinutes"> Number of minutes to wait to stop hosts during ramp down period. </param>
        <param name="rampDownNotificationMessage"> Notification message for users during ramp down period. </param>
        <param name="offPeakStartTime"> Starting time for off-peak period. </param>
        <param name="offPeakLoadBalancingAlgorithm"> Load balancing algorithm for off-peak period. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlanPooledScheduleData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlanPooledScheduleData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScalingPlanPooledSchedulePatch">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.Models.ScalingPlanPooledSchedulePatch ScalingPlanPooledSchedulePatch (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationDayOfWeek&gt; daysOfWeek = default, Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime rampUpStartTime = default, Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm? rampUpLoadBalancingAlgorithm = default, int? rampUpMinimumHostsPct = default, int? rampUpCapacityThresholdPct = default, Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime peakStartTime = default, Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm? peakLoadBalancingAlgorithm = default, Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime rampDownStartTime = default, Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm? rampDownLoadBalancingAlgorithm = default, int? rampDownMinimumHostsPct = default, int? rampDownCapacityThresholdPct = default, bool? rampDownForceLogoffUsers = default, Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationStopHostsWhen? rampDownStopHostsWhen = default, int? rampDownWaitTimeMinutes = default, string rampDownNotificationMessage = default, Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime offPeakStartTime = default, Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm? offPeakLoadBalancingAlgorithm = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.Models.ScalingPlanPooledSchedulePatch ScalingPlanPooledSchedulePatch(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationDayOfWeek&gt; daysOfWeek, class Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime rampUpStartTime, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm&gt; rampUpLoadBalancingAlgorithm, valuetype System.Nullable`1&lt;int32&gt; rampUpMinimumHostsPct, valuetype System.Nullable`1&lt;int32&gt; rampUpCapacityThresholdPct, class Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime peakStartTime, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm&gt; peakLoadBalancingAlgorithm, class Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime rampDownStartTime, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm&gt; rampDownLoadBalancingAlgorithm, valuetype System.Nullable`1&lt;int32&gt; rampDownMinimumHostsPct, valuetype System.Nullable`1&lt;int32&gt; rampDownCapacityThresholdPct, valuetype System.Nullable`1&lt;bool&gt; rampDownForceLogoffUsers, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationStopHostsWhen&gt; rampDownStopHostsWhen, valuetype System.Nullable`1&lt;int32&gt; rampDownWaitTimeMinutes, string rampDownNotificationMessage, class Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime offPeakStartTime, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm&gt; offPeakLoadBalancingAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.ScalingPlanPooledSchedulePatch(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IEnumerable{Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationDayOfWeek},Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime,System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm},System.Nullable{System.Int32},System.Nullable{System.Int32},Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime,System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm},Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime,System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationStopHostsWhen},System.Nullable{System.Int32},System.String,Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime,System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ScalingPlanPooledSchedulePatch (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional daysOfWeek As IEnumerable(Of DesktopVirtualizationDayOfWeek) = Nothing, Optional rampUpStartTime As ScalingActionTime = Nothing, Optional rampUpLoadBalancingAlgorithm As Nullable(Of SessionHostLoadBalancingAlgorithm) = Nothing, Optional rampUpMinimumHostsPct As Nullable(Of Integer) = Nothing, Optional rampUpCapacityThresholdPct As Nullable(Of Integer) = Nothing, Optional peakStartTime As ScalingActionTime = Nothing, Optional peakLoadBalancingAlgorithm As Nullable(Of SessionHostLoadBalancingAlgorithm) = Nothing, Optional rampDownStartTime As ScalingActionTime = Nothing, Optional rampDownLoadBalancingAlgorithm As Nullable(Of SessionHostLoadBalancingAlgorithm) = Nothing, Optional rampDownMinimumHostsPct As Nullable(Of Integer) = Nothing, Optional rampDownCapacityThresholdPct As Nullable(Of Integer) = Nothing, Optional rampDownForceLogoffUsers As Nullable(Of Boolean) = Nothing, Optional rampDownStopHostsWhen As Nullable(Of DesktopVirtualizationStopHostsWhen) = Nothing, Optional rampDownWaitTimeMinutes As Nullable(Of Integer) = Nothing, Optional rampDownNotificationMessage As String = Nothing, Optional offPeakStartTime As ScalingActionTime = Nothing, Optional offPeakLoadBalancingAlgorithm As Nullable(Of SessionHostLoadBalancingAlgorithm) = Nothing) As ScalingPlanPooledSchedulePatch" />
      <MemberSignature Language="F#" Value="static member ScalingPlanPooledSchedulePatch : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * seq&lt;Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationDayOfWeek&gt; * Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm&gt; * Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationStopHostsWhen&gt; * Nullable&lt;int&gt; * string * Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm&gt; -&gt; Azure.ResourceManager.DesktopVirtualization.Models.ScalingPlanPooledSchedulePatch" Usage="Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.ScalingPlanPooledSchedulePatch (id, name, resourceType, systemData, daysOfWeek, rampUpStartTime, rampUpLoadBalancingAlgorithm, rampUpMinimumHostsPct, rampUpCapacityThresholdPct, peakStartTime, peakLoadBalancingAlgorithm, rampDownStartTime, rampDownLoadBalancingAlgorithm, rampDownMinimumHostsPct, rampDownCapacityThresholdPct, rampDownForceLogoffUsers, rampDownStopHostsWhen, rampDownWaitTimeMinutes, rampDownNotificationMessage, offPeakStartTime, offPeakLoadBalancingAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.Models.ScalingPlanPooledSchedulePatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="daysOfWeek" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationDayOfWeek&gt;" />
        <Parameter Name="rampUpStartTime" Type="Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime" />
        <Parameter Name="rampUpLoadBalancingAlgorithm" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm&gt;" />
        <Parameter Name="rampUpMinimumHostsPct" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="rampUpCapacityThresholdPct" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="peakStartTime" Type="Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime" />
        <Parameter Name="peakLoadBalancingAlgorithm" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm&gt;" />
        <Parameter Name="rampDownStartTime" Type="Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime" />
        <Parameter Name="rampDownLoadBalancingAlgorithm" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm&gt;" />
        <Parameter Name="rampDownMinimumHostsPct" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="rampDownCapacityThresholdPct" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="rampDownForceLogoffUsers" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="rampDownStopHostsWhen" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationStopHostsWhen&gt;" />
        <Parameter Name="rampDownWaitTimeMinutes" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="rampDownNotificationMessage" Type="System.String" />
        <Parameter Name="offPeakStartTime" Type="Azure.ResourceManager.DesktopVirtualization.Models.ScalingActionTime" />
        <Parameter Name="offPeakLoadBalancingAlgorithm" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHostLoadBalancingAlgorithm&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="daysOfWeek"> Set of days of the week on which this schedule is active. </param>
        <param name="rampUpStartTime"> Starting time for ramp up period. </param>
        <param name="rampUpLoadBalancingAlgorithm"> Load balancing algorithm for ramp up period. </param>
        <param name="rampUpMinimumHostsPct"> Minimum host percentage for ramp up period. </param>
        <param name="rampUpCapacityThresholdPct"> Capacity threshold for ramp up period. </param>
        <param name="peakStartTime"> Starting time for peak period. </param>
        <param name="peakLoadBalancingAlgorithm"> Load balancing algorithm for peak period. </param>
        <param name="rampDownStartTime"> Starting time for ramp down period. </param>
        <param name="rampDownLoadBalancingAlgorithm"> Load balancing algorithm for ramp down period. </param>
        <param name="rampDownMinimumHostsPct"> Minimum host percentage for ramp down period. </param>
        <param name="rampDownCapacityThresholdPct"> Capacity threshold for ramp down period. </param>
        <param name="rampDownForceLogoffUsers"> Should users be logged off forcefully from hosts. </param>
        <param name="rampDownStopHostsWhen"> Specifies when to stop hosts during ramp down period. </param>
        <param name="rampDownWaitTimeMinutes"> Number of minutes to wait to stop hosts during ramp down period. </param>
        <param name="rampDownNotificationMessage"> Notification message for users during ramp down period. </param>
        <param name="offPeakStartTime"> Starting time for off-peak period. </param>
        <param name="offPeakLoadBalancingAlgorithm"> Load balancing algorithm for off-peak period. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DesktopVirtualization.Models.ScalingPlanPooledSchedulePatch" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DesktopVirtualization.Models.ScalingPlanPooledSchedulePatch" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionHostData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.SessionHostData SessionHostData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string objectId = default, DateTimeOffset? lastHeartBeatOn = default, int? sessions = default, string agentVersion = default, bool? allowNewSession = default, string vmId = default, Azure.Core.ResourceIdentifier resourceId = default, string assignedUser = default, string friendlyName = default, Azure.ResourceManager.DesktopVirtualization.Models.SessionHostStatus? status = default, DateTimeOffset? statusTimestamp = default, string osVersion = default, string sxsStackVersion = default, Azure.ResourceManager.DesktopVirtualization.Models.SessionHostUpdateState? updateState = default, DateTimeOffset? lastUpdatedOn = default, string updateErrorMessage = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckReport&gt; sessionHostHealthCheckResults = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.SessionHostData SessionHostData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string objectId, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastHeartBeatOn, valuetype System.Nullable`1&lt;int32&gt; sessions, string agentVersion, valuetype System.Nullable`1&lt;bool&gt; allowNewSession, string vmId, class Azure.Core.ResourceIdentifier resourceId, string assignedUser, string friendlyName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.SessionHostStatus&gt; status, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; statusTimestamp, string osVersion, string sxsStackVersion, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.SessionHostUpdateState&gt; updateState, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastUpdatedOn, string updateErrorMessage, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckReport&gt; sessionHostHealthCheckResults) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.SessionHostData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.String,Azure.Core.ResourceIdentifier,System.String,System.String,System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.SessionHostStatus},System.Nullable{System.DateTimeOffset},System.String,System.String,System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.SessionHostUpdateState},System.Nullable{System.DateTimeOffset},System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckReport})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SessionHostData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional objectId As String = Nothing, Optional lastHeartBeatOn As Nullable(Of DateTimeOffset) = Nothing, Optional sessions As Nullable(Of Integer) = Nothing, Optional agentVersion As String = Nothing, Optional allowNewSession As Nullable(Of Boolean) = Nothing, Optional vmId As String = Nothing, Optional resourceId As ResourceIdentifier = Nothing, Optional assignedUser As String = Nothing, Optional friendlyName As String = Nothing, Optional status As Nullable(Of SessionHostStatus) = Nothing, Optional statusTimestamp As Nullable(Of DateTimeOffset) = Nothing, Optional osVersion As String = Nothing, Optional sxsStackVersion As String = Nothing, Optional updateState As Nullable(Of SessionHostUpdateState) = Nothing, Optional lastUpdatedOn As Nullable(Of DateTimeOffset) = Nothing, Optional updateErrorMessage As String = Nothing, Optional sessionHostHealthCheckResults As IEnumerable(Of SessionHostHealthCheckReport) = Nothing) As SessionHostData" />
      <MemberSignature Language="F#" Value="static member SessionHostData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Nullable&lt;bool&gt; * string * Azure.Core.ResourceIdentifier * string * string * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHostStatus&gt; * Nullable&lt;DateTimeOffset&gt; * string * string * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHostUpdateState&gt; * Nullable&lt;DateTimeOffset&gt; * string * seq&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckReport&gt; -&gt; Azure.ResourceManager.DesktopVirtualization.SessionHostData" Usage="Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.SessionHostData (id, name, resourceType, systemData, objectId, lastHeartBeatOn, sessions, agentVersion, allowNewSession, vmId, resourceId, assignedUser, friendlyName, status, statusTimestamp, osVersion, sxsStackVersion, updateState, lastUpdatedOn, updateErrorMessage, sessionHostHealthCheckResults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.SessionHostData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="objectId" Type="System.String" />
        <Parameter Name="lastHeartBeatOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="sessions" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="agentVersion" Type="System.String" />
        <Parameter Name="allowNewSession" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="vmId" Type="System.String" />
        <Parameter Name="resourceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="assignedUser" Type="System.String" />
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHostStatus&gt;" />
        <Parameter Name="statusTimestamp" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="osVersion" Type="System.String" />
        <Parameter Name="sxsStackVersion" Type="System.String" />
        <Parameter Name="updateState" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHostUpdateState&gt;" />
        <Parameter Name="lastUpdatedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="updateErrorMessage" Type="System.String" />
        <Parameter Name="sessionHostHealthCheckResults" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckReport&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="objectId"> ObjectId of SessionHost. (internal use). </param>
        <param name="lastHeartBeatOn"> Last heart beat from SessionHost. </param>
        <param name="sessions"> Number of sessions on SessionHost. </param>
        <param name="agentVersion"> Version of agent on SessionHost. </param>
        <param name="allowNewSession"> Allow a new session. </param>
        <param name="vmId"> Virtual Machine Id of SessionHost's underlying virtual machine. </param>
        <param name="resourceId"> Resource Id of SessionHost's underlying virtual machine. </param>
        <param name="assignedUser"> User assigned to SessionHost. </param>
        <param name="friendlyName"> Friendly name of SessionHost. </param>
        <param name="status"> Status for a SessionHost. </param>
        <param name="statusTimestamp"> The timestamp of the status. </param>
        <param name="osVersion"> The version of the OS on the session host. </param>
        <param name="sxsStackVersion"> The version of the side by side stack on the session host. </param>
        <param name="updateState"> Update state of a SessionHost. </param>
        <param name="lastUpdatedOn"> The timestamp of the last update. </param>
        <param name="updateErrorMessage"> The error message. </param>
        <param name="sessionHostHealthCheckResults"> List of SessionHostHealthCheckReports. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DesktopVirtualization.SessionHostData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DesktopVirtualization.SessionHostData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionHostHealthCheckFailureDetails">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckFailureDetails SessionHostHealthCheckFailureDetails (string message = default, int? errorCode = default, DateTimeOffset? lastHealthCheckOn = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckFailureDetails SessionHostHealthCheckFailureDetails(string message, valuetype System.Nullable`1&lt;int32&gt; errorCode, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastHealthCheckOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.SessionHostHealthCheckFailureDetails(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SessionHostHealthCheckFailureDetails (Optional message As String = Nothing, Optional errorCode As Nullable(Of Integer) = Nothing, Optional lastHealthCheckOn As Nullable(Of DateTimeOffset) = Nothing) As SessionHostHealthCheckFailureDetails" />
      <MemberSignature Language="F#" Value="static member SessionHostHealthCheckFailureDetails : string * Nullable&lt;int&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckFailureDetails" Usage="Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.SessionHostHealthCheckFailureDetails (message, errorCode, lastHealthCheckOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckFailureDetails</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="errorCode" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="lastHealthCheckOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="message"> Failure message: hints on what is wrong and how to recover. </param>
        <param name="errorCode"> Error code corresponding for the failure. </param>
        <param name="lastHealthCheckOn"> The timestamp of the last update. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckFailureDetails" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckFailureDetails" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionHostHealthCheckReport">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckReport SessionHostHealthCheckReport (Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckName? healthCheckName = default, Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckResult? healthCheckResult = default, Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckFailureDetails additionalFailureDetails = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckReport SessionHostHealthCheckReport(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckName&gt; healthCheckName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckResult&gt; healthCheckResult, class Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckFailureDetails additionalFailureDetails) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.SessionHostHealthCheckReport(System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckName},System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckResult},Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckFailureDetails)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SessionHostHealthCheckReport (Optional healthCheckName As Nullable(Of SessionHostHealthCheckName) = Nothing, Optional healthCheckResult As Nullable(Of SessionHostHealthCheckResult) = Nothing, Optional additionalFailureDetails As SessionHostHealthCheckFailureDetails = Nothing) As SessionHostHealthCheckReport" />
      <MemberSignature Language="F#" Value="static member SessionHostHealthCheckReport : Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckName&gt; * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckResult&gt; * Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckFailureDetails -&gt; Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckReport" Usage="Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.SessionHostHealthCheckReport (healthCheckName, healthCheckResult, additionalFailureDetails)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckReport</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="healthCheckName" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckName&gt;" />
        <Parameter Name="healthCheckResult" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckResult&gt;" />
        <Parameter Name="additionalFailureDetails" Type="Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckFailureDetails" />
      </Parameters>
      <Docs>
        <param name="healthCheckName"> Represents the name of the health check operation performed. </param>
        <param name="healthCheckResult"> Represents the Health state of the health check we performed. </param>
        <param name="additionalFailureDetails"> Additional detailed information on the failure. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckReport" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DesktopVirtualization.Models.SessionHostHealthCheckReport" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionHostPatch">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.Models.SessionHostPatch SessionHostPatch (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, bool? allowNewSession = default, string assignedUser = default, string friendlyName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.Models.SessionHostPatch SessionHostPatch(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;bool&gt; allowNewSession, string assignedUser, string friendlyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.SessionHostPatch(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{System.Boolean},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SessionHostPatch (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional allowNewSession As Nullable(Of Boolean) = Nothing, Optional assignedUser As String = Nothing, Optional friendlyName As String = Nothing) As SessionHostPatch" />
      <MemberSignature Language="F#" Value="static member SessionHostPatch : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;bool&gt; * string * string -&gt; Azure.ResourceManager.DesktopVirtualization.Models.SessionHostPatch" Usage="Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.SessionHostPatch (id, name, resourceType, systemData, allowNewSession, assignedUser, friendlyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.Models.SessionHostPatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="allowNewSession" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="assignedUser" Type="System.String" />
        <Parameter Name="friendlyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="allowNewSession"> Allow a new session. </param>
        <param name="assignedUser"> User assigned to SessionHost. </param>
        <param name="friendlyName"> Friendly name of SessionHost. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DesktopVirtualization.Models.SessionHostPatch" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DesktopVirtualization.Models.SessionHostPatch" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserSessionData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.UserSessionData UserSessionData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string objectId = default, string userPrincipalName = default, Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationType? applicationType = default, Azure.ResourceManager.DesktopVirtualization.Models.UserSessionState? sessionState = default, string activeDirectoryUserName = default, DateTimeOffset? createOn = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.UserSessionData UserSessionData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string objectId, string userPrincipalName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationType&gt; applicationType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.UserSessionState&gt; sessionState, string activeDirectoryUserName, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; createOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.UserSessionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationType},System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.UserSessionState},System.String,System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UserSessionData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional objectId As String = Nothing, Optional userPrincipalName As String = Nothing, Optional applicationType As Nullable(Of VirtualApplicationType) = Nothing, Optional sessionState As Nullable(Of UserSessionState) = Nothing, Optional activeDirectoryUserName As String = Nothing, Optional createOn As Nullable(Of DateTimeOffset) = Nothing) As UserSessionData" />
      <MemberSignature Language="F#" Value="static member UserSessionData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * string * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationType&gt; * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.UserSessionState&gt; * string * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.DesktopVirtualization.UserSessionData" Usage="Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.UserSessionData (id, name, resourceType, systemData, objectId, userPrincipalName, applicationType, sessionState, activeDirectoryUserName, createOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.UserSessionData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="objectId" Type="System.String" />
        <Parameter Name="userPrincipalName" Type="System.String" />
        <Parameter Name="applicationType" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationType&gt;" />
        <Parameter Name="sessionState" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.UserSessionState&gt;" />
        <Parameter Name="activeDirectoryUserName" Type="System.String" />
        <Parameter Name="createOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="objectId"> ObjectId of user session. (internal use). </param>
        <param name="userPrincipalName"> The user principal name. </param>
        <param name="applicationType"> Application type of application. </param>
        <param name="sessionState"> State of user session. </param>
        <param name="activeDirectoryUserName"> The active directory user name. </param>
        <param name="createOn"> The timestamp of the user session create. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DesktopVirtualization.UserSessionData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DesktopVirtualization.UserSessionData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualApplicationData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.VirtualApplicationData VirtualApplicationData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string objectId = default, string description = default, string friendlyName = default, string filePath = default, string msixPackageFamilyName = default, string msixPackageApplicationId = default, Azure.ResourceManager.DesktopVirtualization.Models.RemoteApplicationType? applicationType = default, Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationCommandLineSetting commandLineSetting = default, string commandLineArguments = default, bool? showInPortal = default, string iconPath = default, int? iconIndex = default, string iconHash = default, BinaryData iconContent = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.VirtualApplicationData VirtualApplicationData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string objectId, string description, string friendlyName, string filePath, string msixPackageFamilyName, string msixPackageApplicationId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.RemoteApplicationType&gt; applicationType, valuetype Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationCommandLineSetting commandLineSetting, string commandLineArguments, valuetype System.Nullable`1&lt;bool&gt; showInPortal, string iconPath, valuetype System.Nullable`1&lt;int32&gt; iconIndex, string iconHash, class System.BinaryData iconContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.VirtualApplicationData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.RemoteApplicationType},Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationCommandLineSetting,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.String,System.BinaryData)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VirtualApplicationData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional objectId As String = Nothing, Optional description As String = Nothing, Optional friendlyName As String = Nothing, Optional filePath As String = Nothing, Optional msixPackageFamilyName As String = Nothing, Optional msixPackageApplicationId As String = Nothing, Optional applicationType As Nullable(Of RemoteApplicationType) = Nothing, Optional commandLineSetting As VirtualApplicationCommandLineSetting = Nothing, Optional commandLineArguments As String = Nothing, Optional showInPortal As Nullable(Of Boolean) = Nothing, Optional iconPath As String = Nothing, Optional iconIndex As Nullable(Of Integer) = Nothing, Optional iconHash As String = Nothing, Optional iconContent As BinaryData = Nothing) As VirtualApplicationData" />
      <MemberSignature Language="F#" Value="static member VirtualApplicationData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * string * string * string * string * string * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.RemoteApplicationType&gt; * Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationCommandLineSetting * string * Nullable&lt;bool&gt; * string * Nullable&lt;int&gt; * string * BinaryData -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualApplicationData" Usage="Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.VirtualApplicationData (id, name, resourceType, systemData, objectId, description, friendlyName, filePath, msixPackageFamilyName, msixPackageApplicationId, applicationType, commandLineSetting, commandLineArguments, showInPortal, iconPath, iconIndex, iconHash, iconContent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.VirtualApplicationData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="objectId" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="msixPackageFamilyName" Type="System.String" />
        <Parameter Name="msixPackageApplicationId" Type="System.String" />
        <Parameter Name="applicationType" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.RemoteApplicationType&gt;" />
        <Parameter Name="commandLineSetting" Type="Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationCommandLineSetting" />
        <Parameter Name="commandLineArguments" Type="System.String" />
        <Parameter Name="showInPortal" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="iconPath" Type="System.String" />
        <Parameter Name="iconIndex" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="iconHash" Type="System.String" />
        <Parameter Name="iconContent" Type="System.BinaryData" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="objectId"> ObjectId of Application. (internal use). </param>
        <param name="description"> Description of Application. </param>
        <param name="friendlyName"> Friendly name of Application. </param>
        <param name="filePath"> Specifies a path for the executable file for the application. </param>
        <param name="msixPackageFamilyName"> Specifies the package family name for MSIX applications. </param>
        <param name="msixPackageApplicationId"> Specifies the package application Id for MSIX applications. </param>
        <param name="applicationType"> Resource Type of Application. </param>
        <param name="commandLineSetting"> Specifies whether this published application can be launched with command line arguments provided by the client, command line arguments specified at publish time, or no command line arguments at all. </param>
        <param name="commandLineArguments"> Command Line Arguments for Application. </param>
        <param name="showInPortal"> Specifies whether to show the RemoteApp program in the RD Web Access server. </param>
        <param name="iconPath"> Path to icon. </param>
        <param name="iconIndex"> Index of the icon. </param>
        <param name="iconHash"> Hash of the icon. </param>
        <param name="iconContent"> the icon a 64 bit string as a byte array. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualApplicationGroupData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupData VirtualApplicationGroupData (Azure.Core.ResourceIdentifier id, string name, Azure.Core.ResourceType resourceType, Azure.ResourceManager.Models.SystemData systemData, System.Collections.Generic.IDictionary&lt;string,string&gt; tags, Azure.Core.AzureLocation location, string objectId, string description, string friendlyName, Azure.Core.ResourceIdentifier hostPoolId, Azure.Core.ResourceIdentifier workspaceId, Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationGroupType applicationGroupType, bool? isCloudPCResource, Azure.Core.ResourceIdentifier managedBy, string kind, Azure.ETag? etag, Azure.ResourceManager.Models.ManagedServiceIdentity identity, Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku sku, Azure.ResourceManager.Models.ArmPlan plan);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupData VirtualApplicationGroupData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, string objectId, string description, string friendlyName, class Azure.Core.ResourceIdentifier hostPoolId, class Azure.Core.ResourceIdentifier workspaceId, valuetype Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationGroupType applicationGroupType, valuetype System.Nullable`1&lt;bool&gt; isCloudPCResource, class Azure.Core.ResourceIdentifier managedBy, string kind, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, class Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku sku, class Azure.ResourceManager.Models.ArmPlan plan) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.VirtualApplicationGroupData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.String,System.String,System.String,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationGroupType,System.Nullable{System.Boolean},Azure.Core.ResourceIdentifier,System.String,System.Nullable{Azure.ETag},Azure.ResourceManager.Models.ManagedServiceIdentity,Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku,Azure.ResourceManager.Models.ArmPlan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VirtualApplicationGroupData (id As ResourceIdentifier, name As String, resourceType As ResourceType, systemData As SystemData, tags As IDictionary(Of String, String), location As AzureLocation, objectId As String, description As String, friendlyName As String, hostPoolId As ResourceIdentifier, workspaceId As ResourceIdentifier, applicationGroupType As VirtualApplicationGroupType, isCloudPCResource As Nullable(Of Boolean), managedBy As ResourceIdentifier, kind As String, etag As Nullable(Of ETag), identity As ManagedServiceIdentity, sku As DesktopVirtualizationSku, plan As ArmPlan) As VirtualApplicationGroupData" />
      <MemberSignature Language="F#" Value="static member VirtualApplicationGroupData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * string * string * string * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationGroupType * Nullable&lt;bool&gt; * Azure.Core.ResourceIdentifier * string * Nullable&lt;Azure.ETag&gt; * Azure.ResourceManager.Models.ManagedServiceIdentity * Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku * Azure.ResourceManager.Models.ArmPlan -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupData" Usage="Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.VirtualApplicationGroupData (id, name, resourceType, systemData, tags, location, objectId, description, friendlyName, hostPoolId, workspaceId, applicationGroupType, isCloudPCResource, managedBy, kind, etag, identity, sku, plan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="objectId" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="hostPoolId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="workspaceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="applicationGroupType" Type="Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationGroupType" />
        <Parameter Name="isCloudPCResource" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="managedBy" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" />
        <Parameter Name="sku" Type="Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku" />
        <Parameter Name="plan" Type="Azure.ResourceManager.Models.ArmPlan" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="objectId"> ObjectId of ApplicationGroup. (internal use). </param>
        <param name="description"> Description of ApplicationGroup. </param>
        <param name="friendlyName"> Friendly name of ApplicationGroup. </param>
        <param name="hostPoolId"> HostPool arm path of ApplicationGroup. </param>
        <param name="workspaceId"> Workspace arm path of ApplicationGroup. </param>
        <param name="applicationGroupType"> Resource Type of ApplicationGroup. </param>
        <param name="isCloudPCResource"> Is cloud pc resource. </param>
        <param name="managedBy"> The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource. </param>
        <param name="kind"> Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value. </param>
        <param name="etag"> The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
        <param name="identity"> Gets or sets the identity. Current supported identity types: SystemAssigned. </param>
        <param name="sku"> The resource model definition representing SKU. </param>
        <param name="plan"> Gets or sets the plan. </param>
        <summary> Initializes a new instance of VirtualApplicationGroupData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualApplicationGroupData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupData VirtualApplicationGroupData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, string objectId = default, string description = default, string friendlyName = default, Azure.Core.ResourceIdentifier hostPoolId = default, Azure.Core.ResourceIdentifier workspaceId = default, Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationGroupType applicationGroupType = default, bool? isCloudPCResource = default, bool? showInFeed = default, Azure.Core.ResourceIdentifier managedBy = default, string kind = default, Azure.ETag? etag = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku sku = default, Azure.ResourceManager.Models.ArmPlan plan = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupData VirtualApplicationGroupData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, string objectId, string description, string friendlyName, class Azure.Core.ResourceIdentifier hostPoolId, class Azure.Core.ResourceIdentifier workspaceId, valuetype Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationGroupType applicationGroupType, valuetype System.Nullable`1&lt;bool&gt; isCloudPCResource, valuetype System.Nullable`1&lt;bool&gt; showInFeed, class Azure.Core.ResourceIdentifier managedBy, string kind, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, class Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku sku, class Azure.ResourceManager.Models.ArmPlan plan) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.VirtualApplicationGroupData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.String,System.String,System.String,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationGroupType,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.Core.ResourceIdentifier,System.String,System.Nullable{Azure.ETag},Azure.ResourceManager.Models.ManagedServiceIdentity,Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku,Azure.ResourceManager.Models.ArmPlan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VirtualApplicationGroupData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional objectId As String = Nothing, Optional description As String = Nothing, Optional friendlyName As String = Nothing, Optional hostPoolId As ResourceIdentifier = Nothing, Optional workspaceId As ResourceIdentifier = Nothing, Optional applicationGroupType As VirtualApplicationGroupType = Nothing, Optional isCloudPCResource As Nullable(Of Boolean) = Nothing, Optional showInFeed As Nullable(Of Boolean) = Nothing, Optional managedBy As ResourceIdentifier = Nothing, Optional kind As String = Nothing, Optional etag As Nullable(Of ETag) = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional sku As DesktopVirtualizationSku = Nothing, Optional plan As ArmPlan = Nothing) As VirtualApplicationGroupData" />
      <MemberSignature Language="F#" Value="static member VirtualApplicationGroupData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * string * string * string * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationGroupType * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Azure.Core.ResourceIdentifier * string * Nullable&lt;Azure.ETag&gt; * Azure.ResourceManager.Models.ManagedServiceIdentity * Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku * Azure.ResourceManager.Models.ArmPlan -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupData" Usage="Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.VirtualApplicationGroupData (id, name, resourceType, systemData, tags, location, objectId, description, friendlyName, hostPoolId, workspaceId, applicationGroupType, isCloudPCResource, showInFeed, managedBy, kind, etag, identity, sku, plan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="objectId" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="hostPoolId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="workspaceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="applicationGroupType" Type="Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationGroupType" />
        <Parameter Name="isCloudPCResource" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="showInFeed" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="managedBy" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" />
        <Parameter Name="sku" Type="Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku" />
        <Parameter Name="plan" Type="Azure.ResourceManager.Models.ArmPlan" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="objectId"> ObjectId of ApplicationGroup. (internal use). </param>
        <param name="description"> Description of ApplicationGroup. </param>
        <param name="friendlyName"> Friendly name of ApplicationGroup. </param>
        <param name="hostPoolId"> HostPool arm path of ApplicationGroup. </param>
        <param name="workspaceId"> Workspace arm path of ApplicationGroup. </param>
        <param name="applicationGroupType"> Resource Type of ApplicationGroup. </param>
        <param name="isCloudPCResource"> Is cloud pc resource. </param>
        <param name="showInFeed"> Boolean representing whether the applicationGroup is show in the feed. </param>
        <param name="managedBy"> The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource. </param>
        <param name="kind"> Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value. </param>
        <param name="etag"> The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
        <param name="identity"> Gets or sets the identity. Current supported identity types: SystemAssigned. </param>
        <param name="sku"> The resource model definition representing SKU. </param>
        <param name="plan"> Gets or sets the plan. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualApplicationGroupPatch">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationGroupPatch VirtualApplicationGroupPatch (Azure.Core.ResourceIdentifier id, string name, Azure.Core.ResourceType resourceType, Azure.ResourceManager.Models.SystemData systemData, System.Collections.Generic.IDictionary&lt;string,string&gt; tags, string description, string friendlyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationGroupPatch VirtualApplicationGroupPatch(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, string description, string friendlyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.VirtualApplicationGroupPatch(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VirtualApplicationGroupPatch (id As ResourceIdentifier, name As String, resourceType As ResourceType, systemData As SystemData, tags As IDictionary(Of String, String), description As String, friendlyName As String) As VirtualApplicationGroupPatch" />
      <MemberSignature Language="F#" Value="static member VirtualApplicationGroupPatch : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string -&gt; Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationGroupPatch" Usage="Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.VirtualApplicationGroupPatch (id, name, resourceType, systemData, tags, description, friendlyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationGroupPatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="friendlyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> tags to be updated. </param>
        <param name="description"> Description of ApplicationGroup. </param>
        <param name="friendlyName"> Friendly name of ApplicationGroup. </param>
        <summary> Initializes a new instance of VirtualApplicationGroupPatch. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationGroupPatch" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualApplicationGroupPatch">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationGroupPatch VirtualApplicationGroupPatch (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, string description = default, string friendlyName = default, bool? showInFeed = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationGroupPatch VirtualApplicationGroupPatch(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, string description, string friendlyName, valuetype System.Nullable`1&lt;bool&gt; showInFeed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.VirtualApplicationGroupPatch(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VirtualApplicationGroupPatch (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional description As String = Nothing, Optional friendlyName As String = Nothing, Optional showInFeed As Nullable(Of Boolean) = Nothing) As VirtualApplicationGroupPatch" />
      <MemberSignature Language="F#" Value="static member VirtualApplicationGroupPatch : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationGroupPatch" Usage="Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.VirtualApplicationGroupPatch (id, name, resourceType, systemData, tags, description, friendlyName, showInFeed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationGroupPatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="showInFeed" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> tags to be updated. </param>
        <param name="description"> Description of ApplicationGroup. </param>
        <param name="friendlyName"> Friendly name of ApplicationGroup. </param>
        <param name="showInFeed"> Boolean representing whether the applicationGroup is show in the feed. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationGroupPatch" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DesktopVirtualization.Models.VirtualApplicationGroupPatch" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualDesktopData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.VirtualDesktopData VirtualDesktopData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string objectId = default, string description = default, string friendlyName = default, string iconHash = default, BinaryData iconContent = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.VirtualDesktopData VirtualDesktopData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string objectId, string description, string friendlyName, string iconHash, class System.BinaryData iconContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.VirtualDesktopData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.String,System.String,System.BinaryData)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VirtualDesktopData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional objectId As String = Nothing, Optional description As String = Nothing, Optional friendlyName As String = Nothing, Optional iconHash As String = Nothing, Optional iconContent As BinaryData = Nothing) As VirtualDesktopData" />
      <MemberSignature Language="F#" Value="static member VirtualDesktopData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * string * string * string * BinaryData -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualDesktopData" Usage="Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.VirtualDesktopData (id, name, resourceType, systemData, objectId, description, friendlyName, iconHash, iconContent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.VirtualDesktopData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="objectId" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="iconHash" Type="System.String" />
        <Parameter Name="iconContent" Type="System.BinaryData" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="objectId"> ObjectId of Desktop. (internal use). </param>
        <param name="description"> Description of Desktop. </param>
        <param name="friendlyName"> Friendly name of Desktop. </param>
        <param name="iconHash"> Hash of the icon. </param>
        <param name="iconContent"> The icon a 64 bit string as a byte array. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualDesktopData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualDesktopData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualWorkspaceData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceData VirtualWorkspaceData (Azure.Core.ResourceIdentifier id, string name, Azure.Core.ResourceType resourceType, Azure.ResourceManager.Models.SystemData systemData, System.Collections.Generic.IDictionary&lt;string,string&gt; tags, Azure.Core.AzureLocation location, string objectId, string description, string friendlyName, System.Collections.Generic.IEnumerable&lt;string&gt; applicationGroupReferences, bool? isCloudPCResource, Azure.Core.ResourceIdentifier managedBy, string kind, Azure.ETag? etag, Azure.ResourceManager.Models.ManagedServiceIdentity identity, Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku sku, Azure.ResourceManager.Models.ArmPlan plan);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceData VirtualWorkspaceData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, string objectId, string description, string friendlyName, class System.Collections.Generic.IEnumerable`1&lt;string&gt; applicationGroupReferences, valuetype System.Nullable`1&lt;bool&gt; isCloudPCResource, class Azure.Core.ResourceIdentifier managedBy, string kind, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, class Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku sku, class Azure.ResourceManager.Models.ArmPlan plan) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.VirtualWorkspaceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},Azure.Core.ResourceIdentifier,System.String,System.Nullable{Azure.ETag},Azure.ResourceManager.Models.ManagedServiceIdentity,Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku,Azure.ResourceManager.Models.ArmPlan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VirtualWorkspaceData (id As ResourceIdentifier, name As String, resourceType As ResourceType, systemData As SystemData, tags As IDictionary(Of String, String), location As AzureLocation, objectId As String, description As String, friendlyName As String, applicationGroupReferences As IEnumerable(Of String), isCloudPCResource As Nullable(Of Boolean), managedBy As ResourceIdentifier, kind As String, etag As Nullable(Of ETag), identity As ManagedServiceIdentity, sku As DesktopVirtualizationSku, plan As ArmPlan) As VirtualWorkspaceData" />
      <MemberSignature Language="F#" Value="static member VirtualWorkspaceData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * string * string * string * seq&lt;string&gt; * Nullable&lt;bool&gt; * Azure.Core.ResourceIdentifier * string * Nullable&lt;Azure.ETag&gt; * Azure.ResourceManager.Models.ManagedServiceIdentity * Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku * Azure.ResourceManager.Models.ArmPlan -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceData" Usage="Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.VirtualWorkspaceData (id, name, resourceType, systemData, tags, location, objectId, description, friendlyName, applicationGroupReferences, isCloudPCResource, managedBy, kind, etag, identity, sku, plan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="objectId" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="applicationGroupReferences" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="isCloudPCResource" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="managedBy" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" />
        <Parameter Name="sku" Type="Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku" />
        <Parameter Name="plan" Type="Azure.ResourceManager.Models.ArmPlan" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="objectId"> ObjectId of Workspace. (internal use). </param>
        <param name="description"> Description of Workspace. </param>
        <param name="friendlyName"> Friendly name of Workspace. </param>
        <param name="applicationGroupReferences"> List of applicationGroup resource Ids. </param>
        <param name="isCloudPCResource"> Is cloud pc resource. </param>
        <param name="managedBy"> The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource. </param>
        <param name="kind"> Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value. </param>
        <param name="etag"> The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
        <param name="identity"> Gets or sets the identity. Current supported identity types: SystemAssigned. </param>
        <param name="sku"> The resource model definition representing SKU. </param>
        <param name="plan"> Gets or sets the plan. </param>
        <summary> Initializes a new instance of VirtualWorkspaceData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualWorkspaceData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceData VirtualWorkspaceData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, string objectId = default, string description = default, string friendlyName = default, System.Collections.Generic.IEnumerable&lt;string&gt; applicationGroupReferences = default, bool? isCloudPCResource = default, Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPublicNetworkAccess? publicNetworkAccess = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateEndpointConnection&gt; privateEndpointConnections = default, Azure.Core.ResourceIdentifier managedBy = default, string kind = default, Azure.ETag? etag = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku sku = default, Azure.ResourceManager.Models.ArmPlan plan = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceData VirtualWorkspaceData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, string objectId, string description, string friendlyName, class System.Collections.Generic.IEnumerable`1&lt;string&gt; applicationGroupReferences, valuetype System.Nullable`1&lt;bool&gt; isCloudPCResource, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPublicNetworkAccess&gt; publicNetworkAccess, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateEndpointConnection&gt; privateEndpointConnections, class Azure.Core.ResourceIdentifier managedBy, string kind, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; etag, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, class Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku sku, class Azure.ResourceManager.Models.ArmPlan plan) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.VirtualWorkspaceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPublicNetworkAccess},System.Collections.Generic.IEnumerable{Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateEndpointConnection},Azure.Core.ResourceIdentifier,System.String,System.Nullable{Azure.ETag},Azure.ResourceManager.Models.ManagedServiceIdentity,Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku,Azure.ResourceManager.Models.ArmPlan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VirtualWorkspaceData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional objectId As String = Nothing, Optional description As String = Nothing, Optional friendlyName As String = Nothing, Optional applicationGroupReferences As IEnumerable(Of String) = Nothing, Optional isCloudPCResource As Nullable(Of Boolean) = Nothing, Optional publicNetworkAccess As Nullable(Of DesktopVirtualizationPublicNetworkAccess) = Nothing, Optional privateEndpointConnections As IEnumerable(Of DesktopVirtualizationPrivateEndpointConnection) = Nothing, Optional managedBy As ResourceIdentifier = Nothing, Optional kind As String = Nothing, Optional etag As Nullable(Of ETag) = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional sku As DesktopVirtualizationSku = Nothing, Optional plan As ArmPlan = Nothing) As VirtualWorkspaceData" />
      <MemberSignature Language="F#" Value="static member VirtualWorkspaceData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * string * string * string * seq&lt;string&gt; * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPublicNetworkAccess&gt; * seq&lt;Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateEndpointConnection&gt; * Azure.Core.ResourceIdentifier * string * Nullable&lt;Azure.ETag&gt; * Azure.ResourceManager.Models.ManagedServiceIdentity * Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku * Azure.ResourceManager.Models.ArmPlan -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceData" Usage="Azure.ResourceManager.DesktopVirtualization.Models.ArmDesktopVirtualizationModelFactory.VirtualWorkspaceData (id, name, resourceType, systemData, tags, location, objectId, description, friendlyName, applicationGroupReferences, isCloudPCResource, publicNetworkAccess, privateEndpointConnections, managedBy, kind, etag, identity, sku, plan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="objectId" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="applicationGroupReferences" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="isCloudPCResource" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="publicNetworkAccess" Type="System.Nullable&lt;Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPublicNetworkAccess&gt;" />
        <Parameter Name="privateEndpointConnections" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationPrivateEndpointConnection&gt;" />
        <Parameter Name="managedBy" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="etag" Type="System.Nullable&lt;Azure.ETag&gt;" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" />
        <Parameter Name="sku" Type="Azure.ResourceManager.DesktopVirtualization.Models.DesktopVirtualizationSku" />
        <Parameter Name="plan" Type="Azure.ResourceManager.Models.ArmPlan" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="objectId"> ObjectId of Workspace. (internal use). </param>
        <param name="description"> Description of Workspace. </param>
        <param name="friendlyName"> Friendly name of Workspace. </param>
        <param name="applicationGroupReferences"> List of applicationGroup resource Ids. </param>
        <param name="isCloudPCResource"> Is cloud pc resource. </param>
        <param name="publicNetworkAccess"> Enabled allows this resource to be accessed from both public and private networks, Disabled allows this resource to only be accessed via private endpoints. </param>
        <param name="privateEndpointConnections"> List of private endpoint connection associated with the specified resource. </param>
        <param name="managedBy"> The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource. </param>
        <param name="kind"> Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value. </param>
        <param name="etag"> The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. </param>
        <param name="identity"> Gets or sets the identity. Current supported identity types: SystemAssigned. </param>
        <param name="sku"> The resource model definition representing SKU. </param>
        <param name="plan"> Gets or sets the plan. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
