<Type Name="ShareDirectoryClient" FullName="Azure.Storage.Files.Shares.ShareDirectoryClient">
  <TypeSignature Language="C#" Value="public class ShareDirectoryClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ShareDirectoryClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Storage.Files.Shares.ShareDirectoryClient" />
  <TypeSignature Language="VB.NET" Value="Public Class ShareDirectoryClient" />
  <TypeSignature Language="F#" Value="type ShareDirectoryClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
    <AssemblyVersion>12.0.0.0</AssemblyVersion>
    <AssemblyVersion>12.0.1.0</AssemblyVersion>
    <AssemblyVersion>12.1.0.0</AssemblyVersion>
    <AssemblyVersion>12.2.0.0</AssemblyVersion>
    <AssemblyVersion>12.2.1.0</AssemblyVersion>
    <AssemblyVersion>12.2.2.0</AssemblyVersion>
    <AssemblyVersion>12.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A DirectoryClient represents a URI to the Azure Storage File service allowing you to manipulate a directory.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ShareDirectoryClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" />
            class for mocking.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ShareDirectoryClient (Uri directoryUri, Azure.Storage.Files.Shares.ShareClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri directoryUri, class Azure.Storage.Files.Shares.ShareClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.#ctor(System.Uri,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (directoryUri As Uri, Optional options As ShareClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.Shares.ShareDirectoryClient : Uri * Azure.Storage.Files.Shares.ShareClientOptions -&gt; Azure.Storage.Files.Shares.ShareDirectoryClient" Usage="new Azure.Storage.Files.Shares.ShareDirectoryClient (directoryUri, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="directoryUri" Type="System.Uri" />
        <Parameter Name="options" Type="Azure.Storage.Files.Shares.ShareClientOptions" />
      </Parameters>
      <Docs>
        <param name="directoryUri">
            A <see cref="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Uri" /> referencing the directory that includes the
            name of the account, the name of the share, and the path of the
            directory.
            </param>
        <param name="options">
            Optional <see cref="T:Azure.Storage.Files.Shares.ShareClientOptions" /> that define the transport
            pipeline policies for authentication, retries, etc., that are
            applied to every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" />
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ShareDirectoryClient (string connectionString, string shareName, string directoryPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string shareName, string directoryPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, shareName As String, directoryPath As String)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.Shares.ShareDirectoryClient : string * string * string -&gt; Azure.Storage.Files.Shares.ShareDirectoryClient" Usage="new Azure.Storage.Files.Shares.ShareDirectoryClient (connectionString, shareName, directoryPath)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="shareName" Type="System.String" />
        <Parameter Name="directoryPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, <see href="https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string" />.
             </param>
        <param name="shareName">
             The name of the share in the storage account to reference.
             </param>
        <param name="directoryPath">
             The path of the directory in the storage account to reference.
             </param>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" /> class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ShareDirectoryClient (Uri directoryUri, Azure.Storage.StorageSharedKeyCredential credential, Azure.Storage.Files.Shares.ShareClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri directoryUri, class Azure.Storage.StorageSharedKeyCredential credential, class Azure.Storage.Files.Shares.ShareClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (directoryUri As Uri, credential As StorageSharedKeyCredential, Optional options As ShareClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.Shares.ShareDirectoryClient : Uri * Azure.Storage.StorageSharedKeyCredential * Azure.Storage.Files.Shares.ShareClientOptions -&gt; Azure.Storage.Files.Shares.ShareDirectoryClient" Usage="new Azure.Storage.Files.Shares.ShareDirectoryClient (directoryUri, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="directoryUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Storage.StorageSharedKeyCredential" />
        <Parameter Name="options" Type="Azure.Storage.Files.Shares.ShareClientOptions" />
      </Parameters>
      <Docs>
        <param name="directoryUri">
            A <see cref="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Uri" /> referencing the directory that includes the
            name of the account, the name of the share, and the path of the
            directory.
            </param>
        <param name="credential">
            The shared key credential used to sign requests.
            </param>
        <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" />
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ShareDirectoryClient (string connectionString, string shareName, string directoryPath, Azure.Storage.Files.Shares.ShareClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string shareName, string directoryPath, class Azure.Storage.Files.Shares.ShareClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.#ctor(System.String,System.String,System.String,Azure.Storage.Files.Shares.ShareClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, shareName As String, directoryPath As String, options As ShareClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.Shares.ShareDirectoryClient : string * string * string * Azure.Storage.Files.Shares.ShareClientOptions -&gt; Azure.Storage.Files.Shares.ShareDirectoryClient" Usage="new Azure.Storage.Files.Shares.ShareDirectoryClient (connectionString, shareName, directoryPath, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="shareName" Type="System.String" />
        <Parameter Name="directoryPath" Type="System.String" />
        <Parameter Name="options" Type="Azure.Storage.Files.Shares.ShareClientOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, <see href="https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string" />.
             </param>
        <param name="shareName">
             The name of the share in the storage account to reference.
             </param>
        <param name="directoryPath">
             The path of the directory in the storage account to reference.
             </param>
        <param name="options">
             Optional <see cref="T:Azure.Storage.Files.Shares.ShareClientOptions" /> that define the transport
             pipeline policies for authentication, retries, etc., that are
             applied to every request.
             </param>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" /> class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccountName">
      <MemberSignature Language="C#" Value="public virtual string AccountName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccountName" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Files.Shares.ShareDirectoryClient.AccountName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AccountName As String" />
      <MemberSignature Language="F#" Value="member this.AccountName : string" Usage="Azure.Storage.Files.Shares.ShareDirectoryClient.AccountName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Storage account name corresponding to the directory client.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt; Create (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, Azure.Storage.Files.Shares.Models.FileSmbProperties smbProperties = default, string filePermission = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt; Create(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Azure.Storage.Files.Shares.Models.FileSmbProperties smbProperties, string filePermission, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.Create(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (Optional metadata As IDictionary(Of String, String) = Nothing, Optional smbProperties As FileSmbProperties = Nothing, Optional filePermission As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ShareDirectoryInfo)" />
      <MemberSignature Language="F#" Value="abstract member Create : System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Files.Shares.Models.FileSmbProperties * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;&#xA;override this.Create : System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Files.Shares.Models.FileSmbProperties * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;" Usage="shareDirectoryClient.Create (metadata, smbProperties, filePermission, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="smbProperties" Type="Azure.Storage.Files.Shares.Models.FileSmbProperties" />
        <Parameter Name="filePermission" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">
             Optional custom metadata to set for this directory.
             </param>
        <param name="smbProperties">
             Optional SMB properties to set for the directory.
             </param>
        <param name="filePermission">
             Optional file permission to set on the directory.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.Create(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" /> operation creates a new directory
             at the specified <see cref="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Uri" />.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/create-directory" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the newly
             created directory.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;&gt; CreateAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, Azure.Storage.Files.Shares.Models.FileSmbProperties smbProperties = default, string filePermission = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;&gt; CreateAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Azure.Storage.Files.Shares.Models.FileSmbProperties smbProperties, string filePermission, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAsync (Optional metadata As IDictionary(Of String, String) = Nothing, Optional smbProperties As FileSmbProperties = Nothing, Optional filePermission As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ShareDirectoryInfo))" />
      <MemberSignature Language="F#" Value="abstract member CreateAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Files.Shares.Models.FileSmbProperties * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;&gt;&#xA;override this.CreateAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Files.Shares.Models.FileSmbProperties * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;&gt;" Usage="shareDirectoryClient.CreateAsync (metadata, smbProperties, filePermission, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="smbProperties" Type="Azure.Storage.Files.Shares.Models.FileSmbProperties" />
        <Parameter Name="filePermission" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">
             Optional custom metadata to set for this directory.
             </param>
        <param name="smbProperties">
             Optional SMB properties to set for the directory.
             </param>
        <param name="filePermission">
             Optional file permission to set on the directory.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" /> operation creates a new directory
             at the specified <see cref="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Uri" />.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/create-directory" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the newly
             created directory.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFile">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.Shares.ShareFileClient&gt; CreateFile (string fileName, long maxSize, Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders httpHeaders, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, Azure.Storage.Files.Shares.Models.FileSmbProperties smbProperties, string filePermission, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.Shares.ShareFileClient&gt; CreateFile(string fileName, int64 maxSize, class Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders httpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Azure.Storage.Files.Shares.Models.FileSmbProperties smbProperties, string filePermission, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateFile(System.String,System.Int64,Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateFile (fileName As String, maxSize As Long, httpHeaders As ShareFileHttpHeaders, metadata As IDictionary(Of String, String), smbProperties As FileSmbProperties, filePermission As String, cancellationToken As CancellationToken) As Response(Of ShareFileClient)" />
      <MemberSignature Language="F#" Value="abstract member CreateFile : string * int64 * Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Files.Shares.Models.FileSmbProperties * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Shares.ShareFileClient&gt;&#xA;override this.CreateFile : string * int64 * Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Files.Shares.Models.FileSmbProperties * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Shares.ShareFileClient&gt;" Usage="shareDirectoryClient.CreateFile (fileName, maxSize, httpHeaders, metadata, smbProperties, filePermission, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.Shares.ShareFileClient&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="maxSize" Type="System.Int64" />
        <Parameter Name="httpHeaders" Type="Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="smbProperties" Type="Azure.Storage.Files.Shares.Models.FileSmbProperties" />
        <Parameter Name="filePermission" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="fileName">The name of the file.</param>
        <param name="maxSize">
             Required. Specifies the maximum size for the file.
             </param>
        <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the file.
             </param>
        <param name="metadata">
             Optional custom metadata to set for the file.
             </param>
        <param name="smbProperties">
             Optional SMB properties to set for the file.
             </param>
        <param name="filePermission">
             Optional file permission to set for the file.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             Creates a new file or replaces an existing file.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/create-file" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> referencing the file.
             </returns>
        <remarks>
             This method only initializes the file.
             To add content, use <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.UploadAsync(System.IO.Stream,System.IProgress{System.Int64},System.Threading.CancellationToken)" />.
             </remarks>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFile">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.Shares.ShareFileClient&gt; CreateFile (string fileName, long maxSize, Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders httpHeaders = default, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, Azure.Storage.Files.Shares.Models.FileSmbProperties smbProperties = default, string filePermission = default, Azure.Storage.Files.Shares.Models.ShareFileRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.Shares.ShareFileClient&gt; CreateFile(string fileName, int64 maxSize, class Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders httpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Azure.Storage.Files.Shares.Models.FileSmbProperties smbProperties, string filePermission, class Azure.Storage.Files.Shares.Models.ShareFileRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateFile(System.String,System.Int64,Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateFile (fileName As String, maxSize As Long, Optional httpHeaders As ShareFileHttpHeaders = Nothing, Optional metadata As IDictionary(Of String, String) = Nothing, Optional smbProperties As FileSmbProperties = Nothing, Optional filePermission As String = Nothing, Optional conditions As ShareFileRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ShareFileClient)" />
      <MemberSignature Language="F#" Value="abstract member CreateFile : string * int64 * Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Files.Shares.Models.FileSmbProperties * string * Azure.Storage.Files.Shares.Models.ShareFileRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Shares.ShareFileClient&gt;&#xA;override this.CreateFile : string * int64 * Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Files.Shares.Models.FileSmbProperties * string * Azure.Storage.Files.Shares.Models.ShareFileRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Shares.ShareFileClient&gt;" Usage="shareDirectoryClient.CreateFile (fileName, maxSize, httpHeaders, metadata, smbProperties, filePermission, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.Shares.ShareFileClient&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="maxSize" Type="System.Int64" />
        <Parameter Name="httpHeaders" Type="Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="smbProperties" Type="Azure.Storage.Files.Shares.Models.FileSmbProperties" />
        <Parameter Name="filePermission" Type="System.String" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="fileName">The name of the file.</param>
        <param name="maxSize">
             Required. Specifies the maximum size for the file.
             </param>
        <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the file.
             </param>
        <param name="metadata">
             Optional custom metadata to set for the file.
             </param>
        <param name="smbProperties">
             Optional SMB properties to set for the file.
             </param>
        <param name="filePermission">
             Optional file permission to set for the file.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             Creates a new file or replaces an existing file.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/create-file" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> referencing the file.
             </returns>
        <remarks>
             This method only initializes the file.
             To add content, use <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRange(Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />.
             </remarks>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.ShareFileClient&gt;&gt; CreateFileAsync (string fileName, long maxSize, Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders httpHeaders, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, Azure.Storage.Files.Shares.Models.FileSmbProperties smbProperties, string filePermission, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.Shares.ShareFileClient&gt;&gt; CreateFileAsync(string fileName, int64 maxSize, class Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders httpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Azure.Storage.Files.Shares.Models.FileSmbProperties smbProperties, string filePermission, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateFileAsync(System.String,System.Int64,Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateFileAsync (fileName As String, maxSize As Long, httpHeaders As ShareFileHttpHeaders, metadata As IDictionary(Of String, String), smbProperties As FileSmbProperties, filePermission As String, cancellationToken As CancellationToken) As Task(Of Response(Of ShareFileClient))" />
      <MemberSignature Language="F#" Value="abstract member CreateFileAsync : string * int64 * Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Files.Shares.Models.FileSmbProperties * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.ShareFileClient&gt;&gt;&#xA;override this.CreateFileAsync : string * int64 * Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Files.Shares.Models.FileSmbProperties * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.ShareFileClient&gt;&gt;" Usage="shareDirectoryClient.CreateFileAsync (fileName, maxSize, httpHeaders, metadata, smbProperties, filePermission, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.ShareFileClient&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="maxSize" Type="System.Int64" />
        <Parameter Name="httpHeaders" Type="Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="smbProperties" Type="Azure.Storage.Files.Shares.Models.FileSmbProperties" />
        <Parameter Name="filePermission" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="fileName">The name of the file.</param>
        <param name="maxSize">
             Required. Specifies the maximum size for the file.
             </param>
        <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the file.
             </param>
        <param name="metadata">
             Optional custom metadata to set for the file.
             </param>
        <param name="smbProperties">
             Optional SMB properties to set for the file.
             </param>
        <param name="filePermission">
             Optional file permission to set for the file.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             Creates a new file or replaces an existing file.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/create-file" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> referencing the file.
             </returns>
        <remarks>
             This method only initializes the file.
             To add content, use <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeAsync(Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />.
             </remarks>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.ShareFileClient&gt;&gt; CreateFileAsync (string fileName, long maxSize, Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders httpHeaders = default, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, Azure.Storage.Files.Shares.Models.FileSmbProperties smbProperties = default, string filePermission = default, Azure.Storage.Files.Shares.Models.ShareFileRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.Shares.ShareFileClient&gt;&gt; CreateFileAsync(string fileName, int64 maxSize, class Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders httpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Azure.Storage.Files.Shares.Models.FileSmbProperties smbProperties, string filePermission, class Azure.Storage.Files.Shares.Models.ShareFileRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateFileAsync(System.String,System.Int64,Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateFileAsync (fileName As String, maxSize As Long, Optional httpHeaders As ShareFileHttpHeaders = Nothing, Optional metadata As IDictionary(Of String, String) = Nothing, Optional smbProperties As FileSmbProperties = Nothing, Optional filePermission As String = Nothing, Optional conditions As ShareFileRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ShareFileClient))" />
      <MemberSignature Language="F#" Value="abstract member CreateFileAsync : string * int64 * Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Files.Shares.Models.FileSmbProperties * string * Azure.Storage.Files.Shares.Models.ShareFileRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.ShareFileClient&gt;&gt;&#xA;override this.CreateFileAsync : string * int64 * Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Files.Shares.Models.FileSmbProperties * string * Azure.Storage.Files.Shares.Models.ShareFileRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.ShareFileClient&gt;&gt;" Usage="shareDirectoryClient.CreateFileAsync (fileName, maxSize, httpHeaders, metadata, smbProperties, filePermission, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.ShareFileClient&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="maxSize" Type="System.Int64" />
        <Parameter Name="httpHeaders" Type="Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="smbProperties" Type="Azure.Storage.Files.Shares.Models.FileSmbProperties" />
        <Parameter Name="filePermission" Type="System.String" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="fileName">The name of the file.</param>
        <param name="maxSize">
             Required. Specifies the maximum size for the file.
             </param>
        <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the file.
             </param>
        <param name="metadata">
             Optional custom metadata to set for the file.
             </param>
        <param name="smbProperties">
             Optional SMB properties to set for the file.
             </param>
        <param name="filePermission">
             Optional file permission to set for the file.
             </param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             Creates a new file or replaces an existing file.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/create-file" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> referencing the file.
             </returns>
        <remarks>
             This method only initializes the file.
             To add content, use <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeAsync(Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />.
             </remarks>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIfNotExists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt; CreateIfNotExists (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, Azure.Storage.Files.Shares.Models.FileSmbProperties smbProperties = default, string filePermission = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt; CreateIfNotExists(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Azure.Storage.Files.Shares.Models.FileSmbProperties smbProperties, string filePermission, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateIfNotExists(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIfNotExists (Optional metadata As IDictionary(Of String, String) = Nothing, Optional smbProperties As FileSmbProperties = Nothing, Optional filePermission As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ShareDirectoryInfo)" />
      <MemberSignature Language="F#" Value="abstract member CreateIfNotExists : System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Files.Shares.Models.FileSmbProperties * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;&#xA;override this.CreateIfNotExists : System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Files.Shares.Models.FileSmbProperties * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;" Usage="shareDirectoryClient.CreateIfNotExists (metadata, smbProperties, filePermission, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="smbProperties" Type="Azure.Storage.Files.Shares.Models.FileSmbProperties" />
        <Parameter Name="filePermission" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">
             Optional custom metadata to set for this directory.
             </param>
        <param name="smbProperties">
             Optional SMB properties to set for the directory.
             </param>
        <param name="filePermission">
             Optional file permission to set on the directory.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateIfNotExists(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" /> operation creates a new directory,
             if it does not already exists.  If the directory already exists, it is not
             modified.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/create-directory" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the newly
             created directory.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIfNotExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;&gt; CreateIfNotExistsAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, Azure.Storage.Files.Shares.Models.FileSmbProperties smbProperties = default, string filePermission = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;&gt; CreateIfNotExistsAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Azure.Storage.Files.Shares.Models.FileSmbProperties smbProperties, string filePermission, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateIfNotExistsAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIfNotExistsAsync (Optional metadata As IDictionary(Of String, String) = Nothing, Optional smbProperties As FileSmbProperties = Nothing, Optional filePermission As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ShareDirectoryInfo))" />
      <MemberSignature Language="F#" Value="abstract member CreateIfNotExistsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Files.Shares.Models.FileSmbProperties * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;&gt;&#xA;override this.CreateIfNotExistsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Files.Shares.Models.FileSmbProperties * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;&gt;" Usage="shareDirectoryClient.CreateIfNotExistsAsync (metadata, smbProperties, filePermission, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="smbProperties" Type="Azure.Storage.Files.Shares.Models.FileSmbProperties" />
        <Parameter Name="filePermission" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">
             Optional custom metadata to set for this directory.
             </param>
        <param name="smbProperties">
             Optional SMB properties to set for the directory.
             </param>
        <param name="filePermission">
             Optional file permission to set on the directory.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateIfNotExistsAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" /> operation creates a new directory,
             if it does not already exists.  If the directory already exists, it is not
             modified.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/create-directory" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the newly
             created directory.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.Shares.ShareDirectoryClient&gt; CreateSubdirectory (string subdirectoryName, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, Azure.Storage.Files.Shares.Models.FileSmbProperties smbProperties = default, string filePermission = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.Shares.ShareDirectoryClient&gt; CreateSubdirectory(string subdirectoryName, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Azure.Storage.Files.Shares.Models.FileSmbProperties smbProperties, string filePermission, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateSubdirectory(System.String,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSubdirectory (subdirectoryName As String, Optional metadata As IDictionary(Of String, String) = Nothing, Optional smbProperties As FileSmbProperties = Nothing, Optional filePermission As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ShareDirectoryClient)" />
      <MemberSignature Language="F#" Value="abstract member CreateSubdirectory : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Files.Shares.Models.FileSmbProperties * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Shares.ShareDirectoryClient&gt;&#xA;override this.CreateSubdirectory : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Files.Shares.Models.FileSmbProperties * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Shares.ShareDirectoryClient&gt;" Usage="shareDirectoryClient.CreateSubdirectory (subdirectoryName, metadata, smbProperties, filePermission, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.Shares.ShareDirectoryClient&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subdirectoryName" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="smbProperties" Type="Azure.Storage.Files.Shares.Models.FileSmbProperties" />
        <Parameter Name="filePermission" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subdirectoryName">The name of the subdirectory.</param>
        <param name="metadata">
             Optional custom metadata to set for this directory.
             </param>
        <param name="smbProperties">
             Optional SMB properties to set for the subdirectory.
             </param>
        <param name="filePermission">
             Optional file permission to set for the subdirectory.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateSubdirectory(System.String,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" /> operation creates a new
             subdirectory under this directory.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/create-directory" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> referencing the
             newly created directory.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSubdirectoryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.ShareDirectoryClient&gt;&gt; CreateSubdirectoryAsync (string subdirectoryName, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = default, Azure.Storage.Files.Shares.Models.FileSmbProperties smbProperties = default, string filePermission = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.Shares.ShareDirectoryClient&gt;&gt; CreateSubdirectoryAsync(string subdirectoryName, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, class Azure.Storage.Files.Shares.Models.FileSmbProperties smbProperties, string filePermission, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateSubdirectoryAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSubdirectoryAsync (subdirectoryName As String, Optional metadata As IDictionary(Of String, String) = Nothing, Optional smbProperties As FileSmbProperties = Nothing, Optional filePermission As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ShareDirectoryClient))" />
      <MemberSignature Language="F#" Value="abstract member CreateSubdirectoryAsync : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Files.Shares.Models.FileSmbProperties * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.ShareDirectoryClient&gt;&gt;&#xA;override this.CreateSubdirectoryAsync : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Storage.Files.Shares.Models.FileSmbProperties * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.ShareDirectoryClient&gt;&gt;" Usage="shareDirectoryClient.CreateSubdirectoryAsync (subdirectoryName, metadata, smbProperties, filePermission, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.ShareDirectoryClient&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subdirectoryName" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="smbProperties" Type="Azure.Storage.Files.Shares.Models.FileSmbProperties" />
        <Parameter Name="filePermission" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subdirectoryName">The name of the subdirectory.</param>
        <param name="metadata">
             Optional custom metadata to set for the subdirectory.
             </param>
        <param name="smbProperties">
             Optional SMB properties to set for the subdirectory.
             </param>
        <param name="filePermission">
             Optional file permission to set for the subdirectory.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateSubdirectoryAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" /> operation creates a new
             subdirectory under this directory.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/create-directory" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> referencing the
             newly created directory.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Delete (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Delete(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.Delete(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Delete : System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.Delete : System.Threading.CancellationToken -&gt; Azure.Response" Usage="shareDirectoryClient.Delete cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.Delete(System.Threading.CancellationToken)" /> operation removes the specified empty directory.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-directory" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> if successful.
             </returns>
        <remarks>
             Note that the directory must be empty before it can be deleted.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="shareDirectoryClient.DeleteAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteAsync(System.Threading.CancellationToken)" /> operation removes the specified empty directory.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-directory" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> if successful.
             </returns>
        <remarks>
             Note that the directory must be empty before it can be deleted.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteFile">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteFile (string fileName, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteFile(string fileName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteFile(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteFile (fileName As String, cancellationToken As CancellationToken) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteFile : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteFile : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="shareDirectoryClient.DeleteFile (fileName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="fileName">The name of the file.</param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteFile(System.String,System.Threading.CancellationToken)" />
             operation immediately removes the file from the storage account.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/delete-file2" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> on successfully deleting.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteFile">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteFile (string fileName, Azure.Storage.Files.Shares.Models.ShareFileRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteFile(string fileName, class Azure.Storage.Files.Shares.Models.ShareFileRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteFile(System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteFile (fileName As String, Optional conditions As ShareFileRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteFile : string * Azure.Storage.Files.Shares.Models.ShareFileRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteFile : string * Azure.Storage.Files.Shares.Models.ShareFileRequestConditions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="shareDirectoryClient.DeleteFile (fileName, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="fileName">The name of the file.</param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteFile(System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
             operation immediately removes the file from the storage account.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/delete-file2" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> on successfully deleting.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteFileAsync (string fileName, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteFileAsync(string fileName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteFileAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteFileAsync (fileName As String, cancellationToken As CancellationToken) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteFileAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteFileAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="shareDirectoryClient.DeleteFileAsync (fileName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="fileName">The name of the file.</param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteFileAsync(System.String,System.Threading.CancellationToken)" />
             operation immediately removesthe file from the storage account.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/delete-file2" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> on successfully deleting.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will bse thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteFileAsync (string fileName, Azure.Storage.Files.Shares.Models.ShareFileRequestConditions conditions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteFileAsync(string fileName, class Azure.Storage.Files.Shares.Models.ShareFileRequestConditions conditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteFileAsync(System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteFileAsync (fileName As String, Optional conditions As ShareFileRequestConditions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteFileAsync : string * Azure.Storage.Files.Shares.Models.ShareFileRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteFileAsync : string * Azure.Storage.Files.Shares.Models.ShareFileRequestConditions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="shareDirectoryClient.DeleteFileAsync (fileName, conditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="conditions" Type="Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="fileName">The name of the file.</param>
        <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteFile(System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
             operation immediately removes the file from the storage account.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/delete-file2" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> on successfully deleting.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteIfExists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; DeleteIfExists (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; DeleteIfExists(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteIfExists(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIfExists (Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member DeleteIfExists : System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.DeleteIfExists : System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="shareDirectoryClient.DeleteIfExists cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteIfExists(System.Threading.CancellationToken)" /> operation removes the specified
             empty directory, if it exists.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-directory" />.
             </summary>
        <returns>
             True if the directory existed.
             </returns>
        <remarks>
             Note that the directory must be empty before it can be deleted.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteIfExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; DeleteIfExistsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; DeleteIfExistsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteIfExistsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIfExistsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member DeleteIfExistsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.DeleteIfExistsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="shareDirectoryClient.DeleteIfExistsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteIfExistsAsync(System.Threading.CancellationToken)" /> operation removes the specified
             empty directory, if it exists.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-directory" />.
             </summary>
        <returns>
             True if the directory existed.
             </returns>
        <remarks>
             Note that the directory must be empty before it can be deleted.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteSubdirectory">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteSubdirectory (string subdirectoryName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteSubdirectory(string subdirectoryName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteSubdirectory(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteSubdirectory (subdirectoryName As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteSubdirectory : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteSubdirectory : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="shareDirectoryClient.DeleteSubdirectory (subdirectoryName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subdirectoryName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subdirectoryName">The name of the subdirectory.</param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteSubdirectory(System.String,System.Threading.CancellationToken)" /> operation removes the
             specified empty subdirectory.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-directory" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> if successful.
             </returns>
        <remarks>
             Note that the directory must be empty before it can be deleted.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteSubdirectoryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteSubdirectoryAsync (string subdirectoryName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteSubdirectoryAsync(string subdirectoryName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteSubdirectoryAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteSubdirectoryAsync (subdirectoryName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteSubdirectoryAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteSubdirectoryAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="shareDirectoryClient.DeleteSubdirectoryAsync (subdirectoryName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subdirectoryName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subdirectoryName">The name of the subdirectory.</param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteSubdirectoryAsync(System.String,System.Threading.CancellationToken)" /> operation removes the
             specified empty subdirectory.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-directory" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> if successful.
             </returns>
        <remarks>
             Note that the directory must be empty before it can be deleted.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; Exists (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; Exists(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.Exists(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Exists (Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Exists : System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.Exists : System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="shareDirectoryClient.Exists cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.Exists(System.Threading.CancellationToken)" /> operation can be called on a
            <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" /> to see if the associated directory
            exists in the share on the storage account in the storage service.
            </summary>
        <returns>
            Returns true if the directory exists.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; ExistsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; ExistsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ExistsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExistsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member ExistsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.ExistsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="shareDirectoryClient.ExistsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.Exists(System.Threading.CancellationToken)" /> operation can be called on a
            <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" /> to see if the associated directory
            exists in the share on the storage account in the storage service.
            </summary>
        <returns>
            Returns true if the directory exists.
            </returns>
        <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceCloseAllHandles">
      <MemberSignature Language="C#" Value="public virtual Azure.Storage.Files.Shares.Models.CloseHandlesResult ForceCloseAllHandles (bool? recursive = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Storage.Files.Shares.Models.CloseHandlesResult ForceCloseAllHandles(valuetype System.Nullable`1&lt;bool&gt; recursive, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseAllHandles(System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ForceCloseAllHandles (Optional recursive As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As CloseHandlesResult" />
      <MemberSignature Language="F#" Value="abstract member ForceCloseAllHandles : Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Storage.Files.Shares.Models.CloseHandlesResult&#xA;override this.ForceCloseAllHandles : Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Storage.Files.Shares.Models.CloseHandlesResult" Usage="shareDirectoryClient.ForceCloseAllHandles (recursive, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Files.Shares.Models.CloseHandlesResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recursive">
             Optional. A boolean value that specifies if the operation should also apply to the files and subdirectories of the directory specified.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseAllHandles(System.Nullable{System.Boolean},System.Threading.CancellationToken)" /> operation closes all handles opened on a directory
             or a file at the service. It optionally supports recursively closing handles on subresources
             when the resource is a directory.
            
             This API is intended to be used alongside <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetHandles(System.Nullable{System.Boolean},System.Threading.CancellationToken)" /> to force close handles that
             block operations, such as renaming a directory. These handles may have leaked or been lost track of by
             SMB clients. The API has client-side impact on the handle being closed, including user visible
             errors due to failed attempts to read or write files. This API is not intended for use as a replacement
             or alternative for SMB close.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/force-close-handles" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Storage.Files.Shares.Models.CloseHandlesResult" /> describing the status of the
             <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseAllHandles(System.Nullable{System.Boolean},System.Threading.CancellationToken)" /> operation.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceCloseAllHandlesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Storage.Files.Shares.Models.CloseHandlesResult&gt; ForceCloseAllHandlesAsync (bool? recursive = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Storage.Files.Shares.Models.CloseHandlesResult&gt; ForceCloseAllHandlesAsync(valuetype System.Nullable`1&lt;bool&gt; recursive, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseAllHandlesAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ForceCloseAllHandlesAsync (Optional recursive As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of CloseHandlesResult)" />
      <MemberSignature Language="F#" Value="abstract member ForceCloseAllHandlesAsync : Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Storage.Files.Shares.Models.CloseHandlesResult&gt;&#xA;override this.ForceCloseAllHandlesAsync : Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Storage.Files.Shares.Models.CloseHandlesResult&gt;" Usage="shareDirectoryClient.ForceCloseAllHandlesAsync (recursive, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Storage.Files.Shares.Models.CloseHandlesResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recursive">
             Optional. A boolean value that specifies if the operation should also apply to the files and subdirectories of the directory specified.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseAllHandlesAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)" /> operation closes all handles opened on a directory
             or a file at the service. It optionally supports recursively closing handles on subresources
             when the resource is a directory.
            
             This API is intended to be used alongside <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetHandlesAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)" /> to force close handles that
             block operations, such as renaming a directory. These handles may have leaked or been lost track of by
             SMB clients. The API has client-side impact on the handle being closed, including user visible
             errors due to failed attempts to read or write files. This API is not intended for use as a replacement
             or alternative for SMB close.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/force-close-handles" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Storage.Files.Shares.Models.CloseHandlesResult" /> describing the status of the
             <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseAllHandlesAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)" /> operation.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceCloseHandle">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.Shares.Models.CloseHandlesResult&gt; ForceCloseHandle (string handleId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.Shares.Models.CloseHandlesResult&gt; ForceCloseHandle(string handleId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseHandle(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ForceCloseHandle (handleId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CloseHandlesResult)" />
      <MemberSignature Language="F#" Value="abstract member ForceCloseHandle : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Shares.Models.CloseHandlesResult&gt;&#xA;override this.ForceCloseHandle : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Shares.Models.CloseHandlesResult&gt;" Usage="shareDirectoryClient.ForceCloseHandle (handleId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.Shares.Models.CloseHandlesResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handleId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="handleId">
             Specifies the handle ID to be closed.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseHandle(System.String,System.Threading.CancellationToken)" /> operation closes a handle opened on a directory
             or a file at the service. It supports closing a single handle specified by <paramref name="handleId" />.
            
             This API is intended to be used alongside <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetHandles(System.Nullable{System.Boolean},System.Threading.CancellationToken)" /> to force close handles that
             block operations, such as renaming a directory. These handles may have leaked or been lost track of by
             SMB clients. The API has client-side impact on the handle being closed, including user visible
             errors due to failed attempts to read or write files. This API is not intended for use as a replacement
             or alternative for SMB close.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/force-close-handles" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the status of the
             <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseHandle(System.String,System.Threading.CancellationToken)" /> operation.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceCloseHandleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.CloseHandlesResult&gt;&gt; ForceCloseHandleAsync (string handleId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.Shares.Models.CloseHandlesResult&gt;&gt; ForceCloseHandleAsync(string handleId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseHandleAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ForceCloseHandleAsync (handleId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CloseHandlesResult))" />
      <MemberSignature Language="F#" Value="abstract member ForceCloseHandleAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.CloseHandlesResult&gt;&gt;&#xA;override this.ForceCloseHandleAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.CloseHandlesResult&gt;&gt;" Usage="shareDirectoryClient.ForceCloseHandleAsync (handleId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.CloseHandlesResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handleId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="handleId">
             Specifies the handle ID to be closed.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseHandle(System.String,System.Threading.CancellationToken)" /> operation closes a handle opened on a directory
             or a file at the service. It supports closing a single handle specified by <paramref name="handleId" />.
            
             This API is intended to be used alongside <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetHandlesAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)" /> to force close handles that
             block operations, such as renaming a directory. These handles may have leaked or been lost track of by
             SMB clients. The API has client-side impact on the handle being closed, including user visible
             errors due to failed attempts to read or write files. This API is not intended for use as a replacement
             or alternative for SMB close.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/force-close-handles" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the status of the
             <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseHandleAsync(System.String,System.Threading.CancellationToken)" /> operation.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileClient">
      <MemberSignature Language="C#" Value="public virtual Azure.Storage.Files.Shares.ShareFileClient GetFileClient (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Storage.Files.Shares.ShareFileClient GetFileClient(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetFileClient(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileClient (fileName As String) As ShareFileClient" />
      <MemberSignature Language="F#" Value="abstract member GetFileClient : string -&gt; Azure.Storage.Files.Shares.ShareFileClient&#xA;override this.GetFileClient : string -&gt; Azure.Storage.Files.Shares.ShareFileClient" Usage="shareDirectoryClient.GetFileClient fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Files.Shares.ShareFileClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">The name of the file.</param>
        <summary>
            Creates a new <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" /> object by appending
            <paramref name="fileName" /> to the end of <see cref="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Uri" />.  The
            new <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" /> uses the same request policy
            pipeline as the <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" />.
            </summary>
        <returns>A new <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilesAndDirectories">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Storage.Files.Shares.Models.ShareFileItem&gt; GetFilesAndDirectories (string prefix = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Storage.Files.Shares.Models.ShareFileItem&gt; GetFilesAndDirectories(string prefix, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetFilesAndDirectories(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFilesAndDirectories (Optional prefix As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ShareFileItem)" />
      <MemberSignature Language="F#" Value="abstract member GetFilesAndDirectories : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Storage.Files.Shares.Models.ShareFileItem&gt;&#xA;override this.GetFilesAndDirectories : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Storage.Files.Shares.Models.ShareFileItem&gt;" Usage="shareDirectoryClient.GetFilesAndDirectories (prefix, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Storage.Files.Shares.Models.ShareFileItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="prefix">
             Optional string that filters the results to return only
             files and directories whose name begins with the specified prefix.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetFilesAndDirectories(System.String,System.Threading.CancellationToken)" /> operation returns an async
             sequence of files and subdirectories in this directory.
             Enumerating the files and directories may make multiple requests
             to the service while fetching all the values.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/list-directories-and-files" />.
             </summary>
        <returns>
             An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Azure.Response`1" />
             describing  the items in the directory.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilesAndDirectoriesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Storage.Files.Shares.Models.ShareFileItem&gt; GetFilesAndDirectoriesAsync (string prefix = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Storage.Files.Shares.Models.ShareFileItem&gt; GetFilesAndDirectoriesAsync(string prefix, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetFilesAndDirectoriesAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFilesAndDirectoriesAsync (Optional prefix As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ShareFileItem)" />
      <MemberSignature Language="F#" Value="abstract member GetFilesAndDirectoriesAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Storage.Files.Shares.Models.ShareFileItem&gt;&#xA;override this.GetFilesAndDirectoriesAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Storage.Files.Shares.Models.ShareFileItem&gt;" Usage="shareDirectoryClient.GetFilesAndDirectoriesAsync (prefix, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Storage.Files.Shares.Models.ShareFileItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="prefix">
             Optional string that filters the results to return only
             files and directories whose name begins with the specified prefix.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetFilesAndDirectoriesAsync(System.String,System.Threading.CancellationToken)" /> operation returns an
             async collection of files and subdirectories in this directory.
             Enumerating the files and directories may make multiple requests
             to the service while fetching all the values.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/list-directories-and-files" />.
             </summary>
        <returns>
             A <see cref="T:Azure.AsyncPageable`1" /> describing the
             items in the directory.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHandles">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Storage.Files.Shares.Models.ShareFileHandle&gt; GetHandles (bool? recursive = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Storage.Files.Shares.Models.ShareFileHandle&gt; GetHandles(valuetype System.Nullable`1&lt;bool&gt; recursive, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetHandles(System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHandles (Optional recursive As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ShareFileHandle)" />
      <MemberSignature Language="F#" Value="abstract member GetHandles : Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Storage.Files.Shares.Models.ShareFileHandle&gt;&#xA;override this.GetHandles : Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Storage.Files.Shares.Models.ShareFileHandle&gt;" Usage="shareDirectoryClient.GetHandles (recursive, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Storage.Files.Shares.Models.ShareFileHandle&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recursive">
             Optional. A boolean value that specifies if the operation should also apply to the files and subdirectories of the directory specified.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetHandles(System.Nullable{System.Boolean},System.Threading.CancellationToken)" /> operation returns an async sequence
             of the open handles on a directory or a file.  Enumerating the
             handles may make multiple requests to the service while fetching
             all the values.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/list-handles" />.
             </summary>
        <returns>
             An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Azure.Response`1" />
             describing the handles in the directory.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHandlesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Storage.Files.Shares.Models.ShareFileHandle&gt; GetHandlesAsync (bool? recursive = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Storage.Files.Shares.Models.ShareFileHandle&gt; GetHandlesAsync(valuetype System.Nullable`1&lt;bool&gt; recursive, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetHandlesAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHandlesAsync (Optional recursive As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ShareFileHandle)" />
      <MemberSignature Language="F#" Value="abstract member GetHandlesAsync : Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Storage.Files.Shares.Models.ShareFileHandle&gt;&#xA;override this.GetHandlesAsync : Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Storage.Files.Shares.Models.ShareFileHandle&gt;" Usage="shareDirectoryClient.GetHandlesAsync (recursive, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Storage.Files.Shares.Models.ShareFileHandle&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recursive">
             Optional. A boolean value that specifies if the operation should also apply to the files and subdirectories of the directory specified.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetHandlesAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)" /> operation returns an async
             sequence of the open handles on a directory or a file.
             Enumerating the handles may make multiple requests to the service
             while fetching all the values.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/list-handles" />.
             </summary>
        <returns>
             A <see cref="T:Azure.AsyncPageable`1" /> describing the
             handles on the directory.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryProperties&gt; GetProperties (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.Shares.Models.ShareDirectoryProperties&gt; GetProperties(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetProperties(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperties (Optional cancellationToken As CancellationToken = Nothing) As Response(Of ShareDirectoryProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryProperties&gt;&#xA;override this.GetProperties : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryProperties&gt;" Usage="shareDirectoryClient.GetProperties cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetProperties(System.Threading.CancellationToken)" /> operation returns all
             user-defined metadata and system properties for the specified
             directory. The data returned does not include the directory's
             list of subdirectories or files.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-directory-properties" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             directory and its properties.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryProperties&gt;&gt; GetPropertiesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.Shares.Models.ShareDirectoryProperties&gt;&gt; GetPropertiesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetPropertiesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ShareDirectoryProperties))" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryProperties&gt;&gt;&#xA;override this.GetPropertiesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryProperties&gt;&gt;" Usage="shareDirectoryClient.GetPropertiesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryProperties&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetPropertiesAsync(System.Threading.CancellationToken)" /> operation returns all
             user-defined metadata and system properties for the specified
             directory. The data returned does not include the directory's
             list of subdirectories or files.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-directory-properties" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             directory and its properties.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubdirectoryClient">
      <MemberSignature Language="C#" Value="public virtual Azure.Storage.Files.Shares.ShareDirectoryClient GetSubdirectoryClient (string subdirectoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Storage.Files.Shares.ShareDirectoryClient GetSubdirectoryClient(string subdirectoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetSubdirectoryClient(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubdirectoryClient (subdirectoryName As String) As ShareDirectoryClient" />
      <MemberSignature Language="F#" Value="abstract member GetSubdirectoryClient : string -&gt; Azure.Storage.Files.Shares.ShareDirectoryClient&#xA;override this.GetSubdirectoryClient : string -&gt; Azure.Storage.Files.Shares.ShareDirectoryClient" Usage="shareDirectoryClient.GetSubdirectoryClient subdirectoryName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Files.Shares.ShareDirectoryClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subdirectoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subdirectoryName">The name of the subdirectory.</param>
        <summary>
            Creates a new <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" /> object by appending
            <paramref name="subdirectoryName" /> to the end of <see cref="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Uri" />.
            The new <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" /> uses the same request policy
            pipeline as the <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" />.
            </summary>
        <returns>A new <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Azure.Storage.Files.Shares.ShareDirectoryClient.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the directory.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public virtual string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Path" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Path As String" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="Azure.Storage.Files.Shares.ShareDirectoryClient.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the path of the directory.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHttpHeaders">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt; SetHttpHeaders (Azure.Storage.Files.Shares.Models.FileSmbProperties smbProperties = default, string filePermission = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt; SetHttpHeaders(class Azure.Storage.Files.Shares.Models.FileSmbProperties smbProperties, string filePermission, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.SetHttpHeaders(Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetHttpHeaders (Optional smbProperties As FileSmbProperties = Nothing, Optional filePermission As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ShareDirectoryInfo)" />
      <MemberSignature Language="F#" Value="abstract member SetHttpHeaders : Azure.Storage.Files.Shares.Models.FileSmbProperties * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;&#xA;override this.SetHttpHeaders : Azure.Storage.Files.Shares.Models.FileSmbProperties * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;" Usage="shareDirectoryClient.SetHttpHeaders (smbProperties, filePermission, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="smbProperties" Type="Azure.Storage.Files.Shares.Models.FileSmbProperties" />
        <Parameter Name="filePermission" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="smbProperties">
             Optional SMB properties to set for the directory.
             </param>
        <param name="filePermission">
             Optional file permission to set for the directory.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.SetHttpHeaders(Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" /> operation sets system
             properties on the directory.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/set-directory-properties" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHttpHeadersAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;&gt; SetHttpHeadersAsync (Azure.Storage.Files.Shares.Models.FileSmbProperties smbProperties = default, string filePermission = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;&gt; SetHttpHeadersAsync(class Azure.Storage.Files.Shares.Models.FileSmbProperties smbProperties, string filePermission, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.SetHttpHeadersAsync(Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetHttpHeadersAsync (Optional smbProperties As FileSmbProperties = Nothing, Optional filePermission As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ShareDirectoryInfo))" />
      <MemberSignature Language="F#" Value="abstract member SetHttpHeadersAsync : Azure.Storage.Files.Shares.Models.FileSmbProperties * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;&gt;&#xA;override this.SetHttpHeadersAsync : Azure.Storage.Files.Shares.Models.FileSmbProperties * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;&gt;" Usage="shareDirectoryClient.SetHttpHeadersAsync (smbProperties, filePermission, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="smbProperties" Type="Azure.Storage.Files.Shares.Models.FileSmbProperties" />
        <Parameter Name="filePermission" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="smbProperties">
             Optional SMB properties to set for the directory.
             </param>
        <param name="filePermission">
             Optional file permission to set for the directory.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.SetHttpHeadersAsync(Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" /> operation sets system
             properties on the directory.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/set-directory-properties" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetadata">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt; SetMetadata (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt; SetMetadata(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetMetadata (metadata As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of ShareDirectoryInfo)" />
      <MemberSignature Language="F#" Value="abstract member SetMetadata : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;&#xA;override this.SetMetadata : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;" Usage="shareDirectoryClient.SetMetadata (metadata, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">
             Custom metadata to set for this directory.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" /> operation sets one or more
             user-defined name-value pairs for the specified directory.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-directory-metadata" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> if successful.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetadataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;&gt; SetMetadataAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;&gt; SetMetadataAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetMetadataAsync (metadata As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ShareDirectoryInfo))" />
      <MemberSignature Language="F#" Value="abstract member SetMetadataAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;&gt;&#xA;override this.SetMetadataAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;&gt;" Usage="shareDirectoryClient.SetMetadataAsync (metadata, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Shares.Models.ShareDirectoryInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">
             Custom metadata to set for this directory.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" /> operation sets one or more
             user-defined name-value pairs for the specified directory.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-directory-metadata" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> if successful.
             </returns>
        <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShareName">
      <MemberSignature Language="C#" Value="public virtual string ShareName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShareName" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Files.Shares.ShareDirectoryClient.ShareName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ShareName As String" />
      <MemberSignature Language="F#" Value="member this.ShareName : string" Usage="Azure.Storage.Files.Shares.ShareDirectoryClient.ShareName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the share name corresponding to the directory client.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public virtual Uri Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Uri" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Uri As Uri" />
      <MemberSignature Language="F#" Value="member this.Uri : Uri" Usage="Azure.Storage.Files.Shares.ShareDirectoryClient.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the directory's primary <see cref="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Uri" /> endpoint.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithSnapshot">
      <MemberSignature Language="C#" Value="public virtual Azure.Storage.Files.Shares.ShareDirectoryClient WithSnapshot (string snapshot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Storage.Files.Shares.ShareDirectoryClient WithSnapshot(string snapshot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.Shares.ShareDirectoryClient.WithSnapshot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WithSnapshot (snapshot As String) As ShareDirectoryClient" />
      <MemberSignature Language="F#" Value="abstract member WithSnapshot : string -&gt; Azure.Storage.Files.Shares.ShareDirectoryClient&#xA;override this.WithSnapshot : string -&gt; Azure.Storage.Files.Shares.ShareDirectoryClient" Usage="shareDirectoryClient.WithSnapshot snapshot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files.Shares</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
        <AssemblyVersion>12.0.1.0</AssemblyVersion>
        <AssemblyVersion>12.1.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.0.0</AssemblyVersion>
        <AssemblyVersion>12.2.1.0</AssemblyVersion>
        <AssemblyVersion>12.2.2.0</AssemblyVersion>
        <AssemblyVersion>12.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Files.Shares.ShareDirectoryClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="snapshot" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="snapshot">
             The snapshot identifier.
             </param>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" />
             class with an identical <see cref="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Uri" /> source but the specified
             <paramref name="snapshot" /> timestamp.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/snapshot-share" />.
             </summary>
        <returns>
             A new <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" /> instance.
             </returns>
        <remarks>
             Pass null or empty string to remove the snapshot returning a URL to the base directory.
             </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
