<Type Name="FunctionExceptionFilterAttribute" FullName="Microsoft.Azure.WebJobs.Host.FunctionExceptionFilterAttribute">
  <TypeSignature Language="C#" Value="public abstract class FunctionExceptionFilterAttribute : Attribute, Microsoft.Azure.WebJobs.Host.IFunctionExceptionFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FunctionExceptionFilterAttribute extends System.Attribute implements class Microsoft.Azure.WebJobs.Host.IFunctionExceptionFilter, class Microsoft.Azure.WebJobs.Host.IFunctionFilter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.WebJobs.Host.FunctionExceptionFilterAttribute" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FunctionExceptionFilterAttribute&#xA;Inherits Attribute&#xA;Implements IFunctionExceptionFilter" />
  <TypeSignature Language="F#" Value="type FunctionExceptionFilterAttribute = class&#xA;    inherit Attribute&#xA;    interface IFunctionExceptionFilter&#xA;    interface IFunctionFilter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.WebJobs.Host</AssemblyName>
    <AssemblyVersion>3.0.25.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.WebJobs.Host.IFunctionExceptionFilter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.WebJobs.Host.IFunctionFilter</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method, AllowMultiple=true, Inherited=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method, AllowMultiple=true, Inherited=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Obsolete("Filters is in preview and there may be breaking changes in this area.")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("Filters is in preview and there may be breaking changes in this area.")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FunctionExceptionFilterAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Host.FunctionExceptionFilterAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Host</AssemblyName>
        <AssemblyVersion>3.0.25.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExceptionAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task OnExceptionAsync (Microsoft.Azure.WebJobs.Host.FunctionExceptionContext exceptionContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OnExceptionAsync(class Microsoft.Azure.WebJobs.Host.FunctionExceptionContext exceptionContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Host.FunctionExceptionFilterAttribute.OnExceptionAsync(Microsoft.Azure.WebJobs.Host.FunctionExceptionContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function OnExceptionAsync (exceptionContext As FunctionExceptionContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnExceptionAsync : Microsoft.Azure.WebJobs.Host.FunctionExceptionContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="functionExceptionFilterAttribute.OnExceptionAsync (exceptionContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.WebJobs.Host.IFunctionExceptionFilter.OnExceptionAsync(Microsoft.Azure.WebJobs.Host.FunctionExceptionContext,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Host</AssemblyName>
        <AssemblyVersion>3.0.25.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exceptionContext" Type="Microsoft.Azure.WebJobs.Host.FunctionExceptionContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="exceptionContext">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
