<Type Name="ArmConnectedVMwarevSphereModelFactory" FullName="Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory">
  <TypeSignature Language="C#" Value="public static class ArmConnectedVMwarevSphereModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ArmConnectedVMwarevSphereModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ArmConnectedVMwarevSphereModelFactory" />
  <TypeSignature Language="F#" Value="type ArmConnectedVMwarevSphereModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="NicIPAddressSettings">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.Models.NicIPAddressSettings NicIPAddressSettings (string allocationMethod = default, string ipAddress = default, string subnetMask = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.Models.NicIPAddressSettings NicIPAddressSettings(string allocationMethod, string ipAddress, string subnetMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.NicIPAddressSettings(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NicIPAddressSettings (Optional allocationMethod As String = Nothing, Optional ipAddress As String = Nothing, Optional subnetMask As String = Nothing) As NicIPAddressSettings" />
      <MemberSignature Language="F#" Value="static member NicIPAddressSettings : string * string * string -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.Models.NicIPAddressSettings" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.NicIPAddressSettings (allocationMethod, ipAddress, subnetMask)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.Models.NicIPAddressSettings</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allocationMethod" Type="System.String" />
        <Parameter Name="ipAddress" Type="System.String" />
        <Parameter Name="subnetMask" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="allocationMethod"> Gets the ip address allocation method. </param>
        <param name="ipAddress"> Gets the ip address for the nic. </param>
        <param name="subnetMask"> Gets the mask. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.Models.NicIPAddressSettings" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.Models.NicIPAddressSettings" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NicIPSettings">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.Models.NicIPSettings NicIPSettings (Azure.ResourceManager.ConnectedVMwarevSphere.Models.IPAddressAllocationMethod? allocationMethod = default, System.Collections.Generic.IEnumerable&lt;string&gt; dnsServers = default, System.Collections.Generic.IEnumerable&lt;string&gt; gateway = default, string ipAddress = default, string subnetMask = default, string primaryWinsServer = default, string secondaryWinsServer = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.NicIPAddressSettings&gt; ipAddressInfo = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.Models.NicIPSettings NicIPSettings(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ConnectedVMwarevSphere.Models.IPAddressAllocationMethod&gt; allocationMethod, class System.Collections.Generic.IEnumerable`1&lt;string&gt; dnsServers, class System.Collections.Generic.IEnumerable`1&lt;string&gt; gateway, string ipAddress, string subnetMask, string primaryWinsServer, string secondaryWinsServer, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.Models.NicIPAddressSettings&gt; ipAddressInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.NicIPSettings(System.Nullable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.IPAddressAllocationMethod},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.NicIPAddressSettings})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NicIPSettings (Optional allocationMethod As Nullable(Of IPAddressAllocationMethod) = Nothing, Optional dnsServers As IEnumerable(Of String) = Nothing, Optional gateway As IEnumerable(Of String) = Nothing, Optional ipAddress As String = Nothing, Optional subnetMask As String = Nothing, Optional primaryWinsServer As String = Nothing, Optional secondaryWinsServer As String = Nothing, Optional ipAddressInfo As IEnumerable(Of NicIPAddressSettings) = Nothing) As NicIPSettings" />
      <MemberSignature Language="F#" Value="static member NicIPSettings : Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.IPAddressAllocationMethod&gt; * seq&lt;string&gt; * seq&lt;string&gt; * string * string * string * string * seq&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.NicIPAddressSettings&gt; -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.Models.NicIPSettings" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.NicIPSettings (allocationMethod, dnsServers, gateway, ipAddress, subnetMask, primaryWinsServer, secondaryWinsServer, ipAddressInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.Models.NicIPSettings</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allocationMethod" Type="System.Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.IPAddressAllocationMethod&gt;" />
        <Parameter Name="dnsServers" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="gateway" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="ipAddress" Type="System.String" />
        <Parameter Name="subnetMask" Type="System.String" />
        <Parameter Name="primaryWinsServer" Type="System.String" />
        <Parameter Name="secondaryWinsServer" Type="System.String" />
        <Parameter Name="ipAddressInfo" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.NicIPAddressSettings&gt;" />
      </Parameters>
      <Docs>
        <param name="allocationMethod"> Gets or sets the nic allocation method. </param>
        <param name="dnsServers"> Gets or sets the dns servers. </param>
        <param name="gateway"> Gets or sets the gateway. </param>
        <param name="ipAddress"> Gets or sets the ip address for the nic. </param>
        <param name="subnetMask"> Gets or sets the mask. </param>
        <param name="primaryWinsServer"> Gets or sets the primary server. </param>
        <param name="secondaryWinsServer"> Gets or sets the secondary server. </param>
        <param name="ipAddressInfo"> Gets or sets the IP address information being reported for this NIC. This contains the same IPv4 information above plus IPV6 information. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.Models.NicIPSettings" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.Models.NicIPSettings" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OSProfileForVmInstance">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.Models.OSProfileForVmInstance OSProfileForVmInstance (string computerName = default, string adminUsername = default, string adminPassword = default, string guestId = default, Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareOSType? osType = default, string osSku = default, string toolsRunningStatus = default, string toolsVersionStatus = default, string toolsVersion = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.Models.OSProfileForVmInstance OSProfileForVmInstance(string computerName, string adminUsername, string adminPassword, string guestId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareOSType&gt; osType, string osSku, string toolsRunningStatus, string toolsVersionStatus, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.OSProfileForVmInstance(System.String,System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareOSType},System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OSProfileForVmInstance (Optional computerName As String = Nothing, Optional adminUsername As String = Nothing, Optional adminPassword As String = Nothing, Optional guestId As String = Nothing, Optional osType As Nullable(Of VMwareOSType) = Nothing, Optional osSku As String = Nothing, Optional toolsRunningStatus As String = Nothing, Optional toolsVersionStatus As String = Nothing, Optional toolsVersion As String = Nothing) As OSProfileForVmInstance" />
      <MemberSignature Language="F#" Value="static member OSProfileForVmInstance : string * string * string * string * Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareOSType&gt; * string * string * string * string -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.Models.OSProfileForVmInstance" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.OSProfileForVmInstance (computerName, adminUsername, adminPassword, guestId, osType, osSku, toolsRunningStatus, toolsVersionStatus, toolsVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.Models.OSProfileForVmInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="computerName" Type="System.String" />
        <Parameter Name="adminUsername" Type="System.String" />
        <Parameter Name="adminPassword" Type="System.String" />
        <Parameter Name="guestId" Type="System.String" />
        <Parameter Name="osType" Type="System.Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareOSType&gt;" />
        <Parameter Name="osSku" Type="System.String" />
        <Parameter Name="toolsRunningStatus" Type="System.String" />
        <Parameter Name="toolsVersionStatus" Type="System.String" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="computerName"> Gets or sets computer name. </param>
        <param name="adminUsername"> Gets or sets administrator username. </param>
        <param name="adminPassword"> Sets administrator password. </param>
        <param name="guestId"> Gets or sets the guestId. </param>
        <param name="osType"> Gets or sets the type of the os. </param>
        <param name="osSku"> Gets or sets os sku. </param>
        <param name="toolsRunningStatus"> Gets or sets the current running status of VMware Tools running in the guest operating system. </param>
        <param name="toolsVersionStatus"> Gets or sets the current version status of VMware Tools installed in the guest operating system. </param>
        <param name="toolsVersion"> Gets or sets the current version of VMware Tools. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.Models.OSProfileForVmInstance" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.Models.OSProfileForVmInstance" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VCenterInfrastructureProfile">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.Models.VCenterInfrastructureProfile VCenterInfrastructureProfile (string templateId = default, string vCenterId = default, string moRefId = default, string inventoryItemId = default, string moName = default, string folderPath = default, string instanceUuid = default, string smbiosUuid = default, Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareFirmwareType? firmwareType = default, string customResourceName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.Models.VCenterInfrastructureProfile VCenterInfrastructureProfile(string templateId, string vCenterId, string moRefId, string inventoryItemId, string moName, string folderPath, string instanceUuid, string smbiosUuid, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareFirmwareType&gt; firmwareType, string customResourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VCenterInfrastructureProfile(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareFirmwareType},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VCenterInfrastructureProfile (Optional templateId As String = Nothing, Optional vCenterId As String = Nothing, Optional moRefId As String = Nothing, Optional inventoryItemId As String = Nothing, Optional moName As String = Nothing, Optional folderPath As String = Nothing, Optional instanceUuid As String = Nothing, Optional smbiosUuid As String = Nothing, Optional firmwareType As Nullable(Of VMwareFirmwareType) = Nothing, Optional customResourceName As String = Nothing) As VCenterInfrastructureProfile" />
      <MemberSignature Language="F#" Value="static member VCenterInfrastructureProfile : string * string * string * string * string * string * string * string * Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareFirmwareType&gt; * string -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.Models.VCenterInfrastructureProfile" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VCenterInfrastructureProfile (templateId, vCenterId, moRefId, inventoryItemId, moName, folderPath, instanceUuid, smbiosUuid, firmwareType, customResourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.Models.VCenterInfrastructureProfile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templateId" Type="System.String" />
        <Parameter Name="vCenterId" Type="System.String" />
        <Parameter Name="moRefId" Type="System.String" />
        <Parameter Name="inventoryItemId" Type="System.String" />
        <Parameter Name="moName" Type="System.String" />
        <Parameter Name="folderPath" Type="System.String" />
        <Parameter Name="instanceUuid" Type="System.String" />
        <Parameter Name="smbiosUuid" Type="System.String" />
        <Parameter Name="firmwareType" Type="System.Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareFirmwareType&gt;" />
        <Parameter Name="customResourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="templateId"> Gets or sets the ARM Id of the template resource to deploy the virtual machine. </param>
        <param name="vCenterId"> Gets or sets the ARM Id of the vCenter resource in which this resource pool resides. </param>
        <param name="moRefId"> Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine. </param>
        <param name="inventoryItemId"> Gets or sets the inventory Item ID for the virtual machine. </param>
        <param name="moName"> Gets or sets the vCenter Managed Object name for the virtual machine. </param>
        <param name="folderPath"> Gets or sets the folder path of the vm. </param>
        <param name="instanceUuid"> Gets or sets the instance uuid of the vm. </param>
        <param name="smbiosUuid"> Gets or sets the SMBIOS UUID of the vm. </param>
        <param name="firmwareType"> Firmware type. </param>
        <param name="customResourceName"> Gets the name of the corresponding resource in Kubernetes. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.Models.VCenterInfrastructureProfile" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.Models.VCenterInfrastructureProfile" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualScsiController">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.Models.VirtualScsiController VirtualScsiController (Azure.ResourceManager.ConnectedVMwarevSphere.Models.ScsiControllerType? scsiControllerType = default, int? controllerKey = default, int? busNumber = default, int? scsiCtlrUnitNumber = default, Azure.ResourceManager.ConnectedVMwarevSphere.Models.VirtualScsiSharing? sharing = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.Models.VirtualScsiController VirtualScsiController(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ConnectedVMwarevSphere.Models.ScsiControllerType&gt; scsiControllerType, valuetype System.Nullable`1&lt;int32&gt; controllerKey, valuetype System.Nullable`1&lt;int32&gt; busNumber, valuetype System.Nullable`1&lt;int32&gt; scsiCtlrUnitNumber, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ConnectedVMwarevSphere.Models.VirtualScsiSharing&gt; sharing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VirtualScsiController(System.Nullable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.ScsiControllerType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VirtualScsiSharing})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VirtualScsiController (Optional scsiControllerType As Nullable(Of ScsiControllerType) = Nothing, Optional controllerKey As Nullable(Of Integer) = Nothing, Optional busNumber As Nullable(Of Integer) = Nothing, Optional scsiCtlrUnitNumber As Nullable(Of Integer) = Nothing, Optional sharing As Nullable(Of VirtualScsiSharing) = Nothing) As VirtualScsiController" />
      <MemberSignature Language="F#" Value="static member VirtualScsiController : Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.ScsiControllerType&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VirtualScsiSharing&gt; -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.Models.VirtualScsiController" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VirtualScsiController (scsiControllerType, controllerKey, busNumber, scsiCtlrUnitNumber, sharing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.Models.VirtualScsiController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scsiControllerType" Type="System.Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.ScsiControllerType&gt;" />
        <Parameter Name="controllerKey" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="busNumber" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="scsiCtlrUnitNumber" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="sharing" Type="System.Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VirtualScsiSharing&gt;" />
      </Parameters>
      <Docs>
        <param name="scsiControllerType"> Gets or sets the controller type. </param>
        <param name="controllerKey"> Gets or sets the key of the controller. </param>
        <param name="busNumber"> Gets or sets the bus number of the controller. </param>
        <param name="scsiCtlrUnitNumber"> Gets or sets the SCSI controller unit number. </param>
        <param name="sharing"> Gets or sets the sharing mode. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.Models.VirtualScsiController" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.Models.VirtualScsiController" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VmInstanceGuestAgentData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceGuestAgentData VmInstanceGuestAgentData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string uuid = default, Azure.ResourceManager.ConnectedVMwarevSphere.Models.VmInstanceGuestCredential credentials = default, Azure.Core.ResourceIdentifier privateLinkScopeResourceId = default, string httpsProxy = default, Azure.ResourceManager.ConnectedVMwarevSphere.Models.GuestAgentProvisioningAction? provisioningAction = default, string status = default, string customResourceName = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt; statuses = default, Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceGuestAgentData VmInstanceGuestAgentData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string uuid, class Azure.ResourceManager.ConnectedVMwarevSphere.Models.VmInstanceGuestCredential credentials, class Azure.Core.ResourceIdentifier privateLinkScopeResourceId, string httpsProxy, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ConnectedVMwarevSphere.Models.GuestAgentProvisioningAction&gt; provisioningAction, string status, string customResourceName, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt; statuses, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VmInstanceGuestAgentData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,Azure.ResourceManager.ConnectedVMwarevSphere.Models.VmInstanceGuestCredential,Azure.Core.ResourceIdentifier,System.String,System.Nullable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.GuestAgentProvisioningAction},System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus},System.Nullable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VmInstanceGuestAgentData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional uuid As String = Nothing, Optional credentials As VmInstanceGuestCredential = Nothing, Optional privateLinkScopeResourceId As ResourceIdentifier = Nothing, Optional httpsProxy As String = Nothing, Optional provisioningAction As Nullable(Of GuestAgentProvisioningAction) = Nothing, Optional status As String = Nothing, Optional customResourceName As String = Nothing, Optional statuses As IEnumerable(Of VMwareResourceStatus) = Nothing, Optional provisioningState As Nullable(Of VMwareResourceProvisioningState) = Nothing) As VmInstanceGuestAgentData" />
      <MemberSignature Language="F#" Value="static member VmInstanceGuestAgentData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * Azure.ResourceManager.ConnectedVMwarevSphere.Models.VmInstanceGuestCredential * Azure.Core.ResourceIdentifier * string * Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.GuestAgentProvisioningAction&gt; * string * string * seq&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt; * Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState&gt; -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceGuestAgentData" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VmInstanceGuestAgentData (id, name, resourceType, systemData, uuid, credentials, privateLinkScopeResourceId, httpsProxy, provisioningAction, status, customResourceName, statuses, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceGuestAgentData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="uuid" Type="System.String" />
        <Parameter Name="credentials" Type="Azure.ResourceManager.ConnectedVMwarevSphere.Models.VmInstanceGuestCredential" />
        <Parameter Name="privateLinkScopeResourceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="httpsProxy" Type="System.String" />
        <Parameter Name="provisioningAction" Type="System.Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.GuestAgentProvisioningAction&gt;" />
        <Parameter Name="status" Type="System.String" />
        <Parameter Name="customResourceName" Type="System.String" />
        <Parameter Name="statuses" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="uuid"> Gets or sets a unique identifier for this resource. </param>
        <param name="credentials"> Username / Password Credentials to provision guest agent. </param>
        <param name="privateLinkScopeResourceId"> The resource id of the private link scope this machine is assigned to, if any. </param>
        <param name="httpsProxy"> HTTP Proxy configuration for the VM. </param>
        <param name="provisioningAction"> Gets or sets the guest agent provisioning action. </param>
        <param name="status"> Gets or sets the guest agent status. </param>
        <param name="customResourceName"> Gets the name of the corresponding resource in Kubernetes. </param>
        <param name="statuses"> The resource status information. </param>
        <param name="provisioningState"> Gets the provisioning state. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceGuestAgentData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceGuestAgentData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VmInstanceHardwareProfile">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.Models.VmInstanceHardwareProfile VmInstanceHardwareProfile (int? memorySizeMB = default, int? numCpus = default, int? numCoresPerSocket = default, bool? cpuHotAddEnabled = default, bool? cpuHotRemoveEnabled = default, bool? memoryHotAddEnabled = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.Models.VmInstanceHardwareProfile VmInstanceHardwareProfile(valuetype System.Nullable`1&lt;int32&gt; memorySizeMB, valuetype System.Nullable`1&lt;int32&gt; numCpus, valuetype System.Nullable`1&lt;int32&gt; numCoresPerSocket, valuetype System.Nullable`1&lt;bool&gt; cpuHotAddEnabled, valuetype System.Nullable`1&lt;bool&gt; cpuHotRemoveEnabled, valuetype System.Nullable`1&lt;bool&gt; memoryHotAddEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VmInstanceHardwareProfile(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VmInstanceHardwareProfile (Optional memorySizeMB As Nullable(Of Integer) = Nothing, Optional numCpus As Nullable(Of Integer) = Nothing, Optional numCoresPerSocket As Nullable(Of Integer) = Nothing, Optional cpuHotAddEnabled As Nullable(Of Boolean) = Nothing, Optional cpuHotRemoveEnabled As Nullable(Of Boolean) = Nothing, Optional memoryHotAddEnabled As Nullable(Of Boolean) = Nothing) As VmInstanceHardwareProfile" />
      <MemberSignature Language="F#" Value="static member VmInstanceHardwareProfile : Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.Models.VmInstanceHardwareProfile" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VmInstanceHardwareProfile (memorySizeMB, numCpus, numCoresPerSocket, cpuHotAddEnabled, cpuHotRemoveEnabled, memoryHotAddEnabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.Models.VmInstanceHardwareProfile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memorySizeMB" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="numCpus" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="numCoresPerSocket" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cpuHotAddEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cpuHotRemoveEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="memoryHotAddEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="memorySizeMB"> Gets or sets memory size in MBs for the vm. </param>
        <param name="numCpus"> Gets or sets the number of vCPUs for the vm. </param>
        <param name="numCoresPerSocket"> Gets or sets the number of cores per socket for the vm. Defaults to 1 if unspecified. </param>
        <param name="cpuHotAddEnabled"> Gets or sets a value indicating whether virtual processors can be added while this virtual machine is running. </param>
        <param name="cpuHotRemoveEnabled"> Gets or sets a value indicating whether virtual processors can be removed while this virtual machine is running. </param>
        <param name="memoryHotAddEnabled"> Gets or sets a value indicating whether memory can be added while this virtual machine is running. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.Models.VmInstanceHardwareProfile" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.Models.VmInstanceHardwareProfile" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VmInstanceHybridIdentityMetadataData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceHybridIdentityMetadataData VmInstanceHybridIdentityMetadataData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string resourceUid = default, string publicKey = default, Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceHybridIdentityMetadataData VmInstanceHybridIdentityMetadataData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string resourceUid, string publicKey, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VmInstanceHybridIdentityMetadataData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.Nullable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VmInstanceHybridIdentityMetadataData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional resourceUid As String = Nothing, Optional publicKey As String = Nothing, Optional provisioningState As Nullable(Of VMwareResourceProvisioningState) = Nothing) As VmInstanceHybridIdentityMetadataData" />
      <MemberSignature Language="F#" Value="static member VmInstanceHybridIdentityMetadataData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * string * Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState&gt; -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceHybridIdentityMetadataData" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VmInstanceHybridIdentityMetadataData (id, name, resourceType, systemData, resourceUid, publicKey, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceHybridIdentityMetadataData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="resourceUid" Type="System.String" />
        <Parameter Name="publicKey" Type="System.String" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="resourceUid"> The unique identifier for the resource. </param>
        <param name="publicKey"> Gets or sets the Public Key. </param>
        <param name="provisioningState"> Gets the provisioning state. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceHybridIdentityMetadataData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VmInstanceHybridIdentityMetadataData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VMwareClusterData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterData VMwareClusterData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation = default, string kind = default, string uuid = default, string vCenterId = default, string moRefId = default, string inventoryItemId = default, string moName = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt; statuses = default, string customResourceName = default, long? usedMemoryGB = default, long? totalMemoryGB = default, long? usedCpuMHz = default, long? totalCpuMHz = default, System.Collections.Generic.IEnumerable&lt;string&gt; datastoreIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; networkIds = default, Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterData VMwareClusterData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation, string kind, string uuid, string vCenterId, string moRefId, string inventoryItemId, string moName, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt; statuses, string customResourceName, valuetype System.Nullable`1&lt;int64&gt; usedMemoryGB, valuetype System.Nullable`1&lt;int64&gt; totalMemoryGB, valuetype System.Nullable`1&lt;int64&gt; usedCpuMHz, valuetype System.Nullable`1&lt;int64&gt; totalCpuMHz, class System.Collections.Generic.IEnumerable`1&lt;string&gt; datastoreIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; networkIds, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VMwareClusterData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus},System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VMwareClusterData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional extendedLocation As ExtendedLocation = Nothing, Optional kind As String = Nothing, Optional uuid As String = Nothing, Optional vCenterId As String = Nothing, Optional moRefId As String = Nothing, Optional inventoryItemId As String = Nothing, Optional moName As String = Nothing, Optional statuses As IEnumerable(Of VMwareResourceStatus) = Nothing, Optional customResourceName As String = Nothing, Optional usedMemoryGB As Nullable(Of Long) = Nothing, Optional totalMemoryGB As Nullable(Of Long) = Nothing, Optional usedCpuMHz As Nullable(Of Long) = Nothing, Optional totalCpuMHz As Nullable(Of Long) = Nothing, Optional datastoreIds As IEnumerable(Of String) = Nothing, Optional networkIds As IEnumerable(Of String) = Nothing, Optional provisioningState As Nullable(Of VMwareResourceProvisioningState) = Nothing) As VMwareClusterData" />
      <MemberSignature Language="F#" Value="static member VMwareClusterData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.Resources.Models.ExtendedLocation * string * string * string * string * string * string * seq&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt; * string * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState&gt; -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterData" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VMwareClusterData (id, name, resourceType, systemData, tags, location, extendedLocation, kind, uuid, vCenterId, moRefId, inventoryItemId, moName, statuses, customResourceName, usedMemoryGB, totalMemoryGB, usedCpuMHz, totalCpuMHz, datastoreIds, networkIds, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="extendedLocation" Type="Azure.ResourceManager.Resources.Models.ExtendedLocation" />
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="uuid" Type="System.String" />
        <Parameter Name="vCenterId" Type="System.String" />
        <Parameter Name="moRefId" Type="System.String" />
        <Parameter Name="inventoryItemId" Type="System.String" />
        <Parameter Name="moName" Type="System.String" />
        <Parameter Name="statuses" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt;" />
        <Parameter Name="customResourceName" Type="System.String" />
        <Parameter Name="usedMemoryGB" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="totalMemoryGB" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="usedCpuMHz" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="totalCpuMHz" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="datastoreIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="networkIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="extendedLocation"> Gets or sets the extended location. </param>
        <param name="kind"> Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value. </param>
        <param name="uuid"> Gets or sets a unique identifier for this resource. </param>
        <param name="vCenterId"> Gets or sets the ARM Id of the vCenter resource in which this cluster resides. </param>
        <param name="moRefId"> Gets or sets the vCenter MoRef (Managed Object Reference) ID for the cluster. </param>
        <param name="inventoryItemId"> Gets or sets the inventory Item ID for the cluster. </param>
        <param name="moName"> Gets or sets the vCenter Managed Object name for the cluster. </param>
        <param name="statuses"> The resource status information. </param>
        <param name="customResourceName"> Gets the name of the corresponding resource in Kubernetes. </param>
        <param name="usedMemoryGB"> Gets the used physical memory on the cluster in GB. </param>
        <param name="totalMemoryGB"> Gets the total amount of physical memory on the cluster in GB. </param>
        <param name="usedCpuMHz"> Gets the used CPU usage across all cores on the cluster in MHz. </param>
        <param name="totalCpuMHz"> Gets the max CPU usage across all cores on the cluster in MHz. </param>
        <param name="datastoreIds"> Gets the datastore ARM ids. </param>
        <param name="networkIds"> Gets the network ARM ids. </param>
        <param name="provisioningState"> Gets the provisioning state. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VMwareDatastoreData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreData VMwareDatastoreData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation = default, string kind = default, string uuid = default, string vCenterId = default, string moRefId = default, string inventoryItemId = default, string moName = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt; statuses = default, string customResourceName = default, long? capacityGB = default, long? freeSpaceGB = default, Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreData VMwareDatastoreData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation, string kind, string uuid, string vCenterId, string moRefId, string inventoryItemId, string moName, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt; statuses, string customResourceName, valuetype System.Nullable`1&lt;int64&gt; capacityGB, valuetype System.Nullable`1&lt;int64&gt; freeSpaceGB, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VMwareDatastoreData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus},System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VMwareDatastoreData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional extendedLocation As ExtendedLocation = Nothing, Optional kind As String = Nothing, Optional uuid As String = Nothing, Optional vCenterId As String = Nothing, Optional moRefId As String = Nothing, Optional inventoryItemId As String = Nothing, Optional moName As String = Nothing, Optional statuses As IEnumerable(Of VMwareResourceStatus) = Nothing, Optional customResourceName As String = Nothing, Optional capacityGB As Nullable(Of Long) = Nothing, Optional freeSpaceGB As Nullable(Of Long) = Nothing, Optional provisioningState As Nullable(Of VMwareResourceProvisioningState) = Nothing) As VMwareDatastoreData" />
      <MemberSignature Language="F#" Value="static member VMwareDatastoreData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.Resources.Models.ExtendedLocation * string * string * string * string * string * string * seq&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt; * string * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState&gt; -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreData" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VMwareDatastoreData (id, name, resourceType, systemData, tags, location, extendedLocation, kind, uuid, vCenterId, moRefId, inventoryItemId, moName, statuses, customResourceName, capacityGB, freeSpaceGB, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="extendedLocation" Type="Azure.ResourceManager.Resources.Models.ExtendedLocation" />
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="uuid" Type="System.String" />
        <Parameter Name="vCenterId" Type="System.String" />
        <Parameter Name="moRefId" Type="System.String" />
        <Parameter Name="inventoryItemId" Type="System.String" />
        <Parameter Name="moName" Type="System.String" />
        <Parameter Name="statuses" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt;" />
        <Parameter Name="customResourceName" Type="System.String" />
        <Parameter Name="capacityGB" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="freeSpaceGB" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="extendedLocation"> Gets or sets the extended location. </param>
        <param name="kind"> Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value. </param>
        <param name="uuid"> Gets or sets a unique identifier for this resource. </param>
        <param name="vCenterId"> Gets or sets the ARM Id of the vCenter resource in which this datastore resides. </param>
        <param name="moRefId"> Gets or sets the vCenter MoRef (Managed Object Reference) ID for the datastore. </param>
        <param name="inventoryItemId"> Gets or sets the inventory Item ID for the datastore. </param>
        <param name="moName"> Gets or sets the vCenter Managed Object name for the datastore. </param>
        <param name="statuses"> The resource status information. </param>
        <param name="customResourceName"> Gets the name of the corresponding resource in Kubernetes. </param>
        <param name="capacityGB"> Gets or sets Maximum capacity of this datastore in GBs. </param>
        <param name="freeSpaceGB"> Gets or sets Available space of this datastore in GBs. </param>
        <param name="provisioningState"> Provisioning state of the resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VMwareHostData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostData VMwareHostData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation = default, string kind = default, string uuid = default, string vCenterId = default, string moRefId = default, string inventoryItemId = default, string moName = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt; statuses = default, string customResourceName = default, long? overallMemoryUsageGB = default, long? memorySizeGB = default, long? overallCpuUsageMHz = default, long? cpuMhz = default, System.Collections.Generic.IEnumerable&lt;string&gt; datastoreIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; networkIds = default, Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostData VMwareHostData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation, string kind, string uuid, string vCenterId, string moRefId, string inventoryItemId, string moName, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt; statuses, string customResourceName, valuetype System.Nullable`1&lt;int64&gt; overallMemoryUsageGB, valuetype System.Nullable`1&lt;int64&gt; memorySizeGB, valuetype System.Nullable`1&lt;int64&gt; overallCpuUsageMHz, valuetype System.Nullable`1&lt;int64&gt; cpuMhz, class System.Collections.Generic.IEnumerable`1&lt;string&gt; datastoreIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; networkIds, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VMwareHostData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus},System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VMwareHostData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional extendedLocation As ExtendedLocation = Nothing, Optional kind As String = Nothing, Optional uuid As String = Nothing, Optional vCenterId As String = Nothing, Optional moRefId As String = Nothing, Optional inventoryItemId As String = Nothing, Optional moName As String = Nothing, Optional statuses As IEnumerable(Of VMwareResourceStatus) = Nothing, Optional customResourceName As String = Nothing, Optional overallMemoryUsageGB As Nullable(Of Long) = Nothing, Optional memorySizeGB As Nullable(Of Long) = Nothing, Optional overallCpuUsageMHz As Nullable(Of Long) = Nothing, Optional cpuMhz As Nullable(Of Long) = Nothing, Optional datastoreIds As IEnumerable(Of String) = Nothing, Optional networkIds As IEnumerable(Of String) = Nothing, Optional provisioningState As Nullable(Of VMwareResourceProvisioningState) = Nothing) As VMwareHostData" />
      <MemberSignature Language="F#" Value="static member VMwareHostData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.Resources.Models.ExtendedLocation * string * string * string * string * string * string * seq&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt; * string * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState&gt; -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostData" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VMwareHostData (id, name, resourceType, systemData, tags, location, extendedLocation, kind, uuid, vCenterId, moRefId, inventoryItemId, moName, statuses, customResourceName, overallMemoryUsageGB, memorySizeGB, overallCpuUsageMHz, cpuMhz, datastoreIds, networkIds, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="extendedLocation" Type="Azure.ResourceManager.Resources.Models.ExtendedLocation" />
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="uuid" Type="System.String" />
        <Parameter Name="vCenterId" Type="System.String" />
        <Parameter Name="moRefId" Type="System.String" />
        <Parameter Name="inventoryItemId" Type="System.String" />
        <Parameter Name="moName" Type="System.String" />
        <Parameter Name="statuses" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt;" />
        <Parameter Name="customResourceName" Type="System.String" />
        <Parameter Name="overallMemoryUsageGB" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="memorySizeGB" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="overallCpuUsageMHz" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="cpuMhz" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="datastoreIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="networkIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="extendedLocation"> Gets or sets the extended location. </param>
        <param name="kind"> Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value. </param>
        <param name="uuid"> Gets or sets a unique identifier for this resource. </param>
        <param name="vCenterId"> Gets or sets the ARM Id of the vCenter resource in which this host resides. </param>
        <param name="moRefId"> Gets or sets the vCenter MoRef (Managed Object Reference) ID for the host. </param>
        <param name="inventoryItemId"> Gets or sets the inventory Item ID for the host. </param>
        <param name="moName"> Gets or sets the vCenter Managed Object name for the host. </param>
        <param name="statuses"> The resource status information. </param>
        <param name="customResourceName"> Gets the name of the corresponding resource in Kubernetes. </param>
        <param name="overallMemoryUsageGB"> Gets the used physical memory on the host in GB. </param>
        <param name="memorySizeGB"> Gets the total amount of physical memory on the host in GB. </param>
        <param name="overallCpuUsageMHz"> Gets the used CPU usage across all cores in MHz. </param>
        <param name="cpuMhz"> Gets the max CPU usage across all cores in MHz. </param>
        <param name="datastoreIds"> Gets the datastore ARM ids. </param>
        <param name="networkIds"> Gets the network ARM ids. </param>
        <param name="provisioningState"> Gets the provisioning state. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VMwareNetworkInterface">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareNetworkInterface VMwareNetworkInterface (string name = default, string label = default, System.Collections.Generic.IEnumerable&lt;string&gt; ipAddresses = default, string macAddress = default, string networkId = default, Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareNicType? nicType = default, Azure.ResourceManager.ConnectedVMwarevSphere.Models.PowerOnBootOption? powerOnBoot = default, string networkMoRefId = default, string networkMoName = default, int? deviceKey = default, Azure.ResourceManager.ConnectedVMwarevSphere.Models.NicIPSettings ipSettings = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareNetworkInterface VMwareNetworkInterface(string name, string label, class System.Collections.Generic.IEnumerable`1&lt;string&gt; ipAddresses, string macAddress, string networkId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareNicType&gt; nicType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ConnectedVMwarevSphere.Models.PowerOnBootOption&gt; powerOnBoot, string networkMoRefId, string networkMoName, valuetype System.Nullable`1&lt;int32&gt; deviceKey, class Azure.ResourceManager.ConnectedVMwarevSphere.Models.NicIPSettings ipSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VMwareNetworkInterface(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Nullable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareNicType},System.Nullable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.PowerOnBootOption},System.String,System.String,System.Nullable{System.Int32},Azure.ResourceManager.ConnectedVMwarevSphere.Models.NicIPSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VMwareNetworkInterface (Optional name As String = Nothing, Optional label As String = Nothing, Optional ipAddresses As IEnumerable(Of String) = Nothing, Optional macAddress As String = Nothing, Optional networkId As String = Nothing, Optional nicType As Nullable(Of VMwareNicType) = Nothing, Optional powerOnBoot As Nullable(Of PowerOnBootOption) = Nothing, Optional networkMoRefId As String = Nothing, Optional networkMoName As String = Nothing, Optional deviceKey As Nullable(Of Integer) = Nothing, Optional ipSettings As NicIPSettings = Nothing) As VMwareNetworkInterface" />
      <MemberSignature Language="F#" Value="static member VMwareNetworkInterface : string * string * seq&lt;string&gt; * string * string * Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareNicType&gt; * Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.PowerOnBootOption&gt; * string * string * Nullable&lt;int&gt; * Azure.ResourceManager.ConnectedVMwarevSphere.Models.NicIPSettings -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareNetworkInterface" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VMwareNetworkInterface (name, label, ipAddresses, macAddress, networkId, nicType, powerOnBoot, networkMoRefId, networkMoName, deviceKey, ipSettings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareNetworkInterface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="ipAddresses" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="macAddress" Type="System.String" />
        <Parameter Name="networkId" Type="System.String" />
        <Parameter Name="nicType" Type="System.Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareNicType&gt;" />
        <Parameter Name="powerOnBoot" Type="System.Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.PowerOnBootOption&gt;" />
        <Parameter Name="networkMoRefId" Type="System.String" />
        <Parameter Name="networkMoName" Type="System.String" />
        <Parameter Name="deviceKey" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="ipSettings" Type="Azure.ResourceManager.ConnectedVMwarevSphere.Models.NicIPSettings" />
      </Parameters>
      <Docs>
        <param name="name"> Gets or sets the name of the network interface. </param>
        <param name="label"> Gets or sets the label of the virtual network in vCenter that the nic is connected to. </param>
        <param name="ipAddresses"> Gets or sets the nic ip addresses. </param>
        <param name="macAddress"> Gets or sets the NIC MAC address. </param>
        <param name="networkId"> Gets or sets the ARM Id of the network resource to connect the virtual machine. </param>
        <param name="nicType"> NIC type. </param>
        <param name="powerOnBoot"> Gets or sets the power on boot. </param>
        <param name="networkMoRefId">
            Gets or sets the vCenter MoRef (Managed Object Reference) ID of the virtual network
            that the nic is connected to.
            </param>
        <param name="networkMoName"> Gets or sets the name of the virtual network in vCenter that the nic is connected to. </param>
        <param name="deviceKey"> Gets or sets the device key value. </param>
        <param name="ipSettings"> Gets or sets the ipsettings. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareNetworkInterface" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareNetworkInterface" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VMwareResourcePoolData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolData VMwareResourcePoolData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation = default, string kind = default, string uuid = default, string vCenterId = default, string moRefId = default, string inventoryItemId = default, string moName = default, string cpuSharesLevel = default, long? cpuReservationMHz = default, long? cpuLimitMHz = default, string memSharesLevel = default, long? memReservationMB = default, long? memLimitMB = default, long? memOverallUsageGB = default, long? memCapacityGB = default, long? cpuOverallUsageMHz = default, long? cpuCapacityMHz = default, string customResourceName = default, System.Collections.Generic.IEnumerable&lt;string&gt; datastoreIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; networkIds = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt; statuses = default, Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolData VMwareResourcePoolData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation, string kind, string uuid, string vCenterId, string moRefId, string inventoryItemId, string moName, string cpuSharesLevel, valuetype System.Nullable`1&lt;int64&gt; cpuReservationMHz, valuetype System.Nullable`1&lt;int64&gt; cpuLimitMHz, string memSharesLevel, valuetype System.Nullable`1&lt;int64&gt; memReservationMB, valuetype System.Nullable`1&lt;int64&gt; memLimitMB, valuetype System.Nullable`1&lt;int64&gt; memOverallUsageGB, valuetype System.Nullable`1&lt;int64&gt; memCapacityGB, valuetype System.Nullable`1&lt;int64&gt; cpuOverallUsageMHz, valuetype System.Nullable`1&lt;int64&gt; cpuCapacityMHz, string customResourceName, class System.Collections.Generic.IEnumerable`1&lt;string&gt; datastoreIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; networkIds, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt; statuses, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VMwareResourcePoolData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus},System.Nullable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VMwareResourcePoolData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional extendedLocation As ExtendedLocation = Nothing, Optional kind As String = Nothing, Optional uuid As String = Nothing, Optional vCenterId As String = Nothing, Optional moRefId As String = Nothing, Optional inventoryItemId As String = Nothing, Optional moName As String = Nothing, Optional cpuSharesLevel As String = Nothing, Optional cpuReservationMHz As Nullable(Of Long) = Nothing, Optional cpuLimitMHz As Nullable(Of Long) = Nothing, Optional memSharesLevel As String = Nothing, Optional memReservationMB As Nullable(Of Long) = Nothing, Optional memLimitMB As Nullable(Of Long) = Nothing, Optional memOverallUsageGB As Nullable(Of Long) = Nothing, Optional memCapacityGB As Nullable(Of Long) = Nothing, Optional cpuOverallUsageMHz As Nullable(Of Long) = Nothing, Optional cpuCapacityMHz As Nullable(Of Long) = Nothing, Optional customResourceName As String = Nothing, Optional datastoreIds As IEnumerable(Of String) = Nothing, Optional networkIds As IEnumerable(Of String) = Nothing, Optional statuses As IEnumerable(Of VMwareResourceStatus) = Nothing, Optional provisioningState As Nullable(Of VMwareResourceProvisioningState) = Nothing) As VMwareResourcePoolData" />
      <MemberSignature Language="F#" Value="static member VMwareResourcePoolData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.Resources.Models.ExtendedLocation * string * string * string * string * string * string * string * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * string * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * string * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt; * Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState&gt; -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolData" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VMwareResourcePoolData (id, name, resourceType, systemData, tags, location, extendedLocation, kind, uuid, vCenterId, moRefId, inventoryItemId, moName, cpuSharesLevel, cpuReservationMHz, cpuLimitMHz, memSharesLevel, memReservationMB, memLimitMB, memOverallUsageGB, memCapacityGB, cpuOverallUsageMHz, cpuCapacityMHz, customResourceName, datastoreIds, networkIds, statuses, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="extendedLocation" Type="Azure.ResourceManager.Resources.Models.ExtendedLocation" />
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="uuid" Type="System.String" />
        <Parameter Name="vCenterId" Type="System.String" />
        <Parameter Name="moRefId" Type="System.String" />
        <Parameter Name="inventoryItemId" Type="System.String" />
        <Parameter Name="moName" Type="System.String" />
        <Parameter Name="cpuSharesLevel" Type="System.String" />
        <Parameter Name="cpuReservationMHz" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="cpuLimitMHz" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="memSharesLevel" Type="System.String" />
        <Parameter Name="memReservationMB" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="memLimitMB" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="memOverallUsageGB" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="memCapacityGB" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="cpuOverallUsageMHz" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="cpuCapacityMHz" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="customResourceName" Type="System.String" />
        <Parameter Name="datastoreIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="networkIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="statuses" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="extendedLocation"> Gets or sets the extended location. </param>
        <param name="kind"> Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value. </param>
        <param name="uuid"> Gets or sets a unique identifier for this resource. </param>
        <param name="vCenterId"> Gets or sets the ARM Id of the vCenter resource in which this resource pool resides. </param>
        <param name="moRefId"> Gets or sets the vCenter MoRef (Managed Object Reference) ID for the resource pool. </param>
        <param name="inventoryItemId"> Gets or sets the inventory Item ID for the resource pool. </param>
        <param name="moName"> Gets or sets the vCenter Managed Object name for the resource pool. </param>
        <param name="cpuSharesLevel">
            Gets or sets CPUSharesLevel which specifies the CPU allocation level for this pool.
            This property is used in relative allocation between resource consumers.
            </param>
        <param name="cpuReservationMHz">
            Gets or sets CPUReservationMHz which specifies the CPU size in MHz that is guaranteed
            to be available.
            </param>
        <param name="cpuLimitMHz">
            Gets or sets CPULimitMHz which specifies a CPU usage limit in MHz.
            Utilization will not exceed this limit even if there are available resources.
            </param>
        <param name="memSharesLevel">
            Gets or sets CPUSharesLevel which specifies the memory allocation level for this pool.
            This property is used in relative allocation between resource consumers.
            </param>
        <param name="memReservationMB">
            Gets or sets MemReservationMB which specifies the guaranteed available memory in
            megabytes.
            </param>
        <param name="memLimitMB">
            Gets or sets MemLimitMB specifies a memory usage limit in megabytes.
            Utilization will not exceed the specified limit even if there are available resources.
            </param>
        <param name="memOverallUsageGB"> Gets the used physical memory on the pool in GB. </param>
        <param name="memCapacityGB"> Gets the total amount of physical memory on the pool in GB. </param>
        <param name="cpuOverallUsageMHz"> Gets the used CPU usage across all cores on the pool in MHz. </param>
        <param name="cpuCapacityMHz"> Gets the max CPU usage across all cores on the pool in MHz. </param>
        <param name="customResourceName"> Gets the name of the corresponding resource in Kubernetes. </param>
        <param name="datastoreIds"> Gets the datastore ARM ids. </param>
        <param name="networkIds"> Gets the network ARM ids. </param>
        <param name="statuses"> The resource status information. </param>
        <param name="provisioningState"> Gets the provisioning state. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareResourcePoolData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VMwareResourceStatus">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus VMwareResourceStatus (string resourceStatusType = default, string status = default, string reason = default, string message = default, string severity = default, DateTimeOffset? lastUpdatedOn = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus VMwareResourceStatus(string resourceStatusType, string status, string reason, string message, string severity, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastUpdatedOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VMwareResourceStatus(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VMwareResourceStatus (Optional resourceStatusType As String = Nothing, Optional status As String = Nothing, Optional reason As String = Nothing, Optional message As String = Nothing, Optional severity As String = Nothing, Optional lastUpdatedOn As Nullable(Of DateTimeOffset) = Nothing) As VMwareResourceStatus" />
      <MemberSignature Language="F#" Value="static member VMwareResourceStatus : string * string * string * string * string * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VMwareResourceStatus (resourceStatusType, status, reason, message, severity, lastUpdatedOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceStatusType" Type="System.String" />
        <Parameter Name="status" Type="System.String" />
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="severity" Type="System.String" />
        <Parameter Name="lastUpdatedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="resourceStatusType"> The type of the condition. </param>
        <param name="status"> Status of the condition. </param>
        <param name="reason"> The reason for the condition's status. </param>
        <param name="message"> A human readable message indicating details about the status. </param>
        <param name="severity"> Severity with which to treat failures of this type of condition. </param>
        <param name="lastUpdatedOn"> The last update time for this condition. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VMwareStorageProfile">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareStorageProfile VMwareStorageProfile (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareVirtualDisk&gt; disks = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VirtualScsiController&gt; scsiControllers = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareStorageProfile VMwareStorageProfile(class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareVirtualDisk&gt; disks, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.Models.VirtualScsiController&gt; scsiControllers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VMwareStorageProfile(System.Collections.Generic.IEnumerable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareVirtualDisk},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VirtualScsiController})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VMwareStorageProfile (Optional disks As IEnumerable(Of VMwareVirtualDisk) = Nothing, Optional scsiControllers As IEnumerable(Of VirtualScsiController) = Nothing) As VMwareStorageProfile" />
      <MemberSignature Language="F#" Value="static member VMwareStorageProfile : seq&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareVirtualDisk&gt; * seq&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VirtualScsiController&gt; -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareStorageProfile" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VMwareStorageProfile (disks, scsiControllers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareStorageProfile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disks" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareVirtualDisk&gt;" />
        <Parameter Name="scsiControllers" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VirtualScsiController&gt;" />
      </Parameters>
      <Docs>
        <param name="disks"> Gets or sets the list of virtual disks associated with the virtual machine. </param>
        <param name="scsiControllers"> Gets or sets the list of virtual SCSI controllers associated with the virtual machine. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareStorageProfile" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareStorageProfile" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VMwareVCenterData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterData VMwareVCenterData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation = default, string kind = default, string uuid = default, string fqdn = default, int? port = default, string version = default, string instanceUuid = default, string connectionStatus = default, string customResourceName = default, Azure.ResourceManager.ConnectedVMwarevSphere.Models.VICredential credentials = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt; statuses = default, Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterData VMwareVCenterData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation, string kind, string uuid, string fqdn, valuetype System.Nullable`1&lt;int32&gt; port, string version, string instanceUuid, string connectionStatus, string customResourceName, class Azure.ResourceManager.ConnectedVMwarevSphere.Models.VICredential credentials, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt; statuses, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VMwareVCenterData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,Azure.ResourceManager.ConnectedVMwarevSphere.Models.VICredential,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus},System.Nullable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VMwareVCenterData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional extendedLocation As ExtendedLocation = Nothing, Optional kind As String = Nothing, Optional uuid As String = Nothing, Optional fqdn As String = Nothing, Optional port As Nullable(Of Integer) = Nothing, Optional version As String = Nothing, Optional instanceUuid As String = Nothing, Optional connectionStatus As String = Nothing, Optional customResourceName As String = Nothing, Optional credentials As VICredential = Nothing, Optional statuses As IEnumerable(Of VMwareResourceStatus) = Nothing, Optional provisioningState As Nullable(Of VMwareResourceProvisioningState) = Nothing) As VMwareVCenterData" />
      <MemberSignature Language="F#" Value="static member VMwareVCenterData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.Resources.Models.ExtendedLocation * string * string * string * Nullable&lt;int&gt; * string * string * string * string * Azure.ResourceManager.ConnectedVMwarevSphere.Models.VICredential * seq&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt; * Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState&gt; -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterData" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VMwareVCenterData (id, name, resourceType, systemData, tags, location, extendedLocation, kind, uuid, fqdn, port, version, instanceUuid, connectionStatus, customResourceName, credentials, statuses, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="extendedLocation" Type="Azure.ResourceManager.Resources.Models.ExtendedLocation" />
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="uuid" Type="System.String" />
        <Parameter Name="fqdn" Type="System.String" />
        <Parameter Name="port" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="instanceUuid" Type="System.String" />
        <Parameter Name="connectionStatus" Type="System.String" />
        <Parameter Name="customResourceName" Type="System.String" />
        <Parameter Name="credentials" Type="Azure.ResourceManager.ConnectedVMwarevSphere.Models.VICredential" />
        <Parameter Name="statuses" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="extendedLocation"> Gets or sets the extended location. </param>
        <param name="kind"> Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value. </param>
        <param name="uuid"> Gets or sets a unique identifier for this resource. </param>
        <param name="fqdn"> Gets or sets the FQDN/IPAddress of the vCenter. </param>
        <param name="port"> Gets or sets the port of the vCenter. </param>
        <param name="version"> Gets or sets the version of the vCenter. </param>
        <param name="instanceUuid"> Gets or sets the instance UUID of the vCenter. </param>
        <param name="connectionStatus"> Gets or sets the connection status to the vCenter. </param>
        <param name="customResourceName"> Gets the name of the corresponding resource in Kubernetes. </param>
        <param name="credentials"> Username / Password Credentials to connect to vcenter. </param>
        <param name="statuses"> The resource status information. </param>
        <param name="provisioningState"> Gets the provisioning state. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVCenterData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VMwareVirtualDisk">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareVirtualDisk VMwareVirtualDisk (string name = default, string label = default, string diskObjectId = default, int? diskSizeGB = default, int? deviceKey = default, Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareDiskMode? diskMode = default, int? controllerKey = default, int? unitNumber = default, string deviceName = default, Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareDiskType? diskType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareVirtualDisk VMwareVirtualDisk(string name, string label, string diskObjectId, valuetype System.Nullable`1&lt;int32&gt; diskSizeGB, valuetype System.Nullable`1&lt;int32&gt; deviceKey, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareDiskMode&gt; diskMode, valuetype System.Nullable`1&lt;int32&gt; controllerKey, valuetype System.Nullable`1&lt;int32&gt; unitNumber, string deviceName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareDiskType&gt; diskType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VMwareVirtualDisk(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareDiskMode},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareDiskType})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VMwareVirtualDisk (Optional name As String = Nothing, Optional label As String = Nothing, Optional diskObjectId As String = Nothing, Optional diskSizeGB As Nullable(Of Integer) = Nothing, Optional deviceKey As Nullable(Of Integer) = Nothing, Optional diskMode As Nullable(Of VMwareDiskMode) = Nothing, Optional controllerKey As Nullable(Of Integer) = Nothing, Optional unitNumber As Nullable(Of Integer) = Nothing, Optional deviceName As String = Nothing, Optional diskType As Nullable(Of VMwareDiskType) = Nothing) As VMwareVirtualDisk" />
      <MemberSignature Language="F#" Value="static member VMwareVirtualDisk : string * string * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareDiskMode&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareDiskType&gt; -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareVirtualDisk" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VMwareVirtualDisk (name, label, diskObjectId, diskSizeGB, deviceKey, diskMode, controllerKey, unitNumber, deviceName, diskType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareVirtualDisk</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="diskObjectId" Type="System.String" />
        <Parameter Name="diskSizeGB" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="deviceKey" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="diskMode" Type="System.Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareDiskMode&gt;" />
        <Parameter Name="controllerKey" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="unitNumber" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="deviceName" Type="System.String" />
        <Parameter Name="diskType" Type="System.Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareDiskType&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> Gets or sets the name of the virtual disk. </param>
        <param name="label"> Gets or sets the label of the virtual disk in vCenter. </param>
        <param name="diskObjectId"> Gets or sets the disk object id. </param>
        <param name="diskSizeGB"> Gets or sets the disk total size. </param>
        <param name="deviceKey"> Gets or sets the device key value. </param>
        <param name="diskMode"> Gets or sets the disk mode. </param>
        <param name="controllerKey"> Gets or sets the controller id. </param>
        <param name="unitNumber"> Gets or sets the unit number of the disk on the controller. </param>
        <param name="deviceName"> Gets or sets the device name. </param>
        <param name="diskType"> Gets or sets the disk backing type. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareVirtualDisk" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareVirtualDisk" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VMwareVirtualNetworkData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkData VMwareVirtualNetworkData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation = default, string kind = default, string uuid = default, string vCenterId = default, string moRefId = default, string inventoryItemId = default, string moName = default, string customResourceName = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt; statuses = default, Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkData VMwareVirtualNetworkData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation, string kind, string uuid, string vCenterId, string moRefId, string inventoryItemId, string moName, string customResourceName, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt; statuses, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VMwareVirtualNetworkData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus},System.Nullable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VMwareVirtualNetworkData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional extendedLocation As ExtendedLocation = Nothing, Optional kind As String = Nothing, Optional uuid As String = Nothing, Optional vCenterId As String = Nothing, Optional moRefId As String = Nothing, Optional inventoryItemId As String = Nothing, Optional moName As String = Nothing, Optional customResourceName As String = Nothing, Optional statuses As IEnumerable(Of VMwareResourceStatus) = Nothing, Optional provisioningState As Nullable(Of VMwareResourceProvisioningState) = Nothing) As VMwareVirtualNetworkData" />
      <MemberSignature Language="F#" Value="static member VMwareVirtualNetworkData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.Resources.Models.ExtendedLocation * string * string * string * string * string * string * string * seq&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt; * Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState&gt; -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkData" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VMwareVirtualNetworkData (id, name, resourceType, systemData, tags, location, extendedLocation, kind, uuid, vCenterId, moRefId, inventoryItemId, moName, customResourceName, statuses, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="extendedLocation" Type="Azure.ResourceManager.Resources.Models.ExtendedLocation" />
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="uuid" Type="System.String" />
        <Parameter Name="vCenterId" Type="System.String" />
        <Parameter Name="moRefId" Type="System.String" />
        <Parameter Name="inventoryItemId" Type="System.String" />
        <Parameter Name="moName" Type="System.String" />
        <Parameter Name="customResourceName" Type="System.String" />
        <Parameter Name="statuses" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="extendedLocation"> Gets or sets the extended location. </param>
        <param name="kind"> Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value. </param>
        <param name="uuid"> Gets or sets a unique identifier for this resource. </param>
        <param name="vCenterId"> Gets or sets the ARM Id of the vCenter resource in which this template resides. </param>
        <param name="moRefId"> Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual network. </param>
        <param name="inventoryItemId"> Gets or sets the inventory Item ID for the virtual network. </param>
        <param name="moName"> Gets or sets the vCenter Managed Object name for the virtual network. </param>
        <param name="customResourceName"> Gets the name of the corresponding resource in Kubernetes. </param>
        <param name="statuses"> The resource status information. </param>
        <param name="provisioningState"> Gets the provisioning state. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVirtualNetworkData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VMwareVmInstanceData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceData VMwareVmInstanceData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation = default, Azure.ResourceManager.ConnectedVMwarevSphere.Models.PlacementProfile placementProfile = default, Azure.ResourceManager.ConnectedVMwarevSphere.Models.OSProfileForVmInstance osProfile = default, Azure.ResourceManager.ConnectedVMwarevSphere.Models.VmInstanceHardwareProfile hardwareProfile = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareNetworkInterface&gt; networkInterfaces = default, Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareStorageProfile storageProfile = default, bool? secureBootEnabled = default, Azure.ResourceManager.ConnectedVMwarevSphere.Models.VCenterInfrastructureProfile infrastructureProfile = default, string powerState = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt; statuses = default, Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState? provisioningState = default, string resourceUid = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceData VMwareVmInstanceData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation, class Azure.ResourceManager.ConnectedVMwarevSphere.Models.PlacementProfile placementProfile, class Azure.ResourceManager.ConnectedVMwarevSphere.Models.OSProfileForVmInstance osProfile, class Azure.ResourceManager.ConnectedVMwarevSphere.Models.VmInstanceHardwareProfile hardwareProfile, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareNetworkInterface&gt; networkInterfaces, class Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareStorageProfile storageProfile, valuetype System.Nullable`1&lt;bool&gt; secureBootEnabled, class Azure.ResourceManager.ConnectedVMwarevSphere.Models.VCenterInfrastructureProfile infrastructureProfile, string powerState, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt; statuses, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState&gt; provisioningState, string resourceUid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VMwareVmInstanceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.Resources.Models.ExtendedLocation,Azure.ResourceManager.ConnectedVMwarevSphere.Models.PlacementProfile,Azure.ResourceManager.ConnectedVMwarevSphere.Models.OSProfileForVmInstance,Azure.ResourceManager.ConnectedVMwarevSphere.Models.VmInstanceHardwareProfile,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareNetworkInterface},Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareStorageProfile,System.Nullable{System.Boolean},Azure.ResourceManager.ConnectedVMwarevSphere.Models.VCenterInfrastructureProfile,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus},System.Nullable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VMwareVmInstanceData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional extendedLocation As ExtendedLocation = Nothing, Optional placementProfile As PlacementProfile = Nothing, Optional osProfile As OSProfileForVmInstance = Nothing, Optional hardwareProfile As VmInstanceHardwareProfile = Nothing, Optional networkInterfaces As IEnumerable(Of VMwareNetworkInterface) = Nothing, Optional storageProfile As VMwareStorageProfile = Nothing, Optional secureBootEnabled As Nullable(Of Boolean) = Nothing, Optional infrastructureProfile As VCenterInfrastructureProfile = Nothing, Optional powerState As String = Nothing, Optional statuses As IEnumerable(Of VMwareResourceStatus) = Nothing, Optional provisioningState As Nullable(Of VMwareResourceProvisioningState) = Nothing, Optional resourceUid As String = Nothing) As VMwareVmInstanceData" />
      <MemberSignature Language="F#" Value="static member VMwareVmInstanceData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.ResourceManager.Resources.Models.ExtendedLocation * Azure.ResourceManager.ConnectedVMwarevSphere.Models.PlacementProfile * Azure.ResourceManager.ConnectedVMwarevSphere.Models.OSProfileForVmInstance * Azure.ResourceManager.ConnectedVMwarevSphere.Models.VmInstanceHardwareProfile * seq&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareNetworkInterface&gt; * Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareStorageProfile * Nullable&lt;bool&gt; * Azure.ResourceManager.ConnectedVMwarevSphere.Models.VCenterInfrastructureProfile * string * seq&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt; * Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState&gt; * string -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceData" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VMwareVmInstanceData (id, name, resourceType, systemData, extendedLocation, placementProfile, osProfile, hardwareProfile, networkInterfaces, storageProfile, secureBootEnabled, infrastructureProfile, powerState, statuses, provisioningState, resourceUid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="extendedLocation" Type="Azure.ResourceManager.Resources.Models.ExtendedLocation" />
        <Parameter Name="placementProfile" Type="Azure.ResourceManager.ConnectedVMwarevSphere.Models.PlacementProfile" />
        <Parameter Name="osProfile" Type="Azure.ResourceManager.ConnectedVMwarevSphere.Models.OSProfileForVmInstance" />
        <Parameter Name="hardwareProfile" Type="Azure.ResourceManager.ConnectedVMwarevSphere.Models.VmInstanceHardwareProfile" />
        <Parameter Name="networkInterfaces" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareNetworkInterface&gt;" />
        <Parameter Name="storageProfile" Type="Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareStorageProfile" />
        <Parameter Name="secureBootEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="infrastructureProfile" Type="Azure.ResourceManager.ConnectedVMwarevSphere.Models.VCenterInfrastructureProfile" />
        <Parameter Name="powerState" Type="System.String" />
        <Parameter Name="statuses" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState&gt;" />
        <Parameter Name="resourceUid" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="extendedLocation"> Gets or sets the extended location. </param>
        <param name="placementProfile"> Placement properties. </param>
        <param name="osProfile"> OS properties. </param>
        <param name="hardwareProfile"> Hardware properties. </param>
        <param name="networkInterfaces"> Network properties. </param>
        <param name="storageProfile"> Storage properties. </param>
        <param name="secureBootEnabled"> Gets the security profile. </param>
        <param name="infrastructureProfile"> Gets the infrastructure profile. </param>
        <param name="powerState"> Gets the power state of the virtual machine. </param>
        <param name="statuses"> The resource status information. </param>
        <param name="provisioningState"> Gets the provisioning state. </param>
        <param name="resourceUid"> Gets or sets a unique identifier for the vm resource. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmInstanceData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VMwareVmTemplateData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateData VMwareVmTemplateData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation = default, string kind = default, string uuid = default, string vCenterId = default, string moRefId = default, string inventoryItemId = default, string moName = default, int? memorySizeMB = default, int? numCpus = default, int? numCoresPerSocket = default, Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareOSType? osType = default, string osName = default, string folderPath = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareNetworkInterface&gt; networkInterfaces = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareVirtualDisk&gt; disks = default, string customResourceName = default, string toolsVersionStatus = default, string toolsVersion = default, Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareFirmwareType? firmwareType = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt; statuses = default, Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState? provisioningState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateData VMwareVmTemplateData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Resources.Models.ExtendedLocation extendedLocation, string kind, string uuid, string vCenterId, string moRefId, string inventoryItemId, string moName, valuetype System.Nullable`1&lt;int32&gt; memorySizeMB, valuetype System.Nullable`1&lt;int32&gt; numCpus, valuetype System.Nullable`1&lt;int32&gt; numCoresPerSocket, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareOSType&gt; osType, string osName, string folderPath, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareNetworkInterface&gt; networkInterfaces, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareVirtualDisk&gt; disks, string customResourceName, string toolsVersionStatus, string toolsVersion, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareFirmwareType&gt; firmwareType, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt; statuses, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState&gt; provisioningState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VMwareVmTemplateData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.Resources.Models.ExtendedLocation,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareOSType},System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareNetworkInterface},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareVirtualDisk},System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareFirmwareType},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus},System.Nullable{Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VMwareVmTemplateData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional extendedLocation As ExtendedLocation = Nothing, Optional kind As String = Nothing, Optional uuid As String = Nothing, Optional vCenterId As String = Nothing, Optional moRefId As String = Nothing, Optional inventoryItemId As String = Nothing, Optional moName As String = Nothing, Optional memorySizeMB As Nullable(Of Integer) = Nothing, Optional numCpus As Nullable(Of Integer) = Nothing, Optional numCoresPerSocket As Nullable(Of Integer) = Nothing, Optional osType As Nullable(Of VMwareOSType) = Nothing, Optional osName As String = Nothing, Optional folderPath As String = Nothing, Optional networkInterfaces As IEnumerable(Of VMwareNetworkInterface) = Nothing, Optional disks As IEnumerable(Of VMwareVirtualDisk) = Nothing, Optional customResourceName As String = Nothing, Optional toolsVersionStatus As String = Nothing, Optional toolsVersion As String = Nothing, Optional firmwareType As Nullable(Of VMwareFirmwareType) = Nothing, Optional statuses As IEnumerable(Of VMwareResourceStatus) = Nothing, Optional provisioningState As Nullable(Of VMwareResourceProvisioningState) = Nothing) As VMwareVmTemplateData" />
      <MemberSignature Language="F#" Value="static member VMwareVmTemplateData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.Resources.Models.ExtendedLocation * string * string * string * string * string * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareOSType&gt; * string * string * seq&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareNetworkInterface&gt; * seq&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareVirtualDisk&gt; * string * string * string * Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareFirmwareType&gt; * seq&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt; * Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState&gt; -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateData" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.Models.ArmConnectedVMwarevSphereModelFactory.VMwareVmTemplateData (id, name, resourceType, systemData, tags, location, extendedLocation, kind, uuid, vCenterId, moRefId, inventoryItemId, moName, memorySizeMB, numCpus, numCoresPerSocket, osType, osName, folderPath, networkInterfaces, disks, customResourceName, toolsVersionStatus, toolsVersion, firmwareType, statuses, provisioningState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="extendedLocation" Type="Azure.ResourceManager.Resources.Models.ExtendedLocation" />
        <Parameter Name="kind" Type="System.String" />
        <Parameter Name="uuid" Type="System.String" />
        <Parameter Name="vCenterId" Type="System.String" />
        <Parameter Name="moRefId" Type="System.String" />
        <Parameter Name="inventoryItemId" Type="System.String" />
        <Parameter Name="moName" Type="System.String" />
        <Parameter Name="memorySizeMB" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="numCpus" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="numCoresPerSocket" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="osType" Type="System.Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareOSType&gt;" />
        <Parameter Name="osName" Type="System.String" />
        <Parameter Name="folderPath" Type="System.String" />
        <Parameter Name="networkInterfaces" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareNetworkInterface&gt;" />
        <Parameter Name="disks" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareVirtualDisk&gt;" />
        <Parameter Name="customResourceName" Type="System.String" />
        <Parameter Name="toolsVersionStatus" Type="System.String" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="firmwareType" Type="System.Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareFirmwareType&gt;" />
        <Parameter Name="statuses" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceStatus&gt;" />
        <Parameter Name="provisioningState" Type="System.Nullable&lt;Azure.ResourceManager.ConnectedVMwarevSphere.Models.VMwareResourceProvisioningState&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="extendedLocation"> Gets or sets the extended location. </param>
        <param name="kind"> Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value. </param>
        <param name="uuid"> Gets or sets a unique identifier for this resource. </param>
        <param name="vCenterId"> Gets or sets the ARM Id of the vCenter resource in which this template resides. </param>
        <param name="moRefId">
            Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine
            template.
            </param>
        <param name="inventoryItemId"> Gets or sets the inventory Item ID for the virtual machine template. </param>
        <param name="moName"> Gets or sets the vCenter Managed Object name for the virtual machine template. </param>
        <param name="memorySizeMB"> Gets or sets memory size in MBs for the template. </param>
        <param name="numCpus"> Gets or sets the number of vCPUs for the template. </param>
        <param name="numCoresPerSocket">
            Gets or sets the number of cores per socket for the template.
            Defaults to 1 if unspecified.
            </param>
        <param name="osType"> Gets or sets the type of the os. </param>
        <param name="osName"> Gets or sets os name. </param>
        <param name="folderPath"> Gets or sets the folder path of the template. </param>
        <param name="networkInterfaces"> Gets or sets the network interfaces of the template. </param>
        <param name="disks"> Gets or sets the disks the template. </param>
        <param name="customResourceName"> Gets the name of the corresponding resource in Kubernetes. </param>
        <param name="toolsVersionStatus"> Gets or sets the current version status of VMware Tools installed in the guest operating system. </param>
        <param name="toolsVersion"> Gets or sets the current version of VMware Tools. </param>
        <param name="firmwareType"> Firmware type. </param>
        <param name="statuses"> The resource status information. </param>
        <param name="provisioningState"> Gets the provisioning state. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateData" />. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.VMwareVmTemplateData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
