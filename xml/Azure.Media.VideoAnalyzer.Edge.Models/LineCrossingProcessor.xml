<Type Name="LineCrossingProcessor" FullName="Azure.Media.VideoAnalyzer.Edge.Models.LineCrossingProcessor">
  <TypeSignature Language="C#" Value="public class LineCrossingProcessor : Azure.Media.VideoAnalyzer.Edge.Models.ProcessorNodeBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LineCrossingProcessor extends Azure.Media.VideoAnalyzer.Edge.Models.ProcessorNodeBase" />
  <TypeSignature Language="DocId" Value="T:Azure.Media.VideoAnalyzer.Edge.Models.LineCrossingProcessor" />
  <TypeSignature Language="VB.NET" Value="Public Class LineCrossingProcessor&#xA;Inherits ProcessorNodeBase" />
  <TypeSignature Language="F#" Value="type LineCrossingProcessor = class&#xA;    inherit ProcessorNodeBase" />
  <AssemblyInfo>
    <AssemblyName>Azure.Media.VideoAnalyzer.Edge</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Media.VideoAnalyzer.Edge.Models.ProcessorNodeBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Line crossing processor allows for the detection of tracked objects moving across one or more predefined lines. It must be downstream of an object tracker of downstream on an AI extension node that generates sequenceId for objects which are tracked across different frames of the video. Inference events are generated every time objects crosses from one side of the line to another. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LineCrossingProcessor (string name, System.Collections.Generic.IEnumerable&lt;Azure.Media.VideoAnalyzer.Edge.Models.NodeInput&gt; inputs, System.Collections.Generic.IEnumerable&lt;Azure.Media.VideoAnalyzer.Edge.Models.NamedLineBase&gt; lines);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Media.VideoAnalyzer.Edge.Models.NodeInput&gt; inputs, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Media.VideoAnalyzer.Edge.Models.NamedLineBase&gt; lines) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Media.VideoAnalyzer.Edge.Models.LineCrossingProcessor.#ctor(System.String,System.Collections.Generic.IEnumerable{Azure.Media.VideoAnalyzer.Edge.Models.NodeInput},System.Collections.Generic.IEnumerable{Azure.Media.VideoAnalyzer.Edge.Models.NamedLineBase})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, inputs As IEnumerable(Of NodeInput), lines As IEnumerable(Of NamedLineBase))" />
      <MemberSignature Language="F#" Value="new Azure.Media.VideoAnalyzer.Edge.Models.LineCrossingProcessor : string * seq&lt;Azure.Media.VideoAnalyzer.Edge.Models.NodeInput&gt; * seq&lt;Azure.Media.VideoAnalyzer.Edge.Models.NamedLineBase&gt; -&gt; Azure.Media.VideoAnalyzer.Edge.Models.LineCrossingProcessor" Usage="new Azure.Media.VideoAnalyzer.Edge.Models.LineCrossingProcessor (name, inputs, lines)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Media.VideoAnalyzer.Edge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="inputs" Type="System.Collections.Generic.IEnumerable&lt;Azure.Media.VideoAnalyzer.Edge.Models.NodeInput&gt;" />
        <Parameter Name="lines" Type="System.Collections.Generic.IEnumerable&lt;Azure.Media.VideoAnalyzer.Edge.Models.NamedLineBase&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> Node name. Must be unique within the topology. </param>
        <param name="inputs"> An array of upstream node references within the topology to be used as inputs for this node. </param>
        <param name="lines"> An array of lines used to compute line crossing events. </param>
        <summary> Initializes a new instance of LineCrossingProcessor. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" />, <paramref name="inputs" /> or <paramref name="lines" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.Media.VideoAnalyzer.Edge.Models.NamedLineBase&gt; Lines { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.Media.VideoAnalyzer.Edge.Models.NamedLineBase&gt; Lines" />
      <MemberSignature Language="DocId" Value="P:Azure.Media.VideoAnalyzer.Edge.Models.LineCrossingProcessor.Lines" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Lines As IList(Of NamedLineBase)" />
      <MemberSignature Language="F#" Value="member this.Lines : System.Collections.Generic.IList&lt;Azure.Media.VideoAnalyzer.Edge.Models.NamedLineBase&gt;" Usage="Azure.Media.VideoAnalyzer.Edge.Models.LineCrossingProcessor.Lines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Media.VideoAnalyzer.Edge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.Media.VideoAnalyzer.Edge.Models.NamedLineBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> An array of lines used to compute line crossing events. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
