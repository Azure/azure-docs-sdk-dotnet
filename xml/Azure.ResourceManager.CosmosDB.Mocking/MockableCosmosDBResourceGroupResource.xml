<Type Name="MockableCosmosDBResourceGroupResource" FullName="Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableCosmosDBResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableCosmosDBResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableCosmosDBResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableCosmosDBResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
    <AssemblyVersion>1.3.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableCosmosDBResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCassandraCluster">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.CosmosDB.CassandraClusterResource&gt; GetCassandraCluster (string clusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.CosmosDB.CassandraClusterResource&gt; GetCassandraCluster(string clusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBResourceGroupResource.GetCassandraCluster(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCassandraCluster (clusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CassandraClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCassandraCluster : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CosmosDB.CassandraClusterResource&gt;&#xA;override this.GetCassandraCluster : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CosmosDB.CassandraClusterResource&gt;" Usage="mockableCosmosDBResourceGroupResource.GetCassandraCluster (clusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.CosmosDB.CassandraClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="clusterName"> Managed Cassandra cluster name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the properties of a managed Cassandra cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}</description></item><item><term>Operation Id</term><description>CassandraClusters_Get</description></item><item><term>Default Api Version</term><description>2024-05-15-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CosmosDB.CassandraClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clusterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCassandraClusterAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CosmosDB.CassandraClusterResource&gt;&gt; GetCassandraClusterAsync (string clusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.CosmosDB.CassandraClusterResource&gt;&gt; GetCassandraClusterAsync(string clusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBResourceGroupResource.GetCassandraClusterAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCassandraClusterAsync (clusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CassandraClusterResource))" />
      <MemberSignature Language="F#" Value="abstract member GetCassandraClusterAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CosmosDB.CassandraClusterResource&gt;&gt;&#xA;override this.GetCassandraClusterAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CosmosDB.CassandraClusterResource&gt;&gt;" Usage="mockableCosmosDBResourceGroupResource.GetCassandraClusterAsync (clusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CosmosDB.CassandraClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="clusterName"> Managed Cassandra cluster name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the properties of a managed Cassandra cluster.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}</description></item><item><term>Operation Id</term><description>CassandraClusters_Get</description></item><item><term>Default Api Version</term><description>2024-05-15-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CosmosDB.CassandraClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clusterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCassandraClusters">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.CassandraClusterCollection GetCassandraClusters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.CassandraClusterCollection GetCassandraClusters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBResourceGroupResource.GetCassandraClusters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCassandraClusters () As CassandraClusterCollection" />
      <MemberSignature Language="F#" Value="abstract member GetCassandraClusters : unit -&gt; Azure.ResourceManager.CosmosDB.CassandraClusterCollection&#xA;override this.GetCassandraClusters : unit -&gt; Azure.ResourceManager.CosmosDB.CassandraClusterCollection" Usage="mockableCosmosDBResourceGroupResource.GetCassandraClusters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.CassandraClusterCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of CassandraClusterResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of CassandraClusterResources and their operations over a CassandraClusterResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCosmosDBAccount">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.CosmosDB.CosmosDBAccountResource&gt; GetCosmosDBAccount (string accountName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.CosmosDB.CosmosDBAccountResource&gt; GetCosmosDBAccount(string accountName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBResourceGroupResource.GetCosmosDBAccount(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCosmosDBAccount (accountName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CosmosDBAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCosmosDBAccount : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CosmosDB.CosmosDBAccountResource&gt;&#xA;override this.GetCosmosDBAccount : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CosmosDB.CosmosDBAccountResource&gt;" Usage="mockableCosmosDBResourceGroupResource.GetCosmosDBAccount (accountName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.CosmosDB.CosmosDBAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="accountName"> Cosmos DB database account name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves the properties of an existing Azure Cosmos DB database account.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}</description></item><item><term>Operation Id</term><description>DatabaseAccounts_Get</description></item><item><term>Default Api Version</term><description>2024-05-15-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBAccountResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="accountName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCosmosDBAccountAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CosmosDB.CosmosDBAccountResource&gt;&gt; GetCosmosDBAccountAsync (string accountName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.CosmosDB.CosmosDBAccountResource&gt;&gt; GetCosmosDBAccountAsync(string accountName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBResourceGroupResource.GetCosmosDBAccountAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCosmosDBAccountAsync (accountName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CosmosDBAccountResource))" />
      <MemberSignature Language="F#" Value="abstract member GetCosmosDBAccountAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CosmosDB.CosmosDBAccountResource&gt;&gt;&#xA;override this.GetCosmosDBAccountAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CosmosDB.CosmosDBAccountResource&gt;&gt;" Usage="mockableCosmosDBResourceGroupResource.GetCosmosDBAccountAsync (accountName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CosmosDB.CosmosDBAccountResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="accountName"> Cosmos DB database account name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves the properties of an existing Azure Cosmos DB database account.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}</description></item><item><term>Operation Id</term><description>DatabaseAccounts_Get</description></item><item><term>Default Api Version</term><description>2024-05-15-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBAccountResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="accountName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCosmosDBAccounts">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.CosmosDBAccountCollection GetCosmosDBAccounts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.CosmosDBAccountCollection GetCosmosDBAccounts() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBResourceGroupResource.GetCosmosDBAccounts" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCosmosDBAccounts () As CosmosDBAccountCollection" />
      <MemberSignature Language="F#" Value="abstract member GetCosmosDBAccounts : unit -&gt; Azure.ResourceManager.CosmosDB.CosmosDBAccountCollection&#xA;override this.GetCosmosDBAccounts : unit -&gt; Azure.ResourceManager.CosmosDB.CosmosDBAccountCollection" Usage="mockableCosmosDBResourceGroupResource.GetCosmosDBAccounts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.CosmosDBAccountCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of CosmosDBAccountResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of CosmosDBAccountResources and their operations over a CosmosDBAccountResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCosmosDBThroughputPool">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolResource&gt; GetCosmosDBThroughputPool (string throughputPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolResource&gt; GetCosmosDBThroughputPool(string throughputPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBResourceGroupResource.GetCosmosDBThroughputPool(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCosmosDBThroughputPool (throughputPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CosmosDBThroughputPoolResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCosmosDBThroughputPool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolResource&gt;&#xA;override this.GetCosmosDBThroughputPool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolResource&gt;" Usage="mockableCosmosDBResourceGroupResource.GetCosmosDBThroughputPool (throughputPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="throughputPoolName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="throughputPoolName"> Cosmos DB Throughput Pool name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves the properties of an existing Azure Cosmos DB Throughput Pool
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/throughputPools/{throughputPoolName}</description></item><item><term>Operation Id</term><description>ThroughputPool_Get</description></item><item><term>Default Api Version</term><description>2024-05-15-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="throughputPoolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="throughputPoolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCosmosDBThroughputPoolAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolResource&gt;&gt; GetCosmosDBThroughputPoolAsync (string throughputPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolResource&gt;&gt; GetCosmosDBThroughputPoolAsync(string throughputPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBResourceGroupResource.GetCosmosDBThroughputPoolAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCosmosDBThroughputPoolAsync (throughputPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CosmosDBThroughputPoolResource))" />
      <MemberSignature Language="F#" Value="abstract member GetCosmosDBThroughputPoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolResource&gt;&gt;&#xA;override this.GetCosmosDBThroughputPoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolResource&gt;&gt;" Usage="mockableCosmosDBResourceGroupResource.GetCosmosDBThroughputPoolAsync (throughputPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="throughputPoolName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="throughputPoolName"> Cosmos DB Throughput Pool name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves the properties of an existing Azure Cosmos DB Throughput Pool
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/throughputPools/{throughputPoolName}</description></item><item><term>Operation Id</term><description>ThroughputPool_Get</description></item><item><term>Default Api Version</term><description>2024-05-15-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="throughputPoolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="throughputPoolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCosmosDBThroughputPools">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolCollection GetCosmosDBThroughputPools ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolCollection GetCosmosDBThroughputPools() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBResourceGroupResource.GetCosmosDBThroughputPools" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCosmosDBThroughputPools () As CosmosDBThroughputPoolCollection" />
      <MemberSignature Language="F#" Value="abstract member GetCosmosDBThroughputPools : unit -&gt; Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolCollection&#xA;override this.GetCosmosDBThroughputPools : unit -&gt; Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolCollection" Usage="mockableCosmosDBResourceGroupResource.GetCosmosDBThroughputPools " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of CosmosDBThroughputPoolResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of CosmosDBThroughputPoolResources and their operations over a CosmosDBThroughputPoolResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
