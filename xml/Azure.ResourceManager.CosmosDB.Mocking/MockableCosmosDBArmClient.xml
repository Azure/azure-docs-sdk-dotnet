<Type Name="MockableCosmosDBArmClient" FullName="Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient">
  <TypeSignature Language="C#" Value="public class MockableCosmosDBArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableCosmosDBArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableCosmosDBArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableCosmosDBArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
    <AssemblyVersion>1.3.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableCosmosDBArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCassandraClusterResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.CassandraClusterResource GetCassandraClusterResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.CassandraClusterResource GetCassandraClusterResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetCassandraClusterResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCassandraClusterResource (id As ResourceIdentifier) As CassandraClusterResource" />
      <MemberSignature Language="F#" Value="abstract member GetCassandraClusterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CassandraClusterResource&#xA;override this.GetCassandraClusterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CassandraClusterResource" Usage="mockableCosmosDBArmClient.GetCassandraClusterResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.CassandraClusterResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.CassandraClusterResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.CassandraClusterResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.CassandraClusterResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.CassandraClusterResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCassandraDataCenterResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.CassandraDataCenterResource GetCassandraDataCenterResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.CassandraDataCenterResource GetCassandraDataCenterResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetCassandraDataCenterResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCassandraDataCenterResource (id As ResourceIdentifier) As CassandraDataCenterResource" />
      <MemberSignature Language="F#" Value="abstract member GetCassandraDataCenterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CassandraDataCenterResource&#xA;override this.GetCassandraDataCenterResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CassandraDataCenterResource" Usage="mockableCosmosDBArmClient.GetCassandraDataCenterResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.CassandraDataCenterResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.CassandraDataCenterResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.CassandraDataCenterResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.CassandraDataCenterResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.CassandraDataCenterResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCassandraKeyspaceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.CassandraKeyspaceResource GetCassandraKeyspaceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.CassandraKeyspaceResource GetCassandraKeyspaceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetCassandraKeyspaceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCassandraKeyspaceResource (id As ResourceIdentifier) As CassandraKeyspaceResource" />
      <MemberSignature Language="F#" Value="abstract member GetCassandraKeyspaceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CassandraKeyspaceResource&#xA;override this.GetCassandraKeyspaceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CassandraKeyspaceResource" Usage="mockableCosmosDBArmClient.GetCassandraKeyspaceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.CassandraKeyspaceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.CassandraKeyspaceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.CassandraKeyspaceResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.CassandraKeyspaceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.CassandraKeyspaceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCassandraKeyspaceThroughputSettingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.CassandraKeyspaceThroughputSettingResource GetCassandraKeyspaceThroughputSettingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.CassandraKeyspaceThroughputSettingResource GetCassandraKeyspaceThroughputSettingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetCassandraKeyspaceThroughputSettingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCassandraKeyspaceThroughputSettingResource (id As ResourceIdentifier) As CassandraKeyspaceThroughputSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetCassandraKeyspaceThroughputSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CassandraKeyspaceThroughputSettingResource&#xA;override this.GetCassandraKeyspaceThroughputSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CassandraKeyspaceThroughputSettingResource" Usage="mockableCosmosDBArmClient.GetCassandraKeyspaceThroughputSettingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.CassandraKeyspaceThroughputSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.CassandraKeyspaceThroughputSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.CassandraKeyspaceThroughputSettingResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.CassandraKeyspaceThroughputSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.CassandraKeyspaceThroughputSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCassandraTableResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.CassandraTableResource GetCassandraTableResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.CassandraTableResource GetCassandraTableResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetCassandraTableResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCassandraTableResource (id As ResourceIdentifier) As CassandraTableResource" />
      <MemberSignature Language="F#" Value="abstract member GetCassandraTableResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CassandraTableResource&#xA;override this.GetCassandraTableResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CassandraTableResource" Usage="mockableCosmosDBArmClient.GetCassandraTableResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.CassandraTableResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.CassandraTableResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.CassandraTableResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.CassandraTableResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.CassandraTableResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCassandraTableThroughputSettingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.CassandraTableThroughputSettingResource GetCassandraTableThroughputSettingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.CassandraTableThroughputSettingResource GetCassandraTableThroughputSettingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetCassandraTableThroughputSettingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCassandraTableThroughputSettingResource (id As ResourceIdentifier) As CassandraTableThroughputSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetCassandraTableThroughputSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CassandraTableThroughputSettingResource&#xA;override this.GetCassandraTableThroughputSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CassandraTableThroughputSettingResource" Usage="mockableCosmosDBArmClient.GetCassandraTableThroughputSettingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.CassandraTableThroughputSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.CassandraTableThroughputSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.CassandraTableThroughputSettingResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.CassandraTableThroughputSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.CassandraTableThroughputSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCassandraViewGetResultResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.CassandraViewGetResultResource GetCassandraViewGetResultResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.CassandraViewGetResultResource GetCassandraViewGetResultResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetCassandraViewGetResultResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCassandraViewGetResultResource (id As ResourceIdentifier) As CassandraViewGetResultResource" />
      <MemberSignature Language="F#" Value="abstract member GetCassandraViewGetResultResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CassandraViewGetResultResource&#xA;override this.GetCassandraViewGetResultResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CassandraViewGetResultResource" Usage="mockableCosmosDBArmClient.GetCassandraViewGetResultResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.CassandraViewGetResultResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.CassandraViewGetResultResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.CassandraViewGetResultResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.CassandraViewGetResultResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.CassandraViewGetResultResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCassandraViewThroughputSettingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.CassandraViewThroughputSettingResource GetCassandraViewThroughputSettingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.CassandraViewThroughputSettingResource GetCassandraViewThroughputSettingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetCassandraViewThroughputSettingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCassandraViewThroughputSettingResource (id As ResourceIdentifier) As CassandraViewThroughputSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetCassandraViewThroughputSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CassandraViewThroughputSettingResource&#xA;override this.GetCassandraViewThroughputSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CassandraViewThroughputSettingResource" Usage="mockableCosmosDBArmClient.GetCassandraViewThroughputSettingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.CassandraViewThroughputSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.CassandraViewThroughputSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.CassandraViewThroughputSettingResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.CassandraViewThroughputSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.CassandraViewThroughputSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCosmosDBAccountResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.CosmosDBAccountResource GetCosmosDBAccountResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.CosmosDBAccountResource GetCosmosDBAccountResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetCosmosDBAccountResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCosmosDBAccountResource (id As ResourceIdentifier) As CosmosDBAccountResource" />
      <MemberSignature Language="F#" Value="abstract member GetCosmosDBAccountResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBAccountResource&#xA;override this.GetCosmosDBAccountResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBAccountResource" Usage="mockableCosmosDBArmClient.GetCosmosDBAccountResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.CosmosDBAccountResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBAccountResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.CosmosDBAccountResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBAccountResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBAccountResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCosmosDBLocationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.CosmosDBLocationResource GetCosmosDBLocationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.CosmosDBLocationResource GetCosmosDBLocationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetCosmosDBLocationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCosmosDBLocationResource (id As ResourceIdentifier) As CosmosDBLocationResource" />
      <MemberSignature Language="F#" Value="abstract member GetCosmosDBLocationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBLocationResource&#xA;override this.GetCosmosDBLocationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBLocationResource" Usage="mockableCosmosDBArmClient.GetCosmosDBLocationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.CosmosDBLocationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBLocationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.CosmosDBLocationResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBLocationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBLocationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCosmosDBPrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.CosmosDBPrivateEndpointConnectionResource GetCosmosDBPrivateEndpointConnectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.CosmosDBPrivateEndpointConnectionResource GetCosmosDBPrivateEndpointConnectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetCosmosDBPrivateEndpointConnectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCosmosDBPrivateEndpointConnectionResource (id As ResourceIdentifier) As CosmosDBPrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetCosmosDBPrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBPrivateEndpointConnectionResource&#xA;override this.GetCosmosDBPrivateEndpointConnectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBPrivateEndpointConnectionResource" Usage="mockableCosmosDBArmClient.GetCosmosDBPrivateEndpointConnectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.CosmosDBPrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.CosmosDBPrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBPrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBPrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCosmosDBPrivateLinkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.CosmosDBPrivateLinkResource GetCosmosDBPrivateLinkResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.CosmosDBPrivateLinkResource GetCosmosDBPrivateLinkResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetCosmosDBPrivateLinkResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCosmosDBPrivateLinkResource (id As ResourceIdentifier) As CosmosDBPrivateLinkResource" />
      <MemberSignature Language="F#" Value="abstract member GetCosmosDBPrivateLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBPrivateLinkResource&#xA;override this.GetCosmosDBPrivateLinkResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBPrivateLinkResource" Usage="mockableCosmosDBArmClient.GetCosmosDBPrivateLinkResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.CosmosDBPrivateLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBPrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.CosmosDBPrivateLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBPrivateLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBPrivateLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCosmosDBServiceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.CosmosDBServiceResource GetCosmosDBServiceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.CosmosDBServiceResource GetCosmosDBServiceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetCosmosDBServiceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCosmosDBServiceResource (id As ResourceIdentifier) As CosmosDBServiceResource" />
      <MemberSignature Language="F#" Value="abstract member GetCosmosDBServiceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBServiceResource&#xA;override this.GetCosmosDBServiceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBServiceResource" Usage="mockableCosmosDBArmClient.GetCosmosDBServiceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.CosmosDBServiceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBServiceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.CosmosDBServiceResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBServiceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBServiceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCosmosDBSqlClientEncryptionKeyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.CosmosDBSqlClientEncryptionKeyResource GetCosmosDBSqlClientEncryptionKeyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.CosmosDBSqlClientEncryptionKeyResource GetCosmosDBSqlClientEncryptionKeyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetCosmosDBSqlClientEncryptionKeyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCosmosDBSqlClientEncryptionKeyResource (id As ResourceIdentifier) As CosmosDBSqlClientEncryptionKeyResource" />
      <MemberSignature Language="F#" Value="abstract member GetCosmosDBSqlClientEncryptionKeyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBSqlClientEncryptionKeyResource&#xA;override this.GetCosmosDBSqlClientEncryptionKeyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBSqlClientEncryptionKeyResource" Usage="mockableCosmosDBArmClient.GetCosmosDBSqlClientEncryptionKeyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.CosmosDBSqlClientEncryptionKeyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBSqlClientEncryptionKeyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.CosmosDBSqlClientEncryptionKeyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBSqlClientEncryptionKeyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBSqlClientEncryptionKeyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCosmosDBSqlContainerResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.CosmosDBSqlContainerResource GetCosmosDBSqlContainerResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.CosmosDBSqlContainerResource GetCosmosDBSqlContainerResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetCosmosDBSqlContainerResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCosmosDBSqlContainerResource (id As ResourceIdentifier) As CosmosDBSqlContainerResource" />
      <MemberSignature Language="F#" Value="abstract member GetCosmosDBSqlContainerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBSqlContainerResource&#xA;override this.GetCosmosDBSqlContainerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBSqlContainerResource" Usage="mockableCosmosDBArmClient.GetCosmosDBSqlContainerResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.CosmosDBSqlContainerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBSqlContainerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.CosmosDBSqlContainerResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBSqlContainerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBSqlContainerResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCosmosDBSqlContainerThroughputSettingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.CosmosDBSqlContainerThroughputSettingResource GetCosmosDBSqlContainerThroughputSettingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.CosmosDBSqlContainerThroughputSettingResource GetCosmosDBSqlContainerThroughputSettingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetCosmosDBSqlContainerThroughputSettingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCosmosDBSqlContainerThroughputSettingResource (id As ResourceIdentifier) As CosmosDBSqlContainerThroughputSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetCosmosDBSqlContainerThroughputSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBSqlContainerThroughputSettingResource&#xA;override this.GetCosmosDBSqlContainerThroughputSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBSqlContainerThroughputSettingResource" Usage="mockableCosmosDBArmClient.GetCosmosDBSqlContainerThroughputSettingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.CosmosDBSqlContainerThroughputSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBSqlContainerThroughputSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.CosmosDBSqlContainerThroughputSettingResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBSqlContainerThroughputSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBSqlContainerThroughputSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCosmosDBSqlDatabaseResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.CosmosDBSqlDatabaseResource GetCosmosDBSqlDatabaseResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.CosmosDBSqlDatabaseResource GetCosmosDBSqlDatabaseResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetCosmosDBSqlDatabaseResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCosmosDBSqlDatabaseResource (id As ResourceIdentifier) As CosmosDBSqlDatabaseResource" />
      <MemberSignature Language="F#" Value="abstract member GetCosmosDBSqlDatabaseResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBSqlDatabaseResource&#xA;override this.GetCosmosDBSqlDatabaseResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBSqlDatabaseResource" Usage="mockableCosmosDBArmClient.GetCosmosDBSqlDatabaseResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.CosmosDBSqlDatabaseResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBSqlDatabaseResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.CosmosDBSqlDatabaseResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBSqlDatabaseResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBSqlDatabaseResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCosmosDBSqlDatabaseThroughputSettingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.CosmosDBSqlDatabaseThroughputSettingResource GetCosmosDBSqlDatabaseThroughputSettingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.CosmosDBSqlDatabaseThroughputSettingResource GetCosmosDBSqlDatabaseThroughputSettingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetCosmosDBSqlDatabaseThroughputSettingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCosmosDBSqlDatabaseThroughputSettingResource (id As ResourceIdentifier) As CosmosDBSqlDatabaseThroughputSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetCosmosDBSqlDatabaseThroughputSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBSqlDatabaseThroughputSettingResource&#xA;override this.GetCosmosDBSqlDatabaseThroughputSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBSqlDatabaseThroughputSettingResource" Usage="mockableCosmosDBArmClient.GetCosmosDBSqlDatabaseThroughputSettingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.CosmosDBSqlDatabaseThroughputSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBSqlDatabaseThroughputSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.CosmosDBSqlDatabaseThroughputSettingResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBSqlDatabaseThroughputSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBSqlDatabaseThroughputSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCosmosDBSqlRoleAssignmentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.CosmosDBSqlRoleAssignmentResource GetCosmosDBSqlRoleAssignmentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.CosmosDBSqlRoleAssignmentResource GetCosmosDBSqlRoleAssignmentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetCosmosDBSqlRoleAssignmentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCosmosDBSqlRoleAssignmentResource (id As ResourceIdentifier) As CosmosDBSqlRoleAssignmentResource" />
      <MemberSignature Language="F#" Value="abstract member GetCosmosDBSqlRoleAssignmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBSqlRoleAssignmentResource&#xA;override this.GetCosmosDBSqlRoleAssignmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBSqlRoleAssignmentResource" Usage="mockableCosmosDBArmClient.GetCosmosDBSqlRoleAssignmentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.CosmosDBSqlRoleAssignmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBSqlRoleAssignmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.CosmosDBSqlRoleAssignmentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBSqlRoleAssignmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBSqlRoleAssignmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCosmosDBSqlRoleDefinitionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.CosmosDBSqlRoleDefinitionResource GetCosmosDBSqlRoleDefinitionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.CosmosDBSqlRoleDefinitionResource GetCosmosDBSqlRoleDefinitionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetCosmosDBSqlRoleDefinitionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCosmosDBSqlRoleDefinitionResource (id As ResourceIdentifier) As CosmosDBSqlRoleDefinitionResource" />
      <MemberSignature Language="F#" Value="abstract member GetCosmosDBSqlRoleDefinitionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBSqlRoleDefinitionResource&#xA;override this.GetCosmosDBSqlRoleDefinitionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBSqlRoleDefinitionResource" Usage="mockableCosmosDBArmClient.GetCosmosDBSqlRoleDefinitionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.CosmosDBSqlRoleDefinitionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBSqlRoleDefinitionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.CosmosDBSqlRoleDefinitionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBSqlRoleDefinitionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBSqlRoleDefinitionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCosmosDBSqlStoredProcedureResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.CosmosDBSqlStoredProcedureResource GetCosmosDBSqlStoredProcedureResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.CosmosDBSqlStoredProcedureResource GetCosmosDBSqlStoredProcedureResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetCosmosDBSqlStoredProcedureResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCosmosDBSqlStoredProcedureResource (id As ResourceIdentifier) As CosmosDBSqlStoredProcedureResource" />
      <MemberSignature Language="F#" Value="abstract member GetCosmosDBSqlStoredProcedureResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBSqlStoredProcedureResource&#xA;override this.GetCosmosDBSqlStoredProcedureResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBSqlStoredProcedureResource" Usage="mockableCosmosDBArmClient.GetCosmosDBSqlStoredProcedureResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.CosmosDBSqlStoredProcedureResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBSqlStoredProcedureResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.CosmosDBSqlStoredProcedureResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBSqlStoredProcedureResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBSqlStoredProcedureResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCosmosDBSqlTriggerResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.CosmosDBSqlTriggerResource GetCosmosDBSqlTriggerResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.CosmosDBSqlTriggerResource GetCosmosDBSqlTriggerResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetCosmosDBSqlTriggerResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCosmosDBSqlTriggerResource (id As ResourceIdentifier) As CosmosDBSqlTriggerResource" />
      <MemberSignature Language="F#" Value="abstract member GetCosmosDBSqlTriggerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBSqlTriggerResource&#xA;override this.GetCosmosDBSqlTriggerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBSqlTriggerResource" Usage="mockableCosmosDBArmClient.GetCosmosDBSqlTriggerResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.CosmosDBSqlTriggerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBSqlTriggerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.CosmosDBSqlTriggerResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBSqlTriggerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBSqlTriggerResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCosmosDBSqlUserDefinedFunctionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.CosmosDBSqlUserDefinedFunctionResource GetCosmosDBSqlUserDefinedFunctionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.CosmosDBSqlUserDefinedFunctionResource GetCosmosDBSqlUserDefinedFunctionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetCosmosDBSqlUserDefinedFunctionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCosmosDBSqlUserDefinedFunctionResource (id As ResourceIdentifier) As CosmosDBSqlUserDefinedFunctionResource" />
      <MemberSignature Language="F#" Value="abstract member GetCosmosDBSqlUserDefinedFunctionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBSqlUserDefinedFunctionResource&#xA;override this.GetCosmosDBSqlUserDefinedFunctionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBSqlUserDefinedFunctionResource" Usage="mockableCosmosDBArmClient.GetCosmosDBSqlUserDefinedFunctionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.CosmosDBSqlUserDefinedFunctionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBSqlUserDefinedFunctionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.CosmosDBSqlUserDefinedFunctionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBSqlUserDefinedFunctionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBSqlUserDefinedFunctionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCosmosDBTableResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.CosmosDBTableResource GetCosmosDBTableResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.CosmosDBTableResource GetCosmosDBTableResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetCosmosDBTableResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCosmosDBTableResource (id As ResourceIdentifier) As CosmosDBTableResource" />
      <MemberSignature Language="F#" Value="abstract member GetCosmosDBTableResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBTableResource&#xA;override this.GetCosmosDBTableResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBTableResource" Usage="mockableCosmosDBArmClient.GetCosmosDBTableResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.CosmosDBTableResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBTableResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.CosmosDBTableResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBTableResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBTableResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCosmosDBThroughputPoolAccountResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolAccountResource GetCosmosDBThroughputPoolAccountResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolAccountResource GetCosmosDBThroughputPoolAccountResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetCosmosDBThroughputPoolAccountResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCosmosDBThroughputPoolAccountResource (id As ResourceIdentifier) As CosmosDBThroughputPoolAccountResource" />
      <MemberSignature Language="F#" Value="abstract member GetCosmosDBThroughputPoolAccountResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolAccountResource&#xA;override this.GetCosmosDBThroughputPoolAccountResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolAccountResource" Usage="mockableCosmosDBArmClient.GetCosmosDBThroughputPoolAccountResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolAccountResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolAccountResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolAccountResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolAccountResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolAccountResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCosmosDBThroughputPoolResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolResource GetCosmosDBThroughputPoolResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolResource GetCosmosDBThroughputPoolResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetCosmosDBThroughputPoolResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCosmosDBThroughputPoolResource (id As ResourceIdentifier) As CosmosDBThroughputPoolResource" />
      <MemberSignature Language="F#" Value="abstract member GetCosmosDBThroughputPoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolResource&#xA;override this.GetCosmosDBThroughputPoolResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolResource" Usage="mockableCosmosDBArmClient.GetCosmosDBThroughputPoolResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosDBThroughputPoolResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCosmosTableThroughputSettingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.CosmosTableThroughputSettingResource GetCosmosTableThroughputSettingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.CosmosTableThroughputSettingResource GetCosmosTableThroughputSettingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetCosmosTableThroughputSettingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCosmosTableThroughputSettingResource (id As ResourceIdentifier) As CosmosTableThroughputSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetCosmosTableThroughputSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosTableThroughputSettingResource&#xA;override this.GetCosmosTableThroughputSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.CosmosTableThroughputSettingResource" Usage="mockableCosmosDBArmClient.GetCosmosTableThroughputSettingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.CosmosTableThroughputSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosTableThroughputSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.CosmosTableThroughputSettingResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosTableThroughputSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.CosmosTableThroughputSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataTransferJobGetResultResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.DataTransferJobGetResultResource GetDataTransferJobGetResultResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.DataTransferJobGetResultResource GetDataTransferJobGetResultResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetDataTransferJobGetResultResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataTransferJobGetResultResource (id As ResourceIdentifier) As DataTransferJobGetResultResource" />
      <MemberSignature Language="F#" Value="abstract member GetDataTransferJobGetResultResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.DataTransferJobGetResultResource&#xA;override this.GetDataTransferJobGetResultResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.DataTransferJobGetResultResource" Usage="mockableCosmosDBArmClient.GetDataTransferJobGetResultResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.DataTransferJobGetResultResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.DataTransferJobGetResultResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.DataTransferJobGetResultResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.DataTransferJobGetResultResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.DataTransferJobGetResultResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGraphResourceGetResultResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.GraphResourceGetResultResource GetGraphResourceGetResultResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.GraphResourceGetResultResource GetGraphResourceGetResultResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetGraphResourceGetResultResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGraphResourceGetResultResource (id As ResourceIdentifier) As GraphResourceGetResultResource" />
      <MemberSignature Language="F#" Value="abstract member GetGraphResourceGetResultResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.GraphResourceGetResultResource&#xA;override this.GetGraphResourceGetResultResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.GraphResourceGetResultResource" Usage="mockableCosmosDBArmClient.GetGraphResourceGetResultResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.GraphResourceGetResultResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.GraphResourceGetResultResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.GraphResourceGetResultResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.GraphResourceGetResultResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.GraphResourceGetResultResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGremlinDatabaseResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.GremlinDatabaseResource GetGremlinDatabaseResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.GremlinDatabaseResource GetGremlinDatabaseResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetGremlinDatabaseResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGremlinDatabaseResource (id As ResourceIdentifier) As GremlinDatabaseResource" />
      <MemberSignature Language="F#" Value="abstract member GetGremlinDatabaseResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.GremlinDatabaseResource&#xA;override this.GetGremlinDatabaseResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.GremlinDatabaseResource" Usage="mockableCosmosDBArmClient.GetGremlinDatabaseResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.GremlinDatabaseResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.GremlinDatabaseResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.GremlinDatabaseResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.GremlinDatabaseResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.GremlinDatabaseResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGremlinDatabaseThroughputSettingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.GremlinDatabaseThroughputSettingResource GetGremlinDatabaseThroughputSettingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.GremlinDatabaseThroughputSettingResource GetGremlinDatabaseThroughputSettingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetGremlinDatabaseThroughputSettingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGremlinDatabaseThroughputSettingResource (id As ResourceIdentifier) As GremlinDatabaseThroughputSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetGremlinDatabaseThroughputSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.GremlinDatabaseThroughputSettingResource&#xA;override this.GetGremlinDatabaseThroughputSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.GremlinDatabaseThroughputSettingResource" Usage="mockableCosmosDBArmClient.GetGremlinDatabaseThroughputSettingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.GremlinDatabaseThroughputSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.GremlinDatabaseThroughputSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.GremlinDatabaseThroughputSettingResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.GremlinDatabaseThroughputSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.GremlinDatabaseThroughputSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGremlinGraphResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.GremlinGraphResource GetGremlinGraphResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.GremlinGraphResource GetGremlinGraphResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetGremlinGraphResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGremlinGraphResource (id As ResourceIdentifier) As GremlinGraphResource" />
      <MemberSignature Language="F#" Value="abstract member GetGremlinGraphResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.GremlinGraphResource&#xA;override this.GetGremlinGraphResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.GremlinGraphResource" Usage="mockableCosmosDBArmClient.GetGremlinGraphResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.GremlinGraphResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.GremlinGraphResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.GremlinGraphResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.GremlinGraphResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.GremlinGraphResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGremlinGraphThroughputSettingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.GremlinGraphThroughputSettingResource GetGremlinGraphThroughputSettingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.GremlinGraphThroughputSettingResource GetGremlinGraphThroughputSettingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetGremlinGraphThroughputSettingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGremlinGraphThroughputSettingResource (id As ResourceIdentifier) As GremlinGraphThroughputSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetGremlinGraphThroughputSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.GremlinGraphThroughputSettingResource&#xA;override this.GetGremlinGraphThroughputSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.GremlinGraphThroughputSettingResource" Usage="mockableCosmosDBArmClient.GetGremlinGraphThroughputSettingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.GremlinGraphThroughputSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.GremlinGraphThroughputSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.GremlinGraphThroughputSettingResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.GremlinGraphThroughputSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.GremlinGraphThroughputSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMongoDBCollectionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.MongoDBCollectionResource GetMongoDBCollectionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.MongoDBCollectionResource GetMongoDBCollectionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetMongoDBCollectionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMongoDBCollectionResource (id As ResourceIdentifier) As MongoDBCollectionResource" />
      <MemberSignature Language="F#" Value="abstract member GetMongoDBCollectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.MongoDBCollectionResource&#xA;override this.GetMongoDBCollectionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.MongoDBCollectionResource" Usage="mockableCosmosDBArmClient.GetMongoDBCollectionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.MongoDBCollectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.MongoDBCollectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.MongoDBCollectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.MongoDBCollectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.MongoDBCollectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMongoDBCollectionThroughputSettingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.MongoDBCollectionThroughputSettingResource GetMongoDBCollectionThroughputSettingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.MongoDBCollectionThroughputSettingResource GetMongoDBCollectionThroughputSettingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetMongoDBCollectionThroughputSettingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMongoDBCollectionThroughputSettingResource (id As ResourceIdentifier) As MongoDBCollectionThroughputSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetMongoDBCollectionThroughputSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.MongoDBCollectionThroughputSettingResource&#xA;override this.GetMongoDBCollectionThroughputSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.MongoDBCollectionThroughputSettingResource" Usage="mockableCosmosDBArmClient.GetMongoDBCollectionThroughputSettingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.MongoDBCollectionThroughputSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.MongoDBCollectionThroughputSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.MongoDBCollectionThroughputSettingResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.MongoDBCollectionThroughputSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.MongoDBCollectionThroughputSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMongoDBDatabaseResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.MongoDBDatabaseResource GetMongoDBDatabaseResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.MongoDBDatabaseResource GetMongoDBDatabaseResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetMongoDBDatabaseResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMongoDBDatabaseResource (id As ResourceIdentifier) As MongoDBDatabaseResource" />
      <MemberSignature Language="F#" Value="abstract member GetMongoDBDatabaseResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.MongoDBDatabaseResource&#xA;override this.GetMongoDBDatabaseResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.MongoDBDatabaseResource" Usage="mockableCosmosDBArmClient.GetMongoDBDatabaseResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.MongoDBDatabaseResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.MongoDBDatabaseResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.MongoDBDatabaseResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.MongoDBDatabaseResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.MongoDBDatabaseResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMongoDBDatabaseThroughputSettingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.MongoDBDatabaseThroughputSettingResource GetMongoDBDatabaseThroughputSettingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.MongoDBDatabaseThroughputSettingResource GetMongoDBDatabaseThroughputSettingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetMongoDBDatabaseThroughputSettingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMongoDBDatabaseThroughputSettingResource (id As ResourceIdentifier) As MongoDBDatabaseThroughputSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetMongoDBDatabaseThroughputSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.MongoDBDatabaseThroughputSettingResource&#xA;override this.GetMongoDBDatabaseThroughputSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.MongoDBDatabaseThroughputSettingResource" Usage="mockableCosmosDBArmClient.GetMongoDBDatabaseThroughputSettingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.MongoDBDatabaseThroughputSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.MongoDBDatabaseThroughputSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.MongoDBDatabaseThroughputSettingResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.MongoDBDatabaseThroughputSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.MongoDBDatabaseThroughputSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMongoDBRoleDefinitionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.MongoDBRoleDefinitionResource GetMongoDBRoleDefinitionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.MongoDBRoleDefinitionResource GetMongoDBRoleDefinitionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetMongoDBRoleDefinitionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMongoDBRoleDefinitionResource (id As ResourceIdentifier) As MongoDBRoleDefinitionResource" />
      <MemberSignature Language="F#" Value="abstract member GetMongoDBRoleDefinitionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.MongoDBRoleDefinitionResource&#xA;override this.GetMongoDBRoleDefinitionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.MongoDBRoleDefinitionResource" Usage="mockableCosmosDBArmClient.GetMongoDBRoleDefinitionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.MongoDBRoleDefinitionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.MongoDBRoleDefinitionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.MongoDBRoleDefinitionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.MongoDBRoleDefinitionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.MongoDBRoleDefinitionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMongoDBUserDefinitionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.MongoDBUserDefinitionResource GetMongoDBUserDefinitionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.MongoDBUserDefinitionResource GetMongoDBUserDefinitionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetMongoDBUserDefinitionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMongoDBUserDefinitionResource (id As ResourceIdentifier) As MongoDBUserDefinitionResource" />
      <MemberSignature Language="F#" Value="abstract member GetMongoDBUserDefinitionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.MongoDBUserDefinitionResource&#xA;override this.GetMongoDBUserDefinitionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.MongoDBUserDefinitionResource" Usage="mockableCosmosDBArmClient.GetMongoDBUserDefinitionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.MongoDBUserDefinitionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.MongoDBUserDefinitionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.MongoDBUserDefinitionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.MongoDBUserDefinitionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.MongoDBUserDefinitionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkSecurityPerimeterConfigurationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.NetworkSecurityPerimeterConfigurationResource GetNetworkSecurityPerimeterConfigurationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.NetworkSecurityPerimeterConfigurationResource GetNetworkSecurityPerimeterConfigurationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetNetworkSecurityPerimeterConfigurationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkSecurityPerimeterConfigurationResource (id As ResourceIdentifier) As NetworkSecurityPerimeterConfigurationResource" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkSecurityPerimeterConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.NetworkSecurityPerimeterConfigurationResource&#xA;override this.GetNetworkSecurityPerimeterConfigurationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.NetworkSecurityPerimeterConfigurationResource" Usage="mockableCosmosDBArmClient.GetNetworkSecurityPerimeterConfigurationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.NetworkSecurityPerimeterConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.NetworkSecurityPerimeterConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.NetworkSecurityPerimeterConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.NetworkSecurityPerimeterConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.NetworkSecurityPerimeterConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRestorableCosmosDBAccountResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.CosmosDB.RestorableCosmosDBAccountResource GetRestorableCosmosDBAccountResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.CosmosDB.RestorableCosmosDBAccountResource GetRestorableCosmosDBAccountResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.CosmosDB.Mocking.MockableCosmosDBArmClient.GetRestorableCosmosDBAccountResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRestorableCosmosDBAccountResource (id As ResourceIdentifier) As RestorableCosmosDBAccountResource" />
      <MemberSignature Language="F#" Value="abstract member GetRestorableCosmosDBAccountResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.RestorableCosmosDBAccountResource&#xA;override this.GetRestorableCosmosDBAccountResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.CosmosDB.RestorableCosmosDBAccountResource" Usage="mockableCosmosDBArmClient.GetRestorableCosmosDBAccountResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.CosmosDB</AssemblyName>
        <AssemblyVersion>1.3.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.CosmosDB.RestorableCosmosDBAccountResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.CosmosDB.RestorableCosmosDBAccountResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.CosmosDB.RestorableCosmosDBAccountResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.Guid)" /> to create a <see cref="T:Azure.ResourceManager.CosmosDB.RestorableCosmosDBAccountResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.CosmosDB.RestorableCosmosDBAccountResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
