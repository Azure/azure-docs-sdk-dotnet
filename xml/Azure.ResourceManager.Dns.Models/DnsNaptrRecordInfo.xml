<Type Name="DnsNaptrRecordInfo" FullName="Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo">
  <TypeSignature Language="C#" Value="public class DnsNaptrRecordInfo : System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DnsNaptrRecordInfo extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class DnsNaptrRecordInfo&#xA;Implements IJsonModel(Of DnsNaptrRecordInfo), IPersistableModel(Of DnsNaptrRecordInfo)" />
  <TypeSignature Language="F#" Value="type DnsNaptrRecordInfo = class&#xA;    interface IJsonModel&lt;DnsNaptrRecordInfo&gt;&#xA;    interface IPersistableModel&lt;DnsNaptrRecordInfo&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> A NAPTR record. For more information about the NAPTR record format, see RFC 3403: https://www.rfc-editor.org/rfc/rfc3403. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DnsNaptrRecordInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo" />. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public string Flags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Flags" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Property Flags As String" />
      <MemberSignature Language="F#" Value="member this.Flags : string with get, set" Usage="Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The flags specific to DDDS applications. Values currently defined in RFC 3404 are uppercase and lowercase letters "A", "P", "S", and "U", and the empty string, "". Enclose Flags in quotation marks. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int? Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; Order" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo.Order" />
      <MemberSignature Language="VB.NET" Value="Public Property Order As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.Order : Nullable&lt;int&gt; with get, set" Usage="Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo.Order" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The order in which the NAPTR records MUST be processed in order to accurately represent the ordered list of rules. The ordering is from lowest to highest. Valid values: 0-65535. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Preference">
      <MemberSignature Language="C#" Value="public int? Preference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; Preference" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo.Preference" />
      <MemberSignature Language="VB.NET" Value="Public Property Preference As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.Preference : Nullable&lt;int&gt; with get, set" Usage="Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo.Preference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The preference specifies the order in which NAPTR records with equal 'order' values should be processed, low numbers being processed before high numbers. Valid values: 0-65535. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Regexp">
      <MemberSignature Language="C#" Value="public string Regexp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Regexp" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo.Regexp" />
      <MemberSignature Language="VB.NET" Value="Public Property Regexp As String" />
      <MemberSignature Language="F#" Value="member this.Regexp : string with get, set" Usage="Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo.Regexp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The regular expression that the DDDS application uses to convert an input value into an output value. For example: an IP phone system might use a regular expression to convert a phone number that is entered by a user into a SIP URI. Enclose the regular expression in quotation marks. Specify either a value for 'regexp' or a value for 'replacement'. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replacement">
      <MemberSignature Language="C#" Value="public string Replacement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Replacement" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo.Replacement" />
      <MemberSignature Language="VB.NET" Value="Public Property Replacement As String" />
      <MemberSignature Language="F#" Value="member this.Replacement : string with get, set" Usage="Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo.Replacement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The replacement is a fully qualified domain name (FQDN) of the next domain name that you want the DDDS application to submit a DNS query for. The DDDS application replaces the input value with the value specified for replacement. Specify either a value for 'regexp' or a value for 'replacement'. If you specify a value for 'regexp', specify a dot (.) for 'replacement'. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Services">
      <MemberSignature Language="C#" Value="public string Services { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Services" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo.Services" />
      <MemberSignature Language="VB.NET" Value="Public Property Services As String" />
      <MemberSignature Language="F#" Value="member this.Services : string with get, set" Usage="Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo.Services" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The services specific to DDDS applications. Enclose Services in quotation marks. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo IJsonModel&lt;DnsNaptrRecordInfo&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#Dns#Models#DnsNaptrRecordInfo&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As DnsNaptrRecordInfo Implements IJsonModel(Of DnsNaptrRecordInfo).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo" Usage="dnsNaptrRecordInfo.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;DnsNaptrRecordInfo&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo.System#ClientModel#Primitives#IJsonModel&lt;Azure#ResourceManager#Dns#Models#DnsNaptrRecordInfo&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of DnsNaptrRecordInfo).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="dnsNaptrRecordInfo.System.ClientModel.Primitives.IJsonModel&lt;Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo IPersistableModel&lt;DnsNaptrRecordInfo&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Dns#Models#DnsNaptrRecordInfo&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As DnsNaptrRecordInfo Implements IPersistableModel(Of DnsNaptrRecordInfo).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo" Usage="dnsNaptrRecordInfo.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;DnsNaptrRecordInfo&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Dns#Models#DnsNaptrRecordInfo&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of DnsNaptrRecordInfo).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="dnsNaptrRecordInfo.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;DnsNaptrRecordInfo&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo.System#ClientModel#Primitives#IPersistableModel&lt;Azure#ResourceManager#Dns#Models#DnsNaptrRecordInfo&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of DnsNaptrRecordInfo).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="dnsNaptrRecordInfo.System.ClientModel.Primitives.IPersistableModel&lt;Azure.ResourceManager.Dns.Models.DnsNaptrRecordInfo&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
