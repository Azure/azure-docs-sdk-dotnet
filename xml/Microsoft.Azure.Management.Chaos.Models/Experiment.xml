<Type Name="Experiment" FullName="Microsoft.Azure.Management.Chaos.Models.Experiment">
  <TypeSignature Language="C#" Value="public class Experiment : Microsoft.Azure.Management.Chaos.Models.TrackedResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Experiment extends Microsoft.Azure.Management.Chaos.Models.TrackedResource" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Chaos.Models.Experiment" />
  <TypeSignature Language="VB.NET" Value="Public Class Experiment&#xA;Inherits TrackedResource" />
  <TypeSignature Language="F#" Value="type Experiment = class&#xA;    inherit TrackedResource" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Chaos</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.Management.Chaos.Models.TrackedResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.Rest.Serialization.JsonTransformation]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.Rest.Serialization.JsonTransformation&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Model that represents a Experiment resource.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Experiment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Chaos.Models.Experiment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the Experiment class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Experiment (string location, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Chaos.Models.Step&gt; steps, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Chaos.Models.Selector&gt; selectors, string id = default, string name = default, string type = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Microsoft.Azure.Management.Chaos.Models.SystemData systemData = default, Microsoft.Azure.Management.Chaos.Models.ResourceIdentity identity = default, bool? startOnCreation = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string location, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.Chaos.Models.Step&gt; steps, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.Chaos.Models.Selector&gt; selectors, string id, string name, string type, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, class Microsoft.Azure.Management.Chaos.Models.SystemData systemData, class Microsoft.Azure.Management.Chaos.Models.ResourceIdentity identity, valuetype System.Nullable`1&lt;bool&gt; startOnCreation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Chaos.Models.Experiment.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Chaos.Models.Step},System.Collections.Generic.IList{Microsoft.Azure.Management.Chaos.Models.Selector},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Chaos.Models.SystemData,Microsoft.Azure.Management.Chaos.Models.ResourceIdentity,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (location As String, steps As IList(Of Step), selectors As IList(Of Selector), Optional id As String = Nothing, Optional name As String = Nothing, Optional type As String = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional systemData As SystemData = Nothing, Optional identity As ResourceIdentity = Nothing, Optional startOnCreation As Nullable(Of Boolean) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.Chaos.Models.Experiment : string * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Chaos.Models.Step&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Chaos.Models.Selector&gt; * string * string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * Microsoft.Azure.Management.Chaos.Models.SystemData * Microsoft.Azure.Management.Chaos.Models.ResourceIdentity * Nullable&lt;bool&gt; -&gt; Microsoft.Azure.Management.Chaos.Models.Experiment" Usage="new Microsoft.Azure.Management.Chaos.Models.Experiment (location, steps, selectors, id, name, type, tags, systemData, identity, startOnCreation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="location" Type="System.String" />
        <Parameter Name="steps" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Chaos.Models.Step&gt;" />
        <Parameter Name="selectors" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Chaos.Models.Selector&gt;" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="systemData" Type="Microsoft.Azure.Management.Chaos.Models.SystemData" />
        <Parameter Name="identity" Type="Microsoft.Azure.Management.Chaos.Models.ResourceIdentity" />
        <Parameter Name="startOnCreation" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="location">The geo-location where the resource
            lives</param>
        <param name="steps">List of steps.</param>
        <param name="selectors">List of selectors.</param>
        <param name="id">Fully qualified resource ID for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        <param name="name">The name of the resource</param>
        <param name="type">The type of the resource. E.g.
            "Microsoft.Compute/virtualMachines" or
            "Microsoft.Storage/storageAccounts"</param>
        <param name="tags">Resource tags.</param>
        <param name="systemData">The system metadata of the experiment
            resource.</param>
        <param name="identity">The identity of the experiment
            resource.</param>
        <param name="startOnCreation">A boolean value that indicates if
            experiment should be started on creation or not.</param>
        <summary>
            Initializes a new instance of the Experiment class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Chaos.Models.ResourceIdentity Identity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.Chaos.Models.ResourceIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Chaos.Models.Experiment.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Property Identity As ResourceIdentity" />
      <MemberSignature Language="F#" Value="member this.Identity : Microsoft.Azure.Management.Chaos.Models.ResourceIdentity with get, set" Usage="Microsoft.Azure.Management.Chaos.Models.Experiment.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="identity")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="identity")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Chaos.Models.ResourceIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the identity of the experiment resource.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Selectors">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Chaos.Models.Selector&gt; Selectors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.Chaos.Models.Selector&gt; Selectors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Chaos.Models.Experiment.Selectors" />
      <MemberSignature Language="VB.NET" Value="Public Property Selectors As IList(Of Selector)" />
      <MemberSignature Language="F#" Value="member this.Selectors : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Chaos.Models.Selector&gt; with get, set" Usage="Microsoft.Azure.Management.Chaos.Models.Experiment.Selectors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.selectors")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.selectors")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Chaos.Models.Selector&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets list of selectors.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartOnCreation">
      <MemberSignature Language="C#" Value="public bool? StartOnCreation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; StartOnCreation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Chaos.Models.Experiment.StartOnCreation" />
      <MemberSignature Language="VB.NET" Value="Public Property StartOnCreation As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.StartOnCreation : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Management.Chaos.Models.Experiment.StartOnCreation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.startOnCreation")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.startOnCreation")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a boolean value that indicates if experiment should be
            started on creation or not.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Steps">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Chaos.Models.Step&gt; Steps { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.Chaos.Models.Step&gt; Steps" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Chaos.Models.Experiment.Steps" />
      <MemberSignature Language="VB.NET" Value="Public Property Steps As IList(Of Step)" />
      <MemberSignature Language="F#" Value="member this.Steps : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Chaos.Models.Step&gt; with get, set" Usage="Microsoft.Azure.Management.Chaos.Models.Experiment.Steps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.steps")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.steps")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.Chaos.Models.Step&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets list of steps.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemData">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Chaos.Models.SystemData SystemData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.Chaos.Models.SystemData SystemData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Chaos.Models.Experiment.SystemData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SystemData As SystemData" />
      <MemberSignature Language="F#" Value="member this.SystemData : Microsoft.Azure.Management.Chaos.Models.SystemData" Usage="Microsoft.Azure.Management.Chaos.Models.Experiment.SystemData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="systemData")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="systemData")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Chaos.Models.SystemData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the system metadata of the experiment resource.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
