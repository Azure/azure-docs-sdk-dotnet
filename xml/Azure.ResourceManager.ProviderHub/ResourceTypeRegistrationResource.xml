<Type Name="ResourceTypeRegistrationResource" FullName="Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource">
  <TypeSignature Language="C#" Value="public class ResourceTypeRegistrationResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResourceTypeRegistrationResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourceTypeRegistrationResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type ResourceTypeRegistrationResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing a ResourceTypeRegistration along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetResourceTypeRegistrationResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.ProviderHub.ProviderRegistrationResource" /> using the GetResourceTypeRegistration method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ResourceTypeRegistrationResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string providerNamespace, string resourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string providerNamespace, string resourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource.CreateResourceIdentifier(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, providerNamespace As String, resourceType As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource.CreateResourceIdentifier (subscriptionId, providerNamespace, resourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="providerNamespace" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">To be added.</param>
        <param name="providerNamespace">To be added.</param>
        <param name="resourceType">To be added.</param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As ResourceTypeRegistrationData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationData" Usage="Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="resourceTypeRegistrationResource.Delete (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a resource type
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}
            Operation Id: ResourceTypeRegistrations_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="resourceTypeRegistrationResource.DeleteAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a resource type
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}
            Operation Id: ResourceTypeRegistrations_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of ResourceTypeRegistrationResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource&gt;" Usage="resourceTypeRegistrationResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a resource type details in the given subscription and provider.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}
            Operation Id: ResourceTypeRegistrations_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ResourceTypeRegistrationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource&gt;&gt;" Usage="resourceTypeRegistrationResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a resource type details in the given subscription and provider.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}
            Operation Id: ResourceTypeRegistrations_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSku">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource&gt; GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSku (string nestedResourceTypeFirst, string nestedResourceTypeSecond, string nestedResourceTypeThird, string sku, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource&gt; GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSku(string nestedResourceTypeFirst, string nestedResourceTypeSecond, string nestedResourceTypeThird, string sku, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource.GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSku(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSku (nestedResourceTypeFirst As String, nestedResourceTypeSecond As String, nestedResourceTypeThird As String, sku As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource)" />
      <MemberSignature Language="F#" Value="abstract member GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSku : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource&gt;&#xA;override this.GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSku : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource&gt;" Usage="resourceTypeRegistrationResource.GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSku (nestedResourceTypeFirst, nestedResourceTypeSecond, nestedResourceTypeThird, sku, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nestedResourceTypeFirst" Type="System.String" />
        <Parameter Name="nestedResourceTypeSecond" Type="System.String" />
        <Parameter Name="nestedResourceTypeThird" Type="System.String" />
        <Parameter Name="sku" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nestedResourceTypeFirst"> The first child resource type. </param>
        <param name="nestedResourceTypeSecond"> The second child resource type. </param>
        <param name="nestedResourceTypeThird"> The third child resource type. </param>
        <param name="sku"> The SKU. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the sku details for the given resource type and sku name.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}/resourcetypeRegistrations/{nestedResourceTypeFirst}/resourcetypeRegistrations/{nestedResourceTypeSecond}/resourcetypeRegistrations/{nestedResourceTypeThird}/skus/{sku}
            Operation Id: Skus_GetNestedResourceTypeThird
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="nestedResourceTypeFirst" />, <paramref name="nestedResourceTypeSecond" />, <paramref name="nestedResourceTypeThird" /> or <paramref name="sku" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="nestedResourceTypeFirst" />, <paramref name="nestedResourceTypeSecond" />, <paramref name="nestedResourceTypeThird" /> or <paramref name="sku" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource&gt;&gt; GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuAsync (string nestedResourceTypeFirst, string nestedResourceTypeSecond, string nestedResourceTypeThird, string sku, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource&gt;&gt; GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuAsync(string nestedResourceTypeFirst, string nestedResourceTypeSecond, string nestedResourceTypeThird, string sku, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource.GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuAsync (nestedResourceTypeFirst As String, nestedResourceTypeSecond As String, nestedResourceTypeThird As String, sku As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource))" />
      <MemberSignature Language="F#" Value="abstract member GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuAsync : string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource&gt;&gt;&#xA;override this.GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuAsync : string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource&gt;&gt;" Usage="resourceTypeRegistrationResource.GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuAsync (nestedResourceTypeFirst, nestedResourceTypeSecond, nestedResourceTypeThird, sku, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nestedResourceTypeFirst" Type="System.String" />
        <Parameter Name="nestedResourceTypeSecond" Type="System.String" />
        <Parameter Name="nestedResourceTypeThird" Type="System.String" />
        <Parameter Name="sku" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nestedResourceTypeFirst"> The first child resource type. </param>
        <param name="nestedResourceTypeSecond"> The second child resource type. </param>
        <param name="nestedResourceTypeThird"> The third child resource type. </param>
        <param name="sku"> The SKU. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the sku details for the given resource type and sku name.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}/resourcetypeRegistrations/{nestedResourceTypeFirst}/resourcetypeRegistrations/{nestedResourceTypeSecond}/resourcetypeRegistrations/{nestedResourceTypeThird}/skus/{sku}
            Operation Id: Skus_GetNestedResourceTypeThird
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="nestedResourceTypeFirst" />, <paramref name="nestedResourceTypeSecond" />, <paramref name="nestedResourceTypeThird" /> or <paramref name="sku" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="nestedResourceTypeFirst" />, <paramref name="nestedResourceTypeSecond" />, <paramref name="nestedResourceTypeThird" /> or <paramref name="sku" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkus">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuCollection GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkus (string nestedResourceTypeFirst, string nestedResourceTypeSecond, string nestedResourceTypeThird);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuCollection GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkus(string nestedResourceTypeFirst, string nestedResourceTypeSecond, string nestedResourceTypeThird) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource.GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkus(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkus (nestedResourceTypeFirst As String, nestedResourceTypeSecond As String, nestedResourceTypeThird As String) As ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuCollection" />
      <MemberSignature Language="F#" Value="abstract member GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkus : string * string * string -&gt; Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuCollection&#xA;override this.GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkus : string * string * string -&gt; Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuCollection" Usage="resourceTypeRegistrationResource.GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkus (nestedResourceTypeFirst, nestedResourceTypeSecond, nestedResourceTypeThird)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nestedResourceTypeFirst" Type="System.String" />
        <Parameter Name="nestedResourceTypeSecond" Type="System.String" />
        <Parameter Name="nestedResourceTypeThird" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="nestedResourceTypeFirst"> The first child resource type. </param>
        <param name="nestedResourceTypeSecond"> The second child resource type. </param>
        <param name="nestedResourceTypeThird"> The third child resource type. </param>
        <summary> Gets a collection of ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResources in the ResourceTypeRegistration. </summary>
        <returns> An object representing collection of ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResources and their operations over a ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="nestedResourceTypeFirst" />, <paramref name="nestedResourceTypeSecond" /> or <paramref name="nestedResourceTypeThird" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="nestedResourceTypeFirst" />, <paramref name="nestedResourceTypeSecond" /> or <paramref name="nestedResourceTypeThird" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSku">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource&gt; GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSku (string nestedResourceTypeFirst, string nestedResourceTypeSecond, string sku, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource&gt; GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSku(string nestedResourceTypeFirst, string nestedResourceTypeSecond, string sku, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource.GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSku(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSku (nestedResourceTypeFirst As String, nestedResourceTypeSecond As String, sku As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource)" />
      <MemberSignature Language="F#" Value="abstract member GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSku : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource&gt;&#xA;override this.GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSku : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource&gt;" Usage="resourceTypeRegistrationResource.GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSku (nestedResourceTypeFirst, nestedResourceTypeSecond, sku, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nestedResourceTypeFirst" Type="System.String" />
        <Parameter Name="nestedResourceTypeSecond" Type="System.String" />
        <Parameter Name="sku" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nestedResourceTypeFirst"> The first child resource type. </param>
        <param name="nestedResourceTypeSecond"> The second child resource type. </param>
        <param name="sku"> The SKU. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the sku details for the given resource type and sku name.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}/resourcetypeRegistrations/{nestedResourceTypeFirst}/resourcetypeRegistrations/{nestedResourceTypeSecond}/skus/{sku}
            Operation Id: Skus_GetNestedResourceTypeSecond
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="nestedResourceTypeFirst" />, <paramref name="nestedResourceTypeSecond" /> or <paramref name="sku" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="nestedResourceTypeFirst" />, <paramref name="nestedResourceTypeSecond" /> or <paramref name="sku" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource&gt;&gt; GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuAsync (string nestedResourceTypeFirst, string nestedResourceTypeSecond, string sku, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource&gt;&gt; GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuAsync(string nestedResourceTypeFirst, string nestedResourceTypeSecond, string sku, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource.GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuAsync (nestedResourceTypeFirst As String, nestedResourceTypeSecond As String, sku As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource))" />
      <MemberSignature Language="F#" Value="abstract member GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource&gt;&gt;&#xA;override this.GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource&gt;&gt;" Usage="resourceTypeRegistrationResource.GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuAsync (nestedResourceTypeFirst, nestedResourceTypeSecond, sku, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nestedResourceTypeFirst" Type="System.String" />
        <Parameter Name="nestedResourceTypeSecond" Type="System.String" />
        <Parameter Name="sku" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nestedResourceTypeFirst"> The first child resource type. </param>
        <param name="nestedResourceTypeSecond"> The second child resource type. </param>
        <param name="sku"> The SKU. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the sku details for the given resource type and sku name.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}/resourcetypeRegistrations/{nestedResourceTypeFirst}/resourcetypeRegistrations/{nestedResourceTypeSecond}/skus/{sku}
            Operation Id: Skus_GetNestedResourceTypeSecond
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="nestedResourceTypeFirst" />, <paramref name="nestedResourceTypeSecond" /> or <paramref name="sku" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="nestedResourceTypeFirst" />, <paramref name="nestedResourceTypeSecond" /> or <paramref name="sku" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkus">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuCollection GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkus (string nestedResourceTypeFirst, string nestedResourceTypeSecond);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuCollection GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkus(string nestedResourceTypeFirst, string nestedResourceTypeSecond) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource.GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkus(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkus (nestedResourceTypeFirst As String, nestedResourceTypeSecond As String) As ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuCollection" />
      <MemberSignature Language="F#" Value="abstract member GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkus : string * string -&gt; Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuCollection&#xA;override this.GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkus : string * string -&gt; Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuCollection" Usage="resourceTypeRegistrationResource.GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkus (nestedResourceTypeFirst, nestedResourceTypeSecond)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nestedResourceTypeFirst" Type="System.String" />
        <Parameter Name="nestedResourceTypeSecond" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="nestedResourceTypeFirst"> The first child resource type. </param>
        <param name="nestedResourceTypeSecond"> The second child resource type. </param>
        <summary> Gets a collection of ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResources in the ResourceTypeRegistration. </summary>
        <returns> An object representing collection of ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResources and their operations over a ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="nestedResourceTypeFirst" /> or <paramref name="nestedResourceTypeSecond" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="nestedResourceTypeFirst" /> or <paramref name="nestedResourceTypeSecond" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSku">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource&gt; GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSku (string nestedResourceTypeFirst, string sku, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource&gt; GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSku(string nestedResourceTypeFirst, string sku, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource.GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSku(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSku (nestedResourceTypeFirst As String, sku As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource)" />
      <MemberSignature Language="F#" Value="abstract member GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSku : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource&gt;&#xA;override this.GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSku : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource&gt;" Usage="resourceTypeRegistrationResource.GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSku (nestedResourceTypeFirst, sku, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nestedResourceTypeFirst" Type="System.String" />
        <Parameter Name="sku" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nestedResourceTypeFirst"> The first child resource type. </param>
        <param name="sku"> The SKU. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the sku details for the given resource type and sku name.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}/resourcetypeRegistrations/{nestedResourceTypeFirst}/skus/{sku}
            Operation Id: Skus_GetNestedResourceTypeFirst
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="nestedResourceTypeFirst" /> or <paramref name="sku" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="nestedResourceTypeFirst" /> or <paramref name="sku" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource&gt;&gt; GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuAsync (string nestedResourceTypeFirst, string sku, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource&gt;&gt; GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuAsync(string nestedResourceTypeFirst, string sku, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource.GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuAsync (nestedResourceTypeFirst As String, sku As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource))" />
      <MemberSignature Language="F#" Value="abstract member GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource&gt;&gt;&#xA;override this.GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource&gt;&gt;" Usage="resourceTypeRegistrationResource.GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuAsync (nestedResourceTypeFirst, sku, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nestedResourceTypeFirst" Type="System.String" />
        <Parameter Name="sku" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nestedResourceTypeFirst"> The first child resource type. </param>
        <param name="sku"> The SKU. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the sku details for the given resource type and sku name.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}/resourcetypeRegistrations/{nestedResourceTypeFirst}/skus/{sku}
            Operation Id: Skus_GetNestedResourceTypeFirst
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="nestedResourceTypeFirst" /> or <paramref name="sku" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="nestedResourceTypeFirst" /> or <paramref name="sku" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkus">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuCollection GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkus (string nestedResourceTypeFirst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuCollection GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkus(string nestedResourceTypeFirst) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource.GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkus(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkus (nestedResourceTypeFirst As String) As ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuCollection" />
      <MemberSignature Language="F#" Value="abstract member GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkus : string -&gt; Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuCollection&#xA;override this.GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkus : string -&gt; Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuCollection" Usage="resourceTypeRegistrationResource.GetProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkus nestedResourceTypeFirst" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nestedResourceTypeFirst" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="nestedResourceTypeFirst"> The first child resource type. </param>
        <summary> Gets a collection of ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResources in the ResourceTypeRegistration. </summary>
        <returns> An object representing collection of ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResources and their operations over a ProviderRegistrationResourcetypeRegistrationResourcetypeRegistrationSkuResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="nestedResourceTypeFirst" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="nestedResourceTypeFirst" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderRegistrationResourcetypeRegistrationSku">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationSkuResource&gt; GetProviderRegistrationResourcetypeRegistrationSku (string sku, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationSkuResource&gt; GetProviderRegistrationResourcetypeRegistrationSku(string sku, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource.GetProviderRegistrationResourcetypeRegistrationSku(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProviderRegistrationResourcetypeRegistrationSku (sku As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ProviderRegistrationResourcetypeRegistrationSkuResource)" />
      <MemberSignature Language="F#" Value="abstract member GetProviderRegistrationResourcetypeRegistrationSku : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationSkuResource&gt;&#xA;override this.GetProviderRegistrationResourcetypeRegistrationSku : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationSkuResource&gt;" Usage="resourceTypeRegistrationResource.GetProviderRegistrationResourcetypeRegistrationSku (sku, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationSkuResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sku" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sku"> The SKU. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the sku details for the given resource type and sku name.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}/skus/{sku}
            Operation Id: Skus_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sku" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sku" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderRegistrationResourcetypeRegistrationSkuAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationSkuResource&gt;&gt; GetProviderRegistrationResourcetypeRegistrationSkuAsync (string sku, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationSkuResource&gt;&gt; GetProviderRegistrationResourcetypeRegistrationSkuAsync(string sku, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource.GetProviderRegistrationResourcetypeRegistrationSkuAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProviderRegistrationResourcetypeRegistrationSkuAsync (sku As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ProviderRegistrationResourcetypeRegistrationSkuResource))" />
      <MemberSignature Language="F#" Value="abstract member GetProviderRegistrationResourcetypeRegistrationSkuAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationSkuResource&gt;&gt;&#xA;override this.GetProviderRegistrationResourcetypeRegistrationSkuAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationSkuResource&gt;&gt;" Usage="resourceTypeRegistrationResource.GetProviderRegistrationResourcetypeRegistrationSkuAsync (sku, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationSkuResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sku" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sku"> The SKU. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the sku details for the given resource type and sku name.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}/skus/{sku}
            Operation Id: Skus_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sku" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sku" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderRegistrationResourcetypeRegistrationSkus">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationSkuCollection GetProviderRegistrationResourcetypeRegistrationSkus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationSkuCollection GetProviderRegistrationResourcetypeRegistrationSkus() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource.GetProviderRegistrationResourcetypeRegistrationSkus" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProviderRegistrationResourcetypeRegistrationSkus () As ProviderRegistrationResourcetypeRegistrationSkuCollection" />
      <MemberSignature Language="F#" Value="abstract member GetProviderRegistrationResourcetypeRegistrationSkus : unit -&gt; Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationSkuCollection&#xA;override this.GetProviderRegistrationResourcetypeRegistrationSkus : unit -&gt; Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationSkuCollection" Usage="resourceTypeRegistrationResource.GetProviderRegistrationResourcetypeRegistrationSkus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ProviderHub.ProviderRegistrationResourcetypeRegistrationSkuCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ProviderRegistrationResourcetypeRegistrationSkuResources in the ResourceTypeRegistration. </summary>
        <returns> An object representing collection of ProviderRegistrationResourcetypeRegistrationSkuResources and their operations over a ProviderRegistrationResourcetypeRegistrationSkuResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource&gt; Update (Azure.WaitUntil waitUntil, Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource&gt; Update(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource.Update(Azure.WaitUntil,Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (waitUntil As WaitUntil, data As ResourceTypeRegistrationData, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of ResourceTypeRegistrationResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.WaitUntil * Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource&gt;&#xA;override this.Update : Azure.WaitUntil * Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource&gt;" Usage="resourceTypeRegistrationResource.Update (waitUntil, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="data" Type="Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="data"> The required request body parameters supplied to the resource type registration CreateOrUpdate operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates or updates a resource type.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}
            Operation Id: ResourceTypeRegistrations_CreateOrUpdate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource&gt;&gt; UpdateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource&gt;&gt; UpdateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (waitUntil As WaitUntil, data As ResourceTypeRegistrationData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of ResourceTypeRegistrationResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource&gt;&gt;" Usage="resourceTypeRegistrationResource.UpdateAsync (waitUntil, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ProviderHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="data" Type="Azure.ResourceManager.ProviderHub.ResourceTypeRegistrationData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="data"> The required request body parameters supplied to the resource type registration CreateOrUpdate operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates or updates a resource type.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}
            Operation Id: ResourceTypeRegistrations_CreateOrUpdate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
