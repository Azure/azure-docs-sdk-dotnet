<Type Name="ILeaseCheckpointer" FullName="Microsoft.Azure.Documents.ChangeFeedProcessor.LeaseManagement.ILeaseCheckpointer">
  <TypeSignature Language="C#" Value="public interface ILeaseCheckpointer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILeaseCheckpointer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Documents.ChangeFeedProcessor.LeaseManagement.ILeaseCheckpointer" />
  <TypeSignature Language="VB.NET" Value="Public Interface ILeaseCheckpointer" />
  <TypeSignature Language="F#" Value="type ILeaseCheckpointer = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Documents.ChangeFeedProcessor</AssemblyName>
    <AssemblyVersion>2.2.7.0</AssemblyVersion>
    <AssemblyVersion>2.2.8.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Used to checkpoitn leases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckpointAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.ChangeFeedProcessor.PartitionManagement.ILease&gt; CheckpointAsync (Microsoft.Azure.Documents.ChangeFeedProcessor.PartitionManagement.ILease lease, string continuationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Documents.ChangeFeedProcessor.PartitionManagement.ILease&gt; CheckpointAsync(class Microsoft.Azure.Documents.ChangeFeedProcessor.PartitionManagement.ILease lease, string continuationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.ChangeFeedProcessor.LeaseManagement.ILeaseCheckpointer.CheckpointAsync(Microsoft.Azure.Documents.ChangeFeedProcessor.PartitionManagement.ILease,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckpointAsync (lease As ILease, continuationToken As String) As Task(Of ILease)" />
      <MemberSignature Language="F#" Value="abstract member CheckpointAsync : Microsoft.Azure.Documents.ChangeFeedProcessor.PartitionManagement.ILease * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.ChangeFeedProcessor.PartitionManagement.ILease&gt;" Usage="iLeaseCheckpointer.CheckpointAsync (lease, continuationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Documents.ChangeFeedProcessor</AssemblyName>
        <AssemblyVersion>2.2.7.0</AssemblyVersion>
        <AssemblyVersion>2.2.8.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Documents.ChangeFeedProcessor.PartitionManagement.ILease&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lease" Type="Microsoft.Azure.Documents.ChangeFeedProcessor.PartitionManagement.ILease" />
        <Parameter Name="continuationToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="lease">Lease to renew</param>
        <param name="continuationToken">Continuation token</param>
        <summary>
            Checkpoint the lease.
            </summary>
        <returns>Updated renewed lease</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.Documents.ChangeFeedProcessor.Exceptions.LeaseLostException">Thrown if other host acquired the lease or lease was deleted</exception>
      </Docs>
    </Member>
  </Members>
</Type>
