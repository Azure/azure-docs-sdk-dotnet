<Type Name="ILeaseStore" FullName="Microsoft.Azure.Documents.ChangeFeedProcessor.LeaseManagement.ILeaseStore">
  <TypeSignature Language="C#" Value="public interface ILeaseStore" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILeaseStore" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Documents.ChangeFeedProcessor.LeaseManagement.ILeaseStore" />
  <TypeSignature Language="VB.NET" Value="Public Interface ILeaseStore" />
  <TypeSignature Language="F#" Value="type ILeaseStore = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Documents.ChangeFeedProcessor</AssemblyName>
    <AssemblyVersion>2.2.7.0</AssemblyVersion>
    <AssemblyVersion>2.2.8.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Represents the lease store container to deal with initialiation/cleanup of leases
            for particular monitoring collection and lease container prefix.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AcquireInitializationLockAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; AcquireInitializationLockAsync (TimeSpan lockExpirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; AcquireInitializationLockAsync(valuetype System.TimeSpan lockExpirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.ChangeFeedProcessor.LeaseManagement.ILeaseStore.AcquireInitializationLockAsync(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function AcquireInitializationLockAsync (lockExpirationTime As TimeSpan) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member AcquireInitializationLockAsync : TimeSpan -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="iLeaseStore.AcquireInitializationLockAsync lockExpirationTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Documents.ChangeFeedProcessor</AssemblyName>
        <AssemblyVersion>2.2.7.0</AssemblyVersion>
        <AssemblyVersion>2.2.8.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lockExpirationTime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="lockExpirationTime">The time for the lock to expire.</param>
        <summary>
            Places a lock on the lease store for initialization. Only one process may own the store for the lock time.
            </summary>
        <returns>True if the lock was acquired, false otherwise.</returns>
        <remarks>In order for expiration time work, lease colection needs to have TTL enabled.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitializedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; IsInitializedAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsInitializedAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.ChangeFeedProcessor.LeaseManagement.ILeaseStore.IsInitializedAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInitializedAsync () As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member IsInitializedAsync : unit -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="iLeaseStore.IsInitializedAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Documents.ChangeFeedProcessor</AssemblyName>
        <AssemblyVersion>2.2.7.0</AssemblyVersion>
        <AssemblyVersion>2.2.8.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Checks if the lease store is initialized.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkInitializedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task MarkInitializedAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task MarkInitializedAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.ChangeFeedProcessor.LeaseManagement.ILeaseStore.MarkInitializedAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function MarkInitializedAsync () As Task" />
      <MemberSignature Language="F#" Value="abstract member MarkInitializedAsync : unit -&gt; System.Threading.Tasks.Task" Usage="iLeaseStore.MarkInitializedAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Documents.ChangeFeedProcessor</AssemblyName>
        <AssemblyVersion>2.2.7.0</AssemblyVersion>
        <AssemblyVersion>2.2.8.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Mark the store as initialized.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseInitializationLockAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; ReleaseInitializationLockAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; ReleaseInitializationLockAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Documents.ChangeFeedProcessor.LeaseManagement.ILeaseStore.ReleaseInitializationLockAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReleaseInitializationLockAsync () As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member ReleaseInitializationLockAsync : unit -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="iLeaseStore.ReleaseInitializationLockAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Documents.ChangeFeedProcessor</AssemblyName>
        <AssemblyVersion>2.2.7.0</AssemblyVersion>
        <AssemblyVersion>2.2.8.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Releases the lock one the lease store for initialization.
            </summary>
        <returns>True if the lock was acquired and was relesed, false if the lock was not acquired.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
