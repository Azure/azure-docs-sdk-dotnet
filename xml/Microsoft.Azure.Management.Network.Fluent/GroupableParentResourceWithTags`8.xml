<Type Name="GroupableParentResourceWithTags&lt;IFluentResourceT,InnerResourceT,FluentResourceT,ManagerT,IDefinitionAfterRegion,IDefinitionAfterResourceGroup,DefTypeWithTags,UTypeWithTags&gt;" FullName="Microsoft.Azure.Management.Network.Fluent.GroupableParentResourceWithTags&lt;IFluentResourceT,InnerResourceT,FluentResourceT,ManagerT,IDefinitionAfterRegion,IDefinitionAfterResourceGroup,DefTypeWithTags,UTypeWithTags&gt;">
  <TypeSignature Language="C#" Value="public abstract class GroupableParentResourceWithTags&lt;IFluentResourceT,InnerResourceT,FluentResourceT,ManagerT,IDefinitionAfterRegion,IDefinitionAfterResourceGroup,DefTypeWithTags,UTypeWithTags&gt; : Microsoft.Azure.Management.ResourceManager.Fluent.Core.GroupableParentResource&lt;IFluentResourceT,InnerResourceT,FluentResourceT,ManagerT,IDefinitionAfterRegion,IDefinitionAfterResourceGroup,DefTypeWithTags,UTypeWithTags&gt;, Microsoft.Azure.Management.Network.Fluent.IAppliableWithTags&lt;IFluentResourceT&gt;, Microsoft.Azure.Management.Network.Fluent.UpdatableWithTags.UpdatableWithTags.IUpdateWithTags&lt;IFluentResourceT&gt; where IFluentResourceT : class, IResource where InnerResourceT : Resource where FluentResourceT : GroupableParentResource&lt;IFluentResourceT,InnerResourceT,FluentResourceT,ManagerT,IDefinitionAfterRegion,IDefinitionAfterResourceGroup,DefTypeWithTags,UTypeWithTags&gt;, IFluentResourceT where ManagerT : IManagerBase where IDefinitionAfterRegion : class where IDefinitionAfterResourceGroup : class where DefTypeWithTags : class where UTypeWithTags : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit GroupableParentResourceWithTags`8&lt;class (class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IResource) IFluentResourceT, (class Microsoft.Azure.Management.ResourceManager.Fluent.Resource) InnerResourceT, (class Microsoft.Azure.Management.ResourceManager.Fluent.Core.GroupableParentResource`8&lt;!IFluentResourceT, !InnerResourceT, !FluentResourceT, !ManagerT, !IDefinitionAfterRegion, !IDefinitionAfterResourceGroup, !DefTypeWithTags, !UTypeWithTags&gt;, !IFluentResourceT) FluentResourceT, (class Microsoft.Azure.Management.ResourceManager.Fluent.Core.IManagerBase) ManagerT, class IDefinitionAfterRegion, class IDefinitionAfterResourceGroup, class DefTypeWithTags, class UTypeWithTags&gt; extends Microsoft.Azure.Management.ResourceManager.Fluent.Core.GroupableParentResource`8&lt;!IFluentResourceT, !InnerResourceT, !FluentResourceT, !ManagerT, !IDefinitionAfterRegion, !IDefinitionAfterResourceGroup, !DefTypeWithTags, !UTypeWithTags&gt; implements class Microsoft.Azure.Management.Network.Fluent.IAppliableWithTags`1&lt;!IFluentResourceT&gt;, class Microsoft.Azure.Management.Network.Fluent.UpdatableWithTags.UpdatableWithTags.IUpdateWithTags`1&lt;!IFluentResourceT&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Network.Fluent.GroupableParentResourceWithTags`8" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class GroupableParentResourceWithTags(Of IFluentResourceT, InnerResourceT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags)&#xA;Inherits GroupableParentResource(Of IFluentResourceT, InnerResourceT, FluentResourceT, ManagerT, IDefinitionAfterRegion, IDefinitionAfterResourceGroup, DefTypeWithTags, UTypeWithTags)&#xA;Implements IAppliableWithTags(Of IFluentResourceT), IUpdateWithTags(Of IFluentResourceT)" />
  <TypeSignature Language="F#" Value="type GroupableParentResourceWithTags&lt;'IFluentResourceT, 'InnerResourceT, 'FluentResourceT, 'ManagerT, 'IDefinitionAfterRegion, 'IDefinitionAfterResourceGroup, 'DefTypeWithTags, 'UTypeWithTags (requires 'IFluentResourceT : null and 'IFluentResourceT :&gt; IResource and 'InnerResourceT :&gt; Resource and 'FluentResourceT :&gt; GroupableParentResource&lt;'IFluentResourceT, 'InnerResourceT, 'FluentResourceT, 'ManagerT, 'IDefinitionAfterRegion, 'IDefinitionAfterResourceGroup, 'DefTypeWithTags, 'UTypeWithTags&gt; and 'FluentResourceT :&gt; 'IFluentResourceT and 'ManagerT :&gt; IManagerBase and 'IDefinitionAfterRegion : null and 'IDefinitionAfterResourceGroup : null and 'DefTypeWithTags : null and 'UTypeWithTags : null)&gt; = class&#xA;    inherit GroupableParentResource&lt;'IFluentResourceT, 'InnerResourceT, 'FluentResourceT, 'ManagerT, 'IDefinitionAfterRegion, 'IDefinitionAfterResourceGroup, 'DefTypeWithTags, 'UTypeWithTags (requires 'IFluentResourceT : null and 'IFluentResourceT :&gt; IResource and 'InnerResourceT :&gt; Resource and 'FluentResourceT :&gt; GroupableParentResource&lt;'IFluentResourceT, 'InnerResourceT, 'FluentResourceT, 'ManagerT, 'IDefinitionAfterRegion, 'IDefinitionAfterResourceGroup, 'DefTypeWithTags, 'UTypeWithTags&gt; and 'FluentResourceT :&gt; 'IFluentResourceT and 'ManagerT :&gt; IManagerBase and 'IDefinitionAfterRegion : null and 'IDefinitionAfterResourceGroup : null and 'DefTypeWithTags : null and 'UTypeWithTags : null)&gt;&#xA;    interface IUpdateWithTags&lt;'IFluentResourceT (requires 'IFluentResourceT : null and 'IFluentResourceT :&gt; IResource)&gt;&#xA;    interface IAppliableWithTags&lt;'IFluentResourceT (requires 'IFluentResourceT : null and 'IFluentResourceT :&gt; IResource)&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="IFluentResourceT">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
        <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IResource</InterfaceName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="InnerResourceT">
      <Constraints>
        <BaseTypeName>Microsoft.Azure.Management.ResourceManager.Fluent.Resource</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="FluentResourceT">
      <Constraints>
        <BaseTypeName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.GroupableParentResource&lt;IFluentResourceT,InnerResourceT,FluentResourceT,ManagerT,IDefinitionAfterRegion,IDefinitionAfterResourceGroup,DefTypeWithTags,UTypeWithTags&gt;</BaseTypeName>
        <BaseTypeName>IFluentResourceT</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="ManagerT">
      <Constraints>
        <InterfaceName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.IManagerBase</InterfaceName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="IDefinitionAfterRegion">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="IDefinitionAfterResourceGroup">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="DefTypeWithTags">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="UTypeWithTags">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.Azure.Management.ResourceManager.Fluent.Core.GroupableParentResource&lt;IFluentResourceT,InnerResourceT,FluentResourceT,ManagerT,IDefinitionAfterRegion,IDefinitionAfterResourceGroup,DefTypeWithTags,UTypeWithTags&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">IFluentResourceT</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!1">InnerResourceT</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!2">FluentResourceT</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!3">ManagerT</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!4">IDefinitionAfterRegion</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!5">IDefinitionAfterResourceGroup</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!6">DefTypeWithTags</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!7">UTypeWithTags</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.Network.Fluent.IAppliableWithTags&lt;IFluentResourceT&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.Network.Fluent.UpdatableWithTags.UpdatableWithTags.IUpdateWithTags&lt;IFluentResourceT&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="IFluentResourceT">To be added.</typeparam>
    <typeparam name="InnerResourceT">To be added.</typeparam>
    <typeparam name="FluentResourceT">To be added.</typeparam>
    <typeparam name="ManagerT">To be added.</typeparam>
    <typeparam name="IDefinitionAfterRegion">To be added.</typeparam>
    <typeparam name="IDefinitionAfterResourceGroup">To be added.</typeparam>
    <typeparam name="DefTypeWithTags">To be added.</typeparam>
    <typeparam name="UTypeWithTags">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected GroupableParentResourceWithTags (string name, InnerResourceT innerObject, ManagerT manager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name, !InnerResourceT innerObject, !ManagerT manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.Fluent.GroupableParentResourceWithTags`8.#ctor(System.String,`1,`3)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As String, innerObject As InnerResourceT, manager As ManagerT)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.Network.Fluent.GroupableParentResourceWithTags&lt;'IFluentResourceT, 'InnerResourceT, 'FluentResourceT, 'ManagerT, 'IDefinitionAfterRegion, 'IDefinitionAfterResourceGroup, 'DefTypeWithTags, 'UTypeWithTags (requires 'IFluentResourceT : null and 'IFluentResourceT :&gt; Microsoft.Azure.Management.ResourceManager.Fluent.Core.IResource and 'InnerResourceT :&gt; Microsoft.Azure.Management.ResourceManager.Fluent.Resource and 'FluentResourceT :&gt; Microsoft.Azure.Management.ResourceManager.Fluent.Core.GroupableParentResource&lt;'IFluentResourceT, 'InnerResourceT, 'FluentResourceT, 'ManagerT, 'IDefinitionAfterRegion, 'IDefinitionAfterResourceGroup, 'DefTypeWithTags, 'UTypeWithTags&gt; and 'FluentResourceT :&gt; 'IFluentResourceT and 'ManagerT :&gt; Microsoft.Azure.Management.ResourceManager.Fluent.Core.IManagerBase and 'IDefinitionAfterRegion : null and 'IDefinitionAfterResourceGroup : null and 'DefTypeWithTags : null and 'UTypeWithTags : null)&gt; : string * 'InnerResourceT * 'ManagerT -&gt; Microsoft.Azure.Management.Network.Fluent.GroupableParentResourceWithTags&lt;'IFluentResourceT, 'InnerResourceT, 'FluentResourceT, 'ManagerT, 'IDefinitionAfterRegion, 'IDefinitionAfterResourceGroup, 'DefTypeWithTags, 'UTypeWithTags (requires 'IFluentResourceT : null and 'IFluentResourceT :&gt; Microsoft.Azure.Management.ResourceManager.Fluent.Core.IResource and 'InnerResourceT :&gt; Microsoft.Azure.Management.ResourceManager.Fluent.Resource and 'FluentResourceT :&gt; Microsoft.Azure.Management.ResourceManager.Fluent.Core.GroupableParentResource&lt;'IFluentResourceT, 'InnerResourceT, 'FluentResourceT, 'ManagerT, 'IDefinitionAfterRegion, 'IDefinitionAfterResourceGroup, 'DefTypeWithTags, 'UTypeWithTags&gt; and 'FluentResourceT :&gt; 'IFluentResourceT and 'ManagerT :&gt; Microsoft.Azure.Management.ResourceManager.Fluent.Core.IManagerBase and 'IDefinitionAfterRegion : null and 'IDefinitionAfterResourceGroup : null and 'DefTypeWithTags : null and 'UTypeWithTags : null)&gt;" Usage="new Microsoft.Azure.Management.Network.Fluent.GroupableParentResourceWithTags&lt;'IFluentResourceT, 'InnerResourceT, 'FluentResourceT, 'ManagerT, 'IDefinitionAfterRegion, 'IDefinitionAfterResourceGroup, 'DefTypeWithTags, 'UTypeWithTags (requires 'IFluentResourceT : null and 'IFluentResourceT :&gt; Microsoft.Azure.Management.ResourceManager.Fluent.Core.IResource and 'InnerResourceT :&gt; Microsoft.Azure.Management.ResourceManager.Fluent.Resource and 'FluentResourceT :&gt; Microsoft.Azure.Management.ResourceManager.Fluent.Core.GroupableParentResource&lt;'IFluentResourceT, 'InnerResourceT, 'FluentResourceT, 'ManagerT, 'IDefinitionAfterRegion, 'IDefinitionAfterResourceGroup, 'DefTypeWithTags, 'UTypeWithTags&gt; and 'FluentResourceT :&gt; 'IFluentResourceT and 'ManagerT :&gt; Microsoft.Azure.Management.ResourceManager.Fluent.Core.IManagerBase and 'IDefinitionAfterRegion : null and 'IDefinitionAfterResourceGroup : null and 'DefTypeWithTags : null and 'UTypeWithTags : null)&gt; (name, innerObject, manager)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="innerObject" Type="InnerResourceT" />
        <Parameter Name="manager" Type="ManagerT" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="innerObject">To be added.</param>
        <param name="manager">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyTags">
      <MemberSignature Language="C#" Value="public IFluentResourceT ApplyTags ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !IFluentResourceT ApplyTags() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.Fluent.GroupableParentResourceWithTags`8.ApplyTags" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyTags () As IFluentResourceT" />
      <MemberSignature Language="F#" Value="abstract member ApplyTags : unit -&gt; 'IFluentResourceT&#xA;override this.ApplyTags : unit -&gt; 'IFluentResourceT" Usage="groupableParentResourceWithTags.ApplyTags " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Network.Fluent.IAppliableWithTags`1.ApplyTags</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>IFluentResourceT</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyTagsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;IFluentResourceT&gt; ApplyTagsAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!IFluentResourceT&gt; ApplyTagsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.Fluent.GroupableParentResourceWithTags`8.ApplyTagsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ApplyTagsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'IFluentResourceT (requires 'IFluentResourceT : null and 'IFluentResourceT :&gt; Microsoft.Azure.Management.ResourceManager.Fluent.Core.IResource)&gt;&#xA;override this.ApplyTagsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'IFluentResourceT (requires 'IFluentResourceT : null and 'IFluentResourceT :&gt; Microsoft.Azure.Management.ResourceManager.Fluent.Core.IResource)&gt;" Usage="groupableParentResourceWithTags.ApplyTagsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Network.Fluent.IAppliableWithTags`1.ApplyTagsAsync(System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;IFluentResourceT&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyTagsToInnerAsync">
      <MemberSignature Language="C#" Value="protected abstract System.Threading.Tasks.Task&lt;InnerResourceT&gt; ApplyTagsToInnerAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!InnerResourceT&gt; ApplyTagsToInnerAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.Fluent.GroupableParentResourceWithTags`8.ApplyTagsToInnerAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ApplyTagsToInnerAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'InnerResourceT (requires 'InnerResourceT :&gt; Microsoft.Azure.Management.ResourceManager.Fluent.Resource)&gt;" Usage="groupableParentResourceWithTags.ApplyTagsToInnerAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;InnerResourceT&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateTags">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Network.Fluent.UpdatableWithTags.UpdatableWithTags.IUpdateWithTags&lt;IFluentResourceT&gt; UpdateTags ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Network.Fluent.UpdatableWithTags.UpdatableWithTags.IUpdateWithTags`1&lt;!IFluentResourceT&gt; UpdateTags() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.Fluent.GroupableParentResourceWithTags`8.UpdateTags" />
      <MemberSignature Language="VB.NET" Value="Public Function UpdateTags () As IUpdateWithTags(Of IFluentResourceT)" />
      <MemberSignature Language="F#" Value="abstract member UpdateTags : unit -&gt; Microsoft.Azure.Management.Network.Fluent.UpdatableWithTags.UpdatableWithTags.IUpdateWithTags&lt;'IFluentResourceT (requires 'IFluentResourceT : null and 'IFluentResourceT :&gt; Microsoft.Azure.Management.ResourceManager.Fluent.Core.IResource)&gt;&#xA;override this.UpdateTags : unit -&gt; Microsoft.Azure.Management.Network.Fluent.UpdatableWithTags.UpdatableWithTags.IUpdateWithTags&lt;'IFluentResourceT (requires 'IFluentResourceT : null and 'IFluentResourceT :&gt; Microsoft.Azure.Management.ResourceManager.Fluent.Core.IResource)&gt;" Usage="groupableParentResourceWithTags.UpdateTags " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Network.Fluent.UpdatableWithTags.UpdatableWithTags.IUpdateWithTags&lt;IFluentResourceT&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithoutTag">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Network.Fluent.IAppliableWithTags&lt;IFluentResourceT&gt; WithoutTag (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Network.Fluent.IAppliableWithTags`1&lt;!IFluentResourceT&gt; WithoutTag(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.Fluent.GroupableParentResourceWithTags`8.WithoutTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithoutTag (key As String) As IAppliableWithTags(Of IFluentResourceT)" />
      <MemberSignature Language="F#" Value="override this.WithoutTag : string -&gt; Microsoft.Azure.Management.Network.Fluent.IAppliableWithTags&lt;'IFluentResourceT (requires 'IFluentResourceT : null and 'IFluentResourceT :&gt; Microsoft.Azure.Management.ResourceManager.Fluent.Core.IResource)&gt;" Usage="groupableParentResourceWithTags.WithoutTag key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Network.Fluent.UpdatableWithTags.UpdatableWithTags.IUpdateWithTags`1.WithoutTag(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Network.Fluent.IAppliableWithTags&lt;IFluentResourceT&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithTag">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Network.Fluent.IAppliableWithTags&lt;IFluentResourceT&gt; WithTag (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Network.Fluent.IAppliableWithTags`1&lt;!IFluentResourceT&gt; WithTag(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.Fluent.GroupableParentResourceWithTags`8.WithTag(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithTag (key As String, value As String) As IAppliableWithTags(Of IFluentResourceT)" />
      <MemberSignature Language="F#" Value="override this.WithTag : string * string -&gt; Microsoft.Azure.Management.Network.Fluent.IAppliableWithTags&lt;'IFluentResourceT (requires 'IFluentResourceT : null and 'IFluentResourceT :&gt; Microsoft.Azure.Management.ResourceManager.Fluent.Core.IResource)&gt;" Usage="groupableParentResourceWithTags.WithTag (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Network.Fluent.UpdatableWithTags.UpdatableWithTags.IUpdateWithTags`1.WithTag(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Network.Fluent.IAppliableWithTags&lt;IFluentResourceT&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithTags">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.Network.Fluent.IAppliableWithTags&lt;IFluentResourceT&gt; WithTags (System.Collections.Generic.IDictionary&lt;string,string&gt; tags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.Management.Network.Fluent.IAppliableWithTags`1&lt;!IFluentResourceT&gt; WithTags(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Network.Fluent.GroupableParentResourceWithTags`8.WithTags(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithTags (tags As IDictionary(Of String, String)) As IAppliableWithTags(Of IFluentResourceT)" />
      <MemberSignature Language="F#" Value="override this.WithTags : System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Microsoft.Azure.Management.Network.Fluent.IAppliableWithTags&lt;'IFluentResourceT (requires 'IFluentResourceT : null and 'IFluentResourceT :&gt; Microsoft.Azure.Management.ResourceManager.Fluent.Core.IResource)&gt;" Usage="groupableParentResourceWithTags.WithTags tags" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Network.Fluent.UpdatableWithTags.UpdatableWithTags.IUpdateWithTags`1.WithTags(System.Collections.Generic.IDictionary{System.String,System.String})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Network.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Network.Fluent.IAppliableWithTags&lt;IFluentResourceT&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="tags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>