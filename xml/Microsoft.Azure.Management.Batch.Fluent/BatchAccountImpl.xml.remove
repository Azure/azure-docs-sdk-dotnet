<Type Name="BatchAccountImpl" FullName="Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl">
  <TypeSignature Language="C#" Value="public class BatchAccountImpl : Microsoft.Azure.Management.Resource.Fluent.GroupableResource&lt;Microsoft.Azure.Management.Batch.Fluent.IBatchAccount,Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountInner,Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl,Microsoft.Azure.Management.Batch.Fluent.IBatchManager,Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithGroup,Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreateAndApplication,Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreate,Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate&gt;, Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IDefinition, Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate, Microsoft.Azure.Management.Batch.Fluent.IBatchAccount, Microsoft.Azure.Management.Resource.Fluent.Core.GroupableResource.Definition.IWithCreatableResourceGroup&lt;Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreateAndApplication&gt;, Microsoft.Azure.Management.Resource.Fluent.Core.GroupableResource.Definition.IWithExistingResourceGroup&lt;Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreateAndApplication&gt;, Microsoft.Azure.Management.Resource.Fluent.Core.GroupableResource.Definition.IWithGroup&lt;Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreateAndApplication&gt;, Microsoft.Azure.Management.Resource.Fluent.Core.GroupableResource.Definition.IWithNewResourceGroup&lt;Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreateAndApplication&gt;, Microsoft.Azure.Management.Resource.Fluent.Core.IGroupableResource&lt;Microsoft.Azure.Management.Batch.Fluent.IBatchManager&gt;, Microsoft.Azure.Management.Resource.Fluent.Core.IHasManager&lt;Microsoft.Azure.Management.Batch.Fluent.IBatchManager&gt;, Microsoft.Azure.Management.Resource.Fluent.Core.IWrapper&lt;Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountInner&gt;, Microsoft.Azure.Management.Resource.Fluent.Core.Resource.Definition.IDefinitionWithRegion&lt;Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithGroup&gt;, Microsoft.Azure.Management.Resource.Fluent.Core.Resource.Definition.IDefinitionWithTags&lt;Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreate&gt;, Microsoft.Azure.Management.Resource.Fluent.Core.Resource.Update.IUpdateWithTags&lt;Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate&gt;, Microsoft.Azure.Management.Resource.Fluent.Core.ResourceActions.IAppliable&lt;Microsoft.Azure.Management.Batch.Fluent.IBatchAccount&gt;, Microsoft.Azure.Management.Resource.Fluent.Core.ResourceActions.ICreatable&lt;Microsoft.Azure.Management.Batch.Fluent.IBatchAccount&gt;, Microsoft.Azure.Management.Resource.Fluent.Core.ResourceActions.IRefreshable&lt;Microsoft.Azure.Management.Batch.Fluent.IBatchAccount&gt;, Microsoft.Azure.Management.Resource.Fluent.Core.ResourceActions.IUpdatable&lt;Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BatchAccountImpl extends Microsoft.Azure.Management.Resource.Fluent.GroupableResource`8&lt;class Microsoft.Azure.Management.Batch.Fluent.IBatchAccount, class Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountInner, class Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl, class Microsoft.Azure.Management.Batch.Fluent.IBatchManager, class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithGroup, class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreateAndApplication, class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreate, class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate&gt; implements class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IBlank, class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IDefinition, class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithApplication, class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithApplicationAndStorage, class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreate, class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreateAndApplication, class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithGroup, class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithStorage, class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate, class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithApplication, class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithStorageAccount, class Microsoft.Azure.Management.Batch.Fluent.IBatchAccount, class Microsoft.Azure.Management.Resource.Fluent.Core.GroupableResource.Definition.IWithCreatableResourceGroup`1&lt;class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreateAndApplication&gt;, class Microsoft.Azure.Management.Resource.Fluent.Core.GroupableResource.Definition.IWithExistingResourceGroup`1&lt;class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreateAndApplication&gt;, class Microsoft.Azure.Management.Resource.Fluent.Core.GroupableResource.Definition.IWithGroup`1&lt;class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreateAndApplication&gt;, class Microsoft.Azure.Management.Resource.Fluent.Core.GroupableResource.Definition.IWithNewResourceGroup`1&lt;class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreateAndApplication&gt;, class Microsoft.Azure.Management.Resource.Fluent.Core.IGroupableResource`1&lt;class Microsoft.Azure.Management.Batch.Fluent.IBatchManager&gt;, class Microsoft.Azure.Management.Resource.Fluent.Core.IHasId, class Microsoft.Azure.Management.Resource.Fluent.Core.IHasManager`1&lt;class Microsoft.Azure.Management.Batch.Fluent.IBatchManager&gt;, class Microsoft.Azure.Management.Resource.Fluent.Core.IHasName, class Microsoft.Azure.Management.Resource.Fluent.Core.IHasResourceGroup, class Microsoft.Azure.Management.Resource.Fluent.Core.IResource, class Microsoft.Azure.Management.Resource.Fluent.Core.IWrapper`1&lt;class Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountInner&gt;, class Microsoft.Azure.Management.Resource.Fluent.Core.Resource.Definition.IDefinitionWithRegion`1&lt;class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithGroup&gt;, class Microsoft.Azure.Management.Resource.Fluent.Core.Resource.Definition.IDefinitionWithTags`1&lt;class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreate&gt;, class Microsoft.Azure.Management.Resource.Fluent.Core.Resource.Update.IUpdateWithTags`1&lt;class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate&gt;, class Microsoft.Azure.Management.Resource.Fluent.Core.ResourceActions.IAppliable`1&lt;class Microsoft.Azure.Management.Batch.Fluent.IBatchAccount&gt;, class Microsoft.Azure.Management.Resource.Fluent.Core.ResourceActions.ICreatable`1&lt;class Microsoft.Azure.Management.Batch.Fluent.IBatchAccount&gt;, class Microsoft.Azure.Management.Resource.Fluent.Core.ResourceActions.IIndexable, class Microsoft.Azure.Management.Resource.Fluent.Core.ResourceActions.IRefreshable`1&lt;class Microsoft.Azure.Management.Batch.Fluent.IBatchAccount&gt;, class Microsoft.Azure.Management.Resource.Fluent.Core.ResourceActions.IUpdatable`1&lt;class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl" />
  <TypeSignature Language="VB.NET" Value="Public Class BatchAccountImpl&#xA;Inherits GroupableResource(Of IBatchAccount, BatchAccountInner, BatchAccountImpl, IBatchManager, IWithGroup, IWithCreateAndApplication, IWithCreate, IUpdate)&#xA;Implements IAppliable(Of IBatchAccount), IBatchAccount, ICreatable(Of IBatchAccount), IDefinition, IDefinitionWithRegion(Of IWithGroup), IDefinitionWithTags(Of IWithCreate), IGroupableResource(Of IBatchManager), IHasManager(Of IBatchManager), IRefreshable(Of IBatchAccount), IUpdatable(Of IUpdate), IUpdate, IUpdateWithTags(Of IUpdate), IWithCreatableResourceGroup(Of IWithCreateAndApplication), IWithExistingResourceGroup(Of IWithCreateAndApplication), IWithGroup(Of IWithCreateAndApplication), IWithNewResourceGroup(Of IWithCreateAndApplication), IWrapper(Of BatchAccountInner)" />
  <TypeSignature Language="F#" Value="type BatchAccountImpl = class&#xA;    inherit GroupableResource&lt;IBatchAccount, BatchAccountInner, BatchAccountImpl, IBatchManager, IWithGroup, IWithCreateAndApplication, IWithCreate, IUpdate&gt;&#xA;    interface IBatchAccount&#xA;    interface IGroupableResource&lt;IBatchManager&gt;&#xA;    interface IResource&#xA;    interface IIndexable&#xA;    interface IHasId&#xA;    interface IHasName&#xA;    interface IHasResourceGroup&#xA;    interface IHasManager&lt;IBatchManager&gt;&#xA;    interface IRefreshable&lt;IBatchAccount&gt;&#xA;    interface IUpdatable&lt;IUpdate&gt;&#xA;    interface IWrapper&lt;BatchAccountInner&gt;&#xA;    interface IDefinition&#xA;    interface IBlank&#xA;    interface IDefinitionWithRegion&lt;IWithGroup&gt;&#xA;    interface IWithGroup&#xA;    interface IWithGroup&lt;IWithCreateAndApplication&gt;&#xA;    interface IWithExistingResourceGroup&lt;IWithCreateAndApplication&gt;&#xA;    interface IWithNewResourceGroup&lt;IWithCreateAndApplication&gt;&#xA;    interface IWithCreatableResourceGroup&lt;IWithCreateAndApplication&gt;&#xA;    interface IWithCreate&#xA;    interface ICreatable&lt;IBatchAccount&gt;&#xA;    interface IDefinitionWithTags&lt;IWithCreate&gt;&#xA;    interface IWithApplicationAndStorage&#xA;    interface IWithStorage&#xA;    interface IWithApplication&#xA;    interface IWithCreateAndApplication&#xA;    interface IUpdate&#xA;    interface IAppliable&lt;IBatchAccount&gt;&#xA;    interface IUpdateWithTags&lt;IUpdate&gt;&#xA;    interface IWithStorageAccount&#xA;    interface IWithApplication" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.50</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.Management.Resource.Fluent.GroupableResource&lt;Microsoft.Azure.Management.Batch.Fluent.IBatchAccount,Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountInner,Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl,Microsoft.Azure.Management.Batch.Fluent.IBatchManager,Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithGroup,Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreateAndApplication,Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreate,Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">Microsoft.Azure.Management.Batch.Fluent.IBatchAccount</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!1">Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountInner</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!2">Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!3">Microsoft.Azure.Management.Batch.Fluent.IBatchManager</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!4">Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithGroup</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!5">Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreateAndApplication</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!6">Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreate</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!7">Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IDefinition</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.Batch.Fluent.IBatchAccount</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.Resource.Fluent.Core.GroupableResource.Definition.IWithCreatableResourceGroup&lt;Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreateAndApplication&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.Resource.Fluent.Core.GroupableResource.Definition.IWithExistingResourceGroup&lt;Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreateAndApplication&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.Resource.Fluent.Core.GroupableResource.Definition.IWithGroup&lt;Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreateAndApplication&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.Resource.Fluent.Core.GroupableResource.Definition.IWithNewResourceGroup&lt;Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreateAndApplication&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.Resource.Fluent.Core.IGroupableResource&lt;Microsoft.Azure.Management.Batch.Fluent.IBatchManager&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.Resource.Fluent.Core.IHasManager&lt;Microsoft.Azure.Management.Batch.Fluent.IBatchManager&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.Resource.Fluent.Core.IWrapper&lt;Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountInner&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.Resource.Fluent.Core.Resource.Definition.IDefinitionWithRegion&lt;Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithGroup&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.Resource.Fluent.Core.Resource.Definition.IDefinitionWithTags&lt;Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreate&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.Resource.Fluent.Core.Resource.Update.IUpdateWithTags&lt;Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.Resource.Fluent.Core.ResourceActions.IAppliable&lt;Microsoft.Azure.Management.Batch.Fluent.IBatchAccount&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.Resource.Fluent.Core.ResourceActions.ICreatable&lt;Microsoft.Azure.Management.Batch.Fluent.IBatchAccount&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.Resource.Fluent.Core.ResourceActions.IRefreshable&lt;Microsoft.Azure.Management.Batch.Fluent.IBatchAccount&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Azure.Management.Resource.Fluent.Core.ResourceActions.IUpdatable&lt;Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateResourceAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Batch.Fluent.IBatchAccount&gt; CreateResourceAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Batch.Fluent.IBatchAccount&gt; CreateResourceAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.CreateResourceAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.CreateResourceAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Batch.Fluent.IBatchAccount&gt;" Usage="batchAccountImpl.CreateResourceAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.50</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl/&lt;CreateResourceAsync&gt;d__7))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Batch.Fluent.IBatchAccount&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithApplication.DefineNewApplication">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Batch.Fluent.Application.Definition.IBlank&lt;Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithApplicationAndStorage&gt; IWithApplication.DefineNewApplication (string applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Batch.Fluent.Application.Definition.IBlank`1&lt;class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithApplicationAndStorage&gt; Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithApplication.DefineNewApplication(string applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Definition#IWithApplication#DefineNewApplication(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function DefineNewApplication (applicationId As String) As IBlank(Of IWithApplicationAndStorage) Implements IWithApplication.DefineNewApplication" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithApplication.DefineNewApplication(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.50</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Batch.Fluent.Application.Definition.IBlank&lt;Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithApplicationAndStorage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="applicationId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithStorage.WithExistingStorageAccount">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreate IWithStorage.WithExistingStorageAccount (Microsoft.Azure.Management.Storage.Fluent.IStorageAccount storageAccount);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreate Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithStorage.WithExistingStorageAccount(class Microsoft.Azure.Management.Storage.Fluent.IStorageAccount storageAccount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Definition#IWithStorage#WithExistingStorageAccount(Microsoft.Azure.Management.Storage.Fluent.IStorageAccount)" />
      <MemberSignature Language="VB.NET" Value="Function WithExistingStorageAccount (storageAccount As IStorageAccount) As IWithCreate Implements IWithStorage.WithExistingStorageAccount" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithStorage.WithExistingStorageAccount(Microsoft.Azure.Management.Storage.Fluent.IStorageAccount)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.50</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storageAccount" Type="Microsoft.Azure.Management.Storage.Fluent.IStorageAccount" />
      </Parameters>
      <Docs>
        <param name="storageAccount">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithStorage.WithNewStorageAccount">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreate IWithStorage.WithNewStorageAccount (Microsoft.Azure.Management.Resource.Fluent.Core.ResourceActions.ICreatable&lt;Microsoft.Azure.Management.Storage.Fluent.IStorageAccount&gt; storageAccountCreatable);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreate Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithStorage.WithNewStorageAccount(class Microsoft.Azure.Management.Resource.Fluent.Core.ResourceActions.ICreatable`1&lt;class Microsoft.Azure.Management.Storage.Fluent.IStorageAccount&gt; storageAccountCreatable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Definition#IWithStorage#WithNewStorageAccount(Microsoft.Azure.Management.Resource.Fluent.Core.ResourceActions.ICreatable{Microsoft.Azure.Management.Storage.Fluent.IStorageAccount})" />
      <MemberSignature Language="VB.NET" Value="Function WithNewStorageAccount (storageAccountCreatable As ICreatable(Of IStorageAccount)) As IWithCreate Implements IWithStorage.WithNewStorageAccount" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithStorage.WithNewStorageAccount(Microsoft.Azure.Management.Resource.Fluent.Core.ResourceActions.ICreatable{Microsoft.Azure.Management.Storage.Fluent.IStorageAccount})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.50</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storageAccountCreatable" Type="Microsoft.Azure.Management.Resource.Fluent.Core.ResourceActions.ICreatable&lt;Microsoft.Azure.Management.Storage.Fluent.IStorageAccount&gt;" />
      </Parameters>
      <Docs>
        <param name="storageAccountCreatable">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithStorage.WithNewStorageAccount">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreate IWithStorage.WithNewStorageAccount (string storageAccountName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreate Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithStorage.WithNewStorageAccount(string storageAccountName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Definition#IWithStorage#WithNewStorageAccount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function WithNewStorageAccount (storageAccountName As String) As IWithCreate Implements IWithStorage.WithNewStorageAccount" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithStorage.WithNewStorageAccount(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.50</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storageAccountName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="storageAccountName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithApplication.DefineNewApplication">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Batch.Fluent.Application.UpdateDefinition.IBlank&lt;Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate&gt; IWithApplication.DefineNewApplication (string applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Batch.Fluent.Application.UpdateDefinition.IBlank`1&lt;class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate&gt; Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithApplication.DefineNewApplication(string applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Update#IWithApplication#DefineNewApplication(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function DefineNewApplication (applicationId As String) As IBlank(Of IUpdate) Implements IWithApplication.DefineNewApplication" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithApplication.DefineNewApplication(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.50</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Batch.Fluent.Application.UpdateDefinition.IBlank&lt;Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="applicationId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithApplication.UpdateApplication">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Batch.Fluent.Application.Update.IUpdate IWithApplication.UpdateApplication (string applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Batch.Fluent.Application.Update.IUpdate Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithApplication.UpdateApplication(string applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Update#IWithApplication#UpdateApplication(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function UpdateApplication (applicationId As String) As IUpdate Implements IWithApplication.UpdateApplication" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithApplication.UpdateApplication(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.50</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Batch.Fluent.Application.Update.IUpdate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="applicationId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithApplication.WithoutApplication">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate IWithApplication.WithoutApplication (string applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithApplication.WithoutApplication(string applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Update#IWithApplication#WithoutApplication(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function WithoutApplication (applicationId As String) As IUpdate Implements IWithApplication.WithoutApplication" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithApplication.WithoutApplication(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.50</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="applicationId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithStorageAccount.WithExistingStorageAccount">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate IWithStorageAccount.WithExistingStorageAccount (Microsoft.Azure.Management.Storage.Fluent.IStorageAccount storageAccount);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithStorageAccount.WithExistingStorageAccount(class Microsoft.Azure.Management.Storage.Fluent.IStorageAccount storageAccount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Update#IWithStorageAccount#WithExistingStorageAccount(Microsoft.Azure.Management.Storage.Fluent.IStorageAccount)" />
      <MemberSignature Language="VB.NET" Value="Function WithExistingStorageAccount (storageAccount As IStorageAccount) As IUpdate Implements IWithStorageAccount.WithExistingStorageAccount" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithStorageAccount.WithExistingStorageAccount(Microsoft.Azure.Management.Storage.Fluent.IStorageAccount)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.50</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storageAccount" Type="Microsoft.Azure.Management.Storage.Fluent.IStorageAccount" />
      </Parameters>
      <Docs>
        <param name="storageAccount">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate IWithStorageAccount.WithNewStorageAccount (Microsoft.Azure.Management.Resource.Fluent.Core.ResourceActions.ICreatable&lt;Microsoft.Azure.Management.Storage.Fluent.IStorageAccount&gt; storageAccountCreatable);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount(class Microsoft.Azure.Management.Resource.Fluent.Core.ResourceActions.ICreatable`1&lt;class Microsoft.Azure.Management.Storage.Fluent.IStorageAccount&gt; storageAccountCreatable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Update#IWithStorageAccount#WithNewStorageAccount(Microsoft.Azure.Management.Resource.Fluent.Core.ResourceActions.ICreatable{Microsoft.Azure.Management.Storage.Fluent.IStorageAccount})" />
      <MemberSignature Language="VB.NET" Value="Function WithNewStorageAccount (storageAccountCreatable As ICreatable(Of IStorageAccount)) As IUpdate Implements IWithStorageAccount.WithNewStorageAccount" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount(Microsoft.Azure.Management.Resource.Fluent.Core.ResourceActions.ICreatable{Microsoft.Azure.Management.Storage.Fluent.IStorageAccount})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.50</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storageAccountCreatable" Type="Microsoft.Azure.Management.Resource.Fluent.Core.ResourceActions.ICreatable&lt;Microsoft.Azure.Management.Storage.Fluent.IStorageAccount&gt;" />
      </Parameters>
      <Docs>
        <param name="storageAccountCreatable">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate IWithStorageAccount.WithNewStorageAccount (string storageAccountName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount(string storageAccountName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Update#IWithStorageAccount#WithNewStorageAccount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function WithNewStorageAccount (storageAccountName As String) As IUpdate Implements IWithStorageAccount.WithNewStorageAccount" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.50</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storageAccountName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="storageAccountName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithStorageAccount.WithoutStorageAccount">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate IWithStorageAccount.WithoutStorageAccount ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithStorageAccount.WithoutStorageAccount() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Update#IWithStorageAccount#WithoutStorageAccount" />
      <MemberSignature Language="VB.NET" Value="Function WithoutStorageAccount () As IUpdate Implements IWithStorageAccount.WithoutStorageAccount" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithStorageAccount.WithoutStorageAccount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.50</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.AccountEndpoint">
      <MemberSignature Language="C#" Value="string Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.AccountEndpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.AccountEndpoint" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#IBatchAccount#AccountEndpoint" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property AccountEndpoint As String Implements IBatchAccount.AccountEndpoint" />
      <MemberSignature Language="F#" Usage="Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.AccountEndpoint" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.AccountEndpoint</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.50</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.ActiveJobAndJobScheduleQuota">
      <MemberSignature Language="C#" Value="int Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.ActiveJobAndJobScheduleQuota { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.ActiveJobAndJobScheduleQuota" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#IBatchAccount#ActiveJobAndJobScheduleQuota" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ActiveJobAndJobScheduleQuota As Integer Implements IBatchAccount.ActiveJobAndJobScheduleQuota" />
      <MemberSignature Language="F#" Usage="Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.ActiveJobAndJobScheduleQuota" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.ActiveJobAndJobScheduleQuota</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.50</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.Applications">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IDictionary&lt;string,Microsoft.Azure.Management.Batch.Fluent.IApplication&gt; Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.Applications { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Azure.Management.Batch.Fluent.IApplication&gt; Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.Applications" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#IBatchAccount#Applications" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Applications As IDictionary(Of String, IApplication) Implements IBatchAccount.Applications" />
      <MemberSignature Language="F#" Usage="Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.Applications" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.Applications</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.50</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Azure.Management.Batch.Fluent.IApplication&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.AutoStorage">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Batch.Fluent.Models.AutoStorageProperties Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.AutoStorage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.Batch.Fluent.Models.AutoStorageProperties Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.AutoStorage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#IBatchAccount#AutoStorage" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property AutoStorage As AutoStorageProperties Implements IBatchAccount.AutoStorage" />
      <MemberSignature Language="F#" Usage="Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.AutoStorage" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.AutoStorage</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.50</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Batch.Fluent.Models.AutoStorageProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.CoreQuota">
      <MemberSignature Language="C#" Value="int Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.CoreQuota { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.CoreQuota" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#IBatchAccount#CoreQuota" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property CoreQuota As Integer Implements IBatchAccount.CoreQuota" />
      <MemberSignature Language="F#" Usage="Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.CoreQuota" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.CoreQuota</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.50</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.GetKeys">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Batch.Fluent.BatchAccountKeys IBatchAccount.GetKeys ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Batch.Fluent.BatchAccountKeys Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.GetKeys() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#IBatchAccount#GetKeys" />
      <MemberSignature Language="VB.NET" Value="Function GetKeys () As BatchAccountKeys Implements IBatchAccount.GetKeys" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.GetKeys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.50</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Batch.Fluent.BatchAccountKeys</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.PoolQuota">
      <MemberSignature Language="C#" Value="int Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.PoolQuota { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.PoolQuota" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#IBatchAccount#PoolQuota" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property PoolQuota As Integer Implements IBatchAccount.PoolQuota" />
      <MemberSignature Language="F#" Usage="Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.PoolQuota" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.PoolQuota</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.50</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.ProvisioningState">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Batch.Fluent.Models.ProvisioningState Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.ProvisioningState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Azure.Management.Batch.Fluent.Models.ProvisioningState Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.ProvisioningState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#IBatchAccount#ProvisioningState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ProvisioningState As ProvisioningState Implements IBatchAccount.ProvisioningState" />
      <MemberSignature Language="F#" Usage="Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.ProvisioningState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.ProvisioningState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.50</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Batch.Fluent.Models.ProvisioningState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.RegenerateKeys">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Batch.Fluent.BatchAccountKeys IBatchAccount.RegenerateKeys (Microsoft.Azure.Management.Batch.Fluent.Models.AccountKeyType keyType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Batch.Fluent.BatchAccountKeys Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.RegenerateKeys(valuetype Microsoft.Azure.Management.Batch.Fluent.Models.AccountKeyType keyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#IBatchAccount#RegenerateKeys(Microsoft.Azure.Management.Batch.Fluent.Models.AccountKeyType)" />
      <MemberSignature Language="VB.NET" Value="Function RegenerateKeys (keyType As AccountKeyType) As BatchAccountKeys Implements IBatchAccount.RegenerateKeys" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.RegenerateKeys(Microsoft.Azure.Management.Batch.Fluent.Models.AccountKeyType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.50</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Batch.Fluent.BatchAccountKeys</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyType" Type="Microsoft.Azure.Management.Batch.Fluent.Models.AccountKeyType" />
      </Parameters>
      <Docs>
        <param name="keyType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.SynchronizeAutoStorageKeys">
      <MemberSignature Language="C#" Value="void IBatchAccount.SynchronizeAutoStorageKeys ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.SynchronizeAutoStorageKeys() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#IBatchAccount#SynchronizeAutoStorageKeys" />
      <MemberSignature Language="VB.NET" Value="Sub SynchronizeAutoStorageKeys () Implements IBatchAccount.SynchronizeAutoStorageKeys" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.SynchronizeAutoStorageKeys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.50</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Azure.Management.Resource.Fluent.Core.ResourceActions.IRefreshable&lt;Microsoft.Azure.Management.Batch.Fluent.IBatchAccount&gt;.Refresh">
      <MemberSignature Language="C#" Value="Microsoft.Azure.Management.Batch.Fluent.IBatchAccount IRefreshable&lt;IBatchAccount&gt;.Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Azure.Management.Batch.Fluent.IBatchAccount Microsoft.Azure.Management.Resource.Fluent.Core.ResourceActions.IRefreshable&lt;Microsoft.Azure.Management.Batch.Fluent.IBatchAccount&gt;.Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Resource#Fluent#Core#ResourceActions#IRefreshable&lt;Microsoft#Azure#Management#Batch#Fluent#IBatchAccount&gt;#Refresh" />
      <MemberSignature Language="VB.NET" Value="Function Refresh () As IBatchAccount Implements IRefreshable(Of IBatchAccount).Refresh" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Resource.Fluent.Core.ResourceActions.IRefreshable`1.Refresh</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.50</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Batch.Fluent.IBatchAccount</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public override Microsoft.Azure.Management.Batch.Fluent.IBatchAccount Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.Azure.Management.Batch.Fluent.IBatchAccount Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Refresh () As IBatchAccount" />
      <MemberSignature Language="F#" Value="override this.Refresh : unit -&gt; Microsoft.Azure.Management.Batch.Fluent.IBatchAccount" Usage="batchAccountImpl.Refresh " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Azure.Management.Resource.Fluent.Core.ResourceActions.IRefreshable`1.Refresh</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.50</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.Batch.Fluent.IBatchAccount</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
