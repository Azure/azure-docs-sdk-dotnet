<Type Name="CertificateOperationsExtensions" FullName="Microsoft.Azure.Management.Batch.Fluent.CertificateOperationsExtensions">
  <TypeSignature Language="C#" Value="public static class CertificateOperationsExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CertificateOperationsExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Batch.Fluent.CertificateOperationsExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module CertificateOperationsExtensions" />
  <TypeSignature Language="F#" Value="type CertificateOperationsExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for CertificateOperations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginCreateAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner&gt; BeginCreateAsync (this Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations operations, string resourceGroupName, string accountName, string certificateName, Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner parameters, string ifMatch = null, string ifNoneMatch = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner&gt; BeginCreateAsync(class Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations operations, string resourceGroupName, string accountName, string certificateName, class Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner parameters, string ifMatch, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Batch.Fluent.CertificateOperationsExtensions.BeginCreateAsync(Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member BeginCreateAsync : Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations * string * string * string * Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner&gt;" Usage="Microsoft.Azure.Management.Batch.Fluent.CertificateOperationsExtensions.BeginCreateAsync (operations, resourceGroupName, accountName, certificateName, parameters, ifMatch, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="parameters" Type="Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            The name of the resource group that contains the Batch account.
            </param>
        <param name="accountName">
            The name of the Batch account.
            </param>
        <param name="certificateName">
            The identifier for the certificate. This must be made up of algorithm and
            thumbprint separated by a dash, and must match the certificate data in the
            request. For example SHA1-a3d1c5.
            </param>
        <param name="parameters">
            Additional parameters for certificate creation.
            </param>
        <param name="ifMatch">
            The entity state (ETag) version of the certificate to update. A value of
            "*" can be used to apply the operation only if the certificate already
            exists. If omitted, this operation will always be applied.
            </param>
        <param name="ifNoneMatch">
            Set to '*' to allow a new certificate to be created, but to prevent
            updating an existing certificate. Other values will be ignored.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Creates a new certificate inside the specified account.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDeleteAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Batch.Fluent.Models.CertificateDeleteHeadersInner&gt; BeginDeleteAsync (this Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations operations, string resourceGroupName, string accountName, string certificateName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Batch.Fluent.Models.CertificateDeleteHeadersInner&gt; BeginDeleteAsync(class Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations operations, string resourceGroupName, string accountName, string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Batch.Fluent.CertificateOperationsExtensions.BeginDeleteAsync(Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member BeginDeleteAsync : Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Batch.Fluent.Models.CertificateDeleteHeadersInner&gt;" Usage="Microsoft.Azure.Management.Batch.Fluent.CertificateOperationsExtensions.BeginDeleteAsync (operations, resourceGroupName, accountName, certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Batch.Fluent.Models.CertificateDeleteHeadersInner&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            The name of the resource group that contains the Batch account.
            </param>
        <param name="accountName">
            The name of the Batch account.
            </param>
        <param name="certificateName">
            The identifier for the certificate. This must be made up of algorithm and
            thumbprint separated by a dash, and must match the certificate data in the
            request. For example SHA1-a3d1c5.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Deletes the specified certificate.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelDeletionAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner&gt; CancelDeletionAsync (this Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations operations, string resourceGroupName, string accountName, string certificateName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner&gt; CancelDeletionAsync(class Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations operations, string resourceGroupName, string accountName, string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Batch.Fluent.CertificateOperationsExtensions.CancelDeletionAsync(Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member CancelDeletionAsync : Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner&gt;" Usage="Microsoft.Azure.Management.Batch.Fluent.CertificateOperationsExtensions.CancelDeletionAsync (operations, resourceGroupName, accountName, certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            The name of the resource group that contains the Batch account.
            </param>
        <param name="accountName">
            The name of the Batch account.
            </param>
        <param name="certificateName">
            The identifier for the certificate. This must be made up of algorithm and
            thumbprint separated by a dash, and must match the certificate data in the
            request. For example SHA1-a3d1c5.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Cancels a failed deletion of a certificate from the specified account.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            If you try to delete a certificate that is being used by a pool or compute
            node, the status of the certificate changes to deleteFailed. If you decide
            that you want to continue using the certificate, you can use this operation
            to set the status of the certificate back to active. If you intend to
            delete the certificate, you do not need to run this operation after the
            deletion failed. You must make sure that the certificate is not being used
            by any resources, and then you can try again to delete the certificate.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner&gt; CreateAsync (this Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations operations, string resourceGroupName, string accountName, string certificateName, Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner parameters, string ifMatch = null, string ifNoneMatch = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner&gt; CreateAsync(class Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations operations, string resourceGroupName, string accountName, string certificateName, class Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner parameters, string ifMatch, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Batch.Fluent.CertificateOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member CreateAsync : Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations * string * string * string * Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner&gt;" Usage="Microsoft.Azure.Management.Batch.Fluent.CertificateOperationsExtensions.CreateAsync (operations, resourceGroupName, accountName, certificateName, parameters, ifMatch, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="parameters" Type="Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            The name of the resource group that contains the Batch account.
            </param>
        <param name="accountName">
            The name of the Batch account.
            </param>
        <param name="certificateName">
            The identifier for the certificate. This must be made up of algorithm and
            thumbprint separated by a dash, and must match the certificate data in the
            request. For example SHA1-a3d1c5.
            </param>
        <param name="parameters">
            Additional parameters for certificate creation.
            </param>
        <param name="ifMatch">
            The entity state (ETag) version of the certificate to update. A value of
            "*" can be used to apply the operation only if the certificate already
            exists. If omitted, this operation will always be applied.
            </param>
        <param name="ifNoneMatch">
            Set to '*' to allow a new certificate to be created, but to prevent
            updating an existing certificate. Other values will be ignored.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Creates a new certificate inside the specified account.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Batch.Fluent.Models.CertificateDeleteHeadersInner&gt; DeleteAsync (this Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations operations, string resourceGroupName, string accountName, string certificateName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Batch.Fluent.Models.CertificateDeleteHeadersInner&gt; DeleteAsync(class Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations operations, string resourceGroupName, string accountName, string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Batch.Fluent.CertificateOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member DeleteAsync : Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Batch.Fluent.Models.CertificateDeleteHeadersInner&gt;" Usage="Microsoft.Azure.Management.Batch.Fluent.CertificateOperationsExtensions.DeleteAsync (operations, resourceGroupName, accountName, certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Batch.Fluent.Models.CertificateDeleteHeadersInner&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            The name of the resource group that contains the Batch account.
            </param>
        <param name="accountName">
            The name of the Batch account.
            </param>
        <param name="certificateName">
            The identifier for the certificate. This must be made up of algorithm and
            thumbprint separated by a dash, and must match the certificate data in the
            request. For example SHA1-a3d1c5.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Deletes the specified certificate.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner&gt; GetAsync (this Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations operations, string resourceGroupName, string accountName, string certificateName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner&gt; GetAsync(class Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations operations, string resourceGroupName, string accountName, string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Batch.Fluent.CertificateOperationsExtensions.GetAsync(Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member GetAsync : Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner&gt;" Usage="Microsoft.Azure.Management.Batch.Fluent.CertificateOperationsExtensions.GetAsync (operations, resourceGroupName, accountName, certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            The name of the resource group that contains the Batch account.
            </param>
        <param name="accountName">
            The name of the Batch account.
            </param>
        <param name="certificateName">
            The identifier for the certificate. This must be made up of algorithm and
            thumbprint separated by a dash, and must match the certificate data in the
            request. For example SHA1-a3d1c5.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Gets information about the specified certificate.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListByBatchAccountAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner&gt;&gt; ListByBatchAccountAsync (this Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations operations, string resourceGroupName, string accountName, Nullable&lt;int&gt; maxresults = null, string select = null, string filter = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner&gt;&gt; ListByBatchAccountAsync(class Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations operations, string resourceGroupName, string accountName, valuetype System.Nullable`1&lt;int32&gt; maxresults, string select, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Batch.Fluent.CertificateOperationsExtensions.ListByBatchAccountAsync(Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ListByBatchAccountAsync : Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations * string * string * Nullable&lt;int&gt; * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner&gt;&gt;" Usage="Microsoft.Azure.Management.Batch.Fluent.CertificateOperationsExtensions.ListByBatchAccountAsync (operations, resourceGroupName, accountName, maxresults, select, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="maxresults" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="select" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            The name of the resource group that contains the Batch account.
            </param>
        <param name="accountName">
            The name of the Batch account.
            </param>
        <param name="maxresults">
            The maximum number of items to return in the response.
            </param>
        <param name="select">
            Comma separated list of properties that should be returned. e.g.
            "properties/provisioningState". Only top level properties under properties/
            are valid for selection.
            </param>
        <param name="filter">
            OData filter expression. Valid properties for filtering are
            "properties/provisioningState",
            "properties/provisioningStateTransitionTime", "name".
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Lists all of the certificates in the specified account.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListByBatchAccountNextAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner&gt;&gt; ListByBatchAccountNextAsync (this Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner&gt;&gt; ListByBatchAccountNextAsync(class Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations operations, string nextPageLink, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Batch.Fluent.CertificateOperationsExtensions.ListByBatchAccountNextAsync(Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ListByBatchAccountNextAsync : Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner&gt;&gt;" Usage="Microsoft.Azure.Management.Batch.Fluent.CertificateOperationsExtensions.ListByBatchAccountNextAsync (operations, nextPageLink, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations" RefType="this" />
        <Parameter Name="nextPageLink" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="nextPageLink">
            The NextLink from the previous successful call to List operation.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Lists all of the certificates in the specified account.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner&gt; UpdateAsync (this Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations operations, string resourceGroupName, string accountName, string certificateName, Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner parameters, string ifMatch = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner&gt; UpdateAsync(class Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations operations, string resourceGroupName, string accountName, string certificateName, class Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner parameters, string ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Batch.Fluent.CertificateOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member UpdateAsync : Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations * string * string * string * Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner&gt;" Usage="Microsoft.Azure.Management.Batch.Fluent.CertificateOperationsExtensions.UpdateAsync (operations, resourceGroupName, accountName, certificateName, parameters, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Batch.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations" RefType="this" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="certificateName" Type="System.String" />
        <Parameter Name="parameters" Type="Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="resourceGroupName">
            The name of the resource group that contains the Batch account.
            </param>
        <param name="accountName">
            The name of the Batch account.
            </param>
        <param name="certificateName">
            The identifier for the certificate. This must be made up of algorithm and
            thumbprint separated by a dash, and must match the certificate data in the
            request. For example SHA1-a3d1c5.
            </param>
        <param name="parameters">
            Certificate entity to update.
            </param>
        <param name="ifMatch">
            The entity state (ETag) version of the certificate to update. This value
            can be omitted or set to "*" to apply the operation unconditionally.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Updates the properties of an existing certificate.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>