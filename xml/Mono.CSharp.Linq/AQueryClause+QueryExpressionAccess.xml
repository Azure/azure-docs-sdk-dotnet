<Type Name="AQueryClause+QueryExpressionAccess" FullName="Mono.CSharp.Linq.AQueryClause+QueryExpressionAccess">
  <TypeSignature Language="C#" Value="protected class AQueryClause.QueryExpressionAccess : Mono.CSharp.MemberAccess" />
  <TypeSignature Language="ILAsm" Value=".class nested protected auto ansi beforefieldinit AQueryClause/QueryExpressionAccess extends Mono.CSharp.MemberAccess" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.Linq.AQueryClause.QueryExpressionAccess" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.MemberAccess</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryExpressionAccess (Mono.CSharp.Expression expr, string methodName, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.Expression expr, string methodName, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Linq.AQueryClause.QueryExpressionAccess.#ctor(Mono.CSharp.Expression,System.String,Mono.CSharp.Location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expr" Type="Mono.CSharp.Expression" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="expr">To be added.</param>
        <param name="methodName">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryExpressionAccess (Mono.CSharp.Expression expr, string methodName, Mono.CSharp.TypeArguments typeArguments, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.Expression expr, string methodName, class Mono.CSharp.TypeArguments typeArguments, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Linq.AQueryClause.QueryExpressionAccess.#ctor(Mono.CSharp.Expression,System.String,Mono.CSharp.TypeArguments,Mono.CSharp.Location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expr" Type="Mono.CSharp.Expression" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="typeArguments" Type="Mono.CSharp.TypeArguments" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="expr">To be added.</param>
        <param name="methodName">To be added.</param>
        <param name="typeArguments">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error_TypeDoesNotContainDefinition">
      <MemberSignature Language="C#" Value="public override void Error_TypeDoesNotContainDefinition (Mono.CSharp.ResolveContext ec, Mono.CSharp.TypeSpec type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Error_TypeDoesNotContainDefinition(class Mono.CSharp.ResolveContext ec, class Mono.CSharp.TypeSpec type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Linq.AQueryClause.QueryExpressionAccess.Error_TypeDoesNotContainDefinition(Mono.CSharp.ResolveContext,Mono.CSharp.TypeSpec,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="type" Type="Mono.CSharp.TypeSpec" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="type">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>