<Type Name="AQueryClause" FullName="Mono.CSharp.Linq.AQueryClause">
  <TypeSignature Language="C#" Value="public abstract class AQueryClause : Mono.CSharp.ShimExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AQueryClause extends Mono.CSharp.ShimExpression" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.Linq.AQueryClause" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.ShimExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AQueryClause (Mono.CSharp.Linq.QueryBlock block, Mono.CSharp.Expression expr, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.Linq.QueryBlock block, class Mono.CSharp.Expression expr, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Linq.AQueryClause.#ctor(Mono.CSharp.Linq.QueryBlock,Mono.CSharp.Expression,Mono.CSharp.Location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="block" Type="Mono.CSharp.Linq.QueryBlock" />
        <Parameter Name="expr" Type="Mono.CSharp.Expression" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="block">To be added.</param>
        <param name="expr">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="block">
      <MemberSignature Language="C#" Value="public Mono.CSharp.Linq.QueryBlock block;" />
      <MemberSignature Language="ILAsm" Value=".field public class Mono.CSharp.Linq.QueryBlock block" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.Linq.AQueryClause.block" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Linq.QueryBlock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildQueryClause">
      <MemberSignature Language="C#" Value="public virtual Mono.CSharp.Expression BuildQueryClause (Mono.CSharp.ResolveContext ec, Mono.CSharp.Expression lSide, Mono.CSharp.Parameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Mono.CSharp.Expression BuildQueryClause(class Mono.CSharp.ResolveContext ec, class Mono.CSharp.Expression lSide, class Mono.CSharp.Parameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Linq.AQueryClause.BuildQueryClause(Mono.CSharp.ResolveContext,Mono.CSharp.Expression,Mono.CSharp.Parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="lSide" Type="Mono.CSharp.Expression" />
        <Parameter Name="parameter" Type="Mono.CSharp.Parameter" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="lSide">To be added.</param>
        <param name="parameter">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneTo">
      <MemberSignature Language="C#" Value="protected override void CloneTo (Mono.CSharp.CloneContext clonectx, Mono.CSharp.Expression target);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneTo(class Mono.CSharp.CloneContext clonectx, class Mono.CSharp.Expression target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Linq.AQueryClause.CloneTo(Mono.CSharp.CloneContext,Mono.CSharp.Expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clonectx" Type="Mono.CSharp.CloneContext" />
        <Parameter Name="target" Type="Mono.CSharp.Expression" />
      </Parameters>
      <Docs>
        <param name="clonectx">To be added.</param>
        <param name="target">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateArguments">
      <MemberSignature Language="C#" Value="protected virtual void CreateArguments (Mono.CSharp.ResolveContext ec, Mono.CSharp.Parameter parameter, ref Mono.CSharp.Arguments args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateArguments(class Mono.CSharp.ResolveContext ec, class Mono.CSharp.Parameter parameter, class Mono.CSharp.Arguments args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Linq.AQueryClause.CreateArguments(Mono.CSharp.ResolveContext,Mono.CSharp.Parameter,Mono.CSharp.Arguments@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
        <Parameter Name="parameter" Type="Mono.CSharp.Parameter" />
        <Parameter Name="args" Type="Mono.CSharp.Arguments&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <param name="parameter">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildrenParameters">
      <MemberSignature Language="C#" Value="protected virtual Mono.CSharp.Parameter CreateChildrenParameters (Mono.CSharp.Parameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Mono.CSharp.Parameter CreateChildrenParameters(class Mono.CSharp.Parameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Linq.AQueryClause.CreateChildrenParameters(Mono.CSharp.Parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Parameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="Mono.CSharp.Parameter" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateQueryExpression">
      <MemberSignature Language="C#" Value="protected Mono.CSharp.Invocation CreateQueryExpression (Mono.CSharp.Expression lSide, Mono.CSharp.Arguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Mono.CSharp.Invocation CreateQueryExpression(class Mono.CSharp.Expression lSide, class Mono.CSharp.Arguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Linq.AQueryClause.CreateQueryExpression(Mono.CSharp.Expression,Mono.CSharp.Arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Invocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lSide" Type="Mono.CSharp.Expression" />
        <Parameter Name="arguments" Type="Mono.CSharp.Arguments" />
      </Parameters>
      <Docs>
        <param name="lSide">To be added.</param>
        <param name="arguments">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoResolve">
      <MemberSignature Language="C#" Value="protected override Mono.CSharp.Expression DoResolve (Mono.CSharp.ResolveContext ec);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Mono.CSharp.Expression DoResolve(class Mono.CSharp.ResolveContext ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Linq.AQueryClause.DoResolve(Mono.CSharp.ResolveContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Mono.CSharp.ResolveContext" />
      </Parameters>
      <Docs>
        <param name="ec">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="protected abstract string MethodName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Linq.AQueryClause.MethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="next">
      <MemberSignature Language="C#" Value="public Mono.CSharp.Linq.AQueryClause next;" />
      <MemberSignature Language="ILAsm" Value=".field public class Mono.CSharp.Linq.AQueryClause next" />
      <MemberSignature Language="DocId" Value="F:Mono.CSharp.Linq.AQueryClause.next" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Linq.AQueryClause</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public Mono.CSharp.Linq.AQueryClause Next { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.Linq.AQueryClause Next" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Linq.AQueryClause.Next" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Linq.AQueryClause</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tail">
      <MemberSignature Language="C#" Value="public Mono.CSharp.Linq.AQueryClause Tail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.CSharp.Linq.AQueryClause Tail" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Linq.AQueryClause.Tail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Linq.AQueryClause</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>