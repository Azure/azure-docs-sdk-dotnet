<Type Name="GroupJoin" FullName="Mono.CSharp.Linq.GroupJoin">
  <TypeSignature Language="C#" Value="public class GroupJoin : Mono.CSharp.Linq.Join" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GroupJoin extends Mono.CSharp.Linq.Join" />
  <TypeSignature Language="DocId" Value="T:Mono.CSharp.Linq.GroupJoin" />
  <AssemblyInfo>
    <AssemblyName>Mono.CSharp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.CSharp.Linq.Join</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GroupJoin (Mono.CSharp.Linq.QueryBlock block, Mono.CSharp.Linq.RangeVariable lt, Mono.CSharp.Expression inner, Mono.CSharp.Linq.QueryBlock outerSelector, Mono.CSharp.Linq.QueryBlock innerSelector, Mono.CSharp.Linq.RangeVariable into, Mono.CSharp.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Mono.CSharp.Linq.QueryBlock block, class Mono.CSharp.Linq.RangeVariable lt, class Mono.CSharp.Expression inner, class Mono.CSharp.Linq.QueryBlock outerSelector, class Mono.CSharp.Linq.QueryBlock innerSelector, class Mono.CSharp.Linq.RangeVariable into, valuetype Mono.CSharp.Location loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Linq.GroupJoin.#ctor(Mono.CSharp.Linq.QueryBlock,Mono.CSharp.Linq.RangeVariable,Mono.CSharp.Expression,Mono.CSharp.Linq.QueryBlock,Mono.CSharp.Linq.QueryBlock,Mono.CSharp.Linq.RangeVariable,Mono.CSharp.Location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="block" Type="Mono.CSharp.Linq.QueryBlock" />
        <Parameter Name="lt" Type="Mono.CSharp.Linq.RangeVariable" />
        <Parameter Name="inner" Type="Mono.CSharp.Expression" />
        <Parameter Name="outerSelector" Type="Mono.CSharp.Linq.QueryBlock" />
        <Parameter Name="innerSelector" Type="Mono.CSharp.Linq.QueryBlock" />
        <Parameter Name="into" Type="Mono.CSharp.Linq.RangeVariable" />
        <Parameter Name="loc" Type="Mono.CSharp.Location" />
      </Parameters>
      <Docs>
        <param name="block">To be added.</param>
        <param name="lt">To be added.</param>
        <param name="inner">To be added.</param>
        <param name="outerSelector">To be added.</param>
        <param name="innerSelector">To be added.</param>
        <param name="into">To be added.</param>
        <param name="loc">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override object Accept (Mono.CSharp.StructuralVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Accept(class Mono.CSharp.StructuralVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Linq.GroupJoin.Accept(Mono.CSharp.StructuralVisitor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Mono.CSharp.StructuralVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntoVariable">
      <MemberSignature Language="C#" Value="protected override Mono.CSharp.Linq.RangeVariable GetIntoVariable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Mono.CSharp.Linq.RangeVariable GetIntoVariable() cil managed" />
      <MemberSignature Language="DocId" Value="M:Mono.CSharp.Linq.GroupJoin.GetIntoVariable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.CSharp.Linq.RangeVariable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="protected override string MethodName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:Mono.CSharp.Linq.GroupJoin.MethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.CSharp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>