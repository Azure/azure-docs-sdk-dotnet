<Type Name="IFaceOperations" FullName="Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations">
  <TypeSignature Language="C#" Value="public interface IFaceOperations" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFaceOperations" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFaceOperations" />
  <TypeSignature Language="F#" Value="type IFaceOperations = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            FaceOperations operations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DetectWithStreamWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt;&gt; DetectWithStreamWithHttpMessagesAsync (System.IO.Stream image, Nullable&lt;bool&gt; returnFaceId = true, Nullable&lt;bool&gt; returnFaceLandmarks = false, System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt; returnFaceAttributes = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt;&gt; DetectWithStreamWithHttpMessagesAsync(class System.IO.Stream image, valuetype System.Nullable`1&lt;bool&gt; returnFaceId, valuetype System.Nullable`1&lt;bool&gt; returnFaceLandmarks, class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt; returnFaceAttributes, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations.DetectWithStreamWithHttpMessagesAsync(System.IO.Stream,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DetectWithStreamWithHttpMessagesAsync : System.IO.Stream * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt;&gt;" Usage="iFaceOperations.DetectWithStreamWithHttpMessagesAsync (image, returnFaceId, returnFaceLandmarks, returnFaceAttributes, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.IO.Stream" />
        <Parameter Name="returnFaceId" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="returnFaceLandmarks" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="returnFaceAttributes" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="image">
            An image stream.
            </param>
        <param name="returnFaceId">
            A value indicating whether the operation should return faceIds of
            detected faces.
            </param>
        <param name="returnFaceLandmarks">
            A value indicating whether the operation should return landmarks of
            the detected faces.
            </param>
        <param name="returnFaceAttributes">
            Analyze and return the one or more specified face attributes in the
            comma-separated string like "returnFaceAttributes=age,gender".
            Supported face attributes include age, gender, headPose, smile,
            facialHair, glasses and emotion. Note that each face attribute
            analysis has additional computational and time cost.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Detect human faces in an image and returns face locations, and
            optionally with faceIds, landmarks, and attributes.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="DetectWithUrlWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt;&gt; DetectWithUrlWithHttpMessagesAsync (string url, Nullable&lt;bool&gt; returnFaceId = true, Nullable&lt;bool&gt; returnFaceLandmarks = false, System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt; returnFaceAttributes = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt;&gt; DetectWithUrlWithHttpMessagesAsync(string url, valuetype System.Nullable`1&lt;bool&gt; returnFaceId, valuetype System.Nullable`1&lt;bool&gt; returnFaceLandmarks, class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt; returnFaceAttributes, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations.DetectWithUrlWithHttpMessagesAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DetectWithUrlWithHttpMessagesAsync : string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt;&gt;" Usage="iFaceOperations.DetectWithUrlWithHttpMessagesAsync (url, returnFaceId, returnFaceLandmarks, returnFaceAttributes, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="returnFaceId" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="returnFaceLandmarks" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="returnFaceAttributes" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="url">
            Publicly reachable URL of an image
            </param>
        <param name="returnFaceId">
            A value indicating whether the operation should return faceIds of
            detected faces.
            </param>
        <param name="returnFaceLandmarks">
            A value indicating whether the operation should return landmarks of
            the detected faces.
            </param>
        <param name="returnFaceAttributes">
            Analyze and return the one or more specified face attributes in the
            comma-separated string like "returnFaceAttributes=age,gender".
            Supported face attributes include age, gender, headPose, smile,
            facialHair, glasses and emotion. Note that each face attribute
            analysis has additional computational and time cost.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Detect human faces in an image and returns face locations, and
            optionally with faceIds, landmarks, and attributes.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="FindSimilarWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.SimilarFace&gt;&gt;&gt; FindSimilarWithHttpMessagesAsync (Guid faceId, string faceListId = null, string largeFaceListId = null, System.Collections.Generic.IList&lt;Nullable&lt;Guid&gt;&gt; faceIds = null, Nullable&lt;int&gt; maxNumOfCandidatesReturned = 20, Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode mode = Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode.MatchPerson, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.SimilarFace&gt;&gt;&gt; FindSimilarWithHttpMessagesAsync(valuetype System.Guid faceId, string faceListId, string largeFaceListId, class System.Collections.Generic.IList`1&lt;valuetype System.Nullable`1&lt;valuetype System.Guid&gt;&gt; faceIds, valuetype System.Nullable`1&lt;int32&gt; maxNumOfCandidatesReturned, valuetype Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode mode, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations.FindSimilarWithHttpMessagesAsync(System.Guid,System.String,System.String,System.Collections.Generic.IList{System.Nullable{System.Guid}},System.Nullable{System.Int32},Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member FindSimilarWithHttpMessagesAsync : Guid * string * string * System.Collections.Generic.IList&lt;Nullable&lt;Guid&gt;&gt; * Nullable&lt;int&gt; * Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.SimilarFace&gt;&gt;&gt;" Usage="iFaceOperations.FindSimilarWithHttpMessagesAsync (faceId, faceListId, largeFaceListId, faceIds, maxNumOfCandidatesReturned, mode, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.SimilarFace&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="faceId" Type="System.Guid" />
        <Parameter Name="faceListId" Type="System.String" />
        <Parameter Name="largeFaceListId" Type="System.String" />
        <Parameter Name="faceIds" Type="System.Collections.Generic.IList&lt;System.Nullable&lt;System.Guid&gt;&gt;" />
        <Parameter Name="maxNumOfCandidatesReturned" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="mode" Type="Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="faceId">
            FaceId of the query face. User needs to call Face - Detect first to
            get a valid faceId. Note that this faceId is not persisted and will
            expire 24 hours after the detection call
            </param>
        <param name="faceListId">
            An existing user-specified unique candidate face list, created in
            Face List - Create a Face List. Face list contains a set of
            persistedFaceIds which are persisted and will never expire.
            Parameter faceListId, largeFaceListId and faceIds should not be
            provided at the same time。
            </param>
        <param name="largeFaceListId">
            An existing user-specified unique candidate large face list,
            created in LargeFaceList - Create. Large face list contains a set
            of persistedFaceIds which are persisted and will never expire.
            Parameter faceListId, largeFaceListId and faceIds should not be
            provided at the same time.
            </param>
        <param name="faceIds">
            An array of candidate faceIds. All of them are created by Face -
            Detect and the faceIds will expire 24 hours after the detection
            call. The number of faceIds is limited to 1000. Parameter
            faceListId, largeFaceListId and faceIds should not be provided at
            the same time.
            </param>
        <param name="maxNumOfCandidatesReturned">
            The number of top similar faces returned. The valid range is [1,
            1000].
            </param>
        <param name="mode">
            Similar face searching mode. It can be "matchPerson" or
            "matchFace". Possible values include: 'matchPerson', 'matchFace'
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Given query face's faceId, find the similar-looking faces from a
            faceId array, a face list or a large face list.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.GroupResult&gt;&gt; GroupWithHttpMessagesAsync (System.Collections.Generic.IList&lt;Guid&gt; faceIds, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.GroupResult&gt;&gt; GroupWithHttpMessagesAsync(class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; faceIds, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations.GroupWithHttpMessagesAsync(System.Collections.Generic.IList{System.Guid},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GroupWithHttpMessagesAsync : System.Collections.Generic.IList&lt;Guid&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.GroupResult&gt;&gt;" Usage="iFaceOperations.GroupWithHttpMessagesAsync (faceIds, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.GroupResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="faceIds" Type="System.Collections.Generic.IList&lt;System.Guid&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="faceIds">
            Array of candidate faceId created by Face - Detect. The maximum is
            1000 faces
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Divide candidate faces into groups based on face similarity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="IdentifyWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyResult&gt;&gt;&gt; IdentifyWithHttpMessagesAsync (System.Collections.Generic.IList&lt;Guid&gt; faceIds, string personGroupId = null, string largePersonGroupId = null, Nullable&lt;int&gt; maxNumOfCandidatesReturned = 1, Nullable&lt;double&gt; confidenceThreshold = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyResult&gt;&gt;&gt; IdentifyWithHttpMessagesAsync(class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; faceIds, string personGroupId, string largePersonGroupId, valuetype System.Nullable`1&lt;int32&gt; maxNumOfCandidatesReturned, valuetype System.Nullable`1&lt;float64&gt; confidenceThreshold, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations.IdentifyWithHttpMessagesAsync(System.Collections.Generic.IList{System.Guid},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Double},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member IdentifyWithHttpMessagesAsync : System.Collections.Generic.IList&lt;Guid&gt; * string * string * Nullable&lt;int&gt; * Nullable&lt;double&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyResult&gt;&gt;&gt;" Usage="iFaceOperations.IdentifyWithHttpMessagesAsync (faceIds, personGroupId, largePersonGroupId, maxNumOfCandidatesReturned, confidenceThreshold, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyResult&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="faceIds" Type="System.Collections.Generic.IList&lt;System.Guid&gt;" />
        <Parameter Name="personGroupId" Type="System.String" />
        <Parameter Name="largePersonGroupId" Type="System.String" />
        <Parameter Name="maxNumOfCandidatesReturned" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="confidenceThreshold" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="faceIds">
            Array of query faces faceIds, created by the Face - Detect. Each of
            the faces are identified independently. The valid number of faceIds
            is between [1, 10].
            </param>
        <param name="personGroupId">
            PersonGroupId of the target person group, created by PersonGroup -
            Create. Parameter personGroupId and largePersonGroupId should not
            be provided at the same time.
            </param>
        <param name="largePersonGroupId">
            LargePersonGroupId of the target large person group, created by
            LargePersonGroup - Create. Parameter personGroupId and
            largePersonGroupId should not be provided at the same time.
            </param>
        <param name="maxNumOfCandidatesReturned">
            The range of maxNumOfCandidatesReturned is between 1 and 5 (default
            is 1).
            </param>
        <param name="confidenceThreshold">
            Confidence threshold of identification, used to judge whether one
            face belong to one person. The range of confidenceThreshold is [0,
            1] (default specified by algorithm).
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            1-to-many identification to find the closest matches of the
            specific query person face from a person group or large person
            group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyFaceToFaceWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt;&gt; VerifyFaceToFaceWithHttpMessagesAsync (Guid faceId1, Guid faceId2, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt;&gt; VerifyFaceToFaceWithHttpMessagesAsync(valuetype System.Guid faceId1, valuetype System.Guid faceId2, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations.VerifyFaceToFaceWithHttpMessagesAsync(System.Guid,System.Guid,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member VerifyFaceToFaceWithHttpMessagesAsync : Guid * Guid * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt;&gt;" Usage="iFaceOperations.VerifyFaceToFaceWithHttpMessagesAsync (faceId1, faceId2, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="faceId1" Type="System.Guid" />
        <Parameter Name="faceId2" Type="System.Guid" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="faceId1">
            FaceId of the first face, comes from Face - Detect
            </param>
        <param name="faceId2">
            FaceId of the second face, comes from Face - Detect
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Verify whether two faces belong to a same person or whether one
            face belongs to a person.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyFaceToPersonWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt;&gt; VerifyFaceToPersonWithHttpMessagesAsync (Guid faceId, Guid personId, string personGroupId = null, string largePersonGroupId = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt;&gt; VerifyFaceToPersonWithHttpMessagesAsync(valuetype System.Guid faceId, valuetype System.Guid personId, string personGroupId, string largePersonGroupId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations.VerifyFaceToPersonWithHttpMessagesAsync(System.Guid,System.Guid,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member VerifyFaceToPersonWithHttpMessagesAsync : Guid * Guid * string * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt;&gt;" Usage="iFaceOperations.VerifyFaceToPersonWithHttpMessagesAsync (faceId, personId, personGroupId, largePersonGroupId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="faceId" Type="System.Guid" />
        <Parameter Name="personId" Type="System.Guid" />
        <Parameter Name="personGroupId" Type="System.String" />
        <Parameter Name="largePersonGroupId" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="faceId">
            FaceId of the face, comes from Face - Detect
            </param>
        <param name="personId">
            Specify a certain person in a person group or a large person group.
            personId is created in PersonGroup Person - Create or
            LargePersonGroup Person - Create.
            </param>
        <param name="personGroupId">
            Using existing personGroupId and personId for fast loading a
            specified person. personGroupId is created in PersonGroup - Create.
            Parameter personGroupId and largePersonGroupId should not be
            provided at the same time.
            </param>
        <param name="largePersonGroupId">
            Using existing largePersonGroupId and personId for fast loading a
            specified person. largePersonGroupId is created in LargePersonGroup
            - Create. Parameter personGroupId and largePersonGroupId should not
            be provided at the same time.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Verify whether two faces belong to a same person. Compares a face
            Id with a Person Id
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>