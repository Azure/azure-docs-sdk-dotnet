<Type Name="IFaceListOperations" FullName="Microsoft.Azure.CognitiveServices.Vision.Face.IFaceListOperations">
  <TypeSignature Language="C#" Value="public interface IFaceListOperations" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFaceListOperations" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceListOperations" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFaceListOperations" />
  <TypeSignature Language="F#" Value="type IFaceListOperations = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            FaceListOperations operations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddFaceFromStreamWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.PersistedFace&gt;&gt; AddFaceFromStreamWithHttpMessagesAsync (string faceListId, System.IO.Stream image, string userData = default, System.Collections.Generic.IList&lt;int&gt; targetFace = default, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.PersistedFace&gt;&gt; AddFaceFromStreamWithHttpMessagesAsync(string faceListId, class System.IO.Stream image, string userData, class System.Collections.Generic.IList`1&lt;int32&gt; targetFace, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceListOperations.AddFaceFromStreamWithHttpMessagesAsync(System.String,System.IO.Stream,System.String,System.Collections.Generic.IList{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddFaceFromStreamWithHttpMessagesAsync (faceListId As String, image As Stream, Optional userData As String = Nothing, Optional targetFace As IList(Of Integer) = Nothing, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of PersistedFace))" />
      <MemberSignature Language="F#" Value="abstract member AddFaceFromStreamWithHttpMessagesAsync : string * System.IO.Stream * string * System.Collections.Generic.IList&lt;int&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.PersistedFace&gt;&gt;" Usage="iFaceListOperations.AddFaceFromStreamWithHttpMessagesAsync (faceListId, image, userData, targetFace, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.PersistedFace&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="faceListId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="image" Type="System.IO.Stream" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="userData" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="targetFace" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="faceListId">
            Id referencing a particular face list.
            </param>
        <param name="image">
            An image stream.
            </param>
        <param name="userData">
            User-specified data about the face for any purpose. The maximum
            length is 1KB.
            </param>
        <param name="targetFace">
            A face rectangle to specify the target face to be added to a person
            in the format of "targetFace=left,top,width,height". E.g.
            "targetFace=10,10,100,100". If there is more than one face in the
            image, targetFace is required to specify which face to add. No
            targetFace means there is only one face detected in the entire
            image.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Add a face to a face list. The input face is specified as an image
            with a targetFace rectangle. It returns a persistedFaceId
            representing the added face, and persistedFaceId will not expire.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFaceFromStreamWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.PersistedFace&gt;&gt; AddFaceFromStreamWithHttpMessagesAsync (string faceListId, System.IO.Stream image, string userData = default, System.Collections.Generic.IList&lt;int&gt; targetFace = default, string detectionModel = default, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.PersistedFace&gt;&gt; AddFaceFromStreamWithHttpMessagesAsync(string faceListId, class System.IO.Stream image, string userData, class System.Collections.Generic.IList`1&lt;int32&gt; targetFace, string detectionModel, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceListOperations.AddFaceFromStreamWithHttpMessagesAsync(System.String,System.IO.Stream,System.String,System.Collections.Generic.IList{System.Int32},System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddFaceFromStreamWithHttpMessagesAsync (faceListId As String, image As Stream, Optional userData As String = Nothing, Optional targetFace As IList(Of Integer) = Nothing, Optional detectionModel As String = Nothing, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of PersistedFace))" />
      <MemberSignature Language="F#" Value="abstract member AddFaceFromStreamWithHttpMessagesAsync : string * System.IO.Stream * string * System.Collections.Generic.IList&lt;int&gt; * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.PersistedFace&gt;&gt;" Usage="iFaceListOperations.AddFaceFromStreamWithHttpMessagesAsync (faceListId, image, userData, targetFace, detectionModel, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.PersistedFace&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="faceListId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="image" Type="System.IO.Stream" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="userData" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="targetFace" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="detectionModel" Type="System.String" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" Index="5" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="6" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="faceListId">To be added.</param>
        <param name="image">To be added.</param>
        <param name="userData">To be added.</param>
        <param name="targetFace">To be added.</param>
        <param name="detectionModel">To be added.</param>
        <param name="customHeaders">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFaceFromUrlWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.PersistedFace&gt;&gt; AddFaceFromUrlWithHttpMessagesAsync (string faceListId, string url, string userData = default, System.Collections.Generic.IList&lt;int&gt; targetFace = default, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.PersistedFace&gt;&gt; AddFaceFromUrlWithHttpMessagesAsync(string faceListId, string url, string userData, class System.Collections.Generic.IList`1&lt;int32&gt; targetFace, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceListOperations.AddFaceFromUrlWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddFaceFromUrlWithHttpMessagesAsync (faceListId As String, url As String, Optional userData As String = Nothing, Optional targetFace As IList(Of Integer) = Nothing, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of PersistedFace))" />
      <MemberSignature Language="F#" Value="abstract member AddFaceFromUrlWithHttpMessagesAsync : string * string * string * System.Collections.Generic.IList&lt;int&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.PersistedFace&gt;&gt;" Usage="iFaceListOperations.AddFaceFromUrlWithHttpMessagesAsync (faceListId, url, userData, targetFace, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.PersistedFace&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="faceListId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="url" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="userData" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="targetFace" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="faceListId">
            Id referencing a particular face list.
            </param>
        <param name="url">
            Publicly reachable URL of an image
            </param>
        <param name="userData">
            User-specified data about the face for any purpose. The maximum
            length is 1KB.
            </param>
        <param name="targetFace">
            A face rectangle to specify the target face to be added to a person
            in the format of "targetFace=left,top,width,height". E.g.
            "targetFace=10,10,100,100". If there is more than one face in the
            image, targetFace is required to specify which face to add. No
            targetFace means there is only one face detected in the entire
            image.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Add a face to a face list. The input face is specified as an image
            with a targetFace rectangle. It returns a persistedFaceId
            representing the added face, and persistedFaceId will not expire.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFaceFromUrlWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.PersistedFace&gt;&gt; AddFaceFromUrlWithHttpMessagesAsync (string faceListId, string url, string userData = default, System.Collections.Generic.IList&lt;int&gt; targetFace = default, string detectionModel = default, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.PersistedFace&gt;&gt; AddFaceFromUrlWithHttpMessagesAsync(string faceListId, string url, string userData, class System.Collections.Generic.IList`1&lt;int32&gt; targetFace, string detectionModel, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceListOperations.AddFaceFromUrlWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.Int32},System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddFaceFromUrlWithHttpMessagesAsync (faceListId As String, url As String, Optional userData As String = Nothing, Optional targetFace As IList(Of Integer) = Nothing, Optional detectionModel As String = Nothing, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of PersistedFace))" />
      <MemberSignature Language="F#" Value="abstract member AddFaceFromUrlWithHttpMessagesAsync : string * string * string * System.Collections.Generic.IList&lt;int&gt; * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.PersistedFace&gt;&gt;" Usage="iFaceListOperations.AddFaceFromUrlWithHttpMessagesAsync (faceListId, url, userData, targetFace, detectionModel, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.PersistedFace&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="faceListId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="url" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="userData" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="targetFace" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="detectionModel" Type="System.String" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" Index="5" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="6" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="faceListId">To be added.</param>
        <param name="url">To be added.</param>
        <param name="userData">To be added.</param>
        <param name="targetFace">To be added.</param>
        <param name="detectionModel">To be added.</param>
        <param name="customHeaders">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt; CreateWithHttpMessagesAsync (string faceListId, string name = default, string userData = default, string recognitionModel = default, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse&gt; CreateWithHttpMessagesAsync(string faceListId, string name, string userData, string recognitionModel, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceListOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWithHttpMessagesAsync (faceListId As String, Optional name As String = Nothing, Optional userData As String = Nothing, Optional recognitionModel As String = Nothing, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse)" />
      <MemberSignature Language="F#" Value="abstract member CreateWithHttpMessagesAsync : string * string * string * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt;" Usage="iFaceListOperations.CreateWithHttpMessagesAsync (faceListId, name, userData, recognitionModel, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="faceListId" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="userData" Type="System.String" />
        <Parameter Name="recognitionModel" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="faceListId">
             Id referencing a particular face list.
             </param>
        <param name="name">
             User defined name, maximum length is 128.
             </param>
        <param name="userData">
             User specified data. Length should not exceed 16KB.
             </param>
        <param name="recognitionModel">
             Possible values include: 'recognition_01', 'recognition_02'
             </param>
        <param name="customHeaders">
             The headers that will be added to request.
             </param>
        <param name="cancellationToken">
             The cancellation token.
             </param>
        <summary>
             Create an empty face list with user-specified faceListId, name, an
             optional userData and recognitionModel. Up to 64 face lists are
             allowed in one subscription.
             &lt;br /&gt; Face list is a list of faces, up to 1,000 faces, and
             used by [Face - Find
             Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237).
             &lt;br /&gt; After creation, user should use [FaceList - Add
             Face](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395250)
             to import the faces. Faces are stored on server until [FaceList -
             Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524f)
             is called.
             &lt;br /&gt; Find Similar is used for scenario like finding
             celebrity-like faces, similar face filtering, or as a light way
             face identification. But if the actual use is to identify person,
             please use
             [PersonGroup](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395244)
             /
             [LargePersonGroup](/docs/services/563879b61984550e40cbbe8d/operations/599acdee6ac60f11b48b5a9d)
             and [Face -
             Identify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239).
             &lt;br /&gt; Please consider
             [LargeFaceList](/docs/services/563879b61984550e40cbbe8d/operations/5a157b68d2de3616c086f2cc)
             when the face number is large. It can support up to 1,000,000
             faces. 'recognitionModel' should be specified to associate with
             this face list. The default value for 'recognitionModel' is
             'recognition_01', if the latest model needed, please explicitly
             specify the model you need in this parameter. New faces that are
             added to an existing face list will use the recognition model
             that's already associated with the collection. Existing face
             features in a face list can't be updated to features extracted by
             another version of recognition model.
            
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteFaceWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt; DeleteFaceWithHttpMessagesAsync (string faceListId, Guid persistedFaceId, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse&gt; DeleteFaceWithHttpMessagesAsync(string faceListId, valuetype System.Guid persistedFaceId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceListOperations.DeleteFaceWithHttpMessagesAsync(System.String,System.Guid,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteFaceWithHttpMessagesAsync (faceListId As String, persistedFaceId As Guid, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse)" />
      <MemberSignature Language="F#" Value="abstract member DeleteFaceWithHttpMessagesAsync : string * Guid * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt;" Usage="iFaceListOperations.DeleteFaceWithHttpMessagesAsync (faceListId, persistedFaceId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="faceListId" Type="System.String" />
        <Parameter Name="persistedFaceId" Type="System.Guid" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="faceListId">
            Id referencing a particular face list.
            </param>
        <param name="persistedFaceId">
            Id referencing a particular persistedFaceId of an existing face.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Delete an existing face from a face list (given by a
            persistedFaceId and a faceListId). Persisted image related to the
            face will also be deleted.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt; DeleteWithHttpMessagesAsync (string faceListId, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse&gt; DeleteWithHttpMessagesAsync(string faceListId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceListOperations.DeleteWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteWithHttpMessagesAsync (faceListId As String, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse)" />
      <MemberSignature Language="F#" Value="abstract member DeleteWithHttpMessagesAsync : string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt;" Usage="iFaceListOperations.DeleteWithHttpMessagesAsync (faceListId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="faceListId" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="faceListId">
            Id referencing a particular face list.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Delete an existing face list according to faceListId. Persisted
            face images in the face list will also be deleted.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceList&gt;&gt; GetWithHttpMessagesAsync (string faceListId, bool? returnRecognitionModel = false, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceList&gt;&gt; GetWithHttpMessagesAsync(string faceListId, valuetype System.Nullable`1&lt;bool&gt; returnRecognitionModel, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceListOperations.GetWithHttpMessagesAsync(System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWithHttpMessagesAsync (faceListId As String, Optional returnRecognitionModel As Nullable(Of Boolean) = false, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of FaceList))" />
      <MemberSignature Language="F#" Value="abstract member GetWithHttpMessagesAsync : string * Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceList&gt;&gt;" Usage="iFaceListOperations.GetWithHttpMessagesAsync (faceListId, returnRecognitionModel, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceList&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="faceListId" Type="System.String" />
        <Parameter Name="returnRecognitionModel" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="faceListId">
             Id referencing a particular face list.
             </param>
        <param name="returnRecognitionModel">
             A value indicating whether the operation should return
             'recognitionModel' in response.
             </param>
        <param name="customHeaders">
             The headers that will be added to request.
             </param>
        <param name="cancellationToken">
             The cancellation token.
             </param>
        <summary>
             Retrieve a face list’s faceListId, name, userData, recognitionModel
             and faces in the face list.
            
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
      </Docs>
    </Member>
    <Member MemberName="ListWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceList&gt;&gt;&gt; ListWithHttpMessagesAsync (bool? returnRecognitionModel = false, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceList&gt;&gt;&gt; ListWithHttpMessagesAsync(valuetype System.Nullable`1&lt;bool&gt; returnRecognitionModel, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceListOperations.ListWithHttpMessagesAsync(System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListWithHttpMessagesAsync (Optional returnRecognitionModel As Nullable(Of Boolean) = false, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of IList(Of FaceList)))" />
      <MemberSignature Language="F#" Value="abstract member ListWithHttpMessagesAsync : Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceList&gt;&gt;&gt;" Usage="iFaceListOperations.ListWithHttpMessagesAsync (returnRecognitionModel, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceList&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnRecognitionModel" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="returnRecognitionModel">
             A value indicating whether the operation should return
             'recognitionModel' in response.
             </param>
        <param name="customHeaders">
             The headers that will be added to request.
             </param>
        <param name="cancellationToken">
             The cancellation token.
             </param>
        <summary>
             List face lists’ faceListId, name, userData and recognitionModel.
             &lt;br /&gt;
             To get face information inside faceList use [FaceList -
             Get](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524c)
            
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
             Thrown when the operation returned an invalid status code
             </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt; UpdateWithHttpMessagesAsync (string faceListId, string name = default, string userData = default, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse&gt; UpdateWithHttpMessagesAsync(string faceListId, string name, string userData, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceListOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function UpdateWithHttpMessagesAsync (faceListId As String, Optional name As String = Nothing, Optional userData As String = Nothing, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse)" />
      <MemberSignature Language="F#" Value="abstract member UpdateWithHttpMessagesAsync : string * string * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt;" Usage="iFaceListOperations.UpdateWithHttpMessagesAsync (faceListId, name, userData, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="faceListId" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="userData" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="faceListId">
            Id referencing a particular face list.
            </param>
        <param name="name">
            User defined name, maximum length is 128.
            </param>
        <param name="userData">
            User specified data. Length should not exceed 16KB.
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Update information of a face list.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
