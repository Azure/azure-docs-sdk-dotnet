<Type Name="FaceOperationsExtensions" FullName="Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions">
  <TypeSignature Language="C#" Value="public static class FaceOperationsExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FaceOperationsExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module FaceOperationsExtensions" />
  <TypeSignature Language="F#" Value="type FaceOperationsExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for FaceOperations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DetectWithStreamAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt; DetectWithStreamAsync (this Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, System.IO.Stream image, bool? returnFaceId = true, bool? returnFaceLandmarks = false, System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt; returnFaceAttributes = default, string recognitionModel = default, bool? returnRecognitionModel = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt; DetectWithStreamAsync(class Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, class System.IO.Stream image, valuetype System.Nullable`1&lt;bool&gt; returnFaceId, valuetype System.Nullable`1&lt;bool&gt; returnFaceLandmarks, class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt; returnFaceAttributes, string recognitionModel, valuetype System.Nullable`1&lt;bool&gt; returnRecognitionModel, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.DetectWithStreamAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations,System.IO.Stream,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType},System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DetectWithStreamAsync (operations As IFaceOperations, image As Stream, Optional returnFaceId As Nullable(Of Boolean) = true, Optional returnFaceLandmarks As Nullable(Of Boolean) = false, Optional returnFaceAttributes As IList(Of FaceAttributeType) = null, Optional recognitionModel As String = null, Optional returnRecognitionModel As Nullable(Of Boolean) = false, Optional cancellationToken As CancellationToken = null) As Task(Of IList(Of DetectedFace))" />
      <MemberSignature Language="F#" Value="static member DetectWithStreamAsync : Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations * System.IO.Stream * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt; * string * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt;" Usage="Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.DetectWithStreamAsync (operations, image, returnFaceId, returnFaceLandmarks, returnFaceAttributes, recognitionModel, returnRecognitionModel, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="image" Type="System.IO.Stream" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="returnFaceId" Type="System.Nullable&lt;System.Boolean&gt;" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="returnFaceLandmarks" Type="System.Nullable&lt;System.Boolean&gt;" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="returnFaceAttributes" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt;" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="recognitionModel" Type="System.String" Index="5" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="returnRecognitionModel" Type="System.Nullable&lt;System.Boolean&gt;" Index="6" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="7" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="image">
            An image stream.
            </param>
        <param name="returnFaceId">
            A value indicating whether the operation should return faceIds of detected
            faces.
            </param>
        <param name="returnFaceLandmarks">
            A value indicating whether the operation should return landmarks of the
            detected faces.
            </param>
        <param name="returnFaceAttributes">
            Analyze and return the one or more specified face attributes in the
            comma-separated string like "returnFaceAttributes=age,gender". Supported
            face attributes include age, gender, headPose, smile, facialHair, glasses
            and emotion. Note that each face attribute analysis has additional
            computational and time cost.
            </param>
        <param name="recognitionModel">
            Name of recognition model. Recognition model is used when the face features
            are extracted and associated with detected faceIds, (Large)FaceList or
            (Large)PersonGroup. A recognition model name can be provided when
            performing Face - Detect or (Large)FaceList - Create or (Large)PersonGroup
            - Create. The default value is 'recognition_01', if latest model needed,
            please explicitly specify the model you need. Possible values include:
            'recognition_01', 'recognition_02'
            </param>
        <param name="returnRecognitionModel">
            A value indicating whether the operation should return 'recognitionModel'
            in response.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Detect human faces in an image and returns face locations, and optionally
            with faceIds, landmarks, and attributes.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectWithStreamAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt; DetectWithStreamAsync (this Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, System.IO.Stream image, bool? returnFaceId = true, bool? returnFaceLandmarks = false, System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt; returnFaceAttributes = default, string recognitionModel = default, bool? returnRecognitionModel = false, string detectionModel = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt; DetectWithStreamAsync(class Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, class System.IO.Stream image, valuetype System.Nullable`1&lt;bool&gt; returnFaceId, valuetype System.Nullable`1&lt;bool&gt; returnFaceLandmarks, class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt; returnFaceAttributes, string recognitionModel, valuetype System.Nullable`1&lt;bool&gt; returnRecognitionModel, string detectionModel, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.DetectWithStreamAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations,System.IO.Stream,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType},System.String,System.Nullable{System.Boolean},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DetectWithStreamAsync (operations As IFaceOperations, image As Stream, Optional returnFaceId As Nullable(Of Boolean) = true, Optional returnFaceLandmarks As Nullable(Of Boolean) = false, Optional returnFaceAttributes As IList(Of FaceAttributeType) = null, Optional recognitionModel As String = null, Optional returnRecognitionModel As Nullable(Of Boolean) = false, Optional detectionModel As String = null, Optional cancellationToken As CancellationToken = null) As Task(Of IList(Of DetectedFace))" />
      <MemberSignature Language="F#" Value="static member DetectWithStreamAsync : Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations * System.IO.Stream * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt; * string * Nullable&lt;bool&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt;" Usage="Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.DetectWithStreamAsync (operations, image, returnFaceId, returnFaceLandmarks, returnFaceAttributes, recognitionModel, returnRecognitionModel, detectionModel, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="image" Type="System.IO.Stream" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="returnFaceId" Type="System.Nullable&lt;System.Boolean&gt;" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="returnFaceLandmarks" Type="System.Nullable&lt;System.Boolean&gt;" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="returnFaceAttributes" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt;" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="recognitionModel" Type="System.String" Index="5" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="returnRecognitionModel" Type="System.Nullable&lt;System.Boolean&gt;" Index="6" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="detectionModel" Type="System.String" Index="7" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="8" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="image">To be added.</param>
        <param name="returnFaceId">To be added.</param>
        <param name="returnFaceLandmarks">To be added.</param>
        <param name="returnFaceAttributes">To be added.</param>
        <param name="recognitionModel">To be added.</param>
        <param name="returnRecognitionModel">To be added.</param>
        <param name="detectionModel">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectWithUrlAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt; DetectWithUrlAsync (this Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, string url, bool? returnFaceId = true, bool? returnFaceLandmarks = false, System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt; returnFaceAttributes = default, string recognitionModel = default, bool? returnRecognitionModel = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt; DetectWithUrlAsync(class Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, string url, valuetype System.Nullable`1&lt;bool&gt; returnFaceId, valuetype System.Nullable`1&lt;bool&gt; returnFaceLandmarks, class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt; returnFaceAttributes, string recognitionModel, valuetype System.Nullable`1&lt;bool&gt; returnRecognitionModel, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.DetectWithUrlAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType},System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DetectWithUrlAsync (operations As IFaceOperations, url As String, Optional returnFaceId As Nullable(Of Boolean) = true, Optional returnFaceLandmarks As Nullable(Of Boolean) = false, Optional returnFaceAttributes As IList(Of FaceAttributeType) = null, Optional recognitionModel As String = null, Optional returnRecognitionModel As Nullable(Of Boolean) = false, Optional cancellationToken As CancellationToken = null) As Task(Of IList(Of DetectedFace))" />
      <MemberSignature Language="F#" Value="static member DetectWithUrlAsync : Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt; * string * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt;" Usage="Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.DetectWithUrlAsync (operations, url, returnFaceId, returnFaceLandmarks, returnFaceAttributes, recognitionModel, returnRecognitionModel, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="url" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="returnFaceId" Type="System.Nullable&lt;System.Boolean&gt;" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="returnFaceLandmarks" Type="System.Nullable&lt;System.Boolean&gt;" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="returnFaceAttributes" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt;" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="recognitionModel" Type="System.String" Index="5" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="returnRecognitionModel" Type="System.Nullable&lt;System.Boolean&gt;" Index="6" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="7" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="operations">
             The operations group for this extension method.
             </param>
        <param name="url">
             Publicly reachable URL of an image
             </param>
        <param name="returnFaceId">
             A value indicating whether the operation should return faceIds of detected
             faces.
             </param>
        <param name="returnFaceLandmarks">
             A value indicating whether the operation should return landmarks of the
             detected faces.
             </param>
        <param name="returnFaceAttributes">
             Analyze and return the one or more specified face attributes in the
             comma-separated string like "returnFaceAttributes=age,gender". Supported
             face attributes include age, gender, headPose, smile, facialHair, glasses
             and emotion. Note that each face attribute analysis has additional
             computational and time cost.
             </param>
        <param name="recognitionModel">
             Name of recognition model. Recognition model is used when the face features
             are extracted and associated with detected faceIds, (Large)FaceList or
             (Large)PersonGroup. A recognition model name can be provided when
             performing Face - Detect or (Large)FaceList - Create or (Large)PersonGroup
             - Create. The default value is 'recognition_01', if latest model needed,
             please explicitly specify the model you need. Possible values include:
             'recognition_01', 'recognition_02'
             </param>
        <param name="returnRecognitionModel">
             A value indicating whether the operation should return 'recognitionModel'
             in response.
             </param>
        <param name="cancellationToken">
             The cancellation token.
             </param>
        <summary>
             Detect human faces in an image, return face rectangles, and optionally with
             faceIds, landmarks, and attributes.&lt;br /&gt;
             * Optional parameters including faceId, landmarks, and attributes.
             Attributes include age, gender, headPose, smile, facialHair, glasses,
             emotion, hair, makeup, occlusion, accessories, blur, exposure and noise.
             * The extracted face feature, instead of the actual image, will be stored
             on server. The faceId is an identifier of the face feature and will be used
             in [Face -
             Identify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239),
             [Face -
             Verify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523a),
             and [Face - Find
             Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237).
             It will expire 24 hours after the detection call.
             * Higher face image quality means better detection and recognition
             precision. Please consider high-quality faces: frontal, clear, and face
             size is 200x200 pixels (100 pixels between eyes) or bigger.
             * JPEG, PNG, GIF (the first frame), and BMP format are supported. The
             allowed image file size is from 1KB to 6MB.
             * Faces are detectable when its size is 36x36 to 4096x4096 pixels. If need
             to detect very small but clear faces, please try to enlarge the input
             image.
             * Up to 64 faces can be returned for an image. Faces are ranked by face
             rectangle size from large to small.
             * Face detector prefer frontal and near-frontal faces. There are cases that
             faces may not be detected, e.g. exceptionally large face angles (head-pose)
             or being occluded, or wrong image orientation.
             * Attributes (age, gender, headPose, smile, facialHair, glasses, emotion,
             hair, makeup, occlusion, accessories, blur, exposure and noise) may not be
             perfectly accurate. HeadPose's pitch value is a reserved field and will
             always return 0.
             * Different 'recognitionModel' values are provided. If follow-up operations
             like Verify, Identify, Find Similar are needed, please specify the
             recognition model with 'recognitionModel' parameter. The default value for
             'recognitionModel' is 'recognition_01', if latest model needed, please
             explicitly specify the model you need in this parameter. Once specified,
             the detected faceIds will be associated with the specified recognition
             model. More details, please refer to [How to specify a recognition
             model](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-recognition-model)
            
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectWithUrlAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt; DetectWithUrlAsync (this Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, string url, bool? returnFaceId = true, bool? returnFaceLandmarks = false, System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt; returnFaceAttributes = default, string recognitionModel = default, bool? returnRecognitionModel = false, string detectionModel = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt; DetectWithUrlAsync(class Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, string url, valuetype System.Nullable`1&lt;bool&gt; returnFaceId, valuetype System.Nullable`1&lt;bool&gt; returnFaceLandmarks, class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt; returnFaceAttributes, string recognitionModel, valuetype System.Nullable`1&lt;bool&gt; returnRecognitionModel, string detectionModel, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.DetectWithUrlAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType},System.String,System.Nullable{System.Boolean},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DetectWithUrlAsync (operations As IFaceOperations, url As String, Optional returnFaceId As Nullable(Of Boolean) = true, Optional returnFaceLandmarks As Nullable(Of Boolean) = false, Optional returnFaceAttributes As IList(Of FaceAttributeType) = null, Optional recognitionModel As String = null, Optional returnRecognitionModel As Nullable(Of Boolean) = false, Optional detectionModel As String = null, Optional cancellationToken As CancellationToken = null) As Task(Of IList(Of DetectedFace))" />
      <MemberSignature Language="F#" Value="static member DetectWithUrlAsync : Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt; * string * Nullable&lt;bool&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt;" Usage="Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.DetectWithUrlAsync (operations, url, returnFaceId, returnFaceLandmarks, returnFaceAttributes, recognitionModel, returnRecognitionModel, detectionModel, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="url" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="returnFaceId" Type="System.Nullable&lt;System.Boolean&gt;" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="returnFaceLandmarks" Type="System.Nullable&lt;System.Boolean&gt;" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="returnFaceAttributes" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt;" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="recognitionModel" Type="System.String" Index="5" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="returnRecognitionModel" Type="System.Nullable&lt;System.Boolean&gt;" Index="6" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="detectionModel" Type="System.String" Index="7" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="8" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="url">To be added.</param>
        <param name="returnFaceId">To be added.</param>
        <param name="returnFaceLandmarks">To be added.</param>
        <param name="returnFaceAttributes">To be added.</param>
        <param name="recognitionModel">To be added.</param>
        <param name="returnRecognitionModel">To be added.</param>
        <param name="detectionModel">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindSimilarAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.SimilarFace&gt;&gt; FindSimilarAsync (this Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, Guid faceId, string faceListId = default, string largeFaceListId = default, System.Collections.Generic.IList&lt;Nullable&lt;Guid&gt;&gt; faceIds = default, int? maxNumOfCandidatesReturned = 20, Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode mode = Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode.MatchPerson, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.SimilarFace&gt;&gt; FindSimilarAsync(class Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, valuetype System.Guid faceId, string faceListId, string largeFaceListId, class System.Collections.Generic.IList`1&lt;valuetype System.Nullable`1&lt;valuetype System.Guid&gt;&gt; faceIds, valuetype System.Nullable`1&lt;int32&gt; maxNumOfCandidatesReturned, valuetype Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode mode, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.FindSimilarAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations,System.Guid,System.String,System.String,System.Collections.Generic.IList{System.Nullable{System.Guid}},System.Nullable{System.Int32},Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindSimilarAsync (operations As IFaceOperations, faceId As Guid, Optional faceListId As String = null, Optional largeFaceListId As String = null, Optional faceIds As IList(Of Nullable(Of Guid)) = null, Optional maxNumOfCandidatesReturned As Nullable(Of Integer) = 20, Optional mode As FindSimilarMatchMode = Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode.MatchPerson, Optional cancellationToken As CancellationToken = null) As Task(Of IList(Of SimilarFace))" />
      <MemberSignature Language="F#" Value="static member FindSimilarAsync : Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations * Guid * string * string * System.Collections.Generic.IList&lt;Nullable&lt;Guid&gt;&gt; * Nullable&lt;int&gt; * Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.SimilarFace&gt;&gt;" Usage="Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.FindSimilarAsync (operations, faceId, faceListId, largeFaceListId, faceIds, maxNumOfCandidatesReturned, mode, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.SimilarFace&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations" RefType="this" />
        <Parameter Name="faceId" Type="System.Guid" />
        <Parameter Name="faceListId" Type="System.String" />
        <Parameter Name="largeFaceListId" Type="System.String" />
        <Parameter Name="faceIds" Type="System.Collections.Generic.IList&lt;System.Nullable&lt;System.Guid&gt;&gt;" />
        <Parameter Name="maxNumOfCandidatesReturned" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="mode" Type="Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
             The operations group for this extension method.
             </param>
        <param name="faceId">
             FaceId of the query face. User needs to call Face - Detect first to get a
             valid faceId. Note that this faceId is not persisted and will expire 24
             hours after the detection call
             </param>
        <param name="faceListId">
             An existing user-specified unique candidate face list, created in Face List
             - Create a Face List. Face list contains a set of persistedFaceIds which
             are persisted and will never expire. Parameter faceListId, largeFaceListId
             and faceIds should not be provided at the same time.
             </param>
        <param name="largeFaceListId">
             An existing user-specified unique candidate large face list, created in
             LargeFaceList - Create. Large face list contains a set of persistedFaceIds
             which are persisted and will never expire. Parameter faceListId,
             largeFaceListId and faceIds should not be provided at the same time.
             </param>
        <param name="faceIds">
             An array of candidate faceIds. All of them are created by Face - Detect and
             the faceIds will expire 24 hours after the detection call. The number of
             faceIds is limited to 1000. Parameter faceListId, largeFaceListId and
             faceIds should not be provided at the same time.
             </param>
        <param name="maxNumOfCandidatesReturned">
             The number of top similar faces returned. The valid range is [1, 1000].
             </param>
        <param name="mode">
             Similar face searching mode. It can be "matchPerson" or "matchFace".
             Possible values include: 'matchPerson', 'matchFace'
             </param>
        <param name="cancellationToken">
             The cancellation token.
             </param>
        <summary>
             Given query face's faceId, to search the similar-looking faces from a
             faceId array, a face list or a large face list. faceId array contains the
             faces created by [Face -
             Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236),
             which will expire 24 hours after creation. A "faceListId" is created by
             [FaceList -
             Create](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524b)
             containing persistedFaceIds that will not expire. And a "largeFaceListId"
             is created by [LargeFaceList -
             Create](/docs/services/563879b61984550e40cbbe8d/operations/5a157b68d2de3616c086f2cc)
             containing persistedFaceIds that will also not expire. Depending on the
             input the returned similar faces list contains faceIds or persistedFaceIds
             ranked by similarity.
             &lt;br/&gt;Find similar has two working modes, "matchPerson" and
             "matchFace". "matchPerson" is the default mode that it tries to find faces
             of the same person as possible by using internal same-person thresholds. It
             is useful to find a known person's other photos. Note that an empty list
             will be returned if no faces pass the internal thresholds. "matchFace" mode
             ignores same-person thresholds and returns ranked similar faces anyway,
             even the similarity is low. It can be used in the cases like searching
             celebrity-looking faces.
             &lt;br/&gt;The 'recognitionModel' associated with the query face's faceId
             should be the same as the 'recognitionModel' used by the target faceId
             array, face list or large face list.
            
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.GroupResult&gt; GroupAsync (this Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, System.Collections.Generic.IList&lt;Guid&gt; faceIds, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.GroupResult&gt; GroupAsync(class Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; faceIds, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.GroupAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations,System.Collections.Generic.IList{System.Guid},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupAsync (operations As IFaceOperations, faceIds As IList(Of Guid), Optional cancellationToken As CancellationToken = null) As Task(Of GroupResult)" />
      <MemberSignature Language="F#" Value="static member GroupAsync : Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations * System.Collections.Generic.IList&lt;Guid&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.GroupResult&gt;" Usage="Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.GroupAsync (operations, faceIds, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.GroupResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations" RefType="this" />
        <Parameter Name="faceIds" Type="System.Collections.Generic.IList&lt;System.Guid&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
             The operations group for this extension method.
             </param>
        <param name="faceIds">
             Array of candidate faceId created by Face - Detect. The maximum is 1000
             faces
             </param>
        <param name="cancellationToken">
             The cancellation token.
             </param>
        <summary>
             Divide candidate faces into groups based on face similarity.&lt;br /&gt;
             * The output is one or more disjointed face groups and a messyGroup. A face
             group contains faces that have similar looking, often of the same person.
             Face groups are ranked by group size, i.e. number of faces. Notice that
             faces belonging to a same person might be split into several groups in the
             result.
             * MessyGroup is a special face group containing faces that cannot find any
             similar counterpart face from original faces. The messyGroup will not
             appear in the result if all faces found their counterparts.
             * Group API needs at least 2 candidate faces and 1000 at most. We suggest
             to try [Face -
             Verify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523a)
             when you only have 2 candidate faces.
             * The 'recognitionModel' associated with the query faces' faceIds should be
             the same.
            
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentifyAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyResult&gt;&gt; IdentifyAsync (this Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, System.Collections.Generic.IList&lt;Guid&gt; faceIds, string personGroupId = default, string largePersonGroupId = default, int? maxNumOfCandidatesReturned = 1, double? confidenceThreshold = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyResult&gt;&gt; IdentifyAsync(class Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; faceIds, string personGroupId, string largePersonGroupId, valuetype System.Nullable`1&lt;int32&gt; maxNumOfCandidatesReturned, valuetype System.Nullable`1&lt;float64&gt; confidenceThreshold, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.IdentifyAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations,System.Collections.Generic.IList{System.Guid},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Double},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IdentifyAsync (operations As IFaceOperations, faceIds As IList(Of Guid), Optional personGroupId As String = null, Optional largePersonGroupId As String = null, Optional maxNumOfCandidatesReturned As Nullable(Of Integer) = 1, Optional confidenceThreshold As Nullable(Of Double) = null, Optional cancellationToken As CancellationToken = null) As Task(Of IList(Of IdentifyResult))" />
      <MemberSignature Language="F#" Value="static member IdentifyAsync : Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations * System.Collections.Generic.IList&lt;Guid&gt; * string * string * Nullable&lt;int&gt; * Nullable&lt;double&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyResult&gt;&gt;" Usage="Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.IdentifyAsync (operations, faceIds, personGroupId, largePersonGroupId, maxNumOfCandidatesReturned, confidenceThreshold, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations" RefType="this" />
        <Parameter Name="faceIds" Type="System.Collections.Generic.IList&lt;System.Guid&gt;" />
        <Parameter Name="personGroupId" Type="System.String" />
        <Parameter Name="largePersonGroupId" Type="System.String" />
        <Parameter Name="maxNumOfCandidatesReturned" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="confidenceThreshold" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
             The operations group for this extension method.
             </param>
        <param name="faceIds">
             Array of query faces faceIds, created by the Face - Detect. Each of the
             faces are identified independently. The valid number of faceIds is between
             [1, 10].
             </param>
        <param name="personGroupId">
             PersonGroupId of the target person group, created by PersonGroup - Create.
             Parameter personGroupId and largePersonGroupId should not be provided at
             the same time.
             </param>
        <param name="largePersonGroupId">
             LargePersonGroupId of the target large person group, created by
             LargePersonGroup - Create. Parameter personGroupId and largePersonGroupId
             should not be provided at the same time.
             </param>
        <param name="maxNumOfCandidatesReturned">
             The range of maxNumOfCandidatesReturned is between 1 and 5 (default is 1).
             </param>
        <param name="confidenceThreshold">
             Confidence threshold of identification, used to judge whether one face
             belong to one person. The range of confidenceThreshold is [0, 1] (default
             specified by algorithm).
             </param>
        <param name="cancellationToken">
             The cancellation token.
             </param>
        <summary>
             1-to-many identification to find the closest matches of the specific query
             person face from a person group or large person group.
             &lt;br/&gt; For each face in the faceIds array, Face Identify will compute
             similarities between the query face and all the faces in the person group
             (given by personGroupId) or large person group (given by
             largePersonGroupId), and return candidate person(s) for that face ranked by
             similarity confidence. The person group/large person group should be
             trained to make it ready for identification. See more in [PersonGroup -
             Train](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395249)
             and [LargePersonGroup -
             Train](/docs/services/563879b61984550e40cbbe8d/operations/599ae2d16ac60f11b48b5aa4).
             &lt;br/&gt;
            
             Remarks:&lt;br /&gt;
             * The algorithm allows more than one face to be identified independently at
             the same request, but no more than 10 faces.
             * Each person in the person group/large person group could have more than
             one face, but no more than 248 faces.
             * Higher face image quality means better identification precision. Please
             consider high-quality faces: frontal, clear, and face size is 200x200
             pixels (100 pixels between eyes) or bigger.
             * Number of candidates returned is restricted by maxNumOfCandidatesReturned
             and confidenceThreshold. If no person is identified, the returned
             candidates will be an empty array.
             * Try [Face - Find
             Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237)
             when you need to find similar faces from a face list/large face list
             instead of a person group/large person group.
             * The 'recognitionModel' associated with the query faces' faceIds should be
             the same as the 'recognitionModel' used by the target person group or large
             person group.
            
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyFaceToFaceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt; VerifyFaceToFaceAsync (this Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, Guid faceId1, Guid faceId2, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt; VerifyFaceToFaceAsync(class Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, valuetype System.Guid faceId1, valuetype System.Guid faceId2, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.VerifyFaceToFaceAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations,System.Guid,System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function VerifyFaceToFaceAsync (operations As IFaceOperations, faceId1 As Guid, faceId2 As Guid, Optional cancellationToken As CancellationToken = null) As Task(Of VerifyResult)" />
      <MemberSignature Language="F#" Value="static member VerifyFaceToFaceAsync : Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations * Guid * Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt;" Usage="Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.VerifyFaceToFaceAsync (operations, faceId1, faceId2, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations" RefType="this" />
        <Parameter Name="faceId1" Type="System.Guid" />
        <Parameter Name="faceId2" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
             The operations group for this extension method.
             </param>
        <param name="faceId1">
             FaceId of the first face, comes from Face - Detect
             </param>
        <param name="faceId2">
             FaceId of the second face, comes from Face - Detect
             </param>
        <param name="cancellationToken">
             The cancellation token.
             </param>
        <summary>
             Verify whether two faces belong to a same person or whether one face
             belongs to a person.
             &lt;br/&gt;
             Remarks:&lt;br /&gt;
             * Higher face image quality means better identification precision. Please
             consider high-quality faces: frontal, clear, and face size is 200x200
             pixels (100 pixels between eyes) or bigger.
             * For the scenarios that are sensitive to accuracy please make your own
             judgment.
             * The 'recognitionModel' associated with the query faces' faceIds should be
             the same as the 'recognitionModel' used by the target face, person group or
             large person group.
            
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyFaceToPersonAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt; VerifyFaceToPersonAsync (this Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, Guid faceId, Guid personId, string personGroupId = default, string largePersonGroupId = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt; VerifyFaceToPersonAsync(class Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, valuetype System.Guid faceId, valuetype System.Guid personId, string personGroupId, string largePersonGroupId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.VerifyFaceToPersonAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations,System.Guid,System.Guid,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function VerifyFaceToPersonAsync (operations As IFaceOperations, faceId As Guid, personId As Guid, Optional personGroupId As String = null, Optional largePersonGroupId As String = null, Optional cancellationToken As CancellationToken = null) As Task(Of VerifyResult)" />
      <MemberSignature Language="F#" Value="static member VerifyFaceToPersonAsync : Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations * Guid * Guid * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt;" Usage="Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.VerifyFaceToPersonAsync (operations, faceId, personId, personGroupId, largePersonGroupId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations" RefType="this" />
        <Parameter Name="faceId" Type="System.Guid" />
        <Parameter Name="personId" Type="System.Guid" />
        <Parameter Name="personGroupId" Type="System.String" />
        <Parameter Name="largePersonGroupId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="faceId">
            FaceId of the face, comes from Face - Detect
            </param>
        <param name="personId">
            Specify a certain person in a person group or a large person group.
            personId is created in PersonGroup Person - Create or LargePersonGroup
            Person - Create.
            </param>
        <param name="personGroupId">
            Using existing personGroupId and personId for fast loading a specified
            person. personGroupId is created in PersonGroup - Create. Parameter
            personGroupId and largePersonGroupId should not be provided at the same
            time.
            </param>
        <param name="largePersonGroupId">
            Using existing largePersonGroupId and personId for fast loading a specified
            person. largePersonGroupId is created in LargePersonGroup - Create.
            Parameter personGroupId and largePersonGroupId should not be provided at
            the same time.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Verify whether two faces belong to a same person. Compares a face Id with a
            Person Id
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
