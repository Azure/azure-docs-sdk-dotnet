<Type Name="FaceOperationsExtensions" FullName="Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions">
  <TypeSignature Language="C#" Value="public static class FaceOperationsExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FaceOperationsExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module FaceOperationsExtensions" />
  <TypeSignature Language="F#" Value="type FaceOperationsExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
    <AssemblyVersion>2.7.0.0</AssemblyVersion>
    <AssemblyVersion>2.8.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for FaceOperations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DetectWithStreamAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt; DetectWithStreamAsync (this Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, System.IO.Stream image, bool? returnFaceId = True, bool? returnFaceLandmarks = False, System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt; returnFaceAttributes = default, string recognitionModel = default, bool? returnRecognitionModel = False, string detectionModel = default, int? faceIdTimeToLive = 86400, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt; DetectWithStreamAsync(class Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, class System.IO.Stream image, valuetype System.Nullable`1&lt;bool&gt; returnFaceId, valuetype System.Nullable`1&lt;bool&gt; returnFaceLandmarks, class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt; returnFaceAttributes, string recognitionModel, valuetype System.Nullable`1&lt;bool&gt; returnRecognitionModel, string detectionModel, valuetype System.Nullable`1&lt;int32&gt; faceIdTimeToLive, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.DetectWithStreamAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations,System.IO.Stream,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType},System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DetectWithStreamAsync (operations As IFaceOperations, image As Stream, Optional returnFaceId As Nullable(Of Boolean) = True, Optional returnFaceLandmarks As Nullable(Of Boolean) = False, Optional returnFaceAttributes As IList(Of FaceAttributeType) = Nothing, Optional recognitionModel As String = Nothing, Optional returnRecognitionModel As Nullable(Of Boolean) = False, Optional detectionModel As String = Nothing, Optional faceIdTimeToLive As Nullable(Of Integer) = 86400, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IList(Of DetectedFace))" />
      <MemberSignature Language="F#" Value="static member DetectWithStreamAsync : Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations * System.IO.Stream * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt; * string * Nullable&lt;bool&gt; * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt;" Usage="Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.DetectWithStreamAsync (operations, image, returnFaceId, returnFaceLandmarks, returnFaceAttributes, recognitionModel, returnRecognitionModel, detectionModel, faceIdTimeToLive, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.7.0.0</AssemblyVersion>
        <AssemblyVersion>2.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations" RefType="this" />
        <Parameter Name="image" Type="System.IO.Stream" />
        <Parameter Name="returnFaceId" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="returnFaceLandmarks" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="returnFaceAttributes" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt;" />
        <Parameter Name="recognitionModel" Type="System.String" />
        <Parameter Name="returnRecognitionModel" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="detectionModel" Type="System.String" />
        <Parameter Name="faceIdTimeToLive" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="image">To be added.</param>
        <param name="returnFaceId">To be added.</param>
        <param name="returnFaceLandmarks">To be added.</param>
        <param name="returnFaceAttributes">To be added.</param>
        <param name="recognitionModel">To be added.</param>
        <param name="returnRecognitionModel">To be added.</param>
        <param name="detectionModel">To be added.</param>
        <param name="faceIdTimeToLive">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectWithUrlAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt; DetectWithUrlAsync (this Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, string url, bool? returnFaceId = True, bool? returnFaceLandmarks = False, System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt; returnFaceAttributes = default, string recognitionModel = default, bool? returnRecognitionModel = False, string detectionModel = default, int? faceIdTimeToLive = 86400, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt; DetectWithUrlAsync(class Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, string url, valuetype System.Nullable`1&lt;bool&gt; returnFaceId, valuetype System.Nullable`1&lt;bool&gt; returnFaceLandmarks, class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt; returnFaceAttributes, string recognitionModel, valuetype System.Nullable`1&lt;bool&gt; returnRecognitionModel, string detectionModel, valuetype System.Nullable`1&lt;int32&gt; faceIdTimeToLive, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.DetectWithUrlAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType},System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DetectWithUrlAsync (operations As IFaceOperations, url As String, Optional returnFaceId As Nullable(Of Boolean) = True, Optional returnFaceLandmarks As Nullable(Of Boolean) = False, Optional returnFaceAttributes As IList(Of FaceAttributeType) = Nothing, Optional recognitionModel As String = Nothing, Optional returnRecognitionModel As Nullable(Of Boolean) = False, Optional detectionModel As String = Nothing, Optional faceIdTimeToLive As Nullable(Of Integer) = 86400, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IList(Of DetectedFace))" />
      <MemberSignature Language="F#" Value="static member DetectWithUrlAsync : Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt; * string * Nullable&lt;bool&gt; * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt;" Usage="Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.DetectWithUrlAsync (operations, url, returnFaceId, returnFaceLandmarks, returnFaceAttributes, recognitionModel, returnRecognitionModel, detectionModel, faceIdTimeToLive, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.7.0.0</AssemblyVersion>
        <AssemblyVersion>2.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations" RefType="this" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="returnFaceId" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="returnFaceLandmarks" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="returnFaceAttributes" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt;" />
        <Parameter Name="recognitionModel" Type="System.String" />
        <Parameter Name="returnRecognitionModel" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="detectionModel" Type="System.String" />
        <Parameter Name="faceIdTimeToLive" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="url">To be added.</param>
        <param name="returnFaceId">To be added.</param>
        <param name="returnFaceLandmarks">To be added.</param>
        <param name="returnFaceAttributes">To be added.</param>
        <param name="recognitionModel">To be added.</param>
        <param name="returnRecognitionModel">To be added.</param>
        <param name="detectionModel">To be added.</param>
        <param name="faceIdTimeToLive">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindSimilarAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.SimilarFace&gt;&gt; FindSimilarAsync (this Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, Guid faceId, string faceListId = default, string largeFaceListId = default, System.Collections.Generic.IList&lt;Guid?&gt; faceIds = default, int? maxNumOfCandidatesReturned = 20, Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode mode = Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode.MatchPerson, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.SimilarFace&gt;&gt; FindSimilarAsync(class Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, valuetype System.Guid faceId, string faceListId, string largeFaceListId, class System.Collections.Generic.IList`1&lt;valuetype System.Nullable`1&lt;valuetype System.Guid&gt;&gt; faceIds, valuetype System.Nullable`1&lt;int32&gt; maxNumOfCandidatesReturned, valuetype Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode mode, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.FindSimilarAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations,System.Guid,System.String,System.String,System.Collections.Generic.IList{System.Nullable{System.Guid}},System.Nullable{System.Int32},Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindSimilarAsync (operations As IFaceOperations, faceId As Guid, Optional faceListId As String = Nothing, Optional largeFaceListId As String = Nothing, Optional faceIds As IList(Of Nullable(Of Guid)) = Nothing, Optional maxNumOfCandidatesReturned As Nullable(Of Integer) = 20, Optional mode As FindSimilarMatchMode = Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode.MatchPerson, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IList(Of SimilarFace))" />
      <MemberSignature Language="F#" Value="static member FindSimilarAsync : Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations * Guid * string * string * System.Collections.Generic.IList&lt;Nullable&lt;Guid&gt;&gt; * Nullable&lt;int&gt; * Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.SimilarFace&gt;&gt;" Usage="Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.FindSimilarAsync (operations, faceId, faceListId, largeFaceListId, faceIds, maxNumOfCandidatesReturned, mode, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.7.0.0</AssemblyVersion>
        <AssemblyVersion>2.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.SimilarFace&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations" RefType="this" />
        <Parameter Name="faceId" Type="System.Guid" />
        <Parameter Name="faceListId" Type="System.String" />
        <Parameter Name="largeFaceListId" Type="System.String" />
        <Parameter Name="faceIds" Type="System.Collections.Generic.IList&lt;System.Nullable&lt;System.Guid&gt;&gt;" />
        <Parameter Name="maxNumOfCandidatesReturned" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="mode" Type="Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
             The operations group for this extension method.
             </param>
        <param name="faceId">
             FaceId of the query face. User needs to call Face - Detect first to get a
             valid faceId. Note that this faceId is not persisted and will expire 24
             hours after the detection call
             </param>
        <param name="faceListId">
             An existing user-specified unique candidate face list, created in Face List
             - Create a Face List. Face list contains a set of persistedFaceIds which
             are persisted and will never expire. Parameter faceListId, largeFaceListId
             and faceIds should not be provided at the same time.
             </param>
        <param name="largeFaceListId">
             An existing user-specified unique candidate large face list, created in
             LargeFaceList - Create. Large face list contains a set of persistedFaceIds
             which are persisted and will never expire. Parameter faceListId,
             largeFaceListId and faceIds should not be provided at the same time.
             </param>
        <param name="faceIds">
             An array of candidate faceIds. All of them are created by Face - Detect and
             the faceIds will expire 24 hours after the detection call. The number of
             faceIds is limited to 1000. Parameter faceListId, largeFaceListId and
             faceIds should not be provided at the same time.
             </param>
        <param name="maxNumOfCandidatesReturned">
             The number of top similar faces returned. The valid range is [1, 1000].
             </param>
        <param name="mode">
             Similar face searching mode. It can be "matchPerson" or "matchFace".
             Possible values include: 'matchPerson', 'matchFace'
             </param>
        <param name="cancellationToken">
             The cancellation token.
             </param>
        <summary>
             Given query face's faceId, to search the similar-looking faces from a
             faceId array, a face list or a large face list. faceId array contains the
             faces created by [Face -
             Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236),
             which will expire 24 hours after creation. A "faceListId" is created by
             [FaceList -
             Create](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524b)
             containing persistedFaceIds that will not expire. And a "largeFaceListId"
             is created by [LargeFaceList -
             Create](/docs/services/563879b61984550e40cbbe8d/operations/5a157b68d2de3616c086f2cc)
             containing persistedFaceIds that will also not expire. Depending on the
             input the returned similar faces list contains faceIds or persistedFaceIds
             ranked by similarity.
             &lt;br/&gt;Find similar has two working modes, "matchPerson" and
             "matchFace". "matchPerson" is the default mode that it tries to find faces
             of the same person as possible by using internal same-person thresholds. It
             is useful to find a known person's other photos. Note that an empty list
             will be returned if no faces pass the internal thresholds. "matchFace" mode
             ignores same-person thresholds and returns ranked similar faces anyway,
             even the similarity is low. It can be used in the cases like searching
             celebrity-looking faces.
             &lt;br/&gt;The 'recognitionModel' associated with the query face's faceId
             should be the same as the 'recognitionModel' used by the target faceId
             array, face list or large face list.
            
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.GroupResult&gt; GroupAsync (this Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, System.Collections.Generic.IList&lt;Guid&gt; faceIds, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.GroupResult&gt; GroupAsync(class Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; faceIds, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.GroupAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations,System.Collections.Generic.IList{System.Guid},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupAsync (operations As IFaceOperations, faceIds As IList(Of Guid), Optional cancellationToken As CancellationToken = Nothing) As Task(Of GroupResult)" />
      <MemberSignature Language="F#" Value="static member GroupAsync : Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations * System.Collections.Generic.IList&lt;Guid&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.GroupResult&gt;" Usage="Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.GroupAsync (operations, faceIds, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.7.0.0</AssemblyVersion>
        <AssemblyVersion>2.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.GroupResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations" RefType="this" />
        <Parameter Name="faceIds" Type="System.Collections.Generic.IList&lt;System.Guid&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
             The operations group for this extension method.
             </param>
        <param name="faceIds">
             Array of candidate faceId created by Face - Detect. The maximum is 1000
             faces
             </param>
        <param name="cancellationToken">
             The cancellation token.
             </param>
        <summary>
             Divide candidate faces into groups based on face similarity.&lt;br /&gt;
             * The output is one or more disjointed face groups and a messyGroup. A face
             group contains faces that have similar looking, often of the same person.
             Face groups are ranked by group size, i.e. number of faces. Notice that
             faces belonging to a same person might be split into several groups in the
             result.
             * MessyGroup is a special face group containing faces that cannot find any
             similar counterpart face from original faces. The messyGroup will not
             appear in the result if all faces found their counterparts.
             * Group API needs at least 2 candidate faces and 1000 at most. We suggest
             to try [Face -
             Verify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523a)
             when you only have 2 candidate faces.
             * The 'recognitionModel' associated with the query faces' faceIds should be
             the same.
            
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentifyAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyResult&gt;&gt; IdentifyAsync (this Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, System.Collections.Generic.IList&lt;Guid&gt; faceIds, string personGroupId = default, string largePersonGroupId = default, string dynamicPersonGroupId = default, System.Collections.Generic.IList&lt;string&gt; personIds = default, int? maxNumOfCandidatesReturned = 1, double? confidenceThreshold = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyResult&gt;&gt; IdentifyAsync(class Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; faceIds, string personGroupId, string largePersonGroupId, string dynamicPersonGroupId, class System.Collections.Generic.IList`1&lt;string&gt; personIds, valuetype System.Nullable`1&lt;int32&gt; maxNumOfCandidatesReturned, valuetype System.Nullable`1&lt;float64&gt; confidenceThreshold, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.IdentifyAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations,System.Collections.Generic.IList{System.Guid},System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Int32},System.Nullable{System.Double},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IdentifyAsync (operations As IFaceOperations, faceIds As IList(Of Guid), Optional personGroupId As String = Nothing, Optional largePersonGroupId As String = Nothing, Optional dynamicPersonGroupId As String = Nothing, Optional personIds As IList(Of String) = Nothing, Optional maxNumOfCandidatesReturned As Nullable(Of Integer) = 1, Optional confidenceThreshold As Nullable(Of Double) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IList(Of IdentifyResult))" />
      <MemberSignature Language="F#" Value="static member IdentifyAsync : Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations * System.Collections.Generic.IList&lt;Guid&gt; * string * string * string * System.Collections.Generic.IList&lt;string&gt; * Nullable&lt;int&gt; * Nullable&lt;double&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyResult&gt;&gt;" Usage="Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.IdentifyAsync (operations, faceIds, personGroupId, largePersonGroupId, dynamicPersonGroupId, personIds, maxNumOfCandidatesReturned, confidenceThreshold, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations" RefType="this" />
        <Parameter Name="faceIds" Type="System.Collections.Generic.IList&lt;System.Guid&gt;" />
        <Parameter Name="personGroupId" Type="System.String" />
        <Parameter Name="largePersonGroupId" Type="System.String" />
        <Parameter Name="dynamicPersonGroupId" Type="System.String" />
        <Parameter Name="personIds" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="maxNumOfCandidatesReturned" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="confidenceThreshold" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="faceIds">To be added.</param>
        <param name="personGroupId">To be added.</param>
        <param name="largePersonGroupId">To be added.</param>
        <param name="dynamicPersonGroupId">To be added.</param>
        <param name="personIds">To be added.</param>
        <param name="maxNumOfCandidatesReturned">To be added.</param>
        <param name="confidenceThreshold">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyFaceToFaceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt; VerifyFaceToFaceAsync (this Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, Guid faceId1, Guid faceId2, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt; VerifyFaceToFaceAsync(class Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, valuetype System.Guid faceId1, valuetype System.Guid faceId2, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.VerifyFaceToFaceAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations,System.Guid,System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function VerifyFaceToFaceAsync (operations As IFaceOperations, faceId1 As Guid, faceId2 As Guid, Optional cancellationToken As CancellationToken = Nothing) As Task(Of VerifyResult)" />
      <MemberSignature Language="F#" Value="static member VerifyFaceToFaceAsync : Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations * Guid * Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt;" Usage="Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.VerifyFaceToFaceAsync (operations, faceId1, faceId2, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.7.0.0</AssemblyVersion>
        <AssemblyVersion>2.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations" RefType="this" />
        <Parameter Name="faceId1" Type="System.Guid" />
        <Parameter Name="faceId2" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
             The operations group for this extension method.
             </param>
        <param name="faceId1">
             FaceId of the first face, comes from Face - Detect
             </param>
        <param name="faceId2">
             FaceId of the second face, comes from Face - Detect
             </param>
        <param name="cancellationToken">
             The cancellation token.
             </param>
        <summary>
             Verify whether two faces belong to a same person or whether one face
             belongs to a person.
             &lt;br/&gt;
             Remarks:&lt;br /&gt;
             * Higher face image quality means better identification precision. Please
             consider high-quality faces: frontal, clear, and face size is 200x200
             pixels (100 pixels between eyes) or bigger.
             * For the scenarios that are sensitive to accuracy please make your own
             judgment.
             * The 'recognitionModel' associated with the query faces' faceIds should be
             the same as the 'recognitionModel' used by the target face, person group or
             large person group.
            
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyFaceToPersonAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt; VerifyFaceToPersonAsync (this Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, Guid faceId, Guid personId, string personGroupId = default, string largePersonGroupId = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt; VerifyFaceToPersonAsync(class Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, valuetype System.Guid faceId, valuetype System.Guid personId, string personGroupId, string largePersonGroupId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.VerifyFaceToPersonAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations,System.Guid,System.Guid,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function VerifyFaceToPersonAsync (operations As IFaceOperations, faceId As Guid, personId As Guid, Optional personGroupId As String = Nothing, Optional largePersonGroupId As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of VerifyResult)" />
      <MemberSignature Language="F#" Value="static member VerifyFaceToPersonAsync : Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations * Guid * Guid * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt;" Usage="Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.VerifyFaceToPersonAsync (operations, faceId, personId, personGroupId, largePersonGroupId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.7.0.0</AssemblyVersion>
        <AssemblyVersion>2.8.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations" RefType="this" />
        <Parameter Name="faceId" Type="System.Guid" />
        <Parameter Name="personId" Type="System.Guid" />
        <Parameter Name="personGroupId" Type="System.String" />
        <Parameter Name="largePersonGroupId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="faceId">
            FaceId of the face, comes from Face - Detect
            </param>
        <param name="personId">
            Specify a certain person in a person group or a large person group.
            personId is created in PersonGroup Person - Create or LargePersonGroup
            Person - Create.
            </param>
        <param name="personGroupId">
            Using existing personGroupId and personId for fast loading a specified
            person. personGroupId is created in PersonGroup - Create. Parameter
            personGroupId and largePersonGroupId should not be provided at the same
            time.
            </param>
        <param name="largePersonGroupId">
            Using existing largePersonGroupId and personId for fast loading a specified
            person. largePersonGroupId is created in LargePersonGroup - Create.
            Parameter personGroupId and largePersonGroupId should not be provided at
            the same time.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Verify whether two faces belong to a same person. Compares a face Id with a
            Person Id
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
