<Type Name="FaceOperationsExtensions" FullName="Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions">
  <TypeSignature Language="C#" Value="public static class FaceOperationsExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FaceOperationsExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module FaceOperationsExtensions" />
  <TypeSignature Language="F#" Value="type FaceOperationsExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for FaceOperations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DetectWithStreamAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt; DetectWithStreamAsync (this Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, System.IO.Stream image, Nullable&lt;bool&gt; returnFaceId = true, Nullable&lt;bool&gt; returnFaceLandmarks = false, System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt; returnFaceAttributes = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt; DetectWithStreamAsync(class Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, class System.IO.Stream image, valuetype System.Nullable`1&lt;bool&gt; returnFaceId, valuetype System.Nullable`1&lt;bool&gt; returnFaceLandmarks, class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt; returnFaceAttributes, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.DetectWithStreamAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations,System.IO.Stream,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member DetectWithStreamAsync : Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations * System.IO.Stream * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt;" Usage="Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.DetectWithStreamAsync (operations, image, returnFaceId, returnFaceLandmarks, returnFaceAttributes, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations" RefType="this" />
        <Parameter Name="image" Type="System.IO.Stream" />
        <Parameter Name="returnFaceId" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="returnFaceLandmarks" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="returnFaceAttributes" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="image">
            An image stream.
            </param>
        <param name="returnFaceId">
            A value indicating whether the operation should return faceIds of detected
            faces.
            </param>
        <param name="returnFaceLandmarks">
            A value indicating whether the operation should return landmarks of the
            detected faces.
            </param>
        <param name="returnFaceAttributes">
            Analyze and return the one or more specified face attributes in the
            comma-separated string like "returnFaceAttributes=age,gender". Supported
            face attributes include age, gender, headPose, smile, facialHair, glasses
            and emotion. Note that each face attribute analysis has additional
            computational and time cost.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Detect human faces in an image and returns face locations, and optionally
            with faceIds, landmarks, and attributes.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectWithUrlAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt; DetectWithUrlAsync (this Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, string url, Nullable&lt;bool&gt; returnFaceId = true, Nullable&lt;bool&gt; returnFaceLandmarks = false, System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt; returnFaceAttributes = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt; DetectWithUrlAsync(class Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, string url, valuetype System.Nullable`1&lt;bool&gt; returnFaceId, valuetype System.Nullable`1&lt;bool&gt; returnFaceLandmarks, class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt; returnFaceAttributes, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.DetectWithUrlAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member DetectWithUrlAsync : Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt;" Usage="Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.DetectWithUrlAsync (operations, url, returnFaceId, returnFaceLandmarks, returnFaceAttributes, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations" RefType="this" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="returnFaceId" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="returnFaceLandmarks" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="returnFaceAttributes" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="url">
            Publicly reachable URL of an image
            </param>
        <param name="returnFaceId">
            A value indicating whether the operation should return faceIds of detected
            faces.
            </param>
        <param name="returnFaceLandmarks">
            A value indicating whether the operation should return landmarks of the
            detected faces.
            </param>
        <param name="returnFaceAttributes">
            Analyze and return the one or more specified face attributes in the
            comma-separated string like "returnFaceAttributes=age,gender". Supported
            face attributes include age, gender, headPose, smile, facialHair, glasses
            and emotion. Note that each face attribute analysis has additional
            computational and time cost.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Detect human faces in an image and returns face locations, and optionally
            with faceIds, landmarks, and attributes.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindSimilarAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.SimilarFace&gt;&gt; FindSimilarAsync (this Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, Guid faceId, string faceListId = null, string largeFaceListId = null, System.Collections.Generic.IList&lt;Nullable&lt;Guid&gt;&gt; faceIds = null, Nullable&lt;int&gt; maxNumOfCandidatesReturned = 20, Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode mode = Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode.MatchPerson, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.SimilarFace&gt;&gt; FindSimilarAsync(class Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, valuetype System.Guid faceId, string faceListId, string largeFaceListId, class System.Collections.Generic.IList`1&lt;valuetype System.Nullable`1&lt;valuetype System.Guid&gt;&gt; faceIds, valuetype System.Nullable`1&lt;int32&gt; maxNumOfCandidatesReturned, valuetype Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode mode, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.FindSimilarAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations,System.Guid,System.String,System.String,System.Collections.Generic.IList{System.Nullable{System.Guid}},System.Nullable{System.Int32},Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member FindSimilarAsync : Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations * Guid * string * string * System.Collections.Generic.IList&lt;Nullable&lt;Guid&gt;&gt; * Nullable&lt;int&gt; * Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.SimilarFace&gt;&gt;" Usage="Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.FindSimilarAsync (operations, faceId, faceListId, largeFaceListId, faceIds, maxNumOfCandidatesReturned, mode, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.SimilarFace&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations" RefType="this" />
        <Parameter Name="faceId" Type="System.Guid" />
        <Parameter Name="faceListId" Type="System.String" />
        <Parameter Name="largeFaceListId" Type="System.String" />
        <Parameter Name="faceIds" Type="System.Collections.Generic.IList&lt;System.Nullable&lt;System.Guid&gt;&gt;" />
        <Parameter Name="maxNumOfCandidatesReturned" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="mode" Type="Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="faceId">
            FaceId of the query face. User needs to call Face - Detect first to get a
            valid faceId. Note that this faceId is not persisted and will expire 24
            hours after the detection call
            </param>
        <param name="faceListId">
            An existing user-specified unique candidate face list, created in Face List
            - Create a Face List. Face list contains a set of persistedFaceIds which
            are persisted and will never expire. Parameter faceListId, largeFaceListId
            and faceIds should not be provided at the same time。
            </param>
        <param name="largeFaceListId">
            An existing user-specified unique candidate large face list, created in
            LargeFaceList - Create. Large face list contains a set of persistedFaceIds
            which are persisted and will never expire. Parameter faceListId,
            largeFaceListId and faceIds should not be provided at the same time.
            </param>
        <param name="faceIds">
            An array of candidate faceIds. All of them are created by Face - Detect and
            the faceIds will expire 24 hours after the detection call. The number of
            faceIds is limited to 1000. Parameter faceListId, largeFaceListId and
            faceIds should not be provided at the same time.
            </param>
        <param name="maxNumOfCandidatesReturned">
            The number of top similar faces returned. The valid range is [1, 1000].
            </param>
        <param name="mode">
            Similar face searching mode. It can be "matchPerson" or "matchFace".
            Possible values include: 'matchPerson', 'matchFace'
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Given query face's faceId, find the similar-looking faces from a faceId
            array, a face list or a large face list.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.GroupResult&gt; GroupAsync (this Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, System.Collections.Generic.IList&lt;Guid&gt; faceIds, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.GroupResult&gt; GroupAsync(class Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; faceIds, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.GroupAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations,System.Collections.Generic.IList{System.Guid},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member GroupAsync : Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations * System.Collections.Generic.IList&lt;Guid&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.GroupResult&gt;" Usage="Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.GroupAsync (operations, faceIds, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.GroupResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations" RefType="this" />
        <Parameter Name="faceIds" Type="System.Collections.Generic.IList&lt;System.Guid&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="faceIds">
            Array of candidate faceId created by Face - Detect. The maximum is 1000
            faces
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Divide candidate faces into groups based on face similarity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentifyAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyResult&gt;&gt; IdentifyAsync (this Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, System.Collections.Generic.IList&lt;Guid&gt; faceIds, string personGroupId = null, string largePersonGroupId = null, Nullable&lt;int&gt; maxNumOfCandidatesReturned = 1, Nullable&lt;double&gt; confidenceThreshold = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyResult&gt;&gt; IdentifyAsync(class Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; faceIds, string personGroupId, string largePersonGroupId, valuetype System.Nullable`1&lt;int32&gt; maxNumOfCandidatesReturned, valuetype System.Nullable`1&lt;float64&gt; confidenceThreshold, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.IdentifyAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations,System.Collections.Generic.IList{System.Guid},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Double},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member IdentifyAsync : Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations * System.Collections.Generic.IList&lt;Guid&gt; * string * string * Nullable&lt;int&gt; * Nullable&lt;double&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyResult&gt;&gt;" Usage="Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.IdentifyAsync (operations, faceIds, personGroupId, largePersonGroupId, maxNumOfCandidatesReturned, confidenceThreshold, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations" RefType="this" />
        <Parameter Name="faceIds" Type="System.Collections.Generic.IList&lt;System.Guid&gt;" />
        <Parameter Name="personGroupId" Type="System.String" />
        <Parameter Name="largePersonGroupId" Type="System.String" />
        <Parameter Name="maxNumOfCandidatesReturned" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="confidenceThreshold" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="faceIds">
            Array of query faces faceIds, created by the Face - Detect. Each of the
            faces are identified independently. The valid number of faceIds is between
            [1, 10].
            </param>
        <param name="personGroupId">
            PersonGroupId of the target person group, created by PersonGroup - Create.
            Parameter personGroupId and largePersonGroupId should not be provided at
            the same time.
            </param>
        <param name="largePersonGroupId">
            LargePersonGroupId of the target large person group, created by
            LargePersonGroup - Create. Parameter personGroupId and largePersonGroupId
            should not be provided at the same time.
            </param>
        <param name="maxNumOfCandidatesReturned">
            The range of maxNumOfCandidatesReturned is between 1 and 5 (default is 1).
            </param>
        <param name="confidenceThreshold">
            Confidence threshold of identification, used to judge whether one face
            belong to one person. The range of confidenceThreshold is [0, 1] (default
            specified by algorithm).
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            1-to-many identification to find the closest matches of the specific query
            person face from a person group or large person group.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyFaceToFaceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt; VerifyFaceToFaceAsync (this Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, Guid faceId1, Guid faceId2, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt; VerifyFaceToFaceAsync(class Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, valuetype System.Guid faceId1, valuetype System.Guid faceId2, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.VerifyFaceToFaceAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations,System.Guid,System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member VerifyFaceToFaceAsync : Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations * Guid * Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt;" Usage="Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.VerifyFaceToFaceAsync (operations, faceId1, faceId2, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations" RefType="this" />
        <Parameter Name="faceId1" Type="System.Guid" />
        <Parameter Name="faceId2" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="faceId1">
            FaceId of the first face, comes from Face - Detect
            </param>
        <param name="faceId2">
            FaceId of the second face, comes from Face - Detect
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Verify whether two faces belong to a same person or whether one face
            belongs to a person.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyFaceToPersonAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt; VerifyFaceToPersonAsync (this Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, Guid faceId, Guid personId, string personGroupId = null, string largePersonGroupId = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt; VerifyFaceToPersonAsync(class Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations operations, valuetype System.Guid faceId, valuetype System.Guid personId, string personGroupId, string largePersonGroupId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.VerifyFaceToPersonAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations,System.Guid,System.Guid,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member VerifyFaceToPersonAsync : Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations * Guid * Guid * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt;" Usage="Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.VerifyFaceToPersonAsync (operations, faceId, personId, personGroupId, largePersonGroupId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations" RefType="this" />
        <Parameter Name="faceId" Type="System.Guid" />
        <Parameter Name="personId" Type="System.Guid" />
        <Parameter Name="personGroupId" Type="System.String" />
        <Parameter Name="largePersonGroupId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="faceId">
            FaceId of the face, comes from Face - Detect
            </param>
        <param name="personId">
            Specify a certain person in a person group or a large person group.
            personId is created in PersonGroup Person - Create or LargePersonGroup
            Person - Create.
            </param>
        <param name="personGroupId">
            Using existing personGroupId and personId for fast loading a specified
            person. personGroupId is created in PersonGroup - Create. Parameter
            personGroupId and largePersonGroupId should not be provided at the same
            time.
            </param>
        <param name="largePersonGroupId">
            Using existing largePersonGroupId and personId for fast loading a specified
            person. largePersonGroupId is created in LargePersonGroup - Create.
            Parameter personGroupId and largePersonGroupId should not be provided at
            the same time.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Verify whether two faces belong to a same person. Compares a face Id with a
            Person Id
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>