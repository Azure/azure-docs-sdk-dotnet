<Type Name="SnapshotOperationsExtensions" FullName="Microsoft.Azure.CognitiveServices.Vision.Face.SnapshotOperationsExtensions">
  <TypeSignature Language="C#" Value="public static class SnapshotOperationsExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SnapshotOperationsExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.CognitiveServices.Vision.Face.SnapshotOperationsExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module SnapshotOperationsExtensions" />
  <TypeSignature Language="F#" Value="type SnapshotOperationsExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for SnapshotOperations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ApplyAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.SnapshotApplyHeaders&gt; ApplyAsync (this Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations operations, Guid snapshotId, string objectId, Microsoft.Azure.CognitiveServices.Vision.Face.Models.SnapshotApplyMode mode = Microsoft.Azure.CognitiveServices.Vision.Face.Models.SnapshotApplyMode.CreateNew, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.SnapshotApplyHeaders&gt; ApplyAsync(class Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations operations, valuetype System.Guid snapshotId, string objectId, valuetype Microsoft.Azure.CognitiveServices.Vision.Face.Models.SnapshotApplyMode mode, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.SnapshotOperationsExtensions.ApplyAsync(Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations,System.Guid,System.String,Microsoft.Azure.CognitiveServices.Vision.Face.Models.SnapshotApplyMode,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ApplyAsync (operations As ISnapshotOperations, snapshotId As Guid, objectId As String, Optional mode As SnapshotApplyMode = Microsoft.Azure.CognitiveServices.Vision.Face.Models.SnapshotApplyMode.CreateNew, Optional cancellationToken As CancellationToken = null) As Task(Of SnapshotApplyHeaders)" />
      <MemberSignature Language="F#" Value="static member ApplyAsync : Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations * Guid * string * Microsoft.Azure.CognitiveServices.Vision.Face.Models.SnapshotApplyMode * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.SnapshotApplyHeaders&gt;" Usage="Microsoft.Azure.CognitiveServices.Vision.Face.SnapshotOperationsExtensions.ApplyAsync (operations, snapshotId, objectId, mode, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.SnapshotApplyHeaders&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations" RefType="this" />
        <Parameter Name="snapshotId" Type="System.Guid" />
        <Parameter Name="objectId" Type="System.String" />
        <Parameter Name="mode" Type="Microsoft.Azure.CognitiveServices.Vision.Face.Models.SnapshotApplyMode" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="snapshotId">
            Id referencing a particular snapshot.
            </param>
        <param name="objectId">
            User specified target object id to be created from the snapshot.
            </param>
        <param name="mode">
            Snapshot applying mode. Currently only CreateNew is supported, which means
            the apply operation will fail if target subscription already contains an
            object of same type and using the same objectId. Users can specify the
            "objectId" in request body to avoid such conflicts. Possible values
            include: 'CreateNew'
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Submit an operation to apply a snapshot to current subscription. For each
            snapshot, only subscriptions included in the applyScope of Snapshot - Take
            can apply it.&lt;br /&gt;
            The snapshot interfaces are for users to backup and restore their face data
            from one face subscription to another, inside same region or across
            regions. The workflow contains two phases, user first calls Snapshot - Take
            to create a copy of the source object and store it as a snapshot, then
            calls Snapshot - Apply to paste the snapshot to target subscription. The
            snapshots are stored in a centralized location (per Azure instance), so
            that they can be applied cross accounts and regions.&lt;br /&gt;
            Applying snapshot is an asynchronous operation. An operation id can be
            obtained from the "Operation-Location" field in response header, to be used
            in OperationStatus - Get for tracking the progress of applying the
            snapshot. The target object id will be included in the "resourceLocation"
            field in OperationStatus - Get response when the operation status is
            "succeeded".&lt;br /&gt;
            Snapshot applying time depends on the number of person and face entries in
            the snapshot object. It could be in seconds, or up to 1 hour for 1,000,000
            persons with multiple faces.&lt;br /&gt;
            Snapshots will be automatically expired and cleaned in 48 hours after it is
            created by Snapshot - Take. So the target subscription is required to apply
            the snapshot in 48 hours since its creation.&lt;br /&gt;
            Applying a snapshot will not block any other operations against the target
            object, however it is not recommended because the correctness cannot be
            guaranteed during snapshot applying. After snapshot applying is completed,
            all operations towards the target object can work as normal. Snapshot also
            includes the training results of the source object, which means target
            subscription the snapshot applied to does not need re-train the target
            object before calling Identify/FindSimilar.&lt;br /&gt;
            One snapshot can be applied multiple times in parallel, while currently
            only CreateNew apply mode is supported, which means the apply operation
            will fail if target subscription already contains an object of same type
            and using the same objectId. Users can specify the "objectId" in request
            body to avoid such conflicts.&lt;br /&gt;
            * Free-tier subscription quota: 100 apply operations per month.
            * S0-tier subscription quota: 100 apply operations per day.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task DeleteAsync (this Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations operations, Guid snapshotId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task DeleteAsync(class Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations operations, valuetype System.Guid snapshotId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.SnapshotOperationsExtensions.DeleteAsync(Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations,System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DeleteAsync (operations As ISnapshotOperations, snapshotId As Guid, Optional cancellationToken As CancellationToken = null) As Task" />
      <MemberSignature Language="F#" Value="static member DeleteAsync : Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations * Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.CognitiveServices.Vision.Face.SnapshotOperationsExtensions.DeleteAsync (operations, snapshotId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations" RefType="this" />
        <Parameter Name="snapshotId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="snapshotId">
            Id referencing a particular snapshot.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Delete an existing snapshot according to the snapshotId. All object data
            and information in the snapshot will also be deleted. Only the source
            subscription who took the snapshot can delete the snapshot. If the user
            does not delete a snapshot with this API, the snapshot will still be
            automatically deleted in 48 hours after creation.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.Snapshot&gt; GetAsync (this Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations operations, Guid snapshotId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.Snapshot&gt; GetAsync(class Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations operations, valuetype System.Guid snapshotId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.SnapshotOperationsExtensions.GetAsync(Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations,System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAsync (operations As ISnapshotOperations, snapshotId As Guid, Optional cancellationToken As CancellationToken = null) As Task(Of Snapshot)" />
      <MemberSignature Language="F#" Value="static member GetAsync : Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations * Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.Snapshot&gt;" Usage="Microsoft.Azure.CognitiveServices.Vision.Face.SnapshotOperationsExtensions.GetAsync (operations, snapshotId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.Snapshot&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations" RefType="this" />
        <Parameter Name="snapshotId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="snapshotId">
            Id referencing a particular snapshot.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Retrieve information about a snapshot. Snapshot is only accessible to the
            source subscription who took it, and target subscriptions included in the
            applyScope in Snapshot - Take.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOperationStatusAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.OperationStatus&gt; GetOperationStatusAsync (this Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations operations, Guid operationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.OperationStatus&gt; GetOperationStatusAsync(class Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations operations, valuetype System.Guid operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.SnapshotOperationsExtensions.GetOperationStatusAsync(Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations,System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOperationStatusAsync (operations As ISnapshotOperations, operationId As Guid, Optional cancellationToken As CancellationToken = null) As Task(Of OperationStatus)" />
      <MemberSignature Language="F#" Value="static member GetOperationStatusAsync : Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations * Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.OperationStatus&gt;" Usage="Microsoft.Azure.CognitiveServices.Vision.Face.SnapshotOperationsExtensions.GetOperationStatusAsync (operations, operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.OperationStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations" RefType="this" />
        <Parameter Name="operationId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="operationId">
            Id referencing a particular take/apply snapshot operation.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Retrieve the status of a take/apply snapshot operation.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.Snapshot&gt;&gt; ListAsync (this Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations operations, Microsoft.Azure.CognitiveServices.Vision.Face.Models.SnapshotObjectType? type = default, System.Collections.Generic.IList&lt;Guid&gt; applyScope = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.Snapshot&gt;&gt; ListAsync(class Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations operations, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.CognitiveServices.Vision.Face.Models.SnapshotObjectType&gt; type, class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; applyScope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.SnapshotOperationsExtensions.ListAsync(Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations,System.Nullable{Microsoft.Azure.CognitiveServices.Vision.Face.Models.SnapshotObjectType},System.Collections.Generic.IList{System.Guid},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ListAsync (operations As ISnapshotOperations, Optional type As Nullable(Of SnapshotObjectType) = null, Optional applyScope As IList(Of Guid) = null, Optional cancellationToken As CancellationToken = null) As Task(Of IList(Of Snapshot))" />
      <MemberSignature Language="F#" Value="static member ListAsync : Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations * Nullable&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.SnapshotObjectType&gt; * System.Collections.Generic.IList&lt;Guid&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.Snapshot&gt;&gt;" Usage="Microsoft.Azure.CognitiveServices.Vision.Face.SnapshotOperationsExtensions.ListAsync (operations, type, applyScope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.Snapshot&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations" RefType="this" />
        <Parameter Name="type" Type="System.Nullable&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.SnapshotObjectType&gt;" />
        <Parameter Name="applyScope" Type="System.Collections.Generic.IList&lt;System.Guid&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="type">
            User specified object type as a search filter. Possible values include:
            'FaceList', 'LargeFaceList', 'LargePersonGroup', 'PersonGroup'
            </param>
        <param name="applyScope">
            User specified snapshot apply scopes as a search filter. ApplyScope is an
            array of the target Azure subscription ids for the snapshot, specified by
            the user who created the snapshot by Snapshot - Take.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            List all accessible snapshots with related information, including snapshots
            that were taken by the user, or snapshots to be applied to the user
            (subscription id was included in the applyScope in Snapshot - Take).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TakeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.SnapshotTakeHeaders&gt; TakeAsync (this Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations operations, Microsoft.Azure.CognitiveServices.Vision.Face.Models.SnapshotObjectType type, string objectId, System.Collections.Generic.IList&lt;Guid&gt; applyScope, string userData = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.CognitiveServices.Vision.Face.Models.SnapshotTakeHeaders&gt; TakeAsync(class Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations operations, valuetype Microsoft.Azure.CognitiveServices.Vision.Face.Models.SnapshotObjectType type, string objectId, class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; applyScope, string userData, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.SnapshotOperationsExtensions.TakeAsync(Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations,Microsoft.Azure.CognitiveServices.Vision.Face.Models.SnapshotObjectType,System.String,System.Collections.Generic.IList{System.Guid},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TakeAsync (operations As ISnapshotOperations, type As SnapshotObjectType, objectId As String, applyScope As IList(Of Guid), Optional userData As String = null, Optional cancellationToken As CancellationToken = null) As Task(Of SnapshotTakeHeaders)" />
      <MemberSignature Language="F#" Value="static member TakeAsync : Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations * Microsoft.Azure.CognitiveServices.Vision.Face.Models.SnapshotObjectType * string * System.Collections.Generic.IList&lt;Guid&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.SnapshotTakeHeaders&gt;" Usage="Microsoft.Azure.CognitiveServices.Vision.Face.SnapshotOperationsExtensions.TakeAsync (operations, type, objectId, applyScope, userData, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Vision.Face.Models.SnapshotTakeHeaders&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations" RefType="this" />
        <Parameter Name="type" Type="Microsoft.Azure.CognitiveServices.Vision.Face.Models.SnapshotObjectType" />
        <Parameter Name="objectId" Type="System.String" />
        <Parameter Name="applyScope" Type="System.Collections.Generic.IList&lt;System.Guid&gt;" />
        <Parameter Name="userData" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="type">
            User specified type for the source object to take snapshot from. Currently
            FaceList, PersonGroup, LargeFaceList and LargePersonGroup are supported.
            Possible values include: 'FaceList', 'LargeFaceList', 'LargePersonGroup',
            'PersonGroup'
            </param>
        <param name="objectId">
            User specified source object id to take snapshot from.
            </param>
        <param name="applyScope">
            User specified array of target Face subscription ids for the snapshot. For
            each snapshot, only subscriptions included in the applyScope of Snapshot -
            Take can apply it.
            </param>
        <param name="userData">
            User specified data about the snapshot for any purpose. Length should not
            exceed 16KB.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Submit an operation to take a snapshot of face list, large face list,
            person group or large person group, with user-specified snapshot type,
            source object id, apply scope and an optional user data.&lt;br /&gt;
            The snapshot interfaces are for users to backup and restore their face data
            from one face subscription to another, inside same region or across
            regions. The workflow contains two phases, user first calls Snapshot - Take
            to create a copy of the source object and store it as a snapshot, then
            calls Snapshot - Apply to paste the snapshot to target subscription. The
            snapshots are stored in a centralized location (per Azure instance), so
            that they can be applied cross accounts and regions.&lt;br /&gt;
            Taking snapshot is an asynchronous operation. An operation id can be
            obtained from the "Operation-Location" field in response header, to be used
            in OperationStatus - Get for tracking the progress of creating the
            snapshot. The snapshot id will be included in the "resourceLocation" field
            in OperationStatus - Get response when the operation status is
            "succeeded".&lt;br /&gt;
            Snapshot taking time depends on the number of person and face entries in
            the source object. It could be in seconds, or up to several hours for
            1,000,000 persons with multiple faces.&lt;br /&gt;
            Snapshots will be automatically expired and cleaned in 48 hours after it is
            created by Snapshot - Take. User can delete the snapshot using Snapshot -
            Delete by themselves any time before expiration.&lt;br /&gt;
            Taking snapshot for a certain object will not block any other operations
            against the object. All read-only operations (Get/List and
            Identify/FindSimilar/Verify) can be conducted as usual. For all writable
            operations, including Add/Update/Delete the source object or its
            persons/faces and Train, they are not blocked but not recommended because
            writable updates may not be reflected on the snapshot during its taking.
            After snapshot taking is completed, all readable and writable operations
            can work as normal. Snapshot will also include the training results of the
            source object, which means target subscription the snapshot applied to does
            not need re-train the target object before calling
            Identify/FindSimilar.&lt;br /&gt;
            * Free-tier subscription quota: 100 take operations per month.
            * S0-tier subscription quota: 100 take operations per day.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task UpdateAsync (this Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations operations, Guid snapshotId, System.Collections.Generic.IList&lt;Guid&gt; applyScope = default, string userData = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task UpdateAsync(class Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations operations, valuetype System.Guid snapshotId, class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; applyScope, string userData, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Vision.Face.SnapshotOperationsExtensions.UpdateAsync(Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations,System.Guid,System.Collections.Generic.IList{System.Guid},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UpdateAsync (operations As ISnapshotOperations, snapshotId As Guid, Optional applyScope As IList(Of Guid) = null, Optional userData As String = null, Optional cancellationToken As CancellationToken = null) As Task" />
      <MemberSignature Language="F#" Value="static member UpdateAsync : Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations * Guid * System.Collections.Generic.IList&lt;Guid&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.CognitiveServices.Vision.Face.SnapshotOperationsExtensions.UpdateAsync (operations, snapshotId, applyScope, userData, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Vision.Face</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Vision.Face.ISnapshotOperations" RefType="this" />
        <Parameter Name="snapshotId" Type="System.Guid" />
        <Parameter Name="applyScope" Type="System.Collections.Generic.IList&lt;System.Guid&gt;" />
        <Parameter Name="userData" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="snapshotId">
            Id referencing a particular snapshot.
            </param>
        <param name="applyScope">
            Array of the target Face subscription ids for the snapshot, specified by
            the user who created the snapshot when calling Snapshot - Take. For each
            snapshot, only subscriptions included in the applyScope of Snapshot - Take
            can apply it.
            </param>
        <param name="userData">
            User specified data about the snapshot for any purpose. Length should not
            exceed 16KB.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Update the information of a snapshot. Only the source subscription who took
            the snapshot can update the snapshot.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
